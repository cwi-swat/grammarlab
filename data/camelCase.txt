--------------------ada::kellogg.bgf--------------------
SELECT ::= "select" ;
REM ::= "rem" ;
LIMITED ::= "limited" ;
LE ::= "<=" ;
DIV ::= "/" ;
ASSIGN ::= ":=" ;
TIC ::= "'" ;
SEMI ::= ";" ;
GT ::= ">" ;
TAGGED ::= "tagged" ;
USE ::= "use" ;
DIGITS ::= "digits" ;
ACCESS ::= "access" ;
PRIVATE ::= "private" ;
OTHERS ::= "others" ;
OR ::= "or" ;
GOTO ::= "goto" ;
DELAY ::= "delay" ;
MOD ::= "mod" ;
GE ::= ">=" ;
SUBTYPE ::= "subtype" ;
RPAREN ::= ")" ;
FUNCTION ::= "function" ;
OF ::= "of" ;
RENAMES ::= "renames" ;
STAR ::= "*" ;
ENTRY ::= "entry" ;
ABS ::= "abs" ;
RECORD ::= "record" ;
MINUS ::= "-" ;
ALIASED ::= "aliased" ;
RAISE ::= "raise" ;
DECLARE ::= "declare" ;
WITH ::= "with" ;
REVERSE ::= "reverse" ;
TERMINATE ::= "terminate" ;
COMMENT ::= COMMENT_INTRO α* "\n" | ("\r" "\n"?) ;
COLON ::= ":" ;
UNTIL ::= "until" ;
PRAGMA ::= "pragma" ;
XOR ::= "xor" ;
END ::= "end" ;
WHEN ::= "when" ;
TYPE ::= "type" ;
ELSE ::= "else" ;
ARRAY ::= "array" ;
NE ::= "/=" ;
GENERIC ::= "generic" ;
AND ::= "and" ;
COMMA ::= "," ;
PROCEDURE ::= "procedure" ;
NOT ::= "not" ;
AT ::= "at" ;
RETURN ::= "return" ;
CASE ::= "case" ;
EXPONENT ::= "e" ("+" | "-")? DIGIT+ ;
EXCEPTION ::= "exception" ;
PIPE ::= "|" ;
OUT ::= "out" ;
EQ ::= "=" ;
BOX ::= "<>" ;
IS ::= "is" ;
IDENTIFIER ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" ("_"? "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* ;
DOT ::= "." ;
ELSIF ::= "elsif" ;
FOR ::= "for" ;
NuLL ::= "null" ;
PACKAGE ::= "package" ;
IN ::= "in" ;
CONSTANT ::= "constant" ;
LOOP ::= "loop" ;
SEPARATE ::= "separate" ;
ABSTRACT ::= "abstract" ;
BODY ::= "body" ;
LPAREN ::= "(" ;
REQUEUE ::= "requeue" ;
EXIT ::= "exit" ;
THEN ::= "then" ;
RANGE ::= "range" ;
IF ::= "if" ;
EXPON ::= "**" ;
PLUS ::= "+" ;
DELTA ::= "delta" ;
CONCAT ::= "&" ;
WHILE ::= "while" ;
ABORT ::= "abort" ;
PROTECTED ::= "protected" ;
DIGIT ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;
DO ::= "do" ;
BEGIN ::= "begin" ;
ACCEPT ::= "accept" ;
TASK ::= "task" ;
ALL ::= "all" ;
NEW ::= "new" ;
--------------------c::bruneliere.bgf--------------------
Derived ::= ε ;
CFunction ::= isVarArg::Boolean ;
CLongLong ::= ε ;
CChar ::= CSignedChar ;
 CChar ::= CUnsignedChar ;
 CChar ::= CWChar ;
 CChar ::= CSignedChar | CUnsignedChar | CWChar ;
CShort ::= ε ;
CStruct ::= (contains::CStructureContents)+ ;
CField ::= ε ;
CVoid ::= ε ;
CUnsignedInt ::= UnsignedLong ;
 CUnsignedInt ::= UnsignedLongLong ;
 CUnsignedInt ::= UnsignedShort ;
 CUnsignedInt ::= UnsignedLong | UnsignedLongLong | UnsignedShort ;
CSignedChar ::= ε ;
CStructured ::= CStruct ;
 CStructured ::= CUnion ;
 CStructured ::= (contains::CStructureContents)+ ;
CDouble ::= ε ;
UnsignedLong ::= ε ;
String ::= string() ;
CInt ::= CUnsignedInt ;
 CInt ::= CLong ;
 CInt ::= CLongLong ;
 CInt ::= CShort ;
 CInt ::= CUnsignedInt | CLong | CLongLong | CShort ;
CStructureContents ::= CStructuralFeature ;
 CStructureContents ::= CStructured ;
 CStructureContents ::= sc_container::CStructured ;
CWChar ::= ε ;
CFloating ::= CDouble ;
 CFloating ::= CFloat ;
 CFloating ::= CLongDouble ;
 CFloating ::= CDouble | CFloat | CLongDouble ;
UnsignedShort ::= ε ;
CDataType ::= CIntegral ;
 CDataType ::= CFloating ;
 CDataType ::= CBitField ;
 CDataType ::= CVoid ;
 CDataType ::= CIntegral | CFloating | CBitField | CVoid ;
CParameter ::= behavioralFeature::BehavioralFeature ;
CLong ::= ε ;
Integer ::= integer() ;
BehavioralFeature ::= CFunction ;
 BehavioralFeature ::= (parameters::CParameter)+ ;
CFloat ::= ε ;
CStructuralFeature ::= CField ;
CTypedElement ::= CParameter ;
 CTypedElement ::= CStructuralFeature ;
 CTypedElement ::= type::CClassifier source::CSourceText ;
CLongDouble ::= ε ;
CBitField ::= ε ;
CIntegral ::= CEnumeration ;
 CIntegral ::= CInt ;
 CIntegral ::= CChar ;
 CIntegral ::= CEnumeration | CInt | CChar ;
CUnsignedChar ::= ε ;
UnsignedLongLong ::= ε ;
CUnion ::= (contains::CStructureContents)+ ;
CSourceText ::= source::String fileName::String ;
Boolean ::= "true" | "false" ;
CClassifier ::= CDataType ;
 CClassifier ::= Derived ;
 CClassifier ::= CStructured ;
 CClassifier ::= CDataType | Derived ;
CEnumeration ::= ε ;
--------------------c::lankamp.bgf--------------------
MoreParameters ::= "," "..." ;
Specifier ::= [StorageClass] StorageClass ;
 Specifier ::= [TypeQualifier] TypeQualifier ;
 Specifier ::= [TypeSpecifier] TypeSpecifier ;
StorageClass ::= "register" ;
 StorageClass ::= "static" ;
 StorageClass ::= "extern" ;
 StorageClass ::= "auto" ;
 StorageClass ::= [TypeDef] "typedef" ;
Declaration ::= [DeclarationWithoutInitDecls] specs::(Specifier+) ";" ;
 Declaration ::= [DeclarationWithInitDecls] specs::(Specifier+) initDeclarators::({InitDeclarator ","}+) ";" ;
Expression ::= CharacterConstant ;
 Expression ::= Expression "--" ;
 Expression ::= [Variable] Identifier ;
 Expression ::= Expression "[" Expression "]" ;
 Expression ::= [Bracket] "(" Expression ")" ;
 Expression ::= "sizeof" "(" TypeName ")" ;
 Expression ::= Expression "++" ;
 Expression ::= FloatingPointConstant ;
 Expression ::= Expression "." Identifier ;
 Expression ::= StringConstant ;
 Expression ::= IntegerConstant ;
 Expression ::= HexadecimalConstant ;
 Expression ::= Expression "->" Identifier ;
 Expression ::= Expression "(" {NonCommaExpression ","}* ")" ;
 Expression ::= Expression ;
 Expression ::= [SizeOfExpression] "sizeof" exp::Expression ;
 Expression ::= "&" Expression ;
 Expression ::= "!" Expression ;
 Expression ::= "(" TypeName ")" Expression ;
 Expression ::= "*" Expression ;
 Expression ::= "+" Expression ;
 Expression ::= "-" Expression ;
 Expression ::= "~" Expression ;
 Expression ::= [MultiplicationExpression] lexp::Expression "*" rexp::Expression ;
 Expression ::= Expression "/" Expression ;
 Expression ::= Expression "%" Expression ;
 Expression ::= Expression "+" Expression ;
 Expression ::= Expression "-" Expression ;
 Expression ::= Expression ">>" Expression ;
 Expression ::= Expression "<<" Expression ;
 Expression ::= Expression "<=" Expression ;
 Expression ::= Expression ">=" Expression ;
 Expression ::= Expression ">" Expression ;
 Expression ::= Expression "<" Expression ;
 Expression ::= Expression "==" Expression ;
 Expression ::= Expression "!=" Expression ;
 Expression ::= Expression "&" Expression ;
 Expression ::= Expression "^" Expression ;
 Expression ::= Expression "|" Expression ;
 Expression ::= Expression "&&" Expression ;
 Expression ::= Expression "||" Expression ;
 Expression ::= Expression "?" Expression ":" Expression ;
 Expression ::= Expression "|=" Expression ;
 Expression ::= Expression "&=" Expression ;
 Expression ::= Expression "*=" Expression ;
 Expression ::= Expression "/=" Expression ;
 Expression ::= Expression "+=" Expression ;
 Expression ::= Expression ">>=" Expression ;
 Expression ::= Expression "^=" Expression ;
 Expression ::= Expression "-=" Expression ;
 Expression ::= Expression "<<=" Expression ;
 Expression ::= Expression "%=" Expression ;
 Expression ::= Expression "=" Expression ;
 Expression ::= [CommaExpression] Expression "," Expression ;
GlobalDeclaration ::= [GlobalDeclarationWithoutInitDecls] specs::(Specifier+) ";" ;
 GlobalDeclaration ::= [GlobalDeclarationWithInitDecls] specs::(Specifier*) initDeclarators::({InitDeclarator ","}+) ";" ;
AnonymousIdentifier ::= ε ;
TranslationUnit ::= ExternalDeclaration+ ;
AbstractDeclarator ::= [Identifier] AnonymousIdentifier ;
 AbstractDeclarator ::= [ArrayDeclarator] decl::AbstractDeclarator "[" exp::(Expression?) "]" ;
 AbstractDeclarator ::= [Bracket] "(" decl::AbstractDeclarator ")" ;
 AbstractDeclarator ::= [FunctionDeclarator] decl::AbstractDeclarator "(" params::(Parameters?) ")" ;
 AbstractDeclarator ::= [PointerDeclarator] "*" qualifiers::(TypeQualifier*) decl::AbstractDeclarator ;
PrototypeDeclarator ::= [FunctionDeclarator] decl::PrototypeDeclarator "(" params::(PrototypeParameters?) ")" ;
 PrototypeDeclarator ::= [Identifier] Identifier ;
 PrototypeDeclarator ::= [Bracket] "(" decl::AbstractDeclarator ")" ;
 PrototypeDeclarator ::= [ArrayDeclarator] decl::PrototypeDeclarator "[" exp::(Expression?) "]" ;
 PrototypeDeclarator ::= [PointerDeclarator] "*" qualifiers::(TypeQualifier*) decl::PrototypeDeclarator ;
Declarator ::= [ArrayDeclarator] decl::Declarator "[" exp::(Expression?) "]" ;
 Declarator ::= [Identifier] Identifier ;
 Declarator ::= [FunctionDeclarator] decl::Declarator "(" params::(Parameters?) ")" ;
 Declarator ::= [Bracket] "(" decl::Declarator ")" ;
 Declarator ::= [PointerDeclarator] "*" qualifiers::(TypeQualifier*) decl::Declarator ;
TypeQualifier ::= "const" ;
 TypeQualifier ::= "volatile" ;
ExternalDeclaration ::= FunctionPrototype ;
 ExternalDeclaration ::= FunctionDefinition ;
 ExternalDeclaration ::= GlobalDeclaration ;
Statement ::= "default" ":" Statement ;
 Statement ::= "switch" "(" Expression ")" Statement ;
 Statement ::= "return" ";" ;
 Statement ::= "for" "(" Expression? ";" Expression? ";" Expression? ")" Statement ;
 Statement ::= "case" Expression ":" Statement ;
 Statement ::= "continue" ";" ;
 Statement ::= ";" ;
 Statement ::= "goto" Identifier ";" ;
 Statement ::= "do" Statement "while" "(" Expression ")" ";" ;
 Statement ::= "{" Declaration* Statement* "}" ;
 Statement ::= "while" "(" Expression ")" Statement ;
 Statement ::= "break" ";" ;
 Statement ::= "if" "(" Expression ")" Statement ;
 Statement ::= Identifier ":" Statement ;
 Statement ::= Expression ";" ;
 Statement ::= "if" "(" Expression ")" Statement "else" Statement ;
 Statement ::= "return" Expression ";" ;
PrototypeParameters ::= "void" ;
 PrototypeParameters ::= {PrototypeParameter ","}+ MoreParameters? ;
FunctionDefinition ::= [DefaultFunctionDefinition] specs::(Specifier*) Declarator Declaration* "{" Declaration* Statement* "}" ;
FunctionPrototype ::= [DefaultFunctionPrototype] specs::(Specifier*) decl::PrototypeDeclarator ";" ;
Parameters ::= {Parameter ","}+ MoreParameters? ;
 Parameters ::= "void" ;
Parameter ::= Specifier* Declarator ;
PrototypeParameter ::= Specifier* AbstractDeclarator ;
StructDeclarator ::= Declarator ;
 StructDeclarator ::= Declarator? ":" Expression ;
TypeName ::= Specifier+ AbstractDeclarator ;
StructDeclaration ::= [StructDeclWithoutDecl] specs::(Specifier+) ";" ;
 StructDeclaration ::= [StructDeclWithDecl] specs::(Specifier+) {StructDeclarator ","}+ ";" ;
Enumerator ::= Identifier ;
 Enumerator ::= Identifier "=" NonCommaExpression ;
TypeSpecifier ::= [StructDecl] "struct" Identifier "{" StructDeclaration* "}" ;
 TypeSpecifier ::= [Union] "union" Identifier ;
 TypeSpecifier ::= [Int] "int" ;
 TypeSpecifier ::= [Void] "void" ;
 TypeSpecifier ::= [StructAnonDecl] "struct" "{" StructDeclaration* "}" ;
 TypeSpecifier ::= [Short] "short" ;
 TypeSpecifier ::= [Identifier] Identifier ;
 TypeSpecifier ::= [EnumDecl] "enum" Identifier "{" {Enumerator ","}+ "}" ;
 TypeSpecifier ::= "signed" ;
 TypeSpecifier ::= [UnionDecl] "union" Identifier "{" StructDeclaration* "}" ;
 TypeSpecifier ::= [UnionAnonDecl] "union" "{" StructDeclaration* "}" ;
 TypeSpecifier ::= [Enum] "enum" Identifier ;
 TypeSpecifier ::= [Struct] "struct" Identifier ;
 TypeSpecifier ::= "unsigned" ;
 TypeSpecifier ::= [Long] "long" ;
 TypeSpecifier ::= [Double] "double" ;
 TypeSpecifier ::= [Float] "float" ;
 TypeSpecifier ::= [EnumAnonDecl] "enum" "{" {Enumerator ","}+ "}" ;
 TypeSpecifier ::= [Char] "char" ;
Initializer ::= "{" {Initializer ","}+ ","? "}" ;
 Initializer ::= NonCommaExpression ;
InitDeclarator ::= decl::Declarator "=" Initializer ;
 InitDeclarator ::= [decl] Declarator ;
NonCommaExpression ::= [NonCommaExpression] expr::Expression ;
--------------------cpp::bruneliere.bgf--------------------
CPPGeneralization ::= visibility::VisibilityKind isVirtual::Boolean supertype::CPPClass ;
Integer ::= integer() ;
CPPMember ::= isStatic::Boolean isVolatile::Boolean isRegister::Boolean visibility::VisibilityKind ;
CPPTemplate ::= (classes::CPPClass)+ ;
CBehavorialFeature ::= CFunction ;
CFunction ::= CPPOperation ;
 CFunction ::= isVsrArg::Boolean ;
CDerived ::= CPPReference ;
 CDerived ::= CPPExtern ;
 CDerived ::= CPPConst ;
 CDerived ::= CPPTemplate ;
 CDerived ::= CPPReference | CPPExtern | CPPConst | CPPTemplate ;
CField ::= ε ;
CPPClass ::= isAbstract::Boolean isVolatile::Boolean visibility::VisibilityKind (templates::CPPTemplate)+ (generalizations::CPPGeneralization)+ ;
CStructured ::= CPPClass ;
String ::= string() ;
CDerivableType ::= ε ;
CStructureContents ::= CPPOperator ;
 CStructureContents ::= CPPOperation ;
CPPReference ::= ε ;
Boolean ::= "true" | "false" ;
CPPOperator ::= isInline::Boolean visibility::VisibilityKind ;
VisibilityKind ::= (vk_public::ε) | (vk_private::ε) | (vk_protected::ε) ;
CPPOperation ::= isStatic::Boolean isExtern::Boolean isInline::Boolean isVirtual::Boolean isPure::Boolean visibility::VisibilityKind isCtor::Boolean isDtor::Boolean (throws::CPPClass)+ ;
CPPExtern ::= linkage::String ;
CPPConst ::= ε ;
--------------------cs::csharp-bruneliere.bgf--------------------
Integer ::= integer() ;
Type ::= qualifiedName::String isAbstract::Boolean visibility::String isSealed::Boolean nameSpace::String (members::Member)+ t_container::Assembly super::Type ;
Constructor ::= visibility::String isAbstract::Boolean isFinal::Boolean isStatic::Boolean (parameters::Parameter)+ ;
Field ::= type::Type ;
Member ::= TypedAttribute ;
 Member ::= MethodBase ;
 Member ::= Type ;
 Member ::= name::String owner::Type ;
Parameter ::= isIn::Boolean isOut::Boolean name::Boolean position::Integer method::MethodBase type::Type ;
Boolean ::= "true" | "false" ;
Assembly ::= name::String (content::Type)+ ;
Property ::= isReadable::Boolean isWritable::Boolean ;
MethodBase ::= Constructor ;
 MethodBase ::= Method ;
 MethodBase ::= visibility::String isAbstract::Boolean isFinal::Boolean isStatic::Boolean (parameters::Parameter)+ ;
TypedAttribute ::= Field ;
 TypedAttribute ::= Property ;
 TypedAttribute ::= type::Type ;
String ::= string() ;
Method ::= returnType::Type ;
--------------------dart::spec-0.01.bgf--------------------
EXPONENT ::= "e" | "E" ("+" | "-")? DIGIT+ ;
WHITESPACE ::= ("\t" | " " | NEWLINE)+ ;
DIGIT ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;
IDENTIFIER ::= IDENTIFIER_START IDENTIFIER_PART* ;
NUMBER ::= (DIGIT+ ("." DIGIT*)? EXPONENT?) | ("." DIGIT+ EXPONENT?) ;
LETTER ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ;
NEWLINE ::= "\n" | "\r" ;
--------------------dart::google.bgf--------------------
ELSE ::= "else" ;
EXTENDS ::= "extends" ;
GET ::= "get" ;
SWITCH ::= "switch" ;
NEWLINE ::= "\n" | "\r" ;
RETURN ::= "return" ;
CASE ::= "case" ;
IMPLEMENTS ::= "implements" ;
EXPONENT ::= "e" | "E" ("+" | "-")? DIGIT+ ;
STATIC ::= "static" ;
TYPEDEF ::= "typedef" ;
IS ::= "is" ;
FACTORY ::= "factory" ;
FOR ::= "for" ;
IDENTIFIER ::= IDENTIFIER_START IDENTIFIER_PART* ;
CONTINUE ::= "continue" ;
LETTER ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ;
IN ::= "in" ;
IMPORT ::= "import" ;
OPERATOR ::= "operator" ;
FINALLY ::= "finally" ;
ABSTRACT ::= "abstract" ;
DEFAULT ::= "default" ;
BREAK ::= "break" ;
THIS ::= "this" ;
IF ::= "if" ;
CATCH ::= "catch" ;
TRY ::= "try" ;
SUPER ::= "super" ;
SOURCE ::= "source" ;
LIBRARY ::= "library" ;
INTERFACE ::= "interface" ;
CLASS ::= "class" ;
NATIVE ::= "native" ;
FINAL ::= "final" ;
VOID ::= "void" ;
WHILE ::= "while" ;
STRING ::= ("@"? MULTI_LINE_STRING) | SINGLE_LINE_STRING ;
TRUE ::= "true" ;
DIGIT ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;
DO ::= "do" ;
NUMBER ::= (DIGIT+ NUMBER_OPT_FRACTIONAL_PART EXPONENT? NUMBER_OPT_ILLEGAL_END) | ("." DIGIT+ EXPONENT? NUMBER_OPT_ILLEGAL_END) ;
VAR ::= "var" ;
NULL ::= "null" ;
THROW ::= "throw" ;
ASSERT ::= "assert" ;
HASHBANG ::= "#!" α* NEWLINE? ;
CONST ::= "const" ;
FALSE ::= "false" ;
NEGATE ::= "negate" ;
SET ::= "set" ;
NEW ::= "new" ;
--------------------dart::spec-0.05.bgf--------------------
EXPONENT ::= "e" | "E" ("+" | "-")? DIGIT+ ;
WHITESPACE ::= ("\t" | " " | NEWLINE)+ ;
DIGIT ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;
IDENTIFIER ::= IDENTIFIER_START IDENTIFIER_PART* ;
NUMBER ::= ("+"? DIGIT+ ("." DIGIT+)? EXPONENT?) | ("+"? "." DIGIT+ EXPONENT?) ;
NEWLINE ::= "\n" | "\r" ;
--------------------eiffel::bezault.bgf--------------------
Creation ::= "!" Type? "!" Writable Creation_call? ;
Deferred ::= "deferred" ;
Call ::= Qualified_call | Precursor ;
Exit ::= "until" Boolean_expression ;
Constraint ::= "-" ">" Class_type ;
Attribute ::= Identifier ;
Tag ::= Identifier ;
Obsolete ::= "obsolete" Message ;
Strip ::= "Strip" "(" Attribute_list ")" ;
Expression ::= "Current" | "Result" | Call | Operator_expression | Equality | Manifest_array | Old | Strip | Boolean_constant | Bit_constant | Integer | Real | Manifest_string | Character_constant | Wide_character_constant | Wide_manifest_string | Hexadecimal_constant ;
Precondition ::= "require" "else"? Assertion ;
Anchored ::= "like" Anchor ;
Undefine ::= "undefine" Feature_list ;
Debug ::= "debug" Debug_keys? Compound "end" ;
Rescue ::= "rescue" Compound ;
Prefix ::= "prefix" """ Prefix_operator """ ;
Index ::= Identifier ":" ;
Unique ::= "Unique" ;
Infix ::= "infix" """ Infix_operator """ ;
Indexing ::= "indexing" Index_list ;
Actual ::= Expression | Address ;
Instruction ::= Creation | Call | Assignment | Assignment_attempt | Conditional | Multi_branch | Loop | Debug | Check | Retry | Null_instruction ;
Assignment ::= Writable ":=" Expression ;
External ::= "external" Language_name External_name? ;
Inheritance ::= "inherit" Parent_list ;
Comparison ::= "=" | "/=" ;
Check ::= "check" Assertion "end" ;
Clients ::= "{" Class_list "}" ;
Creators ::= "creation" (Creation_clause "creation")+ ;
Message ::= Manifest_string ;
Conditional ::= "if" Then_part_list Else_part? "end" ;
Variant ::= "variant" Tag_mark? Expression ;
Interval ::= Choice_constant ".." Choice_constant ;
Routine ::= Obsolete? Header_comment? Precondition? Local_declarations? Routine_body Postcondition? Rescue? "end" ("--" Feature_name)? ;
Assertion ::= (Assertion_clause ";")* ;
Binary ::= "+" | "-" | "*" | "/" | "<" | ">" | "<=" | ">=" | "//" | "\\" | "^" | "and" | "or" | "xor" | ("and" "then") | ("or" "else") | "implies" ;
Invariant ::= "invariant" Assertion ;
Integer ::= (Decimal_digit+) | (Decimal_digit (Decimal_digit Decimal_digit?)? ("_" Decimal_digit Decimal_digit Decimal_digit)+) ;
Rename ::= "rename" Rename_list ;
Sign ::= "+" | "-" ;
Features ::= "feature" (Feature_clause "feature")+ ;
Internal ::= Routine_mark Compound ;
Parenthesized ::= "(" Expression ")" ;
Select ::= "select" Feature_list ;
Postcondition ::= "ensure" "then"? Assertion ;
Equality ::= Expression Comparison Expression ;
Type ::= Class_type | Class_type_expanded | Class_type_separate | Anchored | Bit_type ;
Precursor ::= Parent_qualification? "Precursor" Actuals? ;
Anchor ::= Identifier | "Current" ;
Address ::= "$" Address_mark ;
Choices ::= (Choice ",")* ;
Unary ::= "not" | "+" | "-" ;
Redefine ::= "redefine" Feature_list ;
Compound ::= (Instruction ";")* ;
Parent ::= Class_type Feature_adaptation? ;
Identifier ::= Letter (Letter | Decimal_digit | "_")* ;
Retry ::= "retry" ;
Old ::= "old" Expression ;
Effective ::= Internal | External ;
Actuals ::= "(" Actual_list ")" ;
Loop ::= Initialization Invariant? Variant? Loop_body "end" ;
Choice ::= Choice_constant | Interval ;
Writable ::= Identifier | "Result" ;
Initialization ::= "from" Compound ;
--------------------eiffel::cordy.bgf--------------------
Creation ::= ("!!" Writable Creation_call?) | ("!" Type? "!" Writable Creation_call?) ;
Deferred ::= IN "deferred" NL EX ;
Call ::= Parenthesized_qualifier? Call_chain ;
Constraint ::= "->" Restricted_type ;
Attribute ::= Identifier ;
Tag ::= Identifier ;
Strip ::= "strip" "(" Attribute_list ")" ;
Precondition ::= "require" "else"? Assertion ;
Unique ::= "unique" ;
Indexing ::= NL "indexing" Index_list ;
Instruction ::= Creation | Call | Assignment | Assignment_attempt | Conditional | Multi_branch | Loop | Debug | Check | Retry | Null ;
Assignment ::= Writable ":=" Expression ;
External ::= "external" Language_name External_name? NL ;
Check ::= "check" Assertion "end" ;
Clients ::= "{" Class_list "}" ;
Creators ::= creation_Creation_clause+ ;
Message ::= Manifest_string ;
Conditional ::= "if" Then_part_list Else_part? "end" ;
Interval ::= Constant ".." Constant ;
Variant ::= "variant" Tag_mark? Expression ;
Assertion ::= NL IN Assertion_clause_Separator* EX ;
Rename ::= "rename" Rename_list NL ;
Sign ::= "+" | "-" ;
Features ::= feature_Feature_clause+ ;
Internal ::= Routine_mark Compound ;
Postcondition ::= "ensure" "then"? Assertion ;
Type ::= Class_type | Class_type_expanded | Formal_generic_name | Anchored | Bit_type ;
Anchor ::= Identifier | "Current" ;
Address ::= "$" Address_mark ;
Choices ::= {Choice ","}* ;
Redefine ::= "redefine" Feature_list NL ;
Local ::= Identifier | "Result" ;
Compound ::= IN NL Instruction_Separator* EX ;
Parent ::= Restricted_class_type Feature_adaptation? ;
Identifier ::= id ;
Separator ::= ";"? NL ;
Constant ::= Manifest_constant | Constant_attribute ;
Loop ::= Initialization Invariant? Variant? Loop_body "end" ;
Choice ::= Constant | Interval ;
Writable ::= Attribute | Local ;
Initialization ::= "from" Compound ;
Comment ::= comment ;
Real ::= real_number ;
Exit ::= "until" Boolean_expression ;
Obsolete ::= "obsolete" Message NL ;
Expression ::= Equality ;
Anchored ::= "like" Anchor ;
Undefine ::= "undefine" Feature_list NL ;
Rescue ::= "rescue" Compound ;
Debug ::= "debug" Debug_keys? Compound "end" ;
Prefix ::= "prefix" Prefix_name ;
Index ::= Identifier ":" ;
Infix ::= "infix" Infix_name ;
Actual ::= Expression | Address ;
Inheritance ::= "inherit" NL IN Parent_list EX ;
Comparison ::= "=" | "/=" ;
Null ::= ";" NL ;
Routine ::= Obsolete? Header_comment? Precondition? Local_declarations? Routine_body Postcondition? Rescue? "end" ;
Binary ::= "+" | "-" | "*" | "/" | "<" | ">" | "<=" | ">=" | "//" | "\\" | "^" | "and" | "or" | "xor" | ("and" "then") | ("or" "else") | "implies" ;
Invariant ::= "invariant" Assertion ;
Integer ::= integer ;
Parenthesized ::= "(" Expression ")" ;
Select ::= "select" Feature_list NL ;
Equality ::= Operator_expression Comparison_Operator_expression* ;
Formal ::= Identifier ;
Unary ::= "not" | "+" | "-" ;
Retry ::= "retry" ;
Effective ::= Internal | External ;
Old ::= "old" Expression ;
Actuals ::= "(" Actual_list ")" ;
Entity ::= Writable | Read_only ;
--------------------eiffel::iso-25436-2006.bgf--------------------
Deferred ::= "deferred" ;
Call ::= Object_call | Non_object_call ;
Constraint ::= "->" Constraining_types Constraint_creators? ;
Attribute ::= "attribute" Compound ;
Tag ::= Identifier ;
Precondition ::= "require" "else"? Assertion ;
Converters ::= "convert" Converter_list ;
Instruction ::= Creation_instruction | Call | Assignment | Assigner_call | Conditional | Multi_branch | Loop | Debug | Precursor | Check | Retry ;
Assignment ::= Variable ":=" Expression ;
External ::= "external" External_language External_name? ;
Clients ::= "{" Class_list "}" ;
Check ::= "check" Assertion Notes? "end" ;
Creators ::= Creation_clause+ ;
Message ::= Manifest_string ;
Conditional ::= "if" Then_part_list Else_part? "end" ;
Agent ::= Call_agent | Inline_agent ;
Variant ::= "variant" Tag_mark? Expression ;
Assertion ::= {Assertion_clause ";"}* ;
Rename ::= "rename" Rename_list ;
Sign ::= "+" | "-" ;
Internal ::= Routine_mark Compound ;
Features ::= Feature_clause+ ;
Postcondition ::= "ensure" "then"? Assertion Only? ;
Type ::= Class_or_tuple_type | Formal_generic_name | Anchored ;
Anchor ::= Feature_name | "Current" ;
Address ::= "$" Variable ;
Placeholder ::= Manifest_type? "?" ;
Choices ::= {Choice ","}+ ;
Redefine ::= "redefine" Feature_list ;
Only ::= "only" Feature_list? ;
Local ::= Identifier | "Result" ;
Compound ::= {Instruction ";"}* ;
Parent ::= Class_type Feature_adaptation? ;
Constant ::= Manifest_constant | Constant_attribute ;
Loop ::= Initialization Invariant? Exit_condition Loop_body Variant? "end" ;
Operator ::= Unary | Binary ;
Choice ::= Constant | Manifest_type | Constant_interval | Type_interval ;
Initialization ::= "from" Compound ;
Comment ::= "--" {Simple_string Comment_break}* ;
Obsolete ::= "obsolete" Message ;
Expression ::= Basic_expression | Special_expression ;
Anchored ::= Attachment_mark? "like" Anchor ;
Undefine ::= "undefine" Feature_list ;
Debug ::= "debug" ("(" Key_list ")")? Compound "end" ;
Rescue ::= "rescue" Compound ;
Target ::= Local | Read_only | Call | Parenthesized_target ;
Alias ::= "alias" """ Alias_name """ "convert"? ;
Inheritance ::= Inherit_clause+ ;
Comparison ::= "=" | "/=" | "~" | "/~" ;
Once ::= "once" ("(" Key_list ")")? ;
Binary ::= "+" | "-" | "*" | "/" | "//" | "\\" | "^" | ".." | "<" | ">" | "<=" | ">=" | "and" | "or" | "xor" | ("and" "then") | ("or" "else") | "implies" | Free_binary ;
Notes ::= "note" Note_list ;
Invariant ::= "invariant" Assertion ;
Integer ::= Integer_base? Digit_sequence ;
Parenthesized ::= "(" Expression ")" ;
Variable ::= Variable_attribute | Local ;
Select ::= "select" Feature_list ;
Renaming ::= Rename "end" ;
Equality ::= Expression Comparison Expression ;
Precursor ::= Precursor Parent_qualification? Actuals? ;
Formal ::= Identifier ;
Unary ::= "not" | "+" | "-" | Free_unary ;
Digit ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "a" | "b" | "c" | "d" | "e" | "f" | "A" | "B" | "C" | "D" | "E" | "F" | "_" ;
Retry ::= "retry" ;
Bracket ::= "[]" ;
Old ::= "old" Expression ;
Actuals ::= "(" Actual_list ")" ;
Entity ::= Variable | Read_only ;
Converter ::= Conversion_procedure | Conversion_query ;
--------------------fortran::derricks.bgf--------------------
EndSelectStmt ::= LblDef "end" "select" EndName? EOS ;
EndTypeStmt ::= LblDef "end" "type" TypeName? EOS ;
EntryName ::= Ident ;
RdIoCtlSpecList ::= (UnitIdentifier "," IoControlSpec) | (UnitIdentifier "," FormatIdentifier) | IoControlSpec | (RdIoCtlSpecList "," IoControlSpec) ;
CharLength ::= ("(" TypeParamValue ")") | ScalarIntLiteralConstant ;
InquireStmt ::= (LblDef "inquire" "(" InquireSpecList ")" EOS) | (LblDef "inquire" "(" "iolength" "=" ScalarVariable ")" OutputItemList EOS) ;
DeferredShapeSpecList ::= DeferredShapeSpec ("," DeferredShapeSpec)* ;
BlockDataBody ::= BlockDataBodyConstruct+ ;
LoopControl ::= ("while" "(" Expr ")") | (VariableName "=" Int-Real-Dp-Expression "," Int-Real-Dp-Expression ("," Int-Real-Dp-Expression)?) ;
ArrayAllocation ::= ArrayName ("(" DeferredShapeSpecList ")")? ;
AndOp ::= ".and." ;
PrintStmt ::= LblDef "print" FormatIdentifier ("," OutputItemList)? EOS ;
NotOp ::= ".not." ;
ScalarLogicalExpr ::= Expr ;
ModuleSubprogram ::= FunctionSubprogram | SubroutineSubprogram ;
ArithmeticIfStmt ::= LblDef "if" "(" ScalarNumericExpr ")" LblRef "," LblRef "," LblRef EOS ;
InquireSpec ::= ("unit" "=" UnitIdentifier) | ("file" "=" CExpr) | ("iostat" "=" ScalarVariable) | ("err" "=" LblRef) | ("exist" "=" ScalarVariable) | ("opened" "=" ScalarVariable) | ("number" "=" ScalarVariable) | ("named" "=" ScalarVariable) | ("name" "=" ScalarVariable) | ("access" "=" ScalarVariable) | ("sequential" "=" ScalarVariable) | ("direct" "=" ScalarVariable) | ("form" "=" ScalarVariable) | ("formatted" "=" ScalarVariable) | ("unformatted" "=" ScalarVariable) | ("recl" "=" Expr) | ("nextrec" "=" ScalarVariable) | ("blank" "=" ScalarVariable) | ("position" "=" ScalarVariable) | ("action" "=" ScalarVariable) | ("read" "=" ScalarVariable) | ("write" "=" ScalarVariable) | ("readwrite" "=" ScalarVariable) | ("delim" "=" ScalarVariable) | ("pad" "=" ScalarVariable) ;
GotoStmt ::= LblDef GoToKw LblRef EOS ;
EndName ::= Ident ;
ConnectSpecList ::= ConnectSpec ("," ConnectSpec)* ;
IfThenStmt ::= LblDef (IfConstructName ":")? "if" "(" ScalarLogicalExpr ")" "then" EOS ;
PointerStmtObjectList ::= PointerStmtObject ("," PointerStmtObject)* ;
Primary ::= ArrayConstructor | UnsignedArithmeticConstant | Name | DataRef | FunctionReference | ("(" Expr ")") | Scon | LogicalConstant ;
NamelistGroupName ::= Ident ;
DataStmtValue ::= Constant | (NamedConstantUse "*" Constant) ;
BlockDataBodyConstruct ::= SpecificationPartConstruct ;
ProcedureName ::= Ident ;
TypeParamValue ::= SpecificationExpr | "*" ;
InputItem ::= Name | DataRef | InputImpliedDo ;
NamedConstant ::= Ident ;
Sign ::= "+" | "-" ;
AssignedGotoStmt ::= (LblDef GoToKw VariableName EOS) | (LblDef GoToKw VariableName ","? "(" LblRef ("," LblRef)* ")" EOS) ;
OutputItem ::= Expr | OutputImpliedDo ;
EquivOperand ::= (EquivOperand OrOp)? OrOperand ;
ComponentDefStmt ::= (LblDef TypeSpec ("," ComponentAttrSpecList)? ":" ":" ComponentDeclList EOS) | (LblDef TypeSpec ComponentDeclList EOS) ;
UseStmt ::= (LblDef "use" Name ("," RenameList)? EOS) | (LblDef "use" Name "," "only" ":" OnlyList? EOS) ;
Only ::= GenericSpec | ((Ident "=>")? UseName) ;
Comblock ::= "/" CommonBlockName? "/" ;
FormatItem ::= (Icon? DataEditDescr) | ControlEditDescr | CharStringEditDescr | (Icon? "(" FormatItemList ")") | (FormatItem ":" FormatItem) ;
ActualArg ::= ((Name "=")? Expr) | ((Name "=")? "*" LblRef) ;
FunctionParList ::= "(" (FunctionPar ("," FunctionPar)*)? ")" ;
DeallocateStmt ::= (LblDef "deallocate" "(" AllocateObjectList "," "stat" "=" Variable ")" EOS) | (LblDef "deallocate" "(" AllocateObjectList ")" EOS) ;
SectionSubscript ::= Expr | SubscriptTriplet ;
ExplicitShapeSpecList ::= ExplicitShapeSpec ("," ExplicitShapeSpec)* ;
RdCtlSpec ::= RdUnitId | ("(" RdIoCtlSpecList ")") ;
Constant ::= NamedConstantUse | UnsignedArithmeticConstant | ("+" UnsignedArithmeticConstant) | ("-" UnsignedArithmeticConstant) | Scon | LogicalConstant | (Icon "_" Scon) | (NamedConstantUse "_" Scon) | StructureConstructor | BozLiteralConstant ;
Body ::= BodyConstruct+ ;
CloseStmt ::= LblDef "close" "(" CloseSpecList ")" EOS ;
AccessId ::= GenericName | GenericSpec ;
AllocationList ::= Allocation ("," Allocation)* ;
DeferredShapeSpec ::= ":" ;
CaseValueRange ::= Expr | (Expr ":") | (":" Expr) | (Expr ":" Expr) ;
PointerObject ::= Name | PointerField ;
AllocateObjectList ::= AllocateObject ("," AllocateObject)* ;
SubroutineNameUse ::= Ident ;
EquivalenceSet ::= "(" EquivalenceObject "," EquivalenceObject ("," EquivalenceObject)* ")" ;
CloseSpec ::= UnitIdentifier | ("unit" "=" UnitIdentifier) | ("iostat" "=" ScalarVariable) | ("err" "=" LblRef) | ("status" "=" CExpr) ;
KindSelector ::= ("(" ("kind" "=")? Expr ")") | ("*" Icon) ;
PointerAssignmentStmt ::= (LblDef Name "=>" Target EOS) | (LblDef Name "%" Name "=>" Target EOS) | (LblDef Name "%" DataRef "=>" Target EOS) | (LblDef Name "(" SFExprList ")" "%" Name "=>" Target EOS) | (LblDef Name "(" SFExprList ")" "%" DataRef "=>" Target EOS) | (LblDef Name "(" SFDummyArgNameList ")" "%" Name "=>" Target EOS) | (LblDef Name "(" SFDummyArgNameList ")" "%" DataRef "=>" Target EOS) ;
Target ::= Expr ;
InternalSubProgPart ::= (Body ContainsStmt InternalSubprogram) | (ContainsStmt InternalSubprogram) | (InternalSubProgPart InternalSubprogram) ;
CycleStmt ::= LblDef "cycle" EndName? EOS ;
DerivedTypeDef ::= DerivedTypeStmt DerivedTypeBody+ EndTypeStmt ;
DefinedOperator ::= Dop | PowerOp | MultOp | AddOp | ConcatOp | RelOp | NotOp | AndOp | OrOp | EquivOp ;
InquireSpecList ::= (UnitIdentifier "," InquireSpec ("," InquireSpec)*) | (InquireSpec ("," InquireSpec)*) ;
TypeDeclarationStmt ::= (LblDef TypeSpec ("," AttrSpec)* ":" ":" EntityDecl ("," EntityDecl)* EOS) | (LblDef TypeSpec EntityDecl ("," EntityDecl)* EOS) ;
SFExprList ::= (SFExpr ":" Expr ":" Expr) | (SFExpr ":" ":" Expr) | (":" Expr ":" Expr) | (":" ":" Expr) | ":" | (":" Expr) | SFExpr | (SFExpr ":") | (SFExpr ":" Expr) | (SFExprList "," SectionSubscript) | (SFDummyArgNameList "," ":") | (SFDummyArgNameList "," ":" Expr) | (SFDummyArgNameList "," SFExpr ":") | (SFDummyArgNameList "," SFExpr ":" Expr) ;
EndInterfaceStmt ::= LblDef "end" "interface" EOS ;
NamedConstantDefList ::= NamedConstantDef ("," NamedConstantDef)* ;
PowerOp ::= "**" ;
ConnectSpec ::= UnitIdentifier | ("unit" "=" UnitIdentifier) | ("iostat" "=" ScalarVariable) | ("err" "=" LblRef) | ("file" "=" CExpr) | ("status" "=" CExpr) | ("access" "=" CExpr) | ("form" "=" CExpr) | ("recl" "=" Expr) | ("blank" "=" CExpr) | ("position" "=" CExpr) | ("action" "=" CExpr) | ("delim" "=" CExpr) | ("pad" "=" CExpr) ;
DeclarationConstruct ::= TypeDeclarationStmt | SpecificationStmt | DerivedTypeDef | InterfaceBlock ;
FunctionInterfaceRange ::= (FunctionParList EOS SubprogramInterfaceBody EndFunctionStmt) | (FunctionParList EOS EndFunctionStmt) ;
ProcedureNameList ::= ProcedureName ("," ProcedureName)* ;
SubroutineParList ::= "(" (SubroutinePar ("," SubroutinePar)*)? ")" ;
ArraySpec ::= AssumedShapeSpecList | DeferredShapeSpecList | ExplicitShapeSpecList | AssumedSizeSpec ;
IoControlSpec ::= ("unit" "=" UnitIdentifier) | ("fmt" "=" FormatIdentifier) | ("nml" "=" NamelistGroupName) | ("rec" "=" Expr) | ("iostat" "=" ScalarVariable) | ("err" "=" LblRef) | ("end" "=" LblRef) | ("advance" "=" CExpr) | ("size" "=" Variable) | ("eor" "=" LblRef) ;
BlankInterpEditDescr ::= "BN" | "BZ" ;
EndDoStmt ::= LblDef "end" "do" Name? EOS ;
AcValueList ::= AcValue ("," AcValue)* ;
SubstringRange ::= "(" SubscriptTriplet ")" ;
FunctionPar ::= DummyArgName ;
FormatItemList ::= FormatItem ("," FormatItem)* ;
ComponentAttrSpecList ::= ComponentAttrSpec ("," ComponentAttrSpec)* ;
PointerStmt ::= (LblDef "pointer" ":" ":" PointerStmtObjectList EOS) | (LblDef "pointer" PointerStmtObjectList EOS) ;
SectionSubscriptList ::= SectionSubscript ("," SectionSubscript)* ;
SFFactor ::= SFPrimary | (SFPrimary PowerOp MultOperand) ;
AssumedShapeSpecList ::= (LowerBound ":") | (DeferredShapeSpecList "," LowerBound ":") | (AssumedShapeSpecList "," AssumedShapeSpec) ;
SpecificationExpr ::= Expr ;
AssignStmt ::= LblDef "assign" LblRef "to" VariableName EOS ;
CharSelector ::= ("(" "len" "=" TypeParamValue "," "kind" "=" Expr ")") | ("(" "len" "=" TypeParamValue "," Expr ")") | ("(" "len" "=" TypeParamValue ")") | ("(" ("kind" "=")? Expr ")") ;
EquivalenceSetList ::= EquivalenceSet ("," EquivalenceSet)* ;
EndModuleStmt ::= (LblDef "end" EOS) | (LblDef "end" "module" EndName? EOS) ;
UnitIdentifier ::= UFExpr | "*" ;
DataEditDescr ::= ("I" Icon ("." Icon)?) | ("O" Icon ("." Icon)?) | ("B" Icon ("." Icon)?) | ("Z" Icon ("." Icon)?) | ("F" Icon "." Icon) | ("E" Icon "." Icon ("E" Icon)?) | ("EN" Icon "." Icon ("E" Icon)?) | ("ES" Icon "." Icon ("E" Icon)?) | ("G" Icon "." Icon ("E" Icon)?) | ("L" Icon) | ("A" Icon?) | ("D" Icon "." Icon) ;
ImplicitStmt ::= (LblDef "implicit" "none" EOS) | (LblDef "implicit" ImplicitSpec ("," ImplicitSpec)* EOS) ;
DoConstruct ::= BlockDoConstruct | LabelDoStmt ;
AccessStmt ::= (LblDef AccessSpec ":" ":" AccessIdList EOS) | (LblDef AccessSpec AccessIdList? EOS) ;
AttrSpec ::= "parameter" | AccessSpec | "allocatable" | ("dimension" "(" ArraySpec ")") | "external" | ("intent" "(" IntentSpec ")") | "intrinsic" | "optional" | "pointer" | "save" | "target" ;
EquivalenceObject ::= ArrayName | Variable ;
OptionalStmt ::= (LblDef "optional" ":" ":" OptionalParList EOS) | (LblDef "optional" OptionalParList EOS) ;
Datalist ::= DataStmtSet ("," DataStmtSet)* ;
CallStmt ::= (LblDef "call" SubroutineNameUse EOS) | (LblDef "call" SubroutineNameUse "(" (ActualArg ("," ActualArg)*)? ")" EOS) ;
ImplicitSpec ::= TypeSpec "(" LetterSpec ("," LetterSpec)* ")" ;
SFTerm ::= SFFactor | (SFTerm MultOp MultOperand) ;
CommonBlockObjectList ::= CommonBlockObject ("," CommonBlockObject)* ;
AccessSpec ::= "public" | "private" ;
Rename ::= Ident "=>" UseName ;
NullifyStmt ::= LblDef "nullify" "(" PointerObjectList ")" EOS ;
SubroutinePar ::= DummyArgName | "*" ;
BlockDataSubprogram ::= (BlockDataStmt BlockDataBody EndBlockDataStmt) | (BlockDataStmt EndBlockDataStmt) ;
ControlEditDescr ::= PositionEditDescr | (Icon? "/") | ":" | SignEditDescr | (("-" | "+")? Icon "P" (Icon? DataEditDescr)?) | BlankInterpEditDescr ;
MultOperand ::= Level1Expr (PowerOp MultOperand)? ;
ComponentArraySpec ::= ExplicitShapeSpecList | DeferredShapeSpecList ;
RdFmtId ::= LblRef | "*" | COperand | (COperand ConcatOp CPrimary) | (RdFmtIdExpr ConcatOp CPrimary) ;
OpenStmt ::= LblDef "open" "(" ConnectSpecList ")" EOS ;
MultOp ::= "*" | "/" ;
IoControlSpecList ::= (UnitIdentifier "," FormatIdentifier?) | (UnitIdentifier "," IoControlSpec) | IoControlSpec | (IoControlSpecList "," IoControlSpec) ;
CaseSelector ::= ("(" CaseValueRange ("," CaseValueRange)* ")") | "default" ;
SubroutineName ::= Ident ;
EntityDecl ::= (ObjectName "=" Expr) | (ObjectName "(" ArraySpec ")" "=" Expr) | (ObjectName "*" CharLength "=" Expr) | (ObjectName "*" CharLength "(" ArraySpec ")" "=" Expr) | ObjectName | (ObjectName "*" CharLength) | (ObjectName "(" ArraySpec ")") | (ObjectName "(" ArraySpec ")" "*" CharLength) ;
SpecificationStmt ::= AccessStmt | AllocatableStmt | CommonStmt | DataStmt | DimensionStmt | EquivalenceStmt | ExternalStmt | IntrinsicStmt | SaveStmt | IntentStmt | NamelistStmt | OptionalStmt | PointerStmt | TargetStmt ;
ArrayDeclarator ::= VariableName "(" ArraySpec ")" ;
ComponentAttrSpec ::= "pointer" | ("dimension" "(" ComponentArraySpec ")") ;
SubroutineInterfaceRange ::= (SubroutineParList EOS SubprogramInterfaceBody EndSubroutineStmt) | (SubroutineParList EOS EndSubroutineStmt) ;
VariableName ::= Ident ;
DefinedUnaryOp ::= Dop ;
OrOperand ::= (OrOperand AndOp)? AndOperand ;
EndBlockDataStmt ::= (LblDef "end" "block" "data" EndName? EOS) | (LblDef "end" EOS) ;
OrOp ::= ".or." ;
RewindStmt ::= (LblDef "rewind" UnitIdentifier EOS) | (LblDef "rewind" "(" PositionSpec ("," PositionSpec)* ")" EOS) ;
UFFactor ::= UFPrimary | (UFPrimary PowerOp UFFactor) ;
DerivedTypeStmt ::= (LblDef "type" TypeName EOS) | (LblDef "type" ":" ":" TypeName EOS) | (LblDef "type" "," AccessSpec ":" ":" TypeName EOS) ;
OptionalParList ::= OptionalPar ("," OptionalPar)* ;
ElseIfStmt ::= LblDef "else" "if" "(" ScalarLogicalExpr ")" "then" IfConstructName? EOS ;
ActionStmt ::= AllocateStmt | CycleStmt | DeallocateStmt | ExitStmt | NullifyStmt | PointerAssignmentStmt | WhereStmt | ArithmeticIfStmt | AssignmentStmt | AssignStmt | BackspaceStmt | CallStmt | CloseStmt | ContinueStmt | EndfileStmt | GotoStmt | ComputedGotoStmt | AssignedGotoStmt | IfStmt | InquireStmt | OpenStmt | PauseStmt | PrintStmt | ReadStmt | ReturnStmt | RewindStmt | StopStmt | WriteStmt ;
FunctionArg ::= Name "=" Expr ;
AllocatedShape ::= "(" SectionSubscriptList ")" ;
EntryStmt ::= (LblDef "entry" EntryName SubroutineParList EOS) | (LblDef "entry" EntryName SubroutineParList "result" "(" Name ")" EOS) ;
KindParam ::= Icon | NamedConstantUse ;
CaseStmt ::= LblDef "case" CaseSelector Name? EOS ;
ReturnStmt ::= LblDef "return" Expr? EOS ;
ModuleName ::= Ident ;
OutputImpliedDo ::= ("(" OutputItemList "," ImpliedDoVariable "=" Expr "," Expr ")") | ("(" OutputItemList "," ImpliedDoVariable "=" Expr "," Expr "," Expr ")") ;
NamelistStmt ::= LblDef "namelist" NamelistGroup (","? NamelistGroup)* EOS ;
AcImpliedDo ::= ("(" Expr "," ImpliedDoVariable "=" Expr "," Expr ")") | ("(" Expr "," ImpliedDoVariable "=" Expr "," Expr "," Expr ")") | ("(" AcImpliedDo "," ImpliedDoVariable "=" Expr "," Expr ")") | ("(" AcImpliedDo "," ImpliedDoVariable "=" Expr "," Expr "," Expr ")") ;
WhereStmt ::= LblDef "where" "(" MaskExpr ")" AssignmentStmt ;
ContinueStmt ::= LblDef "continue" EOS ;
SavedEntity ::= VariableName | ("/" CommonBlockName "/") ;
ComponentDecl ::= ComponentName ("(" ComponentArraySpec ")")? ("*" CharLength)? ;
PointerStmtObject ::= ObjectName | (ObjectName "(" DeferredShapeSpecList ")") ;
MaskExpr ::= Expr ;
CommonBlockObject ::= VariableName | ArrayDeclarator ;
LetterSpec ::= Letter ("-" Letter)? ;
EndIfStmt ::= LblDef "end" "if" IfConstructName? EOS ;
EndfileStmt ::= (LblDef "end" "file" UnitIdentifier EOS) | (LblDef "end" "file" "(" PositionSpec ("," PositionSpec)* ")" EOS) ;
LblRef ::= Icon ;
LowerBound ::= SpecificationExpr ;
DataStmtValueList ::= DataStmtValue ("," DataStmtValue)* ;
RenameList ::= Rename ("," Rename)* ;
IfConstruct ::= IfThenStmt ExecutionPartConstruct* (ElseIfStmt ExecutionPartConstruct*)* (ElseStmt ExecutionPartConstruct*)? EndIfStmt ;
DerivedTypeBody ::= PrivateSequenceStmt | ComponentDefStmt ;
TargetStmt ::= (LblDef "target" ":" ":" TargetObjectList EOS) | (LblDef "target" TargetObjectList EOS) ;
IntrinsicProcedureName ::= Ident ;
ExternalName ::= Ident ;
NamelistGroupObject ::= VariableName ;
ModuleSubprogramPartConstruct ::= ContainsStmt | ModuleSubprogram ;
AndOperand ::= NotOp? Level4Expr ;
ProgramName ::= Ident ;
TargetObjectList ::= TargetObject ("," TargetObject)* ;
ExecutionPartConstruct ::= ExecutableConstruct | FormatStmt | DataStmt | EntryStmt ;
StopStmt ::= LblDef "stop" (Icon | Scon)? EOS ;
AddOperand ::= (AddOperand MultOp)? MultOperand ;
ExplicitShapeSpec ::= (LowerBound ":")? UpperBound ;
ArrayDeclaratorList ::= ArrayDeclarator ("," ArrayDeclarator)* ;
ComponentName ::= Ident ;
InterfaceBlockPart ::= InterfaceBody | ModuleProcedureStmt ;
COperand ::= Scon | Name | DataRef | FunctionReference ;
SaveStmt ::= (LblDef "save" ":" ":" SavedEntityList EOS) | (LblDef "save" SavedEntityList? EOS) ;
LengthSelector ::= ("(" TypeParamValue ")") | ("*" CharLength) ;
TypeName ::= Ident ;
InternalSubprogram ::= FunctionSubprogram | SubroutineSubprogram ;
OptionalPar ::= DummyArgName ;
SpecificationPartConstruct ::= ImplicitStmt | ParameterStmt | FormatStmt | EntryStmt | DeclarationConstruct | UseStmt ;
Allocation ::= AllocateObject AllocatedShape? ;
AccessIdList ::= AccessId ("," AccessId)* ;
AllocateObject ::= VariableName | (AllocateObject FieldSelector) ;
FunctionArgList ::= FunctionArg | (FunctionArgList "," FunctionArg) | (SectionSubscriptList "," FunctionArg) ;
SubroutineRange ::= (SubroutineParList? EOS Body? EndSubroutineStmt) | (SubroutineParList EOS InternalSubProgPart EndSubroutineStmt) ;
ScalarNumericExpr ::= Expr ;
EquivalenceStmt ::= LblDef "equivalence" EquivalenceSetList EOS ;
InterfaceBlock ::= InterfaceStmt InterfaceBlockPart+ EndInterfaceStmt ;
CloseSpecList ::= CloseSpec ("," CloseSpec)* ;
ParameterStmt ::= LblDef "parameter" "(" NamedConstantDefList ")" EOS ;
CommonBlockName ::= Ident ;
Subscript ::= Expr ;
SFDummyArgNameList ::= SFDummyArgName ("," SFDummyArgName)* ;
StructureComponent ::= (VariableName FieldSelector) | (StructureComponent FieldSelector) ;
SFExpr ::= SFTerm | (Sign AddOperand) | (SFExpr AddOp AddOperand) ;
SavedEntityList ::= SavedEntity ("," SavedEntity)* ;
NamedConstantDef ::= NamedConstant "=" Expr ;
LabelDoStmt ::= LblDef "do" LblRef ","? LoopControl EOS ;
CaseBodyConstruct ::= CaseStmt | ExecutionPartConstruct ;
MainRange ::= (BodyConstruct+ EndProgramStmt) | (InternalSubProgPart EndProgramStmt) | EndProgramStmt ;
BlockDataName ::= Ident ;
GenericName ::= Ident ;
BlockDoConstruct ::= (LblDef "do" LblRef EOS) | (LblDef "do" LoopControl EOS) | (LblDef "do" EOS) | (LblDef Name ":" "do" LblRef LoopControl EOS) | (LblDef Name ":" "do" LblRef EOS) | (LblDef Name ":" "do" LoopControl EOS) | (LblDef Name ":" "do" EOS) ;
PointerField ::= (Name "(" SFExprList ")" "%" Name) | (Name "(" SFDummyArgNameList ")" "%" Name) | (Name "%" Name) | (PointerField FieldSelector) ;
FieldSelector ::= ("(" SectionSubscriptList ")" "%" Name) | ("%" Name) ;
ScalarIntExpr ::= Expr ;
CExpr ::= (CExpr ConcatOp)? CPrimary ;
EndWhereStmt ::= LblDef "end" "where" EOS ;
WhereConstruct ::= WhereConstructStmt AssignmentStmt* (ElsewhereStmt AssignmentStmt*)? EndWhereStmt ;
DataStmtObjectList ::= DataStmtObject ("," DataStmtObject)* ;
ImpliedDoVariable ::= Ident ;
PositionEditDescr ::= ("T" Icon) | ("TL" Icon) | ("TR" Icon) | (Icon "X") ;
DefinedBinaryOp ::= Dop ;
InputImpliedDo ::= ("(" InputItemList "," ImpliedDoVariable "=" Expr "," Expr ")") | ("(" InputItemList "," ImpliedDoVariable "=" Expr "," Expr "," Expr ")") ;
BackspaceStmt ::= (LblDef "backspace" UnitIdentifier EOS) | (LblDef "backspace" "(" PositionSpec ("," PositionSpec)* ")" EOS) ;
DataIDoObjectList ::= DataIDoObject ("," DataIDoObject)* ;
IfConstructName ::= Ident ;
AllocateStmt ::= (LblDef "allocate" "(" AllocationList "," "stat" "=" Variable ")" EOS) | (LblDef "allocate" "(" AllocationList ")" EOS) ;
AssumedShapeSpec ::= LowerBound? ":" ;
ElseStmt ::= LblDef "else" IfConstructName? EOS ;
PauseStmt ::= LblDef "pause" (Icon | Scon)? EOS ;
SignEditDescr ::= "S" | "SP" | "SS" ;
ExecutableProgram ::= StartCommentBlock? ProgramUnit+ ;
WhereConstructStmt ::= LblDef "where" "(" MaskExpr ")" EOS ;
ComplexConst ::= "(" Expr "," Expr ")" ;
DataStmt ::= LblDef "data" Datalist EOS ;
EndProgramStmt ::= (LblDef "end" EOS) | (LblDef "end" "program" EndName? EOS) ;
RdUnitId ::= ("(" UFExpr ")") | ("(" "*" ")") ;
CharStringEditDescr ::= Scon | (Icon "H" Character+) ;
LogicalConstant ::= (".true." "_" KindParam) | (".false." "_" KindParam) | ".true." | ".false." ;
Name ::= Ident ;
FunctionPrefix ::= ("recursive" "function") | ("recursive" TypeSpec "function") | (TypeSpec "recursive" "function") | (TypeSpec? "function") ;
DataImpliedDo ::= "(" DataIDoObjectList "," ImpliedDoVariable "=" Expr "," Expr ("," Expr)? ")" ;
ScalarVariable ::= VariableName | ArrayElement ;
ContainsStmt ::= LblDef "contains" EOS ;
StructureConstructor ::= TypeName "(" Expr ("," Expr)* ")" ;
IfStmt ::= LblDef "if" "(" ScalarLogicalExpr ")" ActionStmt ;
PositionSpec ::= ("unit="? UnitIdentifier) | ("iostat=" ScalarVariable) | ("err=" LblRef) ;
IntentStmt ::= (LblDef "intent" "(" IntentSpec ")" ":" ":" IntentParList EOS) | (LblDef "intent" "(" IntentSpec ")" IntentParList EOS) ;
FunctionName ::= Ident ;
ReadStmt ::= (LblDef "read" RdCtlSpec InputItemList? EOS) | (LblDef "read" RdFmtId EOS) | (LblDef "read" RdFmtId "," InputItemList EOS) ;
UFTerm ::= UFFactor | (UFTerm MultOp UFFactor) | (UFTerm ConcatOp UFPrimary) ;
Variable ::= VariableName | (VariableName "(" Subscript ("," Subscript)* ")") | (VariableName SubstringRange) | (VariableName "(" Subscript ("," Subscript)* ")" SubstringRange) ;
IntentSpec ::= "in" | "out" | ("in" "out") ;
EquivOp ::= ".eqv." | ".neqv." ;
AssumedSizeSpec ::= ((LowerBound ":")? "*") | (ExplicitShapeSpecList "," "*") | (ExplicitShapeSpecList "," LowerBound ":" "*") ;
OutputItemList ::= OutputItem ("," OutputItem)* ;
UseName ::= Ident ;
DataStmtObject ::= Variable | DataImpliedDo ;
LblDef ::= Label? ;
ExecutableConstruct ::= ActionStmt | DoConstruct | IfConstruct | CaseConstruct | WhereConstruct | EndDoStmt ;
Module ::= (ModuleStmt ModuleBody EndModuleStmt) | (ModuleStmt EndModuleStmt) ;
OnlyList ::= Only ("," Only)* ;
ObjectName ::= Ident ;
DataIDoObject ::= ArrayElement | DataImpliedDo | StructureComponent ;
IntentParList ::= IntentPar ("," IntentPar)* ;
ArrayElement ::= (StructureComponent "(" SectionSubscriptList ")") | (VariableName "(" SectionSubscriptList ")") ;
InterfaceStmt ::= (LblDef "interface" GenericName EOS) | (LblDef "interface" GenericSpec EOS) | (LblDef "interface" EOS) ;
FormatStmt ::= LblDef "format" "(" FormatItemList? ")" EOS ;
PointerObjectList ::= PointerObject ("," PointerObject)* ;
SubprogramInterfaceBody ::= SpecificationPartConstruct | (SubprogramInterfaceBody SpecificationPartConstruct) ;
ModuleStmt ::= LblDef "module" ModuleName EOS ;
CommonStmt ::= LblDef "common" Comblock? CommonBlockObjectList (","? Comblock CommonBlockObjectList)* EOS ;
GoToKw ::= "go" "to" ;
RdFmtIdExpr ::= "(" UFExpr ")" ;
SubscriptTriplet ::= Expr? ":" Expr? (":" Expr)? ;
MainProgram ::= ProgramStmt? MainRange ;
NamedConstantUse ::= Ident ;
DataRef ::= (Name "%" Name) | (DataRef "%" Name) | (Name "(" SectionSubscriptList ")") | (DataRef "(" SectionSubscriptList ")") ;
CaseConstruct ::= (LblDef Name ":" "select" "case" "(" Expr ")" EOS SelectCaseRange) | (LblDef "select" "case" "(" Expr ")" EOS SelectCaseRange) ;
ComponentDeclList ::= ComponentDecl ("," ComponentDecl)* ;
ArrayName ::= Ident ;
UnsignedArithmeticConstant ::= (Icon "_" KindParam) | (Rcon "_" KindParam) | Icon | Rcon | ComplexConst ;
FunctionSubprogram ::= LblDef FunctionPrefix FunctionName FunctionRange ;
InterfaceBody ::= (LblDef FunctionPrefix FunctionName FunctionInterfaceRange) | (LblDef "subroutine" SubroutineName SubroutineInterfaceRange) ;
DummyArgName ::= Ident ;
AssignmentStmt ::= (LblDef Name "%" Name "=" Expr EOS) | (LblDef Name "%" DataRef "=" Expr EOS) | (LblDef Name "(" SFExprList ")" "%" Name "=" Expr EOS) | (LblDef Name "(" SFExprList ")" "%" DataRef "=" Expr EOS) | (LblDef Name "(" SFDummyArgNameList ")" "%" Name "=" Expr EOS) | (LblDef Name "(" SFDummyArgNameList ")" "%" DataRef "=" Expr EOS) | (LblDef Name "=" Expr EOS) | (LblDef Name "(" SFExprList ")" "=" Expr EOS) | (LblDef Name "(" SFExprList ")" SubstringRange "=" Expr EOS) ;
ExternalStmt ::= LblDef "external" ExternalName ("," ExternalName)* EOS ;
TargetObject ::= ObjectName | (ObjectName "(" ArraySpec ")") ;
DataStmtSet ::= DataStmtObjectList "/" DataStmtValueList "/" ;
AcValue ::= Expr | AcImpliedDo ;
ModuleBody ::= SpecificationPartConstruct | ModuleSubprogramPartConstruct | (ModuleBody SpecificationPartConstruct) | (ModuleBody ModuleSubprogramPartConstruct) ;
IntrinsicStmt ::= LblDef "intrinsic" IntrinsicProcedureName ("," IntrinsicProcedureName)* EOS ;
ProgramStmt ::= LblDef "program" ProgramName EOS ;
AllocatableStmt ::= (LblDef "allocatable" ":" ":" ArrayAllocationList EOS) | (LblDef "allocatable" ArrayAllocationList EOS) ;
IntentPar ::= DummyArgName ;
AddOp ::= "+" | "-" ;
CPrimary ::= COperand | ("(" CExpr ")") ;
RelOp ::= "==" | "/=" | "<" | "<=" | ">" | ">=" | ".eq." | ".ne." | ".lt." | ".le." | ".gt." | ".ge." ;
ArrayAllocationList ::= ArrayAllocation ("," ArrayAllocation)* ;
NamelistGroup ::= "/" NamelistGroupName "/" NamelistGroupObject ("," NamelistGroupObject)* ;
ConcatOp ::= "//" ;
TypeSpec ::= ("integer" KindSelector) | ("real" KindSelector) | ("double" "precision") | ("complex" KindSelector) | ("character" CharSelector) | ("logical" KindSelector) | ("type" "(" TypeName ")") | "integer" | "real" | "complex" | "logical" | "character" | ("character" LengthSelector) ;
BodyConstruct ::= SpecificationPartConstruct | ExecutableConstruct ;
FunctionReference ::= Name "(" FunctionArgList? ")" ;
SelectCaseRange ::= (SelectCaseBody EndSelectStmt) | EndSelectStmt ;
UFPrimary ::= Icon | Scon | Name | FunctionReference | DataRef | ("(" UFExpr ")") ;
SFPrimary ::= ArrayConstructor | Icon | Name | DataRef | FunctionReference | ("(" Expr ")") ;
SelectCaseBody ::= CaseBodyConstruct+ ;
DimensionStmt ::= (LblDef "dimension" ":" ":" ArrayDeclaratorList EOS) | (LblDef "dimension" ArrayDeclaratorList EOS) ;
SFDummyArgName ::= Ident ;
PrivateSequenceStmt ::= (LblDef "private" EOS) | (LblDef "sequence" EOS) ;
WriteStmt ::= LblDef "write" "(" IoControlSpecList ")" OutputItemList? EOS ;
UFExpr ::= UFTerm | (Sign UFTerm) | (UFExpr AddOp UFTerm) ;
ExitStmt ::= LblDef "exit" EndName? EOS ;
FunctionRange ::= (FunctionParList EOS Body? EndFunctionStmt) | (FunctionParList "result" "(" Name ")" EOS InternalSubProgPart EndFunctionStmt) | (FunctionParList "result" "(" Name ")" EOS Body EndFunctionStmt) | (FunctionParList "result" "(" Name ")" EOS EndFunctionStmt) | (FunctionParList EOS InternalSubProgPart EndFunctionStmt) ;
FormatIdentifier ::= LblRef | CExpr | "*" ;
BlockDataStmt ::= LblDef "block" "data" BlockDataName? EOS ;
UpperBound ::= SpecificationExpr ;
InputItemList ::= InputItem ("," InputItem)* ;
EndFunctionStmt ::= (LblDef "end" EOS) | (LblDef "end" "function" EndName? EOS) ;
ComputedGotoStmt ::= LblDef GoToKw "(" LblRef ("," LblRef)* ")" ","? ScalarIntExpr EOS ;
ElsewhereStmt ::= LblDef "elsewhere" EOS ;
Expr ::= (Expr DefinedBinaryOp)? Level5Expr ;
GenericSpec ::= ("operator" "(" DefinedOperator ")") | ("assignment" "(" "=" ")") ;
ModuleProcedureStmt ::= LblDef "module" "procedure" ProcedureNameList EOS ;
SubroutineSubprogram ::= LblDef "recursive"? "subroutine" SubroutineName SubroutineRange ;
ProgramUnit ::= MainProgram | FunctionSubprogram | SubroutineSubprogram | Module | BlockDataSubprogram ;
EndSubroutineStmt ::= (LblDef "end" "subroutine" EndName? EOS) | (LblDef "end" EOS) ;
BozLiteralConstant ::= BinaryConstant | OctalConstant | HexConstant ;
ArrayConstructor ::= "(/" AcValueList "/)" ;
--------------------fortran::waite-cordy.bgf--------------------
EndSelectStmt ::= (LblDef "endselect" EndName? EOS) | (LblDef "end" "select" EndName? EOS) ;
EndTypeStmt ::= (LblDef "endtype" TypeName EOS) | (LblDef "endtype" EOS) | (LblDef "end" "type" TypeName EOS) | (LblDef "end" "type" EOS) ;
EntryName ::= Ident ;
RdIoCtlSpecList ::= (UnitIdentifier "," IoControlSpec) | (UnitIdentifier "," FormatIdentifier) | IoControlSpec | (RdIoCtlSpecList "," IoControlSpec) ;
CharLength ::= ("(" TypeParamValue ")") | Constant ;
DeferredShapeSpecList ::= DeferredShapeSpec+ ;
InquireStmt ::= LblDef "inquire" "(" InquireSpecList ")" EOS ;
 InquireStmt ::= LblDef "inquire" "(" "iolength=" ScalarVariable ")" OutputItemList EOS ;
ArrayAllocation ::= ArrayName | (ArrayName "(" DeferredShapeSpecList ")") ;
BlockDataBody ::= BlockDataBodyConstruct | (BlockDataBody BlockDataBodyConstruct) ;
LoopControl ::= VariableName "=" Expr "," Expr CommaExpr? ;
 LoopControl ::= "while" "(" Expr ")" ;
AndOp ::= SP ".and." SP ;
PrintStmt ::= (LblDef "print" FormatIdentifier "," OutputItemList EOS) | (LblDef "print" FormatIdentifier EOS) ;
NotOp ::= SP ".not." SP ;
ModuleSubprogram ::= FunctionSubprogram | SubroutineSubprogram ;
ArithmeticIfStmt ::= LblDef "if" "(" Expr ")" LblRef "," LblRef "," LblRef EOS ;
InquireSpec ::= ("unit=" UnitIdentifier) | ("file=" CExpr) | ("err=" LblRef) | ("iostat=" ScalarVariable) | ("exist=" ScalarVariable) | ("opened=" ScalarVariable) | ("number=" ScalarVariable) | ("named=" ScalarVariable) | ("name=" ScalarVariable) | ("access=" ScalarVariable) | ("sequential=" ScalarVariable) | ("direct=" ScalarVariable) | ("form=" ScalarVariable) | ("formatted=" ScalarVariable) | ("unformatted=" ScalarVariable) | ("recl=" Expr) | ("nextrec=" ScalarVariable) | ("blank=" ScalarVariable) ;
 InquireSpec ::= ("position=" ScalarVariable) | ("action=" ScalarVariable) | ("read=" ScalarVariable) | ("write=" ScalarVariable) | ("readwrite=" ScalarVariable) | ("delim=" ScalarVariable) | ("pad=" ScalarVariable) ;
GotoStmt ::= LblDef GoToKw LblRef EOS ;
EquivOpEquivOperand ::= EquivOp EquivOperand ;
EndName ::= Ident ;
ConnectSpecList ::= UnitIdentifierComma? {ConnectSpec ","}* ;
PointerStmtObjectList ::= PointerStmtObject+ ;
Primary ::= UnsignedArithmeticConstant | NameDataRef | FunctionReference | ("(" Expr ")") ;
 Primary ::= Scon ;
 Primary ::= LogicalConstant ;
 Primary ::= ArrayConstructor ;
IfThenStmt ::= LblDef "if" "(" Expr ")" "then" EOS IN_2 ;
NamelistGroupName ::= Ident ;
DataStmtValue ::= Constant | (Constant "*" Constant) | (NamedConstantUse "*" Constant) ;
ProcedureName ::= Ident ;
TypeParamValue ::= Expr | "*" ;
BlockDataBodyConstruct ::= SpecificationPartConstruct ;
Sign ::= "+" | "-" ;
InputItem ::= NameDataRef | InputImpliedDo ;
NamedConstant ::= Ident ;
AssignedGotoStmt ::= (LblDef GoToKw VariableName EOS) | (LblDef GoToKw VariableName "(" LblRefList ")" EOS) | (LblDef GoToKw VariableComma "(" LblRefList ")" EOS) ;
EquivOperand ::= OrOperand OrUpOrOperand* ;
ComponentDefStmt ::= (LblDef TypeSpec "," ComponentAttrSpecList "::" ComponentDeclList EOS) | (LblDef TypeSpec "::" ComponentDeclList EOS) | (LblDef TypeSpec ComponentDeclList EOS) ;
Ident ::= id ;
UseStmt ::= (LblDef "use" Name EOS) | (LblDef "use" Name "," "only" ":" EOS) | (LblDef "use" Name "," RenameList EOS) | (LblDef "use" Name "," "only" ":" OnlyList EOS) ;
Only ::= GenericSpec | (Ident "=>" UseName) | UseName ;
Comblock ::= ("/" SPOFF "/" SPON) | ("/" CommonBlockName "/") ;
ComplexDataRefTail ::= SectionSubscriptRef ;
 ComplexDataRefTail ::= "%" Name ;
StmtFunctionStmt ::= LblDef Name StmtFunctionRange ;
FmtSpec ::= Formatedit | Formatsep | (Formatsep Formatedit) | (FmtSpec Formatsep) | (FmtSpec Formatsep Formatedit) | (FmtSpec "," Formatedit) | (FmtSpec "," Formatsep) | (FmtSpec "," Formatsep Formatedit) ;
FunctionParList ::= ("(" FunctionPars ")") | ε ;
DeallocateStmt ::= (LblDef "deallocate" "(" AllocateObjectList "," "stat=" Variable ")" EOS) | (LblDef "deallocate" "(" AllocateObjectList ")" EOS) ;
SectionSubscript ::= (Expr SubscriptTripletTail?) | SubscriptTripletTail ;
ExplicitShapeSpecList ::= ExplicitShapeSpec+ ;
Constant ::= NamedConstantUse | (PlusMinus? UnsignedArithmeticConstant) | Scon | Hcon | LogicalConstant ;
 Constant ::= (Icon "_" Scon) | (NamedConstantUse "_" Scon) ;
 Constant ::= StructureConstructor | BozLiteralConstant ;
RdCtlSpec ::= RdUnitId | ("(" RdIoCtlSpecList ")") ;
Body ::= BodyConstruct+ ;
CloseStmt ::= LblDef "close" "(" CloseSpecList ")" EOS ;
AccessId ::= GenericName | GenericSpec ;
AllocationList ::= Allocation+ ;
DeferredShapeSpec ::= ":" ;
CaseValueRange ::= Expr | (Expr ":") | (":" Expr) | (Expr ":" Expr) ;
PointerObject ::= Name | PointerField ;
AllocateObjectList ::= AllocateObject+ ;
SubroutineNameUse ::= Ident ;
EquivalenceSet ::= "(" EquivalenceObject "," EquivalenceObjectList ")" ;
KindSelector ::= ("(" "kind=" Expr ")") | ("(" Expr ")") ;
CloseSpec ::= ("unit=" UnitIdentifier) | ("err=" LblRef) | ("status=" CExpr) | ("iostat=" ScalarVariable) ;
PointerAssignmentStmt ::= (LblDef Name "=>" Target EOS) | (LblDef Name SFExprListRef? "%" NameDataRef "=>" Target EOS) ;
Target ::= Expr ;
CycleStmt ::= LblDef "cycle" EndName? EOS ;
DerivedTypeDef ::= DerivedTypeStmt DerivedTypeBody EndTypeStmt ;
DefinedOperator ::= Dop | PowerOp | MultOp | AddOp | RelOp | ConcatOp | NotOp | AndOp | OrOp | EquivOp ;
InquireSpecList ::= UnitIdentifier? {InquireSpec ","}* ;
SubscriptListRef ::= "(" SubscriptList ")" ;
TypeDeclarationStmt ::= LblDef TypeSpec EntityDeclList EOS ;
 TypeDeclarationStmt ::= LblDef TypeSpec AttrSpecSeq? "::" EntityDeclList EOS ;
EndInterfaceStmt ::= (LblDef "endinterface" EOS) | (LblDef "end" "interface" EOS) ;
PowerOp ::= "**" ;
SFExprList ::= (Expr ":"? Expr?) | (":" Expr?) ;
 SFExprList ::= (Expr? ":" Expr ":" Expr) | (Expr? "::" Expr) ;
NamedConstantDefList ::= NamedConstantDef+ ;
ConnectSpec ::= ("unit=" UnitIdentifier) | ("err=" LblRef) | ("file=" CExpr) | ("status=" CExpr) | ("access=" CExpr) | ("form=" CExpr) | ("recl=" Expr) | ("blank=" CExpr) | ("iostat=" ScalarVariable) ;
 ConnectSpec ::= ("position=" CExpr) | ("action=" CExpr) | ("delim=" CExpr) | ("pad=" CExpr) ;
DeclarationConstruct ::= TypeDeclarationStmt | SpecificationStmt ;
 DeclarationConstruct ::= DerivedTypeDef | InterfaceBlock ;
ProcedureNameList ::= ProcedureName+ ;
FunctionInterfaceRange ::= FunctionParList EOS SubprogramInterfaceBody? EndFunctionStmt ;
SubroutineParList ::= ("(" SubroutinePars ")") | ε ;
VariableComma ::= VariableName "," ;
ArraySpec ::= ExplicitShapeSpecList | AssumedSizeSpec ;
 ArraySpec ::= AssumedShapeSpecList | DeferredShapeSpecList ;
IoControlSpec ::= ("fmt=" FormatIdentifier) | ("unit=" UnitIdentifier) | ("rec=" Expr) | ("end=" LblRef) | ("err=" LblRef) | ("iostat=" ScalarVariable) ;
 IoControlSpec ::= ("nml=" NamelistGroupName) | ("advance=" CExpr) | ("size=" Variable) | ("eor=" LblRef) ;
EndDoStmt ::= (LblDef "enddo" EndName? EOS) | (LblDef "end" "do" EndName? EOS) ;
AcValueList ::= Expr | AcValueList1 ;
SubstringRange ::= "(" Expr? SubscriptTripletTail ")" ;
EntityDeclList ::= EntityDecl+ ;
FunctionPar ::= DummyArgName ;
DoLblRef ::= Icon ;
ComponentAttrSpecList ::= ComponentAttrSpec+ ;
CommaInputItemList ::= "," InputItemList ;
PointerStmt ::= LblDef "pointer" ColonColon? PointerStmtObjectList EOS ;
SectionSubscriptList ::= SectionSubscript+ ;
AssumedShapeSpecList ::= (LowerBound ":") | (DeferredShapeSpecList "," LowerBound ":") | (AssumedShapeSpecList "," AssumedShapeSpec) ;
Comlist ::= (Comblock? CommonBlockObject) | (Comlist "," Comblock? CommonBlockObject) | (Comlist Comblock CommonBlockObject) ;
AssignStmt ::= LblDef "assign" LblRef "to" VariableName EOS ;
CharSelector ::= ("(" "len=" TypeParamValue "," "kind=" Expr ")") | ("(" "len=" TypeParamValue "," Expr ")") | ("(" "len=" TypeParamValue ")") | ("(" "kind=" Expr ")") | ("(" Expr ")") ;
NameColon ::= Name ":" ;
CPrimaryConcatOp ::= CPrimary ConcatOp ;
EquivalenceSetList ::= EquivalenceSet+ ;
EditElement ::= Fcon | MislexedFcon | Scon | Hcon | Ident | ("(" FmtSpec ")") ;
EndModuleStmt ::= (LblDef "endmodule" EndName? EOS) | (LblDef "end" "module" EndName? EOS) | (LblDef "end" EOS) ;
UnitIdentifier ::= UFExpr | "*" ;
ImplicitStmt ::= LblDef "implicit" ImplicitSpecList EOS ;
 ImplicitStmt ::= LblDef "implicit" "none" EOS ;
AccessStmt ::= (LblDef AccessSpec ColonColon? AccessIdList EOS) | (LblDef AccessSpec EOS) ;
AttrSpec ::= "parameter" | AccessSpec | "allocatable" | ("dimension" "(" ArraySpec ")") | "external" | ("intent" "(" IntentSpec ")") | "intrinsic" | "optional" | "pointer" | "save" | "target" ;
DoConstruct ::= LabelDoStmt ;
 DoConstruct ::= BlockDoConstruct ;
EquivalenceObject ::= Variable ;
OptionalStmt ::= LblDef "optional" ColonColon? OptionalParList EOS ;
MultOpMultOperand ::= MultOp MultOperand ;
UnitIdentifierComma ::= UnitIdentifier "," ;
Datalist ::= DataStmtSet | (Datalist? ","? DataStmtSet) ;
CallStmt ::= (LblDef "call" SubroutineNameUse EOS) | (LblDef "call" SubroutineNameUse "(" SubroutineArgList ")" EOS) ;
PositionSpecList ::= UnitIdentifierComma? PositionSpec+ ;
ColonColon ::= "::" ;
ImplicitSpec ::= (TypeSpec ImplicitRanges) | (TypeSpec "(" ImplicitRanges ")") ;
AccessSpec ::= "public" | "private" ;
Rename ::= Ident "=>" UseName ;
NameDataRef ::= Name ComplexDataRefTail* ;
NullifyStmt ::= LblDef "nullify" "(" PointerObjectList ")" EOS ;
SubroutinePar ::= DummyArgName | "*" ;
SubscriptTripletTail ::= ":" Expr? ;
 SubscriptTripletTail ::= (":" Expr ":" Expr) | ("::" Expr) ;
LblRefList ::= LblRef+ ;
BlockDataSubprogram ::= (BlockDataStmt BlockDataBody EndBlockDataStmt) | (BlockDataStmt EndBlockDataStmt) ;
MultOperand ::= Level1Expr PowerUpMultOperand? ;
ComponentArraySpec ::= ExplicitShapeSpecList | DeferredShapeSpecList ;
RdFmtId ::= LblRef | "*" | COperand | (COperand ConcatOp CPrimary) | (RdFmtIdExpr ConcatOp CPrimary) ;
AttrSpecSeq ::= ("," AttrSpec) | (AttrSpecSeq "," AttrSpec) ;
OpenStmt ::= LblDef "open" "(" ConnectSpecList ")" EOS ;
MultOp ::= "*" | "/" ;
IoControlSpecList ::= (UnitIdentifier "$" ",") | (UnitIdentifier "," FormatIdentifier) | (UnitIdentifier "," IoControlSpec) | IoControlSpec | (IoControlSpecList "," IoControlSpec) ;
CaseSelector ::= ("(" CaseValueRangeList ")") | "default" ;
SubroutineName ::= Ident ;
EntityDecl ::= ObjectName | (ObjectName "(" ArraySpec ")") | (ObjectName "*" CharLength) | (ObjectName "(" ArraySpec ")" "*" CharLength) ;
 EntityDecl ::= (ObjectName "=" Expr) | (ObjectName "(" ArraySpec ")" "=" Expr) | (ObjectName "*" CharLength "=" Expr) | (ObjectName "*" CharLength "(" ArraySpec ")" "=" Expr) ;
SpecificationStmt ::= CommonStmt | DataStmt | DimensionStmt | EquivalenceStmt | ExternalStmt | IntrinsicStmt | SaveStmt ;
 SpecificationStmt ::= AccessStmt | AllocatableStmt | IntentStmt | NamelistStmt | OptionalStmt | PointerStmt | TargetStmt ;
ArrayDeclarator ::= VariableName "(" ArraySpec ")" ;
ComponentAttrSpec ::= "pointer" | ("dimension" "(" ComponentArraySpec ")") ;
SubroutineInterfaceRange ::= SubroutineParList EOS SubprogramInterfaceBody? EndSubroutineStmt ;
DefinedUnaryOp ::= Dop ;
VariableName ::= Ident ;
OrOperand ::= AndOperand AndOpAndOperand* ;
OrOp ::= SP ".or." SP ;
EndBlockDataStmt ::= LblDef "end" EOS ;
 EndBlockDataStmt ::= (LblDef "endblockdata" EndName? EOS) | (LblDef "end" "blockdata" EndName? EOS) | (LblDef "endblock" "data" EndName? EOS) | (LblDef "end" "block" "data" EndName? EOS) ;
RewindStmt ::= (LblDef "rewind" UnitIdentifier EOS) | (LblDef "rewind" "(" PositionSpecList ")" EOS) ;
UFFactor ::= UFPrimary | (UFPrimary PowerOp UFFactor) ;
OptionalParList ::= OptionalPar+ ;
DerivedTypeStmt ::= (LblDef "type" TypeName EOS) | (LblDef "type" "::" TypeName EOS) | (LblDef "type" "," AccessSpec "::" TypeName EOS) ;
FunctionArg ::= Name "=" Expr ;
ElseIfStmt ::= LblDef EX_2 "elseif" "(" Expr ")" "then" EOS IN_2 ;
 ElseIfStmt ::= LblDef EX_2 "else" "if" "(" Expr ")" "then" EOS IN_2 ;
ActionStmt ::= ArithmeticIfStmt | AssignmentStmt | AssignStmt | BackspaceStmt | CallStmt | CloseStmt | ContinueStmt | EndfileStmt | GotoStmt | ComputedGotoStmt | AssignedGotoStmt | IfStmt | InquireStmt | OpenStmt | PauseStmt | PrintStmt | ReadStmt | ReturnStmt | RewindStmt | StmtFunctionStmt | StopStmt | WriteStmt ;
 ActionStmt ::= AllocateStmt | CycleStmt | DeallocateStmt | ExitStmt | NullifyStmt | PointerAssignmentStmt | WhereStmt ;
StmtFunctionRange ::= "(" SFDummyArgNameList? ")" "=" Expr EOS ;
ImplicitRanges ::= {ImplicitRange ","}* ;
AllocatedShape ::= "(" SectionSubscriptList ")" ;
EntryStmt ::= LblDef "entry" EntryName SubroutineParList "result" "(" Name ")" EOS ;
KindParam ::= Icon | NamedConstantUse ;
CaseStmt ::= (LblDef "case" CaseSelector EOS) | (LblDef "case" CaseSelector Name EOS) ;
ReturnStmt ::= LblDef "return" Expr? EOS ;
ModuleName ::= Ident ;
OutputImpliedDo ::= ("(" Expr "," ImpliedDoVariable "=" Expr "," Expr CommaExpr? ")") | ("(" OutputItemList1 "," ImpliedDoVariable "=" Expr "," Expr CommaExpr? ")") ;
NamelistStmt ::= LblDef "namelist" NamelistGroups EOS ;
AcImpliedDo ::= ("(" Expr "," ImpliedDoVariable "=" Expr "," Expr ")") | ("(" Expr "," ImpliedDoVariable "=" Expr "," Expr "," Expr ")") | ("(" AcImpliedDo "," ImpliedDoVariable "=" Expr "," Expr ")") | ("(" AcImpliedDo "," ImpliedDoVariable "=" Expr "," Expr "," Expr ")") ;
WhereStmt ::= LblDef "where" "(" MaskExpr ")" AssignmentStmt ;
ContinueStmt ::= LblDef "continue" EOS ;
SavedEntity ::= VariableName | SavedCommonBlock ;
ConditionalBody ::= ExecutionPartConstruct* ;
ComponentDecl ::= (ComponentName "(" ComponentArraySpec ")" "*" CharLength) | (ComponentName "(" ComponentArraySpec ")") | (ComponentName "*" CharLength) | ComponentName ;
PointerStmtObject ::= ObjectName | (ObjectName "(" DeferredShapeSpecList ")") ;
MislexedFcon ::= (RDcon SPOFF RDcon SPON) | (Ident SPOFF RDcon SPON) ;
IntrinsicList ::= IntrinsicProcedureName+ ;
MaskExpr ::= Expr ;
CommonBlockObject ::= VariableName | ArrayDeclarator ;
EndIfStmt ::= LblDef EX_2 "endif" EOS ;
 EndIfStmt ::= LblDef EX_2 "end" "if" EOS ;
EndfileStmt ::= (LblDef "endfile" UnitIdentifier EOS) | (LblDef "endfile" "(" PositionSpecList ")" EOS) ;
 EndfileStmt ::= (LblDef "end" "file" UnitIdentifier EOS) | (LblDef "end" "file" "(" PositionSpecList ")" EOS) ;
LowerBound ::= Expr ;
DataStmtValueList ::= DataStmtValue+ ;
LblRef ::= Label ;
RenameList ::= Rename+ ;
IfConstruct ::= IfThenStmt ConditionalBody ElseIfConstruct* ElseConstruct? EndIfStmt ;
TargetStmt ::= LblDef "target" ColonColon? TargetObjectList EOS ;
DerivedTypeBody ::= DerivedTypeBodyConstruct | (DerivedTypeBody DerivedTypeBodyConstruct) ;
IntrinsicProcedureName ::= Ident ;
ExternalName ::= Ident ;
NamelistGroupObject ::= VariableName ;
ModuleSubprogramPartConstruct ::= ContainsStmt | ModuleSubprogram ;
AndOperand ::= NotOp? Level4Expr ;
SubroutineArg ::= Expr | Hcon | ("*" LblRef) ;
 SubroutineArg ::= (Name "=" Expr) | (Name "=" Hcon) | (Name "=" "*" LblRef) ;
ProgramName ::= Ident ;
ElseWhere ::= (Where ElsewhereStmt) | (ElseWhere AssignmentStmt) ;
TargetObjectList ::= TargetObject+ ;
SFExprListRef ::= "(" SFExprList CommaSectionSubscript* ")" ;
ExecutionPartConstruct ::= ExecutableConstruct | FormatStmt | DataStmt | EntryStmt ;
 ExecutionPartConstruct ::= LblDef DoubleDoStmt ;
StopStmt ::= LblDef "stop" IconOrScon? EOS ;
AndOpAndOperand ::= AndOp AndOperand ;
ComponentName ::= Ident ;
ArrayDeclaratorList ::= ArrayDeclarator+ ;
ExplicitShapeSpec ::= (LowerBound ":" UpperBound) | UpperBound ;
AddOperand ::= MultOperand MultOpMultOperand* ;
OrUpOrOperand ::= OrOp OrOperand ;
COperand ::= Scon | NameDataRef | FunctionReference ;
TypeName ::= Ident ;
SaveStmt ::= (LblDef "save" EOS) | (LblDef "save" SavedEntityList EOS) ;
 SaveStmt ::= LblDef "save" "::" SavedEntityList EOS ;
LengthSelector ::= "*" CharLength ;
 LengthSelector ::= "(" TypeParamValue ")" ;
OptionalPar ::= DummyArgName ;
InternalSubprogram ::= FunctionSubprogram | SubroutineSubprogram ;
SpecificationPartConstruct ::= ImplicitStmt | ParameterStmt | FormatStmt | EntryStmt | DeclarationConstruct | IncludeStmt ;
 SpecificationPartConstruct ::= UseStmt ;
Allocation ::= AllocateObject | (AllocateObject AllocatedShape) ;
NamelistGroups ::= ("/" NamelistGroupName "/" NamelistGroupObject) | (NamelistGroups "/" NamelistGroupName "/" NamelistGroupObject) | (NamelistGroups "," "/" NamelistGroupName "/" NamelistGroupObject) | (NamelistGroups "," NamelistGroupObject) ;
AccessIdList ::= AccessId+ ;
FunctionArgList ::= FunctionArg | (FunctionArgList "," FunctionArg) | (SectionSubscriptList "," FunctionArg) ;
AllocateObject ::= VariableName | (AllocateObject FieldSelector) ;
DoLblDef ::= TAB_2 Icon TAB_9 ;
PowerUpMultOperand ::= PowerOp MultOperand ;
SubroutineRange ::= SubroutineParList EOS Body? EndSubroutineStmt ;
 SubroutineRange ::= SubroutineParList EOS BodyPlusInternals EndSubroutineStmt ;
InterfaceBlock ::= InterfaceStmt InterfaceBlockBody EndInterfaceStmt ;
EquivalenceStmt ::= LblDef "equivalence" EquivalenceSetList EOS ;
CloseSpecList ::= UnitIdentifierComma? {CloseSpec ","}* ;
ParameterStmt ::= LblDef "parameter" "(" NamedConstantDefList ")" EOS ;
CommonBlockName ::= Ident ;
SectionSubscriptRef ::= "(" SectionSubscriptList ")" ;
Subscript ::= Expr ;
StructureComponent ::= (VariableName FieldSelector) | (StructureComponent FieldSelector) ;
SFDummyArgNameList ::= SFDummyArgName+ ;
EOS ::= CommentOrNewline CommentOrNewline* ;
SavedEntityList ::= SavedEntity+ ;
NamedConstantDef ::= NamedConstant "=" Expr ;
Formatsep ::= "/" | ":" ;
LabelDoStmt ::= LblDef "do" DoLblRef CommaLoopControl EOS IN_2 ExecutionPartConstruct* EX_2 DoLblDef DoLabelStmt ;
CaseBodyConstruct ::= CaseStmt | ExecutionPartConstruct ;
MainRange ::= Body? EndProgramStmt ;
 MainRange ::= BodyPlusInternals EndProgramStmt ;
GenericName ::= Ident ;
BlockDataName ::= Ident ;
BlockDoConstruct ::= LblDef NameColon? "do" CommaLoopControl? EOS IN_2 ExecutionPartConstruct* EX_2 EndDoStmt ;
PointerField ::= (Name SFExprListRef? "%" Name) | (PointerField FieldSelector) ;
FieldSelector ::= ("(" SectionSubscriptList ")" "%" Name) | ("%" Name) ;
CExpr ::= CPrimary CPrimaryConcatOp* ;
PlusMinus ::= "+" | "-" ;
EndWhereStmt ::= (LblDef "endwhere" EOS) | (LblDef "end" "where" EOS) ;
Label ::= Icon ;
ExternalNameList ::= ExternalName+ ;
WhereConstruct ::= (Where EndWhereStmt) | (ElseWhere EndWhereStmt) ;
SubroutineArgList ::= {SubroutineArg ","}* ;
ImpliedDoVariable ::= Ident ;
DataStmtObjectList ::= DataStmtObject+ ;
DefinedBinaryOp ::= Dop ;
AddOpAddOperand ::= AddOp AddOperand ;
InputImpliedDo ::= "(" InputItemList "," ImpliedDoVariable "=" Expr "," Expr CommaExpr? ")" ;
Where ::= WhereConstructStmt | (Where AssignmentStmt) ;
DataIDoObjectList ::= DataIDoObject+ ;
BackspaceStmt ::= (LblDef "backspace" UnitIdentifier EOS) | (LblDef "backspace" "(" PositionSpecList ")" EOS) ;
AllocateStmt ::= (LblDef "allocate" "(" AllocationList "," "stat=" Variable ")" EOS) | (LblDef "allocate" "(" AllocationList ")" EOS) ;
AssumedShapeSpec ::= (LowerBound ":") | ":" ;
ElseStmt ::= LblDef EX_2 "else" EOS IN_2 ;
DerivedTypeBodyConstruct ::= PrivateSequenceStmt | ComponentDefStmt ;
PauseStmt ::= LblDef "pause" IconOrScon? EOS ;
ExecutableProgram ::= ProgramUnit+ ;
WhereConstructStmt ::= LblDef "where" "(" MaskExpr ")" EOS ;
InterfaceBlockBody ::= InterfaceBodyPartConstruct | (InterfaceBlockBody InterfaceBodyPartConstruct) ;
SubroutinePars ::= {SubroutinePar ","}* ;
ComplexConst ::= "(" ComplexComponent "," ComplexComponent ")" ;
DataStmt ::= LblDef "data" Datalist EOS ;
CommentOrNewline ::= comment | newline ;
RdUnitId ::= ("(" UFExpr ")") | ("(" "*" ")") ;
EndProgramStmt ::= LblDef "end" EOS ;
 EndProgramStmt ::= (LblDef "endprogram" EndName? EOS) | (LblDef "end" "program" EndName? EOS) ;
LogicalConstant ::= (SP ".true." SP) | (SP ".false." SP) ;
 LogicalConstant ::= (SP ".true." SP "_" KindParam) | (SP ".false." SP "_" KindParam ".") ;
Name ::= Ident ;
IconOrScon ::= Icon | Scon ;
FunctionPrefix ::= "function" | (TypeSpec "function") ;
 FunctionPrefix ::= ("recursive" "function") | ("recursive" TypeSpec "function") | (TypeSpec "recursive" "function") ;
DataImpliedDo ::= ("(" DataIDoObjectList "," ImpliedDoVariable "=" Expr "," Expr ")") | ("(" DataIDoObjectList "," ImpliedDoVariable "=" Expr "," Expr "," Expr ")") ;
EquivalenceObjectList ::= EquivalenceObject+ ;
ScalarVariable ::= VariableName | ArrayElement ;
ContainsStmt ::= LblDef "contains" EOS ;
StructureConstructor ::= TypeName "(" ExprList ")" ;
IfStmt ::= LblDef "if" "(" Expr ")" ActionStmt ;
IntentStmt ::= LblDef "intent" "(" IntentSpec ")" ColonColon? IntentParList EOS ;
PositionSpec ::= ("unit=" UnitIdentifier) | ("err=" LblRef) | ("iostat=" ScalarVariable) ;
FunctionName ::= Ident ;
Formatedit ::= EditElement | (Icon EditElement) | Xcon | Pcon | (Pcon EditElement) | (Pcon Icon EditElement) ;
ReadStmt ::= (LblDef "read" RdCtlSpec InputItemList? EOS) | (LblDef "read" RdFmtId CommaInputItemList? EOS) ;
UFTerm ::= UFFactor | (UFTerm MultOp UFFactor) | (UFTerm ConcatOp UFPrimary) ;
Variable ::= VariableName SubscriptListRef? SubstringRange? ;
IntentSpec ::= "in" | "out" | "inout" ;
EquivOp ::= (SP ".eqv." SP) | (SP ".neqv." SP) ;
AssumedSizeSpec ::= "*" | (LowerBound ":" "*") | (ExplicitShapeSpecList "," "*") | (ExplicitShapeSpecList "," LowerBound ":" "*") ;
UseName ::= Ident ;
OutputItemList ::= Expr | OutputItemList1 ;
DataStmtObject ::= Variable | DataImpliedDo ;
LblDef ::= ε | (TAB_2 Label TAB_7) ;
ExecutableConstruct ::= ActionStmt | DoConstruct | IfConstruct ;
 ExecutableConstruct ::= CaseConstruct | WhereConstruct ;
Module ::= (ModuleStmt ModuleBody EndModuleStmt) | (ModuleStmt EndModuleStmt) ;
OnlyList ::= Only+ ;
ObjectName ::= Ident ;
InterfaceBodyPartConstruct ::= InterfaceBody | ModuleProcedureStmt ;
DataIDoObject ::= ArrayElement | DataImpliedDo ;
 DataIDoObject ::= StructureComponent ;
IntentParList ::= IntentPar+ ;
ArrayElement ::= VariableName "(" SectionSubscriptList ")" ;
 ArrayElement ::= StructureComponent "(" SectionSubscriptList ")" ;
InterfaceStmt ::= (LblDef "interface" GenericName EOS) | (LblDef "interface" GenericSpec EOS) | (LblDef "interface" EOS) ;
FormatStmt ::= LblDef "format" "(" FmtSpec? ")" EOS ;
SFVarName ::= Ident ;
ElseConstruct ::= ElseStmt ConditionalBody ;
CommaSectionSubscript ::= "," SectionSubscript ;
SavedCommonBlock ::= "/" CommonBlockName "/" ;
CaseValueRangeList ::= CaseValueRange+ ;
PointerObjectList ::= PointerObject+ ;
SubprogramInterfaceBody ::= SpecificationPartConstruct | (SubprogramInterfaceBody SpecificationPartConstruct) ;
ModuleStmt ::= LblDef "module" ModuleName EOS ;
CommonStmt ::= LblDef "common" Comlist EOS ;
DoLabelStmt ::= ActionStmt ;
IncludeStmt ::= "include" Scon EOS ;
GoToKw ::= "goto" ;
 GoToKw ::= "go" "to" ;
RdFmtIdExpr ::= "(" UFExpr ")" ;
MainProgram ::= ProgramStmt? MainRange ;
NamedConstantUse ::= Ident ;
CaseConstruct ::= (LblDef Name ":" "selectcase" "(" Expr ")" EOS SelectCaseRange) | (LblDef "selectcase" "(" Expr ")" EOS SelectCaseRange) | (LblDef Name ":" "select" "case" "(" Expr ")" EOS SelectCaseRange) | (LblDef "select" "case" "(" Expr ")" EOS SelectCaseRange) ;
ComponentDeclList ::= ComponentDecl+ ;
ArrayName ::= Ident ;
UnsignedArithmeticConstant ::= Icon | RDcon | ComplexConst ;
 UnsignedArithmeticConstant ::= Icon "_" KindParam ;
 UnsignedArithmeticConstant ::= RDcon "_" KindParam ;
FunctionSubprogram ::= LblDef FunctionPrefix FunctionName FunctionRange ;
InterfaceBody ::= (LblDef FunctionPrefix FunctionName FunctionInterfaceRange) | (LblDef "subroutine" SubroutineName SubroutineInterfaceRange) ;
DummyArgName ::= Ident ;
AssignmentStmt ::= LblDef Name SFExprListRef? SubstringRange? "=" Expr EOS ;
 AssignmentStmt ::= (LblDef Name SFExprListRef? "%" NameDataRef "=" Expr EOS) | (LblDef Name "(" SFDummyArgNameList ")" "%" NameDataRef "=" Expr EOS) ;
ExprList ::= Expr+ ;
ExternalStmt ::= LblDef "external" ExternalNameList EOS ;
TargetObject ::= ObjectName | (ObjectName "(" ArraySpec ")") ;
DataStmtSet ::= DataStmtObjectList "/" DataStmtValueList "/" ;
ModuleBody ::= SpecificationPartConstruct | ModuleSubprogramPartConstruct | (ModuleBody SpecificationPartConstruct) | (ModuleBody ModuleSubprogramPartConstruct) ;
IntrinsicStmt ::= LblDef "intrinsic" IntrinsicList EOS ;
ComplexComponent ::= (Sign? Icon) | RDcon | Name ;
ProgramStmt ::= LblDef "program" ProgramName EOS ;
AllocatableStmt ::= LblDef "allocatable" ColonColon? ArrayAllocationList EOS ;
CommaExpr ::= "," Expr ;
IntentPar ::= DummyArgName ;
DoubleDoStmt ::= "do" LblRef CommaLoopControl EOS ;
AddOp ::= "+" | "-" ;
CPrimary ::= COperand | ("(" CExpr ")") ;
RelOp ::= (SP ".eq." SP) | (SP ".ne." SP) | (SP ".lt." SP) | (SP ".le." SP) | (SP ".gt." SP) | (SP ".ge." SP) ;
 RelOp ::= "==" | "/=" | "<" | "<=" | ">" | ">=" ;
BodyPlusInternals ::= (Body ContainsStmt InternalSubprogram) | (ContainsStmt InternalSubprogram) | (BodyPlusInternals InternalSubprogram) ;
ImplicitRange ::= Ident "-" Ident ;
ArrayAllocationList ::= ArrayAllocation+ ;
ConcatOp ::= "/" SPOFF "/" SPON ;
TypeSpec ::= "integer" | "real" | "doubleprecision" | "complex" | "logical" | "character" | ("character" LengthSelector) ;
 TypeSpec ::= ("integer" KindSelector) | ("real" KindSelector) | ("double" "precision") | ("complex" KindSelector) | ("character" CharSelector) | ("logical" KindSelector) | ("type" "(" TypeName ")") ;
BodyConstruct ::= SpecificationPartConstruct | ExecutableConstruct ;
FunctionReference ::= Name "(" ")" ;
 FunctionReference ::= Name "(" FunctionArgList ")" ;
SelectCaseRange ::= (SelectCaseBody EndSelectStmt) | EndSelectStmt ;
UFPrimary ::= Icon | Scon | NameDataRef | FunctionReference | ("(" UFExpr ")") ;
SelectCaseBody ::= CaseStmt | (SelectCaseBody CaseBodyConstruct) ;
DimensionStmt ::= LblDef "dimension" ArrayDeclaratorList EOS ;
 DimensionStmt ::= LblDef "dimension" "::" ArrayDeclaratorList EOS ;
PrivateSequenceStmt ::= (LblDef "private" EOS) | (LblDef "sequence" EOS) ;
SFDummyArgName ::= Ident ;
SubscriptList ::= Subscript+ ;
WriteStmt ::= LblDef "write" "(" IoControlSpecList ")" OutputItemList? EOS ;
ExitStmt ::= LblDef "exit" EndName? EOS ;
UFExpr ::= UFTerm | (Sign UFTerm) | (UFExpr AddOp UFTerm) ;
FunctionRange ::= FunctionParList EOS Body? EndFunctionStmt ;
 FunctionRange ::= (FunctionParList "result" "(" Name ")" EOS BodyPlusInternals EndFunctionStmt) | (FunctionParList "result" "(" Name ")" EOS Body EndFunctionStmt) | (FunctionParList "result" "(" Name ")" EOS EndFunctionStmt) | (FunctionParList EOS BodyPlusInternals EndFunctionStmt) ;
CommaLoopControl ::= ","? LoopControl ;
ElseIfConstruct ::= ElseIfStmt ConditionalBody ;
FormatIdentifier ::= LblRef | CExpr | "*" ;
BlockDataStmt ::= LblDef "blockdata" BlockDataName? EOS ;
 BlockDataStmt ::= LblDef "block" "data" BlockDataName? EOS ;
ImplicitSpecList ::= ImplicitSpec+ ;
UpperBound ::= Expr ;
InputItemList ::= InputItem+ ;
EndFunctionStmt ::= LblDef "end" EOS ;
 EndFunctionStmt ::= (LblDef "endfunction" EndName? EOS) | (LblDef "end" "function" EndName? EOS) ;
ComputedGotoStmt ::= LblDef GoToKw "(" LblRefList ")" ","? Expr EOS ;
ElsewhereStmt ::= LblDef "elsewhere" EOS ;
Expr ::= Level5Expr ;
 Expr ::= Expr DefinedBinaryOp Level5Expr ;
GenericSpec ::= ("operator" "(" DefinedOperator ")") | ("assignment" "(" "=" ")") ;
ModuleProcedureStmt ::= LblDef "module" "procedure" ProcedureNameList EOS ;
FunctionPars ::= {FunctionPar ","}* ;
SubroutineSubprogram ::= LblDef "subroutine" SubroutineName SubroutineRange ;
 SubroutineSubprogram ::= LblDef "recursive" "subroutine" SubroutineName SubroutineRange ;
ProgramUnit ::= MainProgram | FunctionSubprogram | SubroutineSubprogram | BlockDataSubprogram ;
 ProgramUnit ::= Module ;
EndSubroutineStmt ::= LblDef "end" EOS ;
 EndSubroutineStmt ::= (LblDef "endsubroutine" EndName? EOS) | (LblDef "end" "subroutine" EndName? EOS) ;
BozLiteralConstant ::= Bcon | Ocon | Zcon ;
ArrayConstructor ::= "(/" AcValueList "/)" ;
--------------------java::java-1-jls-impl.bgf--------------------
ReturnStatement ::= "return" Expression? ";" ;
ArrayAccess ::= Name "[" Expression "]" ;
 ArrayAccess ::= PrimaryNoNewArray "[" Expression "]" ;
PrimaryNoNewArray ::= Literal ;
 PrimaryNoNewArray ::= "this" ;
 PrimaryNoNewArray ::= "(" Expression ")" ;
 PrimaryNoNewArray ::= ClassInstanceCreationExpression ;
 PrimaryNoNewArray ::= FieldAccess ;
 PrimaryNoNewArray ::= MethodInvocation ;
 PrimaryNoNewArray ::= ArrayAccess ;
WhileStatementNoShortIf ::= "while" "(" Expression ")" StatementNoShortIf ;
Modifier ::= "public" ;
 Modifier ::= "protected" ;
 Modifier ::= "private" ;
 Modifier ::= "static" ;
 Modifier ::= "abstract" ;
 Modifier ::= "final" ;
 Modifier ::= "native" ;
 Modifier ::= "synchronized" ;
 Modifier ::= "transient" ;
 Modifier ::= "volatile" ;
InterfaceType ::= ClassOrInterfaceType ;
SingleTypeImportDeclaration ::= "import" Name ";" ;
TypeImportOnDemandDeclaration ::= "import" Name "." "*" ";" ;
ArrayCreationExpression ::= "new" PrimitiveType DimExprs Dims? ;
 ArrayCreationExpression ::= "new" ClassOrInterfaceType DimExprs Dims? ;
MethodHeader ::= Modifiers? Type MethodDeclarator Throws? ;
 MethodHeader ::= Modifiers? "void" MethodDeclarator Throws? ;
VariableDeclarator ::= VariableDeclaratorId ;
 VariableDeclarator ::= VariableDeclaratorId "=" VariableInitializer ;
Assignment ::= LeftHandSide AssignmentOperator AssignmentExpression ;
InterfaceMemberDeclarations ::= InterfaceMemberDeclaration ;
 InterfaceMemberDeclarations ::= InterfaceMemberDeclarations InterfaceMemberDeclaration ;
CatchClause ::= "catch" "(" FormalParameter ")" Block ;
ArrayInitializer ::= "{" VariableInitializers? ","? "}" ;
VariableDeclaratorId ::= Identifier ;
 VariableDeclaratorId ::= VariableDeclaratorId "[" "]" ;
PreIncrementExpression ::= "++" UnaryExpression ;
Primary ::= PrimaryNoNewArray ;
 Primary ::= ArrayCreationExpression ;
FieldAccess ::= Primary "." Identifier ;
 FieldAccess ::= "super" "." Identifier ;
LabeledStatementNoShortIf ::= Identifier ":" StatementNoShortIf ;
ForUpdate ::= StatementExpressionList ;
PostfixExpression ::= Primary ;
 PostfixExpression ::= Name ;
 PostfixExpression ::= PostIncrementExpression ;
 PostfixExpression ::= PostDecrementExpression ;
NumericType ::= IntegralType ;
 NumericType ::= FloatingPointType ;
CompilationUnit ::= PackageDeclaration? ImportDeclarations? TypeDeclarations? ;
InclusiveOrExpression ::= ExclusiveOrExpression ;
 InclusiveOrExpression ::= InclusiveOrExpression "|" ExclusiveOrExpression ;
ForStatement ::= "for" "(" ForInit? ";" Expression? ";" ForUpdate? ")" Statement ;
ClassInstanceCreationExpression ::= "new" ClassType "(" ArgumentList? ")" ;
EmptyStatement ::= ";" ;
TypeDeclaration ::= ClassDeclaration ;
 TypeDeclaration ::= InterfaceDeclaration ;
 TypeDeclaration ::= ";" ;
IfThenElseStatementNoShortIf ::= "if" "(" Expression ")" StatementNoShortIf "else" StatementNoShortIf ;
MethodDeclaration ::= MethodHeader MethodBody ;
Expression ::= AssignmentExpression ;
AbstractMethodDeclaration ::= MethodHeader ";" ;
TypeDeclarations ::= TypeDeclaration ;
 TypeDeclarations ::= TypeDeclarations TypeDeclaration ;
ExtendsInterfaces ::= "extends" InterfaceType ;
 ExtendsInterfaces ::= ExtendsInterfaces "," InterfaceType ;
ClassType ::= ClassOrInterfaceType ;
AssignmentOperator ::= "=" ;
 AssignmentOperator ::= "*=" ;
 AssignmentOperator ::= "/=" ;
 AssignmentOperator ::= "%=" ;
 AssignmentOperator ::= "+=" ;
 AssignmentOperator ::= "-=" ;
 AssignmentOperator ::= "<<=" ;
 AssignmentOperator ::= ">>=" ;
 AssignmentOperator ::= ">>>=" ;
 AssignmentOperator ::= "&=" ;
 AssignmentOperator ::= "^=" ;
 AssignmentOperator ::= "|=" ;
AndExpression ::= EqualityExpression ;
 AndExpression ::= AndExpression "&" EqualityExpression ;
MultiplicativeExpression ::= UnaryExpression ;
 MultiplicativeExpression ::= MultiplicativeExpression "*" UnaryExpression ;
 MultiplicativeExpression ::= MultiplicativeExpression "/" UnaryExpression ;
 MultiplicativeExpression ::= MultiplicativeExpression "%" UnaryExpression ;
LeftHandSide ::= Name ;
 LeftHandSide ::= FieldAccess ;
 LeftHandSide ::= ArrayAccess ;
Name ::= SimpleName ;
 Name ::= QualifiedName ;
ConstructorDeclarator ::= SimpleName "(" FormalParameterList? ")" ;
PostDecrementExpression ::= PostfixExpression "--" ;
VariableInitializer ::= Expression ;
 VariableInitializer ::= ArrayInitializer ;
AdditiveExpression ::= MultiplicativeExpression ;
 AdditiveExpression ::= AdditiveExpression "+" MultiplicativeExpression ;
 AdditiveExpression ::= AdditiveExpression "-" MultiplicativeExpression ;
InterfaceDeclaration ::= Modifiers? "interface" Identifier ExtendsInterfaces? InterfaceBody ;
PrimitiveType ::= NumericType ;
 PrimitiveType ::= "boolean" ;
ImportDeclarations ::= ImportDeclaration ;
 ImportDeclarations ::= ImportDeclarations ImportDeclaration ;
ConditionalExpression ::= ConditionalOrExpression ;
 ConditionalExpression ::= ConditionalOrExpression "?" Expression ":" ConditionalExpression ;
LocalVariableDeclarationStatement ::= LocalVariableDeclaration ";" ;
ConstructorBody ::= "{" ExplicitConstructorInvocation? BlockStatements? "}" ;
SynchronizedStatement ::= "synchronized" "(" Expression ")" Block ;
ShiftExpression ::= AdditiveExpression ;
 ShiftExpression ::= ShiftExpression "<<" AdditiveExpression ;
 ShiftExpression ::= ShiftExpression ">>" AdditiveExpression ;
 ShiftExpression ::= ShiftExpression ">>>" AdditiveExpression ;
SwitchBlock ::= "{" SwitchBlockStatementGroups? SwitchLabels? "}" ;
ExpressionStatement ::= StatementExpression ";" ;
DimExprs ::= DimExpr ;
 DimExprs ::= DimExprs DimExpr ;
IfThenStatement ::= "if" "(" Expression ")" Statement ;
ForStatementNoShortIf ::= "for" "(" ForInit? ";" Expression? ";" ForUpdate? ")" StatementNoShortIf ;
Literal ::= IntegerLiteral ;
 Literal ::= FloatingPointLiteral ;
 Literal ::= BooleanLiteral ;
 Literal ::= CharacterLiteral ;
 Literal ::= StringLiteral ;
 Literal ::= NullLiteral ;
VariableInitializers ::= VariableInitializer ;
 VariableInitializers ::= VariableInitializers "," VariableInitializer ;
Catches ::= CatchClause ;
 Catches ::= Catches CatchClause ;
PostIncrementExpression ::= PostfixExpression "++" ;
StatementExpressionList ::= StatementExpression ;
 StatementExpressionList ::= StatementExpressionList "," StatementExpression ;
StatementWithoutTrailingSubstatement ::= Block ;
 StatementWithoutTrailingSubstatement ::= EmptyStatement ;
 StatementWithoutTrailingSubstatement ::= ExpressionStatement ;
 StatementWithoutTrailingSubstatement ::= SwitchStatement ;
 StatementWithoutTrailingSubstatement ::= DoStatement ;
 StatementWithoutTrailingSubstatement ::= BreakStatement ;
 StatementWithoutTrailingSubstatement ::= ContinueStatement ;
 StatementWithoutTrailingSubstatement ::= ReturnStatement ;
 StatementWithoutTrailingSubstatement ::= SynchronizedStatement ;
 StatementWithoutTrailingSubstatement ::= ThrowStatement ;
 StatementWithoutTrailingSubstatement ::= TryStatement ;
BlockStatement ::= LocalVariableDeclarationStatement ;
 BlockStatement ::= Statement ;
SimpleName ::= Identifier ;
DimExpr ::= "[" Expression "]" ;
ConstantExpression ::= Expression ;
SwitchStatement ::= "switch" "(" Expression ")" SwitchBlock ;
Interfaces ::= "implements" InterfaceTypeList ;
ExclusiveOrExpression ::= AndExpression ;
 ExclusiveOrExpression ::= ExclusiveOrExpression "^" AndExpression ;
ClassOrInterfaceType ::= Name ;
ImportDeclaration ::= SingleTypeImportDeclaration ;
 ImportDeclaration ::= TypeImportOnDemandDeclaration ;
StaticInitializer ::= "static" Block ;
PackageDeclaration ::= "package" Name ";" ;
SwitchLabels ::= SwitchLabel ;
 SwitchLabels ::= SwitchLabels SwitchLabel ;
ClassBodyDeclarations ::= ClassBodyDeclaration ;
 ClassBodyDeclarations ::= ClassBodyDeclarations ClassBodyDeclaration ;
MethodInvocation ::= Name "(" ArgumentList? ")" ;
 MethodInvocation ::= Primary "." Identifier "(" ArgumentList? ")" ;
 MethodInvocation ::= "super" "." Identifier "(" ArgumentList? ")" ;
ClassTypeList ::= ClassType ;
 ClassTypeList ::= ClassTypeList "," ClassType ;
Throws ::= "throws" ClassTypeList ;
Block ::= "{" BlockStatements? "}" ;
ContinueStatement ::= "continue" Identifier? ";" ;
InterfaceMemberDeclaration ::= ConstantDeclaration ;
 InterfaceMemberDeclaration ::= AbstractMethodDeclaration ;
AssignmentExpression ::= ConditionalExpression ;
 AssignmentExpression ::= Assignment ;
FloatingPointType ::= "float" ;
 FloatingPointType ::= "double" ;
Finally ::= "finally" Block ;
ConditionalOrExpression ::= ConditionalAndExpression ;
 ConditionalOrExpression ::= ConditionalOrExpression "||" ConditionalAndExpression ;
WhileStatement ::= "while" "(" Expression ")" Statement ;
Modifiers ::= Modifier ;
 Modifiers ::= Modifiers Modifier ;
IfThenElseStatement ::= "if" "(" Expression ")" StatementNoShortIf "else" Statement ;
InterfaceBody ::= "{" InterfaceMemberDeclarations? "}" ;
Super ::= "extends" ClassType ;
Type ::= PrimitiveType ;
 Type ::= ReferenceType ;
FormalParameter ::= Type VariableDeclaratorId ;
ForInit ::= StatementExpressionList ;
 ForInit ::= LocalVariableDeclaration ;
CastExpression ::= "(" PrimitiveType Dims? ")" UnaryExpression ;
 CastExpression ::= "(" Expression ")" UnaryExpressionNotPlusMinus ;
 CastExpression ::= "(" Name Dims ")" UnaryExpressionNotPlusMinus ;
EqualityExpression ::= RelationalExpression ;
 EqualityExpression ::= EqualityExpression "==" RelationalExpression ;
 EqualityExpression ::= EqualityExpression "!=" RelationalExpression ;
BreakStatement ::= "break" Identifier? ";" ;
Statement ::= StatementWithoutTrailingSubstatement ;
 Statement ::= LabeledStatement ;
 Statement ::= IfThenStatement ;
 Statement ::= IfThenElseStatement ;
 Statement ::= WhileStatement ;
 Statement ::= ForStatement ;
SwitchBlockStatementGroups ::= SwitchBlockStatementGroup ;
 SwitchBlockStatementGroups ::= SwitchBlockStatementGroups SwitchBlockStatementGroup ;
SwitchBlockStatementGroup ::= SwitchLabels BlockStatements ;
ThrowStatement ::= "throw" Expression ";" ;
StatementExpression ::= Assignment ;
 StatementExpression ::= PreIncrementExpression ;
 StatementExpression ::= PreDecrementExpression ;
 StatementExpression ::= PostIncrementExpression ;
 StatementExpression ::= PostDecrementExpression ;
 StatementExpression ::= MethodInvocation ;
 StatementExpression ::= ClassInstanceCreationExpression ;
MethodBody ::= Block ;
 MethodBody ::= ";" ;
ConstructorDeclaration ::= Modifiers? ConstructorDeclarator Throws? ConstructorBody ;
FieldDeclaration ::= Modifiers? Type VariableDeclarators ";" ;
RelationalExpression ::= ShiftExpression ;
 RelationalExpression ::= RelationalExpression "<" ShiftExpression ;
 RelationalExpression ::= RelationalExpression ">" ShiftExpression ;
 RelationalExpression ::= RelationalExpression "<=" ShiftExpression ;
 RelationalExpression ::= RelationalExpression ">=" ShiftExpression ;
 RelationalExpression ::= RelationalExpression "instanceof" ReferenceType ;
LabeledStatement ::= Identifier ":" Statement ;
ExplicitConstructorInvocation ::= "this" "(" ArgumentList? ")" ";" ;
 ExplicitConstructorInvocation ::= "super" "(" ArgumentList? ")" ";" ;
BlockStatements ::= BlockStatement ;
 BlockStatements ::= BlockStatements BlockStatement ;
InterfaceTypeList ::= InterfaceType ;
 InterfaceTypeList ::= InterfaceTypeList "," InterfaceType ;
StatementNoShortIf ::= StatementWithoutTrailingSubstatement ;
 StatementNoShortIf ::= LabeledStatementNoShortIf ;
 StatementNoShortIf ::= IfThenElseStatementNoShortIf ;
 StatementNoShortIf ::= WhileStatementNoShortIf ;
 StatementNoShortIf ::= ForStatementNoShortIf ;
QualifiedName ::= Name "." Identifier ;
IntegralType ::= "byte" ;
 IntegralType ::= "short" ;
 IntegralType ::= "int" ;
 IntegralType ::= "long" ;
 IntegralType ::= "char" ;
VariableDeclarators ::= VariableDeclarator ;
 VariableDeclarators ::= VariableDeclarators "," VariableDeclarator ;
ArgumentList ::= Expression ;
 ArgumentList ::= ArgumentList "," Expression ;
ClassBody ::= "{" ClassBodyDeclarations? "}" ;
FormalParameterList ::= FormalParameter ;
 FormalParameterList ::= FormalParameterList "," FormalParameter ;
ConstantDeclaration ::= FieldDeclaration ;
TryStatement ::= "try" Block Catches ;
 TryStatement ::= "try" Block Catches? Finally ;
ArrayType ::= PrimitiveType "[" "]" ;
 ArrayType ::= Name "[" "]" ;
 ArrayType ::= ArrayType "[" "]" ;
LocalVariableDeclaration ::= Type VariableDeclarators ;
MethodDeclarator ::= Identifier "(" FormalParameterList? ")" ;
 MethodDeclarator ::= MethodDeclarator "[" "]" ;
Dims ::= "[" "]" ;
 Dims ::= Dims "[" "]" ;
UnaryExpressionNotPlusMinus ::= PostfixExpression ;
 UnaryExpressionNotPlusMinus ::= "~" UnaryExpression ;
 UnaryExpressionNotPlusMinus ::= "!" UnaryExpression ;
 UnaryExpressionNotPlusMinus ::= CastExpression ;
ConditionalAndExpression ::= InclusiveOrExpression ;
 ConditionalAndExpression ::= ConditionalAndExpression "&&" InclusiveOrExpression ;
PreDecrementExpression ::= "--" UnaryExpression ;
ClassMemberDeclaration ::= FieldDeclaration ;
 ClassMemberDeclaration ::= MethodDeclaration ;
UnaryExpression ::= PreIncrementExpression ;
 UnaryExpression ::= PreDecrementExpression ;
 UnaryExpression ::= "+" UnaryExpression ;
 UnaryExpression ::= "-" UnaryExpression ;
 UnaryExpression ::= UnaryExpressionNotPlusMinus ;
ReferenceType ::= ClassOrInterfaceType ;
 ReferenceType ::= ArrayType ;
DoStatement ::= "do" Statement "while" "(" Expression ")" ";" ;
ClassDeclaration ::= Modifiers? "class" Identifier Super? Interfaces? ClassBody ;
ClassBodyDeclaration ::= ClassMemberDeclaration ;
 ClassBodyDeclaration ::= StaticInitializer ;
 ClassBodyDeclaration ::= ConstructorDeclaration ;
SwitchLabel ::= "case" ConstantExpression ":" ;
 SwitchLabel ::= "default" ":" ;
--------------------java::java-1-jls-read.bgf--------------------
ReturnStatement ::= "return" Expression? ";" ;
ArrayAccess ::= ExpressionName "[" Expression "]" ;
 ArrayAccess ::= PrimaryNoNewArray "[" Expression "]" ;
PrimaryNoNewArray ::= Literal ;
 PrimaryNoNewArray ::= "this" ;
 PrimaryNoNewArray ::= "(" Expression ")" ;
 PrimaryNoNewArray ::= ClassInstanceCreationExpression ;
 PrimaryNoNewArray ::= FieldAccess ;
 PrimaryNoNewArray ::= MethodInvocation ;
 PrimaryNoNewArray ::= ArrayAccess ;
WhileStatementNoShortIf ::= "while" "(" Expression ")" StatementNoShortIf ;
AbstractMethodModifiers ::= AbstractMethodModifier ;
 AbstractMethodModifiers ::= AbstractMethodModifiers AbstractMethodModifier ;
MethodModifier ::= "public" ;
 MethodModifier ::= "protected" ;
 MethodModifier ::= "private" ;
 MethodModifier ::= "abstract" ;
 MethodModifier ::= "static" ;
 MethodModifier ::= "final" ;
 MethodModifier ::= "synchronized" ;
 MethodModifier ::= "native" ;
InterfaceType ::= TypeName ;
SingleTypeImportDeclaration ::= "import" TypeName ";" ;
TypeImportOnDemandDeclaration ::= "import" PackageName "." "*" ";" ;
ArrayCreationExpression ::= "new" PrimitiveType DimExprs Dims? ;
 ArrayCreationExpression ::= "new" TypeName DimExprs Dims? ;
MethodHeader ::= MethodModifiers? ResultType MethodDeclarator Throws? ;
VariableDeclarator ::= VariableDeclaratorId ;
 VariableDeclarator ::= VariableDeclaratorId "=" VariableInitializer ;
Assignment ::= LeftHandSide AssignmentOperator AssignmentExpression ;
InterfaceMemberDeclarations ::= InterfaceMemberDeclaration ;
 InterfaceMemberDeclarations ::= InterfaceMemberDeclarations InterfaceMemberDeclaration ;
CatchClause ::= "catch" "(" FormalParameter ")" Block ;
ArrayInitializer ::= "{" VariableInitializers? ","? "}" ;
VariableDeclaratorId ::= Identifier ;
 VariableDeclaratorId ::= VariableDeclaratorId "[" "]" ;
PreIncrementExpression ::= "++" UnaryExpression ;
Primary ::= PrimaryNoNewArray ;
 Primary ::= ArrayCreationExpression ;
FieldAccess ::= Primary "." Identifier ;
 FieldAccess ::= "super" "." Identifier ;
LabeledStatementNoShortIf ::= Identifier ":" StatementNoShortIf ;
ForUpdate ::= StatementExpressionList ;
FieldModifier ::= "public" ;
 FieldModifier ::= "protected" ;
 FieldModifier ::= "private" ;
 FieldModifier ::= "final" ;
 FieldModifier ::= "static" ;
 FieldModifier ::= "transient" ;
 FieldModifier ::= "volatile" ;
ConstructorModifier ::= "public" ;
 ConstructorModifier ::= "protected" ;
 ConstructorModifier ::= "private" ;
PackageName ::= Identifier ;
 PackageName ::= PackageName "." Identifier ;
PostfixExpression ::= Primary ;
 PostfixExpression ::= ExpressionName ;
 PostfixExpression ::= PostIncrementExpression ;
 PostfixExpression ::= PostDecrementExpression ;
NumericType ::= IntegralType ;
 NumericType ::= FloatingPointType ;
InclusiveOrExpression ::= ExclusiveOrExpression ;
 InclusiveOrExpression ::= InclusiveOrExpression "|" ExclusiveOrExpression ;
CompilationUnit ::= PackageDeclaration? ImportDeclarations? TypeDeclarations? ;
ForStatement ::= "for" "(" ForInit? ";" Expression? ";" ForUpdate? ")" Statement ;
ClassInstanceCreationExpression ::= "new" ClassType "(" ArgumentList? ")" ;
ConstructorModifiers ::= ConstructorModifier ;
 ConstructorModifiers ::= ConstructorModifiers ConstructorModifier ;
FieldModifiers ::= FieldModifier ;
 FieldModifiers ::= FieldModifiers FieldModifier ;
EmptyStatement ::= ";" ;
TypeDeclaration ::= ClassDeclaration ;
 TypeDeclaration ::= InterfaceDeclaration ;
 TypeDeclaration ::= ";" ;
IfThenElseStatementNoShortIf ::= "if" "(" Expression ")" StatementNoShortIf "else" StatementNoShortIf ;
ConstantModifier ::= "public" ;
 ConstantModifier ::= "static" ;
 ConstantModifier ::= "final" ;
AbstractMethodModifier ::= "public" ;
 AbstractMethodModifier ::= "abstract" ;
MethodDeclaration ::= MethodHeader MethodBody ;
Expression ::= AssignmentExpression ;
AbstractMethodDeclaration ::= AbstractMethodModifiers? ResultType MethodDeclarator Throws? ";" ;
TypeDeclarations ::= TypeDeclaration ;
 TypeDeclarations ::= TypeDeclarations TypeDeclaration ;
ExtendsInterfaces ::= "extends" InterfaceType ;
 ExtendsInterfaces ::= ExtendsInterfaces "," InterfaceType ;
ClassType ::= TypeName ;
AssignmentOperator ::= "=" ;
 AssignmentOperator ::= "*=" ;
 AssignmentOperator ::= "/=" ;
 AssignmentOperator ::= "%=" ;
 AssignmentOperator ::= "+=" ;
 AssignmentOperator ::= "-=" ;
 AssignmentOperator ::= "<<=" ;
 AssignmentOperator ::= ">>=" ;
 AssignmentOperator ::= ">>>=" ;
 AssignmentOperator ::= "&=" ;
 AssignmentOperator ::= "^=" ;
 AssignmentOperator ::= "|=" ;
AndExpression ::= EqualityExpression ;
 AndExpression ::= AndExpression "&" EqualityExpression ;
MultiplicativeExpression ::= UnaryExpression ;
 MultiplicativeExpression ::= MultiplicativeExpression "*" UnaryExpression ;
 MultiplicativeExpression ::= MultiplicativeExpression "/" UnaryExpression ;
 MultiplicativeExpression ::= MultiplicativeExpression "%" UnaryExpression ;
LeftHandSide ::= ExpressionName ;
 LeftHandSide ::= FieldAccess ;
 LeftHandSide ::= ArrayAccess ;
ConstructorDeclarator ::= Identifier "(" FormalParameterList? ")" ;
PostDecrementExpression ::= PostfixExpression "--" ;
VariableInitializer ::= Expression ;
 VariableInitializer ::= ArrayInitializer ;
AdditiveExpression ::= MultiplicativeExpression ;
 AdditiveExpression ::= AdditiveExpression "+" MultiplicativeExpression ;
 AdditiveExpression ::= AdditiveExpression "-" MultiplicativeExpression ;
InterfaceDeclaration ::= InterfaceModifiers? "interface" Identifier ExtendsInterfaces? InterfaceBody ;
PrimitiveType ::= NumericType ;
 PrimitiveType ::= "boolean" ;
ImportDeclarations ::= ImportDeclaration ;
 ImportDeclarations ::= ImportDeclarations ImportDeclaration ;
ConditionalExpression ::= ConditionalOrExpression ;
 ConditionalExpression ::= ConditionalOrExpression "?" Expression ":" ConditionalExpression ;
LocalVariableDeclarationStatement ::= LocalVariableDeclaration ";" ;
ConstructorBody ::= "{" ExplicitConstructorInvocation? BlockStatements? "}" ;
SynchronizedStatement ::= "synchronized" "(" Expression ")" Block ;
ShiftExpression ::= AdditiveExpression ;
 ShiftExpression ::= ShiftExpression "<<" AdditiveExpression ;
 ShiftExpression ::= ShiftExpression ">>" AdditiveExpression ;
 ShiftExpression ::= ShiftExpression ">>>" AdditiveExpression ;
SwitchBlock ::= "{" SwitchBlockStatementGroups? SwitchLabels? "}" ;
AmbiguousName ::= Identifier ;
 AmbiguousName ::= AmbiguousName "." Identifier ;
ExpressionStatement ::= StatementExpression ";" ;
DimExprs ::= DimExpr ;
 DimExprs ::= DimExprs DimExpr ;
IfThenStatement ::= "if" "(" Expression ")" Statement ;
ForStatementNoShortIf ::= "for" "(" ForInit? ";" Expression? ";" ForUpdate? ")" StatementNoShortIf ;
Literal ::= IntegerLiteral ;
 Literal ::= FloatingPointLiteral ;
 Literal ::= BooleanLiteral ;
 Literal ::= CharacterLiteral ;
 Literal ::= StringLiteral ;
 Literal ::= NullLiteral ;
VariableInitializers ::= VariableInitializer ;
 VariableInitializers ::= VariableInitializers "," VariableInitializer ;
Catches ::= CatchClause ;
 Catches ::= Catches CatchClause ;
PostIncrementExpression ::= PostfixExpression "++" ;
StatementExpressionList ::= StatementExpression ;
 StatementExpressionList ::= StatementExpressionList "," StatementExpression ;
StatementWithoutTrailingSubstatement ::= Block ;
 StatementWithoutTrailingSubstatement ::= EmptyStatement ;
 StatementWithoutTrailingSubstatement ::= ExpressionStatement ;
 StatementWithoutTrailingSubstatement ::= SwitchStatement ;
 StatementWithoutTrailingSubstatement ::= DoStatement ;
 StatementWithoutTrailingSubstatement ::= BreakStatement ;
 StatementWithoutTrailingSubstatement ::= ContinueStatement ;
 StatementWithoutTrailingSubstatement ::= ReturnStatement ;
 StatementWithoutTrailingSubstatement ::= SynchronizedStatement ;
 StatementWithoutTrailingSubstatement ::= ThrowStatement ;
 StatementWithoutTrailingSubstatement ::= TryStatement ;
BlockStatement ::= LocalVariableDeclarationStatement ;
 BlockStatement ::= Statement ;
DimExpr ::= "[" Expression "]" ;
ConstantExpression ::= Expression ;
SwitchStatement ::= "switch" "(" Expression ")" SwitchBlock ;
MethodModifiers ::= MethodModifier ;
 MethodModifiers ::= MethodModifiers MethodModifier ;
Interfaces ::= "implements" InterfaceTypeList ;
ExclusiveOrExpression ::= AndExpression ;
 ExclusiveOrExpression ::= ExclusiveOrExpression "^" AndExpression ;
ClassOrInterfaceType ::= ClassType ;
 ClassOrInterfaceType ::= InterfaceType ;
ImportDeclaration ::= SingleTypeImportDeclaration ;
 ImportDeclaration ::= TypeImportOnDemandDeclaration ;
StaticInitializer ::= "static" Block ;
PackageDeclaration ::= "package" PackageName ";" ;
SwitchLabels ::= SwitchLabel ;
 SwitchLabels ::= SwitchLabels SwitchLabel ;
ClassBodyDeclarations ::= ClassBodyDeclaration ;
 ClassBodyDeclarations ::= ClassBodyDeclarations ClassBodyDeclaration ;
MethodInvocation ::= MethodName "(" ArgumentList? ")" ;
 MethodInvocation ::= Primary "." Identifier "(" ArgumentList? ")" ;
 MethodInvocation ::= "super" "." Identifier "(" ArgumentList? ")" ;
ClassTypeList ::= ClassType ;
 ClassTypeList ::= ClassTypeList "," ClassType ;
Throws ::= "throws" ClassTypeList ;
Block ::= "{" BlockStatements? "}" ;
ContinueStatement ::= "continue" Identifier? ";" ;
InterfaceMemberDeclaration ::= ConstantDeclaration ;
 InterfaceMemberDeclaration ::= AbstractMethodDeclaration ;
AssignmentExpression ::= ConditionalExpression ;
 AssignmentExpression ::= Assignment ;
FloatingPointType ::= "float" ;
 FloatingPointType ::= "double" ;
ExpressionName ::= Identifier ;
 ExpressionName ::= AmbiguousName "." Identifier ;
Finally ::= "finally" Block ;
InterfaceModifiers ::= InterfaceModifier ;
 InterfaceModifiers ::= InterfaceModifiers InterfaceModifier ;
ConditionalOrExpression ::= ConditionalAndExpression ;
 ConditionalOrExpression ::= ConditionalOrExpression "||" ConditionalAndExpression ;
WhileStatement ::= "while" "(" Expression ")" Statement ;
IfThenElseStatement ::= "if" "(" Expression ")" StatementNoShortIf "else" Statement ;
InterfaceBody ::= "{" InterfaceMemberDeclarations? "}" ;
Super ::= "extends" ClassType ;
Type ::= PrimitiveType ;
 Type ::= ReferenceType ;
FormalParameter ::= Type VariableDeclaratorId ;
ForInit ::= StatementExpressionList ;
 ForInit ::= LocalVariableDeclaration ;
CastExpression ::= "(" PrimitiveType Dims? ")" UnaryExpression ;
 CastExpression ::= "(" ReferenceType ")" UnaryExpressionNotPlusMinus ;
EqualityExpression ::= RelationalExpression ;
 EqualityExpression ::= EqualityExpression "==" RelationalExpression ;
 EqualityExpression ::= EqualityExpression "!=" RelationalExpression ;
BreakStatement ::= "break" Identifier? ";" ;
ClassModifier ::= "public" ;
 ClassModifier ::= "abstract" ;
 ClassModifier ::= "final" ;
Statement ::= StatementWithoutTrailingSubstatement ;
 Statement ::= LabeledStatement ;
 Statement ::= IfThenStatement ;
 Statement ::= IfThenElseStatement ;
 Statement ::= WhileStatement ;
 Statement ::= ForStatement ;
SwitchBlockStatementGroups ::= SwitchBlockStatementGroup ;
 SwitchBlockStatementGroups ::= SwitchBlockStatementGroups SwitchBlockStatementGroup ;
SwitchBlockStatementGroup ::= SwitchLabels BlockStatements ;
ThrowStatement ::= "throw" Expression ";" ;
StatementExpression ::= Assignment ;
 StatementExpression ::= PreIncrementExpression ;
 StatementExpression ::= PreDecrementExpression ;
 StatementExpression ::= PostIncrementExpression ;
 StatementExpression ::= PostDecrementExpression ;
 StatementExpression ::= MethodInvocation ;
 StatementExpression ::= ClassInstanceCreationExpression ;
MethodBody ::= Block ;
 MethodBody ::= ";" ;
ConstructorDeclaration ::= ConstructorModifiers? ConstructorDeclarator Throws? ConstructorBody ;
FieldDeclaration ::= FieldModifiers? Type VariableDeclarators ";" ;
RelationalExpression ::= ShiftExpression ;
 RelationalExpression ::= RelationalExpression "<" ShiftExpression ;
 RelationalExpression ::= RelationalExpression ">" ShiftExpression ;
 RelationalExpression ::= RelationalExpression "<=" ShiftExpression ;
 RelationalExpression ::= RelationalExpression ">=" ShiftExpression ;
 RelationalExpression ::= RelationalExpression "instanceof" ReferenceType ;
LabeledStatement ::= Identifier ":" Statement ;
ExplicitConstructorInvocation ::= "this" "(" ArgumentList? ")" ";" ;
 ExplicitConstructorInvocation ::= "super" "(" ArgumentList? ")" ";" ;
BlockStatements ::= BlockStatement ;
 BlockStatements ::= BlockStatements BlockStatement ;
InterfaceTypeList ::= InterfaceType ;
 InterfaceTypeList ::= InterfaceTypeList "," InterfaceType ;
MethodName ::= Identifier ;
 MethodName ::= AmbiguousName "." Identifier ;
StatementNoShortIf ::= StatementWithoutTrailingSubstatement ;
 StatementNoShortIf ::= LabeledStatementNoShortIf ;
 StatementNoShortIf ::= IfThenElseStatementNoShortIf ;
 StatementNoShortIf ::= WhileStatementNoShortIf ;
 StatementNoShortIf ::= ForStatementNoShortIf ;
IntegralType ::= "byte" ;
 IntegralType ::= "short" ;
 IntegralType ::= "int" ;
 IntegralType ::= "long" ;
 IntegralType ::= "char" ;
VariableDeclarators ::= VariableDeclarator ;
 VariableDeclarators ::= VariableDeclarators "," VariableDeclarator ;
ArgumentList ::= Expression ;
 ArgumentList ::= ArgumentList "," Expression ;
ClassBody ::= "{" ClassBodyDeclarations? "}" ;
ConstantModifiers ::= ConstantModifier ;
 ConstantModifiers ::= ConstantModifiers ConstantModifier ;
FormalParameterList ::= FormalParameter ;
 FormalParameterList ::= FormalParameterList "," FormalParameter ;
ResultType ::= Type ;
 ResultType ::= "void" ;
ConstantDeclaration ::= ConstantModifiers? Type VariableDeclarator ;
TryStatement ::= "try" Block Catches ;
 TryStatement ::= "try" Block Catches? Finally ;
ArrayType ::= Type "[" "]" ;
LocalVariableDeclaration ::= Type VariableDeclarators ;
MethodDeclarator ::= Identifier "(" FormalParameterList? ")" ;
 MethodDeclarator ::= MethodDeclarator "[" "]" ;
InterfaceModifier ::= "public" ;
 InterfaceModifier ::= "abstract" ;
Dims ::= "[" "]" ;
 Dims ::= Dims "[" "]" ;
UnaryExpressionNotPlusMinus ::= PostfixExpression ;
 UnaryExpressionNotPlusMinus ::= "~" UnaryExpression ;
 UnaryExpressionNotPlusMinus ::= "!" UnaryExpression ;
 UnaryExpressionNotPlusMinus ::= CastExpression ;
ConditionalAndExpression ::= InclusiveOrExpression ;
 ConditionalAndExpression ::= ConditionalAndExpression "&&" InclusiveOrExpression ;
PreDecrementExpression ::= "--" UnaryExpression ;
ClassMemberDeclaration ::= FieldDeclaration ;
 ClassMemberDeclaration ::= MethodDeclaration ;
UnaryExpression ::= PreIncrementExpression ;
 UnaryExpression ::= PreDecrementExpression ;
 UnaryExpression ::= "+" UnaryExpression ;
 UnaryExpression ::= "-" UnaryExpression ;
 UnaryExpression ::= UnaryExpressionNotPlusMinus ;
ReferenceType ::= ClassOrInterfaceType ;
 ReferenceType ::= ArrayType ;
TypeName ::= Identifier ;
 TypeName ::= PackageName "." Identifier ;
ClassModifiers ::= ClassModifier ;
 ClassModifiers ::= ClassModifiers ClassModifier ;
DoStatement ::= "do" Statement "while" "(" Expression ")" ";" ;
ClassDeclaration ::= ClassModifiers? "class" Identifier Super? Interfaces? ClassBody ;
ClassBodyDeclaration ::= ClassMemberDeclaration ;
 ClassBodyDeclaration ::= StaticInitializer ;
 ClassBodyDeclaration ::= ConstructorDeclaration ;
SwitchLabel ::= "case" ConstantExpression ":" ;
 SwitchLabel ::= "default" ":" ;
--------------------java::java-2-jls-impl.bgf--------------------
Selector ::= "." Identifier Arguments? ;
 Selector ::= "." "this" ;
 Selector ::= "." "super" SuperSuffix ;
 Selector ::= "." "new" InnerCreator ;
 Selector ::= "[" Expression "]" ;
ClassOrInterfaceDeclaration ::= ModifiersOpt ClassDeclaration | InterfaceDeclaration ;
ConstantExpression ::= Expression ;
IdentifierSuffix ::= "[" ("]" BracketsOpt "." "class") | (Expression "]") ;
 IdentifierSuffix ::= Arguments ;
 IdentifierSuffix ::= "." "class" | "this" | ("super" Arguments) | ("new" InnerCreator) ;
ParExpression ::= "(" Expression ")" ;
Modifier ::= "public" ;
 Modifier ::= "protected" ;
 Modifier ::= "private" ;
 Modifier ::= "static" ;
 Modifier ::= "abstract" ;
 Modifier ::= "final" ;
 Modifier ::= "native" ;
 Modifier ::= "synchronized" ;
 Modifier ::= "transient" ;
 Modifier ::= "volatile" ;
 Modifier ::= "strictfp" ;
ImportDeclaration ::= "import" Identifier ("." Identifier)* ("." "*")? ";" ;
ConstantDeclaratorsRest ::= ConstantDeclaratorRest ("," ConstantDeclarator)* ;
VariableDeclarator ::= Identifier VariableDeclaratorRest ;
Block ::= "{" BlockStatements "}" ;
VoidInterfaceMethodDeclaratorRest ::= FormalParameters BracketsOpt ("throws" QualifiedIdentifierList)? ";" ;
CatchClause ::= "catch" "(" FormalParameter ")" Block ;
ArrayInitializer ::= "{" (VariableInitializer ("," VariableInitializer)* ","?)? "}" ;
BasicType ::= "byte" ;
 BasicType ::= "short" ;
 BasicType ::= "char" ;
 BasicType ::= "int" ;
 BasicType ::= "long" ;
 BasicType ::= "float" ;
 BasicType ::= "double" ;
 BasicType ::= "boolean" ;
VariableDeclaratorId ::= Identifier BracketsOpt ;
InterfaceMethodOrFieldDecl ::= Type Identifier InterfaceMethodOrFieldRest ;
Primary ::= "(" Expression ")" ;
 Primary ::= "this" Arguments? ;
 Primary ::= "super" SuperSuffix ;
 Primary ::= Literal ;
 Primary ::= "new" Creator ;
 Primary ::= Identifier ("." Identifier)* IdentifierSuffix? ;
 Primary ::= BasicType BracketsOpt "." "class" ;
 Primary ::= "void" "." "class" ;
VariableDeclaratorRest ::= BracketsOpt ("=" VariableInitializer)? ;
MethodOrFieldDecl ::= Type Identifier MethodOrFieldRest ;
InterfaceMemberDecl ::= InterfaceMethodOrFieldDecl ;
 InterfaceMemberDecl ::= "void" Identifier VoidInterfaceMethodDeclaratorRest ;
 InterfaceMemberDecl ::= ClassOrInterfaceDeclaration ;
InterfaceBody ::= "{" InterfaceBodyDeclaration* "}" ;
Type ::= Identifier ("." Identifier)* BracketsOpt ;
 Type ::= BasicType ;
FormalParameter ::= "final"? Type VariableDeclaratorId ;
FormalParameters ::= "(" (FormalParameter ("," FormalParameter)*)? ")" ;
ForInit ::= StatementExpression MoreStatementExpressions ;
 ForInit ::= "final"? Type VariableDeclarators ;
ForUpdate ::= StatementExpression MoreStatementExpressions ;
Statement ::= Block ;
 Statement ::= "if" ParExpression Statement ("else" Statement)? ;
 Statement ::= "for" "(" ForInit? ";" Expression? ";" ForUpdate? ")" Statement ;
 Statement ::= "while" ParExpression Statement ;
 Statement ::= "do" Statement "while" ParExpression ";" ;
 Statement ::= "try" Block Catches | (Catches? "finally" Block) ;
 Statement ::= "switch" ParExpression "{" SwitchBlockStatementGroups "}" ;
 Statement ::= "synchronized" ParExpression Block ;
 Statement ::= "return" Expression? ";" ;
 Statement ::= "throw" Expression ";" ;
 Statement ::= "break" Identifier? ";" ;
 Statement ::= "continue" Identifier? ";" ;
 Statement ::= ";" ;
 Statement ::= ExpressionStatement ;
 Statement ::= Identifier ":" Statement ;
SwitchBlockStatementGroups ::= SwitchBlockStatementGroup* ;
SwitchBlockStatementGroup ::= SwitchLabel BlockStatements ;
BracketsOpt ::= ("[" "]")* ;
CompilationUnit ::= ("package" QualifiedIdentifier ";")? ImportDeclaration* TypeDeclaration* ;
StatementExpression ::= Expression ;
QualifiedIdentifier ::= Identifier ("." Identifier)* ;
MethodBody ::= Block ;
TypeDeclaration ::= ClassOrInterfaceDeclaration ;
 TypeDeclaration ::= ";" ;
Expression ::= Expression1 (AssignmentOperator Expression1)? ;
ModifiersOpt ::= Modifier* ;
Arguments ::= "(" (Expression ("," Expression)*)? ")" ;
PrefixOp ::= "++" ;
 PrefixOp ::= "--" ;
 PrefixOp ::= "!" ;
 PrefixOp ::= "~" ;
 PrefixOp ::= "+" ;
 PrefixOp ::= "-" ;
AssignmentOperator ::= "=" ;
 AssignmentOperator ::= "+=" ;
 AssignmentOperator ::= "-=" ;
 AssignmentOperator ::= "*=" ;
 AssignmentOperator ::= "/=" ;
 AssignmentOperator ::= "&=" ;
 AssignmentOperator ::= "|=" ;
 AssignmentOperator ::= "^=" ;
 AssignmentOperator ::= "%=" ;
 AssignmentOperator ::= "<<=" ;
 AssignmentOperator ::= ">>=" ;
 AssignmentOperator ::= ">>>=" ;
BlockStatements ::= BlockStatement* ;
ClassCreatorRest ::= Arguments ClassBody? ;
ArrayCreatorRest ::= "[" ("]" BracketsOpt ArrayInitializer) | (Expression "]" ("[" Expression "]")* BracketsOpt) ;
VariableDeclarators ::= VariableDeclarator ("," VariableDeclarator)* ;
VariableInitializer ::= ArrayInitializer ;
 VariableInitializer ::= Expression ;
InterfaceDeclaration ::= "interface" Identifier ("extends" TypeList)? InterfaceBody ;
ConstructorDeclaratorRest ::= FormalParameters ("throws" QualifiedIdentifierList)? MethodBody ;
InterfaceMethodDeclaratorRest ::= FormalParameters BracketsOpt ("throws" QualifiedIdentifierList)? ";" ;
InterfaceBodyDeclaration ::= ";" ;
 InterfaceBodyDeclaration ::= ModifiersOpt InterfaceMemberDecl ;
LocalVariableDeclarationStatement ::= "final"? Type VariableDeclarators ";" ;
ClassBody ::= "{" ClassBodyDeclaration* "}" ;
TypeList ::= Type ("," Type)* ;
ExpressionStatement ::= StatementExpression ";" ;
InnerCreator ::= Identifier ClassCreatorRest ;
PostfixOp ::= "++" ;
 PostfixOp ::= "--" ;
ConstantDeclarator ::= Identifier ConstantDeclaratorRest ;
Infixop ::= "||" ;
 Infixop ::= "&&" ;
 Infixop ::= "|" ;
 Infixop ::= "^" ;
 Infixop ::= "&" ;
 Infixop ::= "==" ;
 Infixop ::= "!=" ;
 Infixop ::= "<" ;
 Infixop ::= ">" ;
 Infixop ::= "<=" ;
 Infixop ::= ">=" ;
 Infixop ::= "<<" ;
 Infixop ::= ">>" ;
 Infixop ::= ">>>" ;
 Infixop ::= "+" ;
 Infixop ::= "-" ;
 Infixop ::= "*" ;
 Infixop ::= "/" ;
 Infixop ::= "%" ;
InterfaceMethodOrFieldRest ::= ConstantDeclaratorsRest ";" ;
 InterfaceMethodOrFieldRest ::= InterfaceMethodDeclaratorRest ;
Literal ::= IntegerLiteral ;
 Literal ::= FloatingPointLiteral ;
 Literal ::= CharacterLiteral ;
 Literal ::= StringLiteral ;
 Literal ::= BooleanLiteral ;
 Literal ::= NullLiteral ;
Creator ::= QualifiedIdentifier ArrayCreatorRest | ClassCreatorRest ;
SuperSuffix ::= Arguments ;
 SuperSuffix ::= "." Identifier Arguments? ;
MethodOrFieldRest ::= VariableDeclaratorRest ;
 MethodOrFieldRest ::= MethodDeclaratorRest ;
Catches ::= CatchClause CatchClause* ;
ConstantDeclaratorRest ::= BracketsOpt "=" VariableInitializer ;
MethodDeclaratorRest ::= FormalParameters BracketsOpt ("throws" QualifiedIdentifierList)? MethodBody | ";" ;
MemberDecl ::= MethodOrFieldDecl ;
 MemberDecl ::= "void" Identifier MethodDeclaratorRest ;
 MemberDecl ::= Identifier ConstructorDeclaratorRest ;
 MemberDecl ::= ClassOrInterfaceDeclaration ;
QualifiedIdentifierList ::= QualifiedIdentifier ("," QualifiedIdentifier)* ;
ClassDeclaration ::= "class" Identifier ("extends" Type)? ("implements" TypeList)? ClassBody ;
BlockStatement ::= LocalVariableDeclarationStatement ;
 BlockStatement ::= ClassOrInterfaceDeclaration ;
 BlockStatement ::= (Identifier ":")? Statement ;
MoreStatementExpressions ::= ("," StatementExpression)* ;
ClassBodyDeclaration ::= ";" ;
 ClassBodyDeclaration ::= "static"? Block ;
 ClassBodyDeclaration ::= ModifiersOpt MemberDecl ;
SwitchLabel ::= "case" ConstantExpression ":" ;
 SwitchLabel ::= "default" ":" ;
--------------------java::jdt.bgf--------------------
ReturnStatement ::= expression::α ;
SimpleName ::= identifier::α declaration::α ;
ArrayAccess ::= array::α index::α ;
SwitchStatement ::= expression::α (statements::α)+ ;
MemberRef ::= name::α qualifier::α ;
Modifier ::= abstract::α final::α native::α none::α private::α protected::α public::α static::α strictfp::α synchronized::α transient::α volatile::α ;
MethodRefParameter ::= name::α type::α varargs::α ;
VariableDeclarationExpression ::= (fragments::α)+ (modifiers::α)+ type::α ;
ThisExpression ::= qualifier::α ;
TypeLiteral ::= type::α ;
ImportDeclaration ::= onDemand::α static::α name::α ;
PackageDeclaration ::= (annotations::α)+ javadoc::α name::α ;
ParameterizedType ::= type::α (typeArguments::α)+ ;
SingleMemberAnnotation ::= value::α ;
MethodInvocation ::= (arguments::α)+ expression::α name::α (typeArguments::α)+ ;
TextElement ::= text::α ;
TypeParameter ::= name::α (typeBounds::α)+ ;
Block ::= (statements::α)+ ;
Assignment ::= leftHandSide::α operator::α rightHandSide::α ;
PrefixExpression ::= operand::α operator::α ;
CatchClause ::= body::α exception::α ;
ArrayInitializer ::= (expressions::α)+ ;
ContinueStatement ::= label::α ;
InfixExpression ::= (extendedOperands::α)+ leftOperand::α operator::α rightOperand::α ;
CharacterLiteral ::= charValue::α escapedValue::α ;
AST ::= root::α ;
InfixExpressionOperatorKind ::= (GREATER_EQUALS::ε) | (OR::ε) | (RIGHT_SHIFT_SIGNED::ε) | (MINUS::ε) | (XOR::ε) | (LESS_EQUALS::ε) | (EQUALS::ε) | (NOT_EQUALS::ε) | (AND::ε) | (PLUS::ε) | (GREATER::ε) | (CONDITIONAL_OR::ε) | (REMAINDER::ε) | (LESS::ε) | (LEFT_SHIFT::ε) | (RIGHT_SHIFT_UNSIGNED::ε) | (CONDITIONAL_AND::ε) | (TIMES::ε) | (DIVIDE::ε) ;
WhileStatement ::= body::α expression::α ;
FieldAccess ::= expression::α name::α ;
EnhancedForStatement ::= body::α expression::α parameter::α ;
Type ::= ArrayType ;
 Type ::= ParameterizedType ;
 Type ::= PrimitiveType ;
 Type ::= QualifiedType ;
 Type ::= SimpleType ;
 Type ::= WildcardType ;
BodyDeclaration ::= AbstractTypeDeclaration ;
 BodyDeclaration ::= AnnotationTypeMemberDeclaration ;
 BodyDeclaration ::= EnumConstantDeclaration ;
 BodyDeclaration ::= FieldDeclaration ;
 BodyDeclaration ::= Initializer ;
 BodyDeclaration ::= MethodDeclaration ;
CastExpression ::= expression::α type::α ;
AnnotationTypeMemberDeclaration ::= default::α name::α type::α ;
SingleVariableDeclaration ::= type::α varargs::α (modifiers::α)+ ;
QualifiedType ::= name::α qualifier::α ;
EnumConstantDeclaration ::= (arguments::α)+ anonymousClassDeclaration::α name::α ;
WildcardType ::= bound::α upperBound::α ;
ParenthesizedExpression ::= expression::α ;
MethodRef ::= name::α qualifier::α (parameters::α)+ ;
VariableDeclarationStatement ::= (fragments::α)+ (modifiers::α)+ type::α ;
MemberValuePair ::= name::α value::α ;
BreakStatement ::= label::α ;
ExtendedModifier ::= Modifier ;
 ExtendedModifier ::= Annotation ;
Annotation ::= MarkerAnnotation ;
 Annotation ::= NormalAnnotation ;
 Annotation ::= SingleMemberAnnotation ;
Statement ::= AssertStatement ;
 Statement ::= Block ;
 Statement ::= BreakStatement ;
 Statement ::= ConstructorInvocation ;
 Statement ::= ContinueStatement ;
 Statement ::= DoStatement ;
 Statement ::= EmptyStatement ;
 Statement ::= EnhancedForStatement ;
 Statement ::= ExpressionStatement ;
 Statement ::= ForStatement ;
 Statement ::= IfStatement ;
 Statement ::= LabeledStatement ;
 Statement ::= ReturnStatement ;
 Statement ::= SuperConstructorInvocation ;
 Statement ::= SwitchCase ;
 Statement ::= SwitchStatement ;
 Statement ::= SynchronizedStatement ;
 Statement ::= ThrowStatement ;
 Statement ::= TryStatement ;
 Statement ::= TypeDeclarationStatement ;
 Statement ::= VariableDeclarationStatement ;
 Statement ::= WhileStatement ;
AnonymousClassDeclaration ::= (bodyDeclarations::α)+ ;
PostfixExpression ::= operand::α operator::α ;
SuperMethodInvocation ::= (arguments::α)+ name::α qualifier::α (typeArguments::α)+ ;
ThrowStatement ::= expression::α ;
CompilationUnit ::= (comments::α)+ package::α (imports::α)+ (types::α)+ ;
ForStatement ::= body::α expression::α (initializers::α)+ (updaters::α)+ ;
EmptyStatement ::= ε ;
Initializer ::= body::α ;
TypeDeclaration ::= superclassType::α interface::α (superInterfaceTypes::α)+ (typeParameters::α)+ ;
FieldDeclaration ::= (fragments::α)+ type::α ;
Comment ::= BlockComment ;
 Comment ::= Javadoc ;
 Comment ::= LineComment ;
StringLiteral ::= escapedValue::α literalValue::α ;
VariableDeclaration ::= SingleVariableDeclaration ;
 VariableDeclaration ::= VariableDeclarationFragment ;
AbstractTypeDeclaration ::= AnnotationTypeDeclaration ;
 AbstractTypeDeclaration ::= EnumDeclaration ;
 AbstractTypeDeclaration ::= TypeDeclaration ;
LabeledStatement ::= body::α label::α ;
MethodDeclaration ::= body::α extraDimensions::α name::α returnType::α constructor::α varargs::α (parameters::α)+ (thrownExceptions::α)+ (typeParameters::α)+ ;
ArrayCreation ::= (dimensions::α)+ initializer::α type::α ;
Expression ::= ArrayAccess ;
 Expression ::= ArrayCreation ;
 Expression ::= ArrayInitializer ;
 Expression ::= Assignment ;
 Expression ::= BooleanLiteral ;
 Expression ::= CastExpression ;
 Expression ::= CharacterLiteral ;
 Expression ::= ClassInstanceCreation ;
 Expression ::= ConditionalExpression ;
 Expression ::= FieldAccess ;
 Expression ::= InfixExpression ;
 Expression ::= InstanceofExpression ;
 Expression ::= MethodInvocation ;
 Expression ::= Name ;
 Expression ::= NullLiteral ;
 Expression ::= NumberLiteral ;
 Expression ::= ParenthesizedExpression ;
 Expression ::= PostfixExpression ;
 Expression ::= PrefixExpression ;
 Expression ::= StringLiteral ;
 Expression ::= SuperFieldAccess ;
 Expression ::= SuperMethodInvocation ;
 Expression ::= ThisExpression ;
 Expression ::= TypeLiteral ;
 Expression ::= VariableDeclarationExpression ;
 Expression ::= Annotation ;
Javadoc ::= (tags::α)+ ;
IfStatement ::= elseStatement::α expression::α thenStatement::α ;
BlockComment ::= alternateRoot::α ;
String ::= string() ;
VariableDeclarationFragment ::= extraDimensions::α initializer::α name::α ;
SimpleType ::= name::α ;
Name ::= QualifiedName ;
 Name ::= SimpleName ;
LineComment ::= alternateRoot::α ;
MarkerAnnotation ::= typeName::α ;
AssertStatement ::= expression::α message::α ;
QualifiedName ::= name::α qualifier::α ;
SwitchCase ::= expression::α default::α ;
SuperFieldAccess ::= name::α qualifier::α ;
TagElement ::= (fragments::α)+ tagName::α nested::α ;
PrimitiveType ::= code::α ;
ConditionalExpression ::= elseExpression::α expression::α thenExpression::α ;
Integer ::= integer() ;
SynchronizedStatement ::= body::α expression::α ;
EnumDeclaration ::= (superInterfaceTypes::α)+ (enumConstants::α)+ ;
ExpressionStatement ::= expression::α ;
NormalAnnotation ::= (values::α)+ ;
TryStatement ::= (catchClauses::α)+ body::α finally::α ;
ArrayType ::= componentType::α dimensions::α elementType::α ;
AnnotationTypeDeclaration ::= (bodyDeclarations::α)+ name::α localTypeDeclaration::α memberTypeDeclaration::α packageMemberTypeDeclaration::α ;
TypeDeclarationStatement ::= declaration::α ;
SuperConstructorInvocation ::= (arguments::α)+ expression::α (typeArguments::α)+ ;
ClassInstanceCreation ::= (arguments::α)+ anonymousClassDeclaration::α expression::α type::α (typeArguments::α)+ ;
AssignementOperatorKind ::= (RIGHT_SHIFT_SIGNED_ASSIGN::ε) | (BIT_XOR_ASSIGN::ε) | (TIMES_ASSIGN::ε) | (LEFT_SHIFT_ASSIGN::ε) | (MINUS_ASSIGN::ε) | (BIT_OR_ASSIGN::ε) | (PLUS_ASSIGN::ε) | (ASSIGN::ε) | (RIGHT_SHIFT_UNSIGNED_ASSIGN::ε) | (REMAINDER_ASSIGN::ε) | (DIVIDE_ASSIGN::ε) | (BIT_AND_ASSIGN::ε) ;
PrefixExpresssionOperatorKind ::= (MINUS::ε) | (NOT::ε) | (DECREMENT::ε) | (COMPLEMENT::ε) | (INCREMENT::ε) | (PLUS::ε) ;
ConstructorInvocation ::= (arguments::α)+ (typeArguments::α)+ ;
PostfixExpresssionOperatorKind ::= (INCREMENT::ε) | (DECREMENT::ε) ;
NullLiteral ::= resolveBoxing::α resolveUnboxing::α ;
Boolean ::= "true" | "false" ;
BooleanLiteral ::= booleanValue::α ;
NumberLiteral ::= token::α ;
DoStatement ::= body::α expression::α ;
InstanceofExpression ::= leftOperand::α rightOperand::α ;
ASTNode ::= AnonymousClassDeclaration ;
 ASTNode ::= BodyDeclaration ;
 ASTNode ::= CatchClause ;
 ASTNode ::= Comment ;
 ASTNode ::= CompilationUnit ;
 ASTNode ::= Expression ;
 ASTNode ::= ImportDeclaration ;
 ASTNode ::= MemberRef ;
 ASTNode ::= MemberValuePair ;
 ASTNode ::= MethodRef ;
 ASTNode ::= MethodRefParameter ;
 ASTNode ::= PackageDeclaration ;
 ASTNode ::= Statement ;
 ASTNode ::= TagElement ;
 ASTNode ::= TextElement ;
 ASTNode ::= Type ;
 ASTNode ::= TypeParameter ;
 ASTNode ::= VariableDeclaration ;
 ASTNode ::= Modifier ;
--------------------java::java-2-jls-read.bgf--------------------
ReturnStatement ::= "return" Expression? ";" ;
ArrayAccess ::= ExpressionName "[" Expression "]" ;
 ArrayAccess ::= PrimaryNoNewArray "[" Expression "]" ;
PrimaryNoNewArray ::= Literal ;
 PrimaryNoNewArray ::= Type "." "class" ;
 PrimaryNoNewArray ::= "void" "." "class" ;
 PrimaryNoNewArray ::= "this" ;
 PrimaryNoNewArray ::= ClassName "." "this" ;
 PrimaryNoNewArray ::= "(" Expression ")" ;
 PrimaryNoNewArray ::= ClassInstanceCreationExpression ;
 PrimaryNoNewArray ::= FieldAccess ;
 PrimaryNoNewArray ::= MethodInvocation ;
 PrimaryNoNewArray ::= ArrayAccess ;
WhileStatementNoShortIf ::= "while" "(" Expression ")" StatementNoShortIf ;
AbstractMethodModifiers ::= AbstractMethodModifier ;
 AbstractMethodModifiers ::= AbstractMethodModifiers AbstractMethodModifier ;
MethodModifier ::= "public" ;
 MethodModifier ::= "protected" ;
 MethodModifier ::= "private" ;
 MethodModifier ::= "abstract" ;
 MethodModifier ::= "static" ;
 MethodModifier ::= "final" ;
 MethodModifier ::= "synchronized" ;
 MethodModifier ::= "native" ;
 MethodModifier ::= "strictfp" ;
InterfaceType ::= TypeName ;
SingleTypeImportDeclaration ::= "import" TypeName ";" ;
TypeImportOnDemandDeclaration ::= "import" PackageOrTypeName "." "*" ";" ;
ArrayCreationExpression ::= "new" PrimitiveType DimExprs Dims? ;
 ArrayCreationExpression ::= "new" TypeName DimExprs Dims? ;
 ArrayCreationExpression ::= "new" PrimitiveType Dims ArrayInitializer ;
 ArrayCreationExpression ::= "new" TypeName Dims ArrayInitializer ;
MethodHeader ::= MethodModifiers? ResultType MethodDeclarator Throws? ;
VariableDeclarator ::= VariableDeclaratorId ;
 VariableDeclarator ::= VariableDeclaratorId "=" VariableInitializer ;
InstanceInitializer ::= Block ;
Assignment ::= LeftHandSide AssignmentOperator AssignmentExpression ;
InterfaceMemberDeclarations ::= InterfaceMemberDeclaration ;
 InterfaceMemberDeclarations ::= InterfaceMemberDeclarations InterfaceMemberDeclaration ;
CatchClause ::= "catch" "(" FormalParameter ")" Block ;
ArrayInitializer ::= "{" VariableInitializers? ","? "}" ;
VariableDeclaratorId ::= Identifier ;
 VariableDeclaratorId ::= VariableDeclaratorId "[" "]" ;
PreIncrementExpression ::= "++" UnaryExpression ;
Primary ::= PrimaryNoNewArray ;
 Primary ::= ArrayCreationExpression ;
FieldAccess ::= Primary "." Identifier ;
 FieldAccess ::= "super" "." Identifier ;
 FieldAccess ::= ClassName "." "super" "." Identifier ;
LabeledStatementNoShortIf ::= Identifier ":" StatementNoShortIf ;
ForUpdate ::= StatementExpressionList ;
FieldModifier ::= "public" ;
 FieldModifier ::= "protected" ;
 FieldModifier ::= "private" ;
 FieldModifier ::= "static" ;
 FieldModifier ::= "final" ;
 FieldModifier ::= "transient" ;
 FieldModifier ::= "volatile" ;
ConstructorModifier ::= "public" ;
 ConstructorModifier ::= "protected" ;
 ConstructorModifier ::= "private" ;
PackageName ::= Identifier ;
 PackageName ::= PackageName "." Identifier ;
PostfixExpression ::= Primary ;
 PostfixExpression ::= ExpressionName ;
 PostfixExpression ::= PostIncrementExpression ;
 PostfixExpression ::= PostDecrementExpression ;
NumericType ::= IntegralType ;
 NumericType ::= FloatingPointType ;
InclusiveOrExpression ::= ExclusiveOrExpression ;
 InclusiveOrExpression ::= InclusiveOrExpression "|" ExclusiveOrExpression ;
CompilationUnit ::= PackageDeclaration? ImportDeclarations? TypeDeclarations? ;
ForStatement ::= "for" "(" ForInit? ";" Expression? ";" ForUpdate? ")" Statement ;
ClassInstanceCreationExpression ::= "new" ClassOrInterfaceType "(" ArgumentList? ")" ClassBody? ;
 ClassInstanceCreationExpression ::= Primary "." "new" Identifier "(" ArgumentList? ")" ClassBody? ;
ConstructorModifiers ::= ConstructorModifier ;
 ConstructorModifiers ::= ConstructorModifiers ConstructorModifier ;
FieldModifiers ::= FieldModifier ;
 FieldModifiers ::= FieldModifiers FieldModifier ;
EmptyStatement ::= ";" ;
TypeDeclaration ::= ClassDeclaration ;
 TypeDeclaration ::= InterfaceDeclaration ;
 TypeDeclaration ::= ";" ;
IfThenElseStatementNoShortIf ::= "if" "(" Expression ")" StatementNoShortIf "else" StatementNoShortIf ;
ConstantModifier ::= "public" ;
 ConstantModifier ::= "static" ;
 ConstantModifier ::= "final" ;
AbstractMethodModifier ::= "public" ;
 AbstractMethodModifier ::= "abstract" ;
MethodDeclaration ::= MethodHeader MethodBody ;
Expression ::= AssignmentExpression ;
AbstractMethodDeclaration ::= AbstractMethodModifiers? ResultType MethodDeclarator Throws? ";" ;
TypeDeclarations ::= TypeDeclaration ;
 TypeDeclarations ::= TypeDeclarations TypeDeclaration ;
ExtendsInterfaces ::= "extends" InterfaceType ;
 ExtendsInterfaces ::= ExtendsInterfaces "," InterfaceType ;
ClassType ::= TypeName ;
AssignmentOperator ::= "=" ;
 AssignmentOperator ::= "*=" ;
 AssignmentOperator ::= "/=" ;
 AssignmentOperator ::= "%=" ;
 AssignmentOperator ::= "+=" ;
 AssignmentOperator ::= "-=" ;
 AssignmentOperator ::= "<<=" ;
 AssignmentOperator ::= ">>=" ;
 AssignmentOperator ::= ">>>=" ;
 AssignmentOperator ::= "&=" ;
 AssignmentOperator ::= "^=" ;
 AssignmentOperator ::= "|=" ;
AndExpression ::= EqualityExpression ;
 AndExpression ::= AndExpression "&" EqualityExpression ;
PackageOrTypeName ::= Identifier ;
 PackageOrTypeName ::= PackageOrTypeName "." Identifier ;
MultiplicativeExpression ::= UnaryExpression ;
 MultiplicativeExpression ::= MultiplicativeExpression "*" UnaryExpression ;
 MultiplicativeExpression ::= MultiplicativeExpression "/" UnaryExpression ;
 MultiplicativeExpression ::= MultiplicativeExpression "%" UnaryExpression ;
LeftHandSide ::= ExpressionName ;
 LeftHandSide ::= FieldAccess ;
 LeftHandSide ::= ArrayAccess ;
ConstructorDeclarator ::= Identifier "(" FormalParameterList? ")" ;
PostDecrementExpression ::= PostfixExpression "--" ;
VariableInitializer ::= Expression ;
 VariableInitializer ::= ArrayInitializer ;
AdditiveExpression ::= MultiplicativeExpression ;
 AdditiveExpression ::= AdditiveExpression "+" MultiplicativeExpression ;
 AdditiveExpression ::= AdditiveExpression "-" MultiplicativeExpression ;
InterfaceDeclaration ::= InterfaceModifiers? "interface" Identifier ExtendsInterfaces? InterfaceBody ;
PrimitiveType ::= NumericType ;
 PrimitiveType ::= "boolean" ;
ImportDeclarations ::= ImportDeclaration ;
 ImportDeclarations ::= ImportDeclarations ImportDeclaration ;
ConditionalExpression ::= ConditionalOrExpression ;
 ConditionalExpression ::= ConditionalOrExpression "?" Expression ":" ConditionalExpression ;
ConstructorBody ::= "{" ExplicitConstructorInvocation? BlockStatements? "}" ;
LocalVariableDeclarationStatement ::= LocalVariableDeclaration ";" ;
SynchronizedStatement ::= "synchronized" "(" Expression ")" Block ;
ShiftExpression ::= AdditiveExpression ;
 ShiftExpression ::= ShiftExpression "<<" AdditiveExpression ;
 ShiftExpression ::= ShiftExpression ">>" AdditiveExpression ;
 ShiftExpression ::= ShiftExpression ">>>" AdditiveExpression ;
SwitchBlock ::= "{" SwitchBlockStatementGroups? SwitchLabels? "}" ;
AmbiguousName ::= Identifier ;
 AmbiguousName ::= AmbiguousName "." Identifier ;
ExpressionStatement ::= StatementExpression ";" ;
DimExprs ::= DimExpr ;
 DimExprs ::= DimExprs DimExpr ;
IfThenStatement ::= "if" "(" Expression ")" Statement ;
ForStatementNoShortIf ::= "for" "(" ForInit? ";" Expression? ";" ForUpdate? ")" StatementNoShortIf ;
Literal ::= IntegerLiteral ;
 Literal ::= FloatingPointLiteral ;
 Literal ::= BooleanLiteral ;
 Literal ::= CharacterLiteral ;
 Literal ::= StringLiteral ;
 Literal ::= NullLiteral ;
VariableInitializers ::= VariableInitializer ;
 VariableInitializers ::= VariableInitializers "," VariableInitializer ;
Catches ::= CatchClause ;
 Catches ::= Catches CatchClause ;
PostIncrementExpression ::= PostfixExpression "++" ;
StatementExpressionList ::= StatementExpression ;
 StatementExpressionList ::= StatementExpressionList "," StatementExpression ;
StatementWithoutTrailingSubstatement ::= Block ;
 StatementWithoutTrailingSubstatement ::= EmptyStatement ;
 StatementWithoutTrailingSubstatement ::= ExpressionStatement ;
 StatementWithoutTrailingSubstatement ::= SwitchStatement ;
 StatementWithoutTrailingSubstatement ::= DoStatement ;
 StatementWithoutTrailingSubstatement ::= BreakStatement ;
 StatementWithoutTrailingSubstatement ::= ContinueStatement ;
 StatementWithoutTrailingSubstatement ::= ReturnStatement ;
 StatementWithoutTrailingSubstatement ::= SynchronizedStatement ;
 StatementWithoutTrailingSubstatement ::= ThrowStatement ;
 StatementWithoutTrailingSubstatement ::= TryStatement ;
BlockStatement ::= LocalVariableDeclarationStatement ;
 BlockStatement ::= ClassDeclaration ;
 BlockStatement ::= Statement ;
DimExpr ::= "[" Expression "]" ;
ConstantExpression ::= Expression ;
SwitchStatement ::= "switch" "(" Expression ")" SwitchBlock ;
MethodModifiers ::= MethodModifier ;
 MethodModifiers ::= MethodModifiers MethodModifier ;
Interfaces ::= "implements" InterfaceTypeList ;
ExclusiveOrExpression ::= AndExpression ;
 ExclusiveOrExpression ::= ExclusiveOrExpression "^" AndExpression ;
ClassOrInterfaceType ::= ClassType ;
 ClassOrInterfaceType ::= InterfaceType ;
ImportDeclaration ::= SingleTypeImportDeclaration ;
 ImportDeclaration ::= TypeImportOnDemandDeclaration ;
StaticInitializer ::= "static" Block ;
PackageDeclaration ::= "package" PackageName ";" ;
SwitchLabels ::= SwitchLabel ;
 SwitchLabels ::= SwitchLabels SwitchLabel ;
ClassBodyDeclarations ::= ClassBodyDeclaration ;
 ClassBodyDeclarations ::= ClassBodyDeclarations ClassBodyDeclaration ;
MethodInvocation ::= MethodName "(" ArgumentList? ")" ;
 MethodInvocation ::= Primary "." Identifier "(" ArgumentList? ")" ;
 MethodInvocation ::= "super" "." Identifier "(" ArgumentList? ")" ;
 MethodInvocation ::= ClassName "." "super" "." Identifier "(" ArgumentList? ")" ;
ClassTypeList ::= ClassType ;
 ClassTypeList ::= ClassTypeList "," ClassType ;
Block ::= "{" BlockStatements? "}" ;
Throws ::= "throws" ClassTypeList ;
ContinueStatement ::= "continue" Identifier? ";" ;
InterfaceMemberDeclaration ::= ConstantDeclaration ;
 InterfaceMemberDeclaration ::= AbstractMethodDeclaration ;
 InterfaceMemberDeclaration ::= ClassDeclaration ;
 InterfaceMemberDeclaration ::= InterfaceDeclaration ;
 InterfaceMemberDeclaration ::= ";" ;
AssignmentExpression ::= ConditionalExpression ;
 AssignmentExpression ::= Assignment ;
FloatingPointType ::= "float" ;
 FloatingPointType ::= "double" ;
ExpressionName ::= Identifier ;
 ExpressionName ::= AmbiguousName "." Identifier ;
Finally ::= "finally" Block ;
InterfaceModifiers ::= InterfaceModifier ;
 InterfaceModifiers ::= InterfaceModifiers InterfaceModifier ;
ConditionalOrExpression ::= ConditionalAndExpression ;
 ConditionalOrExpression ::= ConditionalOrExpression "||" ConditionalAndExpression ;
WhileStatement ::= "while" "(" Expression ")" Statement ;
IfThenElseStatement ::= "if" "(" Expression ")" StatementNoShortIf "else" Statement ;
InterfaceBody ::= "{" InterfaceMemberDeclarations? "}" ;
Super ::= "extends" ClassType ;
Type ::= PrimitiveType ;
 Type ::= ReferenceType ;
FormalParameter ::= "final"? Type VariableDeclaratorId ;
ForInit ::= StatementExpressionList ;
 ForInit ::= LocalVariableDeclaration ;
CastExpression ::= "(" PrimitiveType Dims? ")" UnaryExpression ;
 CastExpression ::= "(" ReferenceType ")" UnaryExpressionNotPlusMinus ;
EqualityExpression ::= RelationalExpression ;
 EqualityExpression ::= EqualityExpression "==" RelationalExpression ;
 EqualityExpression ::= EqualityExpression "!=" RelationalExpression ;
BreakStatement ::= "break" Identifier? ";" ;
ClassModifier ::= "public" ;
 ClassModifier ::= "protected" ;
 ClassModifier ::= "private" ;
 ClassModifier ::= "abstract" ;
 ClassModifier ::= "static" ;
 ClassModifier ::= "final" ;
 ClassModifier ::= "strictfp" ;
Statement ::= StatementWithoutTrailingSubstatement ;
 Statement ::= LabeledStatement ;
 Statement ::= IfThenStatement ;
 Statement ::= IfThenElseStatement ;
 Statement ::= WhileStatement ;
 Statement ::= ForStatement ;
SwitchBlockStatementGroups ::= SwitchBlockStatementGroup ;
 SwitchBlockStatementGroups ::= SwitchBlockStatementGroups SwitchBlockStatementGroup ;
SwitchBlockStatementGroup ::= SwitchLabels BlockStatements ;
ThrowStatement ::= "throw" Expression ";" ;
StatementExpression ::= Assignment ;
 StatementExpression ::= PreIncrementExpression ;
 StatementExpression ::= PreDecrementExpression ;
 StatementExpression ::= PostIncrementExpression ;
 StatementExpression ::= PostDecrementExpression ;
 StatementExpression ::= MethodInvocation ;
 StatementExpression ::= ClassInstanceCreationExpression ;
MethodBody ::= Block ;
 MethodBody ::= ";" ;
ConstructorDeclaration ::= ConstructorModifiers? ConstructorDeclarator Throws? ConstructorBody ;
FieldDeclaration ::= FieldModifiers? Type VariableDeclarators ";" ;
RelationalExpression ::= ShiftExpression ;
 RelationalExpression ::= RelationalExpression "<" ShiftExpression ;
 RelationalExpression ::= RelationalExpression ">" ShiftExpression ;
 RelationalExpression ::= RelationalExpression "<=" ShiftExpression ;
 RelationalExpression ::= RelationalExpression ">=" ShiftExpression ;
 RelationalExpression ::= RelationalExpression "instanceof" ReferenceType ;
LabeledStatement ::= Identifier ":" Statement ;
ExplicitConstructorInvocation ::= "this" "(" ArgumentList? ")" ";" ;
 ExplicitConstructorInvocation ::= "super" "(" ArgumentList? ")" ";" ;
 ExplicitConstructorInvocation ::= Primary "." "super" "(" ArgumentList? ")" ";" ;
BlockStatements ::= BlockStatement ;
 BlockStatements ::= BlockStatements BlockStatement ;
InterfaceTypeList ::= InterfaceType ;
 InterfaceTypeList ::= InterfaceTypeList "," InterfaceType ;
MethodName ::= Identifier ;
 MethodName ::= AmbiguousName "." Identifier ;
StatementNoShortIf ::= StatementWithoutTrailingSubstatement ;
 StatementNoShortIf ::= LabeledStatementNoShortIf ;
 StatementNoShortIf ::= IfThenElseStatementNoShortIf ;
 StatementNoShortIf ::= WhileStatementNoShortIf ;
 StatementNoShortIf ::= ForStatementNoShortIf ;
IntegralType ::= "byte" ;
 IntegralType ::= "short" ;
 IntegralType ::= "int" ;
 IntegralType ::= "long" ;
 IntegralType ::= "char" ;
VariableDeclarators ::= VariableDeclarator ;
 VariableDeclarators ::= VariableDeclarators "," VariableDeclarator ;
ArgumentList ::= Expression ;
 ArgumentList ::= ArgumentList "," Expression ;
ClassBody ::= "{" ClassBodyDeclarations? "}" ;
ConstantModifiers ::= ConstantModifier ;
 ConstantModifiers ::= ConstantModifiers ConstantModifier ;
FormalParameterList ::= FormalParameter ;
 FormalParameterList ::= FormalParameterList "," FormalParameter ;
ResultType ::= Type ;
 ResultType ::= "void" ;
ConstantDeclaration ::= ConstantModifiers? Type VariableDeclarators ;
TryStatement ::= "try" Block Catches ;
 TryStatement ::= "try" Block Catches? Finally ;
ArrayType ::= Type "[" "]" ;
LocalVariableDeclaration ::= "final"? Type VariableDeclarators ;
MethodDeclarator ::= Identifier "(" FormalParameterList? ")" ;
 MethodDeclarator ::= MethodDeclarator "[" "]" ;
InterfaceModifier ::= "public" ;
 InterfaceModifier ::= "protected" ;
 InterfaceModifier ::= "private" ;
 InterfaceModifier ::= "abstract" ;
 InterfaceModifier ::= "static" ;
 InterfaceModifier ::= "strictfp" ;
Dims ::= "[" "]" ;
 Dims ::= Dims "[" "]" ;
UnaryExpressionNotPlusMinus ::= PostfixExpression ;
 UnaryExpressionNotPlusMinus ::= "~" UnaryExpression ;
 UnaryExpressionNotPlusMinus ::= "!" UnaryExpression ;
 UnaryExpressionNotPlusMinus ::= CastExpression ;
ConditionalAndExpression ::= InclusiveOrExpression ;
 ConditionalAndExpression ::= ConditionalAndExpression "&&" InclusiveOrExpression ;
PreDecrementExpression ::= "--" UnaryExpression ;
ClassMemberDeclaration ::= FieldDeclaration ;
 ClassMemberDeclaration ::= MethodDeclaration ;
 ClassMemberDeclaration ::= ClassDeclaration ;
 ClassMemberDeclaration ::= InterfaceDeclaration ;
 ClassMemberDeclaration ::= ";" ;
UnaryExpression ::= PreIncrementExpression ;
 UnaryExpression ::= PreDecrementExpression ;
 UnaryExpression ::= "+" UnaryExpression ;
 UnaryExpression ::= "-" UnaryExpression ;
 UnaryExpression ::= UnaryExpressionNotPlusMinus ;
ReferenceType ::= ClassOrInterfaceType ;
 ReferenceType ::= ArrayType ;
TypeName ::= Identifier ;
 TypeName ::= PackageOrTypeName "." Identifier ;
ClassModifiers ::= ClassModifier ;
 ClassModifiers ::= ClassModifiers ClassModifier ;
DoStatement ::= "do" Statement "while" "(" Expression ")" ";" ;
ClassName ::= Identifier ;
 ClassName ::= AmbiguousName "." Identifier ;
ClassDeclaration ::= ClassModifiers? "class" Identifier Super? Interfaces? ClassBody ;
ClassBodyDeclaration ::= ClassMemberDeclaration ;
 ClassBodyDeclaration ::= InstanceInitializer ;
 ClassBodyDeclaration ::= StaticInitializer ;
 ClassBodyDeclaration ::= ConstructorDeclaration ;
SwitchLabel ::= "case" ConstantExpression ":" ;
 SwitchLabel ::= "default" ":" ;
--------------------java::java-5-habelitz.bgf--------------------
LONG ::= "long" ;
DOTSTAR ::= ".*" ;
EXTENDS ::= "extends" ;
DIV ::= "/" ;
ASSIGN ::= "=" ;
STATIC ::= "static" ;
SEMI ::= ";" ;
TRANSIENT ::= "transient" ;
PUBLIC ::= "public" ;
QUESTION ::= "?" ;
OR ::= "|" ;
FINALLY ::= "finally" ;
PRIVATE ::= "private" ;
MOD ::= "%" ;
DEC ::= "--" ;
LCURLY ::= "{" ;
BREAK ::= "break" ;
SHORT ::= "short" ;
SUPER ::= "super" ;
CLASS ::= "class" ;
RPAREN ::= ")" ;
FINAL ::= "final" ;
CHAR ::= "char" ;
STRICTFP ::= "strictfp" ;
STAR ::= "*" ;
ELLIPSIS ::= "..." ;
DOUBLE ::= "double" ;
MINUS ::= "-" ;
IDENT ::= JAVA_ID_START JAVA_ID_PART* ;
INT ::= "int" ;
THROWS ::= "throws" ;
LBRACK ::= "[" ;
THROW ::= "throw" ;
ASSERT ::= "assert" ;
COLON ::= ":" ;
INC ::= "++" ;
FLOAT ::= "float" ;
XOR ::= "^" ;
ELSE ::= "else" ;
AND ::= "&" ;
COMMA ::= "," ;
SWITCH ::= "switch" ;
NOT ::= "~" ;
AT ::= "@" ;
RETURN ::= "return" ;
CASE ::= "case" ;
IMPLEMENTS ::= "implements" ;
EXPONENT ::= "e" | "E" ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
INSTANCEOF ::= "instanceof" ;
FOR ::= "for" ;
DOT ::= "." ;
CONTINUE ::= "continue" ;
PACKAGE ::= "package" ;
IMPORT ::= "import" ;
ABSTRACT ::= "abstract" ;
DEFAULT ::= "default" ;
THIS ::= "this" ;
LPAREN ::= "(" ;
IF ::= "if" ;
VOLATILE ::= "volatile" ;
TRY ::= "try" ;
CATCH ::= "catch" ;
RCURLY ::= "}" ;
PLUS ::= "+" ;
INTERFACE ::= "interface" ;
NATIVE ::= "native" ;
EQUAL ::= "==" ;
VOID ::= "void" ;
SYNCHRONIZED ::= "synchronized" ;
WHILE ::= "while" ;
PROTECTED ::= "protected" ;
TRUE ::= "true" ;
DO ::= "do" ;
BOOLEAN ::= "boolean" ;
BYTE ::= "byte" ;
RBRACK ::= "]" ;
NULL ::= "null" ;
FALSE ::= "false" ;
ENUM ::= "enum" ;
NEW ::= "new" ;
--------------------java::java-5-jls-impl.bgf--------------------
Selector ::= "." Identifier Arguments? ;
 Selector ::= "." ExplicitGenericInvocation ;
 Selector ::= "." "this" ;
 Selector ::= "." "super" SuperSuffix ;
 Selector ::= "." "new" NonWildcardTypeArguments? InnerCreator ;
 Selector ::= Expression? ;
ClassOrInterfaceDeclaration ::= Modifier* ClassDeclaration | InterfaceDeclaration ;
ConstantExpression ::= Expression ;
IdentifierSuffix ::= "[" ("]" ("[" "]")* "." "class") | (Expression "]") ;
 IdentifierSuffix ::= Arguments ;
 IdentifierSuffix ::= "." "class" | ExplicitGenericInvocation | "this" | ("super" Arguments) | ("new" NonWildcardTypeArguments? InnerCreator) ;
ParExpression ::= "(" Expression ")" ;
Modifier ::= Annotation ;
 Modifier ::= "public" ;
 Modifier ::= "protected" ;
 Modifier ::= "private" ;
 Modifier ::= "static" ;
 Modifier ::= "abstract" ;
 Modifier ::= "final" ;
 Modifier ::= "native" ;
 Modifier ::= "synchronized" ;
 Modifier ::= "transient" ;
 Modifier ::= "volatile" ;
 Modifier ::= "strictfp" ;
ImportDeclaration ::= "import" "static"? Identifier ("." Identifier)* ("." "*")? ";" ;
ElementValue ::= ConditionalExpression ;
 ElementValue ::= Annotation ;
 ElementValue ::= ElementValueArrayInitializer ;
ForControl ::= ForVarControl ;
 ForControl ::= ForInit ";" Expression? ";" ForUpdate? ;
CreatedName ::= Identifier NonWildcardTypeArguments? ("." Identifier NonWildcardTypeArguments?)* ;
GenericMethodOrConstructorRest ::= Type | "void" Identifier MethodDeclaratorRest ;
 GenericMethodOrConstructorRest ::= Identifier ConstructorDeclaratorRest ;
ConstantDeclaratorsRest ::= ConstantDeclaratorRest ("," ConstantDeclarator)* ;
TypeParameter ::= Identifier ("extends" Bound)? ;
Block ::= "{" BlockStatements "}" ;
VariableDeclarator ::= Identifier VariableDeclaratorRest ;
AnnotationTypeElementDeclarations ::= AnnotationTypeElementDeclaration ;
 AnnotationTypeElementDeclarations ::= AnnotationTypeElementDeclarations AnnotationTypeElementDeclaration ;
AnnotationTypeBody ::= "{" AnnotationTypeElementDeclarations? "}" ;
VoidInterfaceMethodDeclaratorRest ::= FormalParameters ("throws" QualifiedIdentifierList)? ";" ;
CatchClause ::= "catch" "(" FormalParameter ")" Block ;
ArrayInitializer ::= "{" (VariableInitializer ("," VariableInitializer)* ","?)? "}" ;
VariableDeclaratorId ::= Identifier ("[" "]")* ;
BasicType ::= "byte" ;
 BasicType ::= "short" ;
 BasicType ::= "char" ;
 BasicType ::= "int" ;
 BasicType ::= "long" ;
 BasicType ::= "float" ;
 BasicType ::= "double" ;
 BasicType ::= "boolean" ;
AnnotationTypeElementDeclaration ::= Modifier* AnnotationTypeElementRest ;
InterfaceMethodOrFieldDecl ::= Type Identifier InterfaceMethodOrFieldRest ;
EnumConstant ::= Annotations Identifier Arguments? ClassBody? ;
TypeParameters ::= "<" TypeParameter ("," TypeParameter)* ">" ;
EnumBody ::= (EnumConstants? ","? EnumBodyDeclarations?)* ;
Primary ::= ParExpression ;
 Primary ::= NonWildcardTypeArguments ExplicitGenericInvocationSuffix | ("this" Arguments) ;
 Primary ::= "this" Arguments? ;
 Primary ::= "super" SuperSuffix ;
 Primary ::= Literal ;
 Primary ::= "new" Creator ;
 Primary ::= Identifier ("." Identifier)* IdentifierSuffix? ;
 Primary ::= BasicType ("[" "]")* "." "class" ;
 Primary ::= "void" "." "class" ;
VariableDeclaratorRest ::= ("[" "]")* ("=" VariableInitializer)? ;
MethodOrFieldDecl ::= Type Identifier MethodOrFieldRest ;
Bound ::= Type ("&" Type)* ;
ElementValueArrayInitializer ::= "{" ElementValues? ","? "}" ;
InterfaceMemberDecl ::= InterfaceMethodOrFieldDecl ;
 InterfaceMemberDecl ::= InterfaceGenericMethodDecl ;
 InterfaceMemberDecl ::= "void" Identifier VoidInterfaceMethodDeclaratorRest ;
 InterfaceMemberDecl ::= InterfaceDeclaration ;
 InterfaceMemberDecl ::= ClassDeclaration ;
InterfaceBody ::= "{" InterfaceBodyDeclaration* "}" ;
FormalParameter ::= "final"? Type VariableDeclaratorId ;
Type ::= Identifier TypeArguments? ("." Identifier TypeArguments?)* ("[" "]")* ;
 Type ::= BasicType ;
ForInit ::= StatementExpression Expressions ;
FormalParameters ::= "(" FormalParameterDecls? ")" ;
NonWildcardTypeArguments ::= "<" TypeList ">" ;
ExplicitGenericInvocation ::= NonWildcardTypeArguments ExplicitGenericInvocationSuffix ;
ForUpdate ::= StatementExpression Expressions ;
DefaultValue ::= "default" ElementValue ;
FormalParameterDecls ::= ("final" Annotations? Type FormalParameterDeclsRest)? ;
Annotation ::= "@" QualifiedIdentifier ("(" (Identifier "=")? ElementValue ")")? ;
Statement ::= Block ;
 Statement ::= "assert" Expression (":" Expression)? ";" ;
 Statement ::= "if" ParExpression Statement ("else" Statement)? ;
 Statement ::= "for" "(" ForControl ")" Statement ;
 Statement ::= "while" ParExpression Statement ;
 Statement ::= "do" Statement "while" ParExpression ";" ;
 Statement ::= "try" Block Catches | (Catches? "finally" Block) ;
 Statement ::= "switch" ParExpression "{" SwitchBlockStatementGroups "}" ;
 Statement ::= "synchronized" ParExpression Block ;
 Statement ::= "return" Expression? ";" ;
 Statement ::= "throw" Expression ";" ;
 Statement ::= "break" Identifier? ";" ;
 Statement ::= "continue" Identifier? ";" ;
 Statement ::= ";" ;
 Statement ::= StatementExpression ";" ;
 Statement ::= Identifier ":" Statement ;
AnnotationMethodOrConstantRest ::= Identifier AnnotationMethodRest ;
 AnnotationMethodOrConstantRest ::= AnnotationConstantRest ;
SwitchBlockStatementGroups ::= SwitchBlockStatementGroup* ;
InterfaceGenericMethodDecl ::= TypeParameters Type | "void" Identifier InterfaceMethodDeclaratorRest ;
GenericMethodOrConstructorDecl ::= TypeParameters GenericMethodOrConstructorRest ;
SwitchBlockStatementGroup ::= SwitchLabel BlockStatements ;
CompilationUnit ::= (Annotations? "package" QualifiedIdentifier ";")? ImportDeclaration* TypeDeclaration* ;
StatementExpression ::= Expression ;
QualifiedIdentifier ::= Identifier ("." Identifier)* ;
MethodBody ::= Block ;
FormalParameterDeclsRest ::= VariableDeclaratorId ("," FormalParameterDecls)? ;
 FormalParameterDeclsRest ::= "..." VariableDeclaratorId ;
TypeDeclaration ::= ClassOrInterfaceDeclaration ;
 TypeDeclaration ::= ";" ;
ForVarControl ::= "final"? Annotations? Type Identifier ForVarControlRest ;
EnumBodyDeclarations ::= ";" ClassBodyDeclaration* ;
Expressions ::= ("," StatementExpression)* ;
VoidMethodDeclaratorRest ::= FormalParameters ("throws" QualifiedIdentifierList)? MethodBody | ";" ;
Expression ::= Expression1 (AssignmentOperator Expression1)? ;
TypeArgument ::= Type ;
 TypeArgument ::= "?" ("extends" | "super" Type)? ;
Arguments ::= "(" (Expression ("," Expression)*)? ")" ;
ForVarControlRest ::= VariableDeclaratorsRest ";" Expression? ";" ForUpdate? ;
 ForVarControlRest ::= ":" Expression ;
PrefixOp ::= "++" ;
 PrefixOp ::= "--" ;
 PrefixOp ::= "!" ;
 PrefixOp ::= "~" ;
 PrefixOp ::= "+" ;
 PrefixOp ::= "-" ;
InfixOp ::= "||" ;
 InfixOp ::= "&&" ;
 InfixOp ::= "|" ;
 InfixOp ::= "^" ;
 InfixOp ::= "&" ;
 InfixOp ::= "==" ;
 InfixOp ::= "!=" ;
 InfixOp ::= "<" ;
 InfixOp ::= ">" ;
 InfixOp ::= "<=" ;
 InfixOp ::= ">=" ;
 InfixOp ::= "<<" ;
 InfixOp ::= ">>" ;
 InfixOp ::= ">>>" ;
 InfixOp ::= "+" ;
 InfixOp ::= "-" ;
 InfixOp ::= "*" ;
 InfixOp ::= "/" ;
 InfixOp ::= "%" ;
BlockStatements ::= BlockStatement* ;
AssignmentOperator ::= "=" ;
 AssignmentOperator ::= "+=" ;
 AssignmentOperator ::= "-=" ;
 AssignmentOperator ::= "*=" ;
 AssignmentOperator ::= "/=" ;
 AssignmentOperator ::= "&=" ;
 AssignmentOperator ::= "|=" ;
 AssignmentOperator ::= "^=" ;
 AssignmentOperator ::= "%=" ;
 AssignmentOperator ::= "<<=" ;
 AssignmentOperator ::= ">>=" ;
 AssignmentOperator ::= ">>>=" ;
EnumConstants ::= EnumConstant ;
 EnumConstants ::= EnumConstants "," EnumConstant ;
NormalInterfaceDeclaration ::= "interface" Identifier TypeParameters? ("extends" TypeList)? InterfaceBody ;
ClassCreatorRest ::= Arguments ClassBody? ;
ArrayCreatorRest ::= "[" ("]" ("[" "]")* ArrayInitializer) | (Expression "]" ("[" Expression "]")* ("[" "]")*) ;
VariableInitializer ::= ArrayInitializer ;
 VariableInitializer ::= Expression ;
VariableDeclarators ::= VariableDeclarator ("," VariableDeclarator)* ;
InterfaceDeclaration ::= NormalInterfaceDeclaration ;
 InterfaceDeclaration ::= AnnotationTypeDeclaration ;
ConstructorDeclaratorRest ::= FormalParameters ("throws" QualifiedIdentifierList)? MethodBody ;
InterfaceBodyDeclaration ::= ";" ;
 InterfaceBodyDeclaration ::= Modifier* InterfaceMemberDecl ;
InterfaceMethodDeclaratorRest ::= FormalParameters ("[" "]")* ("throws" QualifiedIdentifierList)? ";" ;
ConditionalExpression ::= Expression2 Expression1Rest ;
ElementValues ::= ElementValue ("," ElementValues)? ;
LocalVariableDeclarationStatement ::= "final"? Type VariableDeclarators ";" ;
TypeArguments ::= "<" TypeArgument ("," TypeArgument)* ">" ;
ClassBody ::= "{" ClassBodyDeclaration* "}" ;
VariableDeclaratorsRest ::= VariableDeclaratorRest ("," VariableDeclarator)* ;
EnumDeclaration ::= "enum" Identifier ("implements" TypeList)? EnumBody ;
TypeList ::= Type ("," Type)* ;
InnerCreator ::= Identifier ClassCreatorRest ;
PostfixOp ::= "++" ;
 PostfixOp ::= "--" ;
ConstantDeclarator ::= Identifier ConstantDeclaratorRest ;
InterfaceMethodOrFieldRest ::= ConstantDeclaratorsRest ";" ;
 InterfaceMethodOrFieldRest ::= InterfaceMethodDeclaratorRest ;
AnnotationTypeDeclaration ::= "@" "interface" Identifier AnnotationTypeBody ;
EnumConstantName ::= Identifier ;
Literal ::= IntegerLiteral ;
 Literal ::= FloatingPointLiteral ;
 Literal ::= CharacterLiteral ;
 Literal ::= StringLiteral ;
 Literal ::= BooleanLiteral ;
 Literal ::= NullLiteral ;
SuperSuffix ::= Arguments ;
 SuperSuffix ::= "." Identifier Arguments? ;
Creator ::= NonWildcardTypeArguments? CreatedName ArrayCreatorRest | ClassCreatorRest ;
MethodOrFieldRest ::= VariableDeclaratorRest ;
 MethodOrFieldRest ::= MethodDeclaratorRest ;
ConstantDeclaratorRest ::= ("[" "]")* "=" VariableInitializer ;
Catches ::= CatchClause CatchClause* ;
NormalClassDeclaration ::= "class" Identifier TypeParameters? ("extends" Type)? ("implements" TypeList)? ClassBody ;
AnnotationTypeElementRest ::= Type AnnotationMethodOrConstantRest ";" ;
 AnnotationTypeElementRest ::= ClassDeclaration ;
 AnnotationTypeElementRest ::= InterfaceDeclaration ;
 AnnotationTypeElementRest ::= EnumDeclaration ;
 AnnotationTypeElementRest ::= AnnotationTypeDeclaration ;
AnnotationConstantRest ::= VariableDeclarators ;
MethodDeclaratorRest ::= FormalParameters ("[" "]")* ("throws" QualifiedIdentifierList)? MethodBody | ";" ;
AnnotationMethodRest ::= "(" ")" ("[" "]")* DefaultValue? ;
MemberDecl ::= GenericMethodOrConstructorDecl ;
 MemberDecl ::= MethodOrFieldDecl ;
 MemberDecl ::= "void" Identifier VoidMethodDeclaratorRest ;
 MemberDecl ::= Identifier ConstructorDeclaratorRest ;
 MemberDecl ::= InterfaceDeclaration ;
 MemberDecl ::= ClassDeclaration ;
ExplicitGenericInvocationSuffix ::= "super" SuperSuffix ;
 ExplicitGenericInvocationSuffix ::= Identifier Arguments ;
Annotations ::= Annotation Annotations? ;
QualifiedIdentifierList ::= QualifiedIdentifier ("," QualifiedIdentifier)* ;
ClassDeclaration ::= NormalClassDeclaration ;
 ClassDeclaration ::= EnumDeclaration ;
BlockStatement ::= LocalVariableDeclarationStatement ;
 BlockStatement ::= ClassOrInterfaceDeclaration ;
 BlockStatement ::= (Identifier ":")? Statement ;
SwitchLabel ::= "case" ConstantExpression ":" ;
 SwitchLabel ::= "case" EnumConstantName ":" ;
 SwitchLabel ::= "default" ":" ;
ClassBodyDeclaration ::= ";" ;
 ClassBodyDeclaration ::= "static"? Block ;
 ClassBodyDeclaration ::= Modifier* MemberDecl ;
--------------------java::java-5-jls-read.bgf--------------------
ReturnStatement ::= "return" Expression? ";" ;
ArrayAccess ::= ExpressionName "[" Expression "]" ;
 ArrayAccess ::= PrimaryNoNewArray "[" Expression "]" ;
PrimaryNoNewArray ::= Literal ;
 PrimaryNoNewArray ::= Type "." "class" ;
 PrimaryNoNewArray ::= "void" "." "class" ;
 PrimaryNoNewArray ::= "this" ;
 PrimaryNoNewArray ::= ClassName "." "this" ;
 PrimaryNoNewArray ::= "(" Expression ")" ;
 PrimaryNoNewArray ::= ClassInstanceCreationExpression ;
 PrimaryNoNewArray ::= FieldAccess ;
 PrimaryNoNewArray ::= MethodInvocation ;
 PrimaryNoNewArray ::= ArrayAccess ;
Wildcard ::= "?" WildcardBounds? ;
WhileStatementNoShortIf ::= "while" "(" Expression ")" StatementNoShortIf ;
TypeDeclSpecifier ::= TypeName ;
 TypeDeclSpecifier ::= ClassOrInterfaceType "." Identifier ;
AbstractMethodModifiers ::= AbstractMethodModifier ;
 AbstractMethodModifiers ::= AbstractMethodModifiers AbstractMethodModifier ;
MethodModifier ::= Annotation ;
 MethodModifier ::= "public" ;
 MethodModifier ::= "protected" ;
 MethodModifier ::= "private" ;
 MethodModifier ::= "abstract" ;
 MethodModifier ::= "static" ;
 MethodModifier ::= "final" ;
 MethodModifier ::= "synchronized" ;
 MethodModifier ::= "native" ;
 MethodModifier ::= "strictfp" ;
TypeVariable ::= Identifier ;
ElementValue ::= ConditionalExpression ;
 ElementValue ::= Annotation ;
 ElementValue ::= ElementValueArrayInitializer ;
InterfaceType ::= TypeDeclSpecifier TypeArguments? ;
SingleTypeImportDeclaration ::= "import" TypeName ";" ;
TypeImportOnDemandDeclaration ::= "import" PackageOrTypeName "." "*" ";" ;
ArrayCreationExpression ::= "new" PrimitiveType DimExprs Dims? ;
 ArrayCreationExpression ::= "new" ClassOrInterfaceType DimExprs Dims? ;
 ArrayCreationExpression ::= "new" PrimitiveType Dims ArrayInitializer ;
 ArrayCreationExpression ::= "new" ClassOrInterfaceType Dims ArrayInitializer ;
MethodHeader ::= MethodModifiers? TypeParameters? ResultType MethodDeclarator Throws? ;
InstanceInitializer ::= Block ;
VariableDeclarator ::= VariableDeclaratorId ;
 VariableDeclarator ::= VariableDeclaratorId "=" VariableInitializer ;
Assignment ::= LeftHandSide AssignmentOperator AssignmentExpression ;
InterfaceMemberDeclarations ::= InterfaceMemberDeclaration ;
 InterfaceMemberDeclarations ::= InterfaceMemberDeclarations InterfaceMemberDeclaration ;
CatchClause ::= "catch" "(" FormalParameter ")" Block ;
ArrayInitializer ::= "{" VariableInitializers? ","? "}" ;
VariableDeclaratorId ::= Identifier ;
 VariableDeclaratorId ::= VariableDeclaratorId "[" "]" ;
AnnotationTypeElementDeclaration ::= AbstractMethodModifiers? Type Identifier "(" ")" Dims? DefaultValue? ";" ;
 AnnotationTypeElementDeclaration ::= ConstantDeclaration ;
 AnnotationTypeElementDeclaration ::= ClassDeclaration ;
 AnnotationTypeElementDeclaration ::= InterfaceDeclaration ;
 AnnotationTypeElementDeclaration ::= EnumDeclaration ;
 AnnotationTypeElementDeclaration ::= AnnotationTypeDeclaration ;
 AnnotationTypeElementDeclaration ::= ";" ;
ActualTypeArgument ::= ReferenceType ;
 ActualTypeArgument ::= Wildcard ;
EnumConstant ::= Annotations Identifier Arguments? ClassBody? ;
TypeParameters ::= "<" TypeParameterList ">" ;
LastFormalParameter ::= VariableModifiers? Type "..."? VariableDeclaratorId ;
 LastFormalParameter ::= FormalParameter ;
ElementValuePairs ::= ElementValuePair ;
 ElementValuePairs ::= ElementValuePairs "," ElementValuePair ;
PreIncrementExpression ::= "++" UnaryExpression ;
Primary ::= PrimaryNoNewArray ;
 Primary ::= ArrayCreationExpression ;
ElementValueArrayInitializer ::= "{" ElementValues? ","? "}" ;
FieldAccess ::= Primary "." Identifier ;
 FieldAccess ::= "super" "." Identifier ;
 FieldAccess ::= ClassName "." "super" "." Identifier ;
LabeledStatementNoShortIf ::= Identifier ":" StatementNoShortIf ;
BasicForStatement ::= "for" "(" ForInit? ";" Expression? ";" ForUpdate? ")" Statement ;
ForUpdate ::= StatementExpressionList ;
FieldModifier ::= Annotation ;
 FieldModifier ::= "public" ;
 FieldModifier ::= "protected" ;
 FieldModifier ::= "private" ;
 FieldModifier ::= "static" ;
 FieldModifier ::= "final" ;
 FieldModifier ::= "transient" ;
 FieldModifier ::= "volatile" ;
PackageName ::= Identifier ;
 PackageName ::= PackageName "." Identifier ;
ConstructorModifier ::= Annotation ;
 ConstructorModifier ::= "public" ;
 ConstructorModifier ::= "protected" ;
 ConstructorModifier ::= "private" ;
DefaultValue ::= "default" ElementValue ;
PostfixExpression ::= Primary ;
 PostfixExpression ::= ExpressionName ;
 PostfixExpression ::= PostIncrementExpression ;
 PostfixExpression ::= PostDecrementExpression ;
NumericType ::= IntegralType ;
 NumericType ::= FloatingPointType ;
InclusiveOrExpression ::= ExclusiveOrExpression ;
 InclusiveOrExpression ::= InclusiveOrExpression "|" ExclusiveOrExpression ;
CompilationUnit ::= PackageDeclaration? ImportDeclarations? TypeDeclarations? ;
ForStatement ::= BasicForStatement ;
 ForStatement ::= EnhancedForStatement ;
ClassInstanceCreationExpression ::= "new" TypeArguments? ClassOrInterfaceType "(" ArgumentList? ")" ClassBody? ;
 ClassInstanceCreationExpression ::= Primary "." "new" TypeArguments? Identifier TypeArguments? "(" ArgumentList? ")" ClassBody? ;
SingleElementAnnotation ::= "@" TypeName "(" ElementValue ")" ;
ConstructorModifiers ::= ConstructorModifier ;
 ConstructorModifiers ::= ConstructorModifiers ConstructorModifier ;
FieldModifiers ::= FieldModifier ;
 FieldModifiers ::= FieldModifiers FieldModifier ;
EmptyStatement ::= ";" ;
TypeDeclaration ::= ClassDeclaration ;
 TypeDeclaration ::= InterfaceDeclaration ;
 TypeDeclaration ::= ";" ;
IfThenElseStatementNoShortIf ::= "if" "(" Expression ")" StatementNoShortIf "else" StatementNoShortIf ;
ConstantModifier ::= Annotation ;
 ConstantModifier ::= "public" ;
 ConstantModifier ::= "static" ;
 ConstantModifier ::= "final" ;
AbstractMethodModifier ::= Annotation ;
 AbstractMethodModifier ::= "public" ;
 AbstractMethodModifier ::= "abstract" ;
MethodDeclaration ::= MethodHeader MethodBody ;
Expression ::= AssignmentExpression ;
AbstractMethodDeclaration ::= AbstractMethodModifiers? TypeParameters? ResultType MethodDeclarator Throws? ";" ;
AdditionalBoundList ::= AdditionalBound AdditionalBoundList ;
 AdditionalBoundList ::= AdditionalBound ;
TypeDeclarations ::= TypeDeclaration ;
 TypeDeclarations ::= TypeDeclarations TypeDeclaration ;
ExtendsInterfaces ::= "extends" InterfaceType ;
 ExtendsInterfaces ::= ExtendsInterfaces "," InterfaceType ;
ClassType ::= TypeDeclSpecifier TypeArguments? ;
AssignmentOperator ::= "=" ;
 AssignmentOperator ::= "*=" ;
 AssignmentOperator ::= "/=" ;
 AssignmentOperator ::= "%=" ;
 AssignmentOperator ::= "+=" ;
 AssignmentOperator ::= "-=" ;
 AssignmentOperator ::= "<<=" ;
 AssignmentOperator ::= ">>=" ;
 AssignmentOperator ::= ">>>=" ;
 AssignmentOperator ::= "&=" ;
 AssignmentOperator ::= "^=" ;
 AssignmentOperator ::= "|=" ;
AndExpression ::= EqualityExpression ;
 AndExpression ::= AndExpression "&" EqualityExpression ;
PackageOrTypeName ::= Identifier ;
 PackageOrTypeName ::= PackageOrTypeName "." Identifier ;
MultiplicativeExpression ::= UnaryExpression ;
 MultiplicativeExpression ::= MultiplicativeExpression "*" UnaryExpression ;
 MultiplicativeExpression ::= MultiplicativeExpression "/" UnaryExpression ;
 MultiplicativeExpression ::= MultiplicativeExpression "%" UnaryExpression ;
TypeParameterList ::= TypeParameterList "," TypeParameter ;
 TypeParameterList ::= TypeParameter ;
LeftHandSide ::= ExpressionName ;
 LeftHandSide ::= FieldAccess ;
 LeftHandSide ::= ArrayAccess ;
ConstructorDeclarator ::= TypeParameters? Identifier "(" FormalParameterList? ")" ;
PostDecrementExpression ::= PostfixExpression "--" ;
AssertStatement ::= "assert" Expression ";" ;
 AssertStatement ::= "assert" Expression ":" Expression ";" ;
VariableInitializer ::= Expression ;
 VariableInitializer ::= ArrayInitializer ;
AdditiveExpression ::= MultiplicativeExpression ;
 AdditiveExpression ::= AdditiveExpression "+" MultiplicativeExpression ;
 AdditiveExpression ::= AdditiveExpression "-" MultiplicativeExpression ;
InterfaceDeclaration ::= NormalInterfaceDeclaration ;
 InterfaceDeclaration ::= AnnotationTypeDeclaration ;
PrimitiveType ::= NumericType ;
 PrimitiveType ::= "boolean" ;
ImportDeclarations ::= ImportDeclaration ;
 ImportDeclarations ::= ImportDeclarations ImportDeclaration ;
ConditionalExpression ::= ConditionalOrExpression ;
 ConditionalExpression ::= ConditionalOrExpression "?" Expression ":" ConditionalExpression ;
LocalVariableDeclarationStatement ::= LocalVariableDeclaration ";" ;
ConstructorBody ::= "{" ExplicitConstructorInvocation? BlockStatements? "}" ;
SynchronizedStatement ::= "synchronized" "(" Expression ")" Block ;
ShiftExpression ::= AdditiveExpression ;
 ShiftExpression ::= ShiftExpression "<<" AdditiveExpression ;
 ShiftExpression ::= ShiftExpression ">>" AdditiveExpression ;
 ShiftExpression ::= ShiftExpression ">>>" AdditiveExpression ;
EnumDeclaration ::= ClassModifiers? "enum" Identifier Interfaces? EnumBody ;
SwitchBlock ::= "{" SwitchBlockStatementGroups? SwitchLabels? "}" ;
ExpressionStatement ::= StatementExpression ";" ;
AmbiguousName ::= Identifier ;
 AmbiguousName ::= AmbiguousName "." Identifier ;
DimExprs ::= DimExpr ;
 DimExprs ::= DimExprs DimExpr ;
NormalAnnotation ::= "@" TypeName "(" ElementValuePairs? ")" ;
IfThenStatement ::= "if" "(" Expression ")" Statement ;
VariableModifier ::= "final" ;
 VariableModifier ::= Annotation ;
ForStatementNoShortIf ::= "for" "(" ForInit? ";" Expression? ";" ForUpdate? ")" StatementNoShortIf ;
AnnotationTypeDeclaration ::= InterfaceModifiers? "@" "interface" Identifier AnnotationTypeBody ;
Literal ::= IntegerLiteral ;
 Literal ::= FloatingPointLiteral ;
 Literal ::= BooleanLiteral ;
 Literal ::= CharacterLiteral ;
 Literal ::= StringLiteral ;
 Literal ::= NullLiteral ;
VariableInitializers ::= VariableInitializer ;
 VariableInitializers ::= VariableInitializers "," VariableInitializer ;
Catches ::= CatchClause ;
 Catches ::= Catches CatchClause ;
PostIncrementExpression ::= PostfixExpression "++" ;
StatementExpressionList ::= StatementExpression ;
 StatementExpressionList ::= StatementExpressionList "," StatementExpression ;
StatementWithoutTrailingSubstatement ::= Block ;
 StatementWithoutTrailingSubstatement ::= EmptyStatement ;
 StatementWithoutTrailingSubstatement ::= ExpressionStatement ;
 StatementWithoutTrailingSubstatement ::= AssertStatement ;
 StatementWithoutTrailingSubstatement ::= SwitchStatement ;
 StatementWithoutTrailingSubstatement ::= DoStatement ;
 StatementWithoutTrailingSubstatement ::= BreakStatement ;
 StatementWithoutTrailingSubstatement ::= ContinueStatement ;
 StatementWithoutTrailingSubstatement ::= ReturnStatement ;
 StatementWithoutTrailingSubstatement ::= SynchronizedStatement ;
 StatementWithoutTrailingSubstatement ::= ThrowStatement ;
 StatementWithoutTrailingSubstatement ::= TryStatement ;
BlockStatement ::= LocalVariableDeclarationStatement ;
 BlockStatement ::= ClassDeclaration ;
 BlockStatement ::= Statement ;
DimExpr ::= "[" Expression "]" ;
ConstantExpression ::= Expression ;
SwitchStatement ::= "switch" "(" Expression ")" SwitchBlock ;
MethodModifiers ::= MethodModifier ;
 MethodModifiers ::= MethodModifiers MethodModifier ;
Interfaces ::= "implements" InterfaceTypeList ;
ExclusiveOrExpression ::= AndExpression ;
 ExclusiveOrExpression ::= ExclusiveOrExpression "^" AndExpression ;
ClassOrInterfaceType ::= ClassType ;
 ClassOrInterfaceType ::= InterfaceType ;
AdditionalBound ::= "&" InterfaceType ;
ImportDeclaration ::= SingleTypeImportDeclaration ;
 ImportDeclaration ::= TypeImportOnDemandDeclaration ;
 ImportDeclaration ::= SingleStaticImportDeclaration ;
 ImportDeclaration ::= StaticImportOnDemandDeclaration ;
StaticInitializer ::= "static" Block ;
PackageDeclaration ::= Annotations? "package" PackageName ";" ;
SwitchLabels ::= SwitchLabel ;
 SwitchLabels ::= SwitchLabels SwitchLabel ;
ClassBodyDeclarations ::= ClassBodyDeclaration ;
 ClassBodyDeclarations ::= ClassBodyDeclarations ClassBodyDeclaration ;
MethodInvocation ::= MethodName "(" ArgumentList? ")" ;
 MethodInvocation ::= Primary "." NonWildTypeArguments? Identifier "(" ArgumentList? ")" ;
 MethodInvocation ::= "super" "." NonWildTypeArguments? Identifier "(" ArgumentList? ")" ;
 MethodInvocation ::= ClassName "." "super" "." NonWildTypeArguments? Identifier "(" ArgumentList? ")" ;
 MethodInvocation ::= TypeName "." NonWildTypeArguments Identifier "(" ArgumentList? ")" ;
ElementValuePair ::= Identifier "=" ElementValue ;
TypeParameter ::= TypeVariable TypeBound? ;
Throws ::= "throws" ExceptionTypeList ;
Block ::= "{" BlockStatements? "}" ;
AnnotationTypeElementDeclarations ::= AnnotationTypeElementDeclaration ;
 AnnotationTypeElementDeclarations ::= AnnotationTypeElementDeclarations AnnotationTypeElementDeclaration ;
AnnotationTypeBody ::= "{" AnnotationTypeElementDeclarations? "}" ;
ContinueStatement ::= "continue" Identifier? ";" ;
InterfaceMemberDeclaration ::= ConstantDeclaration ;
 InterfaceMemberDeclaration ::= AbstractMethodDeclaration ;
 InterfaceMemberDeclaration ::= ClassDeclaration ;
 InterfaceMemberDeclaration ::= InterfaceDeclaration ;
 InterfaceMemberDeclaration ::= ";" ;
AssignmentExpression ::= ConditionalExpression ;
 AssignmentExpression ::= Assignment ;
NonWildTypeArguments ::= "<" ReferenceTypeList ">" ;
FloatingPointType ::= "float" ;
 FloatingPointType ::= "double" ;
EnumBody ::= (EnumConstants? ","? EnumBodyDeclarations?)* ;
ExpressionName ::= Identifier ;
 ExpressionName ::= AmbiguousName "." Identifier ;
Finally ::= "finally" Block ;
InterfaceModifiers ::= InterfaceModifier ;
 InterfaceModifiers ::= InterfaceModifiers InterfaceModifier ;
ConditionalOrExpression ::= ConditionalAndExpression ;
 ConditionalOrExpression ::= ConditionalOrExpression "||" ConditionalAndExpression ;
WhileStatement ::= "while" "(" Expression ")" Statement ;
EnhancedForStatement ::= "for" "(" VariableModifiers? Type Identifier ":" Expression ")" Statement ;
IfThenElseStatement ::= "if" "(" Expression ")" StatementNoShortIf "else" Statement ;
InterfaceBody ::= "{" InterfaceMemberDeclarations? "}" ;
Super ::= "extends" ClassType ;
Type ::= PrimitiveType ;
 Type ::= ReferenceType ;
FormalParameter ::= VariableModifiers? Type VariableDeclaratorId ;
FormalParameters ::= FormalParameter ;
 FormalParameters ::= FormalParameters "," FormalParameter ;
ForInit ::= StatementExpressionList ;
 ForInit ::= LocalVariableDeclaration ;
CastExpression ::= "(" PrimitiveType Dims? ")" UnaryExpression ;
 CastExpression ::= "(" ReferenceType ")" UnaryExpressionNotPlusMinus ;
EqualityExpression ::= RelationalExpression ;
 EqualityExpression ::= EqualityExpression "==" RelationalExpression ;
 EqualityExpression ::= EqualityExpression "!=" RelationalExpression ;
BreakStatement ::= "break" Identifier? ";" ;
WildcardBounds ::= "extends" ReferenceType ;
 WildcardBounds ::= "super" ReferenceType ;
Annotation ::= NormalAnnotation ;
 Annotation ::= MarkerAnnotation ;
 Annotation ::= SingleElementAnnotation ;
ClassModifier ::= Annotation ;
 ClassModifier ::= "public" ;
 ClassModifier ::= "protected" ;
 ClassModifier ::= "private" ;
 ClassModifier ::= "abstract" ;
 ClassModifier ::= "static" ;
 ClassModifier ::= "final" ;
 ClassModifier ::= "strictfp" ;
Statement ::= StatementWithoutTrailingSubstatement ;
 Statement ::= LabeledStatement ;
 Statement ::= IfThenStatement ;
 Statement ::= IfThenElseStatement ;
 Statement ::= WhileStatement ;
 Statement ::= ForStatement ;
SwitchBlockStatementGroups ::= SwitchBlockStatementGroup ;
 SwitchBlockStatementGroups ::= SwitchBlockStatementGroups SwitchBlockStatementGroup ;
SwitchBlockStatementGroup ::= SwitchLabels BlockStatements ;
ThrowStatement ::= "throw" Expression ";" ;
StatementExpression ::= Assignment ;
 StatementExpression ::= PreIncrementExpression ;
 StatementExpression ::= PreDecrementExpression ;
 StatementExpression ::= PostIncrementExpression ;
 StatementExpression ::= PostDecrementExpression ;
 StatementExpression ::= MethodInvocation ;
 StatementExpression ::= ClassInstanceCreationExpression ;
ExceptionTypeList ::= ExceptionType ;
 ExceptionTypeList ::= ExceptionTypeList "," ExceptionType ;
TypeBound ::= "extends" ClassOrInterfaceType AdditionalBoundList? ;
MethodBody ::= Block ;
 MethodBody ::= ";" ;
ReferenceTypeList ::= ReferenceType ;
 ReferenceTypeList ::= ReferenceTypeList "," ReferenceType ;
ConstructorDeclaration ::= ConstructorModifiers? ConstructorDeclarator Throws? ConstructorBody ;
VariableModifiers ::= VariableModifier ;
 VariableModifiers ::= VariableModifiers VariableModifier ;
FieldDeclaration ::= FieldModifiers? Type VariableDeclarators ";" ;
SingleStaticImportDeclaration ::= "import" "static" TypeName "." Identifier ";" ;
RelationalExpression ::= ShiftExpression ;
 RelationalExpression ::= RelationalExpression "<" ShiftExpression ;
 RelationalExpression ::= RelationalExpression ">" ShiftExpression ;
 RelationalExpression ::= RelationalExpression "<=" ShiftExpression ;
 RelationalExpression ::= RelationalExpression ">=" ShiftExpression ;
 RelationalExpression ::= RelationalExpression "instanceof" ReferenceType ;
StaticImportOnDemandDeclaration ::= "import" "static" TypeName "." "*" ";" ;
LabeledStatement ::= Identifier ":" Statement ;
EnumBodyDeclarations ::= ";" ClassBodyDeclarations? ;
Arguments ::= "(" ArgumentList? ")" ;
ExplicitConstructorInvocation ::= NonWildTypeArguments? "this" "(" ArgumentList? ")" ";" ;
 ExplicitConstructorInvocation ::= NonWildTypeArguments? "super" "(" ArgumentList? ")" ";" ;
 ExplicitConstructorInvocation ::= Primary "." NonWildTypeArguments? "super" "(" ArgumentList? ")" ";" ;
BlockStatements ::= BlockStatement ;
 BlockStatements ::= BlockStatements BlockStatement ;
InterfaceTypeList ::= InterfaceType ;
 InterfaceTypeList ::= InterfaceTypeList "," InterfaceType ;
EnumConstants ::= EnumConstant ;
 EnumConstants ::= EnumConstants "," EnumConstant ;
MethodName ::= Identifier ;
 MethodName ::= AmbiguousName "." Identifier ;
MarkerAnnotation ::= "@" TypeName ;
StatementNoShortIf ::= StatementWithoutTrailingSubstatement ;
 StatementNoShortIf ::= LabeledStatementNoShortIf ;
 StatementNoShortIf ::= IfThenElseStatementNoShortIf ;
 StatementNoShortIf ::= WhileStatementNoShortIf ;
 StatementNoShortIf ::= ForStatementNoShortIf ;
NormalInterfaceDeclaration ::= InterfaceModifiers? "interface" Identifier ExtendsInterfaces? InterfaceBody ;
IntegralType ::= "byte" ;
 IntegralType ::= "short" ;
 IntegralType ::= "int" ;
 IntegralType ::= "long" ;
 IntegralType ::= "char" ;
VariableDeclarators ::= VariableDeclarator ;
 VariableDeclarators ::= VariableDeclarators "," VariableDeclarator ;
ActualTypeArgumentList ::= ActualTypeArgument ;
 ActualTypeArgumentList ::= ActualTypeArgumentList "," ActualTypeArgument ;
ElementValues ::= ElementValue ;
 ElementValues ::= ElementValues "," ElementValue ;
TypeArguments ::= "<" ActualTypeArgumentList ">" ;
ArgumentList ::= Expression ;
 ArgumentList ::= ArgumentList "," Expression ;
ClassBody ::= "{" ClassBodyDeclarations? "}" ;
ConstantModifiers ::= ConstantModifier ;
 ConstantModifiers ::= ConstantModifier ConstantModifiers ;
FormalParameterList ::= LastFormalParameter ;
 FormalParameterList ::= FormalParameters "," LastFormalParameter ;
ResultType ::= Type ;
 ResultType ::= "void" ;
ConstantDeclaration ::= ConstantModifiers? Type VariableDeclarators ";" ;
TryStatement ::= "try" Block Catches ;
 TryStatement ::= "try" Block Catches? Finally ;
ArrayType ::= Type "[" "]" ;
LocalVariableDeclaration ::= VariableModifiers? Type VariableDeclarators ;
MethodDeclarator ::= Identifier "(" FormalParameterList? ")" ;
 MethodDeclarator ::= MethodDeclarator "[" "]" ;
EnumConstantName ::= Identifier ;
InterfaceModifier ::= Annotation ;
 InterfaceModifier ::= "public" ;
 InterfaceModifier ::= "protected" ;
 InterfaceModifier ::= "private" ;
 InterfaceModifier ::= "abstract" ;
 InterfaceModifier ::= "static" ;
 InterfaceModifier ::= "strictfp" ;
Dims ::= "[" "]" ;
 Dims ::= Dims "[" "]" ;
UnaryExpressionNotPlusMinus ::= PostfixExpression ;
 UnaryExpressionNotPlusMinus ::= "~" UnaryExpression ;
 UnaryExpressionNotPlusMinus ::= "!" UnaryExpression ;
 UnaryExpressionNotPlusMinus ::= CastExpression ;
ExceptionType ::= ClassType ;
 ExceptionType ::= TypeVariable ;
ConditionalAndExpression ::= InclusiveOrExpression ;
 ConditionalAndExpression ::= ConditionalAndExpression "&&" InclusiveOrExpression ;
NormalClassDeclaration ::= ClassModifiers? "class" Identifier TypeParameters? Super? Interfaces? ClassBody ;
PreDecrementExpression ::= "--" UnaryExpression ;
ClassMemberDeclaration ::= FieldDeclaration ;
 ClassMemberDeclaration ::= MethodDeclaration ;
 ClassMemberDeclaration ::= ClassDeclaration ;
 ClassMemberDeclaration ::= InterfaceDeclaration ;
 ClassMemberDeclaration ::= ";" ;
UnaryExpression ::= PreIncrementExpression ;
 UnaryExpression ::= PreDecrementExpression ;
 UnaryExpression ::= "+" UnaryExpression ;
 UnaryExpression ::= "-" UnaryExpression ;
 UnaryExpression ::= UnaryExpressionNotPlusMinus ;
ReferenceType ::= ClassOrInterfaceType ;
 ReferenceType ::= TypeVariable ;
 ReferenceType ::= ArrayType ;
TypeName ::= Identifier ;
 TypeName ::= PackageOrTypeName "." Identifier ;
ClassModifiers ::= ClassModifier ;
 ClassModifiers ::= ClassModifiers ClassModifier ;
DoStatement ::= "do" Statement "while" "(" Expression ")" ";" ;
Annotations ::= Annotation ;
 Annotations ::= Annotations Annotation ;
ClassName ::= Identifier ;
 ClassName ::= AmbiguousName "." Identifier ;
ClassDeclaration ::= NormalClassDeclaration ;
 ClassDeclaration ::= EnumDeclaration ;
ClassBodyDeclaration ::= ClassMemberDeclaration ;
 ClassBodyDeclaration ::= InstanceInitializer ;
 ClassBodyDeclaration ::= StaticInitializer ;
 ClassBodyDeclaration ::= ConstructorDeclaration ;
SwitchLabel ::= "case" ConstantExpression ":" ;
 SwitchLabel ::= "case" EnumConstantName ":" ;
 SwitchLabel ::= "default" ":" ;
--------------------java::jvm-level0.bgf--------------------
Instruction ::= (fieldRef::(opcode::integer() owner::string() name::string() description::string())) | (increment::(index::integer() amount::integer())) | (instruction::(opcode::integer())) | (integer::(opcode::integer() operand::integer())) | (jump::(opcode::integer() labelIndex::integer())) | (label::(index::integer())) | (lineNumber::(line::integer() labelIndex::integer())) | (localVariable::(opcode::integer() index::integer())) | (loadConstantString::(stringValue::string())) | (loadConstantInteger::(integerValue::integer())) | (loadConstantLong::(longValue::integer())) | (loadConstantFloat::(floatValue::integer())) | (loadConstantDouble::(doubleValue::integer())) | (lookupSwitch::(defaultLabelIndex::integer() keys::(integer()*) cases::(integer()*))) | (method::(opcode::integer() owner::string() name::string() description::string())) | (multiANewArray::(description::string() dimensions::integer())) | (tableSwitch::(minIndex::integer() maxIndex::integer() defaultLabelIndex::integer() cases::(integer()*))) | (type::(opcode::integer() description::string())) ;
TryCatchBlock ::= (tryCatchBlock::(startLabelIndex::integer() endLabelIndex::integer() handlerLabelIndex::integer() type::string())) | (finallyBlock::(startLabelIndex::integer() endLabelIndex::integer() handlerLabelIndex::integer())) ;
Field ::= (field::(access::integer() name::string() description::string() signature::string() value::α)) | (field::(access::integer() name::string() description::string() signature::string())) ;
Class ::= (class::(version::integer() access::integer() name::string() signature::string() superName::string() interfaces::(string()*) sourceFile::string() sourceDebug::string() outerClass::string() outerMethod::string() outerMethodDescription::string() innerClasses::(InnerClass*) fields::(Field*) methods::(Method*))) | (class::(version::integer() access::integer() name::string() signature::string() superName::string() interfaces::(string()*) innerClasses::(InnerClass*) fields::(Field*) methods::(Method*))) ;
LocalVariable ::= localVariable::(name::string() description::string() signature::string() startLabelIndex::integer() endLabelIndex::integer() index::integer()) ;
InnerClass ::= (innerClass::(name::string() outerName::string() innerName::string() access::integer())) | (innerClass::(name::string() access::integer())) ;
Method ::= method::(access::integer() name::string() description::string() signature::string() exceptions::(string()*) instructions::(Instruction*) tryCatchBlocks::(TryCatchBlock*) localVariables::(LocalVariable*)) ;
--------------------java::java-5-parr.bgf--------------------
StringLiteral ::= """ (EscapeSequence | string())* """ ;
UnicodeEscape ::= "\\" "u" HexDigit HexDigit HexDigit HexDigit ;
DecimalLiteral ::= "0" | ("1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")*) IntegerTypeSuffix? ;
HexLiteral ::= "0" "x" | "X" HexDigit+ IntegerTypeSuffix? ;
HexDigit ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "a" | "b" | "c" | "d" | "e" | "f" | "A" | "B" | "C" | "D" | "E" | "F" ;
JavaIDDigit ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ;
Exponent ::= "e" | "E" ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
OctalEscape ::= ("\\" "0" | "1" | "2" | "3" "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7") | ("\\" "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7") | ("\\" "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7") ;
IntegerTypeSuffix ::= "l" | "L" ;
Identifier ::= Letter (Letter | JavaIDDigit)* ;
FloatTypeSuffix ::= "f" | "F" | "d" | "D" ;
CharacterLiteral ::= "\'" EscapeSequence | string() "\'" ;
ASSERT ::= "assert" ;
Letter ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ;
FloatingPointLiteral ::= (("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ "." ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* Exponent? FloatTypeSuffix?) | ("." ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ Exponent? FloatTypeSuffix?) | (("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ Exponent FloatTypeSuffix?) | (("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ FloatTypeSuffix) ;
OctalLiteral ::= "0" ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7")+ IntegerTypeSuffix? ;
EscapeSequence ::= ("\\" "b" | "t" | "n" | "f" | "r" | "\"" | "\'" | "\\") | UnicodeEscape | OctalEscape ;
ENUM ::= "enum" ;
--------------------java::java-5-stahl.bgf--------------------
COLON ::= ":" ;
INC ::= "++" ;
BXOR ::= "^" ;
LE ::= "<=" ;
BAND ::= "&" ;
COMMA ::= "," ;
AT ::= "@" ;
DIV ::= "/" ;
BNOT ::= "~" ;
LOR ::= "||" ;
EXPONENT ::= "e" | "E" ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
ASSIGN ::= "=" ;
SEMI ::= ";" ;
GT ::= ">" ;
LAND ::= "&&" ;
DOT ::= "." ;
LNOT ::= "!" ;
QUESTION ::= "?" ;
BOR ::= "|" ;
MOD ::= "%" ;
DEC ::= "--" ;
LCURLY ::= "{" ;
BSR ::= ">>>" ;
SR ::= ">>" ;
GE ::= ">=" ;
LPAREN ::= "(" ;
RCURLY ::= "}" ;
PLUS ::= "+" ;
SL ::= "<<" ;
RPAREN ::= ")" ;
ESC ::= "\\" "n" | "r" | "t" | "b" | "f" | """ | "\'" | "\\" | ("u"+ HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT) | ("0" | "1" | "2" | "3" ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7")?)?) | ("4" | "5" | "6" | "7" ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7")?) ;
EQUAL ::= "==" ;
STAR ::= "*" ;
ELLIPSIS ::= "..." ;
MINUS ::= "-" ;
IDENT ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "_" | "$" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "_" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "$")* ;
LBRACK ::= "[" ;
LT ::= "<" ;
RBRACK ::= "]" ;
ASSERT ::= "assert" ;
ENUM ::= "enum" ;
--------------------java::java-5-studman.bgf--------------------
COLON ::= ":" ;
INC ::= "++" ;
BXOR ::= "^" ;
LE ::= "<=" ;
BAND ::= "&" ;
COMMA ::= "," ;
AT ::= "@" ;
DIV ::= "/" ;
BNOT ::= "~" ;
LOR ::= "||" ;
EXPONENT ::= "e" | "E" ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
ASSIGN ::= "=" ;
SEMI ::= ";" ;
GT ::= ">" ;
LAND ::= "&&" ;
DOT ::= "." ;
LNOT ::= "!" ;
QUESTION ::= "?" ;
BOR ::= "|" ;
MOD ::= "%" ;
DEC ::= "--" ;
LCURLY ::= "{" ;
BSR ::= ">>>" ;
SR ::= ">>" ;
GE ::= ">=" ;
LPAREN ::= "(" ;
RCURLY ::= "}" ;
PLUS ::= "+" ;
SL ::= "<<" ;
RPAREN ::= ")" ;
ESC ::= "\\" "n" | "r" | "t" | "b" | "f" | """ | "\'" | "\\" | ("u"+ HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT) | ("0" | "1" | "2" | "3" ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7")?)?) | ("4" | "5" | "6" | "7" ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7")?) ;
EQUAL ::= "==" ;
STAR ::= "*" ;
MINUS ::= "-" ;
IDENT ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "_" | "$" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "_" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "$")* ;
LBRACK ::= "[" ;
LT ::= "<" ;
RBRACK ::= "]" ;
--------------------java::java-1-jouault.bgf--------------------
ClassFeature ::= ClassMember ;
 ClassFeature ::= JavaClass ;
 ClassFeature ::= FeatureParameter ;
Field ::= owner::JavaClass type::JavaClass isStatic::Boolean isPublic::Boolean ;
JavaElement ::= ClassFeature ;
 JavaElement ::= Package ;
Boolean ::= "true" | "false" ;
Package ::= (classes::JavaClass)+ ;
JavaClass ::= PrimitiveType ;
 JavaClass ::= (members::ClassMember)+ package::Package (typedElements::ClassMember)+ (parameters::FeatureParameter)+ isAbstract::Boolean isStatic::Boolean isPublic::Boolean ;
FeatureParameter ::= type::JavaClass method::Method ;
ClassMember ::= Field ;
 ClassMember ::= Method ;
String ::= string() ;
PrimitiveType ::= (members::ClassMember)+ package::Package (typedElements::ClassMember)+ (parameters::FeatureParameter)+ isAbstract::Boolean isStatic::Boolean isPublic::Boolean ;
Method ::= (parameters::FeatureParameter)+ ;
--------------------java::java-1-touzet.bgf--------------------
JavaSource ::= (classes::ClassDeclaration)+ ;
MethodDefinition ::= class::ClassDeclaration (invocations::MethodInvocation)+ ;
NamedElement ::= ClassDeclaration ;
 NamedElement ::= MethodDefinition ;
ClassDeclaration ::= superclass::ClassDeclaration (methods::MethodDefinition)+ ;
String ::= string() ;
MethodInvocation ::= method::MethodDefinition ;
--------------------java::java-3-bruneliere.bgf--------------------
Int ::= ε ;
Type ::= ReferenceType ;
 Type ::= PrimitiveType ;
 Type ::= ReferenceType | PrimitiveType ;
Field ::= share::Boolean class::Class interface::Interface value::Value typeOf::Type ;
Parameter ::= name::String typeOf::Type owner::Method ;
Interface ::= (superInterface::Interface)+ (implementedBy::Class)+ (abstractMethods::Method)+ (constants::Field)+ ;
Boolean ::= "true" | "false" ;
Class ::= superClass::Class (implement::Interface)+ (methods::Method)+ (fields::Field)+ ;
Modifier ::= Class ;
 Modifier ::= Interface ;
 Modifier ::= Method ;
 Modifier ::= Field ;
ReferenceType ::= reference::Class ;
String ::= string() ;
PrimitiveType ::= Int ;
Value ::= ε ;
Method ::= share::Boolean class::Class interface::Interface resultOf::Type (parameters::Parameter)+ ;
--------------------java::java-4-sdf.bgf--------------------
ReturnStatement ::= "return" Expression? ";" ;
SimpleName ::= Identifier ;
DimExpr ::= "[" Expression "]" ;
ArrayAccess ::= Name "[" Expression "]" ;
 ArrayAccess ::= PrimaryNoNewArray "[" Expression "]" ;
PrimaryNoNewArray ::= Literal ;
 PrimaryNoNewArray ::= "this" ;
 PrimaryNoNewArray ::= Name "." "this" ;
 PrimaryNoNewArray ::= "(" Expression ")" ;
 PrimaryNoNewArray ::= ClassInstanceCreationExpression ;
 PrimaryNoNewArray ::= FieldAccess ;
 PrimaryNoNewArray ::= MethodInvocation ;
 PrimaryNoNewArray ::= ArrayAccess ;
SwitchStatement ::= "switch" "(" Expression ")" SwitchBlock ;
WhileStatementNoShortIf ::= "while" "(" Expression ")" StatementNoShortIf ;
Interfaces ::= "implements" InterfaceType ("," InterfaceType)* ;
ClassOrInterfaceType ::= Name ;
Modifier ::= "public" ;
 Modifier ::= "protected" ;
 Modifier ::= "private" ;
 Modifier ::= "static" ;
 Modifier ::= "abstract" ;
 Modifier ::= "final" ;
 Modifier ::= "native" ;
 Modifier ::= "synchronized" ;
 Modifier ::= "transient" ;
 Modifier ::= "volatile" ;
ImportDeclaration ::= SingleTypeImportDeclaration ;
 ImportDeclaration ::= TypeImportOnDemandDeclaration ;
StaticInitializer ::= "static" Block ;
PackageDeclaration ::= "package" Name ";" ;
LongLiteral ::= DecimalLongLiteral ;
 LongLiteral ::= HexLongLiteral ;
 LongLiteral ::= OctalLongLiteral ;
SingleTypeImportDeclaration ::= "import" Name ";" ;
InterfaceType ::= ClassOrInterfaceType ;
MethodInvocation ::= Name "(" (Expression ("," Expression)*)? ")" ;
 MethodInvocation ::= Primary "." Identifier "(" (Expression ("," Expression)*)? ")" ;
 MethodInvocation ::= Primary "." ClassInstanceCreationExpression ;
 MethodInvocation ::= "super" "." Identifier "(" (Expression ("," Expression)*)? ")" ;
TypeImportOnDemandDeclaration ::= "import" Name "." "*" ";" ;
ArrayCreationExpression ::= "new" PrimitiveType DimExpr+ Dim* ;
 ArrayCreationExpression ::= "new" ClassOrInterfaceType DimExpr+ Dim* ;
 ArrayCreationExpression ::= "new" PrimitiveType DimExprInitialized+ ArrayInitializer ;
 ArrayCreationExpression ::= "new" ClassOrInterfaceType DimExprInitialized+ ArrayInitializer ;
MethodHeader ::= Modifier* MethodRes MethodDeclarator Throws? ;
Throws ::= "throws" ClassType ("," ClassType)* ;
Block ::= "{" BlockStatement* "}" ;
Assignment ::= LeftHandSide AssignmentOperator Expression ;
VariableDeclarator ::= VariableDeclaratorId ;
 VariableDeclarator ::= VariableDeclaratorId "=" VariableInitializer ;
CatchClause ::= "catch" "(" FormalParameter ")" Block ;
ArrayInitializer ::= "{" (VariableInitializer ("," VariableInitializer)*)? ","? "}" ;
ContinueStatement ::= "continue" Identifier? ";" ;
Dim ::= "[" "]" ;
VariableDeclaratorId ::= Identifier ;
 VariableDeclaratorId ::= VariableDeclaratorId "[" "]" ;
InterfaceMemberDeclaration ::= ConstantDeclaration ;
 InterfaceMemberDeclaration ::= AbstractMethodDeclaration ;
 InterfaceMemberDeclaration ::= InterfaceDeclaration ;
 InterfaceMemberDeclaration ::= ClassDeclaration ;
FloatingPointType ::= "float" ;
 FloatingPointType ::= "double" ;
Finally ::= "finally" Block ;
Primary ::= PrimaryNoNewArray ;
 Primary ::= ArrayCreationExpression ;
MethodRes ::= "void" ;
 MethodRes ::= Type ;
WhileStatement ::= "while" "(" Expression ")" Statement ;
FieldAccess ::= Name ;
 FieldAccess ::= Primary "." Identifier ;
 FieldAccess ::= "super" "." Identifier ;
LabeledStatementNoShortIf ::= Identifier ":" StatementNoShortIf ;
IfThenElseStatement ::= "if" "(" Expression ")" StatementNoShortIf "else" Statement ;
InterfaceBody ::= "{" InterfaceMemberDeclaration* "}" ;
Super ::= "extends" ClassType ;
FormalParameter ::= Modifier* Type VariableDeclaratorId ;
Type ::= PrimitiveType ;
 Type ::= ReferenceType ;
ForInit ::= StatementExpressionList ;
 ForInit ::= LocalVariableDeclaration ;
ForUpdate ::= StatementExpressionList ;
BreakStatement ::= "break" Identifier? ";" ;
Statement ::= StatementWithoutTrailingSubstatement ;
 Statement ::= LabeledStatement ;
 Statement ::= IfThenStatement ;
 Statement ::= IfThenElseStatement ;
 Statement ::= WhileStatement ;
 Statement ::= ForStatement ;
 Statement ::= ClassDeclaration ;
 Statement ::= AssertStatement ;
ThrowStatement ::= "throw" Expression ";" ;
SwitchBlockStatementGroup ::= SwitchLabel+ BlockStatement+ ;
Identifier ::= "@" NatCon ;
StatementExpression ::= Expression "++" ;
 StatementExpression ::= Expression "--" ;
 StatementExpression ::= "++" Expression ;
 StatementExpression ::= "--" Expression ;
 StatementExpression ::= Assignment ;
 StatementExpression ::= Expression "++" ;
 StatementExpression ::= Expression "--" ;
 StatementExpression ::= "++" Expression ;
 StatementExpression ::= "--" Expression ;
 StatementExpression ::= MethodInvocation ;
 StatementExpression ::= ClassInstanceCreationExpression ;
NumericType ::= IntegralType ;
 NumericType ::= FloatingPointType ;
CompilationUnit ::= PackageDeclaration? ImportDeclaration* TypeDeclaration+ ;
ForStatement ::= "for" "(" ForInit? ";" Expression? ";" ForUpdate? ")" Statement ;
ClassInstanceCreationExpression ::= "new" ClassType "(" (Expression ("," Expression)*)? ")" ;
 ClassInstanceCreationExpression ::= "new" ClassType "(" (Expression ("," Expression)*)? ")" ClassBody ;
MethodBody ::= Block ;
 MethodBody ::= ";" ;
EmptyStatement ::= ";" ;
ConstructorDeclaration ::= Modifier* ConstructorDeclarator Throws? ConstructorBody ;
FieldDeclaration ::= Modifier* Type VariableDeclarator ("," VariableDeclarator)* ";" ;
TypeDeclaration ::= ClassDeclaration ;
 TypeDeclaration ::= InterfaceDeclaration ;
 TypeDeclaration ::= ";" ;
LabeledStatement ::= Identifier ":" Statement ;
MethodDeclaration ::= MethodHeader MethodBody ;
Expression ::= Primary ;
 Expression ::= "+" Expression ;
 Expression ::= "-" Expression ;
 Expression ::= "~" Expression ;
 Expression ::= "!" Expression ;
 Expression ::= "(" PrimitiveType Dim* ")" Expression ;
 Expression ::= "(" Type ")" Expression ;
 Expression ::= "(" Name Dim+ ")" Expression ;
 Expression ::= Expression "*" Expression ;
 Expression ::= Expression "/" Expression ;
 Expression ::= Expression "%" Expression ;
 Expression ::= Expression "+" Expression ;
 Expression ::= Expression "-" Expression ;
 Expression ::= Expression "<<" Expression ;
 Expression ::= Expression ">>" Expression ;
 Expression ::= Expression ">>>" Expression ;
 Expression ::= Expression "<" Expression ;
 Expression ::= Expression ">" Expression ;
 Expression ::= Expression "<=" Expression ;
 Expression ::= Expression ">=" Expression ;
 Expression ::= Expression "instanceof" ReferenceType ;
 Expression ::= Expression "==" Expression ;
 Expression ::= Expression "!=" Expression ;
 Expression ::= Expression "&" Expression ;
 Expression ::= Expression "^" Expression ;
 Expression ::= Expression "|" Expression ;
 Expression ::= Expression "&&" Expression ;
 Expression ::= Expression "||" Expression ;
 Expression ::= Expression "?" Expression ":" Expression ;
 Expression ::= StatementExpression ;
 Expression ::= Assignment ;
 Expression ::= "+" Expression ;
 Expression ::= "-" Expression ;
 Expression ::= "~" Expression ;
 Expression ::= "!" Expression ;
 Expression ::= Expression "<" Expression ;
 Expression ::= Expression ">" Expression ;
 Expression ::= Expression "<=" Expression ;
 Expression ::= Expression ">=" Expression ;
AbstractMethodDeclaration ::= MethodHeader ";" ;
ExplicitConstructorInvocation ::= "this" "(" (Expression ("," Expression)*)? ")" ";" ;
 ExplicitConstructorInvocation ::= "super" "(" (Expression ("," Expression)*)? ")" ";" ;
ExtendsInterfaces ::= "extends" InterfaceType ("," InterfaceType)* ;
ClassType ::= ClassOrInterfaceType ;
IntegerLiteral ::= DecimalIntegerLiteral ;
 IntegerLiteral ::= HexIntegerLiteral ;
 IntegerLiteral ::= OctalIntegerLiteral ;
AssignmentOperator ::= "=" ;
 AssignmentOperator ::= "*=" ;
 AssignmentOperator ::= "/=" ;
 AssignmentOperator ::= "%=" ;
 AssignmentOperator ::= "+=" ;
 AssignmentOperator ::= "-=" ;
 AssignmentOperator ::= "<<=" ;
 AssignmentOperator ::= ">>=" ;
 AssignmentOperator ::= ">>>=" ;
 AssignmentOperator ::= "&=" ;
 AssignmentOperator ::= "^=" ;
 AssignmentOperator ::= "|=" ;
LeftHandSide ::= FieldAccess ;
 LeftHandSide ::= ArrayAccess ;
ConstructorDeclarator ::= SimpleName "(" (FormalParameter ("," FormalParameter)*)? ")" ;
Name ::= Type "." "class" ;
 Name ::= Identifier ("." Identifier)* ;
AssertStatement ::= "assert" Expression ";" ;
StatementNoShortIf ::= StatementWithoutTrailingSubstatement ;
 StatementNoShortIf ::= LabeledStatementNoShortIf ;
 StatementNoShortIf ::= IfThenElseStatementNoShortIf ;
 StatementNoShortIf ::= WhileStatementNoShortIf ;
 StatementNoShortIf ::= ForStatementNoShortIf ;
VariableInitializer ::= Expression ;
 VariableInitializer ::= ArrayInitializer ;
IntegralType ::= "byte" ;
 IntegralType ::= "short" ;
 IntegralType ::= "int" ;
 IntegralType ::= "long" ;
 IntegralType ::= "char" ;
InterfaceDeclaration ::= Modifier* "interface" Identifier ExtendsInterfaces? InterfaceBody ;
PrimitiveType ::= NumericType ;
 PrimitiveType ::= "boolean" ;
ConstructorBody ::= "{" ExplicitConstructorInvocation? BlockStatement* "}" ;
LocalVariableDeclarationStatement ::= LocalVariableDeclaration ";" ;
SynchronizedStatement ::= "synchronized" "(" Expression ")" Block ;
ClassBody ::= "{" ClassBodyDeclaration* "}" ;
SwitchBlock ::= "{" SwitchBlockStatementGroup* SwitchLabel* "}" ;
ExpressionStatement ::= StatementExpression ";" ;
DimExprInitialized ::= "[" Expression? "]" ;
ConstantDeclaration ::= FieldDeclaration ;
IfThenStatement ::= "if" "(" Expression ")" Statement ;
TryStatement ::= "try" Block CatchClause+ ;
 TryStatement ::= "try" Block CatchClause* Finally ;
LocalVariableDeclaration ::= Type VariableDeclarator ("," VariableDeclarator)* ;
ArrayType ::= PrimitiveType "[" "]" ;
 ArrayType ::= Name "[" "]" ;
 ArrayType ::= ArrayType "[" "]" ;
MethodDeclarator ::= Identifier "(" (FormalParameter ("," FormalParameter)*)? ")" ;
 MethodDeclarator ::= MethodDeclarator "[" "]" ;
Literal ::= IntegerLiteral ;
 Literal ::= LongLiteral ;
 Literal ::= FloatingPointLiteral ;
 Literal ::= DoubleLiteral ;
 Literal ::= BooleanLiteral ;
 Literal ::= CharacterLiteral ;
 Literal ::= StringLiteral ;
 Literal ::= NullLiteral ;
CompilationUnits ::= CompilationUnit* ;
ClassMemberDeclaration ::= FieldDeclaration ;
 ClassMemberDeclaration ::= MethodDeclaration ;
 ClassMemberDeclaration ::= Block ;
StatementExpressionList ::= StatementExpression ("," StatementExpression)* ;
ReferenceType ::= ClassOrInterfaceType ;
 ReferenceType ::= ArrayType ;
DoStatement ::= "do" Statement "while" "(" Expression ")" ";" ;
StatementWithoutTrailingSubstatement ::= Block ;
 StatementWithoutTrailingSubstatement ::= EmptyStatement ;
 StatementWithoutTrailingSubstatement ::= ExpressionStatement ;
 StatementWithoutTrailingSubstatement ::= SwitchStatement ;
 StatementWithoutTrailingSubstatement ::= DoStatement ;
 StatementWithoutTrailingSubstatement ::= BreakStatement ;
 StatementWithoutTrailingSubstatement ::= ContinueStatement ;
 StatementWithoutTrailingSubstatement ::= ReturnStatement ;
 StatementWithoutTrailingSubstatement ::= SynchronizedStatement ;
 StatementWithoutTrailingSubstatement ::= ThrowStatement ;
 StatementWithoutTrailingSubstatement ::= TryStatement ;
BlockStatement ::= Modifier* LocalVariableDeclarationStatement ;
 BlockStatement ::= Statement ;
ClassDeclaration ::= Modifier* "class" Identifier Super? Interfaces? ClassBody ;
SwitchLabel ::= "case" Expression ":" ;
 SwitchLabel ::= "default" ":" ;
ClassBodyDeclaration ::= ClassMemberDeclaration ;
 ClassBodyDeclaration ::= StaticInitializer ;
 ClassBodyDeclaration ::= ConstructorDeclaration ;
 ClassBodyDeclaration ::= ";" ;
 ClassBodyDeclaration ::= ClassDeclaration ;
 ClassBodyDeclaration ::= InterfaceDeclaration ;
--------------------java::java-5-giquel.bgf--------------------
ReturnStatement ::= expression::Expression ;
ArrayAccess ::= index::Expression array::Expression ;
SwitchStatement ::= (statements::Statement)+ expression::Expression ;
MemberRef ::= qualifier::NamedElementRef member::NamedElementRef ;
MethodRefParameter ::= name::String isVarargs::Boolean type::NamedElementRef ;
VariableDeclarationExpression ::= modifiers::String type::NamedElementRef ;
ThisExpression ::= qualifier::NamedElementRef ;
TypeLiteral ::= type::NamedElementRef ;
ImportDeclaration ::= static::Boolean importedElement::NamedElementRef ;
WildCardType ::= isUpperBound::Boolean bound::NamedElementRef ;
PackageDeclaration ::= model::Model (ownedElements::AbstractTypeDeclaration)+ ;
ParameterizedType ::= (typeArguments::NamedElementRef)+ type::NamedElementRef ;
MethodInvocation ::= method::NamedElementRef (arguments::Expression)+ expression::Expression ;
NamedElementRef ::= extraArrayDimensions::Integer element::NamedElement qualifier::NamedElementRef ;
TypeParameter ::= (bounds::NamedElementRef)+ ;
TextElement ::= text::String ;
Assignment ::= operator::String rightHandSide::Expression leftHandSide::Expression ;
Block ::= (statements::Statement)+ ;
PrefixExpression ::= operator::String operand::Expression ;
CatchClause ::= exception::SingleVariableDeclaration body::Block ;
ArrayInitializer ::= (expressions::Expression)+ ;
InfixExpression ::= operator::String (extendedOperands::Expression)+ rightOperand::Expression leftOperand::Expression ;
ContinueStatement ::= label::NamedElementRef ;
UnresolvedItem ::= name::String proxy::Boolean (comments::Comment)+ ;
WhileStatement ::= expression::Expression body::Statement ;
FieldAccess ::= field::NamedElementRef expression::Expression ;
EnhancedForStatement ::= parameter::SingleVariableDeclaration expression::Expression body::Statement ;
BodyDeclaration ::= Initializer ;
 BodyDeclaration ::= EnumConstantDeclaration ;
 BodyDeclaration ::= FieldDeclaration ;
 BodyDeclaration ::= AbstractTypeDeclaration ;
 BodyDeclaration ::= AnnotationTypeMemberDeclaration ;
 BodyDeclaration ::= MethodDeclaration ;
CastExpression ::= type::NamedElementRef expression::Expression ;
AnnotationTypeMemberDeclaration ::= type::NamedElementRef default::Expression ;
ValuedNamedElement ::= MultipleValuedNamedElement ;
 ValuedNamedElement ::= SingleVariableDeclaration ;
SingleVariableDeclaration ::= modifiers::String isVarargs::Boolean type::NamedElementRef ;
EnumConstantDeclaration ::= (arguments::Expression)+ anonymousClassDeclaration::AnonymousClassDeclaration ;
ParenthesizedExpression ::= expression::Expression ;
MethodRef ::= qualifier::NamedElementRef (parameters::MethodRefParameter)+ method::NamedElementRef ;
VariableDeclarationStatement ::= modifiers::String type::NamedElementRef ;
BreakStatement ::= label::NamedElementRef ;
Statement ::= AssertStatement ;
 Statement ::= Block ;
 Statement ::= BreakStatement ;
 Statement ::= ContinueStatement ;
 Statement ::= ConstructorInvocation ;
 Statement ::= DoStatement ;
 Statement ::= EmptyStatement ;
 Statement ::= EnhancedForStatement ;
 Statement ::= ExpressionStatement ;
 Statement ::= ForStatement ;
 Statement ::= IfStatement ;
 Statement ::= ReturnStatement ;
 Statement ::= ThrowStatement ;
 Statement ::= SuperConstructorInvocation ;
 Statement ::= SwitchCase ;
 Statement ::= SwitchStatement ;
 Statement ::= SynchronizedStatement ;
 Statement ::= TryStatement ;
 Statement ::= TypeDeclarationStatement ;
 Statement ::= WhileStatement ;
 Statement ::= LabeledStatement ;
 Statement ::= VariableDeclarationStatement ;
AnonymousClassDeclaration ::= (bodyDeclarations::BodyDeclaration)+ ;
Annotation ::= type::NamedElementRef (values::AnnotationMemberValuePair)+ ;
PostfixExpression ::= operator::String operand::Expression ;
SuperMethodInvocation ::= (arguments::Expression)+ qualifier::NamedElementRef method::NamedElementRef ;
ThrowStatement ::= expression::Expression ;
ForStatement ::= body::Statement expression::Expression (initializers::Expression)+ (updaters::Expression)+ ;
ArrayLengthAccess ::= array::Expression ;
Initializer ::= body::Block ;
EmptyStatement ::= ε ;
TypeDeclaration ::= isInterface::Boolean (typeParameters::TypeParameter)+ superclass::NamedElementRef ;
FieldDeclaration ::= type::NamedElementRef ;
Comment ::= BlockComment ;
 Comment ::= Javadoc ;
 Comment ::= LineComment ;
AbstractTypeDeclaration ::= AnnotationTypeDeclaration ;
 AbstractTypeDeclaration ::= EnumDeclaration ;
 AbstractTypeDeclaration ::= TypeDeclaration ;
LabeledStatement ::= body::Statement ;
MethodDeclaration ::= extraArrayDimensions::Integer constructor::Boolean varargs::Boolean body::Block (parameters::SingleVariableDeclaration)+ (typeParameters::TypeParameter)+ (thrownExceptions::NamedElementRef)+ returnType::NamedElementRef ;
Expression ::= Annotation ;
 Expression ::= ArrayAccess ;
 Expression ::= ArrayCreation ;
 Expression ::= ArrayInitializer ;
 Expression ::= ArrayLengthAccess ;
 Expression ::= Assignment ;
 Expression ::= CastExpression ;
 Expression ::= ClassInstanceCreation ;
 Expression ::= ConditionalExpression ;
 Expression ::= FieldAccess ;
 Expression ::= InfixExpression ;
 Expression ::= InstanceofExpression ;
 Expression ::= MethodInvocation ;
 Expression ::= NamedElementRef ;
 Expression ::= ParenthesizedExpression ;
 Expression ::= PostfixExpression ;
 Expression ::= PrefixExpression ;
 Expression ::= SuperFieldAccess ;
 Expression ::= SuperMethodInvocation ;
 Expression ::= ThisExpression ;
 Expression ::= TypeLiteral ;
 Expression ::= VariableDeclarationExpression ;
ArrayCreation ::= (dimensions::Expression)+ initializer::ArrayInitializer type::NamedElementRef ;
Javadoc ::= (tags::TagElement)+ ;
IfStatement ::= expression::Expression elseStatement::Statement thenStatement::Statement ;
BlockComment ::= content::String isEnclosedByParent::Boolean isPrefixOfParent::Boolean ;
String ::= string() ;
LineComment ::= content::String isEnclosedByParent::Boolean isPrefixOfParent::Boolean ;
AssertStatement ::= message::Expression expression::Expression ;
SwitchCase ::= expressionInitialized::Boolean expression::Expression ;
SuperFieldAccess ::= qualifier::NamedElementRef field::NamedElementRef ;
NamedElement ::= OrphanType ;
 NamedElement ::= ValuedNamedElement ;
 NamedElement ::= AbstractTypeDeclaration ;
 NamedElement ::= AnnotationTypeMemberDeclaration ;
 NamedElement ::= MethodDeclaration ;
 NamedElement ::= UnresolvedItem ;
 NamedElement ::= EnumConstantDeclaration ;
 NamedElement ::= LabeledStatement ;
 NamedElement ::= PackageDeclaration ;
 NamedElement ::= TypeParameter ;
TagElement ::= tagName::String (fragments::ASTNode)+ ;
AnnotationMemberValuePair ::= member::NamedElementRef value::Expression ;
PrimitiveType ::= (comments::Comment)+ ;
Integer ::= integer() ;
ConditionalExpression ::= elseExpression::Expression thenExpression::Expression expression::Expression ;
SynchronizedStatement ::= body::Block expression::Expression ;
EnumDeclaration ::= (enumConstants::EnumConstantDeclaration)+ ;
ExpressionStatement ::= expression::Expression ;
TryStatement ::= finally::Block body::Block (catchClauses::CatchClause)+ ;
AnnotationTypeDeclaration ::= originalFileContent::String package::PackageDeclaration (bodyDeclarations::BodyDeclaration)+ (superInterfaces::NamedElementRef)+ (commentsAfterBody::Comment)+ (imports::ImportDeclaration)+ (commentsBeforeBody::Comment)+ ;
TypeDeclarationStatement ::= declaration::AbstractTypeDeclaration ;
SuperConstructorInvocation ::= (arguments::Expression)+ expression::Expression ;
ClassInstanceCreation ::= (arguments::Expression)+ type::NamedElementRef expression::Expression anonymousClassDeclaration::AnonymousClassDeclaration ;
ConstructorInvocation ::= (arguments::Expression)+ ;
Model ::= name::String (ownedElements::PackageDeclaration)+ (orphanTypes::OrphanType)+ ;
Boolean ::= "true" | "false" ;
MultipleValuedNamedElement ::= FieldDeclaration ;
InstanceofExpression ::= leftOperand::Expression rightOperand::NamedElementRef ;
DoStatement ::= expression::Expression body::Statement ;
ASTNode ::= AnnotationMemberValuePair ;
 ASTNode ::= AnonymousClassDeclaration ;
 ASTNode ::= BodyDeclaration ;
 ASTNode ::= CatchClause ;
 ASTNode ::= Comment ;
 ASTNode ::= Expression ;
 ASTNode ::= ImportDeclaration ;
 ASTNode ::= MemberRef ;
 ASTNode ::= MethodRef ;
 ASTNode ::= MethodRefParameter ;
 ASTNode ::= Statement ;
 ASTNode ::= TagElement ;
 ASTNode ::= TextElement ;
 ASTNode ::= PackageDeclaration ;
 ASTNode ::= ParameterizedType ;
 ASTNode ::= PrimitiveType ;
 ASTNode ::= SingleVariableDeclaration ;
 ASTNode ::= TypeParameter ;
 ASTNode ::= UnresolvedItem ;
 ASTNode ::= WildCardType ;
OrphanType ::= WildCardType ;
 OrphanType ::= ParameterizedType ;
 OrphanType ::= PrimitiveType ;
 OrphanType ::= name::String proxy::Boolean ;
--------------------java::java-5-landman.bgf--------------------
BlockStm ::= Stm ;
 BlockStm ::= [classDecStm] ClassDec ;
 BlockStm ::= LocalVarDecStm ;
DimExpr ::= [dim] "[" Expr "]" ;
ImportDec ::= [typeImportOnDemandDec] "import" PackageName "." "*" ";" ;
 ImportDec ::= [typeImportDec] "import" TypeName ";" ;
 ImportDec ::= [staticImportDec] "import" "static" TypeName "." Id ";" ;
 ImportDec ::= [staticImportOnDemandDec] "import" "static" TypeName "." "*" ";" ;
ArrayAccess ::= [arrayAccess] ArraySubscript ;
PackageDec ::= [packageDec] Anno* "package" PackageName ";" ;
VarDec ::= [varDec] VarDecId "=" VarInit ;
 VarDec ::= [varDec] VarDecId ;
VarMod ::= "final" ;
Interfaces ::= [implementsDec] "implements" {InterfaceType ","}+ ;
ClassOrInterfaceType ::= [classOrInterfaceType] TypeDecSpec TypeArgs? ;
Modifier ::= "protected" ;
 Modifier ::= "private" ;
 Modifier ::= "volatile" ;
 Modifier ::= "synchronized" ;
 Modifier ::= "final" ;
 Modifier ::= "strictfp" ;
 Modifier ::= "transient" ;
 Modifier ::= "abstract" ;
 Modifier ::= "native" ;
 Modifier ::= "static" ;
 Modifier ::= "public" ;
VarDecId ::= Id ;
 VarDecId ::= [arrayVarDecId] Id Dim+ ;
ConstrDec ::= [constrDec] ConstrHead ConstrBody ;
ConstrMod ::= "protected" ;
 ConstrMod ::= "private" ;
 ConstrMod ::= "public" ;
InterfaceType ::= [interfaceType] TypeDecSpec TypeArgs? ;
ElemVal ::= [elemValArrayInit] "{" {ElemVal ","}* "}" ;
 ElemVal ::= Expr ;
 ElemVal ::= Anno ;
 ElemVal ::= [elemValArrayInit] "{" {ElemVal ","}* "," "}" ;
InterfaceMemberDec ::= [semicolon] ";" ;
 InterfaceMemberDec ::= InterfaceDec ;
 InterfaceMemberDec ::= AbstractMethodDec ;
 InterfaceMemberDec ::= ClassDec ;
 InterfaceMemberDec ::= ConstantDec ;
TypeVar ::= [typeVar] TypeVarId ;
Block ::= [block] "{" BlockStm* "}" ;
Throws ::= [throwsDec] "throws" {ExceptionType ","}+ ;
ElemValPair ::= [elemValPair] Id "=" ;
CatchClause ::= [catch] "catch" "(" FormalParam ")" Block ;
ArrayInit ::= [arrayInit] "{" {VarInit ","}* "," "}" ;
 ArrayInit ::= [arrayInit] "{" {VarInit ","}* "}" ;
Dim ::= [dim] "[" "]" ;
TypeVarId ::= Id ;
InstanceInit ::= [instanceInit] Block ;
EnumBody ::= [enumBody] "{" {EnumConst ","}* EnumBodyDecs? "}" ;
 EnumBody ::= [enumBody] "{" {EnumConst ","}* "," EnumBodyDecs? "}" ;
ConstrInv ::= [qSuperConstrInv] Expr "." TypeArgs? "super" "(" {Expr ","}* ")" ";" ;
 ConstrInv ::= [superConstrInv] TypeArgs? "super" "(" {Expr ","}* ")" ";" ;
 ConstrInv ::= [altConstrInv] TypeArgs? "this" "(" {Expr ","}* ")" ";" ;
IntLiteral ::= [octa] ε ;
 IntLiteral ::= [hexa] ε ;
 IntLiteral ::= [deci] ε ;
FieldAccess ::= [qSuperField] TypeName "." "super" "." Id ;
 FieldAccess ::= [field] "." Id ;
 FieldAccess ::= [superField] "super" "." Id ;
MethodSpec ::= [method] MethodName ;
 MethodSpec ::= [superMethod] "super" "." TypeArgs? Id ;
 MethodSpec ::= [genericMethod] AmbName "." TypeArgs Id ;
 MethodSpec ::= [qSuperMethod] TypeName "." "super" "." TypeArgs? Id ;
 MethodSpec ::= [method] "." TypeArgs? Id ;
Super ::= [superDec] "extends" ClassType ;
Type ::= RefType ;
 Type ::= PrimType ;
CharLiteral ::= ε ;
LHS ::= ExprName ;
 LHS ::= ε ;
TypeArgs ::= [typeArgs] "<" {ActualTypeArg ","}+ ">" ;
AnnoDecHead ::= [annoDecHead] "@" "interface" Id ;
TypeParam ::= [typeParam] TypeVarId TypeBound? ;
FloatLiteral ::= [float] ε ;
ArraySubscript ::= "[" Expr "]" ;
PackageName ::= [packageName] {Id "."}+ ;
ConstrBody ::= [constrBody] "{" ConstrInv? BlockStm* "}" ;
Anno ::= [singleElemAnno] "@" TypeName "(" ")" ;
 Anno ::= [anno] "@" TypeName "(" {ElemValPair ","}* ")" ;
 Anno ::= [markerAnno] "@" TypeName ;
RefType ::= ClassOrInterfaceType ;
 RefType ::= ArrayType ;
ArrayCreationExpr ::= [newArray] "new" ArrayBaseType DimExpr+ ;
 ArrayCreationExpr ::= [newArray] "new" ArrayBaseType ArrayInit ;
TypeDec ::= InterfaceDec ;
 TypeDec ::= ClassDec ;
 TypeDec ::= [semicolon] ";" ;
FieldDec ::= [fieldDec] Type {VarDec ","}+ ";" ;
FieldMod ::= "public" ;
 FieldMod ::= "static" ;
 FieldMod ::= "transient" ;
 FieldMod ::= "final" ;
 FieldMod ::= "volatile" ;
 FieldMod ::= "private" ;
 FieldMod ::= "protected" ;
CompilationUnit ::= [compilationUnit] PackageDec? ImportDec* TypeDec* ;
LocalVarDecStm ::= [localVarDecStm] LocalVarDec ";" ;
BoolLiteral ::= [false] "false" ;
 BoolLiteral ::= [true] "true" ;
AnnoElemDec ::= EnumDec ;
 AnnoElemDec ::= [semicolon] ";" ;
 AnnoElemDec ::= ClassDec ;
 AnnoElemDec ::= ConstantDec ;
 AnnoElemDec ::= InterfaceDec ;
 AnnoElemDec ::= [annoMethodDec] AbstractMethodMod* Type Id "(" ")" DefaultVal? ";" ;
TypeBound ::= [typeBound] "extends" {ClassOrInterfaceType "&"}+ ;
MethodBody ::= [noMethodBody] ";" ;
 MethodBody ::= Block ;
EnumConst ::= [enumConst] Id EnumConstArgs? ClassBody? ;
MethodMod ::= "final" ;
 MethodMod ::= "strictfp" ;
 MethodMod ::= "synchronized" ;
 MethodMod ::= "protected" ;
 MethodMod ::= "private" ;
 MethodMod ::= "static" ;
 MethodMod ::= "public" ;
 MethodMod ::= "abstract" ;
 MethodMod ::= "native" ;
AmbName ::= [ambName] AmbName "." Id ;
 AmbName ::= [ambName] Id ;
MethodDec ::= [methodDec] MethodDecHead MethodBody ;
MethodDecHead ::= [deprMethodDecHead] TypeParams? ResultType Id "(" {FormalParam ","}* ")" Dim+ Throws? ;
 MethodDecHead ::= [methodDecHead] TypeParams? ResultType Id "(" {FormalParam ","}* ")" Throws? ;
DefaultVal ::= [defaultVal] "default" ;
ExprName ::= [exprName] Id ;
 ExprName ::= [exprName] AmbName "." Id ;
NumType ::= FloatType ;
 NumType ::= IntType ;
AbstractMethodDec ::= [abstractMethodDec] TypeParams? ResultType Id "(" {FormalParam ","}* ")" Throws? ";" ;
 AbstractMethodDec ::= [deprAbstractMethodDec] TypeParams? ResultType Id "(" {FormalParam ","}* ")" Dim+ Throws? ";" ;
AbstractMethodMod ::= "abstract" ;
 AbstractMethodMod ::= "public" ;
EnumConstArgs ::= "(" {Expr ","}* ")" ;
StringLiteral ::= ε ;
StaticInit ::= [staticInit] "static" Block ;
FormalParam ::= [varArityParam] Type "..." VarDecId ;
 FormalParam ::= [param] Type VarDecId ;
Id ::= [id] ε ;
ClassLiteral ::= [voidClass] "void" "." "class" ;
 ClassLiteral ::= [class] Type "." "class" ;
VarInit ::= Expr ;
 VarInit ::= ArrayInit ;
EnumBodyDecs ::= [enumBodyDecs] ";" ClassBodyDec* ;
ExtendsInterfaces ::= [extendsInterfaces] "extends" {InterfaceType ","}+ ;
ClassType ::= [classType] TypeDecSpec TypeArgs? ;
ActualTypeArg ::= Type ;
 ActualTypeArg ::= [wildcard] "?" WildcardBound? ;
PackageOrTypeName ::= [packageOrTypeName] Id ;
 PackageOrTypeName ::= [packageOrTypeName] PackageOrTypeName "." Id ;
MethodName ::= [methodName] AmbName "." Id ;
 MethodName ::= [methodName] Id ;
InterfaceMod ::= "public" ;
 InterfaceMod ::= "static" ;
 InterfaceMod ::= "abstract" ;
 InterfaceMod ::= "strictfp" ;
 InterfaceMod ::= "protected" ;
 InterfaceMod ::= "private" ;
InterfaceDec ::= InterfaceDecHead "{" InterfaceMemberDec* "}" ;
 InterfaceDec ::= AnnoDecHead "{" AnnoElemDec* "}" ;
IntType ::= [int] "int" ;
 IntType ::= [byte] "byte" ;
 IntType ::= [long] "long" ;
 IntType ::= [short] "short" ;
 IntType ::= [char] "char" ;
InterfaceDecHead ::= [interfaceDecHead] "interface" Id TypeParams? ExtendsInterfaces? ;
CondMid ::= "?" Expr ":" ;
WildcardBound ::= [wildcardUpperBound] "extends" RefType ;
 WildcardBound ::= [wildcardLowerBound] "super" RefType ;
TypeDecSpec ::= TypeName ;
 TypeDecSpec ::= [member] TypeDecSpec TypeArgs "." Id ;
EnumDec ::= [enumDec] EnumDecHead EnumBody ;
EnumDecHead ::= [enumDecHead] "enum" Id Interfaces? ;
PrimType ::= NumType ;
 PrimType ::= [boolean] "boolean" ;
ConstantDec ::= [constantDec] Type {VarDec ","}+ ";" ;
ConstantMod ::= "static" ;
 ConstantMod ::= "public" ;
 ConstantMod ::= "final" ;
ClassBody ::= [classBody] "{" ClassBodyDec* "}" ;
SwitchBlock ::= [switchBlock] "{" SwitchGroup* SwitchLabel* "}" ;
ResultType ::= Type ;
 ResultType ::= [void] "void" ;
FloatType ::= [double] "double" ;
 FloatType ::= [float] "float" ;
Expr ::= [postDecr] Expr "--" ;
 Expr ::= [postIncr] Expr "++" ;
 Expr ::= [castPrim] "(" PrimType ")" Expr ;
 Expr ::= [castRef] "(" RefType ")" Expr ;
 Expr ::= [minus] Expr ;
 Expr ::= [preIncr] "++" Expr ;
 Expr ::= [plus] Expr ;
 Expr ::= [preDecr] "--" Expr ;
 Expr ::= [this] "this" ;
 Expr ::= [mul] Expr "*" Expr ;
 Expr ::= [div] Expr Expr ;
 Expr ::= [remain] Expr "%" Expr ;
 Expr ::= [qThis] TypeName "." "this" ;
 Expr ::= [complement] "~" Expr ;
 Expr ::= [not] "!" Expr ;
 Expr ::= [plus] Expr Expr ;
 Expr ::= [minus] Expr Expr ;
 Expr ::= [uRightShift] Expr ">>>" Expr ;
 Expr ::= [rightShift] Expr ">>" Expr ;
 Expr ::= [leftShift] Expr "<<" Expr ;
 Expr ::= [ltEq] Expr "<=" Expr ;
 Expr ::= [lt] Expr "<" Expr ;
 Expr ::= [gtEq] Expr ">=" Expr ;
 Expr ::= [instanceOf] Expr "instanceof" RefType ;
 Expr ::= [gt] Expr ">" Expr ;
 Expr ::= [eq] Expr "==" Expr ;
 Expr ::= [notEq] Expr "!=" Expr ;
 Expr ::= [and] Expr "&" Expr ;
 Expr ::= [excOr] Expr "^" Expr ;
 Expr ::= [or] Expr "|" Expr ;
 Expr ::= [lazyAnd] Expr "&&" Expr ;
 Expr ::= [lazyOr] Expr "||" Expr ;
 Expr ::= [cond] Expr CondMid Expr ;
 Expr ::= [assignMinus] LHS "-=" Expr ;
 Expr ::= [assignExcOr] LHS "^=" Expr ;
 Expr ::= [assignPlus] LHS "+=" Expr ;
 Expr ::= [assignURightShift] LHS ">>>=" Expr ;
 Expr ::= [assignAnd] LHS "&=" Expr ;
 Expr ::= [assignDiv] LHS "/=" Expr ;
 Expr ::= [assignMul] LHS "*=" Expr ;
 Expr ::= [assignRemain] LHS "%=" Expr ;
 Expr ::= [assignLeftShift] LHS "<<=" Expr ;
 Expr ::= [assignRightShift] LHS ">>=" Expr ;
 Expr ::= [assignOr] LHS "|=" Expr ;
 Expr ::= [assign] LHS "=" Expr ;
 Expr ::= [qNewInstance] Expr "." "new" TypeArgs? Id TypeArgs? "(" {Expr ","}* ")" ClassBody? ;
 Expr ::= [lit] Literal ;
 Expr ::= [newInstance] "new" TypeArgs? ClassOrInterfaceType "(" {Expr ","}* ")" ClassBody? ;
 Expr ::= [exprName] ExprName ;
 Expr ::= ArrayCreationExpr ;
 Expr ::= "(" Expr ")" ;
 Expr ::= ε ;
 Expr ::= [invoke] MethodSpec "(" {Expr ","}* ")" ;
ArrayType ::= [arrayType] Type "[" "]" ;
ClassMemberDec ::= ClassDec ;
 ClassMemberDec ::= MethodDec ;
 ClassMemberDec ::= FieldDec ;
 ClassMemberDec ::= [semicolon] ";" ;
 ClassMemberDec ::= InterfaceDec ;
ConstrHead ::= [constrDecHead] TypeParams? Id "(" {FormalParam ","}* ")" Throws? ;
Literal ::= CharLiteral ;
 Literal ::= BoolLiteral ;
 Literal ::= ClassLiteral ;
 Literal ::= FloatLiteral ;
 Literal ::= StringLiteral ;
 Literal ::= NullLiteral ;
 Literal ::= IntLiteral ;
Stm ::= [synchronized] "synchronized" "(" Expr ")" Block ;
 Stm ::= [exprStm] Expr ";" ;
 Stm ::= [for] "for" "(" {Expr ","}* ";" Expr? ";" {Expr ","}* ")" Stm ;
 Stm ::= [for] "for" "(" LocalVarDec ";" Expr? ";" {Expr ","}* ")" Stm ;
 Stm ::= Block ;
 Stm ::= [continue] "continue" Id? ";" ;
 Stm ::= [try] "try" Block CatchClause+ ;
 Stm ::= [throw] "throw" Expr ";" ;
 Stm ::= [switch] "switch" "(" Expr ")" SwitchBlock ;
 Stm ::= [if] "if" "(" Expr ")" Stm ;
 Stm ::= [break] "break" Id? ";" ;
 Stm ::= [empty] ";" ;
 Stm ::= [labeled] Id ":" Stm ;
 Stm ::= [assertStm] "assert" Expr ":" Expr ";" ;
 Stm ::= [forEach] "for" "(" FormalParam ":" Expr ")" Stm ;
 Stm ::= [assertStm] "assert" Expr ";" ;
 Stm ::= [try] "try" Block CatchClause* "finally" Block ;
 Stm ::= [return] "return" Expr? ";" ;
 Stm ::= [doWhile] "do" Stm "while" "(" Expr ")" ";" ;
 Stm ::= [while] "while" "(" Expr ")" Stm ;
 Stm ::= [if] "if" "(" Expr ")" Stm "else" Stm ;
SwitchGroup ::= [switchGroup] SwitchLabel+ BlockStm+ ;
ClassDec ::= EnumDec ;
 ClassDec ::= [classDec] ClassDecHead ClassBody ;
ClassDecHead ::= [classDecHead] "class" Id TypeParams? Super? Interfaces? ;
ClassMod ::= "abstract" ;
 ClassMod ::= "static" ;
 ClassMod ::= "public" ;
 ClassMod ::= "strictfp" ;
 ClassMod ::= "final" ;
 ClassMod ::= "private" ;
 ClassMod ::= "protected" ;
ExceptionType ::= ClassType ;
NullLiteral ::= [null] "null" ;
ClassBodyDec ::= ClassMemberDec ;
 ClassBodyDec ::= StaticInit ;
 ClassBodyDec ::= ConstrDec ;
 ClassBodyDec ::= InstanceInit ;
LocalVarDec ::= [localVarDec] Type {VarDec ","}+ ;
TypeName ::= [typeName] PackageOrTypeName "." Id ;
 TypeName ::= [typeName] Id ;
ArrayBaseType ::= TypeName ;
 ArrayBaseType ::= PrimType ;
 ArrayBaseType ::= [unboundWld] TypeName "<" "?" ">" ;
SwitchLabel ::= [case] "case" Expr ":" ;
 SwitchLabel ::= [default] "default" ":" ;
TypeParams ::= [typeParams] "<" {TypeParam ","}+ ">" ;
--------------------java::jvm-level1.bgf--------------------
TypeSignature ::= (primitive::(type::PrimitiveTypeDescriptor)) | (fieldType::(sig::FieldTypeSignature)) ;
TypeArg ::= (type::(fieldType::FieldTypeSignature)) | (wildcard::ε) | (extends::(fieldType::FieldTypeSignature)) | (super::(fieldType::FieldTypeSignature)) ;
AccessModifier ::= (public::ε) | (private::ε) | (protected::ε) ;
MethodDescription ::= methodDescriptor::(arguments::(TypeDescriptor*) returnType::TypeDescriptor) ;
Field ::= (field::(modifiers::(FieldModifier*) name::string() description::string() signature::string() value::α)) | (field::(modifiers::(FieldModifier*) name::string() description::string() signature::string())) ;
MethodModifier ::= (access::(access::AccessModifier)) | (static::ε) | (final::ε) | (synchronized::ε) | (bridge::ε) | (varags::ε) | (native::ε) | (abstract::ε) | (strict::ε) | (synthetic::ε) ;
Class ::= (class::(version::integer() modifiers::(ClassModifier*) name::string() signature::string() superName::string() interfaces::(string()*) sourceFile::string() sourceDebug::string() outerClass::string() outerMethod::string() outerMethodDescription::string() innerClasses::(InnerClass*) fields::(Field*) methods::(Method*))) | (class::(version::integer() modifiers::(ClassModifier*) name::string() signature::string() superName::string() interfaces::(string()*) innerClasses::(InnerClass*) fields::(Field*) methods::(Method*))) ;
FieldModifier ::= (access::(access::AccessModifier)) | (static::ε) | (final::ε) | (volatile::ε) | (transient::ε) | (synthetic::ε) | (enum::ε) ;
PrimitiveTypeDescriptor ::= (boolean::ε) | (char::ε) | (byte::ε) | (short::ε) | (int::ε) | (float::ε) | (long::ε) | (double::ε) ;
ClassModifier ::= (access::(access::AccessModifier)) | (final::ε) | (super::ε) | (interface::ε) | (abstract::ε) | (synthetic::ε) | (annotation::ε) | (enum::ε) | (deprecated::ε) ;
Instruction ::= (getStatic::(owner::string() name::string() description::string())) | (putStatic::(owner::string() name::string() description::string())) | (getField::(owner::string() name::string() description::string())) | (putField::(owner::string() name::string() description::string())) | (increment::(index::integer() amount::integer())) | (nop::ε) | (aConstNull::ε) | (iConstM1::ε) | (iConst0::ε) | (iConst1::ε) | (iConst2::ε) | (iConst3::ε) | (iConst4::ε) | (iConst5::ε) | (lConst0::ε) | (lConst1::ε) | (fConst0::ε) | (fConst1::ε) | (fConst2::ε) | (dConst0::ε) | (dConst1::ε) | (iaLoad::ε) | (laLoad::ε) | (faLoad::ε) | (daLoad::ε) | (aaLoad::ε) | (baLoad::ε) | (caLoad::ε) | (saLoad::ε) | (iaStore::ε) | (laStore::ε) | (faStore::ε) | (daStore::ε) | (aaStore::ε) | (baStore::ε) | (caStore::ε) | (saStore::ε) | (pop::ε) | (pop2::ε) | (dup::ε) | (dupX1::ε) | (dupX2::ε) | (dup2::ε) | (dup2X1::ε) | (dup2X2::ε) | (swap::ε) | (iAdd::ε) | (lAdd::ε) | (fAdd::ε) | (dAdd::ε) | (iSub::ε) | (lSub::ε) | (fSub::ε) | (dSub::ε) | (iMul::ε) | (lMul::ε) | (fMul::ε) | (dMul::ε) | (iDiv::ε) | (lDiv::ε) | (fDiv::ε) | (dDiv::ε) | (iRem::ε) | (lRem::ε) | (fRem::ε) | (dRem::ε) | (iNeg::ε) | (lNeg::ε) | (fNeg::ε) | (dNeg::ε) | (iShl::ε) | (lShl::ε) | (iShr::ε) | (lShr::ε) | (iuShr::ε) | (luShr::ε) | (iAnd::ε) | (lAnd::ε) | (iOr::ε) | (lOr::ε) | (iXor::ε) | (lXor::ε) | (i2l::ε) | (i2f::ε) | (i2d::ε) | (l2i::ε) | (l2f::ε) | (l2d::ε) | (f2i::ε) | (f2l::ε) | (f2d::ε) | (d2i::ε) | (d2l::ε) | (d2f::ε) | (i2b::ε) | (i2c::ε) | (i2s::ε) | (lCmp::ε) | (fCmpL::ε) | (fCmpG::ε) | (dCmpL::ε) | (dCmpH::ε) | (iReturn::ε) | (lReturn::ε) | (fReturn::ε) | (dReturn::ε) | (aReturn::ε) | (return::ε) | (arrayLength::ε) | (aThrow::ε) | (monitorEnter::ε) | (monitorExit::ε) | (biPush::(operand::integer())) | (siPush::(operand::integer())) | (newArray::(operand::integer())) | (ifEq::(label::integer())) | (ifNe::(label::integer())) | (ifLt::(label::integer())) | (ifGe::(label::integer())) | (ifGt::(label::integer())) | (ifLe::(label::integer())) | (ifICmpEq::(label::integer())) | (ifICmpNe::(label::integer())) | (ifICmpLt::(label::integer())) | (ifICmpGe::(label::integer())) | (ifICmpGt::(label::integer())) | (ifICmpLe::(label::integer())) | (ifACmpEq::(label::integer())) | (ifACmpNe::(label::integer())) | (goto::(label::integer())) | (jsr::(label::integer())) | (ifNull::(label::integer())) | (ifNonNull::(label::integer())) | (label::(index::integer())) | (lineNumber::(line::integer() labelIndex::integer())) | (localVariable::(opcode::integer() index::integer())) | (iLoad::(index::integer())) | (lLoad::(index::integer())) | (fLoad::(index::integer())) | (dLoad::(index::integer())) | (aLoad::(index::integer())) | (iStore::(index::integer())) | (lStore::(index::integer())) | (fStore::(index::integer())) | (dStore::(index::integer())) | (aStore::(index::integer())) | (ret::(index::integer())) | (ldcString::(string::string())) | (ldcInt::(int::integer())) | (ldcLong::(long::integer())) | (ldcFloat::(float::integer())) | (ldcDouble::(double::integer())) | (lookupSwitch::(defaultLabel::integer() keys::(integer()*) cases::(integer()*))) | (invokeVirtual::(owner::string() name::string() description::string())) | (invokeSpecial::(owner::string() name::string() description::string())) | (invokeStatic::(owner::string() name::string() description::string())) | (invokeInterface::(owner::string() name::string() description::string())) | (invokeDynamic::(owner::string() name::string() description::string())) | (multiANewArray::(description::string() dimensions::integer())) | (tableSwitch::(min::integer() max::integer() defaultLabel::integer() cases::(integer()*))) | (new::(internalName::string())) | (aNewArray::(internalName::string())) | (checkCast::(internalName::string())) | (instanceOf::(internalName::string())) ;
TryCatchBlock ::= (tryCatchBlock::(startLabelIndex::integer() endLabelIndex::integer() handlerLabelIndex::integer() type::string())) | (finallyBlock::(startLabelIndex::integer() endLabelIndex::integer() handlerLabelIndex::integer())) ;
TypeDescriptor ::= (primitive::(type::PrimitiveTypeDescriptor)) | (object::(internalName::string())) | (array::(type::TypeDescriptor)) ;
LocalVariable ::= localVariable::(name::string() description::string() signature::string() startLabelIndex::integer() endLabelIndex::integer() index::integer()) ;
ClassTypeSignature ::= (topLevel::(internalName::string() args::(TypeArg*))) | (inner::(class::ClassTypeSignature name::string() args::(TypeArg*))) ;
FieldTypeSignature ::= (classType::(class::ClassTypeSignature)) | (array::(type::TypeSignature)) | (typeVar::(name::string())) ;
InnerClass ::= (innerClass::(name::string() outerName::string() innerName::string() modifiers::(ClassModifier*))) | (innerClass::(name::string() modifiers::(ClassModifier*))) ;
Method ::= method::(modifiers::(MethodModifier*) name::string() description::string() signature::string() exceptions::(string()*) instructions::(Instruction*) tryCatchBlocks::(TryCatchBlock*) localVariables::(LocalVariable*)) ;
--------------------modula::sdf.bgf--------------------
Selector ::= "^" | ("." Id) | ("[" Expr ("," Expr)* "]") | ("(" (Actual ("," Actual)*)? ")") ;
EnumType ::= "{" IdList? "}" ;
WhileStmt ::= "WHILE" Expr "DO" Stmts "END" ;
IdList ::= Id ("," Id)* ;
ExceptionDecl ::= Id ("(" Type ")")? ;
ImportItem ::= Id | (Id "AS" Id) ;
AssignStmt ::= Expr ":=" Expr ;
SubrangeType ::= "[" Expr ".." Expr "]" ;
TypeLiteral ::= ArrayType | PackedType | EnumType | ObjectType | ProcedureType | RecordType | RefType | SetType | SubrangeType | ("(" Type ")") | TypeName ;
Ancestor ::= TypeName | ObjectType | QualId ;
PackedType ::= "BITS" Expr "FOR" Type ;
Block ::= Decl* "BEGIN" Stmts "END" ;
Override ::= Id ":=" Expr ;
QualId ::= Id ("." Id)? ;
Stmt ::= AssignStmt | Block | CallStmt | CaseStmt | ExitStmt | EvalStmt | ForStmt | IfStmt | LockStmt | LoopStmt | RaiseStmt | RepeatStmt | ReturnStmt | TryFinStmt | TryXptStmt | TCaseStmt | WhileStmt | WithStmt ;
Brand ::= "BRANDED" TextLiteral? ;
CallStmt ::= Expr "(" (Actual ("," Actual)*)? ")" ;
VariableDecl ::= (IdList ":" Type ":=" Expr) | (IdList ":" Type) | (IdList ":=" Expr) ;
Binding ::= Id "=" Expr ;
GenFmls ::= "(" IdList? ")" ;
Type ::= TypeLiteral | QualId ;
Constructor ::= Type "{" AnyCons? "}" ;
Field ::= (IdList ":" Type ":=" Expr) | (IdList ":" Type) | (IdList ":=" Expr) ;
Fields ::= (Field (";" Field)* ";"?)? ;
TryFinStmt ::= "TRY" Stmts "FINALLY" Stmts "END" ;
Label ::= Expr (".." Expr)? ;
Case ::= Label ("," Label)* "=>" Stmts ;
WithStmt ::= "WITH" Binding ("," Binding)* "DO" Stmts "END" ;
RefType ::= "UNTRACED"? Brand? "REF" Type ;
RecordType ::= "RECORD" Fields "END" ;
Decl ::= ("CONST" (ConstDecl ";")*) | ("TYPE" (TypeDecl ";")*) | ("EXCEPTION" (ExceptionDecl ";")*) | ("VAR" (VariableDecl ";")*) | (ProcedureHead ("=" Block Id)? ";") | ("REVEAL" (QualId "=" | "<:" Type ";")*) ;
GenActls ::= "(" IdList? ")" ;
TryXptStmt ::= "TRY" Stmts "EXCEPT" "|"? Handler ("|" Handler)* ("ELSE" Stmts)? "END" ;
Import ::= AsImport | FromImport ;
Formals ::= (Formal (";" Formal)* ";"?)? ;
Mode ::= "VALUE" | "VAR" | "READONLY" ;
Id ::= "NOT" | "ROOT" ;
ObjectType ::= Ancestor? Brand? "OBJECT" Fields ("METHODS" Methods)? ("OVERRIDES" Overrides)? "END" ;
ReturnStmt ::= "RETURN" Expr? ;
CaseStmt ::= "CASE" Expr "OF" "|"? Case ("|" Case)* ("ELSE" Stmts)? "END" ;
RaiseStmt ::= "RAISE" QualId ("(" Expr ")")? ;
ProcedureHead ::= "PROCEDURE" Id Signature ;
LockStmt ::= "LOCK" Expr "DO" Stmts "END" ;
GenMod ::= "GENERIC" "MODULE" Id GenFmls ";" Import* Block Id "." ;
Actual ::= TypeLiteral | ((Id ":=")? Expr) ;
LoopStmt ::= "LOOP" Stmts "END" ;
Handler ::= QualId ("," QualId)* ("(" Id ")")? "=>" Stmts ;
Raises ::= ("{" (QualId ("," QualId)*)? "}") | "ANY" ;
ExitStmt ::= "EXIT" ;
IfStmt ::= "IF" Expr "THEN" Stmts ("ELSIF" Expr "THEN" Stmts)* ("ELSE" Stmts)? "END" ;
TCase ::= Type ("," Type)* ("(" Id ")")? "=>" Stmts ;
EvalStmt ::= "EVAL" Expr ;
TypeDecl ::= Id "=" | "<:" Type ;
RepeatStmt ::= "REPEAT" Stmts "UNTIL" Expr ;
Compilation ::= "UNSAFE"? Interface | Module | GenInf | GenMod ;
Addop ::= "+" | "-" | "&" ;
AnyCons ::= Elt ("," Elt)* ("," "..")? ;
SetType ::= "SET" "OF" Type ;
Relop ::= "=" | "#" | "<" | "<=" | ">" | ">=" | "IN" ;
Interface ::= ("INTERFACE" Id ";" Import* Decl* "END" Id ".") | ("INTERFACE" Id "=" Id GenActls "END" Id ".") ;
Signature ::= "(" Formals ")" (":" Type)? ("RAISES" Raises)? ;
AsImport ::= "IMPORT" ImportItem ("," ImportItem)* ";" ;
Expr ::= (Expr "OR" Expr) | (Expr "AND" Expr) | ("NOT" Expr) | (Expr Relop Expr) | (Expr Addop Expr) | (Expr Mulop Expr) | ("+" Expr) | ("-" Expr) | (Expr Selector) | Id | Literal | Constructor | ("(" Expr ")") ;
ArrayType ::= "ARRAY" (Type ("," Type)*)? "OF" Type ;
Methods ::= (Method (";" Method)* ";"?)? ;
GenInf ::= "GENERIC" "INTERFACE" Id GenFmls ";" Import* Decl* "END" Id "." ;
ForStmt ::= "FOR" Id ":=" Expr "TO" Expr ("BY" Expr)? "DO" Stmts "END" ;
Formal ::= (Mode? IdList ":" Type ":=" Expr) | (Mode? IdList ":" Type) | (Mode? IdList ":=" Expr) ;
FromImport ::= "FROM" Id "IMPORT" IdList ";" ;
ProcedureType ::= "PROCEDURE" Signature ;
Elt ::= (Expr ".." Expr) | Expr | (Id ":=" Expr) ;
ConstDecl ::= Id (":" Type)? "=" Expr ;
Module ::= ("MODULE" Id ("EXPORTS" IdList)? ";" Import* Block Id ".") | ("MODULE" Id ("EXPORTS" IdList)? "=" Id GenActls "END" Id ".") ;
TCaseStmt ::= "TYPECASE" Expr "OF" "|"? TCase ("|" TCase)* ("ELSE" Stmts)? "END" ;
Stmts ::= (Stmt (";" Stmt)* ";"?)? ;
Overrides ::= (Override (";" Override)* ";"?)? ;
Mulop ::= "*" | "/" | "DIV" | "MOD" ;
TypeName ::= "ROOT" | ("UNTRACED" "ROOT") ;
Method ::= Id Signature (":=" Expr)? ;
--------------------modula::src-052.bgf--------------------
Selector ::= "^" | ("." Ident) | ("[" Expr ("," Expr)* "]") | ("(" (Actual ("," Actual)*)? ")") ;
RecordElt ::= (Ident ":=")? Expr ;
EnumType ::= "{" IDList? "}" ;
ExceptionDecl ::= Ident ("(" Type ")")? ;
WhileStmt ::= "WHILE" Expt "DO" Stmts "END" ;
SubrangeType ::= "[" ConstExpr ".." ConstExpr "]" ;
AssignStmt ::= Expr ":=" Expr ;
Ancestor ::= TypeName | ObjectType | "UNTRACED" ;
HexDigit ::= Digit | "A" | "B" | "C" | "D" | "E" | "F" | "a" | "b" | "c" | "d" | "e" | "f" ;
PackedType ::= "BITS" ConstExpr "FOR" Type ;
Block ::= Declaration* "BEGIN" Stmts "END" ;
Number ::= (Digit+) | (Digit+ "_" HexDigit+) | (Digit+ "." Digit+ Exponent?) ;
Stmt ::= AssignStmt | Block | CallStmt | CaseStmt | ExitStmt | EvalStmt | ForStmt | IfStmt | LockStmt | LoopStmt | RaiseStmt | RepeatStmt | ReturnStmt | TryFinStmt | TryXptStmt | TCaseStmt | WhileStmt | WithStmt ;
Brand ::= "BRANDED" TextLiteral? ;
OtherChar ::= " " | "!" | "#" | "$" | "%" | "&" | "(" | ")" | "*" | "+" | "," | "-" | "." | "/" | ":" | ";" | "<" | "=" | ">" | "?" | "@" | "[" | "]" | "^" | "_" | "‘" | "{" | "|" | "}" | "~" | ExtendedChar ;
CallStmt ::= Expr "(" (Actual ("," Actual)*)? ")" ;
VariableDecl ::= IDList ":" Type "&" ":=" Expr ;
Binding ::= Ident "=" Expr ;
Constructor ::= Type "{" (SetCons | RecordCons | ArrayCons)? "}" ;
Field ::= IDList ":" Type "&" ":=" ConstExpr ;
Type ::= TypeName | ArrayType | PackedType | EnumType | ObjectType | ProcedureType | RecordType | RefType | SetType | SubrangeType | ("(" Type ")") ;
Declaration ::= ("CONST" (ConstDecl ";")*) | ("TYPE" (TypeDecl ";")*) | ("EXCEPTION" (ExceptionDecl ";")*) | ("VAR" (VariableDecl ";")*) | (ProcedureHead ("=" Block Ident)? ";") | ("REVEAL" (TypeID "=" | "<:" Type ";")*) ;
CharLiteral ::= "’" PrintingChar | Escape "’" ;
IDList ::= Ident ("," Ident)* ;
Fields ::= (Field (";" Field)* ";"?)? ;
TryFinStmt ::= "TRY" Stmts "FINALLY" Stmts "END" ;
ConstExpr ::= Expr ;
Ident ::= Letter (Letter | Digit | "_")* ;
Case ::= Labels ("," Labels)* "=>" Stmts ;
ExtendedChar ::= " " | "¡" | "¢" | "£" | "¤" | "¥" | "¦" | "§" | "¨" | "©" | "ª" | "«" | "¬" | "­" | "®" | "¯" | "°" | "±" | "²" | "³" | "´" | "µ" | "¶" | "·" | "¸" | "¹" | "º" | "»" | "¼" | "½" | "¾" | "¿" | "À" | "Á" | "Â" | "Ã" | "Ä" | "Å" | "Æ" | "Ç" | "È" | "É" | "Ê" | "Ë" | "Ì" | "Í" | "Î" | "Ï" | "Ð" | "Ñ" | "Ò" | "Ó" | "Ô" | "Õ" | "Ö" | "×" | "Ø" | "Ù" | "Ú" | "Û" | "Ü" | "Ý" | "Þ" | "ß" | "à" | "á" | "â" | "ã" | "ä" | "å" | "æ" | "ç" | "è" | "é" | "ê" | "ë" | "ì" | "í" | "î" | "ï" | "ð" | "ñ" | "ò" | "ó" | "ô" | "õ" | "ö" | "÷" | "ø" | "ù" | "ú" | "û" | "ü" | "ý" | "þ" | "ÿ" ;
Exponent ::= "E" | "e" | "D" | "d" ("+" | "-")? Digit+ ;
WithStmt ::= "WITH" Binding ("," Binding)* "DO" Stmts "END" ;
RefType ::= "UNTRACED"? Brand? "REF" Type ;
RecordType ::= "RECORD" Fields "END" ;
TryXptStmt ::= "TRY" Stmts "EXCEPT" Handler? ("|" Handler)* ("ELSE" Stmts)? "END" ;
Letter ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" ;
Import ::= ("FROM" Ident)? "IMPORT" IDList ";" ;
Operator ::= "+" | "-" | "*" | "/" | "." | "^" | (":" "=") | "=" | "$" | "<" | ("<" "=") | (">" "=") | ">" | "&" | ("<" ":") | ("=" ">") | "," | ";" | "|" | ":" | ("." ".") | "(" | ")" | "{" | "}" | "[" | "]" ;
Formals ::= (Formal (";" Formal)* ";"?)? ;
OctalDigit ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" ;
RecordCons ::= RecordElt ("," RecordElt)* ;
ObjectType ::= Ancestor? Brand? "OBJECT" Fields ("METHODS" Methods)? "END" ;
CaseStmt ::= "CASE" Expr "OF" Case? ("|" Case)* ("ELSE" Stmts)? "END" ;
ReturnStmt ::= "RETURN" Expr? ;
RaiseStmt ::= "RAISE" ExceptionID ("(" Expr ")")? ;
LockStmt ::= "LOCK" Expr "DO" Stmts "END" ;
ProcedureHead ::= "PROCEDURE" Ident Signature ;
Actual ::= ((Ident ":=")? Expr) | Type ;
LoopStmt ::= "LOOP" Stmts "END" ;
PrintingChar ::= Letter | Digit | UtherChar ;
Handler ::= ExceptionID ("," ExceptionID)* ("(" Ident ")")? "=>" Stmts ;
Raises ::= "{" (ExceptionID ("," ExceptionID)*)? "}" ;
ExitStmt ::= "EXIT" ;
IfStmt ::= "IF" Expr "THEN" Stmts ("ELSIF" Expt "THEN" Stmts)* ("ELSE" Stmts)? "END" ;
EvalStmt ::= "EVAL" Expr ;
TypeDecl ::= Ident "=" | "<:" Type ;
Compilation ::= "UNSAFE"? Interface | Module ;
TextLiteral ::= """ (PrintingChar | Escape)* """ ;
Addop ::= "+" | "-" | "&" ;
Escape ::= ("\" "n") | ("\" "t") | ("\" "r") | ("\" "f") | ("\" "\") | ("\" "’") | ("\" """) | ("\" OctalDigit OctalDigit OctalDigit) ;
Labels ::= ConstExpr (".." ConstExpr)? ;
SetType ::= "SET" "OF" Type ;
Relop ::= "=" | "#" | "<" | "<=" | ">" | ">=" | "IN" ;
Interface ::= "INTERFACE" Ident ";" Import* Declaration* "END" Ident "." ;
Signature ::= "(" Formals ")" (":" Type)? ("RAISES" Raises)? ;
Expr ::= E1 ("OR" E1)* ;
SetCons ::= SetElt ("." SetElt)* ;
ArrayType ::= "ARRAY" (Type ("," Type)*)? "OF" Type ;
Methods ::= (Method (";" Method)* ";"?)? ;
ForStmt ::= "FOR" Ident ":=" Expt "TO" Expr ("BY" Expr)? "DO" Stmts "END" ;
Literal ::= Number | CharLiteral | TextLiteral ;
Formal ::= ("VALUE" | "VAR" | "READONLY")? IDList ":" Type "&" ":=" ConstExpr ;
ProcedureID ::= Ident ("." Ident)? ;
Digit ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;
ProcedureType ::= "PROCEDURE" Signature ;
ConstDecl ::= Ident (":" Type)? "=" ConstExpr ;
TCaseStmt ::= "TYPECASE" Expr "OF" Tcase? ("|" Tcase)* ("ELSE" Stmts)? "END" ;
Module ::= "MODULE" Ident ("EXPORTS" IDList)? ";" Import* Block Ident "." ;
SetElt ::= Expr (".." Expr)? ;
Stmts ::= (Stmt (";" Stmt)* ";"?)? ;
ExceptionID ::= Ident ("." Ident)? ;
ArrayCons ::= Expr ("," Expr)* ("," "..")? ;
TypeName ::= (Ident ("." Ident)?) | "ROOT" | ("UNTRACED" "ROOT") ;
Mulop ::= "*" | "/" | "DIV" | "MOD" ;
Tcase ::= Type ("," Type)* ("(" Ident ")")? "=>" Stmts ;
Repeatstmt ::= "REPEAT" Stmts "UNTIL" Expr ;
Method ::= Ident Signature "&" ":=" ProcedureID ;
--------------------modula::dagenais-cordy.bgf--------------------
Selector ::= ("." id) | ("[" Expr ComaExpr* "]") | ("(" {Actual ","}* ")") | "^" ;
RecordElt ::= Expr EqualExpr? ;
IdList ::= {id ","}* ;
WhileStmt ::= "WHILE" Expr "DO" Stmts "END" ;
ExceptionDecl ::= id ParenthesizedType? ";" NL ;
DotDotConstExpr ::= ".." ConstExpr ;
ImportItem ::= id AsId? ;
SubrangeType ::= "[" ConstExpr ".." ConstExpr "]" ;
AssignStmt ::= Expr ":=" Expr ;
ParenthesizedType ::= "(" Type ")" ;
DotDotExpr ::= ".." Expr ;
PackedType ::= "BITS" ConstExpr "FOR" Type ;
TypecaseStmt ::= "TYPECASE" Expr "OF" NL TCase? VerticalTCase* ElseStmts? "END" ;
IInterface ::= "UNSAFE"? "INTERFACE" id "=" id GenActls "END" id "." NL ;
Block ::= Decl* "BEGIN" Stmts "END" ;
Override ::= id ":=" ConstExpr ;
QualId ::= id DotId? ;
Stmt ::= IfStmt | ForStmt | ReturnStmt | WhileStmt | AssignStmt | CallStmt | Block | CaseStmt | ExitStmt | EvalStmt | LockStmt | LoopStmt | RaiseStmt | RepeatStmt | TypecaseStmt | TryStmt | WithStmt ;
Brand ::= "BRANDED" ConstExpr? ;
ExceptOrFinally ::= ("EXCEPT" NL Handler? VerticalHandler* ElseStmts?) | ("FINALLY" Stmts) ;
VerticalCase ::= "|" Case ;
CallStmt ::= Expr "(" {Actual ","}* ")" ;
VariableDecl ::= IdList ColonType? EqualExpr? ";" NL ;
Binding ::= id "=" Expr ;
RaisesList ::= ("{" {QualId ","}* "}") | "ANY" ;
SemicolonFormal ::= ";" Formal ;
GenFmls ::= "(" IdList? ")" ;
SemiColonOverride ::= ";" NL Override ;
Constructor ::= Type "{" AnyCons "}" ;
Field ::= IdList ColonType? EqualConstExpr? ;
Type ::= TypeName | ArrayType | EnumerationType | RecordType | ObjectType | ProcedureType | RefType | SetType | SubrangeType | PackedType | ("(" Type ")") ;
Fields ::= FieldList? ;
EqualBlock ::= "=" IN NL Block id EX ;
SemiColonStmt ::= ";" NL Stmt ;
ConstExpr ::= Expr ;
OptStmts ::= Stmt SemiColonStmt* ";"? NL ;
ParenthesizedId ::= "(" id ")" ;
TheOverrides ::= "OVERRIDES" NL Overrides ;
VerticalHandler ::= "|" Handler ;
ElseStmts ::= "ELSE" Stmts ;
Case ::= {Labels ","}* "=>" Stmts ;
WithStmt ::= "WITH" Binding+ "DO" Stmts "END" ;
VerticalTCase ::= "|" TCase ;
RefType ::= "UNTRACED"? Brand? "REF" Type ;
RecordType ::= "RECORD" IN NL Fields "END" EX ;
Decl ::= (ProcedureHead EqualBlock? ";" NL NL) | ("VAR" IN NL VariableDecl* EX) | ("TYPE" IN NL TypeDecl* EX NL) | ("CONST" IN NL ConstDecl* EX NL) | ("EXCEPTION" IN NL ExceptionDecl* EX NL) | ("REVEAL" IN NL RevealDecl* EX NL) ;
GenActls ::= "(" IdList? ")" ;
Import ::= AsImport | (FromImport NL NL) ;
Formals ::= Formal SemicolonFormal* ";"? ;
EqualConstExpr ::= ":=" ConstExpr ;
Mode ::= "VALUE" | "VAR" | "READONLY" ;
RecordCons ::= {RecordElt ","}* ;
AddOp ::= "+" | "-" | "&" ;
MethodList ::= IN Method SemiColonMethod* ";"? EX NL ;
RelOp ::= "=" | "#" | "<" | "<=" | ">" | ">=" | "IN" ;
ObjectType ::= ObjectOrTypeName? Brand? "OBJECT" IN NL Fields TheMethods? TheOverrides? "END" EX ;
CaseStmt ::= "CASE" Expr "OF" NL Case? VerticalCase* ElseStmts? "END" ;
ReturnStmt ::= "RETURN" Expr? ;
RevealDecl ::= (QualId "=" Type ";" NL) | (QualId "<:" Type ";" NL) ;
ComaExpr ::= "," Expr ;
RaiseStmt ::= "RAISE" QualId ParenthesizedExpr? ;
LockStmt ::= "LOCK" Expr "DO" Stmts "END" ;
ProcedureHead ::= "PROCEDURE" id Signature ;
SemiColonMethod ::= ";" NL Method ;
GInterface ::= "GENERIC" "INTERFACE" id GenFmls ";" Import* Decl* NL "END" id "." NL ;
ParenthesizedExpr ::= "(" Expr ")" ;
Actual ::= Type | Expr | (id ":=" Expr) ;
LoopStmt ::= "LOOP" Stmts "END" ;
OverrideList ::= IN Override SemiColonOverride* ";"? EX NL ;
Handler ::= {QualId ","}* ParenthesizedId? "=>" Stmts ;
Elsif ::= "ELSIF" Expr "THEN" Stmts ;
EqualExpr ::= ":=" Expr ;
ObjectOrTypeName ::= TypeName | ObjectType ;
Raises ::= "RAISES" RaisesList ;
ExitStmt ::= "EXIT" ;
MulOp ::= "*" | "/" | "DIV" | "MOD" ;
IfStmt ::= "IF" Expr "THEN" Stmts Elsif* ElseStmts? "END" ;
DotId ::= "." id ;
TCase ::= {Type ","}* ParenthesizedId? "=>" Stmts ;
EvalStmt ::= "EVAL" Expr ;
TypeDecl ::= (id "=" Type ";" NL) | (id "<:" Type ";" NL) ;
RepeatStmt ::= "REPEAT" Stmts "UNTIL" Expr ;
TheMethods ::= "METHODS" NL Methods ;
Labels ::= ConstExpr DotDotConstExpr? ;
Exports ::= "EXPORTS" IdList ;
SignOp ::= "+" | "-" ;
AnyCons ::= SetCons | RecordCons | ArrayCons ;
SetType ::= "SET" "OF" Type ;
ColonType ::= ":" Type ;
Interface ::= "UNSAFE"? "INTERFACE" id ";" NL NL Import* Decl* NL "END" id "." NL ;
FieldList ::= IN Field SemiColonField* ";"? EX NL ;
Signature ::= "(" Formals? ")" ColonType? Raises? ;
ComaImportItem ::= "," ImportItem ;
AsImport ::= "IMPORT" ImportItem ComaImportItem* ";" NL NL ;
Expr ::= E1 OrE1* ;
IModule ::= "UNSAFE"? "MODULE" id Exports? "=" id GenActls "END" id "." NL ;
SetCons ::= {SetElt ","}* ;
ArrayType ::= "ARRAY" {Type ","}* "OF" Type ;
GModule ::= "GENERIC" "MODULE" id GenFmls ";" NL NL Import* Block id "." NL ;
Methods ::= MethodList? ;
ForStmt ::= "FOR" id ":=" Expr "TO" Expr ByExpr? "DO" Stmts "END" ;
Formal ::= Mode? IdList ColonType? EqualConstExpr? ;
FromImport ::= "FROM" id "IMPORT" IdList ";" NL NL ;
ProcedureType ::= "PROCEDURE" Signature ;
AsId ::= "AS" id ;
ConstDecl ::= id ColonType? "=" ConstExpr ";" NL ;
ByExpr ::= "BY" Expr ;
Module ::= "UNSAFE"? "MODULE" id Exports? ";" NL NL Import* Block id "." NL ;
SetElt ::= Expr DotDotExpr? ;
Stmts ::= IN NL OptStmts? EX ;
ArrayCons ::= {Expr ","}* ComaDotDot? ;
SemiColonField ::= ";" NL Field ;
Overrides ::= OverrideList? ;
TypeName ::= QualId | "ROOT" | ("UNTRACED" "ROOT") ;
TryStmt ::= "TRY" Stmts ExceptOrFinally "END" ;
Method ::= id Signature EqualConstExpr? ;
EnumerationType ::= "{" IdList? "}" ;
ComaDotDot ::= "," ".." ;
--------------------xpath::w3c-xpath1.bgf--------------------
AbbreviatedRelativeLocationPath ::= [NT-AbbreviatedRelativeLocationPath] RelativeLocationPath "//" Step ;
AxisSpecifier ::= [NT-AxisSpecifier] (AxisName "::") | AbbreviatedAxisSpecifier ;
NodeType ::= [NT-NodeType] "comment" | "text" | "processing-instruction" | "node" ;
PrimaryExpr ::= [NT-PrimaryExpr] VariableReference | ("(" Expr ")") | Literal | Number | FunctionCall ;
FunctionCall ::= [NT-FunctionCall] FunctionName "(" (Argument ("," Argument)*)? ")" ;
ExprWhitespace ::= [NT-ExprWhitespace] S ;
AbsoluteLocationPath ::= [NT-AbsoluteLocationPath] ("/" RelativeLocationPath?) | AbbreviatedAbsoluteLocationPath ;
OperatorName ::= [NT-OperatorName] "and" | "or" | "mod" | "div" ;
EqualityExpr ::= [NT-EqualityExpr] RelationalExpr | (EqualityExpr "=" RelationalExpr) | (EqualityExpr "!=" RelationalExpr) ;
FilterExpr ::= [NT-FilterExpr] PrimaryExpr | (FilterExpr Predicate) ;
PredicateExpr ::= [NT-PredicateExpr] Expr ;
AxisName ::= [NT-AxisName] "ancestor" | "ancestor-or-self" | "attribute" | "child" | "descendant" | "descendant-or-self" | "following" | "following-sibling" | "namespace" | "parent" | "preceding" | "preceding-sibling" | "self" ;
Step ::= [NT-Step] (AxisSpecifier NodeTest Predicate*) | AbbreviatedStep ;
AbbreviatedAbsoluteLocationPath ::= [NT-AbbreviatedAbsoluteLocationPath] "//" RelativeLocationPath ;
Number ::= [NT-Number] (Digits ("." Digits?)?) | ("." Digits) ;
AbbreviatedStep ::= [NT-AbbreviatedStep] "." | ".." ;
UnaryExpr ::= [NT-UnaryExpr] UnionExpr | ("-" UnaryExpr) ;
ExprToken ::= [NT-ExprToken] "(" | ")" | "[" | "]" | "." | ".." | "@" | "," | "::" | NameTest | NodeType | Operator | FunctionName | AxisName | Literal | Number | VariableReference ;
AbbreviatedAxisSpecifier ::= [NT-AbbreviatedAxisSpecifier] "@"? ;
NameTest ::= [NT-NameTest] "*" | (NCName ":" "*") | QName ;
Argument ::= [NT-Argument] Expr ;
RelationalExpr ::= [NT-RelationalExpr] AdditiveExpr | (RelationalExpr "<" AdditiveExpr) | (RelationalExpr ">" AdditiveExpr) | (RelationalExpr "<=" AdditiveExpr) | (RelationalExpr ">=" AdditiveExpr) ;
PathExpr ::= [NT-PathExpr] LocationPath | FilterExpr | (FilterExpr "/" RelativeLocationPath) | (FilterExpr "//" RelativeLocationPath) ;
LocationPath ::= [NT-LocationPath] RelativeLocationPath | AbsoluteLocationPath ;
OrExpr ::= [NT-OrExpr] AndExpr | (OrExpr "or" AndExpr) ;
Predicate ::= [NT-Predicate] "[" PredicateExpr "]" ;
Expr ::= [NT-Expr] OrExpr ;
NodeTest ::= [NT-NodeTest] NameTest | (NodeType "(" ")") | ("processing-instruction" "(" Literal ")") ;
VariableReference ::= [NT-VariableReference] "$" QName ;
AndExpr ::= [NT-AndExpr] EqualityExpr | (AndExpr "and" EqualityExpr) ;
MultiplicativeExpr ::= [NT-MultiplicativeExpr] UnaryExpr | (MultiplicativeExpr MultiplyOperator UnaryExpr) | (MultiplicativeExpr "div" UnaryExpr) | (MultiplicativeExpr "mod" UnaryExpr) ;
MultiplyOperator ::= [NT-MultiplyOperator] "*" ;
Digits ::= [NT-Digits] ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
RelativeLocationPath ::= [NT-RelativeLocationPath] Step | (RelativeLocationPath "/" Step) | AbbreviatedRelativeLocationPath ;
UnionExpr ::= [NT-UnionExpr] PathExpr | (UnionExpr "|" PathExpr) ;
Operator ::= [NT-Operator] OperatorName | MultiplyOperator | "/" | "//" | "|" | "+" | "-" | "=" | "!=" | "<" | "<=" | ">" | ">=" ;
AdditiveExpr ::= [NT-AdditiveExpr] MultiplicativeExpr | (AdditiveExpr "+" MultiplicativeExpr) | (AdditiveExpr "-" MultiplicativeExpr) ;
--------------------basic::vb-glineur.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------bibtex::bibtex-1.1.bgf--------------------
Proceedings ::= InProceedings ;
 Proceedings ::= year::String title::String ;
Integer ::= integer() ;
BookTitledEntry ::= InCollection ;
DatedEntry ::= Booklet ;
 DatedEntry ::= Proceedings ;
InProceedings ::= ε ;
PhDThesis ::= school::String ;
Article ::= journal::String ;
Unpublished ::= note::String ;
Booklet ::= year::String ;
String ::= string() ;
MasterThesis ::= school::String ;
InBook ::= chapter::Integer ;
Misc ::= id::String ;
Author ::= author::String ;
TechReport ::= (authors::Author)+ ;
Book ::= InBook ;
 Book ::= InCollection ;
 Book ::= publisher::String ;
AuthoredEntry ::= Article ;
 AuthoredEntry ::= TechReport ;
 AuthoredEntry ::= Unpublished ;
 AuthoredEntry ::= Book ;
 AuthoredEntry ::= ThesisEntry ;
BibTeXFile ::= (entries::BibTeXEntry)+ ;
ThesisEntry ::= PhDThesis ;
 ThesisEntry ::= MasterThesis ;
Manual ::= title::String ;
TitledEntry ::= Manual ;
 TitledEntry ::= Unpublished ;
 TitledEntry ::= Proceedings ;
BibTeXEntry ::= AuthoredEntry ;
 BibTeXEntry ::= DatedEntry ;
 BibTeXEntry ::= TitledEntry ;
 BibTeXEntry ::= BookTitledEntry ;
 BibTeXEntry ::= Misc ;
InCollection ::= publisher::String booktitle::String ;
--------------------bibtex::bibtex-1.2.bgf--------------------
Proceedings ::= editor::String volume::String number::String series::String address::String organization::String publisher::String note::String ;
MastersThesis ::= type::String address::String note::String ;
BookTitledEntry ::= InCollection ;
Conference ::= pages::String ;
DatedEntry ::= Booklet ;
 DatedEntry ::= Proceedings ;
InProceedings ::= Conference ;
 InProceedings ::= pages::String ;
PhdThesis ::= type::String address::String note::String ;
Article ::= volume::String number::String pages::String note::String ;
Unpublished ::= (authors::Author)+ ;
Booklet ::= (authors::Author)+ howpublished::String address::String note::String ;
Entry ::= AuthoredEntry ;
 Entry ::= BookTitledEntry ;
 Entry ::= InstitutionEntry ;
 Entry ::= EditoredEntry ;
 Entry ::= DatedEntry ;
 Entry ::= JournalEntry ;
 Entry ::= TitledEntry ;
 Entry ::= NotedEntry ;
 Entry ::= PublisheredEntry ;
 Entry ::= SchoolEntry ;
 Entry ::= Misc ;
String ::= string() ;
InBook ::= chapter::String type::String ;
Misc ::= (authors::Author)+ title::String howpublished::String month::String year::String note::String ;
Author ::= name::String ;
TechReport ::= type::String number::String address::String note::String ;
Book ::= InBook ;
 Book ::= InCollection ;
 Book ::= volume::String number::String series::String address::String edition::String note::String ;
AuthoredEntry ::= Article ;
 AuthoredEntry ::= Book ;
 AuthoredEntry ::= TechReport ;
 AuthoredEntry ::= ThesisEntry ;
 AuthoredEntry ::= InProceedings ;
 AuthoredEntry ::= Unpublished ;
BibtexFile ::= (entries::Entry)+ ;
Manual ::= organization::String address::String edition::String note::String ;
ThesisEntry ::= PhdThesis ;
 ThesisEntry ::= MastersThesis ;
TitledEntry ::= Manual ;
 TitledEntry ::= Booklet ;
 TitledEntry ::= Proceedings ;
InCollection ::= chapter::String type::String ;
--------------------bibtex::bibtex-1.bgf--------------------
Howpublished ::= value::String ;
Day ::= value::String ;
Volume ::= value::String ;
Title ::= value::String ;
PhdThesis ::= key::String (fields::Field)+ ;
Booklet ::= key::String (fields::Field)+ ;
String ::= string() ;
AuthorUrls ::= value::String ;
Inbook ::= key::String (fields::Field)+ ;
Chapter ::= value::String ;
Bibtex ::= (entries::Entry)+ ;
Techreport ::= key::String (fields::Field)+ ;
LocatedElement ::= Entry ;
Number ::= value::String ;
Authors ::= value::String ;
Manual ::= key::String (fields::Field)+ ;
Issn ::= value::String ;
Pages ::= value::String ;
Incollection ::= key::String (fields::Field)+ ;
Month ::= value::String ;
Proceedings ::= key::String (fields::Field)+ ;
Doi ::= value::String ;
Edition ::= value::String ;
Integer ::= integer() ;
Year ::= value::String ;
MastersThesis ::= key::String (fields::Field)+ ;
Publisher ::= value::String ;
Type ::= value::String ;
Field ::= Authors ;
 Field ::= AuthorUrls ;
 Field ::= Title ;
 Field ::= Journal ;
 Field ::= BookTitle ;
 Field ::= Institution ;
 Field ::= Organization ;
 Field ::= Type ;
 Field ::= Day ;
 Field ::= Number ;
 Field ::= Chapter ;
 Field ::= Volume ;
 Field ::= Series ;
 Field ::= Pages ;
 Field ::= Publisher ;
 Field ::= Howpublished ;
 Field ::= School ;
 Field ::= Editor ;
 Field ::= Edition ;
 Field ::= Address ;
 Field ::= Year ;
 Field ::= Month ;
 Field ::= Note ;
 Field ::= Text ;
 Field ::= AbstractField ;
 Field ::= Isbn ;
 Field ::= Issn ;
 Field ::= Url ;
 Field ::= Doi ;
Inproceedings ::= key::String (fields::Field)+ ;
AbstractField ::= value::String ;
Institution ::= value::String ;
Series ::= value::String ;
Journal ::= value::String ;
Isbn ::= value::String ;
Article ::= key::String (fields::Field)+ ;
Address ::= value::String ;
School ::= value::String ;
Organization ::= value::String ;
Note ::= value::String ;
Entry ::= Article ;
 Entry ::= Book ;
 Entry ::= Inbook ;
 Entry ::= Booklet ;
 Entry ::= Inproceedings ;
 Entry ::= Proceedings ;
 Entry ::= Incollection ;
 Entry ::= Techreport ;
 Entry ::= PhdThesis ;
 Entry ::= MastersThesis ;
 Entry ::= Manual ;
 Entry ::= Misc ;
Url ::= value::String ;
BookTitle ::= value::String ;
Text ::= value::String ;
Editor ::= value::String ;
Misc ::= key::String (fields::Field)+ ;
Book ::= key::String (fields::Field)+ ;
Boolean ::= "true" | "false" ;
--------------------bibtex::bql.bgf--------------------
Field ::= name::String entry::Entry ;
LocatedElement ::= Entry ;
Boolean ::= "true" | "false" ;
Expression ::= field::String value::String ;
Query ::= (entries::Entry)+ (predicates::Predicate)+ ;
Predicate ::= entry::Entry (expression::Expression)+ ;
Entry ::= name::String type::String allFields::Boolean (fields::Field)+ predicate::Predicate ;
String ::= string() ;
--------------------dot::doux.bgf--------------------
Integer ::= integer() ;
SubGraph ::= type::String rankDir::String dim::Integer (contents::GraphElement)+ label::String color::String z::Integer graph::Graph ;
GraphElement ::= DirectedArc ;
 GraphElement ::= Constraint ;
 GraphElement ::= Node ;
 GraphElement ::= SubGraph ;
Graph ::= SubGraph ;
 Graph ::= type::String rankDir::String dim::Integer (contents::GraphElement)+ ;
Constraint ::= val::String (refers::String)+ ;
DirectedArc ::= sourceNode::String sourcePart::String targetNode::String targetPart::String shape::String ;
LocatedElement ::= NamedElement ;
Boolean ::= "true" | "false" ;
NamedElement ::= Graph ;
 NamedElement ::= GraphElement ;
 NamedElement ::= Node ;
Node ::= shape::String style::String ;
String ::= string() ;
--------------------dot::palies.bgf--------------------
NodeShape ::= SimpleNodeShape ;
 NodeShape ::= PointNodeShape ;
 NodeShape ::= ComplexNodeShape ;
Integer ::= integer() ;
VerticalCompartment ::= complexLabel::ComplexLabel compartments::Compartment anchor::Anchor ;
Nodelike ::= SubGraph ;
 Nodelike ::= Node ;
ArrowShape ::= clipping::String isPlain::Boolean size::Integer ;
Anchor ::= name::String source::Compartment ;
Label ::= SimpleLabel ;
 Label ::= ComplexLabel ;
MNodeShape ::= toplabel::Label bottomlabel::Label ;
Arc ::= DirectedArc ;
 Arc ::= UndirectedArc ;
Compartment ::= VerticalCompartment ;
 Compartment ::= HorizontalCompartment ;
 Compartment ::= SimpleCompartment ;
UndirectedArc ::= fromNode::Nodelike toNode::Nodelike (layers::Layer)+ constraint::Boolean group::String minlen::Integer sameHead::String sameTail::String lhead::Nodelike ltail::Nodelike decorate::Boolean ;
Layer ::= (nodes::Nodelike)+ (arcs::Arc)+ graph::Graph layerSeparator::String ;
String ::= string() ;
ComplexNodeShape ::= PolygonNodeShape ;
 ComplexNodeShape ::= MNodeShape ;
 ComplexNodeShape ::= RecordNodeShape ;
PointNodeShape ::= ε ;
RecordNodeShape ::= ε ;
HorizontalCompartment ::= complexLabel::ComplexLabel compartments::Compartment anchor::Anchor ;
GraphElement ::= Graph ;
 GraphElement ::= Layer ;
 GraphElement ::= Nodelike ;
 GraphElement ::= Arc ;
 GraphElement ::= Shape ;
Graph ::= type::String rankDir::String labeljust::String labelloc::String concentrate::Boolean (nodes::Nodelike)+ boundingBox::String compound::Boolean (layers::Layer)+ nodeSeparation::Double ordering::String size::String ratio::String center::Boolean ;
SubGraph ::= (nodes::Nodelike)+ labelloc::String ;
SimpleNodeShape ::= ε ;
DirectedArc ::= arrowHead::ArrowShape headlabel::Label taillabel::Label arrowTail::ArrowShape tail_lp::Double head_lp::Double ;
Boolean ::= "true" | "false" ;
PolygonNodeShape ::= sides::Integer skew::Integer distortion::Integer isRegular::Boolean orientation::Integer ;
ComplexLabel ::= (compartments::Compartment)+ ;
Node ::= fixedSize::Boolean fontname::String fontsize::Integer height::Integer width::Integer shape::NodeShape ;
SimpleLabel ::= content::String ;
Shape ::= NodeShape ;
 Shape ::= ArrowShape ;
SimpleCompartment ::= content::String ;
--------------------dot::rascal-abstract.bgf--------------------
Dotline ::= graph::DotGraph outline::Outline ;
NodeId ::= Id PortId ;
Stm ::= (N::(id::Id attrs::Attrs)) | (N::(id::Id)) | (N::(nid::NodeId attrs::Attrs)) | (N::(nid::NodeId)) | (E::(from::Id to::Id attrs::Attrs)) | (E::(from::Id to::Id)) | (E::(nfrom::NodeId to::Id attrs::Attrs)) | (E::(nfrom::NodeId to::Id)) | (E::(sfrom::Stm to::Id attrs::Attrs)) | (E::(sfrom::Stm to::Id)) | (E::(from::Id nto::NodeId attrs::Attrs)) | (E::(from::Id nto::NodeId)) | (E::(nfrom::NodeId nto::NodeId attrs::Attrs)) | (E::(nfrom::NodeId nto::NodeId)) | (E::(sfrom::Stm nto::NodeId attrs::Attrs)) | (E::(sfrom::Stm nto::NodeId)) | (E::(from::Id sto::Stm attrs::Attrs)) | (E::(from::Id sto::Stm)) | (E::(nfrom::NodeId sto::Stm attrs::Attrs)) | (E::(nfrom::NodeId sto::Stm)) | (E::(sfrom::Stm sto::Stm attrs::Attrs)) | (E::(sfrom::Stm sto::Stm)) | (S::(id::Id stms::Stms)) | (S::(stms::Stms)) | (A::(prop::Id val::Id)) | (GRAPH::(attrs::Attrs)) | (NODE::(attrs::Attrs)) | (EDGE::(attrs::Attrs)) ;
PortId ::= Id CompassPt ;
Id ::= string() ;
Stms ::= Stm* ;
CompassPt ::= (N::ε) | (NE::ε) | (E::ε) | (SE::ε) | (S::ε) | (SW::ε) | (W::ε) | (NW::ε) | (C::ε) | (_::ε) ;
DotGraph ::= (graph::(id::Id stmts::Stms)) | (digraph::(id::Id stmts::Stms)) ;
Outline ::= (key::integer() args::(string()*))* ;
Attrs ::= Attr* ;
Attr ::= prop::string() val::Id ;
--------------------dot::rascal-concrete.bgf--------------------
AttrStatement ::= AttrTag AttrList ;
EdgeOp ::= "->" ;
 EdgeOp ::= "--" ;
NodeId ::= Id Port ;
 NodeId ::= Id ;
DotAttr ::= Id "=" Id ;
 DotAttr ::= Id "=" Id "," ;
EdgeStatement ::= Nod EdgeRhs AttrList ;
StatementOptional ::= Statement ";"? ;
Statement ::= AttrStatement ;
 Statement ::= EdgeStatement ;
 Statement ::= NodeStatement ;
 Statement ::= Id "=" Id ;
AttrList ::= AttrList0* ;
Graph ::= "digraph" ;
 Graph ::= AttrTag ;
 Graph ::= "graph" ;
Subgraph ::= ("subgraph" Id?)? "{" StatementList "}" ;
StatementList ::= StatementOptional* ;
NodeStatement ::= Nod AttrList ;
AttrTag ::= "node" ;
 AttrTag ::= "graph" ;
 AttrTag ::= "edge" ;
DOT ::= LAYOUT* Graph Id "{" StatementList "}" "\n"? ;
Edg ::= EdgeOp Nod ;
Nod ::= Subgraph ;
 Nod ::= NodeId ;
Port ::= ":" Id Id? ;
EdgeRhs ::= Edg+ ;
--------------------html::allilaire.bgf--------------------
OBJECT ::= classid::String id::String data::String type::String standby::String ;
TR ::= valign::String align::String table::TABLE (tds::TD)+ ;
LI ::= liValue::String ;
SELECT ::= multiple::String size::String name::String ;
MAP ::= body::BODY ;
HEADElement ::= LINK ;
 HEADElement ::= TITLE ;
TEXTAREA ::= name::String rows::String cols::String ;
BODYElement ::= H1 ;
 BODYElement ::= H2 ;
 BODYElement ::= H3 ;
 BODYElement ::= H4 ;
 BODYElement ::= EM ;
 BODYElement ::= STRONG ;
 BODYElement ::= B ;
 BODYElement ::= I ;
 BODYElement ::= TT ;
 BODYElement ::= PRE ;
 BODYElement ::= BIG ;
 BODYElement ::= SMALL ;
 BODYElement ::= SUB ;
 BODYElement ::= SUP ;
 BODYElement ::= STRIKE ;
 BODYElement ::= FONT ;
 BODYElement ::= IMG ;
 BODYElement ::= BR ;
 BODYElement ::= MAP ;
 BODYElement ::= AREA ;
 BODYElement ::= STYLE ;
 BODYElement ::= EMBED ;
 BODYElement ::= NOEMBED ;
 BODYElement ::= SPAN ;
 BODYElement ::= A ;
 BODYElement ::= DIV ;
 BODYElement ::= P ;
 BODYElement ::= TABLEElement ;
LINK ::= rel::String title::String ahref::String type::String ;
EMBED ::= src::String width::String height::String align::String vspace::String hspace::String border::String ;
TITLE ::= head::HEAD ;
OPTION ::= selected::String optionValue::String ;
TH ::= colspan::String rowspan::String valign::String align::String width::String tr::TR ;
STRIKE ::= body::BODY ;
DIV ::= align::String ;
String ::= string() ;
TD ::= TH ;
 TD ::= colspan::String rowspan::String valign::String align::String width::String tr::TR ;
TABLE ::= border::String width::String cellspacing::String cellpadding::String (trs::TR)+ ;
TABLEElement ::= TABLE ;
 TABLEElement ::= TR ;
 TABLEElement ::= TD ;
SUP ::= body::BODY ;
PARAM ::= name::String paramValue::String ;
NOFRAME ::= ε ;
HTML ::= head::HEAD body::BODY ;
INPUT ::= align::String maxlength::String size::String checked::String src::String inputValue::String name::String type::String ;
EM ::= body::BODY ;
SMALL ::= body::BODY ;
IFRAME ::= src::String name::String marginwidth::String marginheight::String scrolling::String noresize::String ;
IMG ::= src::String width::String height::String alt::String align::String vspace::String hspace::String ismap::String usemap::String border::String ;
BODY ::= background::String bgcolor::String text::String link::String alink::String vlink::String (bodyElements::BODYElement)+ html::HTML ;
BIG ::= body::BODY ;
SUB ::= body::BODY ;
HEAD ::= (headElements::HEADElement)+ html::HTML ;
ListElement ::= OL ;
 ListElement ::= UL ;
 ListElement ::= LI ;
Integer ::= integer() ;
OL ::= start::String ;
APPLET ::= applet::String class::String src::String align::String width::String height::String ;
NOEMBED ::= body::BODY ;
UL ::= type::String ;
STRONG ::= body::BODY ;
FRAMESET ::= rows::String cols::String framespacing::String frameborder::String border::String ;
HTMLElement ::= HEAD ;
 HTMLElement ::= HEADElement ;
 HTMLElement ::= BODY ;
 HTMLElement ::= BODYElement ;
 HTMLElement ::= value::String (children::HTMLElement)+ parent::HTMLElement ;
STYLE ::= body::BODY ;
DT ::= ε ;
P ::= body::BODY ;
BR ::= clear::String ;
FONT ::= color::String face::String size::String ;
FRAME ::= IFRAME ;
 FRAME ::= src::String name::String marginwidth::String marginheight::String scrolling::String noresize::String ;
AREA ::= shape::String coords::String ahref::String ;
SPAN ::= style::String ;
I ::= body::BODY ;
DL ::= ε ;
Boolean ::= "true" | "false" ;
FORM ::= action::String method::String ;
PRE ::= body::BODY ;
B ::= body::BODY ;
A ::= ahref::String name::String id::String ;
DD ::= ε ;
TT ::= body::BODY ;
--------------------html::guyard.bgf--------------------
Ol ::= (li::Li)+ ;
Tbody ::= (tr::Tr)+ ;
Base ::= href::URI id::ID ;
Noscript ::= block::Block ;
Del ::= (flowelement::Flow)+ cite::URI datetime::Datetime ;
Script ::= id::ID charset::Charset type::ContentType src::URI defer::String xml:space::String ;
Small ::= (smallElements::Inline)+ ;
Form ::= (formelement::FormContent)+ action::URI method::FomeMethod enctype::ContentType onsubmit::ScriptExpression onreset::ScriptExpression accept::ContentTypes accept-charset::Charsets ;
ScriptExpression ::= ε ;
Heading ::= H1 ;
 Heading ::= H2 ;
 Heading ::= H3 ;
 Heading ::= H4 ;
 Heading ::= H5 ;
 Heading ::= H6 ;
Big ::= (bigElements::Inline)+ ;
HeadElement ::= TitleHeadElement ;
 HeadElement ::= BaseHeadElement ;
IDREFS ::= (idrefs::IDREF)+ ;
Phrase ::= Em ;
 Phrase ::= Strong ;
 Phrase ::= Dfn ;
 Phrase ::= Code ;
 Phrase ::= Samp ;
 Phrase ::= Kbd ;
 Phrase ::= Var ;
 Phrase ::= Cite ;
 Phrase ::= Abbr ;
 Phrase ::= Acronym ;
 Phrase ::= Q ;
 Phrase ::= Sub ;
 Phrase ::= Sup ;
Label ::= (labelelements::Inline)+ for::IDREF accesskey::Character onfocus::ScriptExpression onblur::ScriptExpression ;
Address ::= (addressElements::Inline)+ ;
Ins ::= (flowelement::Flow)+ cite::URI datetime::Datetime ;
Kbd ::= (kbdElements::Inline)+ ;
Pixels ::= ε ;
Optgroup ::= (options::Option)+ disabled::Boolean label::Text ;
Html ::= i18n::I18n id::ID xmlns::URI head::Head body::Body ;
Em ::= (emElements::Inline)+ ;
ButtonContent ::= Special ;
 ButtonContent ::= Heading ;
 ButtonContent ::= Lists ;
 ButtonContent ::= Blocktext ;
Charsets ::= charsets::Charset ;
Caption ::= (captionelement::Inline)+ ;
Tfoot ::= (tr::Tr)+ ;
Body ::= (bodyElements::Block)+ onload::ScriptExpression onunload::ScriptExpression html::Html ;
Inline ::= inline ;
Strong ::= (strongElements::Inline)+ ;
Ul ::= (li::Li)+ ;
Dt ::= (dtElements::Inline)+ ;
Table ::= (caption::Caption)+ colelement::ColElement thead::Thead tfoot::Tfoot tableelement::TableElement summary::Text width::Length border::Pixels frame::TFrame rules::TRules cellspacing::Length cellpadding::Length ;
Area ::= shape::Shape coords::Coords href::URI nohref::Boolean alt::Text ;
ButtonType ::= (button::ε) | (submit::ε) | (reset::ε) ;
Input ::= type::InputType name::CDATA value::CDATA checked::Boolean disabled::Boolean readonly::Boolean size::CDATA maxlength::Number src::URI alt::CDATA usemap::URI onselect::ScriptExpression onchange::ScriptExpression accept::ContentTypes ;
Dl ::= (dlElements::DlElement)+ ;
Miscinline ::= Ins ;
 Miscinline ::= Del ;
TitleHeadElement ::= title::Title (headmisc::HeadMisc)+ (baseTitleHeadElement::BaseTitleHeadElement)+ ;
Acronym ::= (acronymElements::Inline)+ ;
Img ::= src::URI alt::Text longdesc::URI height::Length width::Length usemap::URI ismap::Boolean ;
Fontstyle ::= Tt ;
 Fontstyle ::= I ;
 Fontstyle ::= B ;
 Fontstyle ::= Big ;
 Fontstyle ::= Small ;
Tt ::= (ttElements::Inline)+ ;
Dd ::= (ddElements::Flow)+ ;
ContentTypes ::= contentTypes::ContentType ;
CellHAlign ::= (left::ε) | (center::ε) | (right::ε) | (justify::ε) | (char::ε) ;
Tr ::= (trelements::TrElement)+ ;
Li ::= (liElements::Flow)+ ;
ObjectElement ::= Param ;
MapContent ::= (mapElements::MapElement)+ ;
Datetime ::= ε ;
Special ::= Specialpre ;
Option ::= selected::Boolean disabled::Boolean label::Text optionvalue::CDATA ;
BaseTitleHeadElement ::= base::Base (headmisc::HeadMisc)+ ;
Th ::= (thelement::Flow)+ abbr::Text axis::CDATA headers::IDREFS scope::Scope rowspan::Number colspan::Number ;
FieldsetElement ::= Legend ;
Samp ::= (sampElements::Inline)+ ;
Style ::= i18n::I18n id::ID type::ContentType media::MediaDesc title::Text xml:space::String ;
Td ::= (tdelement::Flow)+ abbr::Text axis::CDATA headers::IDREFS scope::Scope rowspan::Number colspan::Number ;
LanguageCode ::= ε ;
Pre ::= (preElements::PreContent)+ xml:space::String ;
FomeMethod ::= (get::ε) | (post::ε) ;
Attrs ::= Body ;
 Attrs ::= Li ;
 Attrs ::= DlElement ;
 Attrs ::= Caption ;
 Attrs ::= Noscript ;
 Attrs ::= Div ;
 Attrs ::= P ;
 Attrs ::= H1 ;
 Attrs ::= H2 ;
 Attrs ::= H3 ;
 Attrs ::= H4 ;
 Attrs ::= H5 ;
 Attrs ::= H6 ;
 Attrs ::= Ul ;
 Attrs ::= Ol ;
 Attrs ::= Dl ;
 Attrs ::= Address ;
 Attrs ::= Pre ;
 Attrs ::= Blockquote ;
 Attrs ::= Ins ;
 Attrs ::= Del ;
 Attrs ::= A ;
 Attrs ::= Span ;
 Attrs ::= Em ;
 Attrs ::= Strong ;
 Attrs ::= Dfn ;
 Attrs ::= Code ;
 Attrs ::= Samp ;
 Attrs ::= Kbd ;
 Attrs ::= Var ;
 Attrs ::= Cite ;
 Attrs ::= Abbr ;
 Attrs ::= Acronym ;
 Attrs ::= Q ;
 Attrs ::= Sub ;
 Attrs ::= Sup ;
 Attrs ::= Tt ;
 Attrs ::= I ;
 Attrs ::= B ;
 Attrs ::= Big ;
 Attrs ::= Small ;
 Attrs ::= Object ;
 Attrs ::= Form ;
 Attrs ::= Label ;
 Attrs ::= Select ;
 Attrs ::= Fieldset ;
 Attrs ::= Legend ;
 Attrs ::= Button ;
 Attrs ::= Table ;
 Attrs ::= Thead ;
 Attrs ::= Tfoot ;
 Attrs ::= Tbody ;
 Attrs ::= Colgroup ;
 Attrs ::= Tr ;
 Attrs ::= Optgroup ;
Shape ::= (rect::ε) | (circle::ε) | (poly::ε) | (default::ε) ;
LinkTypes ::= ε ;
TrElement ::= Th ;
 TrElement ::= Td ;
ColElement ::= (cols::Col)+ (colgroup::Colgroup)+ ;
NMTOKEN ::= LanguageCode ;
TFrame ::= (void::ε) | (above::ε) | (below::ε) | (hsides::ε) | (lhs::ε) | (rhs::ε) | (vsides::ε) | (box::ε) | (border::ε) ;
IDREF ::= value::String ;
Cite ::= (citeElements::Inline)+ ;
PreContent ::= Specialpre ;
Lists ::= Ul ;
 Lists ::= Ol ;
 Lists ::= Dl ;
MediaDesc ::= ε ;
Div ::= (divElements::Flow)+ ;
Br ::= ε ;
TableElement ::= (tbody::Tbody)+ (tr::Tr)+ ;
Param ::= id::ID name::CDATA value::CDATA valuetype::ValueType type::ContentType ;
Block ::= Misc ;
 Block ::= block ;
CDATA ::= ContentType ;
 CDATA ::= Charset ;
 CDATA ::= Character ;
 CDATA ::= Number ;
 CDATA ::= LinkTypes ;
 CDATA ::= MediaDesc ;
 CDATA ::= URI ;
 CDATA ::= Datetime ;
 CDATA ::= ScriptExpression ;
 CDATA ::= StyleSheet ;
 CDATA ::= Text ;
 CDATA ::= Length ;
 CDATA ::= MultiLength ;
 CDATA ::= Pixels ;
 CDATA ::= ContentType | Charset | Character | Number | LinkTypes | MediaDesc | URI | Datetime | ScriptExpression | StyleSheet | Text | Length | MultiLength | Pixels ;
Span ::= (spanElements::Inline)+ ;
Specialpre ::= Span ;
Number ::= ε ;
Col ::= span::Number width::MultiLength ;
Object ::= (objectelement::ObjectElement)+ declare::Boolean classid::URI codebase::URI data::URI type::ContentType codetype::ContentType archive::UriList standby::Text height::Length width::Length usemap::URI name::NMTOKEN tabindex::Number ;
MultiLength ::= ε ;
Direction ::= (ltr::ε) | (rtl::ε) ;
Textarea ::= name::CDATA rows::Number cols::Number disabled::Boolean readonly::Boolean onselect::ScriptExpression onchange::ScriptExpression ;
Button ::= (buttoncontent::ButtonContent)+ name::CDATA value::CDATA type::ButtonType disabled::Boolean ;
CellVAlign ::= (top::ε) | (middle::ε) | (bottom::ε) | (baseline::ε) ;
Q ::= (qElements::Inline)+ cite::URI ;
Abbr ::= (abbrElements::Inline)+ ;
P ::= (pElements::Inline)+ ;
Flow ::= Inline ;
StyleSheet ::= ε ;
Text ::= ε ;
Bdo ::= (bdoElements::Inline)+ lang::LanguageCode xml:lang::LanguageCode dir::Direction ;
URI ::= ε ;
BaseHeadElement ::= base::Base (headmisc::HeadMisc)+ (titleBaseHeadElement::TitleBaseHeadElement)+ ;
I ::= (iElements::Inline)+ ;
ValuedElement ::= CDATA ;
 ValuedElement ::= PCDATA ;
 ValuedElement ::= NMTOKEN ;
 ValuedElement ::= IDREF ;
 ValuedElement ::= ID ;
Fieldset ::= (fieldsetelements::FieldsetElement)+ ;
B ::= (bElements::Inline)+ ;
A ::= (acontent::AContent)+ charset::Charset type::ContentType name::NMTOKEN href::URI hreflang::LanguageCode rel::LinkTypes rev::LinkTypes shape::Shape coords::Coords ;
SelectElement ::= Optgroup ;
 SelectElement ::= Option ;
Coords ::= lengths::Length ;
Map ::= mapelement::MapContent id::ID class::CDATA style::StyleSheet title::Text name::NMTOKEN ;
Title ::= i18n::I18n id::ID ;
Scope ::= (row::ε) | (col::ε) | (rowgroup::ε) | (colgroup::ε) ;
Thead ::= (tr::Tr)+ ;
DlElement ::= Dt ;
 DlElement ::= Dd ;
ContentType ::= ε ;
String ::= string() ;
Blockquote ::= (blockquoteElements::Block)+ cite::URI ;
Sup ::= (supElements::Inline)+ ;
Legend ::= (legendelement::Inline)+ accesskey::Character ;
EMPTY ::= Base ;
 EMPTY ::= Meta ;
 EMPTY ::= Link ;
 EMPTY ::= Hr ;
 EMPTY ::= Br ;
 EMPTY ::= Param ;
 EMPTY ::= Img ;
 EMPTY ::= Area ;
 EMPTY ::= Input ;
 EMPTY ::= Col ;
Charset ::= ε ;
ValueType ::= (data::ε) | (ref::ε) | (object::ε) ;
Hr ::= ε ;
Meta ::= i18n::I18n id::ID httpequiv::CDATA name::CDATA content::CDATA scheme::CDATA ;
CoreAttrs ::= Attrs ;
 CoreAttrs ::= Bdo ;
Sub ::= (subElements::Inline)+ ;
Colgroup ::= (cols::Col)+ span::Number width::MultiLength ;
Integer ::= integer() ;
PCDATA ::= Title ;
 PCDATA ::= Style ;
 PCDATA ::= Script ;
 PCDATA ::= Textarea ;
Select ::= (selectelement::SelectElement)+ name::CDATA size::Number multiple::Boolean disabled::Boolean tabindex::Number onfocus::ScriptExpression onblur::ScriptExpression onchange::ScriptExpression ;
ID ::= value::String ;
Link ::= charset::Charset href::URI hreflang::LanguageCode type::ContentType rel::LinkTypes rev::LinkTypes media::MediaDesc ;
Blocktext ::= Address ;
 Blocktext ::= Pre ;
 Blocktext ::= Blockquote ;
Inlineforms ::= Label ;
 Inlineforms ::= Select ;
TitleBaseHeadElement ::= title::Title (headmisc::HeadMisc)+ ;
Code ::= (codeElements::Inline)+ ;
Dfn ::= (dfnElements::Inline)+ ;
Misc ::= Miscinline ;
 Misc ::= Noscript ;
HeadMisc ::= Meta ;
 HeadMisc ::= Style ;
UriList ::= uris::URI ;
Character ::= ε ;
Boolean ::= "true" | "false" ;
Var ::= (varElements::Inline)+ ;
Length ::= ε ;
InputType ::= (text::ε) | (password::ε) | (checkbox::ε) | (radio::ε) | (submit::ε) | (reset::ε) | (file::ε) | (hidden::ε) | (image::ε) | (button::ε) ;
TRules ::= (none::ε) | (groups::ε) | (rows::ε) | (cols::ε) | (all::ε) ;
Head ::= i18n::I18n id::ID profile::URI (headmisc::HeadMisc)+ headelement::HeadElement html::Html ;
--------------------occam::mu-srour.bgf--------------------
Replicator ::= name::String base::Base count::Count ;
NormalConditional ::= choice::Choice ;
BooleanGuard ::= boolean::BooleanRef ;
Alternation ::= alternative::Alternative ;
LiteralOperand ::= integer::Integer ;
ValDeclaration ::= name::String expression::Expression ;
Expression ::= ExpressionOperand ;
 Expression ::= MonadicExpression ;
 Expression ::= DyadicExpression ;
 Expression ::= SimpleExpression ;
DyadicOperator ::= plus::Boolean minus::Boolean star::Boolean slash::Boolean or::Boolean inverseSlash::Boolean and::Boolean eq::Boolean ne::Boolean lt::Boolean gt::Boolean le::Boolean ge::Boolean ;
ProcedureBody ::= name::String process::Process ;
Instance ::= name::String ;
Definition ::= name::String procedureBody::ProcedureBody ;
ExpressionOperand ::= operand::Operand ;
Base ::= expression::Expression ;
Construction ::= Sequence ;
 Construction ::= Conditional ;
 Construction ::= Loop ;
 Construction ::= Parallel ;
 Construction ::= Alternation ;
 Construction ::= Sequence | Conditional | Loop | Parallel | Alternation ;
String ::= string() ;
Count ::= expression::Expression ;
Actual ::= element::Element ;
NormalParallel ::= process::Process ;
MonadicOperator ::= minus::Boolean not::Boolean ;
VariableOPerand ::= element::Element ;
Assignment ::= variable::Variable expression::Expression ;
StopProcess ::= ε ;
IntDeclaration ::= name::String expression::Expression ;
Subscript ::= expression::Expression ;
BooleanRef ::= expression::Expression ;
DyadicExpression ::= operandRight::Operand dyadicOperator::DyadicOperator ;
Input ::= channel::Channel variable::Variable ;
NormalSequence ::= process::Process ;
Parallel ::= NormalParallel ;
 Parallel ::= ReplicatorParallel ;
 Parallel ::= NormalAlternation ;
 Parallel ::= ReplicatorAlternation ;
ReplicatorParallel ::= replicator::Replicator ;
Conditional ::= NormalConditional ;
 Conditional ::= ReplicatorConditional ;
Specification ::= Declaration ;
 Specification ::= Definition ;
Channel ::= element::Element ;
MonadicExpression ::= monadicOperator::MonadicOperator ;
PrimitiveType ::= isInt::Boolean isChan::Boolean ;
Output ::= channel::Channel expression::Expression ;
Sequence ::= NormalSequence ;
 Sequence ::= ReplicatorSequence ;
ReplicatorSequence ::= replicator::Replicator ;
ReplicatorAlternation ::= replicator::Replicator ;
Integer ::= integer() ;
Variable ::= VariableOPerand ;
 Variable ::= element::Element ;
Element ::= name::String subscript::Subscript ;
InputGuard ::= input::Input ;
Declaration ::= TypeDeclaration ;
 Declaration ::= IntDeclaration ;
 Declaration ::= ValDeclaration ;
Type ::= primitiveType::PrimitiveType expression::Expression ;
NormalAlternation ::= process::Process ;
Action ::= Assignment ;
 Action ::= Input ;
 Action ::= Output ;
SkipProcess ::= ε ;
Formal ::= name::String primitiveType::PrimitiveType ;
Literal ::= LiteralOperand ;
 Literal ::= integer::Integer ;
Process ::= StopProcess ;
 Process ::= SkipProcess ;
 Process ::= Action ;
 Process ::= Construction ;
 Process ::= Instance ;
 Process ::= Specification ;
Alternative ::= guard::Guard process::Process ;
SimpleExpression ::= operand::Operand ;
Boolean ::= "true" | "false" ;
ReplicatorConditional ::= replicator::Replicator ;
Guard ::= InputGuard ;
 Guard ::= BooleanGuard ;
Loop ::= boolean::BooleanRef process::Process ;
Choice ::= boolean::BooleanRef process::Process ;
TypeDeclaration ::= type::Type ;
--------------------occam::srour.bgf--------------------
Sequential ::= process::Process (actions::Action)+ (buckels::Buckel)+ (childrens::Constructor)+ ;
Integer ::= integer() ;
If ::= (conditions::Condition)+ (actions::Action)+ ;
File ::= name::String ;
Library ::= name::String ;
Condition ::= elementRight::String elementLeft::String typeCondition::String if::If while::While ;
Declaration ::= name::String process::Process (elements::DataType)+ ;
Constructor ::= Sequential ;
 Constructor ::= Parallel ;
 Constructor ::= Alternative ;
 Constructor ::= process::Process (actions::Action)+ (buckels::Buckel)+ (childrens::Constructor)+ ;
Action ::= Assignment ;
 Action ::= Input ;
 Action ::= Output ;
 Action ::= constructor::Constructor while::While if::If ;
String ::= string() ;
While ::= (conditions::Condition)+ (actions::Action)+ ;
Process ::= declaration::Declaration (constructors::Constructor)+ (parameters::DataType)+ (libraries::Library)+ toChannel::Channel ;
Alternative ::= process::Process (actions::Action)+ (buckels::Buckel)+ (childrens::Constructor)+ ;
Assignment ::= constructor::Constructor while::While if::If ;
Input ::= constructor::Constructor while::While if::If ;
Boolean ::= "true" | "false" ;
Parallel ::= process::Process (actions::Action)+ (buckels::Buckel)+ (childrens::Constructor)+ ;
DataType ::= dataType::String ;
Server ::= name::String toChannel::Channel ;
Channel ::= name::String type::String toServer::Server toProcess::Process ;
Buckel ::= If ;
 Buckel ::= While ;
 Buckel ::= constructor::Constructor ;
Output ::= constructor::Constructor while::While if::If ;
--------------------odf::opendoc-1.0-strict.bgf--------------------
ID ::= string() ;
IDREF ::= string() ;
--------------------odf::opendoc-1.0.bgf--------------------
ID ::= string() ;
IDREF ::= string() ;
--------------------odf::opendoc-1.1-strict.bgf--------------------
IDREFS ::= string() ;
ID ::= string() ;
IDREF ::= string() ;
--------------------odf::opendoc-1.1.bgf--------------------
IDREFS ::= string() ;
ID ::= string() ;
IDREF ::= string() ;
--------------------odf::opendoc-1.2.bgf--------------------
SafeCURIE ::= string() ;
CURIE ::= string() ;
IDREFS ::= string() ;
ID ::= string() ;
IDREF ::= string() ;
CURIEs ::= CURIE+ ;
URIorSafeCURIE ::= anyURI | SafeCURIE ;
NCName ::= string() ;
--------------------pascal::bruneliere.bgf--------------------
Instruction ::= Calculation ;
 Instruction ::= Control ;
 Instruction ::= Assignment ;
 Instruction ::= Block ;
 Instruction ::= block::Block ;
Block ::= (instructions::Instruction)+ procedure::Procedure loop::Loop conditional::Conditional ;
Assignment ::= block::Block ;
Control ::= Conditional ;
 Control ::= Loop ;
 Control ::= Procedure ;
 Control ::= Conditional | Loop | Procedure ;
Variable ::= Parameter ;
 Variable ::= name::String program::Program procedure::Procedure type::Type ;
Repeat ::= block_loop::Block ;
Type ::= name::String program::Program (variables::Variable)+ ;
For ::= block_loop::Block ;
Calculation ::= block::Block ;
Parameter ::= procedure_parameter::Procedure ;
Function ::= returnType::Type ;
Conditional ::= blocks::Block ;
Loop ::= For ;
 Loop ::= While ;
 Loop ::= Repeat ;
 Loop ::= block_loop::Block ;
Program ::= name::String (variables::Variable)+ (types::Type)+ (procedures::Procedure)+ ;
Procedure ::= Function ;
 Procedure ::= name::String program::Program (variables::Variable)+ (parameters::Parameter)+ block_procedure::Block ;
String ::= string() ;
While ::= block_loop::Block ;
--------------------pl1::bruneliere.bgf--------------------
PLIComputationalType ::= alias::PLIAlias ;
Integer ::= integer() ;
PLIElementInitialValue ::= initialValue::String ;
PLIComposedType ::= (elements::PLIElement)+ ;
PLISimpleType ::= PLIComputationalType ;
 PLISimpleType ::= PLINonComputationalType ;
 PLISimpleType ::= alias::PLIAlias ;
PLIHBoundArray ::= uBound::Integer IBoundToAllocate::String referredTo::PLIElement ;
PLISourceText ::= source::String fileName::String ;
String ::= string() ;
PLIElement ::= level::String name::String sharedType::PLIClassifier group::PLIComposedType initial::PLIElementInitialValue source::PLISourceText array::PLIArray ;
PLIAttribute ::= ε ;
PLIClassifier ::= PLISimpleType ;
 PLIClassifier ::= PLINamedType ;
 PLIClassifier ::= PLIComposedType ;
 PLIClassifier ::= name::String (typedElements::PLIElement)+ ;
PLIArray ::= PLIFixedBoundArray ;
 PLIArray ::= PLIFixedLboundArray ;
 PLIArray ::= PLIHBoundArray ;
 PLIArray ::= PLIVariableBoundArray ;
 PLIArray ::= arrayOf::PLIElement ;
PLINonComputationalType ::= alias::PLIAlias ;
PLINamedType ::= name::String (typedElements::PLIElement)+ ;
PLIVariableBoundArray ::= IBoundToAllocate::String hBoundToAllocate::String referredTo::PLIElement ;
PLIAlias ::= type::PLISimpleType (contains::PLIAttribute)+ ;
PLIFixedBoundArray ::= IBound::Integer uBound::Integer referredTo::PLIElement ;
PLIFixedLboundArray ::= IBound::Integer uBoundToAllocate::String referredTo::PLIElement ;
--------------------uml::collab.bgf--------------------
Request ::= Operation ;
 Request ::= (message::Message)+ ;
Integer ::= integer() ;
Interface ::= (classifierRole::ClassifierRole)+ (feature::Operation)+ ;
Boolean ::= "true" | "false" ;
Operation ::= (classifierRole::ClassifierRole)+ owner::Interface ;
Message ::= (message::Message)+ activator::Message (interaction::Interaction)+ receiver::ClassifierRole sender::ClassifierRole specification::Request ;
ClassifierRole ::= (associationEndRole::AssociationEndRole)+ receiverMess::Message senderMess::Message (availableFeature::Operation)+ base::Interface ;
AssociationRole ::= connection::AssociationEndRole ;
Package ::= ownedEltColl::CollaborationPackage (ownedEltInt::InteractionPackage)+ ;
Collaboration ::= (interaction::Interaction)+ ownedEltAss::AssociationRole ownedEltClass::ClassifierRole ;
InteractionPackage ::= providerClause::ProviderClause ownedElt::Interaction ;
Interaction ::= context::Collaboration (message::Message)+ ;
String ::= string() ;
CollaborationPackage ::= ownedElt::Collaboration ;
AssociationEndRole ::= associationRole::AssociationRole type::ClassifierRole ;
ProviderClause ::= Package ;
 ProviderClause ::= ownedEltColl::CollaborationPackage (ownedEltInt::InteractionPackage)+ ;
--------------------uml::extended.bgf--------------------
Multiplicity ::= ε ;
Integer ::= integer() ;
ChangeableKind ::= ε ;
Attribute ::= initialValue::Expression isKey::Boolean isUnique::Boolean ;
Namespace ::= GeneralizableElement ;
AssociationEnd ::= isNavigable::Boolean isOrdered::Boolean aggregation::AggregationKind multiplicity::Multiplicity changeable::ChangeableKind TargetScope::ScopeKind rfIntegrety::RlIntegretyKind rlIntegrety::RlIntegretyKind ;
Class ::= isActive::Boolean mutliplicity::Multiplicity (key::Key)+ ;
Expression ::= ε ;
Feature ::= StructureFeature ;
 Feature ::= Constraint ;
 Feature ::= StructureFeature | Constraint ;
AggregationKind ::= ε ;
ModelElement ::= AssociationEnd ;
 ModelElement ::= Namespace ;
 ModelElement ::= Key ;
 ModelElement ::= Feature ;
 ModelElement ::= name::Name ;
String ::= string() ;
Name ::= ε ;
GeneralizableElement ::= Classifier ;
RfIntegretyKind ::= ε ;
Boolean ::= "true" | "false" ;
ScopeKind ::= ε ;
RlIntegretyKind ::= ε ;
StructureFeature ::= Attribute ;
Classifier ::= Class ;
--------------------uml::fragment.bgf--------------------
SimpleState ::= stateMachine::StateMachine internal::Transition ;
Integer ::= integer() ;
Generalization ::= ε ;
FinalState ::= stateMachine::StateMachine internal::Transition ;
Dependency ::= supplier::StateMachine client::Class stereotype::Stereotype ;
Event ::= ε ;
CompositeState ::= subvertex::StateVertex ;
Boolean ::= "true" | "false" ;
Class ::= parent::Generalization child::Generalization dependency::Dependency ;
StateMachine ::= context::Class top::State ;
Transition ::= trigger::Event source::StateVertex target::StateVertex ;
StateVertex ::= State ;
 StateVertex ::= PseudoState ;
 StateVertex ::= compositeState::CompositeState ;
PseudoState ::= compositeState::CompositeState ;
Stereotype ::= baseClass::String extendedElement::Dependency ;
String ::= string() ;
State ::= CompositeState ;
 State ::= SimpleState ;
 State ::= FinalState ;
 State ::= stateMachine::StateMachine internal::Transition ;
--------------------uml::oocm.bgf--------------------
Integer ::= integer() ;
Attribute ::= initialValue::String ;
NameSpace ::= Classifier ;
 NameSpace ::= name::String ;
BehavioralFeature ::= Operation ;
 BehavioralFeature ::= isQuery::Boolean ;
StructuralFeature ::= Attribute ;
 StructuralFeature ::= multiplicity::MultiplicityType isChangeable::Boolean targetScope::ScopeKind ;
GeneralizableElement ::= Classifier ;
 GeneralizableElement ::= isRoot::Boolean isLeaf::Boolean isAbstract::Boolean ;
MultiplicityType ::= lower::Integer upper::Integer isOrdered::Boolean isUnique::Boolean ;
Boolean ::= "true" | "false" ;
Class ::= isActive::Boolean ;
ScopeKind ::= (sk_instance_level::ε) | (sk_classifier_level::ε) ;
Operation ::= isRoot::Boolean isLeaf::Boolean isAbstract::Boolean specification::String ;
Feature ::= StructuralFeature ;
 Feature ::= BehavioralFeature ;
 Feature ::= ownerScope::ScopeKind visibility::VisibilityKind owner::Classifier ;
VisibilityKind ::= (vk_public_vis::ε) | (vk_private_vis::ε) | (vk_protected_vis::ε) ;
ModelElement ::= Feature ;
 ModelElement ::= NameSpace ;
 ModelElement ::= GeneralizableElement ;
 ModelElement ::= name::String ;
String ::= string() ;
Classifier ::= Class ;
 Classifier ::= (feature::Feature)+ ;
--------------------uml::reuse.bgf--------------------
BasicProvider ::= ε ;
Integer ::= integer() ;
ReuserClause ::= CompositeReuser ;
 ReuserClause ::= BasicReuser ;
 ReuserClause ::= CompositeReuser | BasicReuser ;
BasicReuser ::= ε ;
Dependency ::= ReuseContract ;
 Dependency ::= owningDependency::Dependency (subDependency::Dependency)+ ;
Boolean ::= "true" | "false" ;
CompositeProvider ::= subcontract::ReuseContract ;
Package ::= ProviderClause ;
 Package ::= ReuserClause ;
 Package ::= ProviderClause | ReuserClause ;
ReuseContract ::= supplier::ProviderClause client::ReuserClause ;
CompositeReuser ::= (subreuser::ReuserClause)+ ;
String ::= string() ;
ProviderClause ::= CompositeProvider ;
 ProviderClause ::= BasicProvider ;
 ProviderClause ::= CompositeProvider | BasicProvider ;
--------------------uml::simple.bgf--------------------
Attribute ::= owner::Class type::Classifier ;
PrimitiveDataType ::= (typeOpposite::Attribute)+ ;
Class ::= (attribute::Attribute)+ (general::Class)+ (generalOpposite::Class)+ (reverse::Association)+ (forward::Association)+ ;
UMLModelElement ::= Attribute ;
 UMLModelElement ::= Package ;
 UMLModelElement ::= PackageElement ;
PackageElement ::= Classifier ;
 PackageElement ::= Association ;
Package ::= (elements::PackageElement)+ ;
String ::= string() ;
Association ::= source::Class destination::Class ;
Classifier ::= Class ;
 Classifier ::= PrimitiveDataType ;
--------------------uml::statecharts.bgf--------------------
Integer ::= integer() ;
Event ::= (evt_container::Transition)+ (targets::State)+ ;
CompositeState ::= (subVertexes::StateVertex)+ isConcurrent::Boolean ;
Boolean ::= "true" | "false" ;
StateMachine ::= (transitions::Transition)+ (top::State)+ ;
Guard ::= gua_container::Transition expression::BooleanExpression ;
StateVertex ::= State ;
 StateVertex ::= sv_container::CompositeState (outgoing::Transition)+ (incoming::Transition)+ ;
Transition ::= transSM_container::StateMachine transS_container::State trigger::Event guard::Guard source::StateVertex target::StateVertex ;
State ::= CompositeState ;
 State ::= state_container::StateMachine (internalTransitions::Transition)+ (deferrableEvents::Event)+ ;
String ::= string() ;
BooleanExpression ::= value::String ;
--------------------uml::stereo.bgf--------------------
Multiplicity ::= value::String ;
Integer ::= integer() ;
TagDefinition ::= tagType::String multiplicity::Multiplicity (typedValue::TaggedValue)+ owner::Stereotype ;
Constraint ::= (constrainedElement::ModelElement)+ constrainedStereotype::Stereotype ;
Name ::= value::String ;
GeneralizableElement ::= Stereotype ;
Boolean ::= "true" | "false" ;
TaggedValue ::= dataValue::String (referenceValue::ModelElement)+ type::TagDefinition ;
ModelElement ::= TagDefinition ;
 ModelElement ::= (referenceTag::TaggedValue)+ (stereotype::Stereotype)+ (constraint::Constraint)+ (taggedValue::TaggedValue)+ ;
Geometry ::= value::String ;
Stereotype ::= icon::Geometry (baseClass::Name)+ (definedTag::TagDefinition)+ (stereotypeConstraint::Constraint)+ (extendedElement::ModelElement)+ ;
String ::= string() ;
--------------------uml::uml-uc.bgf--------------------
Integer ::= integer() ;
UseCaseInstance ::= (classifier::Classifier)+ ;
Extend ::= condition::BooleanExpression extension::UseCase base::UseCase (extensionPoint::ExtensionPoint)+ ;
Boolean ::= "true" | "false" ;
Include ::= addition::UseCase base::UseCase ;
RelationShip ::= Include ;
 RelationShip ::= Extend ;
UseCase ::= (extensionPoint::String)+ includeAddition::Include includeBase::Include extendExtension::Extend extendBase::Extend (extensionPoints::ExtensionPoint)+ ;
LocationReference ::= value::String ;
Actor ::= (instance::Instance)+ ;
Instance ::= UseCaseInstance ;
 Instance ::= (classifier::Classifier)+ ;
ModelElement ::= ExtensionPoint ;
String ::= string() ;
ExtensionPoint ::= location::LocationReference (extend::Extend)+ (useCase::UseCase)+ ;
Classifier ::= Actor ;
 Classifier ::= UseCase ;
 Classifier ::= (instance::Instance)+ ;
BooleanExpression ::= value::String ;
--------------------uml::uml2.bgf--------------------
Constraint ::= InteractionConstraint ;
 Constraint ::= IntervalConstraint ;
 Constraint ::= context::Namespace namespace::Namespace specification::ValueSpecification (constrainedElement::Element)+ ;
CommunicationPath ::= isDerived::Boolean (ownedEnd::Property)+ (endType::Type)+ memberEnd::Property ;
ExecutionEnvironment ::= (nestedNode::Node)+ ;
RaiseExceptionAction ::= exception::InputPin ;
ReadSelfAction ::= result::OutputPin ;
ConnectableElementTemplateParameter ::= signature::TemplateSignature parameteredElement::ParameterableElement ownedParameteredElement::ParameterableElement default::ParameterableElement ownedDefault::ParameterableElement ;
Property ::= ExtensionEnd ;
 Property ::= Port ;
 Property ::= default::String isComposite::Boolean isDerived::Boolean class_::Class opposite::Property isDerivedUnion::Boolean owningAssociation::Association (redefinedProperty::Property)+ (subsettedProperty::Property)+ datatype::DataType association::Association aggregation::AggregationKind defaultValue::ValueSpecification (qualifier::Property)+ associationEnd::Property ;
VariableAction ::= ReadVariableAction ;
 VariableAction ::= WriteVariableAction ;
 VariableAction ::= ClearVariableAction ;
Artifact ::= DeploymentSpecification ;
 Artifact ::= fileName::String (nestedArtifact::Artifact)+ (manifestation::Manifestation)+ (ownedOperation::Operation)+ (ownedAttribute::Property)+ ;
Interaction ::= (lifeline::Lifeline)+ (message::Message)+ (fragment::InteractionFragment)+ (formalGate::Gate)+ ;
LinkAction ::= ReadLinkAction ;
 LinkAction ::= WriteLinkAction ;
WriteLinkAction ::= CreateLinkAction ;
 WriteLinkAction ::= DestroyLinkAction ;
Permission ::= (client::NamedElement)+ (supplier::NamedElement)+ ;
Gate ::= receiveMessage::Message sendMessage::Message ;
EventOccurrence ::= Stop ;
 EventOccurrence ::= (startExec::ExecutionOccurrence)+ (finishExec::ExecutionOccurrence)+ (toAfter::GeneralOrdering)+ (toBefore::GeneralOrdering)+ ;
FlowFinalNode ::= ε ;
ExecutionOccurrence ::= start::EventOccurrence finish::EventOccurrence (behavior::Behavior)+ ;
Message ::= messageKind::MessageKind messageSort::MessageSort receiveEvent::MessageEnd sendEvent::MessageEnd connector::Connector interaction::Interaction signature::NamedElement (argument::ValueSpecification)+ ;
TestIdentityAction ::= first::InputPin second::InputPin result::OutputPin ;
LoopNode ::= isTestedFirst::Boolean (bodyPart::ActivityNode)+ (setupPart::ActivityNode)+ decider::OutputPin (test::ActivityNode)+ (result::OutputPin)+ (loopVariable::OutputPin)+ (bodyOutput::OutputPin)+ (loopVariableInput::InputPin)+ ;
VisibilityKind ::= (package::ε) | (private::ε) | (protected::ε) | (public::ε) ;
Realization ::= Substitution ;
 Realization ::= Implementation ;
 Realization ::= abstraction::Component realizingClassifier::Classifier ;
Deployment ::= (deployedArtifact::DeployedArtifact)+ location::DeploymentTarget (configuration::DeploymentSpecification)+ ;
Interval ::= DurationInterval ;
 Interval ::= TimeInterval ;
 Interval ::= (min::ValueSpecification)+ (max::ValueSpecification)+ ;
ControlNode ::= InitialNode ;
 ControlNode ::= FinalNode ;
 ControlNode ::= DecisionNode ;
 ControlNode ::= MergeNode ;
 ControlNode ::= ForkNode ;
 ControlNode ::= JoinNode ;
Component ::= isIndirectlyInstantiated::Boolean (required::Interface)+ (provided::Interface)+ (realization::Realization)+ (ownedMember::PackageableElement)+ ;
Element ::= MultiplicityElement ;
 Element ::= Relationship ;
 Element ::= Slot ;
 Element ::= ActivityGroup ;
 Element ::= Clause ;
 Element ::= TemplateSignature ;
 Element ::= TemplateParameter ;
 Element ::= TemplateableElement ;
 Element ::= ParameterableElement ;
 Element ::= TemplateParameterSubstitution ;
 Element ::= ExceptionHandler ;
 Element ::= LinkEndData ;
 Element ::= QualifierValue ;
FinalState ::= isComposite::Boolean isOrthogonal::Boolean isSimple::Boolean isSubmachineState::Boolean submachine::StateMachine (connection::ConnectionPointReference)+ redefinedState::State (deferrableTrigger::Trigger)+ (region::Region)+ entry::Activity exit::Activity doActivity::Activity stateInvariant::Constraint ;
DataStoreNode ::= ε ;
DeployedArtifact ::= Artifact ;
ReadExtentAction ::= result::OutputPin classifier::Classifier ;
DeploymentTarget ::= Node ;
CollaborationOccurrence ::= type::Collaboration (roleBinding::Dependency)+ ;
Feature ::= Connector ;
 Feature ::= StructuralFeature ;
 Feature ::= BehavioralFeature ;
Actor ::= (feature::Feature)+ isAbstract::Boolean (inheritedMember::NamedElement)+ (general::Classifier)+ (generalization::Generalization)+ (attribute::Property)+ (redefinedClassifier::Classifier)+ (substitution::Substitution)+ (powertypeExtent::GeneralizationSet)+ (ownedUseCase::UseCase)+ (useCase::UseCase)+ representation::CollaborationOccurrence (occurrence::CollaborationOccurrence)+ ;
ExpansionKind ::= (parallel::ε) | (iterative::ε) | (stream::ε) ;
TimeInterval ::= (min::ValueSpecification)+ (max::ValueSpecification)+ ;
Implementation ::= contract::Interface implementingClassifier::BehavioredClassifier ;
MessageTrigger ::= CallTrigger ;
 MessageTrigger ::= SignalTrigger ;
 MessageTrigger ::= AnyTrigger ;
ActivityNode ::= ControlNode ;
 ActivityNode ::= ExecutableNode ;
 ActivityNode ::= ObjectNode ;
SignalTrigger ::= (signal::Signal)+ ;
StructuralFeatureAction ::= ReadStructuralFeatureAction ;
 StructuralFeatureAction ::= WriteStructuralFeatureAction ;
 StructuralFeatureAction ::= ClearStructuralFeatureAction ;
ReclassifyObjectAction ::= isReplaceAll::Boolean (oldClassifier::Classifier)+ (newClassifier::Classifier)+ object::InputPin ;
TemplateParameterSubstitution ::= formal::TemplateParameter templateBinding::TemplateBinding (actual::ParameterableElement)+ (ownedActual::ParameterableElement)+ ;
OperationTemplateParameter ::= signature::TemplateSignature parameteredElement::ParameterableElement ownedParameteredElement::ParameterableElement default::ParameterableElement ownedDefault::ParameterableElement ;
Signal ::= (ownedAttribute::Property)+ ;
ChangeTrigger ::= changeExpression::ValueSpecification ;
SendSignalAction ::= target::InputPin signal::Signal ;
Vertex ::= Pseudostate ;
 Vertex ::= ConnectionPointReference ;
StructuredActivityNode ::= ConditionalNode ;
 StructuredActivityNode ::= LoopNode ;
 StructuredActivityNode ::= ExpansionRegion ;
 StructuredActivityNode ::= (variable::Variable)+ (containedNode::ActivityNode)+ (containedEdge::ActivityEdge)+ mustIsolate::Boolean ;
DirectedRelationship ::= Generalization ;
 DirectedRelationship ::= ElementImport ;
 DirectedRelationship ::= PackageImport ;
 DirectedRelationship ::= PackageMerge ;
 DirectedRelationship ::= TemplateBinding ;
 DirectedRelationship ::= ProtocolConformance ;
 DirectedRelationship ::= Dependency ;
 DirectedRelationship ::= InformationFlow ;
 DirectedRelationship ::= Extend ;
 DirectedRelationship ::= Include ;
PrimitiveFunction ::= body::String language::String ;
ProtocolConformance ::= specificMachine::ProtocolStateMachine generalMachine::ProtocolStateMachine ;
GeneralOrdering ::= before::EventOccurrence after::EventOccurrence ;
InstanceValue ::= instance::InstanceSpecification ;
OpaqueExpression ::= Expression ;
 OpaqueExpression ::= body::String language::String result::Parameter behavior::Behavior ;
Expression ::= symbol::String (operand::ValueSpecification)+ ;
LiteralUnlimitedNatural ::= value::UnlimitedNatural ;
InteractionOperator ::= (consider::ε) | (par::ε) | (opt::ε) | (loop::ε) | (alt::ε) | (break::ε) | (assert::ε) | (strict::ε) | (seq::ε) | (ignore::ε) | (neg::ε) | (critical::ε) ;
LiteralNull ::= ε ;
ReadLinkObjectEndQualifierAction ::= object::InputPin result::OutputPin qualifier::Property ;
Duration ::= firstTime::Boolean event::NamedElement ;
OutputPin ::= ε ;
LiteralSpecification ::= LiteralBoolean ;
 LiteralSpecification ::= LiteralString ;
 LiteralSpecification ::= LiteralNull ;
 LiteralSpecification ::= LiteralInteger ;
 LiteralSpecification ::= LiteralUnlimitedNatural ;
RemoveStructuralFeatureValueAction ::= value::InputPin ;
PackageMerge ::= mergingPackage::Package mergedPackage::Package ;
DurationConstraint ::= ε ;
ExtensionPoint ::= useCase::UseCase ;
Reception ::= signal::Signal ;
LiteralInteger ::= value::Integer ;
CreateLinkObjectAction ::= result::OutputPin ;
LinkEndData ::= LinkEndCreationData ;
 LinkEndData ::= value::InputPin end::Property (qualifier::QualifierValue)+ ;
TimeConstraint ::= ε ;
AddVariableValueAction ::= isReplaceAll::Boolean insertAt::InputPin ;
ParameterDirectionKind ::= (in::ε) | (inout::ε) | (out::ε) | (return::ε) ;
TransitionKind ::= (internal::ε) | (local::ε) | (external::ε) ;
StringExpression ::= (subExpression::StringExpression)+ owningExpression::StringExpression ;
ReadIsClassifiedObjectAction ::= isDirect::Boolean classifier::Classifier result::OutputPin object::InputPin ;
RemoveVariableValueAction ::= value::InputPin ;
PseudostateKind ::= (deepHistory::ε) | (shallowHistory::ε) | (choice::ε) | (join::ε) | (exitPoint::ε) | (terminate::ε) | (fork::ε) | (junction::ε) | (initial::ε) | (entryPoint::ε) ;
NamedElement ::= Namespace ;
 NamedElement ::= TypedElement ;
 NamedElement ::= RedefinableElement ;
 NamedElement ::= CollaborationOccurrence ;
 NamedElement ::= Trigger ;
 NamedElement ::= InteractionFragment ;
 NamedElement ::= Lifeline ;
 NamedElement ::= Message ;
 NamedElement ::= GeneralOrdering ;
 NamedElement ::= MessageEnd ;
 NamedElement ::= Vertex ;
 NamedElement ::= ParameterSet ;
 NamedElement ::= DeployedArtifact ;
 NamedElement ::= DeploymentTarget ;
 NamedElement ::= PackageableElement ;
 NamedElement ::= ConnectableElement ;
 NamedElement ::= Extend ;
 NamedElement ::= Include ;
 NamedElement ::= ActivityPartition ;
IntervalConstraint ::= TimeConstraint ;
 IntervalConstraint ::= DurationConstraint ;
 IntervalConstraint ::= TimeConstraint | DurationConstraint ;
Port ::= isBehavior::Boolean isService::Boolean (required::Interface)+ (redefinedPort::Port)+ (provided::Interface)+ protocol::ProtocolStateMachine ;
ElementImport ::= visibility::VisibilityKind alias::String importedElement::PackageableElement importingNamespace::Namespace ;
PrimitiveType ::= (ownedAttribute::Property)+ (ownedOperation::Operation)+ ;
ReplyAction ::= replyToCall::CallTrigger (replyValue::InputPin)+ returnInformation::InputPin ;
Variable ::= scope::StructuredActivityNode ;
Generalization ::= specific::Classifier general::Classifier isSubstitutable::Boolean (generalizationSet::GeneralizationSet)+ ;
DurationInterval ::= (min::ValueSpecification)+ (max::ValueSpecification)+ ;
LiteralBoolean ::= value::Boolean ;
Trigger ::= MessageTrigger ;
 Trigger ::= ChangeTrigger ;
 Trigger ::= TimeTrigger ;
CentralBufferNode ::= DataStoreNode ;
AssociationClass ::= (ownedOperation::Operation)+ (superClass::Class)+ (extension::Extension)+ (nestedClassifier::Classifier)+ isActive::Boolean (ownedReception::Reception)+ isDerived::Boolean (ownedEnd::Property)+ (endType::Type)+ memberEnd::Property ;
StateMachine ::= ProtocolStateMachine ;
 StateMachine ::= (region::Region)+ (connectionPoint::Pseudostate)+ extendedStateMachine::StateMachine stateMachine_redefinitionContext::BehavioredClassifier ;
CombinedFragment ::= interactionOperator::InteractionOperator (operand::InteractionOperand)+ (cfragmentGate::Gate)+ ;
BehavioredClassifier ::= UseCase ;
 BehavioredClassifier ::= Class ;
 BehavioredClassifier ::= Collaboration ;
CreateObjectAction ::= classifier::Classifier result::OutputPin ;
ActivityGroup ::= InterruptibleActivityRegion ;
 ActivityGroup ::= ActivityPartition ;
Clause ::= (test::ActivityNode)+ (body::ActivityNode)+ (predecessorClause::Clause)+ (successorClause::Clause)+ decider::OutputPin (bodyOutput::OutputPin)+ ;
ExecutableNode ::= Action ;
ActivityEdge ::= ControlFlow ;
 ActivityEdge ::= ObjectFlow ;
StartOwnedBehaviorAction ::= object::InputPin ;
TemplateBinding ::= boundElement::TemplateableElement signature::TemplateSignature (parameterSubstitution::TemplateParameterSubstitution)+ ;
InputPin ::= ValuePin ;
Profile ::= (ownedStereotype::Stereotype)+ (metaclassReference::ElementImport)+ (metamodelReference::PackageImport)+ ;
Parameter ::= operation::Operation default::String direction::ParameterDirectionKind defaultValue::ValueSpecification isException::Boolean isStream::Boolean effect::ParameterEffectKind (parameterSet::ParameterSet)+ ;
EnumerationLiteral ::= enumeration::Enumeration ;
Include ::= includingCase::UseCase addition::UseCase ;
ConditionalNode ::= isDeterminate::Boolean isAssured::Boolean (clause::Clause)+ (result::OutputPin)+ ;
Abstraction ::= Realization ;
 Abstraction ::= Manifestation ;
 Abstraction ::= mapping::OpaqueExpression ;
ValuePin ::= value::ValueSpecification ;
ReadLinkObjectEndAction ::= object::InputPin end::Property result::OutputPin ;
Usage ::= (client::NamedElement)+ (supplier::NamedElement)+ ;
LiteralString ::= value::String ;
AcceptCallAction ::= returnInformation::OutputPin ;
ActivityPartition ::= isDimension::Boolean isExternal::Boolean (containedEdge::ActivityEdge)+ (containedNode::ActivityNode)+ (subgroup::ActivityPartition)+ superPartition::ActivityPartition represents::Element ;
FinalNode ::= ActivityFinalNode ;
 FinalNode ::= FlowFinalNode ;
InteractionOperand ::= guard::InteractionConstraint (fragment::InteractionFragment)+ ;
Device ::= (nestedNode::Node)+ ;
AggregationKind ::= (composite::ε) | (none::ε) | (shared::ε) ;
Transition ::= ProtocolTransition ;
 Transition ::= kind::TransitionKind container::Region source::Vertex target::Vertex redefinedTransition::Transition (trigger::Trigger)+ guard::Constraint effect::Activity ;
Pin ::= OutputPin ;
 Pin ::= InputPin ;
MessageEnd ::= Gate ;
 MessageEnd ::= EventOccurrence ;
Pseudostate ::= kind::PseudostateKind ;
ExpansionRegion ::= mode::ExpansionKind (outputElement::ExpansionNode)+ (inputElement::ExpansionNode)+ ;
StructuredClassifier ::= EncapsulatedClassifier ;
 StructuredClassifier ::= Collaboration ;
Behavior ::= Activity ;
 Behavior ::= StateMachine ;
 Behavior ::= Interaction ;
WriteVariableAction ::= AddVariableValueAction ;
 WriteVariableAction ::= RemoveVariableValueAction ;
State ::= FinalState ;
 State ::= isComposite::Boolean isOrthogonal::Boolean isSimple::Boolean isSubmachineState::Boolean submachine::StateMachine (connection::ConnectionPointReference)+ redefinedState::State (deferrableTrigger::Trigger)+ (region::Region)+ entry::Activity exit::Activity doActivity::Activity stateInvariant::Constraint ;
InteractionConstraint ::= minint::ValueSpecification maxint::ValueSpecification ;
ConnectorEnd ::= definingEnd::Property role::ConnectableElement partWithPort::Property ;
JoinNode ::= isCombineDuplicate::Boolean joinSpec::ValueSpecification ;
Dependency ::= Permission ;
 Dependency ::= Usage ;
 Dependency ::= Abstraction ;
 Dependency ::= Deployment ;
 Dependency ::= (client::NamedElement)+ (supplier::NamedElement)+ ;
PackageImport ::= ProfileApplication ;
 PackageImport ::= visibility::VisibilityKind importedPackage::Package importingNamespace::Namespace ;
RedefinableElement ::= Feature ;
 RedefinableElement ::= ActivityEdge ;
 RedefinableElement ::= ActivityNode ;
 RedefinableElement ::= ExtensionPoint ;
 RedefinableElement ::= Transition ;
 RedefinableElement ::= RedefinableTemplateSignature ;
 RedefinableElement ::= Region ;
ClearAssociationAction ::= object::InputPin association::Association ;
CallConcurrencyKind ::= (guarded::ε) | (concurrent::ε) | (sequential::ε) ;
TemplateableElement ::= NamedElement ;
 TemplateableElement ::= Comment ;
 TemplateableElement ::= StringExpression ;
TimeExpression ::= firstTime::Boolean event::NamedElement ;
InteractionOccurrence ::= PartDecomposition ;
 InteractionOccurrence ::= refersTo::Interaction (actualGate::Gate)+ (argument::InputPin)+ ;
InteractionFragment ::= ExecutionOccurrence ;
 InteractionFragment ::= StateInvariant ;
 InteractionFragment ::= InteractionOccurrence ;
 InteractionFragment ::= CombinedFragment ;
 InteractionFragment ::= Continuation ;
 InteractionFragment ::= EventOccurrence ;
 InteractionFragment ::= Interaction ;
 InteractionFragment ::= InteractionOperand ;
ConnectorKind ::= (delegation::ε) | (assembly::ε) ;
Association ::= Extension ;
 Association ::= CommunicationPath ;
 Association ::= AssociationClass ;
 Association ::= isDerived::Boolean (ownedEnd::Property)+ (endType::Type)+ memberEnd::Property ;
ClearVariableAction ::= variable::Variable ;
MultiplicityElement ::= ConnectorEnd ;
 MultiplicityElement ::= Pin ;
PackageableElement ::= Type ;
 PackageableElement ::= Constraint ;
 PackageableElement ::= GeneralizationSet ;
 PackageableElement ::= PrimitiveFunction ;
 PackageableElement ::= InstanceSpecification ;
 PackageableElement ::= Dependency ;
 PackageableElement ::= InformationFlow ;
 PackageableElement ::= Package ;
ActivityParameterNode ::= parameter::Parameter ;
CallTrigger ::= operation::Operation ;
InformationFlow ::= (realization::Relationship)+ (conveyed::Classifier)+ ;
ReadStructuralFeatureAction ::= result::OutputPin ;
InterruptibleActivityRegion ::= (interruptingEdge::ActivityEdge)+ (containedNode::ActivityNode)+ ;
Relationship ::= DirectedRelationship ;
 Relationship ::= Association ;
Class ::= Stereotype ;
 Class ::= Behavior ;
 Class ::= Component ;
 Class ::= AssociationClass ;
 Class ::= Node ;
 Class ::= (ownedOperation::Operation)+ (superClass::Class)+ (extension::Extension)+ (nestedClassifier::Classifier)+ isActive::Boolean (ownedReception::Reception)+ ;
Continuation ::= setting::Boolean ;
Action ::= CreateObjectAction ;
 Action ::= DestroyObjectAction ;
 Action ::= TestIdentityAction ;
 Action ::= ReadSelfAction ;
 Action ::= StructuralFeatureAction ;
 Action ::= LinkAction ;
 Action ::= ClearAssociationAction ;
 Action ::= VariableAction ;
 Action ::= ApplyFunctionAction ;
 Action ::= InvocationAction ;
 Action ::= ReadExtentAction ;
 Action ::= ReclassifyObjectAction ;
 Action ::= ReadIsClassifiedObjectAction ;
 Action ::= StartOwnedBehaviorAction ;
 Action ::= ReadLinkObjectEndAction ;
 Action ::= ReadLinkObjectEndQualifierAction ;
 Action ::= AcceptEventAction ;
 Action ::= ReplyAction ;
 Action ::= RaiseExceptionAction ;
 Action ::= StructuredActivityNode ;
 Action ::= effect::String (output::OutputPin)+ (input::InputPin)+ context::Classifier (localPrecondition::Constraint)+ (localPostcondition::Constraint)+ ;
CallAction ::= CallOperationAction ;
 CallAction ::= CallBehaviorAction ;
EncapsulatedClassifier ::= Class ;
Stereotype ::= (ownedOperation::Operation)+ (superClass::Class)+ (extension::Extension)+ (nestedClassifier::Classifier)+ isActive::Boolean (ownedReception::Reception)+ ;
TypedElement ::= ValueSpecification ;
 TypedElement ::= ObjectNode ;
DestroyObjectAction ::= isDestroyLinks::Boolean isDestroyOwnedObjects::Boolean target::InputPin ;
StateInvariant ::= invariant::Constraint ;
ProtocolStateMachine ::= (conformance::ProtocolConformance)+ ;
InstanceSpecification ::= EnumerationLiteral ;
 InstanceSpecification ::= (slot::Slot)+ (classifier::Classifier)+ specification::ValueSpecification ;
AnyTrigger ::= ε ;
DestroyLinkAction ::= ε ;
Operation ::= (ownedParameter::Parameter)+ class_::Class isQuery::Boolean datatype::DataType (precondition::Constraint)+ (postcondition::Constraint)+ (redefinedOperation::Operation)+ bodyCondition::Constraint ;
CallBehaviorAction ::= behavior::Behavior ;
InitialNode ::= ε ;
ExpansionNode ::= regionAsOutput::ExpansionRegion regionAsInput::ExpansionRegion ;
Classifier ::= DataType ;
 Classifier ::= BehavioredClassifier ;
 Classifier ::= InformationItem ;
 Classifier ::= StructuredClassifier ;
 Classifier ::= Interface ;
 Classifier ::= Actor ;
 Classifier ::= Signal ;
 Classifier ::= ParameterableClassifier ;
 Classifier ::= TemplateableClassifier ;
 Classifier ::= Association ;
 Classifier ::= Artifact ;
BroadcastSignalAction ::= signal::Signal ;
InformationItem ::= (represented::Classifier)+ ;
Comment ::= body::String (annotatedElement::Element)+ bodyExpression::StringExpression ;
TemplateSignature ::= RedefinableTemplateSignature ;
 TemplateSignature ::= (parameter::TemplateParameter)+ (ownedParameter::TemplateParameter)+ (nestedSignature::TemplateSignature)+ nestingSignature::TemplateSignature template::TemplateableElement ;
ExtensionEnd ::= default::String isComposite::Boolean isDerived::Boolean class_::Class opposite::Property isDerivedUnion::Boolean owningAssociation::Association (redefinedProperty::Property)+ (subsettedProperty::Property)+ datatype::DataType association::Association aggregation::AggregationKind defaultValue::ValueSpecification (qualifier::Property)+ associationEnd::Property ;
Namespace ::= Package ;
 Namespace ::= Classifier ;
 Namespace ::= BehavioralFeature ;
 Namespace ::= InteractionOperand ;
 Namespace ::= Region ;
 Namespace ::= State ;
Extend ::= extendedCase::UseCase extension::UseCase condition::Constraint (extensionLocation::ExtensionPoint)+ ;
MergeNode ::= ε ;
ConnectionPointReference ::= (entry::Pseudostate)+ (exit::Pseudostate)+ ;
StructuralFeature ::= Property ;
ConnectableElement ::= Parameter ;
 ConnectableElement ::= Variable ;
UseCase ::= (include::Include)+ (extend::Extend)+ (extensionPoint::ExtensionPoint)+ (subject::Classifier)+ ;
PartDecomposition ::= refersTo::Interaction (actualGate::Gate)+ (argument::InputPin)+ ;
ValueSpecification ::= OpaqueExpression ;
 ValueSpecification ::= LiteralSpecification ;
 ValueSpecification ::= InstanceValue ;
 ValueSpecification ::= TimeExpression ;
 ValueSpecification ::= Duration ;
 ValueSpecification ::= Interval ;
String ::= string() ;
WriteStructuralFeatureAction ::= RemoveStructuralFeatureValueAction ;
 WriteStructuralFeatureAction ::= AddStructuralFeatureValueAction ;
 WriteStructuralFeatureAction ::= TimeObservationAction ;
 WriteStructuralFeatureAction ::= DurationObservationAction ;
TemplateParameter ::= OperationTemplateParameter ;
 TemplateParameter ::= ClassifierTemplateParameter ;
 TemplateParameter ::= ConnectableElementTemplateParameter ;
 TemplateParameter ::= signature::TemplateSignature parameteredElement::ParameterableElement ownedParameteredElement::ParameterableElement default::ParameterableElement ownedDefault::ParameterableElement ;
Activity ::= body::String language::String (edge::ActivityEdge)+ (group::ActivityGroup)+ (node::ActivityNode)+ (action::Action)+ (structuredNode::StructuredActivityNode)+ isSingleExecution::Boolean isReadOnly::Boolean ;
ParameterEffectKind ::= (update::ε) | (read::ε) | (delete::ε) | (create::ε) ;
DurationObservationAction ::= (duration::Duration)+ ;
ProtocolTransition ::= postCondition::Constraint (referred::Operation)+ preCondition::Constraint ;
ObjectFlow ::= isMulticast::Boolean isMultireceive::Boolean transformation::Behavior selection::Behavior ;
Connector ::= type::Association (redefinedConnector::Connector)+ end::ConnectorEnd kind::ConnectorKind (contract::Behavior)+ ;
LinkEndCreationData ::= isReplaceAll::Boolean insertAt::InputPin ;
ObjectNodeOrderingKind ::= (FIFO::ε) | (unordered::ε) | (ordered::ε) | (LIFO::ε) ;
ActivityFinalNode ::= ε ;
AcceptEventAction ::= AcceptCallAction ;
 AcceptEventAction ::= (trigger::Trigger)+ (result::OutputPin)+ ;
ReadVariableAction ::= result::OutputPin ;
Enumeration ::= (ownedLiteral::EnumerationLiteral)+ ;
ReadLinkAction ::= result::OutputPin ;
GeneralizationSet ::= isCovering::Boolean isDisjoint::Boolean powertype::Classifier (generalization::Generalization)+ ;
Package ::= Profile ;
 Package ::= Model ;
 Package ::= (nestedPackage::Package)+ nestingPackage::Package (ownedType::Type)+ (ownedMember::PackageableElement)+ (packageMerge::PackageMerge)+ (appliedProfile::ProfileApplication)+ (packageExtension::PackageMerge)+ ;
MessageSort ::= (synchSignal::ε) | (synchCall::ε) | (asynchCall::ε) | (asynchSignal::ε) ;
Collaboration ::= (collaborationRole::ConnectableElement)+ ;
DataType ::= Enumeration ;
 DataType ::= PrimitiveType ;
 DataType ::= (ownedAttribute::Property)+ (ownedOperation::Operation)+ ;
Node ::= Device ;
 Node ::= ExecutionEnvironment ;
 Node ::= (nestedNode::Node)+ ;
Stop ::= (startExec::ExecutionOccurrence)+ (finishExec::ExecutionOccurrence)+ (toAfter::GeneralOrdering)+ (toBefore::GeneralOrdering)+ ;
CallOperationAction ::= operation::Operation target::InputPin ;
Extension ::= isRequired::Boolean metaclass::Class ;
DeploymentSpecification ::= deploymentLocation::String executionLocation::String ;
DecisionNode ::= decisionInput::Behavior ;
Slot ::= owningInstance::InstanceSpecification (value::ValueSpecification)+ definingFeature::StructuralFeature ;
Integer ::= integer() ;
SendObjectAction ::= target::InputPin request::InputPin ;
Substitution ::= contract::Classifier substitutingClassifier::Classifier ;
ApplyFunctionAction ::= function::PrimitiveFunction (argument::InputPin)+ (result::OutputPin)+ ;
ExceptionHandler ::= protectedNode::ExecutableNode handlerBody::ExecutableNode exceptionInput::ObjectNode (exceptionType::Classifier)+ ;
MessageKind ::= (found::ε) | (lost::ε) | (unknown::ε) | (complete::ε) ;
ParameterSet ::= (parameter::Parameter)+ (condition::Constraint)+ ;
ParameterableElement ::= ValueSpecification ;
 ParameterableElement ::= PackageableElement ;
 ParameterableElement ::= ConnectableElement ;
BehavioralFeature ::= Reception ;
 BehavioralFeature ::= Operation ;
Interface ::= (ownedAttribute::Property)+ (ownedOperation::Operation)+ (redefinedInterface::Interface)+ (nestedClassifier::Classifier)+ (ownedReception::Reception)+ protocol::ProtocolStateMachine ;
TimeObservationAction ::= (now::TimeExpression)+ ;
Region ::= (subvertex::Vertex)+ (transition::Transition)+ stateMachine::StateMachine state::State extendedRegion::Region ;
Lifeline ::= (coveredBy::InteractionFragment)+ represents::ConnectableElement interaction::Interaction selector::OpaqueExpression decomposedAs::PartDecomposition ;
AddStructuralFeatureValueAction ::= isReplaceAll::Boolean insertAt::InputPin ;
ClassifierTemplateParameter ::= allowSubstitutable::Boolean ;
RedefinableTemplateSignature ::= (redefinitionContext::Classifier)+ isLeaf::Boolean (parameter::TemplateParameter)+ (ownedParameter::TemplateParameter)+ (nestedSignature::TemplateSignature)+ nestingSignature::TemplateSignature template::TemplateableElement ;
CreateLinkAction ::= CreateLinkObjectAction ;
TimeTrigger ::= isRelative::Boolean when::ValueSpecification ;
ControlFlow ::= activity::Activity source::ActivityNode target::ActivityNode (inGroup::ActivityGroup)+ guard::ValueSpecification (redefinedElement::ActivityEdge)+ inStructuredNode::StructuredActivityNode (inPartition::ActivityPartition)+ weight::ValueSpecification interrupts::InterruptibleActivityRegion ;
Model ::= viewpoint::String ;
Boolean ::= "true" | "false" ;
QualifierValue ::= qualifier::Property value::InputPin ;
ProfileApplication ::= importedProfile::Profile ;
InvocationAction ::= CallAction ;
 InvocationAction ::= SendSignalAction ;
 InvocationAction ::= BroadcastSignalAction ;
 InvocationAction ::= SendObjectAction ;
Manifestation ::= utilizedElement::PackageableElement ;
ForkNode ::= ε ;
ClearStructuralFeatureAction ::= structuralFeature::StructuralFeature object::InputPin ;
ObjectNode ::= ActivityParameterNode ;
 ObjectNode ::= CentralBufferNode ;
 ObjectNode ::= ExpansionNode ;
 ObjectNode ::= Pin ;
--------------------uml::umldi-2.0.bgf--------------------
GraphicPrimitive ::= Polyline ;
 GraphicPrimitive ::= Ellipse ;
SendAction ::= signal::Signal ;
Constraint ::= (constrainedElement::ModelElement)+ body::BooleanExpression ;
LinkObject ::= association::Association connection::LinkEnd ;
ArgListsExpression ::= language::String body::String ;
Property ::= key::String value::String ;
Artifact ::= (powertypeRange::Generalization)+ (feature::Feature)+ ;
Interaction ::= (message::Message)+ context::Collaboration ;
Permission ::= (client::ModelElement)+ (supplier::ModelElement)+ ;
TextElement ::= text::String ;
GraphElement ::= GraphEdge ;
 GraphElement ::= GraphNode ;
UseCaseInstance ::= (ownedInstance::Instance)+ (linkEnd::LinkEnd)+ (classifier::Classifier)+ componentInstance::ComponentInstance (slot::AttributeLink)+ (ownedLink::Link)+ ;
ClassifierInState ::= (inState::State)+ type::Classifier ;
ScopeKind ::= (sk_instance::ε) | (sk_classifier::ε) ;
Message ::= interaction::Interaction (conformingStimulus::Stimulus)+ action::Action communicationConnection::AssociationRole activator::Message receiver::ClassifierRole sender::ClassifierRole (predecessor::Message)+ ;
MappingExpression ::= language::String body::String ;
VisibilityKind ::= (vk_public::ε) | (vk_protected::ε) | (vk_private::ε) | (vk_package::ε) ;
Polyline ::= waypoints::BezierPoint closed::Boolean ;
SimpleState ::= ActionState ;
 SimpleState ::= ObjectFlowState ;
 SimpleState ::= ActionState | ObjectFlowState ;
ChangeableKind ::= (ck_changeable::ε) | (ck_frozen::ε) | (ck_addOnly::ε) ;
MultiplicityRange ::= multiplicity::Multiplicity lower::Integer upper::Integer ;
Component ::= (deploymentLocation::Node)+ (residentElement::ElementResidence)+ (implementation::Artifact)+ ;
Argument ::= action::Action value::Expression ;
Element ::= ModelElement ;
 Element ::= PresentationElement ;
FinalState ::= (deferrableEvent::Event)+ (internalTransition::Transition)+ exit::Action doActivity::Action entry::Action stateMachine::StateMachine ;
ActionState ::= CallState ;
 ActionState ::= isDynamic::Boolean dynamicArguments::ArgListsExpression dynamicMultiplicity::Multiplicity ;
TerminateAction ::= (actualArgument::Argument)+ actionSequence::ActionSequence recurrence::IterationExpression target::ObjectSetExpression isAsynchronous::Boolean script::ActionExpression ;
NodeInstance ::= (resident::ComponentInstance)+ ;
Feature ::= StructuralFeature ;
 Feature ::= BehavioralFeature ;
Actor ::= (powertypeRange::Generalization)+ (feature::Feature)+ ;
BezierPoint ::= base::Point control1::Point control2::Point ;
Partition ::= (contents::ModelElement)+ activityGraph::ActivityGraph ;
DiagramElement ::= GraphElement ;
 DiagramElement ::= LeafElement ;
 DiagramElement ::= Reference ;
Signal ::= Exception ;
Primitive ::= ε ;
DataValue ::= (ownedInstance::Instance)+ (linkEnd::LinkEnd)+ (classifier::Classifier)+ componentInstance::ComponentInstance (slot::AttributeLink)+ (ownedLink::Link)+ ;
BooleanExpression ::= language::String body::String ;
GraphConnector ::= graphElement::GraphElement (graphEdge::GraphEdge)+ position::Point ;
Ellipse ::= center::Point radiusX::Double radiusY::Double rotation::Double startAngle::Double endAngle::Double ;
CallEvent ::= operation::Operation ;
AssociationEnd ::= AssociationEndRole ;
 AssociationEnd ::= association::Association (specification::Classifier)+ participant::Classifier (qualifier::Attribute)+ isNavigable::Boolean ordering::OrderingKind aggregation::AggregationKind targetScope::ScopeKind multiplicity::Multiplicity changeability::ChangeableKind ;
Expression ::= BooleanExpression ;
 Expression ::= TypeExpression ;
 Expression ::= MappingExpression ;
 Expression ::= ProcedureExpression ;
 Expression ::= ObjectSetExpression ;
 Expression ::= ActionExpression ;
 Expression ::= IterationExpression ;
 Expression ::= TimeExpression ;
 Expression ::= ArgListsExpression ;
 Expression ::= language::String body::String ;
Instance ::= UseCaseInstance ;
 Instance ::= Object ;
 Instance ::= DataValue ;
 Instance ::= ComponentInstance ;
 Instance ::= NodeInstance ;
 Instance ::= SubsystemInstance ;
ModelElement ::= Message ;
 ModelElement ::= Interaction ;
 ModelElement ::= InteractionInstanceSet ;
 ModelElement ::= CollaborationInstanceSet ;
 ModelElement ::= ExtensionPoint ;
 ModelElement ::= Instance ;
 ModelElement ::= Action ;
 ModelElement ::= AttributeLink ;
 ModelElement ::= Link ;
 ModelElement ::= Argument ;
 ModelElement ::= LinkEnd ;
 ModelElement ::= Stimulus ;
 ModelElement ::= Partition ;
 ModelElement ::= StateMachine ;
 ModelElement ::= Event ;
 ModelElement ::= StateVertex ;
 ModelElement ::= Transition ;
 ModelElement ::= Guard ;
 ModelElement ::= GeneralizableElement ;
 ModelElement ::= Namespace ;
 ModelElement ::= Feature ;
 ModelElement ::= AssociationEnd ;
 ModelElement ::= Constraint ;
 ModelElement ::= Relationship ;
 ModelElement ::= Parameter ;
 ModelElement ::= Comment ;
 ModelElement ::= EnumerationLiteral ;
 ModelElement ::= TagDefinition ;
 ModelElement ::= TaggedValue ;
Diagram ::= owner::SemanticModelBridge (diagramLink::DiagramLink)+ name::String zoom::Double viewport::Point ;
CallState ::= isDynamic::Boolean dynamicArguments::ArgListsExpression dynamicMultiplicity::Multiplicity ;
SignalEvent ::= signal::Signal ;
ExtensionPoint ::= useCase::UseCase location::String ;
DestroyAction ::= (actualArgument::Argument)+ actionSequence::ActionSequence recurrence::IterationExpression target::ObjectSetExpression isAsynchronous::Boolean script::ActionExpression ;
Reception ::= signal::Signal specification::String isRoot::Boolean isLeaf::Boolean isAbstract::Boolean ;
TimeEvent ::= when::TimeExpression ;
ProcedureExpression ::= language::String body::String ;
SubmachineState ::= SubactivityState ;
 SubmachineState ::= submachine::StateMachine ;
ChangeEvent ::= changeExpression::BooleanExpression ;
ParameterDirectionKind ::= (pdk_in::ε) | (pdk_inout::ε) | (pdk_out::ε) | (pdk_return::ε) ;
GeneralizableElement ::= Stereotype ;
 GeneralizableElement ::= Collaboration ;
 GeneralizableElement ::= Classifier ;
 GeneralizableElement ::= Association ;
 GeneralizableElement ::= Package ;
OrderingKind ::= (ok_unordered::ε) | (ok_ordered::ε) ;
PseudostateKind ::= (pk_choice::ε) | (pk_deepHistory::ε) | (pk_fork::ε) | (pk_initial::ε) | (pk_join::ε) | (pk_junction::ε) | (pk_shallowHistory::ε) ;
ReturnAction ::= (actualArgument::Argument)+ actionSequence::ActionSequence recurrence::IterationExpression target::ObjectSetExpression isAsynchronous::Boolean script::ActionExpression ;
SubactivityState ::= isDynamic::Boolean dynamicArguments::ArgListsExpression dynamicMultiplicity::Multiplicity ;
ElementImport ::= package::Package importedElement::ModelElement visibility::VisibilityKind alias::String isSpecification::Boolean ;
Multiplicity ::= (range::MultiplicityRange)+ ;
LeafElement ::= TextElement ;
 LeafElement ::= GraphicPrimitive ;
 LeafElement ::= Image ;
Generalization ::= parent::GeneralizableElement powertype::Classifier child::GeneralizableElement discriminator::String ;
AssociationClass ::= connection::AssociationEnd isActive::Boolean ;
StateMachine ::= ActivityGraph ;
 StateMachine ::= context::ModelElement (submachineState::SubmachineState)+ top::State (transitions::Transition)+ ;
AttributeLink ::= instance::Instance value::Instance linkEnd::LinkEnd attribute::Attribute ;
ComponentInstance ::= (resident::Instance)+ nodeInstance::NodeInstance ;
TypeExpression ::= language::String body::String ;
ActionExpression ::= language::String body::String ;
ElementResidence ::= container::Component resident::ModelElement visibility::VisibilityKind ;
Parameter ::= type::Classifier behavioralFeature::BehavioralFeature defaultValue::Expression kind::ParameterDirectionKind ;
EnumerationLiteral ::= enumeration::Enumeration ;
Include ::= addition::UseCase base::UseCase ;
Abstraction ::= mapping::MappingExpression ;
Guard ::= transition::Transition expression::BooleanExpression ;
SynchState ::= bound::Integer ;
Usage ::= (client::ModelElement)+ (supplier::ModelElement)+ ;
Attribute ::= associationEnd::AssociationEnd initialValue::Expression ;
ObjectSetExpression ::= language::String body::String ;
Event ::= TimeEvent ;
 Event ::= CallEvent ;
 Event ::= SignalEvent ;
 Event ::= ChangeEvent ;
TemplateArgument ::= binding::Binding modelElement::ModelElement ;
AssociationRole ::= base::Association (conformingLink::Link)+ (message::Message)+ multiplicity::Multiplicity ;
AggregationKind ::= (ak_none::ε) | (ak_aggregate::ε) | (ak_composite::ε) ;
Transition ::= target::StateVertex trigger::Event stateMachine::StateMachine source::StateVertex effect::Action guard::Guard ;
StateVertex ::= State ;
 StateVertex ::= Pseudostate ;
 StateVertex ::= SynchState ;
 StateVertex ::= StubState ;
Pseudostate ::= kind::PseudostateKind ;
CreateAction ::= instantiation::Classifier ;
State ::= CompositeState ;
 State ::= SimpleState ;
 State ::= FinalState ;
Point ::= x::Double y::Double ;
TagDefinition ::= owner::Stereotype tagType::String multiplicity::Multiplicity ;
SimpleSemanticModelElement ::= typeInfo::String ;
Dependency ::= Abstraction ;
 Dependency ::= Usage ;
 Dependency ::= Binding ;
 Dependency ::= Permission ;
 Dependency ::= (client::ModelElement)+ (supplier::ModelElement)+ ;
CompositeState ::= SubmachineState ;
 CompositeState ::= (subvertex::StateVertex)+ isConcurrent::Boolean ;
CallConcurrencyKind ::= (cck_sequential::ε) | (cck_guarded::ε) | (cck_concurrent::ε) ;
Binding ::= (argument::TemplateArgument)+ ;
TimeExpression ::= language::String body::String ;
ObjectFlowState ::= type::Classifier (parameter::Parameter)+ isSynch::Boolean ;
StubState ::= referenceState::String ;
Association ::= AssociationRole ;
 Association ::= AssociationClass ;
 Association ::= connection::AssociationEnd ;
LinkEnd ::= link::Link (qualifiedValue::AttributeLink)+ instance::Instance associationEnd::AssociationEnd ;
Object ::= LinkObject ;
 Object ::= (ownedInstance::Instance)+ (linkEnd::LinkEnd)+ (classifier::Classifier)+ componentInstance::ComponentInstance (slot::AttributeLink)+ (ownedLink::Link)+ ;
ActivityGraph ::= (partition::Partition)+ ;
Stimulus ::= (argument::Instance)+ communicationLink::Link receiver::Instance dispatchAction::Action sender::Instance ;
Relationship ::= Extend ;
 Relationship ::= Include ;
 Relationship ::= Generalization ;
 Relationship ::= Dependency ;
 Relationship ::= Flow ;
 Relationship ::= Association ;
Class ::= AssociationClass ;
 Class ::= isActive::Boolean ;
ClassifierRole ::= (availableContents::ModelElement)+ (base::Classifier)+ (conformingInstance::Instance)+ (availableFeature::Feature)+ multiplicity::Multiplicity ;
Action ::= CreateAction ;
 Action ::= DestroyAction ;
 Action ::= UninterpretedAction ;
 Action ::= CallAction ;
 Action ::= SendAction ;
 Action ::= ActionSequence ;
 Action ::= ReturnAction ;
 Action ::= TerminateAction ;
ProgrammingLanguageDataType ::= expression::TypeExpression ;
CallAction ::= operation::Operation ;
Stereotype ::= (stereotypeConstraint::Constraint)+ (definedTag::TagDefinition)+ icon::String (baseClass::String)+ ;
GraphNode ::= Diagram ;
 GraphNode ::= size::Dimension ;
AssociationEndRole ::= base::AssociationEnd (availableQualifier::Attribute)+ collaborationMultiplicity::Multiplicity ;
Subsystem ::= isInstantiable::Boolean ;
Flow ::= (source::ModelElement)+ (target::ModelElement)+ ;
DiagramLink ::= graphElement::GraphElement diagram::Diagram zoom::Double viewport::Point ;
SemanticModelBridge ::= SimpleSemanticModelElement ;
 SemanticModelBridge ::= Uml1SemanticModelBridge ;
 SemanticModelBridge ::= CoreSemanticModelBridge ;
Operation ::= concurrency::CallConcurrencyKind isRoot::Boolean isLeaf::Boolean isAbstract::Boolean specification::String ;
Dimension ::= width::Double height::Double ;
TaggedValue ::= type::TagDefinition (referenceValue::ModelElement)+ modelElement::ModelElement (dataValue::String)+ ;
Classifier ::= ClassifierRole ;
 Classifier ::= UseCase ;
 Classifier ::= Actor ;
 Classifier ::= Signal ;
 Classifier ::= ClassifierInState ;
 Classifier ::= Class ;
 Classifier ::= DataType ;
 Classifier ::= Interface ;
 Classifier ::= Component ;
 Classifier ::= Node ;
 Classifier ::= Artifact ;
 Classifier ::= Subsystem ;
Comment ::= (annotatedElement::ModelElement)+ body::String ;
Namespace ::= Collaboration ;
 Namespace ::= Classifier ;
 Namespace ::= Package ;
Image ::= uri::String mimeType::String ;
InteractionInstanceSet ::= interaction::Interaction context::CollaborationInstanceSet (participatingStimulus::Stimulus)+ ;
Extend ::= (extensionPoint::ExtensionPoint)+ extension::UseCase base::UseCase condition::BooleanExpression ;
StructuralFeature ::= Attribute ;
ActionSequence ::= (action::Action)+ ;
UseCase ::= (include::Include)+ (extend::Extend)+ (extensionPoint::ExtensionPoint)+ ;
IterationExpression ::= language::String body::String ;
String ::= string() ;
TemplateParameter ::= template::ModelElement parameter::ModelElement defaultElement::ModelElement ;
Exception ::= ε ;
CoreSemanticModelBridge ::= diagram::Diagram graphElement::GraphElement presentation::String ;
Reference ::= referenced::DiagramElement ;
UninterpretedAction ::= (actualArgument::Argument)+ actionSequence::ActionSequence recurrence::IterationExpression target::ObjectSetExpression isAsynchronous::Boolean script::ActionExpression ;
CollaborationInstanceSet ::= collaboration::Collaboration (constrainingElement::ModelElement)+ (participatingInstance::Instance)+ (interactionInstanceSet::InteractionInstanceSet)+ (participatingLink::Link)+ ;
Enumeration ::= (literal::EnumerationLiteral)+ ;
Package ::= Model ;
 Package ::= Subsystem ;
 Package ::= (elementImport::ElementImport)+ ;
Collaboration ::= (usedCollaboration::Collaboration)+ representedOperation::Operation representedClassifier::Classifier (interaction::Interaction)+ (constrainingElement::ModelElement)+ ;
DataType ::= Primitive ;
 DataType ::= Enumeration ;
 DataType ::= ProgrammingLanguageDataType ;
 DataType ::= Primitive | Enumeration | ProgrammingLanguageDataType ;
Node ::= (deployedComponent::Component)+ ;
Integer ::= integer() ;
Link ::= LinkObject ;
 Link ::= association::Association connection::LinkEnd ;
BehavioralFeature ::= Reception ;
 BehavioralFeature ::= Operation ;
 BehavioralFeature ::= Method ;
Interface ::= (powertypeRange::Generalization)+ (feature::Feature)+ ;
GraphEdge ::= anchor::GraphConnector waypoints::BezierPoint ;
Model ::= (elementImport::ElementImport)+ ;
Boolean ::= "true" | "false" ;
SubsystemInstance ::= (ownedInstance::Instance)+ (linkEnd::LinkEnd)+ (classifier::Classifier)+ componentInstance::ComponentInstance (slot::AttributeLink)+ (ownedLink::Link)+ ;
Method ::= specification::Operation body::ProcedureExpression ;
--------------------uml::umldi-ag.bgf--------------------
SendAction ::= signal::Signal ;
ObjectSetExpression ::= language::String body::String ;
Event ::= TimeEvent ;
 Event ::= CallEvent ;
 Event ::= SignalEvent ;
 Event ::= ChangeEvent ;
ArgListsExpression ::= language::String body::String ;
AggregationKind ::= (ak_none::ε) | (ak_aggregate::ε) | (ak_composite::ε) ;
StateVertex ::= State ;
 StateVertex ::= Pseudostate ;
 StateVertex ::= SynchState ;
 StateVertex ::= StubState ;
Transition ::= target::StateVertex trigger::Event stateMachine::StateMachine source::StateVertex effect::Action guard::Guard ;
Pseudostate ::= kind::PseudostateKind ;
CreateAction ::= instantiation::Classifier ;
State ::= CompositeState ;
 State ::= SimpleState ;
 State ::= FinalState ;
ClassifierInState ::= (inState::State)+ type::Classifier ;
CompositeState ::= SubmachineState ;
 CompositeState ::= (subvertex::StateVertex)+ isConcurrent::Boolean ;
CallConcurrencyKind ::= (cck_sequential::ε) | (cck_guarded::ε) | (cck_concurrent::ε) ;
ScopeKind ::= (sk_instance::ε) | (sk_classifier::ε) ;
VisibilityKind ::= (vk_public::ε) | (vk_protected::ε) | (vk_private::ε) | (vk_package::ε) ;
TimeExpression ::= language::String body::String ;
ObjectFlowState ::= type::Classifier (parameter::Parameter)+ isSynch::Boolean ;
StubState ::= referenceState::String ;
SimpleState ::= ActionState ;
 SimpleState ::= ObjectFlowState ;
 SimpleState ::= ActionState | ObjectFlowState ;
ActivityGraph ::= (partition::Partition)+ ;
ChangeableKind ::= (ck_changeable::ε) | (ck_frozen::ε) | (ck_addOnly::ε) ;
MultiplicityRange ::= multiplicity::Multiplicity lower::Integer upper::Integer ;
Argument ::= action::Action value::Expression ;
Element ::= ModelElement ;
ActionState ::= CallState ;
 ActionState ::= isDynamic::Boolean dynamicArguments::ArgListsExpression dynamicMultiplicity::Multiplicity ;
FinalState ::= (deferrableEvent::Event)+ (internalTransition::Transition)+ exit::Action doActivity::Action entry::Action stateMachine::StateMachine ;
Relationship ::= Generalization ;
TerminateAction ::= (actualArgument::Argument)+ actionSequence::ActionSequence recurrence::IterationExpression target::ObjectSetExpression isAsynchronous::Boolean script::ActionExpression ;
Feature ::= BehavioralFeature ;
Action ::= CreateAction ;
 Action ::= DestroyAction ;
 Action ::= UninterpretedAction ;
 Action ::= CallAction ;
 Action ::= SendAction ;
 Action ::= ActionSequence ;
 Action ::= ReturnAction ;
 Action ::= TerminateAction ;
CallAction ::= operation::Operation ;
Partition ::= (contents::ModelElement)+ activityGraph::ActivityGraph ;
Signal ::= Exception ;
 Signal ::= Exception ;
Operation ::= concurrency::CallConcurrencyKind isRoot::Boolean isLeaf::Boolean isAbstract::Boolean specification::String ;
Classifier ::= Signal ;
 Classifier ::= ClassifierInState ;
BooleanExpression ::= language::String body::String ;
CallEvent ::= operation::Operation ;
Namespace ::= Classifier ;
Expression ::= BooleanExpression ;
 Expression ::= ObjectSetExpression ;
 Expression ::= ActionExpression ;
 Expression ::= IterationExpression ;
 Expression ::= TimeExpression ;
 Expression ::= ArgListsExpression ;
 Expression ::= language::String body::String ;
ActionSequence ::= (action::Action)+ ;
IterationExpression ::= language::String body::String ;
CallState ::= isDynamic::Boolean dynamicArguments::ArgListsExpression dynamicMultiplicity::Multiplicity ;
ModelElement ::= Action ;
 ModelElement ::= Argument ;
 ModelElement ::= GeneralizableElement ;
 ModelElement ::= Namespace ;
 ModelElement ::= Feature ;
 ModelElement ::= Relationship ;
 ModelElement ::= Parameter ;
 ModelElement ::= StateMachine ;
 ModelElement ::= Event ;
 ModelElement ::= StateVertex ;
 ModelElement ::= Transition ;
 ModelElement ::= Guard ;
 ModelElement ::= Partition ;
SignalEvent ::= signal::Signal ;
String ::= string() ;
DestroyAction ::= (actualArgument::Argument)+ actionSequence::ActionSequence recurrence::IterationExpression target::ObjectSetExpression isAsynchronous::Boolean script::ActionExpression ;
Exception ::= ε ;
TimeEvent ::= when::TimeExpression ;
ChangeEvent ::= changeExpression::BooleanExpression ;
SubmachineState ::= SubactivityState ;
 SubmachineState ::= submachine::StateMachine ;
ParameterDirectionKind ::= (pdk_in::ε) | (pdk_inout::ε) | (pdk_out::ε) | (pdk_return::ε) ;
GeneralizableElement ::= Classifier ;
UninterpretedAction ::= (actualArgument::Argument)+ actionSequence::ActionSequence recurrence::IterationExpression target::ObjectSetExpression isAsynchronous::Boolean script::ActionExpression ;
OrderingKind ::= (ok_unordered::ε) | (ok_ordered::ε) ;
PseudostateKind ::= (pk_choice::ε) | (pk_deepHistory::ε) | (pk_fork::ε) | (pk_initial::ε) | (pk_join::ε) | (pk_junction::ε) | (pk_shallowHistory::ε) ;
ReturnAction ::= (actualArgument::Argument)+ actionSequence::ActionSequence recurrence::IterationExpression target::ObjectSetExpression isAsynchronous::Boolean script::ActionExpression ;
SubactivityState ::= isDynamic::Boolean dynamicArguments::ArgListsExpression dynamicMultiplicity::Multiplicity ;
Multiplicity ::= (range::MultiplicityRange)+ ;
Integer ::= integer() ;
Generalization ::= parent::GeneralizableElement powertype::Classifier child::GeneralizableElement discriminator::String ;
BehavioralFeature ::= Operation ;
StateMachine ::= ActivityGraph ;
 StateMachine ::= context::ModelElement (submachineState::SubmachineState)+ top::State (transitions::Transition)+ ;
ActionExpression ::= language::String body::String ;
Parameter ::= type::Classifier behavioralFeature::BehavioralFeature defaultValue::Expression kind::ParameterDirectionKind ;
Boolean ::= "true" | "false" ;
Guard ::= transition::Transition expression::BooleanExpression ;
SynchState ::= bound::Integer ;
--------------------uml::umldi-c.bgf--------------------
SendAction ::= signal::Signal ;
Attribute ::= associationEnd::AssociationEnd initialValue::Expression ;
InteractionInstanceSet ::= interaction::Interaction context::CollaborationInstanceSet (participatingStimulus::Stimulus)+ ;
ObjectSetExpression ::= language::String body::String ;
Namespace ::= Classifier ;
 Namespace ::= Collaboration ;
AssociationEnd ::= AssociationEndRole ;
 AssociationEnd ::= association::Association (specification::Classifier)+ participant::Classifier (qualifier::Attribute)+ isNavigable::Boolean ordering::OrderingKind aggregation::AggregationKind targetScope::ScopeKind multiplicity::Multiplicity changeability::ChangeableKind ;
LinkObject ::= association::Association connection::LinkEnd ;
StructuralFeature ::= Attribute ;
Expression ::= BooleanExpression ;
 Expression ::= ObjectSetExpression ;
 Expression ::= ActionExpression ;
 Expression ::= IterationExpression ;
 Expression ::= language::String body::String ;
AssociationRole ::= base::Association (conformingLink::Link)+ (message::Message)+ multiplicity::Multiplicity ;
ActionSequence ::= (action::Action)+ ;
AggregationKind ::= (ak_none::ε) | (ak_aggregate::ε) | (ak_composite::ε) ;
Instance ::= Object ;
 Instance ::= DataValue ;
 Instance ::= ComponentInstance ;
 Instance ::= NodeInstance ;
 Instance ::= SubsystemInstance ;
IterationExpression ::= language::String body::String ;
ModelElement ::= GeneralizableElement ;
 ModelElement ::= Namespace ;
 ModelElement ::= Feature ;
 ModelElement ::= AssociationEnd ;
 ModelElement ::= Relationship ;
 ModelElement ::= Parameter ;
 ModelElement ::= Instance ;
 ModelElement ::= Action ;
 ModelElement ::= AttributeLink ;
 ModelElement ::= Link ;
 ModelElement ::= Argument ;
 ModelElement ::= LinkEnd ;
 ModelElement ::= Stimulus ;
 ModelElement ::= Message ;
 ModelElement ::= Interaction ;
 ModelElement ::= InteractionInstanceSet ;
 ModelElement ::= CollaborationInstanceSet ;
Interaction ::= (message::Message)+ context::Collaboration ;
CreateAction ::= instantiation::Classifier ;
String ::= string() ;
DestroyAction ::= (actualArgument::Argument)+ actionSequence::ActionSequence recurrence::IterationExpression target::ObjectSetExpression isAsynchronous::Boolean script::ActionExpression ;
Exception ::= ε ;
Reception ::= signal::Signal specification::String isRoot::Boolean isLeaf::Boolean isAbstract::Boolean ;
ParameterDirectionKind ::= (pdk_in::ε) | (pdk_inout::ε) | (pdk_out::ε) | (pdk_return::ε) ;
UninterpretedAction ::= (actualArgument::Argument)+ actionSequence::ActionSequence recurrence::IterationExpression target::ObjectSetExpression isAsynchronous::Boolean script::ActionExpression ;
CallConcurrencyKind ::= (cck_sequential::ε) | (cck_guarded::ε) | (cck_concurrent::ε) ;
GeneralizableElement ::= Classifier ;
 GeneralizableElement ::= Association ;
 GeneralizableElement ::= Collaboration ;
CollaborationInstanceSet ::= collaboration::Collaboration (constrainingElement::ModelElement)+ (participatingInstance::Instance)+ (interactionInstanceSet::InteractionInstanceSet)+ (participatingLink::Link)+ ;
OrderingKind ::= (ok_unordered::ε) | (ok_ordered::ε) ;
ScopeKind ::= (sk_instance::ε) | (sk_classifier::ε) ;
Message ::= interaction::Interaction (conformingStimulus::Stimulus)+ action::Action communicationConnection::AssociationRole activator::Message receiver::ClassifierRole sender::ClassifierRole (predecessor::Message)+ ;
ReturnAction ::= (actualArgument::Argument)+ actionSequence::ActionSequence recurrence::IterationExpression target::ObjectSetExpression isAsynchronous::Boolean script::ActionExpression ;
VisibilityKind ::= (vk_public::ε) | (vk_protected::ε) | (vk_private::ε) | (vk_package::ε) ;
Collaboration ::= (usedCollaboration::Collaboration)+ representedOperation::Operation representedClassifier::Classifier (interaction::Interaction)+ (constrainingElement::ModelElement)+ ;
LinkEnd ::= link::Link (qualifiedValue::AttributeLink)+ instance::Instance associationEnd::AssociationEnd ;
Association ::= AssociationRole ;
 Association ::= connection::AssociationEnd ;
Object ::= LinkObject ;
 Object ::= (ownedInstance::Instance)+ (linkEnd::LinkEnd)+ (classifier::Classifier)+ componentInstance::ComponentInstance (slot::AttributeLink)+ (ownedLink::Link)+ ;
Multiplicity ::= (range::MultiplicityRange)+ ;
MultiplicityRange ::= multiplicity::Multiplicity lower::Integer upper::Integer ;
ChangeableKind ::= (ck_changeable::ε) | (ck_frozen::ε) | (ck_addOnly::ε) ;
Integer ::= integer() ;
Argument ::= action::Action value::Expression ;
Generalization ::= parent::GeneralizableElement powertype::Classifier child::GeneralizableElement discriminator::String ;
Element ::= ModelElement ;
Stimulus ::= (argument::Instance)+ communicationLink::Link receiver::Instance dispatchAction::Action sender::Instance ;
Link ::= LinkObject ;
 Link ::= association::Association connection::LinkEnd ;
BehavioralFeature ::= Operation ;
 BehavioralFeature ::= Reception ;
Relationship ::= Generalization ;
 Relationship ::= Association ;
ClassifierRole ::= (availableContents::ModelElement)+ (base::Classifier)+ (conformingInstance::Instance)+ (availableFeature::Feature)+ multiplicity::Multiplicity ;
NodeInstance ::= (resident::ComponentInstance)+ ;
TerminateAction ::= (actualArgument::Argument)+ actionSequence::ActionSequence recurrence::IterationExpression target::ObjectSetExpression isAsynchronous::Boolean script::ActionExpression ;
AttributeLink ::= instance::Instance value::Instance linkEnd::LinkEnd attribute::Attribute ;
Action ::= CreateAction ;
 Action ::= DestroyAction ;
 Action ::= UninterpretedAction ;
 Action ::= CallAction ;
 Action ::= SendAction ;
 Action ::= ActionSequence ;
 Action ::= ReturnAction ;
 Action ::= TerminateAction ;
Feature ::= StructuralFeature ;
 Feature ::= BehavioralFeature ;
CallAction ::= operation::Operation ;
ComponentInstance ::= (resident::Instance)+ nodeInstance::NodeInstance ;
AssociationEndRole ::= base::AssociationEnd (availableQualifier::Attribute)+ collaborationMultiplicity::Multiplicity ;
ActionExpression ::= language::String body::String ;
Parameter ::= type::Classifier behavioralFeature::BehavioralFeature defaultValue::Expression kind::ParameterDirectionKind ;
Signal ::= Exception ;
Boolean ::= "true" | "false" ;
DataValue ::= (ownedInstance::Instance)+ (linkEnd::LinkEnd)+ (classifier::Classifier)+ componentInstance::ComponentInstance (slot::AttributeLink)+ (ownedLink::Link)+ ;
Operation ::= concurrency::CallConcurrencyKind isRoot::Boolean isLeaf::Boolean isAbstract::Boolean specification::String ;
SubsystemInstance ::= (ownedInstance::Instance)+ (linkEnd::LinkEnd)+ (classifier::Classifier)+ componentInstance::ComponentInstance (slot::AttributeLink)+ (ownedLink::Link)+ ;
Classifier ::= Signal ;
 Classifier ::= ClassifierRole ;
BooleanExpression ::= language::String body::String ;
--------------------uml::umldi-mm.bgf--------------------
Subsystem ::= isInstantiable::Boolean ;
Integer ::= integer() ;
Generalization ::= parent::GeneralizableElement powertype::Classifier child::GeneralizableElement discriminator::String ;
Element ::= ModelElement ;
Namespace ::= Classifier ;
 Namespace ::= Package ;
Model ::= (elementImport::ElementImport)+ ;
GeneralizableElement ::= Classifier ;
 GeneralizableElement ::= Package ;
ScopeKind ::= (sk_instance::ε) | (sk_classifier::ε) ;
Boolean ::= "true" | "false" ;
Relationship ::= Generalization ;
VisibilityKind ::= (vk_public::ε) | (vk_protected::ε) | (vk_private::ε) | (vk_package::ε) ;
Package ::= Model ;
 Package ::= Subsystem ;
 Package ::= (elementImport::ElementImport)+ ;
ModelElement ::= GeneralizableElement ;
 ModelElement ::= Namespace ;
 ModelElement ::= Feature ;
 ModelElement ::= Relationship ;
String ::= string() ;
ElementImport ::= package::Package importedElement::ModelElement visibility::VisibilityKind alias::String isSpecification::Boolean ;
Classifier ::= Subsystem ;
--------------------uml::umldi-sm.bgf--------------------
SendAction ::= signal::Signal ;
CallEvent ::= operation::Operation ;
Namespace ::= Classifier ;
ObjectSetExpression ::= language::String body::String ;
Event ::= TimeEvent ;
 Event ::= CallEvent ;
 Event ::= SignalEvent ;
 Event ::= ChangeEvent ;
Expression ::= BooleanExpression ;
 Expression ::= ObjectSetExpression ;
 Expression ::= ActionExpression ;
 Expression ::= IterationExpression ;
 Expression ::= TimeExpression ;
 Expression ::= language::String body::String ;
ActionSequence ::= (action::Action)+ ;
Transition ::= target::StateVertex trigger::Event stateMachine::StateMachine source::StateVertex effect::Action guard::Guard ;
StateVertex ::= State ;
 StateVertex ::= Pseudostate ;
 StateVertex ::= SynchState ;
 StateVertex ::= StubState ;
IterationExpression ::= language::String body::String ;
ModelElement ::= Action ;
 ModelElement ::= Argument ;
 ModelElement ::= StateMachine ;
 ModelElement ::= Event ;
 ModelElement ::= StateVertex ;
 ModelElement ::= Transition ;
 ModelElement ::= Guard ;
 ModelElement ::= GeneralizableElement ;
 ModelElement ::= Namespace ;
 ModelElement ::= Feature ;
 ModelElement ::= Relationship ;
 ModelElement ::= Parameter ;
Pseudostate ::= kind::PseudostateKind ;
SignalEvent ::= signal::Signal ;
CreateAction ::= instantiation::Classifier ;
String ::= string() ;
State ::= CompositeState ;
 State ::= SimpleState ;
 State ::= FinalState ;
DestroyAction ::= (actualArgument::Argument)+ actionSequence::ActionSequence recurrence::IterationExpression target::ObjectSetExpression isAsynchronous::Boolean script::ActionExpression ;
Exception ::= ε ;
Reception ::= signal::Signal specification::String isRoot::Boolean isLeaf::Boolean isAbstract::Boolean ;
TimeEvent ::= when::TimeExpression ;
SubmachineState ::= submachine::StateMachine ;
ChangeEvent ::= changeExpression::BooleanExpression ;
CompositeState ::= SubmachineState ;
 CompositeState ::= (subvertex::StateVertex)+ isConcurrent::Boolean ;
ParameterDirectionKind ::= (pdk_in::ε) | (pdk_inout::ε) | (pdk_out::ε) | (pdk_return::ε) ;
GeneralizableElement ::= Classifier ;
CallConcurrencyKind ::= (cck_sequential::ε) | (cck_guarded::ε) | (cck_concurrent::ε) ;
UninterpretedAction ::= (actualArgument::Argument)+ actionSequence::ActionSequence recurrence::IterationExpression target::ObjectSetExpression isAsynchronous::Boolean script::ActionExpression ;
ScopeKind ::= (sk_instance::ε) | (sk_classifier::ε) ;
PseudostateKind ::= (pk_choice::ε) | (pk_deepHistory::ε) | (pk_fork::ε) | (pk_initial::ε) | (pk_join::ε) | (pk_junction::ε) | (pk_shallowHistory::ε) ;
ReturnAction ::= (actualArgument::Argument)+ actionSequence::ActionSequence recurrence::IterationExpression target::ObjectSetExpression isAsynchronous::Boolean script::ActionExpression ;
VisibilityKind ::= (vk_public::ε) | (vk_protected::ε) | (vk_private::ε) | (vk_package::ε) ;
TimeExpression ::= language::String body::String ;
StubState ::= referenceState::String ;
SimpleState ::= (deferrableEvent::Event)+ (internalTransition::Transition)+ exit::Action doActivity::Action entry::Action stateMachine::StateMachine ;
Integer ::= integer() ;
Argument ::= action::Action value::Expression ;
Generalization ::= parent::GeneralizableElement powertype::Classifier child::GeneralizableElement discriminator::String ;
Element ::= ModelElement ;
FinalState ::= (deferrableEvent::Event)+ (internalTransition::Transition)+ exit::Action doActivity::Action entry::Action stateMachine::StateMachine ;
BehavioralFeature ::= Reception ;
 BehavioralFeature ::= Operation ;
Relationship ::= Generalization ;
TerminateAction ::= (actualArgument::Argument)+ actionSequence::ActionSequence recurrence::IterationExpression target::ObjectSetExpression isAsynchronous::Boolean script::ActionExpression ;
Feature ::= BehavioralFeature ;
StateMachine ::= context::ModelElement (submachineState::SubmachineState)+ top::State (transitions::Transition)+ ;
Action ::= CreateAction ;
 Action ::= DestroyAction ;
 Action ::= UninterpretedAction ;
 Action ::= CallAction ;
 Action ::= SendAction ;
 Action ::= ActionSequence ;
 Action ::= ReturnAction ;
 Action ::= TerminateAction ;
CallAction ::= operation::Operation ;
ActionExpression ::= language::String body::String ;
Parameter ::= type::Classifier behavioralFeature::BehavioralFeature defaultValue::Expression kind::ParameterDirectionKind ;
Boolean ::= "true" | "false" ;
Signal ::= Exception ;
 Signal ::= Exception ;
Operation ::= concurrency::CallConcurrencyKind isRoot::Boolean isLeaf::Boolean isAbstract::Boolean specification::String ;
Guard ::= transition::Transition expression::BooleanExpression ;
SynchState ::= bound::Integer ;
Classifier ::= Signal ;
BooleanExpression ::= language::String body::String ;
--------------------uml::umldi-uc.bgf--------------------
Attribute ::= associationEnd::AssociationEnd initialValue::Expression ;
Namespace ::= Classifier ;
Extend ::= (extensionPoint::ExtensionPoint)+ extension::UseCase base::UseCase condition::BooleanExpression ;
AssociationEnd ::= association::Association (specification::Classifier)+ participant::Classifier (qualifier::Attribute)+ isNavigable::Boolean ordering::OrderingKind aggregation::AggregationKind targetScope::ScopeKind multiplicity::Multiplicity changeability::ChangeableKind ;
StructuralFeature ::= Attribute ;
Expression ::= BooleanExpression ;
 Expression ::= language::String body::String ;
UseCase ::= (include::Include)+ (extend::Extend)+ (extensionPoint::ExtensionPoint)+ ;
AggregationKind ::= (ak_none::ε) | (ak_aggregate::ε) | (ak_composite::ε) ;
Instance ::= ComponentInstance ;
 Instance ::= NodeInstance ;
 Instance ::= UseCaseInstance ;
ModelElement ::= Instance ;
 ModelElement ::= AttributeLink ;
 ModelElement ::= Link ;
 ModelElement ::= LinkEnd ;
 ModelElement ::= ExtensionPoint ;
 ModelElement ::= GeneralizableElement ;
 ModelElement ::= Namespace ;
 ModelElement ::= Feature ;
 ModelElement ::= AssociationEnd ;
 ModelElement ::= Relationship ;
String ::= string() ;
ExtensionPoint ::= useCase::UseCase location::String ;
UseCaseInstance ::= (ownedInstance::Instance)+ (linkEnd::LinkEnd)+ (classifier::Classifier)+ componentInstance::ComponentInstance (slot::AttributeLink)+ (ownedLink::Link)+ ;
GeneralizableElement ::= Classifier ;
 GeneralizableElement ::= Association ;
OrderingKind ::= (ok_unordered::ε) | (ok_ordered::ε) ;
ScopeKind ::= (sk_instance::ε) | (sk_classifier::ε) ;
VisibilityKind ::= (vk_public::ε) | (vk_protected::ε) | (vk_private::ε) | (vk_package::ε) ;
Association ::= connection::AssociationEnd ;
LinkEnd ::= link::Link (qualifiedValue::AttributeLink)+ instance::Instance associationEnd::AssociationEnd ;
Multiplicity ::= (range::MultiplicityRange)+ ;
Integer ::= integer() ;
MultiplicityRange ::= multiplicity::Multiplicity lower::Integer upper::Integer ;
ChangeableKind ::= (ck_changeable::ε) | (ck_frozen::ε) | (ck_addOnly::ε) ;
Generalization ::= parent::GeneralizableElement powertype::Classifier child::GeneralizableElement discriminator::String ;
Element ::= ModelElement ;
Link ::= association::Association connection::LinkEnd ;
Relationship ::= Extend ;
 Relationship ::= Include ;
 Relationship ::= Generalization ;
 Relationship ::= Association ;
NodeInstance ::= (resident::ComponentInstance)+ ;
Feature ::= StructuralFeature ;
AttributeLink ::= instance::Instance value::Instance linkEnd::LinkEnd attribute::Attribute ;
Actor ::= (powertypeRange::Generalization)+ (feature::Feature)+ ;
ComponentInstance ::= (resident::Instance)+ nodeInstance::NodeInstance ;
Boolean ::= "true" | "false" ;
Include ::= addition::UseCase base::UseCase ;
Classifier ::= UseCase ;
 Classifier ::= Actor ;
BooleanExpression ::= language::String body::String ;
--------------------uml::yuml.bgf--------------------
ColorableElement ::= ClassReference ;
 ColorableElement ::= Note ;
Integer ::= integer() ;
Attribute ::= type::String ;
AssociationType ::= (simpleAssociation::ε) | (aggregation::ε) | (composition::ε) ;
Relationship ::= Association ;
 Relationship ::= Inheritance ;
 Relationship ::= NoteAssociation ;
Class ::= name::String ;
ClassReference ::= class::Class stereotype::String definition::ClassDefinition ;
ModelElement ::= ColorableElement ;
 ModelElement ::= Relationship ;
Note ::= (text::String)+ ;
ClassMember ::= Attribute ;
 ClassMember ::= Method ;
Visibility ::= (unspecified::ε) | (public::ε) | (private::ε) | (protected::ε) | (package::ε) ;
String ::= string() ;
NoteAssociation ::= note::Note ;
Cardinality ::= lowerBound::Integer upperBound::Integer ;
ClassDefinition ::= (attributes::Attribute)+ (methods::Method)+ ;
Inheritance ::= source::ClassReference target::ClassReference ;
LocatedElement ::= Model ;
 LocatedElement ::= Class ;
 LocatedElement ::= ModelElement ;
 LocatedElement ::= ClassDefinition ;
 LocatedElement ::= Cardinality ;
 LocatedElement ::= ClassMember ;
Model ::= (classes::Class)+ (elements::ModelElement)+ ;
Boolean ::= "true" | "false" ;
Method ::= (arguments::String)+ ;
Association ::= type::AssociationType sourceCardinality::Cardinality sourceLabel::String navigableSource::Boolean sourceVisibility::Visibility targetCardinality::Cardinality targetLabel::String navigableTarget::Boolean targetVisibility::Visibility ;
--------------------xml::rosendal.bgf--------------------
Integer ::= integer() ;
Text ::= startLine::Integer startColumn::Integer endLine::Integer endColumn::Integer name::String value::String parent::Element ;
Element ::= Root ;
 Element ::= (children::Node)+ ;
Attribute ::= startLine::Integer startColumn::Integer endLine::Integer endColumn::Integer name::String value::String parent::Element ;
Boolean ::= "true" | "false" ;
Root ::= (children::Node)+ ;
Node ::= Attribute ;
 Node ::= Text ;
 Node ::= Element ;
String ::= string() ;
--------------------xml::rascal.bgf--------------------
Namespace ::= (namespace::(prefix::string() uri::string())) | (none::ε) ;
Node ::= (document::(root::Node)) | (attribute::(namespace::Namespace name::string() text::string())) | (element::(namespace::Namespace name::string() children::(Node*))) | (charData::(text::string())) | (cdata::(text::string())) | (comment::(text::string())) | (pi::(target::string() text::string())) | (entityRef::(name::string())) | (charRef::(code::integer())) ;
--------------------xquery::rosendal.bgf--------------------
Integer ::= integer() ;
AttributeNode ::= value::String ;
ElementNode ::= TextNode ;
 ElementNode ::= (nodes::Expression)+ ;
XPath ::= BooleanExp ;
 XPath ::= functionCall::FunctionCall for::For let::Let ;
Let ::= var::String flwor::FLWOR expression::XPath ;
Expression ::= ExecutableExpression ;
 Expression ::= Node ;
 Expression ::= ReturnXPath ;
 Expression ::= parentNode::ElementNode returnEx::Return ;
FunctionCall ::= name::String (parameters::XPath)+ ;
BooleanExp ::= where::Where ;
FLWOR ::= for::For let::Let where::Where orderBy::OrderBy return::Return ;
XQueryProgram ::= (expressions::ExecutableExpression)+ ;
String ::= string() ;
Return ::= flwor::FLWOR (expressions::Expression)+ ;
TextNode ::= (nodes::Expression)+ ;
ReturnXPath ::= XPath ;
 ReturnXPath ::= value::String ;
For ::= var::String flwor::FLWOR expression::XPath ;
Boolean ::= "true" | "false" ;
Where ::= flwor::FLWOR expression::BooleanExp ;
OrderBy ::= flwor::FLWOR ;
FunctionDeclaration ::= name::String (expression::ExecutableExpression)+ ;
Node ::= ElementNode ;
 Node ::= AttributeNode ;
 Node ::= name::String ;
ExecutableExpression ::= FLWOR ;
 ExecutableExpression ::= FunctionCall ;
 ExecutableExpression ::= FunctionDeclaration ;
 ExecutableExpression ::= xQueryProgram::XQueryProgram functionDeclaration::FunctionDeclaration ;
--------------------xslt::rosendal.bgf--------------------
Sort ::= select::String ;
AttributeNode ::= name::String parentNode::ElementNode ;
ElementNode ::= RootNode ;
 ElementNode ::= TextNode ;
 ElementNode ::= XSLTNode ;
 ElementNode ::= (nodes::Node)+ ;
Integer ::= integer() ;
If ::= test::String ;
Document ::= documentName::String document::RootNode ;
When ::= test::String ;
Template ::= match::String ;
Choose ::= when::When otherwise::Otherwise ;
Otherwise ::= ε ;
String ::= string() ;
TextNode ::= value::String ;
ApplyTemplates ::= select::String ;
ValueOf ::= select::String ;
Boolean ::= "true" | "false" ;
XSLTRootNode ::= document::Document ;
XSLTNode ::= ApplyTemplates ;
 XSLTNode ::= If ;
 XSLTNode ::= Template ;
 XSLTNode ::= ValueOf ;
 XSLTNode ::= When ;
 XSLTNode ::= Choose ;
 XSLTNode ::= Otherwise ;
 XSLTNode ::= Sort ;
RootNode ::= XSLTRootNode ;
 RootNode ::= document::Document ;
Node ::= ElementNode ;
 Node ::= AttributeNode ;
--------------------logo::sdf.bgf--------------------
Call ::= Id Exp* ;
FunctionDef ::= "to" Id Formal* Block ;
Block ::= "[" Command* "]" ;
Exp ::= Integer | Formal | "xcor" | "ycor" | "heading" | ("towards" Exp Exp) | "pendown?" | ("sum" Exp Exp) | ("difference" Exp Exp) | ("product" Exp Exp) | ("quotient" Exp Exp) | ("remainder" Exp Exp) | ("minus" Exp) | ("less?" Exp Exp) | ("greater?" Exp Exp) | ("equal?" Exp Exp) | ("notequal?" Exp Exp) ;
BasicCommand ::= ("if" Exp Block) | ("ifelse" Exp Block Block) | ("repeat" Exp Block) | ("forward" Exp) | ("back" Exp) | ("left" Exp) | ("right" Exp) | ("setxy" Exp Exp) | ("setx" Exp) | ("sety" Exp) | "home" | "showturtle" | "hideturtle" | "clean" | "clearscreen" | "pendown" | "penup" | ("pencolor" Color) | ("local" QuotedId) | ("make" QuotedId Exp) ;
Id ::= "xcor" | "ycor" | "heading" | "towards" | "pendown?" | "sum" | "difference" | "product" | "quotient" | "remainder" | "minus" | "less?" | "greater?" | "equal?" | "notequal?" | "to" | "if" | "ifelse" | "repeat" | "forward" | "back" | "left" | "right" | "setxy" | "setx" | "sety" | "home" | "showturtle" | "hideturtle" | "clean" | "clearscreen" | "pendown" | "penup" | "local" | "make" ;
Command ::= BasicCommand | FunctionDef | Call ;
Commands ::= Command* ;
Program ::= Commands ;
--------------------php::cordy.bgf--------------------
VarModifier ::= "public" | "protected" | "private" | "static" | "final" ;
PHPCloseTag ::= ("?>" NL) | ("%>" NL) ;
InequalityOpShiftExpr ::= InequalityOp ShiftExpr ;
StringConstant ::= stringlit | charlit | CommandString | ("<<<" id IN NL EncapsedInlineHTML* id EX) ;
BitOrBitXorExpr ::= "|" BitXorExpr ;
TVariable ::= SimpleVariableName ;
PHPCloseTagDocumentSection ::= PHPCloseTag HTMLSection PHPCloseTagDocumentSection? ;
EncapsedInlineHTML ::= tag_token_or_key ;
InlineHTMLStatement ::= PHPCloseTag InlineHTML PHPOpenTag ;
ForEachPattern ::= ForEachKey? ForEachVar ;
PHPOpenTagPHPSection ::= PHPOpenTag PHPSection ;
CVar ::= ReferenceVariable ;
InlineHTML ::= InlineHTMLtoken* ;
ShiftOp ::= "<<" | ">>" ;
Primary ::= VariableOrFunctionCall | ScalarConstant | Array | List | InternalFunction | ("(" Expr ")") ;
IfConditionalOrExpr ::= "?" Expr ":" Expr ;
ExprStatement ::= Expr ";"? NL ;
BitAndEqualityExpr ::= "&" EqualityExpr ;
MultOpNotExpr ::= MultOp NotExpr ;
PlusMinus ::= "+" | "-" ;
InternalFunction ::= ("new" Primary) | ("clone" Primary) | ("isset" "(" {ObjectCVar ","}+ ")") | ("empty" "(" ObjectCVar ")") | ("intval" "(" ObjectCVar ")") | ("eval" "(" Expr ")") | ("exit" exit_value?) | ("include" Expr) | ("include_once" Expr) | ("require" Expr) | ("require_once" Expr) ;
InequalityExpr ::= ShiftExpr InequalityOpShiftExpr* ;
AssignOpAssignmentExpr ::= AssignOp AssignmentExpr ;
ScalarConstant ::= (PlusMinus? NumericConstant) | StringConstant | MagicConstant | BooleanConstant | "null" ;
ConditionalOrConditionalAndExpr ::= "||" ConditionalAndExpr ;
InterfaceExtendsClause ::= "extends" {Name ","}+ ;
BooleanConstant ::= "true" | "false" ;
CatExpr ::= AddExpr CatAddExpr* ;
ReferenceVariable ::= CompoundVariable VariableExtension* ;
LogicalXorExpr ::= LogicalAndExpr LogicalXorLogicalAndExpr* ;
ForStatement ::= ("for" "(" {Expr ","}* ";" {Expr ","}* ";" {Expr ","}* ")" NL Statement) | ("for" "(" {Expr ","}* ";" {Expr ","}* ";" {Expr ","}* ")" ":" NL IN Statement* EX "endfor" ";" NL) ;
BitOrExpr ::= BitXorExpr BitOrBitXorExpr* ;
ObjectCVar ::= ClassNameColonColon? CVar CallParams? ArrowObjectProperty* ;
FunctionDecl ::= "function" "&"? id "(" {Param ","}* ")" NL Block ;
LogicalOrExpr ::= LogicalXorExpr OrLogicalXorExpr* ;
BitAndExpr ::= EqualityExpr BitAndEqualityExpr* ;
List ::= "list" "(" {ListElem ","}* ")" ;
HTMLSection ::= InlineHTML ;
TopStatement ::= FunctionDecl | ClassDecl | Statement | InterfaceDecl ;
ElseIfStatement ::= "elseif" "(" Expr ")" NL Statement ;
ArrayValue ::= Expr | ("&" ObjectCVar) ;
InstanceOfUnaryExpr ::= "instanceof" UnaryExpr ;
ForEachKey ::= ForEachVar "=>" ;
ArrayPair ::= NL ArrayKey? ArrayValue ;
ControlStatement ::= ("break" Expr? ";" NL) | ("continue" Expr? ";" NL) | ("return" Expr? ";" NL) ;
ClassType ::= "class" | ("abstract" "class") | ("final" "class") ;
IfStatement ::= ("if" "(" Expr ")" NL Statement ElseIfStatement* ElseStatement?) | ("if" "(" Expr ")" ":" NL IN TopStatement* EX AltElseifStatement* AltElseStatement? "endif" ";" NL) ;
NumericConstant ::= number | Hexa | Octa ;
CallParam ::= "&"? Expr ;
Name ::= id ;
EchoStatement ::= "echo" {Expr ","}+ ";"? NL ;
AddOpMultExpr ::= AddOp MultExpr ;
CallParams ::= "(" {CallParam ","}* ")" ;
UnaryExpr ::= UnaryOp* IncDecExpr ;
ClassNameColonColon ::= ClassName "::" ;
CatAddExpr ::= "." AddExpr ;
EqualityOp ::= "==" | "!=" | "===" | "!==" ;
Catch ::= "catch" "(" id TVariable ")" NL Block ;
VariableOrFunctionCall ::= ObjectCVar ;
InlineHTMLtoken ::= tag_token_or_key ;
OrLogicalXorExpr ::= "or" LogicalXorExpr ;
ShiftOpCatExpr ::= ShiftOp CatExpr ;
NullStatement ::= ";" NL ;
AssignmentExpr ::= TernaryExpr AssignOpAssignmentExpr* ;
BlockStatement ::= Block ;
InequalityOp ::= "<>" | "<" | "<=" | ">" | ">=" ;
ConditionalOrExpr ::= ConditionalAndExpr ConditionalOrConditionalAndExpr* ;
ArrowObjectProperty ::= "->" ObjectProperty CallParams? ;
ForEachVar ::= CVar | ("&" CVar) ;
SwitchStatement ::= ("switch" "(" Expr ")" NL "{" ";"? NL IN Case* EX "}" NL) | ("switch" "(" Expr ")" ":" ";"? NL IN Case* EX "endswitch" ";" NL) ;
IncDecExpr ::= IncDec* Primary IncDec* ;
EqualsStaticScalar ::= "=" StaticScalar ;
PHPOpenTag ::= ("<?php" NL) | ("<?" NL) | ("<%" NL) | ("<?=" NL) ;
ShiftExpr ::= CatExpr ShiftOpCatExpr* ;
CaseSeparator ::= ";" | ":" ;
LogicalXorLogicalAndExpr ::= "xor" LogicalAndExpr ;
ListElem ::= List | ObjectCVar | ε ;
BitXorBitAndExpr ::= "^" BitAndExpr ;
Block ::= "{" NL IN TopStatement* EX "}" NL ;
Param ::= (TypeHint? "&"? TVariable EqualsStaticScalar?) | ("const" TVariable) ;
PHPSection ::= TopStatement* ;
CompoundVariable ::= VariableName ;
ArrayKey ::= Expr "=>" ;
UnsetStatement ::= "unset" "(" {ObjectCVar ","}+ ")" ";" NL ;
MultExpr ::= NotExpr MultOpNotExpr* ;
IncDec ::= "++" | "--" ;
InterfaceDecl ::= "interface" id NL InterfaceExtendsClause? "{" NL IN InterfaceMember* EX NL "}" ;
PrintStatement ::= "print" {Expr ","}+ ";"? NL ;
ImplementsClause ::= "implements" {Name ","}+ NL ;
GlobalStaticStatement ::= ("global" {CVar ","}+ ";" NL) | ("static" {StaticVariable ","}+ ";" NL) ;
WhileStatement ::= ("while" "(" Expr ")" NL Statement) | ("while" "(" Expr ")" ":" NL IN TopStatement* EX "endwhile" ";" NL) ;
ObjectProperty ::= VariableName | IdOrKey | (ObjectProperty VariableExtension) | ObjectCVar ;
ConditionalAndBitOrExpr ::= "&&" BitOrExpr ;
MultOp ::= "*" | "/" | "%" ;
InstanceVariable ::= TVariable EqualsStaticScalar? ;
UnaryOp ::= "~" | "-" | "@" | ("(" CastType ")") | ("@" "!") ;
TernaryExpr ::= ConditionalOrExpr IfConditionalOrExpr* ;
AssignOp ::= ".=" | "=" | "+=" | "-=" | "*=" | "/=" | "%=" | "&=" | "|=" | "^=" | "<<=" | ">>=" | "=&" ;
Case ::= ("case" Expr CaseSeparator NL IN TopStatement* EX) | ("default" CaseSeparator NL IN TopStatement* EX) ;
Statement ::= ExprStatement | BlockStatement | IfStatement | WhileStatement | DoStatement | ForStatement | SwitchStatement | ControlStatement | GlobalStaticStatement | UnsetStatement | EchoStatement | PrintStatement | InlineHTMLStatement | ForEachStatement | NullStatement | DeclareStatement | TryStatement | ThrowStatement ;
InstanceExpr ::= UnaryExpr InstanceOfUnaryExpr? ;
ThrowStatement ::= "throw" Expr ";" NL ;
NotExpr ::= "!"* InstanceExpr ;
ExtendsClause ::= "extends" id NL ;
VariableName ::= SimpleVariableName | ("$" VariableName) | ("{" SimpleVariableName "}") | ("{" Expr "}") ;
DeclareStatement ::= "declare" "(" Directive* ")" NL Statement ;
ForEachStatement ::= ("foreach" "(" Expr "as" ForEachPattern ")" NL Statement) | ("foreach" "(" Expr "as" ForEachPattern ")" ":" NL IN Statement* EX "endforeach" ";" NL) ;
BitXorExpr ::= BitAndExpr BitXorBitAndExpr* ;
LogicalAndExpr ::= AssignmentExpr LogicalAndAssignmentExpr* ;
AddOp ::= "+" | "-" ;
Document ::= (PHPOpenTag? PHPSection PHPCloseTagDocumentSection?) | (HTMLSection PHPOpenTagPHPSection? PHPCloseTagDocumentSection?) ;
CastType ::= "int" | "integer" | "bool" | "boolean" | "real" | "double" | "float" | "string" | "array" | "object" | "unset" ;
Array ::= "array" "(" IN {ArrayPair ","}* ","? EX ")" ;
VarModifiers ::= VarModifier+ ;
LogicalAndAssignmentExpr ::= "and" AssignmentExpr ;
AltElseifStatement ::= "elseif" "(" Expr ")" ":" NL IN TopStatement* EX ;
EqualityOpInequalityExpr ::= EqualityOp InequalityExpr ;
EqualityExpr ::= InequalityExpr EqualityOpInequalityExpr* ;
Directive ::= id ;
AltElseStatement ::= "else" ":" NL IN TopStatement* EX ;
StaticVariable ::= TVariable EqualsStaticScalar? ;
ConditionalAndExpr ::= BitOrExpr ConditionalAndBitOrExpr* ;
ClassDecl ::= ClassType id NL ExtendsClause? ImplementsClause? "{" NL IN ClassMember* EX "}" NL ;
StaticScalar ::= Primary ;
SimpleVariableName ::= id | ("$" SPOFF IdOrKey SPON) ;
AddExpr ::= MultExpr AddOpMultExpr* ;
ElseStatement ::= "else" NL Statement ;
Expr ::= LogicalOrExpr ;
TryStatement ::= "try" NL Block Catch* ;
InterfaceMember ::= VarModifiers? "function" "&"? id "(" {Param ","}* ")" ";" NL ;
ClassMember ::= (VarModifiers? FunctionDecl) | (VarModifiers? "abstract" VarModifiers? "function" "&"? id "(" {Param ","}* ")" ";" NL) | ("var" {InstanceVariable ","}+ ";" NL) | ("const" id "=" StaticScalar ";" NL) | (VarModifiers {InstanceVariable ","}+ ";" NL) ;
DoStatement ::= "do" NL Statement "while" "(" Expr ")" ";" NL ;
VariableExtension ::= ("[" Expr? "]") | ("{" Expr "}") ;
ClassName ::= id ;
IdOrKey ::= id | key ;
TypeHint ::= id ;
--------------------markup::atom.bgf--------------------
InLineXHTMLContent ::= type::String ;
Date ::= day::Integer month::Integer year::Integer hours::Integer minutes::Integer seconds::Integer ;
Category ::= term::String scheme::String label::String ;
Integer ::= integer() ;
Contributor ::= name::String uri::String email::String ;
Author ::= name::String uri::String email::String ;
Source ::= id::String icon::String logo::String rights::String title::String subtitle::String (links::Link)+ lastUpdate::Date generator::Generator (contributors::Contributor)+ (categories::Category)+ author::Author ;
Link ::= href::String rel::String type::String hreflang::String title::String lenght::Integer ;
Content ::= InLineXHTMLContent ;
 Content ::= InLineOtherContent ;
 Content ::= OutOfLineContent ;
 Content ::= type::String ;
Person ::= Author ;
 Person ::= Contributor ;
 Person ::= name::String uri::String email::String ;
Generator ::= uri::String version::String ;
InLineOtherContent ::= type::String ;
Entry ::= title::String id::String rights::String summary::String (links::Link)+ source::Source published::Date lastUpdate::Date content::Content (categories::Category)+ (authors::Author)+ (contibutors::Contributor)+ atom::ATOM ;
ATOM ::= title::String id::String subtitle::String rights::String icon::String logo::String (links::Link)+ lastUpdate::Date generator::Generator (categories::Category)+ (authors::Author)+ (contibutors::Contributor)+ (entries::Entry)+ ;
String ::= string() ;
OutOfLineContent ::= src::String ;
--------------------markup::cml.bgf--------------------
Integer ::= integer() ;
AngleUnits ::= (degrees::ε) | (radians::ε) ;
Any ::= _String ;
 Any ::= _Link ;
 Any ::= _Float ;
 Any ::= _Integer ;
 Any ::= _StringArray ;
 Any ::= _FloatArray ;
 Any ::= _IntegerArray ;
 Any ::= _FloatMatrix ;
 Any ::= _Coordinate2 ;
 Any ::= _Coordinate3 ;
 Any ::= _Angle ;
 Any ::= _Torsion ;
 Any ::= _List ;
 Any ::= Molecule ;
 Any ::= Formula ;
 Any ::= Atom ;
 Any ::= Atom_Array ;
 Any ::= Bond ;
 Any ::= Bond_Array ;
 Any ::= Electron ;
 Any ::= Reaction ;
 Any ::= Crystal ;
 Any ::= Sequence ;
 Any ::= Feature ;
Reaction ::= (any::Any)+ ;
Boolean ::= "true" | "false" ;
FloatBuiltin ::= (x2::ε) | (y2::ε) | (x3::ε) | (y3::ε) | (z3::ε) | (xFract::ε) | (yFract::ε) | (zFract::ε) | (occupancy::ε) | (isotope::ε) | (formalCharge::ε) | (hydrogenCount::ε) | (nonHydrogenCount::ε) | (atomParity::ε) | (length::ε) | (acell::ε) | (bcell::ε) | (ccell::ε) | (alpha::ε) | (beta::ε) | (gamma::ε) | (z::ε) ;
Feature ::= (any::Any)+ ;
Crystal ::= (any::Any)+ ;
Formula ::= (any::Any)+ ;
Molecule ::= (any::Any)+ ;
IntegerBuiltin ::= (isotope::ε) | (formalCharge::ε) | (hydrogenCount::ε) | (nonHydrogenCount::ε) | (atomParity::ε) | (z::ε) ;
Bond ::= (any::Any)+ ;
Electron ::= (any::Any)+ ;
StringBuiltin ::= (id::ε) | (elementType::ε) | (atomId::ε) | (residueType::ε) | (residueId::ε) | (atomRef::ε) | (order::ε) | (stereo::ε) | (spaceground::ε) ;
Sequence ::= (any::Any)+ ;
Atom ::= (any::Any)+ ;
String ::= string() ;
--------------------markup::cnf.bgf--------------------
Disjuncts ::= [numbers] Number+ ;
Dimacs ::= prologue::Prologue lines::({Line "\n"}+) "\n" ;
Line ::= [comment] comment::Comment ;
 Line ::= [disjunct] disjunct::Disjunct ;
--------------------markup::csv-rascal-abstract.bgf--------------------
Table ::= table::(records::(Record*)) ;
Field ::= (unquoted::(text::string())) | (quoted::(text::string())) ;
Record ::= record::(fields::(Field*)) ;
--------------------markup::csv-rascal-concrete.bgf--------------------
Table ::= [table] {Record EOL}* ;
Field ::= [quoted] QStr ;
 Field ::= [unquoted] UQStr ;
Record ::= [record] {Field ","}+ ;
--------------------markup::ebxml.bgf--------------------
BusinessTransaction ::= pattern::String isGuaranteedDeliveryRequired::Boolean preCondition::String postCondition::String beginsWhen::String endsWhen::String requester::RequestingBusinessActivity responder::RespondingBusinessActivity ;
Transaction ::= onInitiation::String conditionGuard::String conditionExpression::String from::BusinessState to::BusinessState ;
BusinessPartnerRole ::= collaboration::MultyPartyCollaboration transition::Transaction (performers::Performs)+ ;
RespondingBusinessActivity ::= transaction::BusinessTransaction documentEnvelope::DocumentEnvelope ;
BusinessDocument ::= specificationLocation::String specificationElement::String conditionExpression::String (envelopes::DocumentEnvelope)+ (attachments::Attachment)+ ;
DocumentSecurity ::= DocumentEnvelope ;
 DocumentSecurity ::= Attachment ;
BusinessAction ::= RequestingBusinessActivity ;
 BusinessAction ::= RespondingBusinessActivity ;
CompletionState ::= Failure ;
 CompletionState ::= Success ;
 CompletionState ::= guardCondition::String ;
CollaborationActivity ::= use::BinaryCollaboration ;
Performs ::= performedBy::BusinessPartnerRole collaboration::BinaryCollaboration role::AuthorizedRole ;
String ::= string() ;
BusinessState ::= Start ;
 BusinessState ::= Fork ;
 BusinessState ::= Join ;
 BusinessState ::= CompletionState ;
 BusinessState ::= BusinessActivity ;
AuthorizedRole ::= isInitiator::Boolean (performers::Performs)+ ;
BusinessActivity ::= BusinessTransactionActivity ;
 BusinessActivity ::= CollaborationActivity ;
BusinessTransactionActivity ::= timeToPerform::String isConcurrent::Boolean isLegallyBinding::Boolean use::BusinessTransaction ;
DocumentEnvelope ::= isPositiveResponse::Boolean requesting::RequestingBusinessActivity responding::RespondingBusinessActivity (attachements::Attachment)+ document::BusinessDocument ;
Failure ::= guardCondition::String ;
Join ::= collaboration::BinaryCollaboration from::AuthorizedRole to::AuthorizedRole ;
Boolean ::= "true" | "false" ;
MultyPartyCollaboration ::= (partners::BusinessPartnerRole)+ ;
BinaryCollaboration ::= pattern::String timeToPerform::String preCondition::String postCondition::String beginsWhen::String endsWhen::String (roles::Performs)+ (transitions::Transaction)+ (states::BusinessState)+ ;
Attachment ::= mimeType::String specification::String version::String envelope::DocumentEnvelope document::BusinessDocument ;
Success ::= guardCondition::String ;
RequestingBusinessActivity ::= timeToAcknowledgeAcceptance::String transaction::BusinessTransaction documentEnvelope::DocumentEnvelope ;
Start ::= collaboration::BinaryCollaboration from::AuthorizedRole to::AuthorizedRole ;
Fork ::= waitForAll::String ;
--------------------markup::docbook-touzet.bgf--------------------
Book ::= (articles::Article)+ ;
Article ::= (sections_1::Sect1)+ ;
String ::= string() ;
DocBook ::= (books::Book)+ ;
Para ::= content::String ;
TitledElement ::= Article ;
 TitledElement ::= Sect1 ;
--------------------markup::kml.bgf--------------------
RefreshMode ::= value::String ;
ElementNode ::= RootNode ;
 ElementNode ::= TextNode ;
 ElementNode ::= KMLNode ;
Snippet ::= ε ;
LineStyle ::= id::String ;
Pair ::= ε ;
FlyToView ::= value::Boolean ;
Point ::= ε ;
TextNode ::= (nodes::Node)+ ;
AltitudeModeValue ::= (clampedToGround::ε) | (relativeToGround::ε) | (absolute::ε) ;
Open ::= value::String ;
MinRefreshPeriod ::= value::String ;
Message ::= ε ;
North ::= value::Double ;
ObjField ::= ε ;
BalloonStyle ::= ε ;
Heading ::= value::Double ;
LatLonBox ::= ε ;
Tilt ::= value::String ;
Description ::= value::String ;
Coordinates ::= ε ;
Type ::= value::String ;
Y ::= value::Integer ;
X ::= value::Integer ;
ObjArrayField ::= ε ;
W ::= value::Integer ;
Address ::= value::String ;
LookAt ::= ε ;
West ::= value::Double ;
Url ::= ε ;
KMLRootNode ::= ε ;
Text ::= ε ;
KMLNode ::= Address ;
 KMLNode ::= AltitudeMode ;
 KMLNode ::= BalloonStyle ;
 KMLNode ::= Color ;
 KMLNode ::= ColorMode ;
 KMLNode ::= Cookie ;
 KMLNode ::= Coordinates ;
 KMLNode ::= Coordinate ;
 KMLNode ::= Description ;
 KMLNode ::= Document ;
 KMLNode ::= DrawOrder ;
 KMLNode ::= East ;
 KMLNode ::= Extrude ;
 KMLNode ::= Fill ;
 KMLNode ::= FlyToView ;
 KMLNode ::= Folder ;
 KMLNode ::= GroundOverlay ;
 KMLNode ::= H ;
 KMLNode ::= Heading ;
 KMLNode ::= Href ;
 KMLNode ::= Icon ;
 KMLNode ::= IconStyle ;
 KMLNode ::= InnerBoundaryIs ;
 KMLNode ::= Key ;
 KMLNode ::= LabelStyle ;
 KMLNode ::= Latitude ;
 KMLNode ::= LatLonBox ;
 KMLNode ::= LinearRing ;
 KMLNode ::= LineString ;
 KMLNode ::= LineStyle ;
 KMLNode ::= LinkDescription ;
 KMLNode ::= LinkName ;
 KMLNode ::= Longitude ;
 KMLNode ::= LookAt ;
 KMLNode ::= Message ;
 KMLNode ::= MinRefreshPeriod ;
 KMLNode ::= MultiGeometry ;
 KMLNode ::= Name ;
 KMLNode ::= NetworkLink ;
 KMLNode ::= NetworkLinkControl ;
 KMLNode ::= North ;
 KMLNode ::= ObjArrayField ;
 KMLNode ::= ObjField ;
 KMLNode ::= Open ;
 KMLNode ::= OuterBoundaryIs ;
 KMLNode ::= Outline ;
 KMLNode ::= OverlayXY ;
 KMLNode ::= Pair ;
 KMLNode ::= Parent ;
 KMLNode ::= Placemark ;
 KMLNode ::= Point ;
 KMLNode ::= Polygon ;
 KMLNode ::= PolyStyle ;
 KMLNode ::= Range ;
 KMLNode ::= RefreshInterval ;
 KMLNode ::= RefreshMode ;
 KMLNode ::= RefreshVisibility ;
 KMLNode ::= Rotation ;
 KMLNode ::= Schema ;
 KMLNode ::= Scale ;
 KMLNode ::= ScreenOverlay ;
 KMLNode ::= ScreenXY ;
 KMLNode ::= SimpleArrayField ;
 KMLNode ::= SimpleField ;
 KMLNode ::= Size ;
 KMLNode ::= South ;
 KMLNode ::= Snippet ;
 KMLNode ::= Style ;
 KMLNode ::= StyleMap ;
 KMLNode ::= StyleUrl ;
 KMLNode ::= Tessellate ;
 KMLNode ::= Text ;
 KMLNode ::= TextColor ;
 KMLNode ::= Tilt ;
 KMLNode ::= Type ;
 KMLNode ::= Url ;
 KMLNode ::= ViewBoundScale ;
 KMLNode ::= ViewRefreshMode ;
 KMLNode ::= ViewRefreshTime ;
 KMLNode ::= ViewFormat ;
 KMLNode ::= Visibility ;
 KMLNode ::= W ;
 KMLNode ::= West ;
 KMLNode ::= Width ;
 KMLNode ::= X ;
 KMLNode ::= Y ;
Href ::= value::String ;
Parent ::= value::String ;
InnerBoundaryIs ::= ε ;
DrawOrder ::= value::Integer ;
SimpleField ::= ε ;
H ::= value::Integer ;
LineString ::= ε ;
LinkName ::= value::String ;
ViewRefreshTime ::= value::Integer ;
Color ::= value::String ;
Schema ::= ε ;
Key ::= value::String ;
Tessellate ::= value::String ;
LabelStyle ::= ε ;
Document ::= ε ;
Placemark ::= ε ;
Visibility ::= value::String ;
OverlayXY ::= x::String y::String xunits::String yunits::String ;
String ::= string() ;
OuterBoundaryIs ::= ε ;
South ::= value::Double ;
RefreshVisibility ::= value::String ;
Name ::= value::String ;
MultiGeometry ::= ε ;
Scale ::= value::String ;
GroundOverlay ::= ε ;
NetworkLink ::= ε ;
Width ::= value::Double ;
PolyStyle ::= ε ;
ScreenOverlay ::= id::String ;
RootNode ::= KMLRootNode ;
Fill ::= value::Boolean ;
Outline ::= value::String ;
Node ::= ElementNode ;
 Node ::= AttributeNode ;
Size ::= x::String y::String xunits::String yunits::String ;
RefreshInterval ::= value::String ;
StyleUrl ::= value::String ;
Rotation ::= value::String ;
AttributeNode ::= value::String ;
Integer ::= integer() ;
Range ::= value::String ;
East ::= value::Double ;
ViewFormat ::= value::String ;
Polygon ::= ε ;
ViewRefreshMode ::= value::String ;
Icon ::= ε ;
IconStyle ::= ε ;
Coordinate ::= ε ;
TextColor ::= value::String ;
NetworkLinkControl ::= ε ;
LinearRing ::= ε ;
SimpleArrayField ::= ε ;
ViewBoundScale ::= value::String ;
Style ::= id::String ;
Longitude ::= value::Double ;
Folder ::= ε ;
ScreenXY ::= x::String y::String xunits::String yunits::String ;
Latitude ::= value::Double ;
StyleMap ::= ε ;
ColorModeValue ::= (normal::ε) | (random::ε) ;
Boolean ::= "true" | "false" ;
ColorMode ::= value::ColorModeValue ;
Extrude ::= value::Boolean ;
AltitudeMode ::= value::AltitudeModeValue ;
Cookie ::= value::String ;
LinkDescription ::= value::String ;
--------------------markup::graphml-doux.bgf--------------------
Key ::= for::ElemType attrName::String type::AttrType defValue::String ;
Integer ::= integer() ;
Graph ::= (contents::Element)+ edgeDefault::EdgeType ;
Edge ::= source::Node target::Node sourceport::Port targetport::Port ;
Element ::= Key ;
 Element ::= Graph ;
 Element ::= Edge ;
 Element ::= HyperEdge ;
 Element ::= Node ;
 Element ::= id::String (datas::Data)+ ;
AttrType ::= (double::ε) | (string::ε) | (integer::ε) | (boolean::ε) ;
Data ::= key::String value::String ;
LocatedElement ::= Root ;
 LocatedElement ::= Element ;
 LocatedElement ::= Port ;
 LocatedElement ::= EndPoint ;
 LocatedElement ::= Data ;
ElemType ::= (edge::ε) | (node::ε) | (graph::ε) ;
HyperEdge ::= (endpoints::EndPoint)+ ;
Boolean ::= "true" | "false" ;
EdgeType ::= (directed::ε) | (undirected::ε) ;
EndPoint ::= node::Node port::Port ;
Node ::= subgraph::Graph (ports::Port)+ ;
Root ::= (keys::Key)+ (graphs::Graph)+ ;
String ::= string() ;
Port ::= name::String ;
--------------------markup::json-rascal-abstract.bgf--------------------
Value ::= (null::ε) | (object::(members::((memberName::string() memberValue::Value)*))) | (array::(values::(Value*))) | (integer::(n::integer())) | (float::(r::integer())) | (string::(s::string())) | (boolean::(b::("true" | "false"))) ;
--------------------markup::json-rascal-concrete.bgf--------------------
Object ::= [Object] "{" members::({Member ","}*) "}" ;
Member ::= [Member] memberName::StringLiteral ":" memberValue::Value ;
Array ::= [Array] "[" values::({Value ","}*) "]" ;
JSONText ::= Object ;
 JSONText ::= Array ;
Value ::= NumericLiteral ;
 Value ::= StringLiteral ;
 Value ::= [True] "true" ;
 Value ::= Object ;
 Value ::= Array ;
 Value ::= [Null] "null" ;
 Value ::= [False] "false" ;
--------------------markup::json-zaytsev-abstract.bgf--------------------
JSO ::= (jsnumber::(n::integer())) | (jsstring::(s::string())) | (jsboolean::(b::("true" | "false"))) | (jsarray::(xs::(JSO*))) | (jsobject::(kvs::((JSO JSO)*))) | (jsnull::ε) ;
--------------------markup::json-zaytsev-concrete.bgf--------------------
JSONNull ::= "null" ;
JSONKeyValue ::= key::JSONBasicType ":" val::JSONBasicType ;
JSONString ::= DoubleQuotedString ;
JSONObject ::= "{" {JSONKeyValue ","}* "}" ;
JSONData ::= JSONBasicType ;
JSONNumber ::= "-"? Digits ("." Digits)? ;
JSONArray ::= "[" {JSONBasicType ","}* "]" ;
JSONBoolean ::= "false" ;
 JSONBoolean ::= "true" ;
JSONBasicType ::= JSONString ;
 JSONBasicType ::= JSONNull ;
 JSONBasicType ::= JSONBoolean ;
 JSONBasicType ::= JSONNumber ;
 JSONBasicType ::= JSONArray ;
 JSONBasicType ::= JSONObject ;
--------------------markup::pnml-arbitrarydeclarations.bgf--------------------
SortDeclaration ::= ArbitrarySort ;
Unparsed ::= unparsed::(Declaration.content anyElement*) ;
Declaration ::= Unparsed ;
ArbitraryOperator ::= arbitraryoperator::(OperatorDeclaration.content (input::Sort)* output::Sort) ;
OperatorDeclaration ::= ArbitraryOperator ;
ArbitrarySort ::= arbitrarysort::SortDeclaration.content ;
--------------------markup::pnml-booleans.bgf--------------------
Inequality ::= inequality::Operator.content ;
BooleanConstant ::= booleanconstant::(value::("true" | "false") BuiltInConstant.content) ;
BooleanOperator ::= And | Or | Imply | Not ;
Equality ::= equality::Operator.content ;
Bool ::= bool::ε ;
Imply ::= imply::BooleanOperator.content ;
And ::= and::BooleanOperator.content ;
BuiltInConstant ::= BooleanConstant ;
BuiltInOperator ::= BooleanOperator ;
Operator ::= Equality | Inequality ;
Not ::= not::BooleanOperator.content ;
Or ::= or::BooleanOperator.content ;
BuiltInSort ::= Bool ;
--------------------markup::pnml-cyclicenumerations.bgf--------------------
CyclicEnumOperator ::= Successor | Predecessor ;
CyclicEnumeration ::= cyclicenumeration::FiniteEnumeration.content ;
Predecessor ::= predecessor::CyclicEnumOperator.content ;
BuiltInOperator ::= CyclicEnumOperator ;
Successor ::= successor::CyclicEnumOperator.content ;
BuiltInSort ::= CyclicEnumeration ;
--------------------markup::pnml-dots.bgf--------------------
DotConstant ::= dotconstant::ε ;
Dot ::= dot::ε ;
BuiltInConstant ::= DotConstant ;
BuiltInSort ::= Dot ;
--------------------markup::r2ml.bgf--------------------
DerivationRuleSet ::= (rules::Rules/DerivationRule)+ ;
Integer ::= integer() ;
RuleBase ::= vocabularies::Vocabulary/VocBasic/Vocabulary (externalVocabulaires::Vocabulary/VocBuiltin/ExternalVocabulary)+ (rules::RuleSet)+ ruleBaseID::String ;
ProductionRuleSet ::= (rules::Rules/ProductionRule)+ ;
ReactionRuleSet ::= (rules::Rules/ReactionRule)+ ;
CollectionTypes ::= (individual::ε) | (set::ε) | (orderedSet::ε) | (bag::ε) | (sequence::ε) ;
IntegrityRuleSet ::= (rules::Rules/IntegrityRule)+ ;
ExternalVocabularyLanguage ::= (RDFS::ε) | (UML::ε) | (OWL::ε) ;
Boolean ::= "true" | "false" ;
RuleSet ::= ReactionRuleSet ;
 RuleSet ::= ProductionRuleSet ;
 RuleSet ::= IntegrityRuleSet ;
 RuleSet ::= DerivationRuleSet ;
PredicateCategory ::= (closed::ε) | (open::ε) | (partial::ε) ;
EventType ::= eventTypeID::String ;
String ::= string() ;
PredicateType ::= (ObjectClassificationPredicate::ε) | (AttributionPredicate::ε) | (AssociationPredicate::ε) | (ReferencePropertyPredicate::ε) | (EqualityPredicate::ε) | (InequalityPredicate::ε) | (DatatypePredicate::ε) | (DataClassificationPredicate::ε) ;
--------------------markup::pnml-ext-inhibitor.bgf--------------------
PTArcAnnotation ::= inscription::positiveintegerlabel.content ;
ArcType ::= arctype::specialarc.value ;
Name ::= name::simpletextlabel.content ;
PTMarking ::= initialMarking::nonnegativeintegerlabel.content ;
--------------------markup::pnml-ext-reset.bgf--------------------
PTArcAnnotation ::= inscription::positiveintegerlabel.content ;
ArcType ::= arctype::specialarc.value ;
Name ::= name::simpletextlabel.content ;
PTMarking ::= initialMarking::nonnegativeintegerlabel.content ;
--------------------markup::pnml-ext-resetinhibitor.bgf--------------------
PTArcAnnotation ::= inscription::positiveintegerlabel.content ;
ArcType ::= arctype::specialarc.value ;
Name ::= name::simpletextlabel.content ;
PTMarking ::= initialMarking::nonnegativeintegerlabel.content ;
--------------------markup::pnml-ext-specialarcs.bgf--------------------
ArcType ::= arctype::specialarc.value ;
--------------------markup::pnml-finiteenumerations.bgf--------------------
FiniteEnumeration ::= finiteenumeration::FiniteEnumeration.content ;
OperatorDeclaration ::= FEConstant ;
FEConstant ::= feconstant::OperatorDeclaration.content ;
BuiltInSort ::= FiniteEnumeration ;
--------------------markup::pnml-finiteintranges.bgf--------------------
FiniteIntRange ::= finiteintrange::(start::integer() end::integer()) ;
FIRGreaterThan ::= greaterthan::FiniteIntRangeOperator.content ;
FIRLessThan ::= lessthan::FiniteIntRangeOperator.content ;
FIRLessThanOrEqual ::= lessthanorequal::FiniteIntRangeOperator.content ;
BuiltInConstant ::= FiniteIntRangeConstant ;
BuiltInOperator ::= FiniteIntRangeOperator ;
FIRGreaterThanOrEqual ::= greaterthanorequal::FiniteIntRangeOperator.content ;
FiniteIntRangeConstant ::= finiteintrangeconstant::(value::integer() FiniteIntRange BuiltInConstant.content) ;
FiniteIntRangeOperator ::= FIRLessThan | FIRLessThanOrEqual | FIRGreaterThan | FIRGreaterThanOrEqual ;
BuiltInSort ::= FiniteIntRange ;
--------------------markup::pnml-guyard-basic.bgf--------------------
NetElement ::= type::URI document::PNMLDocument (contents::NetContent)+ (tools::ToolSpecific)+ netgraphics::NetGraphics name::Name ;
AlignType ::= (atleft::ε) | (atcenter::ε) | (atright::ε) ;
NetContent ::= NetContentElement ;
 NetContent ::= Arc ;
AnnotationGraphics ::= namedelement::LabeledElement offset::Offset font::Font fill::Fill line::Line ;
Inscription ::= arc::Arc ;
RotationType ::= (rtvertical::ε) | (rthorizontal::ε) | (rtdiagonal::ε) ;
Transition ::= node::Node ;
Offset ::= annotationgraphics::AnnotationGraphics ;
Arc ::= source::NetContentElement target::NetContentElement (tools::ToolSpecific)+ edgegraphics::EdgeGraphics inscription::Inscription ;
String ::= string() ;
InitialMarking ::= place::Place ;
Font ::= family::String style::String weight::String size::String decoration::DecorationType align::AlignType rotation::Integer annotationgraphics::AnnotationGraphics ;
Graphics ::= NetGraphics ;
 Graphics ::= NodeGraphics ;
 Graphics ::= EdgeGraphics ;
 Graphics ::= AnnotationGraphics ;
StyleType ::= (sttsolid::ε) | (sttdash::ε) | (sttdot::ε) ;
Name ::= net::NetElement netcontent::NetContent ;
DecorationType ::= (dtunderligne::ε) | (dtoverligne::ε) | (dtlinethrough::ε) ;
NetGraphics ::= net::NetElement ;
Place ::= initialmarking::InitialMarking ;
Fill ::= gradientrotation::RotationType interiorcolor::Color gradientcolor::Color image::URI nodegraphics::NodeGraphics edgegraphics::EdgeGraphics annotationgraphics::AnnotationGraphics ;
Node ::= netcontentelement::NetContentElement (tools::ToolSpecific)+ nodegraphics::NodeGraphics ;
NetContentElement ::= Place ;
 NetContentElement ::= Transition ;
Integer ::= integer() ;
ShapeType ::= (shtline::ε) | (shtcurve::ε) ;
PNMLDocument ::= xmlns::URI (nets::NetElement)+ ;
Coordinate ::= Position ;
 Coordinate ::= Offset ;
Line ::= color::Color width::Integer shape::ShapeType style::StyleType nodegraphics::NodeGraphics edgegraphics::EdgeGraphics annotationgraphics::AnnotationGraphics ;
Label ::= text::String namedelement::LabeledElement ;
AnyElement ::= name::String text::String ;
NodeGraphics ::= node::Node position::Position dimension::Dimension fill::Fill line::Line ;
URI ::= value::String ;
ToolSpecific ::= tool::String version::String (anyelement::AnyElement)+ net::NetElement arc::Arc node::Node ;
Position ::= nodegraphics::NodeGraphics edgegraphics::EdgeGraphics ;
LabeledElement ::= Name ;
 LabeledElement ::= Inscription ;
 LabeledElement ::= InitialMarking ;
EdgeGraphics ::= arc::Arc (position::Position)+ fill::Fill line::Line ;
Dimension ::= width::Integer height::Integer nodegraphics::NodeGraphics ;
Color ::= ε ;
IdedElement ::= NetElement ;
 IdedElement ::= Node ;
 IdedElement ::= Arc ;
--------------------markup::pnml-guyard-modular.bgf--------------------
NetElement ::= type::URI document::PNMLDocument (contents::NetContent)+ (tools::ToolSpecific)+ netgraphics::NetGraphics name::Name ;
AlignType ::= (atleft::ε) | (atcenter::ε) | (atright::ε) ;
NetContent ::= NetContentElement ;
 NetContent ::= Arc ;
 NetContent ::= Page ;
 NetContent ::= ReferencePlace ;
 NetContent ::= ReferenceTransition ;
 NetContent ::= Instance ;
AnnotationGraphics ::= namedelement::LabeledElement offset::Offset font::Font fill::Fill line::Line ;
Inscription ::= arc::Arc ;
RotationType ::= (rtvertical::ε) | (rthorizontal::ε) | (rtdiagonal::ε) ;
Transition ::= node::Node ;
Instance ::= ref::URI (importplace::ImportNode)+ (importtransition::ImportNode)+ ;
Offset ::= annotationgraphics::AnnotationGraphics ;
Arc ::= source::NetContentElement target::NetContentElement (tools::ToolSpecific)+ edgegraphics::EdgeGraphics inscription::Inscription ;
String ::= string() ;
InitialMarking ::= place::Place ;
Font ::= family::String style::String weight::String size::String decoration::DecorationType align::AlignType rotation::Integer annotationgraphics::AnnotationGraphics ;
Page ::= (contents::NetContent)+ (tools::ToolSpecific)+ pagegraphics::PageGraphics ;
Graphics ::= NetGraphics ;
 Graphics ::= NodeGraphics ;
 Graphics ::= EdgeGraphics ;
 Graphics ::= AnnotationGraphics ;
 Graphics ::= PageGraphics ;
Reference ::= ReferencePlace ;
 Reference ::= ReferenceTransition ;
Name ::= net::NetElement netcontent::NetContent ;
StyleType ::= (sttsolid::ε) | (sttdash::ε) | (sttdot::ε) ;
DecorationType ::= (dtunderligne::ε) | (dtoverligne::ε) | (dtlinethrough::ε) ;
NetGraphics ::= net::NetElement ;
Place ::= initialmarking::InitialMarking ;
ImportNode ::= parameter::NCName ref::Reference instanceplace::Instance instancetransition::Instance ;
Fill ::= gradientrotation::RotationType interiorcolor::Color gradientcolor::Color image::URI nodegraphics::NodeGraphics edgegraphics::EdgeGraphics annotationgraphics::AnnotationGraphics ;
Node ::= Reference ;
 Node ::= netcontentelement::NetContentElement (tools::ToolSpecific)+ nodegraphics::NodeGraphics ;
ReferenceTransition ::= net::NetElement name::Name page::Page module::Module instance::Node ref::NCName importnode::ImportNode ;
NetContentElement ::= Place ;
 NetContentElement ::= Transition ;
NCName ::= value::String ;
Integer ::= integer() ;
ReferencePlace ::= net::NetElement name::Name page::Page module::Module instance::Node ref::NCName importnode::ImportNode ;
ShapeType ::= (shtline::ε) | (shtcurve::ε) ;
PageGraphics ::= page::Page ;
Interface ::= module::Module (importplace::Node)+ (exportplace::Reference)+ (importtransition::Node)+ (exporttransition::Reference)+ ;
Coordinate ::= Position ;
 Coordinate ::= Offset ;
PNMLDocument ::= xmlns::URI (nets::NetElement)+ (modules::Module)+ ;
Line ::= color::Color width::Integer shape::ShapeType style::StyleType nodegraphics::NodeGraphics edgegraphics::EdgeGraphics annotationgraphics::AnnotationGraphics ;
Label ::= text::String namedelement::LabeledElement ;
AnyElement ::= name::String text::String ;
NodeGraphics ::= node::Node position::Position dimension::Dimension fill::Fill line::Line ;
Module ::= (interfaces::Interface)+ (netcontents::NetContent)+ document::PNMLDocument ;
URI ::= value::String ;
ToolSpecific ::= tool::String version::String (anyelement::AnyElement)+ net::NetElement arc::Arc node::Node page::Page ;
Position ::= nodegraphics::NodeGraphics edgegraphics::EdgeGraphics ;
LabeledElement ::= Name ;
 LabeledElement ::= Inscription ;
 LabeledElement ::= InitialMarking ;
EdgeGraphics ::= arc::Arc (position::Position)+ fill::Fill line::Line ;
Dimension ::= width::Integer height::Integer nodegraphics::NodeGraphics ;
Color ::= ε ;
IdedElement ::= Module ;
 IdedElement ::= NetElement ;
 IdedElement ::= Node ;
 IdedElement ::= Arc ;
 IdedElement ::= Page ;
 IdedElement ::= Instance ;
--------------------markup::pnml-guyard-simplified.bgf--------------------
NetElement ::= type::URI document::PNMLDocument (contents::NetContent)+ name::Name ;
Integer ::= integer() ;
NetContent ::= NetContentElement ;
 NetContent ::= Arc ;
URI ::= value::String ;
Name ::= net::NetElement netContent::NetContent ;
LocatedElement ::= IdedElement ;
 LocatedElement ::= URI ;
 LocatedElement ::= PNMLDocument ;
 LocatedElement ::= NetContent ;
 LocatedElement ::= LabeledElement ;
 LocatedElement ::= Label ;
LabeledElement ::= Name ;
PNMLDocument ::= xmlns::URI (nets::NetElement)+ ;
Place ::= ε ;
Transition ::= ε ;
Label ::= text::String labeledElement::LabeledElement ;
Arc ::= source::NetContentElement target::NetContentElement ;
IdedElement ::= NetElement ;
 IdedElement ::= NetContentElement ;
 IdedElement ::= Arc ;
String ::= string() ;
NetContentElement ::= Place ;
 NetContentElement ::= Transition ;
--------------------markup::pnml-guyard-structured.bgf--------------------
NetElement ::= type::URI document::PNMLDocument (contents::NetContent)+ (tools::ToolSpecific)+ netgraphics::NetGraphics name::Name ;
AlignType ::= (atleft::ε) | (atcenter::ε) | (atright::ε) ;
NetContent ::= NetContentElement ;
 NetContent ::= Arc ;
 NetContent ::= Page ;
 NetContent ::= ReferencePlace ;
 NetContent ::= ReferenceTransition ;
AnnotationGraphics ::= namedelement::LabeledElement offset::Offset font::Font fill::Fill line::Line ;
Inscription ::= arc::Arc ;
RotationType ::= (rtvertical::ε) | (rthorizontal::ε) | (rtdiagonal::ε) ;
Transition ::= node::Node ;
Offset ::= annotationgraphics::AnnotationGraphics ;
Arc ::= source::NetContentElement target::NetContentElement (tools::ToolSpecific)+ edgegraphics::EdgeGraphics inscription::Inscription ;
String ::= string() ;
InitialMarking ::= place::Place ;
Font ::= family::String style::String weight::String size::String decoration::DecorationType align::AlignType rotation::Integer annotationgraphics::AnnotationGraphics ;
Page ::= (contents::NetContent)+ (tools::ToolSpecific)+ pagegraphics::PageGraphics ;
Graphics ::= NetGraphics ;
 Graphics ::= NodeGraphics ;
 Graphics ::= EdgeGraphics ;
 Graphics ::= AnnotationGraphics ;
 Graphics ::= PageGraphics ;
Reference ::= ReferencePlace ;
 Reference ::= ReferenceTransition ;
StyleType ::= (sttsolid::ε) | (sttdash::ε) | (sttdot::ε) ;
Name ::= net::NetElement netcontent::NetContent ;
DecorationType ::= (dtunderligne::ε) | (dtoverligne::ε) | (dtlinethrough::ε) ;
NetGraphics ::= net::NetElement ;
Place ::= initialmarking::InitialMarking ;
Fill ::= gradientrotation::RotationType interiorcolor::Color gradientcolor::Color image::URI nodegraphics::NodeGraphics edgegraphics::EdgeGraphics annotationgraphics::AnnotationGraphics ;
Node ::= Reference ;
 Node ::= netcontentelement::NetContentElement (tools::ToolSpecific)+ nodegraphics::NodeGraphics ;
ReferenceTransition ::= net::NetElement name::Name page::Page ref::Node ;
NetContentElement ::= Place ;
 NetContentElement ::= Transition ;
Integer ::= integer() ;
ReferencePlace ::= net::NetElement name::Name page::Page ref::Node ;
ShapeType ::= (shtline::ε) | (shtcurve::ε) ;
PageGraphics ::= page::Page ;
Coordinate ::= Position ;
 Coordinate ::= Offset ;
PNMLDocument ::= xmlns::URI (nets::NetElement)+ ;
Line ::= color::Color width::Integer shape::ShapeType style::StyleType nodegraphics::NodeGraphics edgegraphics::EdgeGraphics annotationgraphics::AnnotationGraphics ;
Label ::= text::String namedelement::LabeledElement ;
AnyElement ::= name::String text::String ;
NodeGraphics ::= node::Node position::Position dimension::Dimension fill::Fill line::Line ;
URI ::= value::String ;
ToolSpecific ::= tool::String version::String (anyelement::AnyElement)+ net::NetElement arc::Arc node::Node page::Page ;
Position ::= nodegraphics::NodeGraphics edgegraphics::EdgeGraphics ;
LabeledElement ::= Name ;
 LabeledElement ::= Inscription ;
 LabeledElement ::= InitialMarking ;
EdgeGraphics ::= arc::Arc (position::Position)+ fill::Fill line::Line ;
Dimension ::= width::Integer height::Integer nodegraphics::NodeGraphics ;
Color ::= ε ;
IdedElement ::= NetElement ;
 IdedElement ::= Node ;
 IdedElement ::= Arc ;
 IdedElement ::= Page ;
--------------------markup::pnml-highlevelnet.bgf--------------------
FiniteIntRange ::= finiteintrange::(start::integer() end::integer()) ;
Condition ::= condition::(simpletextlabel.content (structure::Term)?) ;
LessThan ::= lt::IntegerOperator ;
FiniteEnumeration ::= finiteenumeration::FiniteEnumeration.content ;
ListAppend ::= listappend::ListOperator.content ;
StringLength ::= stringlength::StringOperator.content ;
GreaterThanOrEqual ::= geq::IntegerOperator ;
StringConstant ::= stringconstant::(StringConstant.content BuiltInConstant.content) ;
StringOperator ::= StringLessThan | StringLessThanOrEqual | StringGreaterThan | StringGreaterThanOrEqual | StringConcatenation | StringAppend | StringLength | Substring ;
Cardinality ::= cardinality::BuiltInOperator.content ;
DotConstant ::= dotconstant::ε ;
MultisetOperator ::= Add | All | NumberOf | Subtract | ScalarProduct | Empty ;
 MultisetOperator ::= ε ;
EmptyList ::= emptylist::(Sort BuiltInConstant.content) ;
Number ::= Natural | Positive | Integer ;
FIRLessThan ::= lessthan::FiniteIntRangeOperator.content ;
Predecessor ::= predecessor::CyclicEnumOperator.content ;
FIRLessThanOrEqual ::= lessthanorequal::FiniteIntRangeOperator.content ;
MultisetSort ::= multisetsort::Sort ;
StringGreaterThanOrEqual ::= geqs::StringOperator.content ;
BuiltInConstant ::= EmptyList ;
 BuiltInConstant ::= StringConstant ;
 BuiltInConstant ::= FiniteIntRangeConstant ;
 BuiltInConstant ::= BooleanConstant ;
 BuiltInConstant ::= DotConstant ;
 BuiltInConstant ::= NumberConstant ;
 BuiltInConstant ::= ε ;
BuiltInOperator ::= ListOperator ;
 BuiltInOperator ::= StringOperator ;
 BuiltInOperator ::= PartitionOperator ;
 BuiltInOperator ::= CyclicEnumOperator ;
 BuiltInOperator ::= FiniteIntRangeOperator ;
 BuiltInOperator ::= BooleanOperator ;
 BuiltInOperator ::= Cardinality | CardinalityOf | Contains ;
 BuiltInOperator ::= IntegerOperator ;
 BuiltInOperator ::= ε ;
StringLessThanOrEqual ::= leqs::StringOperator.content ;
CardinalityOf ::= cardinalityof::BuiltInOperator.content ;
IntegerOperator ::= Addition | Subtraction | Multiplication | Division | Modulo | GreaterThan | GreaterThanOrEqual | LessThan | LessThanOrEqual ;
BuiltInSort ::= List ;
 BuiltInSort ::= String ;
 BuiltInSort ::= CyclicEnumeration ;
 BuiltInSort ::= FiniteEnumeration ;
 BuiltInSort ::= FiniteIntRange ;
 BuiltInSort ::= Bool ;
 BuiltInSort ::= Dot ;
 BuiltInSort ::= Number ;
 BuiltInSort ::= ε ;
NamedOperator ::= namedoperator::(OperatorDeclaration.content parameter::(VariableDeclaration*) def::Term) ;
SortDeclaration ::= ArbitrarySort ;
 SortDeclaration ::= Partition ;
 SortDeclaration ::= NamedSort ;
Type ::= type::(simpletextlabel.content (structure::Sort)?) ;
Declaration ::= Unparsed ;
 Declaration ::= SortDeclaration | VariableDeclaration | OperatorDeclaration ;
Declarations ::= declarations::(Declaration*) ;
NamedSort ::= namedsort::(SortDeclaration.content Sort) ;
HLDeclaration ::= declaration::(simpletextlabel.content (structure::Declarations)?) ;
Subtraction ::= subtraction::IntegerOperator ;
HLAnnotation ::= hlinscription::(simpletextlabel.content (structure::Term)?) ;
PartitionElement ::= partitionelement::(OperatorDeclaration.content Term+) ;
HLMarking ::= hlinitialMarking::(simpletextlabel.content (structure::Term)?) ;
Division ::= div::IntegerOperator ;
BooleanConstant ::= booleanconstant::(value::("true" | "false") BuiltInConstant.content) ;
BooleanOperator ::= And | Or | Imply | Not ;
FIRGreaterThan ::= greaterthan::FiniteIntRangeOperator.content ;
MakeList ::= makelist::(Sort ListOperator.content) ;
Partition ::= partition::(SortDeclaration.content Sort PartitionElement+) ;
StringGreaterThan ::= gts::StringOperator.content ;
PartitionElementOf ::= partitionelementof::(refpartition::string() PartitionOperator.content) ;
MemberAtIndex ::= memberatindex::(index::integer() ListOperator.content) ;
Operator ::= Equality | Inequality ;
 Operator ::= BuiltInOperator | BuiltInConstant | MultisetOperator | Tuple | UserOperator ;
PartitionLessThan ::= ltp::PartitionOperator.content ;
ListLength ::= listlength::ListOperator.content ;
ScalarProduct ::= scalarproduct::MultisetOperator.content ;
FiniteIntRangeConstant ::= finiteintrangeconstant::(value::integer() FiniteIntRange BuiltInConstant.content) ;
FiniteIntRangeOperator ::= FIRLessThan | FIRLessThanOrEqual | FIRGreaterThan | FIRGreaterThanOrEqual ;
Contains ::= contains::BuiltInOperator.content ;
Inequality ::= inequality::Operator.content ;
Sort ::= BuiltInSort | MultisetSort | ProductSort | UserSort ;
VariableDeclaration ::= variabledecl::(Declaration.content Sort) ;
CyclicEnumOperator ::= Successor | Predecessor ;
Sublist ::= sublist::(start::integer() length::integer() ListOperator.content) ;
List ::= list::Sort ;
ListConcatenation ::= listconcatenation::ListOperator.content ;
Imply ::= imply::BooleanOperator.content ;
LessThanOrEqual ::= leq::IntegerOperator ;
And ::= and::BooleanOperator.content ;
Subtract ::= subtract::MultisetOperator.content ;
Not ::= not::BooleanOperator.content ;
Substring ::= substring::(start::integer() length::integer() StringOperator.content) ;
String ::= string::ε ;
UserOperator ::= useroperator::(declaration::string() Operator.content) ;
CyclicEnumeration ::= cyclicenumeration::FiniteEnumeration.content ;
NumberConstant ::= numberconstant::(value::integer() BuiltInConstant.content Number) ;
Empty ::= empty::(MultisetOperator.content Sort) ;
Name ::= name::simpletextlabel.content ;
StringLessThan ::= lts::StringOperator.content ;
StringAppend ::= stringappend::StringOperator.content ;
UserSort ::= usersort::(declaration::string()) ;
Dot ::= dot::ε ;
Tuple ::= tuple::Operator.content ;
StringConcatenation ::= stringconcatenation::StringOperator.content ;
Multiplication ::= mult::IntegerOperator ;
FIRGreaterThanOrEqual ::= greaterthanorequal::FiniteIntRangeOperator.content ;
NumberOf ::= numberof::MultisetOperator.content ;
Integer ::= integer::ε ;
Variable ::= variable::(refvariable::string()) ;
Addition ::= addition::IntegerOperator ;
GreaterThan ::= gt::IntegerOperator ;
Equality ::= equality::Operator.content ;
Positive ::= positive::ε ;
Modulo ::= mod::IntegerOperator ;
ArbitraryOperator ::= arbitraryoperator::(OperatorDeclaration.content (input::Sort)* output::Sort) ;
OperatorDeclaration ::= ArbitraryOperator ;
 OperatorDeclaration ::= PartitionElement ;
 OperatorDeclaration ::= FEConstant ;
 OperatorDeclaration ::= NamedOperator ;
PartitionGreaterThan ::= gtp::PartitionOperator.content ;
ArbitrarySort ::= arbitrarysort::SortDeclaration.content ;
PartitionOperator ::= PartitionLessThan | PartitionGreaterThan | PartitionElementOf ;
ProductSort ::= productsort::(Sort*) ;
Term ::= Variable | Operator ;
Unparsed ::= unparsed::(Declaration.content anyElement*) ;
Bool ::= bool::ε ;
Natural ::= natural::ε ;
Successor ::= successor::CyclicEnumOperator.content ;
Or ::= or::BooleanOperator.content ;
FEConstant ::= feconstant::OperatorDeclaration.content ;
ListOperator ::= ListAppend | ListConcatenation | MakeList | ListLength | MemberAtIndex | Sublist ;
Add ::= add::MultisetOperator.content ;
All ::= all::(MultisetOperator.content Sort) ;
--------------------markup::pnml-hlcorestructure.bgf--------------------
Condition ::= condition::(simpletextlabel.content (structure::Term)?) ;
Type ::= type::(simpletextlabel.content (structure::Sort)?) ;
HLDeclaration ::= declaration::(simpletextlabel.content (structure::Declarations)?) ;
HLAnnotation ::= hlinscription::(simpletextlabel.content (structure::Term)?) ;
HLMarking ::= hlinitialMarking::(simpletextlabel.content (structure::Term)?) ;
--------------------markup::pnml-hlpng.bgf--------------------
Contains ::= contains::BuiltInOperator.content ;
Inequality ::= inequality::Operator.content ;
Sort ::= BuiltInSort | MultisetSort | ProductSort | UserSort ;
VariableDeclaration ::= variabledecl::(Declaration.content Sort) ;
Condition ::= condition::(simpletextlabel.content (structure::Term)?) ;
Imply ::= imply::BooleanOperator.content ;
And ::= and::BooleanOperator.content ;
Subtract ::= subtract::MultisetOperator.content ;
Not ::= not::BooleanOperator.content ;
UserOperator ::= useroperator::(declaration::string() Operator.content) ;
Cardinality ::= cardinality::BuiltInOperator.content ;
Empty ::= empty::(MultisetOperator.content Sort) ;
MultisetOperator ::= Add | All | NumberOf | Subtract | ScalarProduct | Empty ;
 MultisetOperator ::= ε ;
DotConstant ::= dotconstant::ε ;
Name ::= name::simpletextlabel.content ;
UserSort ::= usersort::(declaration::string()) ;
Dot ::= dot::ε ;
Tuple ::= tuple::Operator.content ;
MultisetSort ::= multisetsort::Sort ;
BuiltInConstant ::= BooleanConstant ;
 BuiltInConstant ::= DotConstant ;
 BuiltInConstant ::= ε ;
BuiltInOperator ::= BooleanOperator ;
 BuiltInOperator ::= Cardinality | CardinalityOf | Contains ;
 BuiltInOperator ::= ε ;
CardinalityOf ::= cardinalityof::BuiltInOperator.content ;
BuiltInSort ::= Bool ;
 BuiltInSort ::= Dot ;
 BuiltInSort ::= ε ;
NumberOf ::= numberof::MultisetOperator.content ;
NamedOperator ::= namedoperator::(OperatorDeclaration.content parameter::(VariableDeclaration*) def::Term) ;
Variable ::= variable::(refvariable::string()) ;
SortDeclaration ::= NamedSort ;
Type ::= type::(simpletextlabel.content (structure::Sort)?) ;
Declaration ::= SortDeclaration | VariableDeclaration | OperatorDeclaration ;
Equality ::= equality::Operator.content ;
Declarations ::= declarations::(Declaration*) ;
NamedSort ::= namedsort::(SortDeclaration.content Sort) ;
HLDeclaration ::= declaration::(simpletextlabel.content (structure::Declarations)?) ;
OperatorDeclaration ::= NamedOperator ;
HLAnnotation ::= hlinscription::(simpletextlabel.content (structure::Term)?) ;
HLMarking ::= hlinitialMarking::(simpletextlabel.content (structure::Term)?) ;
ProductSort ::= productsort::(Sort*) ;
Term ::= Variable | Operator ;
BooleanConstant ::= booleanconstant::(value::("true" | "false") BuiltInConstant.content) ;
BooleanOperator ::= And | Or | Imply | Not ;
Bool ::= bool::ε ;
Operator ::= Equality | Inequality ;
 Operator ::= BuiltInOperator | BuiltInConstant | MultisetOperator | Tuple | UserOperator ;
ScalarProduct ::= scalarproduct::MultisetOperator.content ;
Or ::= or::BooleanOperator.content ;
Add ::= add::MultisetOperator.content ;
All ::= all::(MultisetOperator.content Sort) ;
--------------------markup::pnml-integers.bgf--------------------
Integer ::= integer::ε ;
Addition ::= addition::IntegerOperator ;
GreaterThan ::= gt::IntegerOperator ;
LessThan ::= lt::IntegerOperator ;
Positive ::= positive::ε ;
LessThanOrEqual ::= leq::IntegerOperator ;
Modulo ::= mod::IntegerOperator ;
GreaterThanOrEqual ::= geq::IntegerOperator ;
Subtraction ::= subtraction::IntegerOperator ;
Division ::= div::IntegerOperator ;
NumberConstant ::= numberconstant::(value::integer() BuiltInConstant.content Number) ;
Natural ::= natural::ε ;
Number ::= Natural | Positive | Integer ;
BuiltInConstant ::= NumberConstant ;
BuiltInOperator ::= IntegerOperator ;
Multiplication ::= mult::IntegerOperator ;
IntegerOperator ::= Addition | Subtraction | Multiplication | Division | Modulo | GreaterThan | GreaterThanOrEqual | LessThan | LessThanOrEqual ;
BuiltInSort ::= Number ;
--------------------markup::pnml-lists.bgf--------------------
Sublist ::= sublist::(start::integer() length::integer() ListOperator.content) ;
List ::= list::Sort ;
MakeList ::= makelist::(Sort ListOperator.content) ;
EmptyList ::= emptylist::(Sort BuiltInConstant.content) ;
ListConcatenation ::= listconcatenation::ListOperator.content ;
ListAppend ::= listappend::ListOperator.content ;
BuiltInConstant ::= EmptyList ;
BuiltInOperator ::= ListOperator ;
MemberAtIndex ::= memberatindex::(index::integer() ListOperator.content) ;
ListLength ::= listlength::ListOperator.content ;
ListOperator ::= ListAppend | ListConcatenation | MakeList | ListLength | MemberAtIndex | Sublist ;
BuiltInSort ::= List ;
--------------------markup::pnml-multisets.bgf--------------------
Contains ::= contains::BuiltInOperator.content ;
Cardinality ::= cardinality::BuiltInOperator.content ;
Empty ::= empty::(MultisetOperator.content Sort) ;
MultisetOperator ::= Add | All | NumberOf | Subtract | ScalarProduct | Empty ;
BuiltInOperator ::= Cardinality | CardinalityOf | Contains ;
CardinalityOf ::= cardinalityof::BuiltInOperator.content ;
Subtract ::= subtract::MultisetOperator.content ;
ScalarProduct ::= scalarproduct::MultisetOperator.content ;
All ::= all::(MultisetOperator.content Sort) ;
Add ::= add::MultisetOperator.content ;
NumberOf ::= numberof::MultisetOperator.content ;
--------------------markup::rss.bgf--------------------
Integer ::= integer() ;
Date ::= eDay::DayKind day::Integer month::Integer year::Integer hours::Integer minutes::Integer seconds::Integer ;
Category ::= domain::String value::String ;
TextInput ::= title::String description::String name::String link::String channel::Channel ;
Source ::= url::String value::String ;
Image ::= url::String title::String link::String description::String width::Integer height::Integer channel::Channel ;
Cloud ::= domain::String port::Integer path::String registerProcedure::String protocol::String channel::Channel ;
Item ::= title::String link::String description::String author::String comments::String guid::String source::Source pubDate::Date enclosure::Enclosure category::Category channel::Channel ;
Channel ::= title::String link::String description::String language::String copyright::String managingEditor::String webmaster::String generator::String docs::String ttl::Integer rating::String (skipHours::Integer)+ (skipDays::DayKind)+ rss::RSS pubDate::Date lastBuildDate::Date image::Image textInput::TextInput cloud::Cloud category::Category (items::Item)+ ;
Enclosure ::= url::String lenght::Integer type::String ;
RSS ::= version::String channel::Channel ;
String ::= string() ;
DayKind ::= (Monday::ε) | (Tuesday::ε) | (Wednesday::ε) | (Thursday::ε) | (Friday::ε) | (Saturday::ε) | (Sunday::ε) ;
--------------------markup::pnml-partitions.bgf--------------------
PartitionOperator ::= PartitionLessThan | PartitionGreaterThan | PartitionElementOf ;
SortDeclaration ::= Partition ;
Partition ::= partition::(SortDeclaration.content Sort PartitionElement+) ;
PartitionElementOf ::= partitionelementof::(refpartition::string() PartitionOperator.content) ;
BuiltInOperator ::= PartitionOperator ;
OperatorDeclaration ::= PartitionElement ;
PartitionLessThan ::= ltp::PartitionOperator.content ;
PartitionElement ::= partitionelement::(OperatorDeclaration.content Term+) ;
PartitionGreaterThan ::= gtp::PartitionOperator.content ;
--------------------markup::pnml-pnmlcoremodel.bgf--------------------
Name ::= name::simpletextlabel.content ;
--------------------markup::pnml-ptnet.bgf--------------------
PTArcAnnotation ::= inscription::positiveintegerlabel.content ;
Name ::= name::simpletextlabel.content ;
PTMarking ::= initialMarking::nonnegativeintegerlabel.content ;
--------------------markup::pnml-strings.bgf--------------------
StringAppend ::= stringappend::StringOperator.content ;
StringLessThan ::= lts::StringOperator.content ;
StringGreaterThan ::= gts::StringOperator.content ;
StringLength ::= stringlength::StringOperator.content ;
StringConcatenation ::= stringconcatenation::StringOperator.content ;
StringGreaterThanOrEqual ::= geqs::StringOperator.content ;
BuiltInConstant ::= StringConstant ;
BuiltInOperator ::= StringOperator ;
StringLessThanOrEqual ::= leqs::StringOperator.content ;
StringOperator ::= StringLessThan | StringLessThanOrEqual | StringGreaterThan | StringGreaterThanOrEqual | StringConcatenation | StringAppend | StringLength | Substring ;
StringConstant ::= stringconstant::(StringConstant.content BuiltInConstant.content) ;
Substring ::= substring::(start::integer() length::integer() StringOperator.content) ;
String ::= string::ε ;
BuiltInSort ::= String ;
--------------------markup::pnml-symmetricnet.bgf--------------------
FiniteIntRange ::= finiteintrange::(start::integer() end::integer()) ;
Condition ::= condition::(simpletextlabel.content (structure::Term)?) ;
LessThan ::= lt::IntegerOperator ;
FiniteEnumeration ::= finiteenumeration::FiniteEnumeration.content ;
GreaterThanOrEqual ::= geq::IntegerOperator ;
Cardinality ::= cardinality::BuiltInOperator.content ;
DotConstant ::= dotconstant::ε ;
MultisetOperator ::= Add | All | NumberOf | Subtract | ScalarProduct | Empty ;
 MultisetOperator ::= ε ;
Number ::= Natural | Positive | Integer ;
Predecessor ::= predecessor::CyclicEnumOperator.content ;
FIRLessThan ::= lessthan::FiniteIntRangeOperator.content ;
FIRLessThanOrEqual ::= lessthanorequal::FiniteIntRangeOperator.content ;
MultisetSort ::= multisetsort::Sort ;
BuiltInConstant ::= FiniteIntRangeConstant ;
 BuiltInConstant ::= BooleanConstant ;
 BuiltInConstant ::= DotConstant ;
 BuiltInConstant ::= NumberConstant ;
 BuiltInConstant ::= ε ;
BuiltInOperator ::= PartitionOperator ;
 BuiltInOperator ::= CyclicEnumOperator ;
 BuiltInOperator ::= FiniteIntRangeOperator ;
 BuiltInOperator ::= BooleanOperator ;
 BuiltInOperator ::= Cardinality | CardinalityOf | Contains ;
 BuiltInOperator ::= IntegerOperator ;
 BuiltInOperator ::= ε ;
CardinalityOf ::= cardinalityof::BuiltInOperator.content ;
IntegerOperator ::= Addition | Subtraction | Multiplication | Division | Modulo | GreaterThan | GreaterThanOrEqual | LessThan | LessThanOrEqual ;
BuiltInSort ::= CyclicEnumeration ;
 BuiltInSort ::= FiniteEnumeration ;
 BuiltInSort ::= FiniteIntRange ;
 BuiltInSort ::= Bool ;
 BuiltInSort ::= Dot ;
 BuiltInSort ::= Number ;
 BuiltInSort ::= ε ;
NamedOperator ::= namedoperator::(OperatorDeclaration.content parameter::(VariableDeclaration*) def::Term) ;
SortDeclaration ::= Partition ;
 SortDeclaration ::= NamedSort ;
Declaration ::= SortDeclaration | VariableDeclaration | OperatorDeclaration ;
Type ::= type::(simpletextlabel.content (structure::Sort)?) ;
Declarations ::= declarations::(Declaration*) ;
NamedSort ::= namedsort::(SortDeclaration.content Sort) ;
HLDeclaration ::= declaration::(simpletextlabel.content (structure::Declarations)?) ;
Subtraction ::= subtraction::IntegerOperator ;
HLAnnotation ::= hlinscription::(simpletextlabel.content (structure::Term)?) ;
PartitionElement ::= partitionelement::(OperatorDeclaration.content Term+) ;
HLMarking ::= hlinitialMarking::(simpletextlabel.content (structure::Term)?) ;
Division ::= div::IntegerOperator ;
BooleanConstant ::= booleanconstant::(value::("true" | "false") BuiltInConstant.content) ;
BooleanOperator ::= And | Or | Imply | Not ;
FIRGreaterThan ::= greaterthan::FiniteIntRangeOperator.content ;
Partition ::= partition::(SortDeclaration.content Sort PartitionElement+) ;
PartitionElementOf ::= partitionelementof::(refpartition::string() PartitionOperator.content) ;
Operator ::= Equality | Inequality ;
 Operator ::= BuiltInOperator | BuiltInConstant | MultisetOperator | Tuple | UserOperator ;
PartitionLessThan ::= ltp::PartitionOperator.content ;
ScalarProduct ::= scalarproduct::MultisetOperator.content ;
FiniteIntRangeOperator ::= FIRLessThan | FIRLessThanOrEqual | FIRGreaterThan | FIRGreaterThanOrEqual ;
FiniteIntRangeConstant ::= finiteintrangeconstant::(value::integer() FiniteIntRange BuiltInConstant.content) ;
Contains ::= contains::BuiltInOperator.content ;
Inequality ::= inequality::Operator.content ;
Sort ::= BuiltInSort | MultisetSort | ProductSort | UserSort ;
VariableDeclaration ::= variabledecl::(Declaration.content Sort) ;
CyclicEnumOperator ::= Successor | Predecessor ;
Imply ::= imply::BooleanOperator.content ;
LessThanOrEqual ::= leq::IntegerOperator ;
And ::= and::BooleanOperator.content ;
Subtract ::= subtract::MultisetOperator.content ;
Not ::= not::BooleanOperator.content ;
UserOperator ::= useroperator::(declaration::string() Operator.content) ;
CyclicEnumeration ::= cyclicenumeration::FiniteEnumeration.content ;
Empty ::= empty::(MultisetOperator.content Sort) ;
NumberConstant ::= numberconstant::(value::integer() BuiltInConstant.content Number) ;
Name ::= name::simpletextlabel.content ;
UserSort ::= usersort::(declaration::string()) ;
Dot ::= dot::ε ;
Tuple ::= tuple::Operator.content ;
Multiplication ::= mult::IntegerOperator ;
FIRGreaterThanOrEqual ::= greaterthanorequal::FiniteIntRangeOperator.content ;
NumberOf ::= numberof::MultisetOperator.content ;
Integer ::= integer::ε ;
Variable ::= variable::(refvariable::string()) ;
Addition ::= addition::IntegerOperator ;
GreaterThan ::= gt::IntegerOperator ;
Equality ::= equality::Operator.content ;
Positive ::= positive::ε ;
Modulo ::= mod::IntegerOperator ;
OperatorDeclaration ::= PartitionElement ;
 OperatorDeclaration ::= FEConstant ;
 OperatorDeclaration ::= NamedOperator ;
PartitionGreaterThan ::= gtp::PartitionOperator.content ;
PartitionOperator ::= PartitionLessThan | PartitionGreaterThan | PartitionElementOf ;
ProductSort ::= productsort::(Sort*) ;
Term ::= Variable | Operator ;
Bool ::= bool::ε ;
Natural ::= natural::ε ;
Successor ::= successor::CyclicEnumOperator.content ;
Or ::= or::BooleanOperator.content ;
FEConstant ::= feconstant::OperatorDeclaration.content ;
Add ::= add::MultisetOperator.content ;
All ::= all::(MultisetOperator.content Sort) ;
--------------------markup::pnml-terms.bgf--------------------
Sort ::= BuiltInSort | MultisetSort | ProductSort | UserSort ;
VariableDeclaration ::= variabledecl::(Declaration.content Sort) ;
NamedOperator ::= namedoperator::(OperatorDeclaration.content parameter::(VariableDeclaration*) def::Term) ;
Variable ::= variable::(refvariable::string()) ;
SortDeclaration ::= NamedSort ;
Declaration ::= SortDeclaration | VariableDeclaration | OperatorDeclaration ;
Declarations ::= declarations::(Declaration*) ;
NamedSort ::= namedsort::(SortDeclaration.content Sort) ;
OperatorDeclaration ::= NamedOperator ;
UserOperator ::= useroperator::(declaration::string() Operator.content) ;
MultisetOperator ::= ε ;
ProductSort ::= productsort::(Sort*) ;
Term ::= Variable | Operator ;
UserSort ::= usersort::(declaration::string()) ;
Tuple ::= tuple::Operator.content ;
MultisetSort ::= multisetsort::Sort ;
BuiltInOperator ::= ε ;
BuiltInConstant ::= ε ;
Operator ::= BuiltInOperator | BuiltInConstant | MultisetOperator | Tuple | UserOperator ;
BuiltInSort ::= ε ;
--------------------markup::pnml-touzet.bgf--------------------
TransToPlaceArc ::= source::Transition target::Place ;
Integer ::= integer() ;
PlaceToTransArc ::= source::Place target::Transition ;
Element ::= PetriNet ;
 Element ::= Place ;
 Element ::= Transition ;
Place ::= (incoming::TransToPlaceArc)+ (outgoing::PlaceToTransArc)+ ;
PetriNet ::= (places::Place)+ (transitions::Transition)+ (arcs::Arc)+ ;
Transition ::= (incoming::PlaceToTransArc)+ (outgoing::TransToPlaceArc)+ ;
Arc ::= PlaceToTransArc ;
 Arc ::= TransToPlaceArc ;
String ::= string() ;
--------------------markup::svg-palies.bgf--------------------
Tref ::= xlinkHref::TextElement ;
StructuralElement ::= Image ;
 StructuralElement ::= Svg ;
 StructuralElement ::= GroupingElement ;
 StructuralElement ::= Use ;
Ellipse ::= ε ;
Attribute ::= Transform ;
 Attribute ::= Visibility ;
 Attribute ::= FontWeight ;
 Attribute ::= FontStyle ;
Rotate ::= angle::Double cx::Double cy::Double ;
Image ::= (referee::ReferencedFile)+ ;
Symbol ::= (groupContent::Element)+ ;
ReferencedFile ::= SvgFile ;
Visibility ::= visible::Boolean ;
String ::= string() ;
Point ::= ε ;
Circle ::= ε ;
TextElement ::= Text ;
 TextElement ::= Tspan ;
 TextElement ::= Tref ;
Translate ::= tx::Double ty::Double ;
Defs ::= (groupContent::Element)+ ;
Scale ::= sx::Double sy::Double ;
RelativeCoord ::= x::Double y::Double ;
Use ::= (use::Element)+ ;
SvgFile ::= tag::Svg (elements::Element)+ ;
Polyline ::= (waypoints::Point)+ strokeDashArray::String markerEnd::String markerStart::String ;
Integer ::= integer() ;
AbsoluteCoord ::= x::Double y::Double ;
Tspan ::= content::String ;
Element ::= StructuralElement ;
 Element ::= GraphicalElement ;
Coordinates ::= RelativeCoord ;
 Coordinates ::= AbsoluteCoord ;
Marker ::= markerUnits::String refX::Double refY::Double markerWidth::Double markerHeight::Double orient::String (drawing::Element)+ ;
Polygon ::= (waypoints::Point)+ markerEnd::String markerStart::String ;
GroupingElement ::= G ;
 GroupingElement ::= Defs ;
 GroupingElement ::= Symbol ;
Line ::= between::Point markerEnd::String markerStart::String ;
Text ::= lengthAdjust::String content::String ;
Transform ::= Scale ;
 Transform ::= Translate ;
 Transform ::= Rotate ;
GraphicalElement ::= Shape ;
 GraphicalElement ::= TextElement ;
Boolean ::= "true" | "false" ;
FontWeight ::= bold::Boolean ;
G ::= name::String ;
Dimension ::= width::Double height::Double ;
Path ::= pathLength::Double d::String markerEnd::String markerStart::String ;
Rect ::= rx::Double ry::Double ;
Svg ::= (owner_SVG::SvgFile)+ (children::Element)+ namespace::String version::String baseProfile::String ;
FontStyle ::= italic::Boolean ;
Shape ::= Rect ;
 Shape ::= Circle ;
 Shape ::= Ellipse ;
 Shape ::= Line ;
 Shape ::= Polyline ;
 Shape ::= Polygon ;
 Shape ::= Path ;
 Shape ::= Point ;
 Shape ::= Marker ;
--------------------markup::uiml.bgf--------------------
Call ::= name::String (params::Parameter)+ ;
Condition ::= EventCondition ;
 Condition ::= EqualCondition ;
 Condition ::= OpCondition ;
WhereKind ::= (first::ε) | (last::ε) | (before::ε) | (after::ε) ;
Event ::= class::String (parts::Part)+ ;
EqualToOperation ::= op::Operation ;
Property ::= name::String how::HowKind export::ExportKind (values::String)+ (parts::Part)+ (events::Event)+ source::Source (constants::Constant)+ (properties::Property)+ (references::Reference)+ (calls::Call)+ (iterators::Iterator)+ ;
ContentTemplate ::= content::Content ;
EqualToConstant ::= constant::Constant ;
Behavior ::= id::String how::HowKind export::ExportKind source::Source (rules::Rule)+ ;
MetaData ::= name::String content::String ;
StructureTemplate ::= structure::Structure ;
Script ::= id::String type::String how::HowKind export::ExportKind value::String source::String ;
WhenFalse ::= (properties::Property)+ (calls::Call)+ restructure::Restructure op::Operation equal::Equal event::Event ;
EqualCondition ::= equal::Equal ;
HowKind ::= (append::ε) | (cascade::ε) | (replace::ε) | (union::ε) | (delete::ε) ;
ExtensibleElement ::= Peer ;
 ExtensibleElement ::= Presentation ;
 ExtensibleElement ::= Logic ;
 ExtensibleElement ::= DComponent ;
 ExtensibleElement ::= DClass ;
 ExtensibleElement ::= DMethod ;
 ExtensibleElement ::= Script ;
 ExtensibleElement ::= Interface ;
 ExtensibleElement ::= Structure ;
 ExtensibleElement ::= Part ;
 ExtensibleElement ::= Style ;
 ExtensibleElement ::= Property ;
 ExtensibleElement ::= Content ;
 ExtensibleElement ::= Behavior ;
 ExtensibleElement ::= Constant ;
 ExtensibleElement ::= Rule ;
 ExtensibleElement ::= Restructure ;
ConstantTemplate ::= constant::Constant ;
EqualToReference ::= reference::Reference ;
TextIterator ::= value::Integer ;
Content ::= id::String how::HowKind export::ExportKind source::Source (constants::Constant)+ ;
LogicTemplate ::= logic::Logic ;
Action ::= Action_1 ;
 Action ::= Action_2 ;
 Action ::= Action_1 | Action_2 ;
PresentationTemplate ::= presentation::Presentation ;
Listener ::= class::String attacher::String ;
Structure ::= id::String how::HowKind export::ExportKind source::Source (parts::Part)+ ;
ConstantIterator ::= constant::Constant ;
EventParameter ::= event::Event ;
CallParameter ::= call::Call ;
ByDefault ::= (properties::Property)+ (calls::Call)+ restructure::Restructure op::Operation equal::Equal event::Event ;
Operation ::= name::String (constants::Constant)+ (properties::Property)+ (references::Reference)+ (calls::Call)+ (ops::Operation)+ (events::Event)+ ;
LocalSource ::= source::ExtensibleElement ;
ConstantParameter ::= constant::Constant ;
MapsTypeKind ::= (attribute::ε) | (getMethod::ε) | (setMethod::ε) | (method::ε) ;
DMethod ::= id::String how::HowKind export::ExportKind mapsTo::String returnType::String source::Source (dParams::DParam)+ script::Script ;
Constant ::= id::String how::HowKind export::ExportKind model::String value::String source::Source (constants::Constant)+ ;
Branch ::= WhenTrue ;
 Branch ::= WhenFalse ;
 Branch ::= ByDefault ;
 Branch ::= (properties::Property)+ (calls::Call)+ restructure::Restructure op::Operation equal::Equal event::Event ;
EventCondition ::= event::Event ;
ReferenceParameter ::= reference::Reference ;
Logic ::= id::String how::HowKind export::ExportKind source::Source (dComponents::DComponent)+ ;
IteratorParameter ::= iterator::Iterator ;
Repeat ::= iterator::Iterator (parts::Part)+ ;
Source ::= LocalSource ;
 Source ::= RemoteSource ;
Presentation ::= id::String how::HowKind export::ExportKind base::String source::Source (dClasses::DClass)+ ;
DProperty ::= id::String mapsType::MapsTypeKind mapsTo::String returnType::String (dMethods::DMethod)+ (dParams::DParam)+ ;
RuleTemplate ::= rule::Rule ;
PropertyParameter ::= property::Property ;
InterfaceTemplate ::= interface::Interface ;
DComponentTemplate ::= dComponent::DComponent ;
UIML ::= head::Header (templates::Template)+ (interfaces::Interface)+ (peers::Peer)+ ;
String ::= string() ;
DClassTemplate ::= dClass::DClass ;
PartTemplate ::= part::Part ;
Header ::= (metas::MetaData)+ ;
StyleTemplate ::= style::Style ;
Reference ::= constant::Constant ;
DParam ::= id::String type::String value::String ;
EqualToProperty ::= property::Property ;
OperationParameter ::= op::Operation ;
RemoteSource ::= location::String ;
Integer ::= integer() ;
PeerTemplate ::= peer::Peer ;
Rule ::= id::String how::HowKind export::ExportKind source::Source condition::Condition action::Action ;
RestructureTemplate ::= restructure::Restructure ;
Template ::= BehaviorTemplate ;
 Template ::= DClassTemplate ;
 Template ::= DComponentTemplate ;
 Template ::= ConstantTemplate ;
 Template ::= ContentTemplate ;
 Template ::= InterfaceTemplate ;
 Template ::= LogicTemplate ;
 Template ::= PartTemplate ;
 Template ::= PeerTemplate ;
 Template ::= PresentationTemplate ;
 Template ::= PropertyTemplate ;
 Template ::= RestructureTemplate ;
 Template ::= RuleTemplate ;
 Template ::= ScriptTemplate ;
 Template ::= StructureTemplate ;
 Template ::= StyleTemplate ;
OpCondition ::= op::Operation ;
Interface ::= id::String how::HowKind export::ExportKind source::Source (structure::Structure)+ (style::Style)+ (content::Content)+ (behavior::Behavior)+ ;
DComponent ::= id::String how::HowKind export::ExportKind mapsTo::String location::String source::Source (dMethods::DMethod)+ ;
Equal ::= EqualToConstant ;
 Equal ::= EqualToProperty ;
 Equal ::= EqualToReference ;
 Equal ::= EqualToOperation ;
DClass ::= id::String how::HowKind export::ExportKind mapsTo::String mapsType::String source::Source (dMethods::DMethod)+ (dProperties::DProperty)+ (events::Event)+ (listeners::Listener)+ ;
Part ::= id::String how::HowKind export::ExportKind class::String wherePart::String source::Source style::Style content::Content behavior::Behavior (parts::Part)+ (repeats::Repeat)+ ;
Style ::= id::String how::HowKind export::ExportKind source::Source (properties::Property)+ ;
PropertyTemplate ::= property::Property ;
Iterator ::= ConstantIterator ;
 Iterator ::= PropertyIterator ;
 Iterator ::= CallIterator ;
 Iterator ::= TextIterator ;
BehaviorTemplate ::= behavior::Behavior ;
CallIterator ::= call::Call ;
UsedInTagKind ::= (event::ε) | (listener::ε) | (part::ε) ;
Parameter ::= PropertyParameter ;
 Parameter ::= ReferenceParameter ;
 Parameter ::= CallParameter ;
 Parameter ::= OperationParameter ;
 Parameter ::= EventParameter ;
 Parameter ::= ConstantParameter ;
 Parameter ::= IteratorParameter ;
ExportKind ::= (hidden::ε) | (optional::ε) | (required::ε) ;
WhenTrue ::= (properties::Property)+ (calls::Call)+ restructure::Restructure op::Operation equal::Equal event::Event ;
ScriptTemplate ::= script::Script ;
PropertyIterator ::= property::Property ;
Peer ::= id::String how::HowKind export::ExportKind source::Source (presentations::Presentation)+ (logics::Logic)+ ;
Restructure ::= how::HowKind atPart::Part wherePart::Part source::Source template::Template ;
--------------------markup::wiki-mediawiki-bnf.bgf--------------------
CR ::= "\r" ;
LF ::= "\n" ;
Whitespaces ::= newline | TAB | space ;
TAB ::= "\t" ;
EOL ::= newline | EOF ;
--------------------markup::wiki-mediawiki-ebnf.bgf--------------------
URL ::= ASCII_letter* "://" URL_char* ;
Commentary ::= "<comment" Text? ">" Text? "</comment>" ;
--------------------markup::wiki-simple.bgf--------------------
WikiText ::= [wss] WikiSymbol* ;
WikiLink ::= [barred] "[[" destination::PageName "|" description::(MWWord+) "]]" ;
 WikiLink ::= [simple] "[[" destination::PageName "]]" ;
WikiSymbol ::= [w] MWWord ;
 WikiSymbol ::= [wl] WikiLink ;
--------------------markup::wiki-table.bgf--------------------
Integer ::= integer() ;
Table ::= border::Integer style::String class::String caption::Caption (rows::Row)+ ;
Row ::= (cells::Cell)+ ;
LocatedElement ::= Table ;
 LocatedElement ::= Caption ;
 LocatedElement ::= Row ;
 LocatedElement ::= Cell ;
Boolean ::= "true" | "false" ;
Caption ::= content::String ;
Cell ::= isHeading::Boolean align::String style::String content::String ;
String ::= string() ;
--------------------fl::ecore.bgf--------------------
ApplyExp ::= function::Function (argument::Exp)+ ;
LiteralExp ::= value::integer() ;
MinusExp ::= left::Exp right::Exp ;
Exp ::= LiteralExp | ArgumentExp | IfThenElseExp | ApplyExp | BinaryExp ;
Argument ::= name::string() ;
BinaryExp ::= PlusExp | MinusExp | EqualExp ;
IfThenElseExp ::= if::Exp then::Exp else::Exp ;
EqualExp ::= left::Exp right::Exp ;
Function ::= name::string() (argument::Argument)+ definition::Exp ;
Program ::= (function::Function)+ ;
PlusExp ::= left::Exp right::Exp ;
ArgumentExp ::= argument::Argument ;
--------------------fl::emf.bgf--------------------
Literal ::= info::integer() ;
ProgramType ::= (function::Function)+ ;
Apply ::= name::string() (arg::Expr)+ ;
Argument ::= name::string() ;
Function ::= name::string() (arg::string())+ rhs::Expr ;
Expr ::= Apply | Argument | Binary | IfThenElse | Literal ;
IfThenElse ::= ifExpr::Expr thenExpr::Expr elseExpr::Expr ;
Ops ::= (Equal::ε) | (Plus::ε) | (Minus::ε) ;
Binary ::= ops::Ops left::Expr right::Expr ;
--------------------fl::jaxb.bgf--------------------
Literal ::= Info::integer() ;
Apply ::= Name::string() Arg::(Expr*) ;
Argument ::= Name::string() ;
ObjectFactory ::= ε ;
Function ::= Name::string() Arg::(string()*) Rhs::Expr ;
Expr ::= Apply | Argument | Binary | IfThenElse | Literal ;
Program ::= Function::(Function*) ;
IfThenElse ::= IfExpr::Expr ThenExpr::Expr ElseExpr::Expr ;
Ops ::= (EQUAL::ε) | (PLUS::ε) | (MINUS::ε) ;
Binary ::= Ops::Ops Left::Expr Right::Expr ;
--------------------fl::om.bgf--------------------
Literal ::= info::integer() ;
Visitor ::= φ ;
Apply ::= name::string() args::(Expr*) ;
Argument ::= name::string() ;
Function ::= name::string() args::(string()*) rhs::Expr ;
Expr ::= Apply | Argument | Binary | IfThenElse | Literal ;
Program ::= functions::(Function*) ;
IfThenElse ::= ifExpr::Expr thenExpr::Expr elseExpr::Expr ;
Ops ::= (Equal::ε) | (Plus::ε) | (Minus::ε) ;
Binary ::= ops::Ops left::Expr right::Expr ;
--------------------fl::rascal-a.bgf--------------------
FLPrg ::= [prg] fs::(FLFun*) ;
FLExpr ::= (binary::(e1::FLExpr op::FLOp e2::FLExpr)) | (apply::(f::string() vargs::(FLExpr*))) | (ifThenElse::(c::FLExpr t::FLExpr e::FLExpr)) | (argument::(a::string())) | (literal::(i::integer())) ;
FLFun ::= [fun] f::string() args::(str*) body::FLExpr ;
FLOp ::= (minus::ε) | (plus::ε) | (equal::ε) ;
--------------------fl::rascal-c.bgf--------------------
Function ::= [fun] f::Name args::(Name+) "=" body::Expr ;
Expr ::= [ifThenElse] "if" cond::Expr "then" thenbranch::Expr "else" elsebranch::Expr ;
 Expr ::= "(" e::Expr ")" ;
 Expr ::= [literal] i::Int ;
 Expr ::= [argument] a::Name ;
 Expr ::= [binary] lexpr::Expr op::Ops rexpr::Expr ;
 Expr ::= [apply] f::Name vargs::(Expr+) ;
Program ::= [prg] functions::({Function "\n"}+) ;
Ops ::= [plus] "+" ;
 Ops ::= [equal] "==" ;
 Ops ::= [minus] "-" ;
--------------------fl::rascal.bgf--------------------
Function ::= Name Name+ "=" Expr Newline ;
Expr ::= [binary] Expr Ops Expr ;
 Expr ::= [apply] Name Expr+ ;
 Expr ::= [ifThenElse] "if" Expr "then" Expr "else" Expr ;
 Expr ::= "(" Expr ")" ;
 Expr ::= [argument] Name ;
 Expr ::= [literal] Int ;
Program ::= Function+ ε ;
Ops ::= [minus] "-" ;
 Ops ::= [plus] "+" ;
 Ops ::= [equal] "==" ;
--------------------fl::sdf.bgf--------------------
Function ::= Name Name+ "=" Expr Newline+ ;
Expr ::= [binary] Expr Ops Expr ;
 Expr ::= [apply] Name Expr+ ;
 Expr ::= [ifThenElse] "if" Expr "then" Expr "else" Expr ;
 Expr ::= "(" Expr ")" ;
 Expr ::= [argument] Name ;
 Expr ::= [literal] Int ;
Program ::= Function+ ;
Ops ::= [minus] "-" ;
 Ops ::= [plus] "+" ;
 Ops ::= [equal] "==" ;
--------------------fl::xsd.bgf--------------------
Literal ::= info::integer() ;
Apply ::= name::string() (arg::Expr)+ ;
Argument ::= name::string() ;
Function ::= name::string() (arg::string())+ rhs::Expr ;
Expr ::= Literal | Argument | Binary | IfThenElse | Apply ;
Program ::= (function::Function)+ ;
IfThenElse ::= ifExpr::Expr thenExpr::Expr elseExpr::Expr ;
Ops ::= (Equal::ε) | (Plus::ε) | (Minus::ε) ;
Binary ::= ops::Ops left::Expr right::Expr ;
Fragment ::= Expr ;
--------------------metasyntax::bnf-sdf.bgf--------------------
Terminal ::= string() ;
Element ::= NonTerminal | Terminal | ("[" Element ("|" Element)* "]") | ("{" Element ("|" Element)* "}") | "|" | "[" | "]" | "{" | "}" | "<" | ">" | "..." | "::=" | (Element Element) ;
Rule ::= NonTerminal "::=" Elements ;
NonTerminal ::= "<" string() ">" ;
Elements ::= Element ("|" Element)* ;
Rules ::= Rule* ;
--------------------metasyntax::txl.bgf--------------------
RESET ::= EX EX EX EX EX EX EX EX EX ;
NEWoptNL ::= NL ;
--------------------metasyntax::ebnf-iso-3.bgf--------------------
COMMENT ::= "(*" COMMENT_SYMBOL* "*)" ;
FACTOR ::= (INTEGER "*")? PRIMARY ;
EXCEPTION ::= FACTOR ;
INTEGER ::= DIGIT+ ;
EMPTY ::= ε ;
TERMINAL ::= ("’" CHARACTER+ "’") | (""" CHARACTER+ """) ;
TERM ::= FACTOR ("-" EXCEPTION)? ;
SYNTAX ::= SYNTAX_RULE+ ;
PRIMARY ::= OPTIONAL_SEQUENCE | REPEATED_SEQUENCE | SPECIAL_SEQUENCE | GROUPED_SEQUENCE | META_IDENTIFIER | TERMINAL | EMPTY ;
--------------------metasyntax::ebnf-sdf.bgf--------------------
Rule ::= IdCon "::=" Expression ;
Expression ::= IdCon | String | ("(" Expression ")") | (Expression "?") | (Expression "*") | (Expression "+") | (Expression "|" Expression) | (Expression Expression) ;
IdCon ::= string() ;
Grammar ::= Rule* ;
String ::= """ string() """ ;
--------------------metasyntax::xsd-guyard.bgf--------------------
ApplicationInfo ::= text::String ;
Attribute ::= use::AttributeUseType (references::AttributeRef)+ ;
XSchemaContentElement ::= Parameters ;
 XSchemaContentElement ::= AbstractType ;
 XSchemaContentElement ::= Group ;
 XSchemaContentElement ::= AttributeGroup ;
AttributeRef ::= referencedAttribute::Attribute ;
AnnotedElement ::= NamedElement ;
 AnnotedElement ::= XSchema ;
GroupRef ::= referencedGroup::Group ;
ComplexTypeComplexContent ::= base::ComplexType ;
String ::= string() ;
AttributeGroupRef ::= referencedAttributeGroup::AttributeGroup ;
AtomicContent ::= ElementRef ;
 AtomicContent ::= GroupRef ;
 AtomicContent ::= Element ;
SimpleType ::= (extensions::ComplexTypeSimpleContent)+ ;
AtomicAttributeGroupContent ::= AttributeGroupRef ;
 AtomicAttributeGroupContent ::= AttributeRef ;
 AtomicAttributeGroupContent ::= Attribute ;
ComplexType ::= ComplexTypeSimpleContent ;
 ComplexType ::= ComplexTypeComplexContent ;
 ComplexType ::= (extensions::ComplexTypeComplexContent)+ content::AbstractContent (attributes::AbstractAttributeGroupContent)+ ;
Occurable ::= AbstractContent ;
 Occurable ::= AbstractAttributeGroupContent ;
AttributeGroup ::= (contents::AbstractAttributeGroupContent)+ (references::AttributeGroupRef)+ ;
NamedElement ::= XSchemaContentElement ;
Sequence ::= (contents::AbstractContent)+ ;
Container ::= All ;
 Container ::= Choice ;
 Container ::= Sequence ;
 Container ::= Group ;
Group ::= (references::GroupRef)+ ;
Integer ::= integer() ;
ComplexTypeSimpleContent ::= base::SimpleType ;
Element ::= (references::ElementRef)+ ;
AbstractType ::= SimpleType ;
 AbstractType ::= ComplexType ;
Documentation ::= text::String ;
XSchema ::= namespace::String (contents::XSchemaContentElement)+ ;
AbstractContent ::= Container ;
 AbstractContent ::= AtomicContent ;
ElementRef ::= referencedElement::Element ;
AbstractAttributeGroupContent ::= AtomicAttributeGroupContent ;
 AbstractAttributeGroupContent ::= AttributeGroup ;
Annotation ::= (documentations::Documentation)+ (applicationInfos::ApplicationInfo)+ annotedElement::AnnotedElement ;
Parameters ::= Element ;
 Parameters ::= Attribute ;
Boolean ::= "true" | "false" ;
AttributeUseType ::= (null::ε) | (optional::ε) | (prohibited::ε) | (required::ε) ;
All ::= (contents::AbstractContent)+ ;
Choice ::= (contents::AbstractContent)+ ;
--------------------metasyntax::yacc-sdf.bgf--------------------
Rule ::= NonTerminal ":" (Expression? ("|" Expression?)*)? ";" ;
Expression ::= Terminal | NonTerminal | Literal | ("%prec" Terminal) | C-code | (Expression Expression) ;
Grammar ::= C-declarations Yacc-declarations "%%" Grammar-rules "%%" Extra-C-code ;
--------------------metasyntax::s-expressions.bgf--------------------
List ::= "(" SExp* ")" ;
HexaDecimal ::= "#" HexDigit* "#" ;
SExp ::= [list] List ;
 SExp ::= [string] String ;
SimpleString ::= [raw] Raw ;
 SimpleString ::= [base64] Base64 ;
 SimpleString ::= [hex] HexaDecimal ;
 SimpleString ::= [token] Token ;
 SimpleString ::= [quoted] QuotedString ;
Display ::= "[" SimpleString "]" ;
String ::= [display] Display SimpleString ;
 String ::= [simple] SimpleString ;
--------------------metasyntax::yacc-txl.bgf--------------------
Cdefinitions ::= endSection token* ;
Ccode ::= "{" Ccode_or_token* "}" ;
--------------------metasyntax::aterms-rascal.bgf--------------------
Annotation ::= [Default] "{" {ATerm ","}+ "}" ;
AFun ::= [Quoted] StrCon ;
 AFun ::= [Unquoted] IdCon ;
ATerm ::= [Appl] AFun "(" {ATerm ","}+ ")" ;
 ATerm ::= [Real] RealCon ;
 ATerm ::= [List] "[" {ATerm ","}* "]" ;
 ATerm ::= [Annotated] ATerm Annotation ;
 ATerm ::= [Placeholder] "<" ATerm ">" ;
 ATerm ::= [Int] IntCon ;
 ATerm ::= [Fun] AFun ;
OptExp ::= [Present] "e" IntCon ;
 OptExp ::= [Absent] ε ;
RealCon ::= [RealCon] IntCon "." NatCon OptExp ;
IntCon ::= [Positive] "+" NatCon ;
 IntCon ::= [Natural] NatCon ;
 IntCon ::= [Negative] "-" NatCon ;
--------------------metasyntax::box-rascal.bgf--------------------
Context ::= "H" ;
 Context ::= "V" ;
BoxOperator ::= "HOV" options::(SpaceOption*) ;
 BoxOperator ::= "WD" ;
 BoxOperator ::= "A" alignments::AlignmentOptions options::(SpaceOption*) ;
 BoxOperator ::= "HV" options::(SpaceOption*) ;
 BoxOperator ::= "R" ;
 BoxOperator ::= "H" options::(SpaceOption*) ;
 BoxOperator ::= "I" options::(SpaceOption*) ;
 BoxOperator ::= "V" options::(SpaceOption*) ;
SpaceSymbol ::= "vs" ;
 SpaceSymbol ::= "ts" ;
 SpaceSymbol ::= "hs" ;
 SpaceSymbol ::= "is" ;
Boxx ::= "REF" "[" StrCon "," Boxx "]" ;
 Boxx ::= "LBL" "[" StrCon "," Boxx "]" ;
 Boxx ::= operator::BoxOperator "[" list::(Boxx*) "]" ;
 Boxx ::= StrCon ;
 Boxx ::= "CNT" "[" StrCon "," StrCon "]" ;
 Boxx ::= operator::FontOperator "[" list::(Boxx*) "]" ;
AlignmentOptions ::= "(" {AlignmentOption ","}* ")" ;
SpaceOption ::= SpaceSymbol "=" NatCon ;
Main ::= Boxx WhitespaceAndComment* ;
AlignmentOption ::= "r" options::(SpaceOption*) ;
 AlignmentOption ::= "l" options::(SpaceOption*) ;
 AlignmentOption ::= "c" options::(SpaceOption*) ;
GroupOption ::= "gs" "=" NatCon ;
 GroupOption ::= "op" "=" BoxOperator ;
FontOperator ::= "VAR" ;
 FontOperator ::= "MATH" ;
 FontOperator ::= "COMM" ;
 FontOperator ::= "KW" ;
 FontOperator ::= "NUM" ;
 FontOperator ::= "ESC" ;
 FontOperator ::= "STRING" ;
--------------------metasyntax::sdf-rascal.bgf--------------------
AFun ::= [Quoted] StrCon ;
 AFun ::= [Unquoted] ε ;
Attribute ::= [Term] ATermAttribute ;
 Attribute ::= [Assoc] Assoc ;
 Attribute ::= [Bracket] "bracket" ;
 Attribute ::= [Id] "id" "(" ModuleName ")" ;
 Attribute ::= [Avoid] "avoid" ;
 Attribute ::= [Prefer] "prefer" ;
 Attribute ::= [Reject] "reject" ;
Renamings ::= [Renamings] "[" Renaming* "]" ;
ModuleName ::= [Parameterized] id::ModuleId "[" actuals::Syms "]" ;
 ModuleName ::= [Unparameterized] ε ;
Prod ::= [Prod] Syms "->" Sym Attrs ;
Assoc ::= [NonAssoc] "non-assoc" ;
 Assoc ::= [Assoc] "assoc" ;
 Assoc ::= [Left] "left" ;
 Assoc ::= [Right] "right" ;
Definition ::= [modules] Module* ;
IntCon ::= [Negative] "-" NatCon ;
 IntCon ::= [Natural] NatCon ;
 IntCon ::= [Positive] "+" NatCon ;
ArgumentIndicator ::= [Default] "<" {NatCon ","}+ ">" ;
Alias ::= [Alias] Sym "->" Sym ;
Restriction ::= [Follow] Syms "-/-" Lookaheads ;
Syms ::= Sym* ;
Sym ::= [Empty] "(" ")" ;
 Sym ::= [Lit] StrCon ;
 Sym ::= [Opt] Sym "?" ;
 Sym ::= [Seq] "(" Sym Sym+ ")" ;
 Sym ::= [Bracket] "(" Sym ")" ;
 Sym ::= [CILit] SingleQuotedStrCon ;
 Sym ::= [Varsym] "<" Sym "-VAR" ">" ;
 Sym ::= [Sort] Sort ;
 Sym ::= [Lex] "<" Sym "-LEX" ">" ;
 Sym ::= [Layout] "LAYOUT" ;
 Sym ::= [CF] "<" Sym "-CF" ">" ;
 Sym ::= [ParameterizedSort] Sort "[[" {Sym ","}+ "]]" ;
 Sym ::= [IterStar] Sym "*" ;
 Sym ::= [IterStarSep] "{" Sym Sym "}" "*" ;
 Sym ::= [Iter] Sym "+" ;
 Sym ::= [Class] Class ;
 Sym ::= [IterSep] "{" Sym Sym "}" "+" ;
 Sym ::= [Alt] Sym "|" Sym ;
 Sym ::= [Label] Label ":" Sym ;
RealCon ::= [RealCon] IntCon "." NatCon OptExp ;
FunctionName ::= [QuotedFun] StrCon ;
 FunctionName ::= [UnquotedFun] IdCon ;
Lookahead ::= [Class] class::Class ;
 Lookahead ::= [Seq] class::Class "." las::Lookaheads ;
Priorities ::= {Priority ","}* ;
Group ::= [NonTransitive] Group "." ;
 Group ::= [AssocGroup] "{" Assoc ":" Prods "}" ;
 Group ::= [WithArguments] Group ArgumentIndicator ;
 Group ::= [SimpleGroup] Prod ;
 Group ::= [ProdsGroup] "{" Prods "}" ;
Aliases ::= Alias* ;
Range ::= [Range] Character "-" Character ;
 Range ::= Character ;
Prods ::= Prod* ;
Renaming ::= [production] Prod "=>" Prod ;
 Renaming ::= [Sym] Sym "=>" Sym ;
ImpSection ::= [Imports] "imports" Imports ;
Class ::= [SimpleCharClass] "[" Range* "]" ;
 Class ::= [Bracket] "(" Class ")" ;
 Class ::= [Comp] "~" Class ;
 Class ::= [Diff] Class "/" Class ;
 Class ::= [ISect] Class "/\" Class ;
 Class ::= [Union] Class "\/" Class ;
SDF ::= [Definition] "definition" def::Definition ;
Label ::= [IdCon] ε ;
 Label ::= [Quoted] StrCon ;
Lookaheads ::= [Single] Lookahead ;
 Lookaheads ::= [Alt] Lookaheads "|" Lookaheads ;
 Lookaheads ::= [List] "[[" {Lookahead ","}* "]]" ;
 Lookaheads ::= [Bracket] "(" Lookaheads ")" ;
ATermAttribute ::= [Default] ε ;
Annotation ::= [Default] "{" {ATerm ","}+ "}" ;
Sections ::= Section* ;
Imports ::= Import* ;
ATerm ::= [Real] RealCon ;
 ATerm ::= [Appl] AFun "(" {ATerm ","}+ ")" ;
 ATerm ::= [Annotated] ATerm Annotation ;
 ATerm ::= [Placeholder] "<" ATerm ">" ;
 ATerm ::= [Int] IntCon ;
 ATerm ::= [Fun] AFun ;
 ATerm ::= [List] "[" {ATerm ","}* "]" ;
Module ::= [Module] "module" ModuleName ImpSection* Sections ;
OptExp ::= [Present] "e" IntCon ;
 OptExp ::= [Absent] ε ;
Character ::= [eof] "\EOF" ;
 Character ::= [short] ShortChar ;
 Character ::= [Numeric] NumChar ;
 Character ::= [top] "\TOP" ;
 Character ::= [label_start] "\LABEL_START" ;
 Character ::= [bot] "\BOT" ;
Restrictions ::= [Default] Restriction* ;
Grammar ::= [ContextFreePriorities] "context-free" "priorities" Priorities ;
 Grammar ::= [ImpSection] ImpSection ;
 Grammar ::= [KernalStartSyms] "start-symbols" Syms ;
 Grammar ::= [Aliases] "aliases" Aliases ;
 Grammar ::= [Variables] "variables" Prods ;
 Grammar ::= [ContextFreeSyntax] "context-free" "syntax" Prods ;
 Grammar ::= [LexicalRestrictions] "lexical" "restrictions" Restrictions ;
 Grammar ::= [Sorts] "sorts" Syms ;
 Grammar ::= [ContextFreeStartSyms] "context-free" "start-symbols" Syms ;
 Grammar ::= [Syntax] "syntax" Prods ;
 Grammar ::= [Restrictions] "restrictions" Restrictions ;
 Grammar ::= [Priorities] "priorities" Priorities ;
 Grammar ::= [LexicalStartSyms] "lexical" "start-symbols" Syms ;
 Grammar ::= [LexicalVariables] "lexical" "variables" Prods ;
 Grammar ::= [ContextFreeRestrictions] "context-free" "restrictions" Restrictions ;
 Grammar ::= [LexicalPriorities] "lexical" "priorities" Priorities ;
 Grammar ::= [LexicalSyntax] "lexical" "syntax" Prods ;
Import ::= [Bracket] "(" Import ")" ;
 Import ::= [Module] ModuleName ;
 Import ::= [RenamedModule] ModuleName Renamings ;
Section ::= [Exports] "exports" Grammar* ;
 Section ::= [Hiddens] "hiddens" Grammar* ;
Priority ::= [Chain] {Group ">"}+ ;
 Priority ::= [Assoc] Group Assoc Group ;
Attrs ::= [Attrs] "{" {Attribute ","}* "}" ;
 Attrs ::= [NoAttrs] ε ;
--------------------tescol::00000.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
COLON ::= ":" ;
EQUALS ::= "==" ;
SKIP ::= "skip" ;
LTE ::= "<=" ;
ELSE ::= "else" ;
GTE ::= ">=" ;
LPAR ::= "(" ;
COMMA ::= "," ;
DOUWORD ::= "double" ;
CONJUNCT ::= "/\\" ;
EXPO ::= "**" ;
DIV ::= "/" ;
RPAR ::= ")" ;
ASSIGN ::= COLON "=" ;
SEMI ::= ";" ;
GT ::= ">" ;
DISJUNCT ::= "\\/" ;
SUB ::= "-" ;
NOTEQ ::= "!=" ;
CONTAINS ::= "contains" ;
CONSTID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
QMARK ::= "?" ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
INTWORD ::= "int" ;
MULTI ::= "*" ;
PROC ::= "proc" ;
DOUBLE ::= INT? "." ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ("e" | "E" ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+)? ;
WHILE ::= "while" ;
INT ::= ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
DO ::= "do" ;
LT ::= "<" ;
LBRACE ::= "{" ;
VAR ::= "var" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
ADD ::= "+" ;
RBRACE ::= "}" ;
--------------------tescol::00001.bgf--------------------
SKIP ::= "skip" ;
COMMENT ::= "/*" α* "*/" ;
COLON ::= ":" ;
LTE ::= "<=" ;
EXP ::= "**" ;
NEQ ::= "!=" ;
MIXFIX ::= "?" ;
ELSE ::= "else" ;
GTE ::= ">=" ;
DIV ::= "/" ;
SEMI ::= ";" ;
OCB ::= "{" ;
GT ::= ">" ;
EQ ::= "==" ;
CONJ ::= "/\\" ;
CCB ::= "}" ;
COM ::= "," ;
CONTAINS ::= "contains" ;
CID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
CPAR ::= ")" ;
IF ::= "if" ;
THEN ::= "then" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
DISJ ::= "\\/" ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
PLUS ::= "+" ;
MULTI ::= "*" ;
INTG ::= ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
PROC ::= "proc" ;
OPAR ::= "(" ;
WHILE ::= "while" ;
DOUBLE ::= ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* "." ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* ("e" | "E" INTG)? ;
MINUS ::= "-" ;
TYPEI ::= "int" ;
DO ::= "do" ;
TYPED ::= "double" ;
LT ::= "<" ;
ASSI ::= ":=" ;
VAR ::= "var" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
--------------------tescol::00010.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
SKIP ::= "skip" ;
COLON ::= ":" ;
CONDITION ::= "?" ;
DIVIDE ::= "/" ;
ELSE ::= "else" ;
EXPONENTIATE ::= "**" ;
AND ::= "/\\" ;
LPAR ::= "(" ;
COMMA ::= "," ;
RPAR ::= ")" ;
EXPONENT ::= "e" | "E" ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
SEMI ::= ";" ;
MULTIPLY ::= "*" ;
OR ::= "\\/" ;
CONTAINS ::= "contains" ;
IF ::= "if" ;
THEN ::= "then" ;
WS ::= (" " | "\t" | "\r" | "\n" | "\u000C")+ ;
GREATER ::= ">" ;
PLUS ::= "+" ;
LESS ::= "<" ;
PROC ::= "proc" ;
EQUAL ::= "==" ;
DOUBLE ::= DIGIT* "." DIGIT* EXPONENT? ;
WHILE ::= "while" ;
MINUS ::= "-" ;
INT ::= DIGIT+ ;
DIGIT ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;
DO ::= "do" ;
VAR ::= "var" ;
CHECKOUT ::= "checkout" ;
RCURLYPAR ::= "}" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
LCURLYPAR ::= "{" ;
--------------------tescol::00011.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
SKIP ::= "skip" ;
OPARAN ::= "(" ;
COLON ::= ":" ;
EXP ::= "**" ;
ADDITION ::= "+" ;
ELSE ::= "else" ;
MIXFIX ::= "?" ;
CONJUNCTION ::= "/\\" ;
COMMA ::= "," ;
CBRACE ::= "}" ;
ASSIGN ::= ":=" ;
SEMI ::= ";" ;
DIVISION ::= "/" ;
MULTIPLY ::= "*" ;
OBRACE ::= "{" ;
MOREEQUAL ::= ">=" ;
CONTAINS ::= "contains" ;
CONSTID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
LESSEQUAL ::= "<=" ;
LESS ::= "<" ;
PROC ::= "proc" ;
MORE ::= ">" ;
SUBTRACT ::= "-" ;
EQUAL ::= "==" ;
DOUBLE ::= INT? "." ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* ("e" INT)? ;
WHILE ::= "while" ;
INT ::= ("+" | "-")? "0" | ("1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")*) ;
DOUBLETYPE ::= "double" ;
DO ::= "do" ;
CPARAN ::= ")" ;
INTTYPE ::= "int" ;
VAR ::= "var" ;
NONEQUAL ::= "!=" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
DISJUNCTION ::= "\\/" ;
--------------------tescol::00100.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
SKIP ::= "skip" ;
COLON ::= ":" ;
ADDITION ::= "+" ;
EQUALITY ::= "==" ;
ELSE ::= "else" ;
CONJUNCTION ::= "/\\" ;
COMMA ::= "," ;
SEMI ::= ";" ;
DIVISION ::= "/" ;
QUESTION ::= "?" ;
CONTAINS ::= "contains" ;
CID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
LPAREN ::= "(" ;
IF ::= "if" ;
THEN ::= "then" ;
EOF ::= ε ;
WS ::= (" " | "\t" | "\r" | "\n" | "\f")+ ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
EXPONENTIATION ::= "**" ;
GREATER ::= ">" ;
LESS ::= "<" ;
RPAREN ::= ")" ;
PROC ::= "proc" ;
SUBTRACTION ::= "-" ;
DOUBLE ::= "double" ;
WHILE ::= "while" ;
INT ::= "int" ;
DO ::= "do" ;
LBRACE ::= "{" ;
VAR ::= "var" ;
MULTIPLICATION ::= "*" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
DISJUNCTION ::= "\\/" ;
RBRACE ::= "}" ;
--------------------tescol::00101.bgf--------------------
SKIP ::= "skip" ;
COLON ::= ":" ;
ADDITION ::= "+" ;
EQUALITY ::= "==" ;
ELSE ::= "else" ;
MIXFIX ::= "?" ;
AND ::= "/\\" ;
OPENPAR ::= "(" ;
OPENCURL ::= "{" ;
COMMA ::= "," ;
DIVISION ::= "/" ;
CLOSEPAR ::= ")" ;
EXPONENTIAL ::= "**" ;
OR ::= "\\/" ;
CONTAINS ::= "contains" ;
CONSTID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
INTEGER ::= "int" ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
DEFINEDAS ::= ":=" ;
PROC ::= "proc" ;
SUBTRACTION ::= "-" ;
DOUBLE ::= "double" ;
WHILE ::= "while" ;
SEMICOLON ::= ";" ;
DO ::= "do" ;
VAR ::= "var" ;
CHECKOUT ::= "checkout" ;
MULTIPLICATION ::= "*" ;
TROLLEY ::= "trolley" ;
CLOSECURL ::= "}" ;
CONST ::= "const" ;
DONE ::= "done" ;
--------------------tescol::00110.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
SKIP ::= "skip" ;
COLON ::= ":" ;
EQUALITY ::= "==" ;
TYPE ::= "int" | "double" ;
ELSE ::= "else" ;
EXPR ::= "expr" ;
COMMA ::= "," ;
VARDECL ::= "vardecl" ;
DIV ::= "/" ;
MULT ::= "*" ;
TESCO ::= "tesco" ;
SEMI ::= ";" ;
CONSTDECL ::= "constdecl" ;
PARAM ::= "param" ;
PROCAPP ::= "procApp" ;
CONJ ::= "/\\" ;
DISJUNCT ::= "\\/" ;
COND ::= "cond" ;
BODY ::= "body" ;
CONTAINS ::= "contains" ;
INTEGER ::= ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= " " | "\t" | "\f" | "\r\n" | "\r" | "\n" ;
EXPON ::= "**" ;
PLUS ::= "+" ;
IFELSE ::= "ifelse" ;
PROC ::= "proc" ;
EQUAL ::= "=" ;
DOUBLE ::= INTEGER? "." ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* ("e" | "E" INTEGER)? ;
WHILE ::= "while" ;
MINUS ::= "-" ;
DO ::= "do" ;
VAR ::= "var" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
PROCDECL ::= "procdecl" ;
--------------------tescol::00111.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
SKIP ::= "skip" ;
COLON ::= ":" ;
ADDITION ::= "+" ;
EQUALITY ::= "==" ;
ELSE ::= "else" ;
CONJUNCTION ::= "/\\" ;
COMMA ::= "," ;
NEWLINE ::= "\r"? "\n" ;
SEMI ::= ";" ;
DIVISION ::= "/" ;
QUESTION ::= "?" ;
CONTAINS ::= "contains" ;
CID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
LPAREN ::= "(" ;
IF ::= "if" ;
THEN ::= "then" ;
WS ::= " " | "\r" | "\t" | "\u000C" ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
EXPONENTIATION ::= "**" ;
GREATER ::= ">" ;
LESS ::= "<" ;
RPAREN ::= ")" ;
PROC ::= "proc" ;
SUBTRACTION ::= "-" ;
DOUBLE ::= "double" ;
WHILE ::= "while" ;
INT ::= "int" ;
DO ::= "do" ;
LBRACE ::= "{" ;
VAR ::= "var" ;
MULTIPLICATION ::= "*" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
DISJUNCTION ::= "\\/" ;
RBRACE ::= "}" ;
--------------------tescol::01000.bgf--------------------
SKIP ::= "skip" ;
COMMENT ::= "/*" α* "*/" ;
LTE ::= "<=" ;
EXP ::= "**" ;
NEQ ::= "!=" ;
ELSE ::= "else" ;
GTE ::= ">=" ;
INTNUM ::= ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
COMMA ::= "," ;
DIV ::= "/" ;
MULT ::= "*" ;
SEMI ::= ";" ;
GT ::= ">" ;
EQ ::= "==" ;
CONJ ::= "/\\" ;
DEF ::= ":=" ;
VARID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
COL ::= ":" ;
SUB ::= "-" ;
CONTAINS ::= "contains" ;
CONSTID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
THEN ::= "then" ;
IF ::= "if" ;
DISJ ::= "\\/" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
PROC ::= "proc" ;
QUES ::= "?" ;
WHILE ::= "while" ;
DOUBLE ::= "double" ;
INT ::= "int" ;
DOUBNUM ::= INTNUM? "." ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* ("e" | "E" INTNUM)? ;
LBRACK ::= "(" ;
DO ::= "do" ;
LT ::= "<" ;
RCBRACK ::= "}" ;
RBRACK ::= ")" ;
VAR ::= "var" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
LCBRACK ::= "{" ;
DONE ::= "done" ;
ADD ::= "+" ;
--------------------tescol::01001.bgf--------------------
SKIP ::= "skip" ;
COLON ::= ":" ;
EXP ::= "**" ;
NEQ ::= "!=" ;
ELSE ::= "else" ;
GRTEQ ::= ">=" ;
COMMA ::= "," ;
DIV ::= "/" ;
MULT ::= "*" ;
SEMI ::= ";" ;
EQ ::= "==" ;
CONJ ::= "/\\" ;
DEF ::= ":=" ;
COM ::= "/*" α* "*/" ;
CONTAINS ::= "contains" ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
DISJ ::= "\\/" ;
PLUS ::= "+" ;
LESS ::= "<" ;
CLOSE ::= ")" ;
PROC ::= "proc" ;
DOUBLE ::= "double" ;
WHILE ::= "while" ;
MINUS ::= "-" ;
INT ::= "int" ;
DO ::= "do" ;
OPEN ::= "(" ;
GRT ::= ">" ;
VAR ::= "var" ;
CHECKOUT ::= "checkout" ;
LESSEQ ::= "<=" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
QUEST ::= "?" ;
STST ::= "{" ;
DONE ::= "done" ;
STED ::= "}" ;
--------------------tescol::01010.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
SKIP ::= "skip" ;
COLON ::= ":" ;
RCURL ::= "}" ;
INUM ::= ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
EXP ::= "**" ;
ADDITION ::= "+" " " | "\t" | "\r" | "\n" | COMMENT ;
ELSE ::= "else" ;
POSITIVE ::= "+" ;
LCURL ::= "{" ;
LSTE ::= "<=" ;
AND ::= "/\\" ;
NEGATIVE ::= "-" ;
COMMA ::= "," ;
RPARA ::= ")" ;
DIV ::= "/" ;
ASSIGN ::= ":=" ;
SEMI ::= ";" ;
LST ::= "<" ;
LPARA ::= "(" ;
NUM ::= INUM? "." INUM? ("e" | "E" (POSITIVE | NEGATIVE)? INUM)? ;
MUL ::= "*" ;
OR ::= "\\/" ;
EQL ::= "==" ;
CONTAINS ::= "contains" ;
CONSTID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
THEN ::= "then" ;
IF ::= "if" ;
EOF ::= ε ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
GRTE ::= ">=" ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
PROC ::= "proc" ;
SUBTRACTION ::= "-" " " | "\t" | "\r" | "\n" | COMMENT ;
NEQL ::= "!=" ;
DOUBLE ::= "double" ;
WHILE ::= "while" ;
INT ::= "int" ;
DO ::= "do" ;
GRT ::= ">" ;
VAR ::= "var" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
QUEST ::= "?" ;
--------------------tescol::01011.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
SKIP ::= "skip" ;
COLON ::= ":" ;
VARIABLE ::= "var" ;
EQUALITY ::= "==" ;
ELSE ::= "else" ;
COMMA ::= "," ;
PROCEDURE ::= "proc" ;
EXPO ::= "**" ;
ASSIGN ::= ":=" ;
MTHAN ::= ">" ;
SEMI ::= ";" ;
LTHAN ::= "<" ;
CONJ ::= "/\\" ;
MEQUAL ::= ">=" ;
INUMB ::= ("+" | "-")? "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* ;
CONSTANT ::= "const" ;
DNUMB ::= ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* "." "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* ("e" "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")*)? ;
CONTAINS ::= "contains" ;
THEN ::= "then" ;
IF ::= "if" ;
EOF ::= ε ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
DISJ ::= "\\/" ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
DIVIS ::= "/" ;
PLUS ::= "+" ;
MULTI ::= "*" ;
WHILE ::= "while" ;
DOUBLE ::= "double" ;
MINUS ::= "-" ;
INT ::= "int" ;
LBRACK ::= "(" ;
DO ::= "do" ;
LEQUAL ::= "<=" ;
LBRACE ::= "{" ;
RBRACK ::= ")" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
DONE ::= "done" ;
NOTEQUAL ::= "!=" ;
RBRACE ::= "}" ;
--------------------tescol::01100.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
COLON ::= ":" ;
ADDITION ::= "+" ;
DEFINE ::= ":=" ;
SKIPTOKEN ::= "skip" ;
EQUALITY ::= "==" ;
RIGHTPARENTHESIS ::= ")" ;
ELSE ::= "else" ;
CONJUNCTION ::= "/\\" ;
PROCEDURE ::= "proc" ;
QUESTIONMARK ::= "?" ;
RIGHTCURLY ::= "}" ;
EXPONENT ::= "**" ;
DIVISION ::= "/" ;
NONEQUALITY ::= "!=" ;
SUBSTRACTION ::= "-" ;
CONTAINS ::= "contains" ;
CONSTID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
DIFFERENTOREQUAL ::= "<=" | ">=" ;
TYPEINT ::= "int" ;
WHILE ::= "while" ;
DOUBLE ::= INT? "." ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* ("E" | "e" (ADDITION | SUBSTRACTION)? INT)? ;
SEMICOLON ::= ";" ;
INT ::= ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
LEFTPARENTHESIS ::= "(" ;
TYPEDOUBLE ::= "double" ;
DO ::= "do" ;
VAR ::= "var" ;
CHECKOUT ::= "checkout" ;
LEFTCURLY ::= "{" ;
MULTIPLICATION ::= "*" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
STRICTLYDIFFERENT ::= "<" | ">" ;
DONE ::= "done" ;
DISJUNCTION ::= "\\/" ;
COMA ::= "," ;
--------------------tescol::01101.bgf--------------------
SKIP ::= "skip" ;
COMMENT ::= BEGINCOMMENT α* ENDCOMMENT ;
COLON ::= ":" ;
OPENBRACKET ::= "{" ;
EXP ::= "**" ;
EQUALITY ::= "==" ;
TYPE ::= "int" | "double" ;
ELSE ::= "else" ;
CONJUNCTION ::= "/\\" ;
LESSTHEN ::= "<" ;
COMMA ::= "," ;
PROCEDURE ::= "proc" ;
MORETHEN ::= ">" ;
DIV ::= "/" ;
SEMI ::= ";" ;
OPENPARENTHESIS ::= "(" ;
BECOMES ::= ":=" ;
TROLLY ::= "trolly" ;
NONEQUALITY ::= "!=" ;
ENDCOMMENT ::= "*/" ;
MUL ::= "*" ;
CONSTANT ::= "const" ;
SUB ::= "-" ;
CONTAINS ::= "contains" ;
CID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
CLOSEDBRACKET ::= "}" ;
MOREOREQUAL ::= ">=" ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
LESSOREQUAL ::= "<=" ;
BEGINCOMMENT ::= "/*" ;
WHILE ::= "while" ;
DOUBLE ::= INT? "." ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* ("e" | "E" (ADD | SUB)? INT)? ;
INT ::= ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
DO ::= "do" ;
CLOSEDPARENTHESIS ::= ")" ;
VAR ::= "var" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
DISJUNCTION ::= "\\/" ;
DONE ::= "done" ;
ADD ::= "+" ;
--------------------tescol::01110.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
SKIP ::= "skip" ;
COLON ::= ":" ;
ADDITION ::= "+" ;
EQUALITY ::= "==" ;
ELSE ::= "else" ;
CONJUNCTION ::= "/\\" ;
COMMA ::= "," ;
SEMI ::= ";" ;
DIVISION ::= "/" ;
QUESTION ::= "?" ;
CONTAINS ::= "contains" ;
CID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
LPAREN ::= "(" ;
IF ::= "if" ;
THEN ::= "then" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
EXPONENTIATION ::= "**" ;
GREATER ::= ">" ;
LESS ::= "<" ;
RPAREN ::= ")" ;
PROC ::= "proc" ;
SUBTRACTION ::= "-" ;
DOUBLE ::= "double" ;
WHILE ::= "while" ;
INT ::= "int" ;
DO ::= "do" ;
LBRACE ::= "{" ;
VAR ::= "var" ;
MULTIPLICATION ::= "*" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
DISJUNCTION ::= "\\/" ;
RBRACE ::= "}" ;
--------------------tescol::01111.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
SKIP ::= "skip" ;
COLON ::= ":" ;
ADDITION ::= "+" ;
GREATERTHAN ::= ">" ;
LESSTHAN ::= "<" ;
EQUALITY ::= "==" ;
ELSE ::= "else" ;
UNDER ::= "_" ;
CONJUNCTION ::= "/\\" ;
GREATERTHANOREQUAL ::= ">=" ;
LPAR ::= "{" ;
COMMA ::= "," ;
RPAR ::= "}" ;
SEMI ::= ";" ;
DIVISION ::= "/" ;
NONEQUALITY ::= "!=" ;
QUESTION ::= "?" ;
INTVALUE ::= ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
DOUBLEVALUE ::= INTVALUE? "." ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* ("e" | "E" ("+" | "-")? INTVALUE)? ;
CONTAINS ::= "contains" ;
CONSTID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
CPAR ::= ")" ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= ("\t" | "|" | "\n" | "\r" | " " | "\f")+ ;
DEFINEDAS ::= ":=" ;
INTKEYWORD ::= "int" ;
EXPONENTION ::= "**" ;
DOUBLEKEYWORD ::= "double" ;
LESSTHANOREQUAL ::= "<=" ;
PROC ::= "proc" ;
SUBTRACTION ::= "-" ;
OPAR ::= "(" ;
WHILE ::= "while" ;
DO ::= "do" ;
VAR ::= "var" ;
MULTIPLICATION ::= "*" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DISJUNCTION ::= "\\/" ;
DONE ::= "done" ;
VARANDPROCID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
--------------------tescol::10000.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
SKIP ::= "skip" ;
COLON ::= ":" ;
ADDITION ::= "+" ;
EQUALITY ::= "==" ;
ELSE ::= "else" ;
CONJUNCTION ::= "/\\" ;
COMMA ::= "," ;
NEWLINE ::= "\r"? "\n" ;
SEMI ::= ";" ;
DIVISION ::= "/" ;
QUESTION ::= "?" ;
CONTAINS ::= "contains" ;
CID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
LPAREN ::= "(" ;
IF ::= "if" ;
THEN ::= "then" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
EXPONENTIATION ::= "**" ;
GREATER ::= ">" ;
LESS ::= "<" ;
RPAREN ::= ")" ;
PROC ::= "proc" ;
SUBTRACTION ::= "-" ;
DOUBLE ::= "double" ;
WHILE ::= "while" ;
INT ::= "int" ;
DO ::= "do" ;
LBRACE ::= "{" ;
VAR ::= "var" ;
MULTIPLICATION ::= "*" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
DISJUNCTION ::= "\\/" ;
RBRACE ::= "}" ;
--------------------tescol::10001.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
SKIP ::= "skip" ;
COLON ::= ":" ;
ADDITION ::= "+" ;
EQUALITY ::= "==" ;
ELSE ::= "else" ;
PROCBODY ::= "procbody" ;
CONJUNCTION ::= "/\\" ;
COMMA ::= "," ;
SEMI ::= ";" ;
CIDENT ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
DIVISION ::= "/" ;
QUESTION ::= "?" ;
CONTAINS ::= "contains" ;
LPAREN ::= "(" ;
CALL ::= "call" ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
EXPONENTIATION ::= "**" ;
ID ::= "id" ;
GREATER ::= ">" ;
LESS ::= "<" ;
RPAREN ::= ")" ;
PROC ::= "proc" ;
SUBTRACTION ::= "-" ;
ARGLIST ::= "arglist" ;
DOUBLE ::= "double" ;
WHILE ::= "while" ;
IDENT ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
INT ::= "int" ;
DO ::= "do" ;
LBRACE ::= "{" ;
VAR ::= "var" ;
MULTIPLICATION ::= "*" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
DISJUNCTION ::= "\\/" ;
RBRACE ::= "}" ;
--------------------tescol::10010.bgf--------------------
COLON ::= ":" ;
SKIP ::= "skip" ;
LESSTHAN ::= "<" ;
DIVIDE ::= "/" ;
ELSE ::= "else" ;
MORETHAN ::= ">" ;
COMMA ::= "," ;
DISJUNC ::= "\\/" ;
SEMI ::= ";" ;
CMT ::= "/*" α* "*/" ;
QUESTION ::= "?" ;
DEF ::= ":=" ;
MULTIPLY ::= "*" ;
CONJUNC ::= "/\\" ;
CLPAREN ::= "{" ;
CONTAINS ::= "contains" ;
MORETHANEQUAL ::= ">=" ;
LPAREN ::= "(" ;
THEN ::= "then" ;
IF ::= "if" ;
EXPON ::= "**" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
CRPAREN ::= "}" ;
LESSTHANEQUAL ::= "<=" ;
INTKEYWORD ::= "int" ;
RPAREN ::= ")" ;
DOUBLEKEYWORD ::= "double" ;
PROC ::= "proc" ;
EQUAL ::= "==" ;
SUBTRACT ::= "-" ;
DOUBLE ::= INT? "." (("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")*) | ("e" | "E" ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+) ;
WHILE ::= "while" ;
INT ::= ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
DO ::= "do" ;
VAR ::= "var" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
NOTEQUAL ::= "!=" ;
ADD ::= "+" ;
--------------------tescol::10011.bgf--------------------
COLON ::= ":" ;
SKIP ::= "skip" ;
VARIABLE ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
NEQ ::= "!=" ;
ELSE ::= "else" ;
DISJUN ::= "\\/" ;
COMMA ::= "," ;
LPAR ::= "(" ;
DIV ::= "/" ;
RCPAR ::= "}" ;
MULT ::= "*" ;
RPAR ::= ")" ;
SEMI ::= ";" ;
EQ ::= "==" ;
LCPAR ::= "{" ;
CONSTANT ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
CONTAINS ::= "contains" ;
INTEGER ::= "int" ;
THEN ::= "then" ;
IF ::= "if" ;
EXPON ::= "**" ;
QM ::= "?" ;
PLUS ::= "+" ;
LESS ::= "<" ;
DEFAS ::= ":=" ;
PROC ::= "proc" ;
MORE ::= ">" ;
WHILE ::= "while" ;
DUB ::= INT? "." ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* ("e" | "E" INT)? ;
DOUBLE ::= "double" ;
MINUS ::= "-" ;
INT ::= "0" | ("1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")*) ;
DO ::= "do" ;
VAR ::= "var" ;
CHECKOUT ::= "checkout" ;
LESSEQ ::= "<=" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
CONJUN ::= "/\\" ;
MOREEQ ::= ">=" ;
--------------------tescol::10100.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
SKIP ::= "skip" ;
COLON ::= ":" ;
ADDITION ::= "+" ;
EQUALITY ::= "==" ;
ELSE ::= "else" ;
CONJUNCTION ::= "/\\" ;
COMMA ::= "," ;
NEWLINE ::= "\r"? "\n" ;
SEMI ::= ";" ;
DIVISION ::= "/" ;
QUESTION ::= "?" ;
CONTAINS ::= "contains" ;
CID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
LPAREN ::= "(" ;
IF ::= "if" ;
THEN ::= "then" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
EXPONENTIATION ::= "**" ;
GREATER ::= ">" ;
LESS ::= "<" ;
RPAREN ::= ")" ;
PROC ::= "proc" ;
SUBTRACTION ::= "-" ;
DOUBLE ::= "double" ;
WHILE ::= "while" ;
INT ::= "int" ;
DO ::= "do" ;
LBRACE ::= "{" ;
VAR ::= "var" ;
MULTIPLICATION ::= "*" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
DISJUNCTION ::= "\\/" ;
RBRACE ::= "}" ;
--------------------tescol::10101.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
CONSTANTID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
SKIP ::= "skip" ;
COLON ::= ":" ;
VARIABLE ::= "var" ;
FLOAT ::= "double" ;
ADDITION ::= "+" ;
GREATEREQUAL ::= ">=" ;
EQUALITY ::= "==" ;
ELSE ::= "else" ;
MIXFIX ::= "?" ;
CONJUNCTION ::= "/\\" ;
COMMA ::= "," ;
PARENOPEN ::= "(" ;
PROCEDURE ::= "proc" ;
DECIMAL ::= "." ;
ASSIGN ::= ":=" ;
PARENCLOSE ::= ")" ;
SEMI ::= ";" ;
DIVISION ::= "/" ;
FLOATINGPOINT ::= INTEGER? "." ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ("e" | "E" (ADDITION | SUBTRACTION)* INTEGER)? ;
STATEMENTCLOSE ::= "}" ;
NONEQUALITY ::= "!=" ;
CONSTANT ::= "const" ;
CONTAINS ::= "contains" ;
INTEGER ::= ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "_" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
LESSEQUAL ::= "<=" ;
EXPONENTIATION ::= "**" ;
GREATER ::= ">" ;
LESS ::= "<" ;
STATEMENTOPEN ::= "{" ;
SUBTRACTION ::= "-" ;
WHILE ::= "while" ;
INT ::= "int" ;
DO ::= "do" ;
CHECKOUT ::= "checkout" ;
MULTIPLICATION ::= "*" ;
TROLLEY ::= "trolley" ;
DONE ::= "done" ;
DISJUNCTION ::= "\\/" ;
--------------------tescol::10110.bgf--------------------
COLON ::= ":" ;
SKIP ::= "skip" ;
COMMENT ::= "/*" α* "*/" ;
EQUALITY ::= "==" ;
ELSE ::= "else" ;
DIVIDE ::= "/" ;
LPAR ::= "(" ;
COMMA ::= "," ;
EXPONENT ::= "e" | "E" ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
RPAR ::= ")" ;
SEMI ::= ";" ;
CONJ ::= "/\\" ;
QUESTION ::= "?" ;
MULTIPLY ::= "*" ;
CONTAINS ::= "contains" ;
CID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
THEN ::= "then" ;
IF ::= "if" ;
EOF ::= ε ;
WS ::= (" " | "\t" | "\r" | "\n" | "\f")+ ;
DISJ ::= "\\/" ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
EXPONENTIATION ::= MULTIPLY "*" ;
PROC ::= "proc" ;
EQUAL ::= "=" ;
SUBTRACT ::= "-" ;
WHILE ::= "while" ;
DOUBLE ::= (INT "." ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* EXPONENT?) | ("." ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ EXPONENT?) | (INT EXPONENT) | "." ;
INT ::= ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
DO ::= "do" ;
VAR ::= "var" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
ADD ::= "+" ;
--------------------tescol::10111.bgf--------------------
EXPONENT ::= "e" | "E" (SYM_ADD | SYM_SUB)? INT ;
COMMENT ::= "/*" α* "*/" ;
INT ::= ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
DOUBLE ::= INT? "." ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* EXPONENT? ;
--------------------tescol::11000.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
SKIP ::= "skip" ;
COLON ::= ":" ;
ADDITION ::= "+" ;
VARIABLE ::= "var" ;
GREATERTHAN ::= ">" ;
DEFINE ::= ":=" ;
LESSTHAN ::= "<" ;
EQUALITY ::= "==" ;
ELSE ::= "else" ;
GREATEROREQUAL ::= ">=" ;
AND ::= "/\\" ;
COMMA ::= "," ;
CURLYLEFT ::= "{" ;
PROCEDURE ::= "proc" ;
EXPONENT ::= "e" | "E" "+" | "-" INT ;
CURLYRIGHT ::= "}" ;
SEMI ::= ";" ;
DIVISION ::= "\\" ;
DOU ::= INT? "." ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* EXPONENT? ;
NONEQUALITY ::= "!=" ;
QUESTION ::= "?" ;
CONSTANT ::= "const" ;
OR ::= "\\/" ;
LEFTBRACKET ::= "(" ;
CONTAINS ::= "contains" ;
CID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "_" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
INTEGER ::= "int" ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "_" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
EXPONENTIATION ::= "**" ;
LESSOREQUAL ::= "<=" ;
SUBTRACTION ::= "-" ;
WHILE ::= "while" ;
DOUBLE ::= "double" ;
INT ::= ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
RIGHTBRACKET ::= ")" ;
DO ::= "do" ;
MULTIPLICATION ::= "*" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
DONE ::= "done" ;
--------------------tescol::11001.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
SKIP ::= "skip" ;
EQUALS ::= "=" ;
COLON ::= ":" ;
EXP ::= "**" ;
FLOAT ::= INT? "." UINT? EXPONENT? ;
TINT ::= "int" ;
EQUALITY ::= EQUALS EQUALS ;
ELSE ::= "else" ;
BANG ::= "!" ;
AND ::= "/\\" ;
COMMA ::= "," ;
EXPONENT ::= "e" | "E" INT ;
SEMI ::= ";" ;
GTEQUALS ::= RANGLE EQUALS ;
LANGLE ::= "<" ;
QUESTION ::= "?" ;
TDOUBLE ::= "double" ;
MUL ::= "*" ;
OR ::= "\\/" ;
VARID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
RANGLE ::= ">" ;
INEQUALITY ::= BANG EQUALS ;
CONTAINS ::= "contains" ;
CONSTID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
LPAREN ::= "(" ;
IF ::= "if" ;
THEN ::= "then" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
DEFINEDAS ::= COLON EQUALS ;
UINT ::= ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
PLUS ::= "+" ;
RPAREN ::= ")" ;
FSLASH ::= "/" ;
PROC ::= "proc" ;
WHILE ::= "while" ;
MINUS ::= "-" ;
INT ::= ("+" | "-")? UINT ;
DO ::= "do" ;
VAR ::= "var" ;
LTEQUALS ::= LANGLE EQUALS ;
LBRACE ::= "{" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
RBRACE ::= "}" ;
--------------------tescol::11010.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
SKIP ::= "skip" ;
COLON ::= ":" ;
EQUALITY ::= "==" ;
LESSTHAN ::= "<" ;
ELSE ::= "else" ;
DIVIDE ::= "/" ;
CONJUNCTION ::= "/\\" ;
MORETHAN ::= ">" ;
COMMA ::= "," ;
EXPONENT ::= "e" | "E" ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
SEMI ::= ";" ;
LEFTBRACE ::= "{" ;
QUESTION ::= "?" ;
MULTIPLY ::= "*" ;
CONTAINS ::= "contains" ;
CONSTID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
MORETHANEQUAL ::= ">=" ;
INTEGER ::= "int" ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
EXPONENTIATION ::= "**" ;
DEFINEDAS ::= ":=" ;
LESSTHANEQUAL ::= "<=" ;
PLUS ::= "+" ;
LEFTPAR ::= "(" ;
RIGHTBRACE ::= "}" ;
PROC ::= "proc" ;
WHILE ::= "while" ;
DOUBLE ::= ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* "." ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* ("e" | "E" INT)? ;
MINUS ::= "-" ;
INT ::= ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
FLOATDOUBLE ::= "double" ;
DO ::= "do" ;
VAR ::= "var" ;
CHECKOUT ::= "checkout" ;
RIGHTPAR ::= ")" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DISJUNCTION ::= "\\/" ;
DONE ::= "done" ;
NOTEQUAL ::= "!=" ;
--------------------tescol::11011.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
COLON ::= ":" ;
CONTAINS ::= "contains" ;
SKIP ::= "skip" ;
QMARK ::= "?" ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
DISJ ::= "\\/" ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
ELSE ::= "else" ;
DEFAS ::= ":=" ;
PROC ::= "proc" ;
LPAR ::= "(" ;
COMMA ::= "," ;
RCB ::= "}" ;
DOUBLE ::= ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* "." ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* ("e" ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+)? ;
WHILE ::= "while" ;
RPAR ::= ")" ;
INT ::= ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
SEMI ::= ";" ;
LCB ::= "{" ;
DO ::= "do" ;
CONJ ::= "/\\" ;
VAR ::= "var" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
--------------------tescol::11100.bgf--------------------
SKIP ::= "skip" ;
COLON ::= ":" ;
COMMENT ::= "/*" α* "*/" ;
ELSE ::= "else" ;
COMMA ::= "," ;
SEMI ::= ";" ;
LEFTBRACE ::= "{" ;
LEFTBRACKET ::= "(" ;
CONTAINS ::= "contains" ;
CONSTID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
QMARK ::= "?" ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
PLUS ::= "+" ;
RIGHTBRACE ::= "}" ;
PROC ::= "proc" ;
DOUBLE ::= INT? "." ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* ("e" | "E" INT)? ;
WHILE ::= "while" ;
MINUS ::= "-" ;
INT ::= ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
BOOLOPERATOR ::= "/\\" | "\\/" ;
TRUE ::= "true" ;
ASSIGNMENT ::= ":=" ;
RIGHTBRACKET ::= ")" ;
DOUBLETYPE ::= "double" ;
DO ::= "do" ;
COMPARISON ::= "==" | "!=" | "<=" | ">=" | "<" | ">" ;
INTTYPE ::= "int" ;
VAR ::= "var" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
FALSE ::= "false" ;
CONST ::= "const" ;
DONE ::= "done" ;
MULTIPLIER ::= "**" | "/" | "*" ;
--------------------tescol::11101.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
SKIP ::= "skip" ;
COLON ::= ":" ;
ADDITION ::= "+" ;
ELSE ::= "else" ;
VARPROCID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
DBLE ::= "double" ;
CONJUNCTION ::= "/\\" ;
COMMA ::= "," ;
ROP ::= "==" | "!=" | "<" | "<=" | ">=" | ">" ;
EXPONENT ::= "e" | "E" INTEGER ;
SEMI ::= ";" ;
DIVISION ::= "/" ;
DEFINED ::= ":=" ;
QUESTION ::= "?" ;
CONTAINS ::= "contains" ;
CONSTID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
INTEGER ::= ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
PARENTHESISR ::= ")" ;
EXPONENTIATION ::= "**" ;
PARENTHESISL ::= "(" ;
PROC ::= "proc" ;
SUBTRACTION ::= "-" ;
DOUBLE ::= INTEGER? "." ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* EXPONENT? ;
WHILE ::= "while" ;
INT ::= "int" ;
DO ::= "do" ;
BRACKETR ::= "}" ;
VAR ::= "var" ;
MULTIPLICATION ::= "*" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
BRACKETL ::= "{" ;
CONST ::= "const" ;
DONE ::= "done" ;
DISJUNCTION ::= "\\/" ;
--------------------tescol::11110.bgf--------------------
SKIP ::= "skip" ;
COLON ::= ":" ;
FLOAT ::= ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* "." ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* ("e" | "E" ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+)? ;
ADDITION ::= "+" ;
EQUALITY ::= "==" ;
ELSE ::= "else" ;
CONJUNCTION ::= "/\\" ;
COMMA ::= "," ;
COMMENTS ::= "/*" α* "*/" ;
SEMI ::= ";" ;
DIVISION ::= "/" ;
QUESTION ::= "?" ;
CONTAINS ::= "contains" ;
INTEGER ::= ("+" | "-")? "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* ;
CONSTID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
LPAREN ::= "(" ;
IF ::= "if" ;
THEN ::= "then" ;
WS ::= (" " | "\t" | "\n" | "\r")+ ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
EXPONENTIATION ::= "**" ;
GREATER ::= ">" ;
LESS ::= "<" ;
RPAREN ::= ")" ;
PROC ::= "proc" ;
SUBTRACTION ::= "-" ;
DOUBLE ::= "double" ;
WHILE ::= "while" ;
INT ::= "int" ;
DO ::= "do" ;
LBRACE ::= "{" ;
VAR ::= "var" ;
MULTIPLICATION ::= "*" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
DISJUNCTION ::= "\\/" ;
RBRACE ::= "}" ;
--------------------tescol::11111.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
SKIP ::= "skip" ;
COLON ::= ":" ;
ADDITION ::= "+" ;
MIXFIX ::= "?" ;
ELSE ::= "else" ;
CONJUNCTION ::= "/\\" ;
COMMA ::= "," ;
NEWLINE ::= "\r"? "\n" ;
ASSIGN ::= ":=" ;
SEMI ::= ";" ;
DIVISION ::= "/" ;
VARID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
CONTAINS ::= "contains" ;
CONSTID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
LPAREN ::= "(" ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
EXPONENTIATION ::= "**" ;
GREATER ::= ">" ;
LESS ::= "<" ;
RPAREN ::= ")" ;
PROC ::= "proc" ;
EQUAL ::= "==" ;
SUBTRACTION ::= "-" ;
WHILE ::= "while" ;
DOUBLE ::= "double" ;
INT ::= "int" ;
DO ::= "do" ;
VAR ::= "var" ;
NONEQUAL ::= "!=" ;
LBRACE ::= "{" ;
CHECKOUT ::= "checkout" ;
MULTIPLICATION ::= "*" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
DISJUNCTION ::= "\\/" ;
RBRACE ::= "}" ;
--------------------tescol::reference.bgf--------------------
COLON ::= ":" ;
SKIP ::= "skip" ;
LTE ::= "<=" ;
NET ::= "!=" ;
EXP ::= "**" ;
ELSE ::= "else" ;
GTE ::= ">=" ;
LPAR ::= "(" ;
COMMA ::= "," ;
TE ::= "?" ;
DIV ::= "/" ;
MULT ::= "*" ;
ET ::= "==" ;
RPAR ::= ")" ;
DISJUNC ::= "/\\" ;
SEMI ::= ";" ;
GT ::= ">" ;
CONJUNC ::= "\\/" ;
LOWER ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" ;
SUB ::= "-" ;
CONTAINS ::= "contains" ;
CONSTID ::= UPPER (UPPER | DIGIT | "_")* ;
INTEGER ::= ("+" | "-")? DIGIT+ ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
ID ::= UPPER | LOWER (UPPER | LOWER | DIGIT | "_")* ;
RELOP ::= LT | LTE | GT | GTE ;
DOUB ::= "double" ;
DEFAS ::= ":=" ;
PROC ::= "proc" ;
DOUBLE ::= INTEGER? "." DIGIT* ("e" | "E" INTEGER)? ;
MULTOP ::= MULT | DIV ;
WHILE ::= "while" ;
INT ::= "int" ;
DIGIT ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;
EQOP ::= ET | NET ;
DO ::= "do" ;
LT ::= "<" ;
LBRACE ::= "{" ;
VAR ::= "var" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
UPPER ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ;
DONE ::= "done" ;
ADD ::= "+" ;
RBRACE ::= "}" ;
--------------------hats::abs.bgf--------------------
Exp ::= [e] DataExp ;
 Exp ::= [e] EffExp ;
SqlTupleCaseBranches ::= l::SqlTupleCaseBranches b::SqlTupleCaseBranch ;
 SqlTupleCaseBranches ::= [b] SqlTupleCaseBranch ;
TypesynDecl ::= (al::AnnotationList)? TYPE lhs::TYPE_IDENTIFIER ASSIGN rhs::Datatypeuse SEMICOLON ;
OoModifier ::= REMOVES CLASS id::TypeName SEMICOLON ;
 OoModifier ::= MODIFIES INTERFACE id::TypeName LBRACE (fragments::InfModifierFragmentList)? RBRACE ;
 OoModifier ::= ADDS ifacedecl::QualifiedInterfaceDecl ;
 OoModifier ::= MODIFIES CLASS id::TypeName (ifadd::ImplementInterfacesAdd)? (ifremove::ImplementInterfacesRemove)? LBRACE (fragments::ModifierFragmentList)? RBRACE ;
 OoModifier ::= ADDS classdecl::QualifiedClassDecl ;
ParamDeclList ::= l::ParamDeclList COMMA i::ParamDecl ;
 ParamDeclList ::= [i] ParamDecl ;
Deltaparam ::= [i] INTLITERAL ;
 Deltaparam ::= [c] TYPE_IDENTIFIER ;
 Deltaparam ::= fid::TYPE_IDENTIFIER DOT aid::IDENTIFIER ;
DataExp ::= OrExp ;
SqlTupleScalarFunctionConcat ::= f1::SqlTupleScalarFunctionConcat CONCAT f2::SqlTupleScalarFunctionSum ;
 SqlTupleScalarFunctionConcat ::= SqlTupleScalarFunctionSum ;
MimplExp ::= MeqExp ;
 MimplExp ::= e1::MimplExp IMPLIES e2::MeqExp ;
 MimplExp ::= e1::MimplExp EQUIV e2::MeqExp ;
OriginalCall ::= ORIGINAL LPAREN (params::DataExpList)? RPAREN ;
 OriginalCall ::= delta::DeltaId DOTORIGINAL LPAREN (params::DataExpList)? RPAREN ;
 OriginalCall ::= CORE DOTORIGINAL LPAREN (params::DataExpList)? RPAREN ;
MethodsigList ::= m::Methodsig SEMICOLON ;
 MethodsigList ::= l::MethodsigList m::Methodsig SEMICOLON ;
SqlAttrAssignment ::= e::DataExp EQ f::SqlTupleScalarFunction ;
SqlOrCondition ::= c1::SqlOrCondition op::OR c2::SqlAndCondition ;
 SqlOrCondition ::= SqlAndCondition ;
Stmt ::= (al::AnnotationList)? s::CompoundStmt ;
 Stmt ::= (al::AnnotationList)? s::StmtWithoutAnnotations SEMICOLON ;
InfModifierFragmentList ::= l::InfModifierFragmentList f::InfModifierFragment ;
 InfModifierFragmentList ::= [f] InfModifierFragment ;
AndExp ::= e1::AndExp ANDAND e2::EqualityExp ;
 AndExp ::= EqualityExp ;
PureExp ::= FatherExp "/"* Component* "/" ;
 PureExp ::= LocationExp "/"* Component* "/" ;
 PureExp ::= IfExp ;
 PureExp ::= PureExpNoIf ;
ConstructorExp ::= [f] TypeName ;
 ConstructorExp ::= f::TypeName LPAREN (l::DataExpList)? RPAREN ;
WhenCondition ::= TO ac::Appcond ;
 WhenCondition ::= WHEN ac::Appcond ;
MmultExp ::= e1::MmultExp MULT e2::MfactorExp ;
 MmultExp ::= [e] MfactorExp ;
 MmultExp ::= e1::MmultExp DIV e2::MfactorExp ;
 MmultExp ::= e1::MmultExp MOD e2::MfactorExp ;
IntLiteral ::= [i] INTLITERAL ;
INTLITERAL ::= ε ;
AddExp ::= e1::AddExp PLUS e2::MultExp ;
 AddExp ::= [e] MultExp ;
 AddExp ::= e1::AddExp MINUS e2::MultExp ;
DeltaAccessList ::= [t] DeltaAccess ;
 DeltaAccessList ::= l::DeltaAccessList t::DeltaAccess ;
ConstructorArgList ::= l::ConstructorArgList COMMA a::ConstructorArg ;
 ConstructorArgList ::= [a] ConstructorArg ;
AsyncCall ::= callee::PureExpPrefix BANG method::IDENTIFIER LPAREN (params::DataExpList)? RPAREN ;
 AsyncCall ::= callee::THIS BANG method::IDENTIFIER LPAREN (params::DataExpList)? RPAREN ;
SqlOrderingAttributeList ::= l::SqlOrderingAttributeList COMMA a::SqlOrderingAttribute ;
 SqlOrderingAttributeList ::= [a] SqlOrderingAttribute ;
PureExpPrefix ::= LPAREN e::IfExp RPAREN ;
 PureExpPrefix ::= PureExpNoIf ;
SimpleTypeName ::= [id] TYPE_IDENTIFIER ;
Feature ::= id::TYPE_IDENTIFIER PRIME (attrs::AttrAssignments)? ;
 Feature ::= id::TYPE_IDENTIFIER (attrs::AttrAssignments)? ;
Export ::= EXPORT MULT SEMICOLON ;
 Export ::= EXPORT l::AnyNameList SEMICOLON ;
 Export ::= EXPORT MULT FROM m::ModuleName SEMICOLON ;
 Export ::= EXPORT l::AnyNameList FROM m::ModuleName SEMICOLON ;
DeltaId ::= [delta] TYPE_IDENTIFIER ;
SqlAndCondition ::= c1::SqlAndCondition op::AND c2::SqlCondition ;
 SqlAndCondition ::= SqlCondition ;
SqlAttrsDef ::= MULT ;
 SqlAttrsDef ::= [l] SqlAttrDefList ;
SqlTupleScalarFunctionProduct ::= f1::SqlTupleScalarFunctionProduct MULT f2::SqlTupleScalarFunctionQuotient ;
 SqlTupleScalarFunctionProduct ::= SqlTupleScalarFunctionQuotient ;
 SqlTupleScalarFunctionProduct ::= f1::SqlTupleScalarFunctionProduct MULT LPAREN f2::SqlTupleScalarFunctionSum RPAREN ;
DataConstructor ::= co::TYPE_IDENTIFIER (p::DataConstructorParams)? ;
ExpFunctionDef ::= [ef] DataExp ;
CaseBranchList ::= l::CaseBranchList b::CaseBranch ;
 CaseBranchList ::= [b] CaseBranch ;
Product ::= PRODUCT id::TYPE_IDENTIFIER LPAREN (l::FeatureList)? RPAREN SEMICOLON ;
 Product ::= PRODUCT id::TYPE_IDENTIFIER LPAREN (l::FeatureList)? RPAREN LBRACE al::AdaptationList RBRACE ;
DatatypeDecl ::= (al::AnnotationList)? DATA id::TYPE_IDENTIFIER (p::DatatypeparamListDecl)? SEMICOLON ;
 DatatypeDecl ::= (al::AnnotationList)? DATA id::TYPE_IDENTIFIER (p::DatatypeparamListDecl)? ASSIGN l::DataConstructorList SEMICOLON ;
Decl ::= DatatypeDecl ;
 Decl ::= FunctionDecl ;
 Decl ::= TypesynDecl ;
 Decl ::= ClassDecl ;
 Decl ::= InterfaceDecl ;
SqlTupleScalarFunctionQuotient ::= f1::SqlTupleScalarFunctionQuotient DIV LPAREN f2::SqlTupleScalarFunctionSum RPAREN ;
 SqlTupleScalarFunctionQuotient ::= f1::SqlTupleScalarFunctionQuotient DIV f2::AtomicSqlTupleScalarFunction ;
 SqlTupleScalarFunctionQuotient ::= AtomicSqlTupleScalarFunction ;
CompilationUnit ::= (m::ModuleDeclList)? (d::DeltaDeclList)? (pl::ProductLine)? (p::ProductList)? fm::Featuremodeldecl ;
SqlAttrDef ::= fun::SqlAggregateFunction AS e::DataExp ;
 SqlAttrDef ::= [f] Factor ;
Import ::= IMPORT l::AnyNameList FROM m::ModuleName SEMICOLON ;
 Import ::= IMPORT l::AnyNameList SEMICOLON ;
 Import ::= IMPORT MULT FROM m::ModuleName SEMICOLON ;
FunctionDecl ::= (al::AnnotationList)? DEF t::Datatypeuse fn::IDENTIFIER p::DatatypeparamListDecl LPAREN (l::ParamDeclList)? RPAREN ASSIGN ef::ExpFunctionDef SEMICOLON ;
 FunctionDecl ::= (al::AnnotationList)? DEF t::Datatypeuse fn::IDENTIFIER LPAREN (l::ParamDeclList)? RPAREN ASSIGN ef::ExpFunctionDef SEMICOLON ;
 FunctionDecl ::= (al::AnnotationList)? DEF t::Datatypeuse fn::IDENTIFIER LPAREN (l::ParamDeclList)? RPAREN ASSIGN BUILTIN SEMICOLON ;
 FunctionDecl ::= (al::AnnotationList)? DEF t::Datatypeuse fn::IDENTIFIER p::DatatypeparamListDecl LPAREN (l::ParamDeclList)? RPAREN ASSIGN BUILTIN SEMICOLON ;
HasCondition ::= HASFIELD f::FieldDecl ;
 HasCondition ::= HASMETHOD ms::Methodsig ;
 HasCondition ::= HASINTERFACE n::TypeName ;
ModuleModifierList ::= l::ModuleModifierList m::ModuleModifier ;
 ModuleModifierList ::= [m] ModuleModifier ;
IncompleteExp ::= callee::PureExpPrefix b::BANG (method::IDENTIFIER)? ;
 IncompleteExp ::= callee::PureExpPrefix d::DOT (method::IDENTIFIER)? ;
 IncompleteExp ::= NEW (c::Cog)? ;
AfterCondition ::= AFTER l::DeltaList ;
AttrAssignment ::= n::IDENTIFIER ASSIGN i::INTLITERAL ;
 AttrAssignment ::= n::IDENTIFIER ASSIGN c::TYPE_IDENTIFIER ;
SqlAtomicRelationRef ::= [r] StringLiteral ;
 SqlAtomicRelationRef ::= [r] VarOrFieldRef ;
ImplementInterfaces ::= IMPLEMENTS i::IfnameList ;
IfThenElseStmt ::= IF LPAREN e1::DataExp RPAREN s1::Stmt ELSE s2::Stmt ;
 IfThenElseStmt ::= IF LPAREN e1::DataExp RPAREN s1::Stmt ;
SyncCall ::= callee::PureExpPrefix DOT method::IDENTIFIER LPAREN (params::DataExpList)? RPAREN ;
 SyncCall ::= callee::THIS DOT method::IDENTIFIER LPAREN (params::DataExpList)? RPAREN ;
Fextension ::= f::TYPE_IDENTIFIER LBRACE (g::Group)? acl::AttributeConstraintList RBRACE ;
AttributeConstraintList ::= acl::AttributeConstraintList t::TYPE_IDENTIFIER id::IDENTIFIER IN LBRACKET b1::BoundaryInt UNTIL b2::BoundaryInt RBRACKET SEMICOLON ;
 AttributeConstraintList ::= acl::AttributeConstraintList t::TYPE_IDENTIFIER id::IDENTIFIER SEMICOLON "/"* Constraints* "/" ;
 AttributeConstraintList ::= acl::AttributeConstraintList EXCLUDE COLON f::Featvar SEMICOLON ;
 AttributeConstraintList ::= acl::AttributeConstraintList t::TYPE_IDENTIFIER id::IDENTIFIER IN LBRACE il::IntList RBRACE SEMICOLON ;
 AttributeConstraintList ::= acl::AttributeConstraintList t::TYPE_IDENTIFIER LBRACKET b1::BoundaryInt UNTIL b2::BoundaryInt RBRACKET id::IDENTIFIER SEMICOLON ;
 AttributeConstraintList ::= acl::AttributeConstraintList e::Mexp SEMICOLON ;
 AttributeConstraintList ::= "/"* Attributes* "/" ;
 AttributeConstraintList ::= acl::AttributeConstraintList REQUIRE COLON f::Featvar SEMICOLON ;
 AttributeConstraintList ::= acl::AttributeConstraintList IFIN COLON e::Mexp SEMICOLON ;
 AttributeConstraintList ::= acl::AttributeConstraintList IFOUT COLON e::Mexp SEMICOLON ;
ParamDecl ::= (an::AnnotationList)? t::TypeExp i::IDENTIFIER ;
AnyNameList ::= [n] AnyName ;
 AnyNameList ::= l::AnyNameList COMMA n::AnyName ;
ExtendsInterfaces ::= EXTENDS i::IfnameList ;
Mexp ::= e1::Mexp OROR e2::MandExp ;
 Mexp ::= MandExp ;
CaseExp ::= CASE caseterm::DataExp LBRACE (branches::CaseBranchList)? RBRACE ;
MultExp ::= e1::MultExp MULT e2::Factor ;
 MultExp ::= e1::MultExp MOD e2::Factor ;
 MultExp ::= [f] Factor ;
 MultExp ::= e1::MultExp DIV e2::Factor ;
Name ::= SimpleName ;
 Name ::= QualifiedName ;
SqlAttrAssignmentList ::= [a] SqlAttrAssignment ;
 SqlAttrAssignmentList ::= l::SqlAttrAssignmentList COMMA a::SqlAttrAssignment ;
SqlAggregateFunction ::= COUNT LPAREN MULT RPAREN ;
 SqlAggregateFunction ::= [f] SqlTupleScalarFunction ;
 SqlAggregateFunction ::= i::IDENTIFIER LPAREN f::SqlTupleScalarFunction RPAREN ;
IDENTIFIER ::= ε ;
StmtList ::= l::StmtList i::Stmt ;
 StmtList ::= [i] Stmt ;
ModifierFragmentList ::= [f] ModifierFragment ;
 ModifierFragmentList ::= l::ModifierFragmentList f::ModifierFragment ;
MeqExp ::= MrelExp ;
 MeqExp ::= e1::MeqExp NOTEQ e2::MrelExp ;
 MeqExp ::= e1::MeqExp EQEQ e2::MrelExp ;
ImplementInterfacesAdd ::= ADDS i::IfnameList ;
FieldDecl ::= (an::AnnotationList)? PORT t::TypeExp i::IDENTIFIER ;
 FieldDecl ::= (an::AnnotationList)? t::TypeExp i::IDENTIFIER ;
 FieldDecl ::= (an::AnnotationList)? PORT t::TypeExp i::IDENTIFIER ASSIGN e::DataExp ;
 FieldDecl ::= (an::AnnotationList)? t::TypeExp i::IDENTIFIER ASSIGN e::DataExp ;
Appcond ::= OrAppcond ;
VarOrFieldRef ::= callee::THIS b::BANG (method::IDENTIFIER)? ;
 VarOrFieldRef ::= [n] IDENTIFIER ;
 VarOrFieldRef ::= callee::THIS d::DOT ;
 VarOrFieldRef ::= THIS DOT id::IDENTIFIER ;
EqualityExp ::= e1::EqualityExp EQEQ e2::RelationalExp ;
 EqualityExp ::= RelationalExp ;
 EqualityExp ::= e1::EqualityExp NOTEQ e2::RelationalExp ;
MfactorExp ::= MINUS e::MfactorExp ;
 MfactorExp ::= MlitExp ;
 MfactorExp ::= NEGATION e::MfactorExp ;
 MfactorExp ::= LPAREN e::Mexp RPAREN ;
ImplementInterfacesRemove ::= REMOVES i::IfnameList ;
IfExp ::= IF e::DataExp THEN c::DataExp ELSE a::DataExp ;
FeatureDecl ::= [f] TYPE_IDENTIFIER ;
 FeatureDecl ::= f::TYPE_IDENTIFIER LBRACE (g::Group)? acl::AttributeConstraintList RBRACE ;
ParamDecls ::= LPAREN (f::ParamDeclList)? RPAREN ;
SqlOrderingAttributes ::= ε ;
 SqlOrderingAttributes ::= ORDER BY l::SqlOrderingAttributeList ;
Delta ::= [id] TYPE_IDENTIFIER ;
CorefeatureList ::= ε ;
 CorefeatureList ::= COREFEATURES l::FeatureList SEMICOLON ;
Featvar ::= [f] TYPE_IDENTIFIER ;
FeatureList ::= [f] Feature ;
 FeatureList ::= l::FeatureList COMMA f::Feature ;
MlitExp ::= [i] INTLITERAL ;
 MlitExp ::= [id] IDENTIFIER ;
 MlitExp ::= f::TYPE_IDENTIFIER DOT a::IDENTIFIER ;
 MlitExp ::= [id] TYPE_IDENTIFIER ;
ExportList ::= [t] Export ;
 ExportList ::= l::ExportList t::Export ;
DatatypeparamListDecl ::= LT l::DatatypeparamList GT ;
SqlExp ::= INSERT INTO r::SqlRelationRef LPAREN a::SqlAttrRefList RPAREN VALUES LPAREN v::SqlTupleConstantList RPAREN ;
 SqlExp ::= UPDATE r::SqlRelationRef SET a::SqlAttrAssignmentList c::OptSqlCondition ;
 SqlExp ::= SELECT a::SqlAttrsDef FROM r::SqlRelationRef c::OptSqlCondition g::SqlGroupingAttributes o::SqlOrderingAttributes ;
 SqlExp ::= SELECT DISTINCT a::SqlAttrsDef FROM r::SqlRelationRef c::OptSqlCondition g::SqlGroupingAttributes o::SqlOrderingAttributes ;
Literal ::= [i] IntLiteral ;
 Literal ::= [s] StringLiteral ;
DataConstructorList ::= [i] DataConstructor ;
 DataConstructorList ::= l::DataConstructorList BAR i::DataConstructor ;
AnnotationList ::= l::AnnotationList a::Annotation ;
 AnnotationList ::= [a] Annotation ;
BlockWithoutAnnotations ::= LBRACE (s::StmtList)? RBRACE ;
DeclList ::= l::DeclList t::Decl ;
 DeclList ::= [t] Decl ;
Guard ::= [e] DataExp ;
 Guard ::= r::VarOrFieldRef QMARK ;
 Guard ::= BAR e::Exp BAR ;
 Guard ::= DURATION LPAREN min::DataExp COMMA max::DataExp RPAREN ;
 Guard ::= g1::Guard GUARDAND g2::Guard ;
ABSGoal ::= [cu] CompilationUnit ;
SqlAttrDefList ::= [a] SqlAttrDef ;
 SqlAttrDefList ::= l::SqlAttrDefList COMMA a::SqlAttrDef ;
ModuleModifier ::= [m] OoModifier ;
 ModuleModifier ::= [m] FunctionalModifier ;
QualifiedTypeName ::= qn::TypeName DOT n::TYPE_IDENTIFIER ;
ModuleNameDecl ::= MODULE n::ModuleName SEMICOLON ;
SqlTupleConstant ::= [i] IntLiteral ;
 SqlTupleConstant ::= [s] SqlStringLiteral ;
 SqlTupleConstant ::= TRUE ;
 SqlTupleConstant ::= MINUS i::IntLiteral ;
 SqlTupleConstant ::= FALSE ;
 SqlTupleConstant ::= [r] VarOrFieldRef ;
SimpleName ::= [id] IDENTIFIER ;
NewExp ::= NEW (c::Cog)? i::TypeName LPAREN (l::DataExpList)? RPAREN ;
AttrAssignmentList ::= [a] AttrAssignment ;
 AttrAssignmentList ::= l::AttrAssignmentList COMMA a::AttrAssignment ;
WhileStmt ::= WHILE LPAREN e1::DataExp RPAREN s1::Stmt ;
AnyName ::= TypeName ;
 AnyName ::= Name ;
DataConstructorParams ::= LPAREN (l::ConstructorArgList)? RPAREN ;
AttrAssignments ::= LBRACE l::AttrAssignmentList RBRACE ;
SqlComparisonRelation ::= LT ;
 SqlComparisonRelation ::= LTEQ ;
 SqlComparisonRelation ::= GTEQ ;
 SqlComparisonRelation ::= NOTEQ ;
 SqlComparisonRelation ::= EQ ;
 SqlComparisonRelation ::= GT ;
AdaptationList ::= l::AdaptationList ad::Adaptation ;
 AdaptationList ::= [ad] Adaptation ;
FromCondition ::= FROM ac::Appcond ;
Pattern ::= USCORE ;
 Pattern ::= [l] Literal ;
 Pattern ::= [v] IDENTIFIER ;
 Pattern ::= ConstructorPattern ;
Factor ::= NEGATION b::Factor ;
 Factor ::= MINUS e::Factor ;
 Factor ::= Literal ;
 Factor ::= PureExp ;
 Factor ::= LPAREN e::OrExp RPAREN ;
Cardinality ::= ONEOF ;
 Cardinality ::= LBRACKET i1::INTLITERAL UNTIL i2::INTLITERAL RBRACKET ;
 Cardinality ::= ALLOF ;
 Cardinality ::= LBRACKET i::INTLITERAL UNTIL MULT RBRACKET ;
Block ::= (al::AnnotationList)? b::BlockWithoutAnnotations ;
SqlRelationRef ::= r1::SqlRelationRef JOIN r2::SqlAtomicRelationRef ;
 SqlRelationRef ::= r1::SqlRelationRef RIGHT JOIN r2::SqlAtomicRelationRef ;
 SqlRelationRef ::= SqlAtomicRelationRef ;
 SqlRelationRef ::= r1::SqlRelationRef LEFT JOIN r2::SqlAtomicRelationRef ;
QualifiedInterfaceDecl ::= (al::AnnotationList)? INTERFACE id::TypeName (i::ExtendsInterfaces)? LBRACE (l::MethodsigList)? RBRACE ;
ModifierFragment ::= REMOVES f::FieldDecl SEMICOLON ;
 ModifierFragment ::= MODIFIES m::Method ;
 ModifierFragment ::= ADDS f::FieldDecl SEMICOLON ;
 ModifierFragment ::= REMOVES ms::Methodsig SEMICOLON ;
 ModifierFragment ::= ADDS m::Method ;
InterfaceDecl ::= (al::AnnotationList)? INTERFACE id::TYPE_IDENTIFIER (i::ExtendsInterfaces)? LBRACE (l::MethodsigList)? RBRACE ;
ProductLine ::= PRODUCTLINE id::TYPE_IDENTIFIER SEMICOLON o::OptfeatureList c::CorefeatureList d::DeltaclauseList ;
TypeExp ::= [n] TypeName ;
 TypeExp ::= n::TypeName LT p::DatatypeuseList GT ;
FieldDeclList ::= i::FieldDecl SEMICOLON ;
 FieldDeclList ::= l::FieldDeclList i::FieldDecl SEMICOLON ;
DeltaDecl ::= DELTA id::TYPE_IDENTIFIER (params::DeltaParamDecls)? SEMICOLON (uses::DeltaAccessList)? (modifiers::ModuleModifierList)? ;
Group ::= GROUP c::Cardinality LBRACE fs::FnodeList RBRACE ;
DeltaParamDeclList ::= [i] DeltaParamDecl ;
 DeltaParamDeclList ::= l::DeltaParamDeclList COMMA i::DeltaParamDecl ;
Cog ::= (annotations::AnnotationList)? COG ;
ModuleDecl ::= n::ModuleNameDecl (el::ExportList)? (il::ImportList)? (dl::DeclList)? (b::MainBlock)? ;
RelationalExp ::= e1::RelationalExp LTEQ e2::AddExp ;
 RelationalExp ::= AddExp ;
 RelationalExp ::= e1::RelationalExp LT e2::AddExp ;
 RelationalExp ::= e1::RelationalExp GT e2::AddExp ;
 RelationalExp ::= e1::RelationalExp GTEQ e2::AddExp ;
DeltaList ::= l::DeltaList COMMA id::Delta ;
 DeltaList ::= [id] Delta ;
ConstructorPattern ::= co::TypeName (p::PatternParams)? ;
SqlAttrRef ::= DataExp ;
FactorAppcond ::= LPAREN ac::Appcond RPAREN ;
 FactorAppcond ::= [f] Feature ;
 FactorAppcond ::= NEGATION ac::FactorAppcond ;
Deltaspec ::= id::TYPE_IDENTIFIER (params::Deltaparams)? ;
MandExp ::= MimplExp ;
 MandExp ::= e1::MandExp ANDAND e2::MimplExp ;
MrelExp ::= e1::MrelExp GTEQ e2::MaddExp ;
 MrelExp ::= e1::MrelExp GT e2::MaddExp ;
 MrelExp ::= e1::MrelExp LT e2::MaddExp ;
 MrelExp ::= MaddExp ;
 MrelExp ::= e1::MrelExp LTEQ e2::MaddExp ;
VarDecl ::= t::TypeExp i::IDENTIFIER ASSIGN e::Exp ;
 VarDecl ::= t::TypeExp i::IDENTIFIER ;
SqlStringLiteral ::= [s] SQLSTRINGLITERAL ;
Annotation ::= LBRACKET type::TypeExp COLON exp::DataExp RBRACKET ;
 Annotation ::= LBRACKET exp::DataExp RBRACKET ;
SqlTupleCaseBranch ::= WHEN c::SqlOrCondition THEN f::SqlTupleScalarFunction ;
ListLiteralExp ::= LBRACKET (l::DataExpList)? RBRACKET ;
AtomicSqlTupleScalarFunction ::= [a] StringLiteral ;
 AtomicSqlTupleScalarFunction ::= SqlTupleConstant ;
 AtomicSqlTupleScalarFunction ::= SqlTupleCaseFunction ;
MaddExp ::= e1::MaddExp MINUS e2::MmultExp ;
 MaddExp ::= [e] MmultExp ;
 MaddExp ::= e1::MaddExp PLUS e2::MmultExp ;
Fnode ::= OPT f::FeatureDecl ;
 Fnode ::= [f] FeatureDecl ;
Ifname ::= [n] TypeName ;
DatatypeparamList ::= l::DatatypeparamList COMMA p::Datatypeparam ;
 DatatypeparamList ::= [p] Datatypeparam ;
BoundaryInt ::= [i] INTLITERAL ;
 BoundaryInt ::= MULT ;
 BoundaryInt ::= MINUS i::INTLITERAL ;
DeltaclauseList ::= ε ;
 DeltaclauseList ::= l::DeltaclauseList dc::DeltaClause SEMICOLON ;
StmtWithoutAnnotations ::= REBIND field::IDENTIFIER ASSIGN e::Exp ;
 StmtWithoutAnnotations ::= r::VarOrFieldRef ASSIGN e::Exp ;
 StmtWithoutAnnotations ::= SKIP ;
 StmtWithoutAnnotations ::= REBIND obj::Exp COLON field::IDENTIFIER ASSIGN e::Exp ;
 StmtWithoutAnnotations ::= [e] EffExp ;
 StmtWithoutAnnotations ::= [vd] VarDecl ;
 StmtWithoutAnnotations ::= DURATION LPAREN min::DataExp COMMA max::DataExp RPAREN ;
 StmtWithoutAnnotations ::= SUBLOC sub::PureExp IN father::PureExp ;
 StmtWithoutAnnotations ::= ASSERT e::DataExp ;
 StmtWithoutAnnotations ::= AWAIT Guard ;
 StmtWithoutAnnotations ::= SUSPEND ;
 StmtWithoutAnnotations ::= RETURN e::Exp ;
 StmtWithoutAnnotations ::= MOVECOGTO DataExp ;
PureExpNoIf ::= ConstructorExp ;
 PureExpNoIf ::= NULL ;
 PureExpNoIf ::= FnappExp ;
 PureExpNoIf ::= CaseExp ;
 PureExpNoIf ::= VarOrFieldRef ;
 PureExpNoIf ::= THIS ;
 PureExpNoIf ::= FnappListExp ;
 PureExpNoIf ::= LetExp ;
DatatypeuseList ::= [i] Datatypeuse ;
 DatatypeuseList ::= l::DatatypeuseList COMMA i::Datatypeuse ;
OptfeatureList ::= OPTFEATURES l::FeatureList SEMICOLON ;
 OptfeatureList ::= ε ;
OrAppcond ::= ac1::OrAppcond OROR ac2::AndAppcond ;
 OrAppcond ::= AndAppcond ;
MethodList ::= l::MethodList i::Method ;
 MethodList ::= [i] Method ;
SqlTupleScalarFunction ::= SqlTupleScalarFunctionConcat ;
StringLiteral ::= [s] STRINGLITERAL ;
InitBlock ::= Block ;
Featuremodeldecl ::= l::Featuremodeldecl EXTENSION ext::Fextension ;
 Featuremodeldecl ::= l::Featuremodeldecl ROOT f::FeatureDecl ;
 Featuremodeldecl ::= ε ;
NewlocExp ::= NEW LOC ;
SqlTupleConstantList ::= [c] SqlTupleConstant ;
 SqlTupleConstantList ::= l::SqlTupleConstantList COMMA c::SqlTupleConstant ;
ModuleName ::= TypeName ;
MainBlock ::= (al::AnnotationList)? LBRACE (s::StmtList)? RBRACE ;
DeltaParamDecls ::= LPAREN (f::DeltaParamDeclList)? RPAREN ;
Adaptation ::= product::TYPE_IDENTIFIER BY update::TYPE_IDENTIFIER SEMICOLON ;
CompoundStmt ::= IfThenElseStmt ;
 CompoundStmt ::= BlockWithoutAnnotations ;
 CompoundStmt ::= WhileStmt ;
DeltaparamList ::= l::DeltaparamList COMMA p::Deltaparam ;
 DeltaparamList ::= [p] Deltaparam ;
DataExpList ::= l::DataExpList COMMA i::DataExp ;
 DataExpList ::= [i] DataExp ;
Methodsig ::= (al::AnnotationList)? returntype::TypeExp id::IDENTIFIER LPAREN (params::ParamDeclList)? RPAREN ;
PatternList ::= l::PatternList COMMA i::Pattern ;
 PatternList ::= [i] Pattern ;
SqlTupleScalarFunctionSum ::= f1::SqlTupleScalarFunctionSum MINUS f2::SqlTupleScalarFunctionProduct ;
 SqlTupleScalarFunctionSum ::= f1::SqlTupleScalarFunctionSum PLUS f2::SqlTupleScalarFunctionProduct ;
 SqlTupleScalarFunctionSum ::= f1::SqlTupleScalarFunctionSum MINUS LPAREN f2::SqlTupleScalarFunctionSum RPAREN ;
 SqlTupleScalarFunctionSum ::= SqlTupleScalarFunctionProduct ;
LAYOUT ::= Comment ;
 LAYOUT ::= ε ;
InfModifierFragment ::= REMOVES ms::Methodsig SEMICOLON ;
 InfModifierFragment ::= ADDS ms::Methodsig SEMICOLON ;
QualifiedName ::= qn::TypeName DOT n::IDENTIFIER ;
DeltaClause ::= DELTA d::Deltaspec (a::AfterCondition)? (f::FromCondition)? (w::WhenCondition)? ;
QualifiedClassDecl ::= (annotations::AnnotationList)? CLASS id::TypeName (params::ParamDecls)? (i::ImplementInterfaces)? LBRACE (fields::FieldDeclList)? (initBlock::InitBlock)? (methods::MethodList)? RBRACE ;
FnappListExp ::= f::Name l::ListLiteralExp ;
FnappExp ::= f::Name LPAREN (l::DataExpList)? RPAREN ;
ClassDecl ::= (annotations::AnnotationList)? CLASS id::TYPE_IDENTIFIER (params::ParamDecls)? (i::ImplementInterfaces)? LBRACE (fields::FieldDeclList)? (initBlock::InitBlock)? (methods::MethodList)? RBRACE ;
LetExp ::= LET LPAREN var::ParamDecl RPAREN ASSIGN val::DataExp IN exp::DataExp ;
OptSqlCondition ::= WHERE c::SqlOrCondition ;
 OptSqlCondition ::= ε ;
DeltaDeclList ::= [t] DeltaDecl ;
 DeltaDeclList ::= l::DeltaDeclList t::DeltaDecl ;
DeltaParamDecl ::= [p] ParamDecl ;
 DeltaParamDecl ::= id::TYPE_IDENTIFIER c::HasCondition ;
Deltaparams ::= LPAREN l::DeltaparamList RPAREN ;
DeltaAccess ::= USES m::ModuleName SEMICOLON ;
ConstructorArg ::= [u] Datatypeuse ;
 ConstructorArg ::= u::Datatypeuse id::IDENTIFIER ;
SqlOrderingAttribute ::= e::DataExp DESC ;
 SqlOrderingAttribute ::= [e] DataExp ;
 SqlOrderingAttribute ::= e::DataExp ASC ;
OrExp ::= AndExp ;
 OrExp ::= e1::OrExp OROR e2::AndExp ;
FunctionalModifier ::= ADDS typesyndecl::TypesynDecl ;
 FunctionalModifier ::= MODIFIES typesyndecl::TypesynDecl ;
 FunctionalModifier ::= ADDS datatypedecl::DatatypeDecl ;
 FunctionalModifier ::= ADDS functiondecl::FunctionDecl ;
 FunctionalModifier ::= MODIFIES datatypedecl::DatatypeDecl ;
EffExp ::= AsyncCall ;
 EffExp ::= NewlocExp "/"* Component* "/" ;
 EffExp ::= NewExp ;
 EffExp ::= IncompleteExp ;
 EffExp ::= SyncCall ;
 EffExp ::= SQL LPAREN e::SqlExp RPAREN ;
 EffExp ::= OriginalCall ;
 EffExp ::= p::PureExpPrefix DOT GET ;
PatternParams ::= LPAREN (l::PatternList)? RPAREN ;
ModuleDeclList ::= l::ModuleDeclList t::ModuleDecl ;
 ModuleDeclList ::= [t] ModuleDecl ;
CaseBranch ::= lhs::Pattern RARROW rhs::DataExp SEMICOLON ;
SqlAttrRefList ::= l::SqlAttrRefList COMMA a::SqlAttrRef ;
 SqlAttrRefList ::= [a] SqlAttrRef ;
SqlCondition ::= NOT c::SqlCondition ;
 SqlCondition ::= f1::SqlTupleScalarFunction r::SqlComparisonRelation f2::SqlTupleScalarFunction ;
 SqlCondition ::= a::StringLiteral IS NULL ;
 SqlCondition ::= LPAREN c::SqlOrCondition RPAREN ;
IntList ::= MINUS i::INTLITERAL ;
 IntList ::= il::IntList COMMA MINUS i::INTLITERAL ;
 IntList ::= il::IntList COMMA i::INTLITERAL ;
 IntList ::= [i] INTLITERAL ;
ProductList ::= [p] Product ;
 ProductList ::= l::ProductList p::Product ;
AndAppcond ::= ac1::AndAppcond ANDAND ac2::FactorAppcond ;
 AndAppcond ::= FactorAppcond ;
Datatypeparam ::= [id] TYPE_IDENTIFIER ;
SqlGroupingAttributes ::= ε ;
 SqlGroupingAttributes ::= GROUP BY a::SqlAttrRefList ;
LocationExp ::= LOC LPAREN param::PureExp RPAREN ;
IfnameList ::= l::IfnameList COMMA i::Ifname ;
 IfnameList ::= [i] Ifname ;
FnodeList ::= ε ;
 FnodeList ::= l::FnodeList COMMA f::Fnode ;
 FnodeList ::= [f] Fnode ;
TypeName ::= QualifiedTypeName ;
 TypeName ::= SimpleTypeName ;
Datatypeuse ::= (l::AnnotationList)? n::TypeName LT p::DatatypeuseList GT ;
 Datatypeuse ::= (l::AnnotationList)? n::TypeName ;
ImportList ::= [t] Import ;
 ImportList ::= l::ImportList t::Import ;
SqlTupleCaseFunction ::= CASE b::SqlTupleCaseBranches ELSE f::SqlTupleScalarFunction END ;
Method ::= CRITICAL ms::Methodsig b::Block ;
 Method ::= ms::Methodsig b::Block ;
FatherExp ::= FATHER LPAREN param::PureExp RPAREN ;
--------------------metamodels::ACG.bgf--------------------
CollectionExp ::= SequenceExp ;
StatementBlock ::= Node ;
 StatementBlock ::= CompoundStat ;
ASMNode ::= name::Expression ;
SequenceExp ::= (elements::Expression)+ ;
Attribute ::= context::String name::String body::Expression ;
OperatorCallExp ::= (arguments::Expression)+ ;
LoadStat ::= operand::Expression ;
Function ::= context::String name::String (parameters::Parameter)+ body::Expression ;
GotoStat ::= label::LabelStat ;
BooleanExp ::= value::Boolean ;
NewStat ::= ε ;
SimpleNode ::= element::String mode::String guard::Expression ;
CallStat ::= operand::Expression ;
LetStat ::= variable::VariableDecl value::Expression ;
EmitWithLabelRefStat ::= IfStat ;
 EmitWithLabelRefStat ::= GotoStat ;
LocatedElement ::= ACG ;
 LocatedElement ::= ACGElement ;
 LocatedElement ::= StatementBlock ;
 LocatedElement ::= Statement ;
 LocatedElement ::= VariableDecl ;
 LocatedElement ::= Expression ;
EmitStat ::= LabelStat ;
 EmitStat ::= NewStat ;
 EmitStat ::= DupStat ;
 EmitStat ::= DupX1Stat ;
 EmitStat ::= PopStat ;
 EmitStat ::= SwapStat ;
 EmitStat ::= IterateStat ;
 EmitStat ::= EndIterateStat ;
 EmitStat ::= GetAsmStat ;
 EmitStat ::= FindMEStat ;
 EmitStat ::= PushTStat ;
 EmitStat ::= PushFStat ;
 EmitStat ::= EmitWithOperandStat ;
 EmitStat ::= EmitWithLabelRefStat ;
IsAExp ::= source::Expression type::String ;
VariableDecl ::= Parameter ;
 VariableDecl ::= name::String ;
ACG ::= metamodel::String startsWith::String (elements::ACGElement)+ ;
VariableExp ::= variable::VariableDecl ;
ParamStat ::= name::Expression type::Expression ;
ConditionalStat ::= condition::Expression (elseStatements::Statement)+ ;
GetAsmStat ::= ε ;
ACGElement ::= Function ;
 ACGElement ::= Attribute ;
 ACGElement ::= Node ;
DupStat ::= ε ;
Statement ::= ReportStat ;
 Statement ::= FieldStat ;
 Statement ::= ParamStat ;
 Statement ::= EmitStat ;
 Statement ::= CompoundStat ;
PushTStat ::= ε ;
IterateStat ::= ε ;
FieldStat ::= name::Expression type::Expression ;
SuperCallStat ::= operand::Expression ;
NavigationExp ::= source::Expression name::String ;
LabelStat ::= name::String id::Expression ;
ReportStat ::= severity::Severity message::Expression ;
OclUndefinedExp ::= ε ;
PushIStat ::= operand::Expression ;
PCallStat ::= operand::Expression ;
PushFStat ::= ε ;
CompoundStat ::= ForEachStat ;
 CompoundStat ::= OnceStat ;
 CompoundStat ::= VariableStat ;
 CompoundStat ::= OperationStat ;
 CompoundStat ::= ConditionalStat ;
 CompoundStat ::= LetStat ;
 CompoundStat ::= AnalyzeStat ;
ForEachStat ::= iterator::VariableDecl collection::Expression ;
PushDStat ::= operand::Expression ;
OperationStat ::= context::Expression name::Expression ;
Expression ::= VariableExp ;
 Expression ::= SelfExp ;
 Expression ::= LastExp ;
 Expression ::= IfExp ;
 Expression ::= IsAExp ;
 Expression ::= LetExp ;
 Expression ::= PropertyCallExp ;
 Expression ::= LiteralExp ;
SetStat ::= operand::Expression ;
StoreStat ::= operand::Expression ;
EndIterateStat ::= ε ;
String ::= string() ;
IfStat ::= label::LabelStat ;
IteratorExp ::= iterator::VariableDecl body::Expression ;
CodeNode ::= element::String mode::String guard::Expression ;
PushStat ::= operand::Expression ;
StringExp ::= value::String ;
GetStat ::= operand::Expression ;
PropertyCallExp ::= NavigationExp ;
 PropertyCallExp ::= IteratorExp ;
 PropertyCallExp ::= OperationCallExp ;
SwapStat ::= ε ;
PopStat ::= ε ;
FindMEStat ::= ε ;
EmitWithOperandStat ::= PushStat ;
 EmitWithOperandStat ::= PushIStat ;
 EmitWithOperandStat ::= PushDStat ;
 EmitWithOperandStat ::= LoadStat ;
 EmitWithOperandStat ::= StoreStat ;
 EmitWithOperandStat ::= CallStat ;
 EmitWithOperandStat ::= PCallStat ;
 EmitWithOperandStat ::= SuperCallStat ;
 EmitWithOperandStat ::= GetStat ;
 EmitWithOperandStat ::= SetStat ;
LetExp ::= variable::VariableDecl value::Expression in::Expression ;
Node ::= ASMNode ;
 Node ::= CodeNode ;
 Node ::= SimpleNode ;
IfExp ::= condition::Expression thenExp::Expression elseExp::Expression ;
AnalyzeStat ::= target::Expression mode::String ;
IntegerExp ::= value::Integer ;
Integer ::= integer() ;
Severity ::= (critic::ε) | (error::ε) | (warning::ε) ;
OperationCallExp ::= OperatorCallExp ;
 OperationCallExp ::= (arguments::Expression)+ ;
OnceStat ::= ε ;
SelfExp ::= ε ;
VariableStat ::= definition::Expression name::Expression ;
LiteralExp ::= OclUndefinedExp ;
 LiteralExp ::= CollectionExp ;
 LiteralExp ::= BooleanExp ;
 LiteralExp ::= IntegerExp ;
 LiteralExp ::= StringExp ;
Parameter ::= name::String ;
Boolean ::= "true" | "false" ;
LastExp ::= ε ;
--------------------metamodels::ACME.bgf--------------------
Integer ::= integer() ;
Component ::= ComponentInstance ;
 Component ::= ComponentType ;
Element ::= Type ;
 Element ::= Component ;
 Element ::= Port ;
 Element ::= Connector ;
 Element ::= Role ;
 Element ::= System ;
Link ::= Attachment ;
 Link ::= Binding ;
Type ::= name::String (representations::Representation)+ (property::Property)+ ;
ACMEEntry ::= System ;
 ACMEEntry ::= ComponentType ;
ComponentType ::= extend::String ;
Role ::= name::String (representations::Representation)+ (property::Property)+ ;
ACMEFile ::= (entries::ACMEEntry)+ ;
Property ::= name::String val::String ;
ComponentInstance ::= instanceOf::String ;
String ::= string() ;
System ::= (componentDeclaration::ComponentInstance)+ (connectorDeclaration::Connector)+ (attachments::Link)+ (bindings::Link)+ ;
Connector ::= (roles::Role)+ system::System ;
Representation ::= (systems::System)+ ;
Boolean ::= "true" | "false" ;
Binding ::= compSrc::String portSrc::String compDest::String portDest::String ;
Attachment ::= comp::String port::String con::String role::String ;
Port ::= name::String (representations::Representation)+ (property::Property)+ ;
--------------------metamodels::ADELFE.bgf--------------------
Incomprehension ::= cooperationRules::CooperationRules ;
NCS ::= Incomprehension ;
 NCS ::= Ambiguity ;
 NCS ::= Incompetence ;
 NCS ::= Unproductiveness ;
 NCS ::= Concurrency ;
 NCS ::= Conflict ;
 NCS ::= Uselessness ;
 NCS ::= cooperationRules::CooperationRules ;
CooperationRules ::= (detects::NCS)+ ;
Element ::= environnement::Environnement action::CooperativeAgent perception::CooperativeAgent ;
Characteristic ::= cooperativeAgentCha::CooperativeAgent ;
CooperativeAgent ::= elementA::Element elementP::Element (representation::Representation)+ (skill::Skill)+ (aptitude::Aptitude)+ (characteristic::Characteristic)+ (communication::Communication)+ (observes::CooperationRules)+ ;
Unproductiveness ::= cooperationRules::CooperationRules ;
Uselessness ::= cooperationRules::CooperationRules ;
Communication ::= cooperativeAgentCom::CooperativeAgent (aip::AIP)+ ;
Concurrency ::= cooperationRules::CooperationRules ;
Conflict ::= cooperationRules::CooperationRules ;
Skill ::= cooperativeAgentS::CooperativeAgent ;
Incompetence ::= cooperationRules::CooperationRules ;
Ambiguity ::= cooperationRules::CooperationRules ;
Representation ::= cooperativeAgentR::CooperativeAgent element::Element ;
Environnement ::= element::Element ;
AIP ::= ε ;
Aptitude ::= cooperativeAgentA::CooperativeAgent ;
Classifier ::= Environnement ;
 Classifier ::= Element ;
 Classifier ::= Environnement | Element ;
--------------------metamodels::ASM.bgf--------------------
SkipRule ::= inSequence::Boolean ;
Function ::= (parameters::Parameter)+ returnType::String initTerm::Term isExternal::Boolean ;
AsmType ::= (function::ε) | (subasm::ε) ;
StringConstant ::= value::String ;
String ::= string() ;
UndefConstant ::= ε ;
ReturnRule ::= term::Term ;
LocatedElement ::= XAsmFile ;
 LocatedElement ::= Asm ;
 LocatedElement ::= Signature ;
 LocatedElement ::= MetaInformation ;
 LocatedElement ::= AccessUpdateFunction ;
 LocatedElement ::= Declaration ;
 LocatedElement ::= Parameter ;
 LocatedElement ::= Initialization ;
 LocatedElement ::= Term ;
 LocatedElement ::= Rule ;
 LocatedElement ::= ElseIf ;
 LocatedElement ::= ElementDecl ;
 LocatedElement ::= Extension ;
VariableDecl ::= Argument ;
ElementDecl ::= VariableDecl ;
 ElementDecl ::= Function ;
Universe ::= name::String (contents::String)+ (superUniverses::Universe)+ ;
AccessUpdateFunction ::= type::AccessUpdateType (functions::Function)+ ;
FunctionOrVariableTerm ::= declaration::ElementDecl (terms::Term)+ ;
IntegerConstant ::= value::Integer ;
Extension ::= (elements::VariableDecl)+ universe::Universe ;
DoForallRule ::= id::VariableDecl inSet::Universe condition::Term (doRule::Rule)+ ;
XAsmFile ::= XAsmSpec ;
 XAsmFile ::= Body ;
XAsmSpec ::= (Asm::Asm)+ ;
Integer ::= integer() ;
Argument ::= type::String ;
Rule ::= SkipRule ;
 Rule ::= AsmInvocation ;
 Rule ::= UpdateRule ;
 Rule ::= ChooseRule ;
 Rule ::= DoForallRule ;
 Rule ::= ConditionalRule ;
 Rule ::= ExtendRule ;
 Rule ::= ReturnRule ;
Asm ::= signature::Signature returnType::String metaInformation::MetaInformation body::Body ;
Declaration ::= Universe ;
 Declaration ::= Function ;
Signature ::= isMain::Boolean name::String (arguments::Argument)+ ;
ExtendRule ::= (extensions::Extension)+ (rules::Rule)+ ;
ElseIf ::= condition::Term (thenRule::Rule)+ elseRule::Rule elseIfRule::ElseIf ;
ChooseRule ::= chooseId::VariableDecl inSet::Universe guard::Term (ifChoosenRules::Rule)+ ifNotChoosenRule::Rule ;
OperatorTerm ::= opName::String leftExp::Term rightExp::Term ;
BooleanConstant ::= value::Boolean ;
Term ::= Constant ;
 Term ::= FunctionOrVariableTerm ;
 Term ::= OperatorTerm ;
AsmInvocation ::= asmName::String (arguments::Term)+ ;
Parameter ::= name::String type::String ;
Boolean ::= "true" | "false" ;
AccessUpdateType ::= (access::ε) | (update::ε) ;
MetaInformation ::= (usedAsIn::Signature)+ usedAs::AsmType (accessUpdateFunctions::AccessUpdateFunction)+ ;
UpdateRule ::= function::FunctionOrVariableTerm updateTerm::Term ;
Constant ::= BooleanConstant ;
 Constant ::= IntegerConstant ;
 Constant ::= StringConstant ;
 Constant ::= UndefConstant ;
ConditionalRule ::= condition::Term (thenRule::Rule)+ elseRule::Rule elseIfRule::ElseIf ;
Body ::= (declarations::Declaration)+ initialization::Initialization (rules::Rule)+ ;
Initialization ::= (rules::Rule)+ ;
--------------------metamodels::ATL.bgf--------------------
CollectionExp ::= BagExp ;
 CollectionExp ::= OrderedSetExp ;
 CollectionExp ::= SequenceExp ;
 CollectionExp ::= SetExp ;
RealExp ::= realSymbol::Double ;
Attribute ::= name::String initExpression::OclExpression type::OclType ;
SequenceExp ::= (elements::OclExpression)+ ;
OperatorCallExp ::= (arguments::OclExpression)+ operationName::String ;
SetExp ::= (elements::OclExpression)+ ;
NavigationOrAttributeCallExp ::= name::String ;
IntegerType ::= ε ;
LibraryRef ::= unit::Unit name::String ;
BooleanExp ::= booleanSymbol::Boolean ;
InPatternElement ::= SimpleInPatternElement ;
NumericExp ::= RealExp ;
 NumericExp ::= IntegerExp ;
EnumLiteralExp ::= name::String ;
PatternElement ::= InPatternElement ;
 PatternElement ::= OutPatternElement ;
LocatedElement ::= Unit ;
 LocatedElement ::= ModuleElement ;
 LocatedElement ::= InPattern ;
 LocatedElement ::= OutPattern ;
 LocatedElement ::= Binding ;
 LocatedElement ::= LibraryRef ;
 LocatedElement ::= ActionBlock ;
 LocatedElement ::= Statement ;
 LocatedElement ::= OclExpression ;
 LocatedElement ::= MapElement ;
 LocatedElement ::= VariableDeclaration ;
 LocatedElement ::= TupleTypeAttribute ;
 LocatedElement ::= OclFeatureDefinition ;
 LocatedElement ::= OclContextDefinition ;
 LocatedElement ::= OclFeature ;
 LocatedElement ::= OclModel ;
Binding ::= value::OclExpression outPatternElement::OutPatternElement propertyName::String isAssignment::Boolean ;
IterateExp ::= result::VariableDeclaration ;
BooleanType ::= ε ;
VariableExp ::= referredVariable::VariableDeclaration ;
OclFeature ::= Attribute ;
 OclFeature ::= Operation ;
BindingStat ::= source::OclExpression propertyName::String isAssignment::Boolean value::OclExpression ;
ActionBlock ::= rule::Rule (statements::Statement)+ ;
CollectionOperationCallExp ::= (arguments::OclExpression)+ operationName::String ;
PrimitiveExp ::= StringExp ;
 PrimitiveExp ::= BooleanExp ;
 PrimitiveExp ::= NumericExp ;
TupleExp ::= (tuplePart::TuplePart)+ ;
OclType ::= CollectionType ;
 OclType ::= Primitive ;
 OclType ::= OclAnyType ;
 OclType ::= TupleType ;
 OclType ::= OclModelElement ;
 OclType ::= MapType ;
 OclType ::= name::String definitions::OclContextDefinition oclExpression::OclExpression operation::Operation mapType2::MapType attribute::Attribute mapType::MapType collectionTypes::CollectionType tupleTypeAttribute::TupleTypeAttribute variableDeclaration::VariableDeclaration ;
OclFeatureDefinition ::= feature::OclFeature context_::OclContextDefinition ;
ModuleElement ::= Helper ;
 ModuleElement ::= Rule ;
Statement ::= ExpressionStat ;
 Statement ::= BindingStat ;
 Statement ::= IfStat ;
 Statement ::= ForStat ;
Helper ::= query::Query library::Library definition::OclFeatureDefinition ;
OclContextDefinition ::= definition::OclFeatureDefinition context_::OclType ;
Operation ::= name::String (parameters::Parameter)+ returnType::OclType body::OclExpression ;
NumericType ::= IntegerType ;
 NumericType ::= RealType ;
Primitive ::= StringType ;
 Primitive ::= BooleanType ;
 Primitive ::= NumericType ;
OclUndefinedExp ::= type::OclType ifExp3::IfExp appliedProperty::PropertyCallExp collection::CollectionExp letExp::LetExp loopExp::LoopExp parentOperation::OperationCallExp initializedVariable::VariableDeclaration ifExp2::IfExp owningOperation::Operation ifExp1::IfExp owningAttribute::Attribute ;
SimpleInPatternElement ::= mapsTo::OutPatternElement inPattern::InPattern (models::OclModel)+ ;
BagType ::= elementType::OclType ;
SuperExp ::= type::OclType ifExp3::IfExp appliedProperty::PropertyCallExp collection::CollectionExp letExp::LetExp loopExp::LoopExp parentOperation::OperationCallExp initializedVariable::VariableDeclaration ifExp2::IfExp owningOperation::Operation ifExp1::IfExp owningAttribute::Attribute ;
MapExp ::= (elements::MapElement)+ ;
VariableDeclaration ::= PatternElement ;
 VariableDeclaration ::= RuleVariableDeclaration ;
 VariableDeclaration ::= TuplePart ;
 VariableDeclaration ::= Iterator ;
 VariableDeclaration ::= Parameter ;
 VariableDeclaration ::= id::String varName::String type::OclType initExpression::OclExpression letExp::LetExp baseExp::IterateExp (variableExp::VariableExp)+ ;
SequenceType ::= elementType::OclType ;
TuplePart ::= tuple::TupleExp ;
TupleTypeAttribute ::= type::OclType tupleType::TupleType name::String ;
LoopExp ::= IterateExp ;
 LoopExp ::= IteratorExp ;
CalledRule ::= (parameters::Parameter)+ isEntrypoint::Boolean isEndpoint::Boolean ;
String ::= string() ;
IfStat ::= condition::OclExpression (thenStatements::Statement)+ (elseStatements::Statement)+ ;
OclExpression ::= VariableExp ;
 OclExpression ::= SuperExp ;
 OclExpression ::= PrimitiveExp ;
 OclExpression ::= CollectionExp ;
 OclExpression ::= TupleExp ;
 OclExpression ::= MapExp ;
 OclExpression ::= EnumLiteralExp ;
 OclExpression ::= OclUndefinedExp ;
 OclExpression ::= PropertyCallExp ;
 OclExpression ::= LetExp ;
 OclExpression ::= IfExp ;
 OclExpression ::= OclType ;
OrderedSetType ::= elementType::OclType ;
IteratorExp ::= name::String ;
OclAnyType ::= name::String definitions::OclContextDefinition oclExpression::OclExpression operation::Operation mapType2::MapType attribute::Attribute mapType::MapType collectionTypes::CollectionType tupleTypeAttribute::TupleTypeAttribute variableDeclaration::VariableDeclaration ;
ExpressionStat ::= expression::OclExpression ;
StringExp ::= stringSymbol::String ;
OclModelElement ::= model::OclModel ;
PropertyCallExp ::= NavigationOrAttributeCallExp ;
 PropertyCallExp ::= OperationCallExp ;
 PropertyCallExp ::= LoopExp ;
Query ::= body::OclExpression (helpers::Helper)+ ;
Unit ::= Library ;
 Unit ::= Query ;
 Unit ::= Module ;
 Unit ::= (libraries::LibraryRef)+ name::String ;
LetExp ::= variable::VariableDeclaration in_::OclExpression ;
RuleVariableDeclaration ::= rule::Rule ;
IfExp ::= thenExpression::OclExpression condition::OclExpression elseExpression::OclExpression ;
MapElement ::= map::MapExp key::OclExpression value::OclExpression ;
MatchedRule ::= LazyMatchedRule ;
 MatchedRule ::= inPattern::InPattern (children::MatchedRule)+ superRule::MatchedRule isAbstract::Boolean isRefining::Boolean isNoDefault::Boolean ;
IntegerExp ::= integerSymbol::Integer ;
Integer ::= integer() ;
ForStat ::= iterator::Iterator collection::OclExpression (statements::Statement)+ ;
SetType ::= elementType::OclType ;
Rule ::= MatchedRule ;
 Rule ::= CalledRule ;
Library ::= (helpers::Helper)+ ;
OutPatternElement ::= SimpleOutPatternElement ;
 OutPatternElement ::= ForEachOutPatternElement ;
RealType ::= ε ;
CollectionType ::= BagType ;
 CollectionType ::= OrderedSetType ;
 CollectionType ::= SequenceType ;
 CollectionType ::= SetType ;
 CollectionType ::= elementType::OclType ;
OperationCallExp ::= OperatorCallExp ;
 OperationCallExp ::= CollectionOperationCallExp ;
 OperationCallExp ::= (arguments::OclExpression)+ operationName::String ;
MapType ::= valueType::OclType keyType::OclType ;
BagExp ::= (elements::OclExpression)+ ;
OclModel ::= name::String metamodel::OclModel (elements::OclModelElement)+ (model::OclModel)+ ;
ForEachOutPatternElement ::= collection::OclExpression iterator::Iterator ;
Iterator ::= loopExpr::LoopExp ;
LazyMatchedRule ::= isUnique::Boolean ;
Module ::= isRefining::Boolean (inModels::OclModel)+ (outModels::OclModel)+ (elements::ModuleElement)+ ;
StringType ::= ε ;
InPattern ::= (elements::InPatternElement)+ rule::MatchedRule filter::OclExpression ;
Parameter ::= operation::Operation ;
Boolean ::= "true" | "false" ;
OrderedSetExp ::= (elements::OclExpression)+ ;
SimpleOutPatternElement ::= (reverseBindings::OclExpression)+ ;
TupleType ::= (attributes::TupleTypeAttribute)+ ;
OutPattern ::= rule::Rule (elements::OutPatternElement)+ ;
--------------------metamodels::AWKPrograms.bgf--------------------
AWKProgram ::= name::String input::File output::File script::Script ;
Instruction ::= value::String i_action::Action ;
Integer ::= integer() ;
Rule ::= InitialRule ;
 Rule ::= FinalRule ;
 Rule ::= r_script::Script pattern::Pattern action::Action ;
File ::= name::String (records::Record)+ ;
Script ::= name::String (rules::Rule)+ ;
Field ::= value::String f_record::Record ;
Boolean ::= "true" | "false" ;
Action ::= (instructions::Instruction)+ ;
FinalRule ::= r_script::Script pattern::Pattern action::Action ;
Record ::= r_file::File (fields::Field)+ ;
String ::= string() ;
InitialRule ::= r_script::Script pattern::Pattern action::Action ;
Pattern ::= regularExpression::String ;
--------------------metamodels::Agate.bgf--------------------
GenericActor ::= Actor ;
Event ::= notice::String description::String sensitivity::Integer name::String comment::String isValidIn::OperationalContext isAssociatedWith::Stake ;
Project ::= moi::Role moa::Role director::Role (defines::ProjectContextElement)+ (associatedISs::InformationSystem)+ ;
Center ::= (deployedObjects::ReusableObject)+ ;
OrganizationObject ::= GenericCenter ;
 OrganizationObject ::= InformationSystem ;
 OrganizationObject ::= GenericRole ;
 OrganizationObject ::= GenericActor ;
Other ::= type::String ;
Risk ::= disponibilityLevel::Integer integrityLevel::Integer confidencialityLevel::Integer isCoveredByCR::CountermeasureRequirement isCoveredByAO::ArchitectureObject isCoveredByMO::MADIOSObject isCoveredByDR::DomainRelation relatesToRO::ReusableObject relatesToCO::CommunicationObject isGeneratedBy::Threat ;
GenericCenter ::= Center ;
AGATEObject ::= Objective ;
 AGATEObject ::= OperationalContext ;
 AGATEObject ::= Project ;
 AGATEObject ::= GenericStandard ;
 AGATEObject ::= GenericThreat ;
 AGATEObject ::= TrafficClass ;
 AGATEObject ::= InterfaceCharacteristic ;
 AGATEObject ::= ProjectContextElement ;
 AGATEObject ::= DataClass ;
 AGATEObject ::= Event ;
 AGATEObject ::= Risk ;
 AGATEObject ::= Stake ;
 AGATEObject ::= Requirement ;
 AGATEObject ::= Means ;
 AGATEObject ::= DomainRelation ;
 AGATEObject ::= ArchitectureObject ;
Site ::= type::String localization::String (deployedObjects::ReusableObject)+ ;
CountermeasureRequirement ::= type::String residualVulnerability::String ;
Object ::= AGATEObject ;
 Object ::= ReferenceObject ;
 Object ::= MADIOSObject ;
Standard ::= (caracterizeIC::InterfaceCharacteristic)+ (caracterizeTC::TechnicalComponent)+ (caracterizeLC::LogicalComponent)+ (caracterizeP::Package)+ (caracterizeR::Requirement)+ ;
Traffic ::= sequence::String type::String interoperabilityLevel::Integer trafficClass::TrafficClass dataClass::DataClass receiverP::Package transmitterP::Package receiverIS::InformationSystem transmitterIS::InformationSystem receiverC::Center transmitterC::Center receiverTO::TelecomOperator transmitterTO::TelecomOperator receiverLC::LogicalComponent transmitterLC::LogicalComponent receiverTC::TechnicalComponent transmitterTC::TechnicalComponent ;
MADIOSObject ::= Process ;
 MADIOSObject ::= Procedure ;
 MADIOSObject ::= Operation ;
 MADIOSObject ::= Activity ;
InformationSystem ::= nature::String version::String membershipCountry::String currentLocation::String startServiceDate::String stopServiceDate::String isGeneric::Boolean functionalDomain::String type::String (composedOf::InformationSystem)+ (associatedProjects::Project)+ (defines::Objective)+ (fulfills::Role)+ (fixes::OperationalContext)+ (usedBy::Actor)+ (interfaces::Interface)+ ;
InformationFlow ::= priority::Integer frequency::String media::String continuity::String myContainer::String time::String availabilityRatio::String integrity::Integer interoperabilityLevel::Integer mediumFlow::String maximumFlow::String duration::String unitMediumFlow::String averageEvent::String maximumFlowOverOneDuration::String transports::Information receiverP::Package transmitterP::Package receiverOO::OrganizationObject transmitterOO::OrganizationObject receiverOF::OperationalFunction transmitterOF::OperationalFunction ;
Stake ::= type::String relativeDate::String unit::String date::String (events::Event)+ ;
ServiceReferenceFrame ::= (composedOfRS::ReferenceService)+ (composedOfRLC::ReferenceLogicalComponent)+ ;
Dependence ::= type::String necessaryObjectS::Service dependentObjectS::Service necessaryObjectLC::LogicalComponent dependentObjectLC::LogicalComponent necessaryObjectP::Package dependentObjectP::Package necessaryObjectC::Center dependentObjectC::Center necessaryObjectIS::InformationSystem dependentObjectIS::InformationSystem ;
Actor ::= TelecomOperator ;
Process ::= (isCoveredByP::Package)+ (isCoveredByS::Service)+ ;
DataClass ::= notice::String description::String sensitivity::Integer name::String comment::String isValidIn::OperationalContext isAssociatedWith::Stake ;
Flow ::= unit::String ;
GenericRole ::= Role ;
ReferenceObject ::= ReferenceTechnicalComponent ;
 ReferenceObject ::= TechnicalComponentReferenceFrame ;
 ReferenceObject ::= ReferenceLogicalComponent ;
 ReferenceObject ::= ReferenceService ;
Operation ::= (isCoveredByP::Package)+ (isCoveredByS::Service)+ ;
TechnicalRequirement ::= criticality::Integer priority::String state::String (isCoveredBy::ArchitectureObject)+ (characterizes::ArchitectureObject)+ ;
HierarchicalRelation ::= ε ;
SecurityRequirement ::= criticality::Integer priority::String state::String (isCoveredBy::ArchitectureObject)+ (characterizes::ArchitectureObject)+ ;
InteroperabilityRequirement ::= criticality::Integer priority::String state::String (isCoveredBy::ArchitectureObject)+ (characterizes::ArchitectureObject)+ ;
TechnicalComponentReferenceFrame ::= (composedOf::ReferenceTechnicalComponent)+ ;
TechnicalComponent ::= type::String cots::Boolean editor::Boolean constructor::Boolean version::String technology::String definedExtension::String statut::String (composedOf::TechnicalComponent)+ isASpecializationOf::ReferenceTechnicalComponent (interfaces::Interface)+ ;
ReferenceLogicalComponent ::= (composedOf::ReferenceLogicalComponent)+ ;
FunctionalRelation ::= necessaryObjectOF::OperationalFunction dependentObjectOF::OperationalFunction necessaryObjectOO::OrganizationObject dependentObjectOO::OrganizationObject necessaryObjectP::Package dependentObjectP::Package ;
TelecomOperator ::= contractType::String (interfaces::Interface)+ ;
Threat ::= nature::String DCSSI::String (clarifies::Vulnerability)+ ;
Protocol ::= isoLevel::Integer ;
Procedure ::= (isCoveredByP::Package)+ (isCoveredByS::Service)+ ;
String ::= string() ;
OperationalRequirement ::= criticality::Integer priority::String state::String (isCoveredBy::ArchitectureObject)+ (characterizes::ArchitectureObject)+ ;
GenericThreat ::= Threat ;
Activity ::= (isCoveredByP::Package)+ (isisCoveredByS::Service)+ ;
ReferenceTechnicalComponent ::= (composedOf::ReferenceTechnicalComponent)+ ;
OperationalFunction ::= (composedOf::OperationalFunction)+ (isCoveredByP::Package)+ (isCoveredByS::Service)+ ;
ReusableObject ::= GenericSite ;
 ReusableObject ::= Package ;
 ReusableObject ::= Service ;
 ReusableObject ::= TechnicalComponent ;
 ReusableObject ::= LogicalComponent ;
 ReusableObject ::= OperationalFunction ;
 ReusableObject ::= OrganizationObject ;
Package ::= (subPackage::Package)+ (time::Role)+ (groupedObjects::ReusableObject)+ isCoveredByLC::LogicalComponent isCoveredByTC::TechnicalComponent (composedOf::Interface)+ ;
ProjectContextElement ::= type::String ;
Requirement ::= CountermeasureRequirement ;
 Requirement ::= TechnicalRequirement ;
 Requirement ::= PerformanceRequirement ;
 Requirement ::= InteroperabilityRequirement ;
 Requirement ::= OperationalRequirement ;
 Requirement ::= SecurityRequirement ;
Integer ::= integer() ;
GenericSite ::= Site ;
ConfidentialityLevel ::= type::String ;
OperationalContext ::= notice::String description::String sensitivity::Integer name::String comment::String isValidIn::OperationalContext isAssociatedWith::Stake ;
TrafficClass ::= (traffic::Traffic)+ ;
Interconnection ::= linkType::String between::Interface ;
Interface ::= (characteristics::InterfaceCharacteristic)+ (composedOf::Interface)+ ;
Objective ::= type::String priority::Integer indicator::String traceability::String ;
Role ::= type::String ;
CommunicationObject ::= Interface ;
 CommunicationObject ::= Interconnection ;
 CommunicationObject ::= InformationFlow ;
 CommunicationObject ::= Traffic ;
 CommunicationObject ::= Information ;
Service ::= Statut::String isASpecializationOf::ReferenceService isCoveredBy::LogicalComponent ;
LogicalComponent ::= type::String statut::String (composedOf::LogicalComponent)+ isASpecializationOf::ReferenceLogicalComponent (interfaces::Interface)+ isCoveredBy::TechnicalComponent ;
InterfaceCharacteristic ::= ConfidentialityLevel ;
 InterfaceCharacteristic ::= Protocol ;
 InterfaceCharacteristic ::= Flow ;
 InterfaceCharacteristic ::= Other ;
GenericStandard ::= Standard ;
PerformanceRequirement ::= criticality::Integer priority::String state::String (isCoveredBy::ArchitectureObject)+ (characterizes::ArchitectureObject)+ ;
ArchitectureObject ::= ReusableObject ;
 ArchitectureObject ::= CommunicationObject ;
Information ::= format::String storageSupport::String persistence::String DataType::DataClass ;
ReferenceService ::= (composedOf::ReferenceObject)+ ;
Boolean ::= "true" | "false" ;
Entity ::= Object ;
DomainRelation ::= HierarchicalRelation ;
 DomainRelation ::= FunctionalRelation ;
 DomainRelation ::= Dependence ;
--------------------metamodels::Amble.bgf--------------------
Process ::= minId::Integer maxId::Integer instancesNb::Integer (states::State)+ (transitions::Transition)+ initial::Action (variables::Variable)+ (connectedTo::Network)+ ;
Network ::= (channels::Channel)+ ;
Integer ::= integer() ;
Variable ::= type::String initValue::String ;
Element ::= Program ;
 Element ::= Process ;
 Element ::= State ;
 Element ::= Guard ;
 Element ::= Action ;
 Element ::= Network ;
 Element ::= Channel ;
 Element ::= Message ;
 Element ::= Variable ;
Transall ::= waitFor::Message ;
Trans ::= waitFor::Message ;
Boolean ::= "true" | "false" ;
Message ::= name::String ;
Action ::= name::String ;
Guard ::= name::String ;
Strans ::= guard::Guard action::Action source::State target::State ;
Transition ::= Trans ;
 Transition ::= Strans ;
 Transition ::= Transall ;
Program ::= (processes::Process)+ (networks::Network)+ ;
Channel ::= (messages::Message)+ source::Process target::Process ;
State ::= isInitial::Boolean (incoming::Transition)+ (outgoing::Transition)+ ;
String ::= string() ;
--------------------metamodels::AntScripts.bgf--------------------
Attribute ::= value::String ;
Project ::= (properties::Property)+ (targets::Target)+ defaultTarget::Target ;
TaskElement ::= Task ;
 TaskElement ::= TaskParameter ;
Task ::= (attributes::Attribute)+ (elements::TaskElement)+ ;
Property ::= name::String value::String location::String refid::String resource::String file::String url::String environment::String classpath::String classpathref::String prefix::String ;
TaskParameter ::= (attributes::Attribute)+ (elements::TaskElement)+ ;
CommentableElement ::= TaskElement ;
NamedElement ::= Attribute ;
 NamedElement ::= Project ;
 NamedElement ::= Target ;
 NamedElement ::= TaskElement ;
String ::= string() ;
Target ::= if::String unless::String (tasks::Task)+ (depends::Target)+ ;
--------------------metamodels::AnyLogic.bgf--------------------
Integer ::= integer() ;
Experiment ::= SimulationExperiment ;
Control ::= Button ;
 Control ::= width::Integer height::Integer asObject::Boolean embeddedIcon::Boolean fillColor::Integer textColor::Integer enableExpression::String actionCode::String labelText::String font::Font ;
ActiveObjectClass ::= clientAreaTopLeft::Point presentationTopGroupPersistent::Boolean iconTopGroupPersistent::Boolean generic::Boolean genericParameters::String agent::Boolean environmentDefinesInitialLocation::Boolean (connectors::Connector)+ (embeddedObjects::EmbeddedObject)+ (shapes::Shape)+ ;
VisualModelElement ::= Connector ;
 VisualModelElement ::= EmbeddedObject ;
 VisualModelElement ::= Shape ;
 VisualModelElement ::= Control ;
 VisualModelElement ::= position::Point label::Point publicFlag::Boolean presentationFlag::Boolean showLabel::Boolean ;
ModelElement ::= VisualModelElement ;
 ModelElement ::= Model ;
 ModelElement ::= ActiveObjectClass ;
 ModelElement ::= Experiment ;
 ModelElement ::= id::Integer name::String excludeFromBuild::Boolean ;
Button ::= width::Integer height::Integer asObject::Boolean embeddedIcon::Boolean fillColor::Integer textColor::Integer enableExpression::String actionCode::String labelText::String font::Font ;
String ::= string() ;
Point ::= x::Integer y::Integer ;
Font ::= name::String size::Integer style::Integer ;
Frame ::= x::Integer y::Integer width::Integer height::Integer ;
Text ::= color::Integer text::String font::Font alignment::String ;
Connector ::= sourceEmbeddedObject::EmbeddedObject sourceConnectableName::String targetEmbeddedObject::EmbeddedObject targetConnectableName::String (points::Point)+ ;
Parameter ::= name::String value::String ;
EmbeddedObject ::= presentation::EmbeddedObjectPresentation activeObjectClass::ActiveObjectClassRef genericParametersSubstitute::String (parameters::Parameter)+ ;
Model ::= engineVersion::Integer javaPackageName::String (activeObjectClasses::ActiveObjectClass)+ (experiments::Experiment)+ ;
Boolean ::= "true" | "false" ;
SimulationExperiment ::= activeObjectClass::ActiveObjectClass clientAreaTopLeft::Point presentationTopGroupPersistent::Boolean iconTopGroupPersistent::Boolean frame::Frame commandLineArguments::String maximumMemory::Integer randomSeed::Boolean seedValue::Integer vmArgs::String absoluteAccuracy::Double relativeAccuracy::Double timeAccuracy::Double fixedTimeStep::Double (shapes::Shape)+ (controls::Control)+ (parameters::Parameter)+ enableAdaptiveFrameManagement::Boolean enableAntiAliasing::Boolean enablePanning::Boolean enableZoom::Boolean executionMode::String cpuRatio::String title::String framesPerSecond::String realTimeScale::String (uiProperties::Parameter)+ useCalendar::Boolean stopOption::String initialDate::String initialTime::String finalDate::String finalTime::String modelTimeUnit::String ;
EmbeddedObjectPresentation ::= asObject::Boolean embeddedIcon::Boolean rotation::Double ;
Shape ::= EmbeddedObjectPresentation ;
 Shape ::= Text ;
 Shape ::= asObject::Boolean embeddedIcon::Boolean rotation::Double ;
ActiveObjectClassRef ::= packageName::String className::String ;
--------------------metamodels::Architectural_Description.bgf--------------------
Integer ::= integer() ;
MainView ::= (isProjectedOnto::ArchitectureView)+ (consistsOf::ModelElement)+ ;
ArchitectureDescription ::= (selects::ArchitectureView)+ (organizedBy::ArchitectureView)+ ;
Boolean ::= "true" | "false" ;
ArchitectureViewPoint ::= defines::MainView (views::ArchitectureView)+ ;
ArchitectureView ::= (selectedBy::ArchitectureDescription)+ (constituents::ModelElement)+ (conformsTo::ArchitectureViewPoint)+ ;
ModelElement ::= ε ;
Architecture ::= describedBy::ArchitectureDescription ;
String ::= string() ;
--------------------metamodels::AsmL.bgf--------------------
RangeSequence ::= minval::Term maxval::Term ;
EnumerateSet ::= (vals::Term)+ ;
Function ::= Main ;
 Function ::= Method ;
StringConstant ::= val::String ;
ForallRule ::= (expressions::InWhereHolds)+ doRule::Body ;
NamedType ::= name::String ;
VarDeclaration ::= isConstant::Boolean isDeclaration::Boolean isLocal::Boolean name::String type::Type ;
MethodInvocation ::= called::MethodCallTerm ;
SequenceTerm ::= EnumerateSequence ;
 SequenceTerm ::= RangeSequence ;
StepUntilFixPoint ::= name::String ;
AsmLFile ::= (elements::AsmLElement)+ main::Main ;
ReturnRule ::= term::Term ;
Step ::= StepUntilFixPoint ;
 Step ::= StepExpression ;
 Step ::= StepForEach ;
NullConstant ::= ε ;
AsmLElement ::= Namespace ;
 AsmLElement ::= Structure ;
 AsmLElement ::= Class ;
 AsmLElement ::= Enumeration ;
 AsmLElement ::= Function ;
 AsmLElement ::= Type ;
 AsmLElement ::= VarDeclaration ;
LocatedElement ::= Body ;
 LocatedElement ::= InWhereHolds ;
 LocatedElement ::= AsmLFile ;
 LocatedElement ::= AsmLElement ;
 LocatedElement ::= VarOrCase ;
 LocatedElement ::= VarOrMethod ;
 LocatedElement ::= Enumerator ;
 LocatedElement ::= Parameter ;
 LocatedElement ::= Initially ;
 LocatedElement ::= Rule ;
 LocatedElement ::= Term ;
Enumerator ::= name::String value::Term ;
IntegerConstant ::= val::Integer ;
StepForEach ::= (expressions::InWhereHolds)+ ;
Type ::= NamedType ;
 Type ::= MapType ;
 Type ::= TupletType ;
 Type ::= SetType ;
 Type ::= SequenceType ;
Main ::= mainFile::AsmLFile (initialisations::Initially)+ ;
Class ::= name::String isAbstract::Boolean superClassName::String (varOrMethod::VarOrMethod)+ ;
ElseIf ::= condition::Term thenRule::Body elseRule::Body elseIfRule::ElseIf ;
Structure ::= name::String (varOrCase::VarOrCase)+ superStructureName::String ;
ChooseRule ::= (expressions::InWhereHolds)+ ifChoosenRules::Body ifNotChoosenRule::Body ;
StepUntil ::= expression::Term ;
Case ::= name::String (variables::VarDeclaration)+ ;
UpdateMapRule ::= updateMap::VarTerm (parameters::Term)+ ;
SetTerm ::= EnumerateSet ;
 SetTerm ::= RangeSet ;
 SetTerm ::= AlgorithmSet ;
BooleanConstant ::= val::Boolean ;
VarOrMethod ::= Method ;
 VarOrMethod ::= ownerClass::Class ;
MapTerm ::= ofTerm::Term toTerm::Term separator::String ;
Constant ::= BooleanConstant ;
 Constant ::= IntegerConstant ;
 Constant ::= StringConstant ;
 Constant ::= NullConstant ;
ForAllTerm ::= (expressions::InWhereHolds)+ ;
Operator ::= opName::String leftExp::Term rightExp::Term ;
Body ::= (rules::Rule)+ ;
RemoveRule ::= val::Term set::VarTerm ;
SequenceType ::= of::Type ;
SkipRule ::= ownerBody::Body ;
Namespace ::= name::String ;
NewInstance ::= name::String (parameters::Term)+ ;
String ::= string() ;
Initially ::= id::VarTerm val::Term ;
UpdateFieldRule ::= path::VarTerm ;
Enumeration ::= name::String (enumerators::Enumerator)+ ;
TupletType ::= types::Type ;
EnumerateSequence ::= (vals::Term)+ ;
StepWhile ::= expression::Term ;
StepExpression ::= StepWhile ;
 StepExpression ::= StepUntil ;
PredicateTerm ::= ForAllTerm ;
 PredicateTerm ::= ExistsTerm ;
 PredicateTerm ::= AnyIn ;
 PredicateTerm ::= (expressions::InWhereHolds)+ ;
TulpletTerm ::= terms::Term ;
Integer ::= integer() ;
AddRule ::= val::Term set::VarTerm ;
SetType ::= of::Type ;
Rule ::= SkipRule ;
 Rule ::= Step ;
 Rule ::= MethodInvocation ;
 Rule ::= UpdateRule ;
 Rule ::= ChooseRule ;
 Rule ::= ForallRule ;
 Rule ::= ConditionalRule ;
 Rule ::= ReturnRule ;
 Rule ::= AddRule ;
 Rule ::= RemoveRule ;
UpdateVarRule ::= updateVar::Term ;
VarOrCase ::= Case ;
MapType ::= ofType::Type toType::Type ;
VarTerm ::= name::String ;
AlgorithmSet ::= (expressions::InWhereHolds)+ ;
InWhereHolds ::= var::Term in::Term where::Term holds::Term ;
AnyIn ::= (expressions::InWhereHolds)+ ;
Term ::= VarTerm ;
 Term ::= Operator ;
 Term ::= MapTerm ;
 Term ::= TulpletTerm ;
 Term ::= MethodCallTerm ;
 Term ::= PredicateTerm ;
 Term ::= SetTerm ;
 Term ::= SequenceTerm ;
 Term ::= Constant ;
MethodCallTerm ::= NewInstance ;
 MethodCallTerm ::= name::String (parameters::Term)+ ;
Parameter ::= name::String type::Type ownerMethod::Method ;
Boolean ::= "true" | "false" ;
ExistsTerm ::= isUnique::Boolean ;
RangeSet ::= minval::Term maxval::Term ;
UpdateRule ::= UpdateVarRule ;
 UpdateRule ::= UpdateFieldRule ;
 UpdateRule ::= UpdateMapRule ;
ConditionalRule ::= ElseIf ;
 ConditionalRule ::= condition::Term thenRule::Body elseRule::Body elseIfRule::ElseIf ;
Method ::= isAbstract::Boolean isShared::Boolean isEntryPoint::Boolean isOverride::Boolean returnType::Type (parameters::Parameter)+ ;
--------------------metamodels::Automaton.bgf--------------------
Integer ::= integer() ;
Transition ::= letter::String source::State target::State ;
String ::= string() ;
State ::= name::String combination::State ;
FiniteAutomaton ::= (alphabet::String)+ (transitionSet::Transition)+ initialState::State (finalStateSet::State)+ (StateSet::State)+ ;
--------------------metamodels::BMM.bgf--------------------
Influencer ::= Regulation ;
BusinessRule ::= (businessRuleGuidesBusinessProcess::BusinessProcess)+ ;
FixedAsset ::= Offering ;
 FixedAsset ::= (fixedAssetProvidesResource::Resource)+ ;
End ::= Vision ;
 End ::= DesiredResult ;
 End ::= Vision | DesiredResult ;
DesiredResult ::= Goal ;
 DesiredResult ::= Objective ;
 DesiredResult ::= (broaderDesiredResultIncludesMoreSpecificDesiredResult::DesiredResult)+ ;
OrganizationUnit ::= (organizationUnitDefinesEnd::End)+ (organizationUnitEstablishesMeans::Means)+ (organizationUnitIsResponsibleForAsset::Asset)+ (organizationUnitIsResponsibleForLiability::Liability)+ (organizationUnitRecognizesInfluencer::Influencer)+ (organizationUnitActAsInfluencingOrganization::InfluencingOrganization)+ (organizationUnitMakesAssessment::Assessment)+ (organizationUnitIsResponsibleForBusinessProcess::BusinessProcess)+ ;
Goal ::= goalAmplidfiesVision::Vision ;
BusinessPolicy ::= (businessPolicyIsBasisForBusinessRule::BusinessRule)+ (broaderBusinessPolicyIncludesMoreSpecificBusinessPolicy::BusinessPolicy)+ (businessPolicyGovernsBusinessProcess::BusinessProcess)+ ;
String ::= string() ;
OrganizationCategory ::= (organizationCategoryCategorizesInfluencingOrganization::InfluencingOrganization)+ ;
Risk ::= (potentialImpactProvidesImpetusForDirective::Directive)+ ;
Directive ::= BusinessRule ;
 Directive ::= BusinessPolicy ;
 Directive ::= (directiveGovernsCourseOfAction::CourseOfAction)+ (directiveIsSourceOfCourseOfAction::CourseOfAction)+ (directiveActAsRegulation::Regulation)+ (directiveSupportsAchievementOfDesiredResult::DesiredResult)+ (directiveGovernsUseOfAsset::Asset)+ ;
BusinessProcess ::= (businessProcessRealizesCourseOfAction::CourseOfAction)+ (businessProcessManagerAsset::Asset)+ (businessProcessDeliversOfeering::Offering)+ ;
Resource ::= ε ;
Means ::= Mission ;
 Means ::= CourseOfAction ;
 Means ::= Directive ;
 Means ::= Mission | CourseOfAction | Directive ;
Liability ::= (liabilityClaimsResource::Resource)+ ;
Mission ::= Strategy ;
 Mission ::= missionMakesOperativeVision::Vision ;
Offering ::= (offeringRequiresResource::Resource)+ (offeringUsesFixedAsset::FixedAsset)+ ;
MotivationElement ::= Assessment ;
 MotivationElement ::= End ;
 MotivationElement ::= Influencer ;
 MotivationElement ::= InfluencingOrganization ;
 MotivationElement ::= Means ;
 MotivationElement ::= PotentialImpact ;
 MotivationElement ::= AssessmentCategory ;
 MotivationElement ::= InfluencerCategory ;
 MotivationElement ::= OrganizationCategory ;
 MotivationElement ::= OrganizationUnit ;
 MotivationElement ::= BusinessProcess ;
 MotivationElement ::= Asset ;
 MotivationElement ::= Liability ;
 MotivationElement ::= name::String description::String ;
InfluencingOrganization ::= (influencingOrganizationIsSourceOfInfluencer::Influencer)+ ;
PotentialImpact ::= PotentialReward ;
 PotentialImpact ::= Risk ;
 PotentialImpact ::= (potentialImpactProvidesImpetusForDirective::Directive)+ ;
Assessment ::= (usingAssessmentUsesUsedAssessment::Assessment)+ (assessmentProvidesImpetusForDirective::Directive)+ (assessmentIdentifiesPotentialImpact::PotentialImpact)+ (assessmentJudgmentOfInfluencer::Influencer)+ ;
Integer ::= integer() ;
InfluencerCategory ::= (influencerCategoryCategorizesInfluencer::Influencer)+ ;
Objective ::= (objectiveQuantifiesGoal::Goal)+ ;
Tactic ::= (tacticImplementsStrategy::Strategy)+ (tacticEffectsEnforcementLevelOfBusinessRule::BusinessRule)+ ;
Strategy ::= (strategyIsAComponentOfThePlanForMission::Mission)+ (strategyDeterminesOrganizationUnit::OrganizationUnit)+ ;
Asset ::= Resource ;
 Asset ::= FixedAsset ;
 Asset ::= Resource | FixedAsset ;
PotentialReward ::= (potentialImpactProvidesImpetusForDirective::Directive)+ ;
Regulation ::= ε ;
Boolean ::= "true" | "false" ;
Vision ::= ε ;
CourseOfAction ::= Tactic ;
 CourseOfAction ::= (enablingCourseofActionEnablesEnabledCourseOfAction::CourseOfAction)+ (broaderCourseofActionIncludesMoreSpecificCourseOfAction::CourseOfAction)+ courseOfActionChanneIsEffortsTowardsDesiredResult::DesiredResult (courseOfActionDeployAsset::Asset)+ (courseOfActionDefiensOffering::Offering)+ ;
AssessmentCategory ::= (assessmentCategoryCategoriesAssessment::Assessment)+ ;
--------------------metamodels::BPEL.bgf--------------------
IBinding ::= Binding ;
Condition ::= body::EJavaObject expressionLanguage::EString opaque::EBooleanObject ;
WSDLElement ::= WSDLExtensibleElement ;
 WSDLElement ::= MessageReference ;
 WSDLElement ::= PortType ;
 WSDLElement ::= Operation ;
 WSDLElement ::= Message ;
 WSDLElement ::= Part ;
 WSDLElement ::= ExtensibilityElement ;
 WSDLElement ::= WSDLImport ;
Property ::= qName::QName name::EString type::EJavaObject ID::EString ;
ExtensibilityElement ::= Property ;
 ExtensibilityElement ::= PropertyAlias ;
 ExtensibilityElement ::= messagepropertiesQuery ;
 ExtensibilityElement ::= PartnerLinkType ;
 ExtensibilityElement ::= Role ;
 ExtensibilityElement ::= Expression ;
 ExtensibilityElement ::= UnknownExtensibilityElement ;
 ExtensibilityElement ::= XSDSchemaExtensibilityElement ;
 ExtensibilityElement ::= required::EBoolean elementType::QName ;
XSDDisallowedSubstitutions ::= (extension::ε) | (substitution::ε) | (all::ε) | (restriction::ε) ;
XSDNumericFacet ::= value::EBoolean ;
PartnerLinks ::= (children::PartnerLink)+ ;
Branches ::= countCompletedBranchesOnly::EBooleanObject ;
XSDComplexFinal ::= (all::ε) | (restriction::ε) | (extension::ε) ;
FaultHandler ::= (catch::Catch)+ catchAll::CatchAll ;
Message ::= qName::QName undefined::EBoolean proxy::EBoolean resourceURI::EString (eParts::Part)+ ;
XSDWhiteSpace ::= (replace::ε) | (collapse::ε) | (preserve::ε) ;
EObject ::= ε ;
Targets ::= (children::Target)+ joinCondition::Condition ;
XSDIdentityConstraintCategory ::= (keyref::ε) | (unique::ε) | (key::ε) ;
Sequence ::= (activities::Activity)+ ;
FromPart ::= part::EString to::To ;
IPart ::= Part ;
OnEvent ::= activity::Activity variable::Variable partnerLink::PartnerLink correlations::Correlations operation::Operation portType::PortType messageType::Message (fromPart::FromPart)+ correlationSets::CorrelationSets ;
PartnerActivity ::= Invoke ;
 PartnerActivity ::= Receive ;
 PartnerActivity ::= Reply ;
 PartnerActivity ::= partnerLink::PartnerLink correlations::Correlations portType::PortType operation::Operation ;
XSDRedefinableComponent ::= XSDAttributeGroupDefinition ;
 XSDRedefinableComponent ::= XSDModelGroupDefinition ;
 XSDRedefinableComponent ::= XSDTypeDefinition ;
XSDComplexTypeDefinition ::= derivationMethod::XSDDerivationMethod (final::XSDComplexFinal)+ abstract::EBoolean contentTypeCategory::XSDContentTypeCategory (prohibitedSubstitutions::XSDProhibitedSubstitutions)+ (lexicalFinal::XSDComplexFinal)+ (block::XSDProhibitedSubstitutions)+ mixed::EBoolean contentAnnotation::XSDAnnotation baseTypeDefinition::XSDTypeDefinition content::XSDComplexTypeContent contentType::XSDComplexTypeContent (attributeUses::XSDAttributeUse)+ (attributeContents::XSDAttributeGroupContent)+ attributeWildcard::XSDWildcard attributeWildcardContent::XSDWildcard rootTypeDefinition::XSDTypeDefinition syntheticParticle::XSDParticle syntheticWildcard::XSDWildcard ;
CorrelationSets ::= (children::CorrelationSet)+ ;
CorrelationPattern ::= (outin::ε) | (in::ε) | (out::ε) ;
XSDNamedComponent ::= XSDFeature ;
 XSDNamedComponent ::= XSDIdentityConstraintDefinition ;
 XSDNamedComponent ::= XSDNotationDeclaration ;
 XSDNamedComponent ::= XSDRedefinableComponent ;
IBindingOperation ::= BindingOperation ;
From ::= opaque::EBooleanObject endpointReference::EndpointReferenceRole literal::EString unsafeLiteral::EBooleanObject expression::Expression serviceRef::ServiceRef type::XSDTypeDefinition ;
Reply ::= faultName::QName variable::Variable (toPart::ToPart)+ ;
XSDMinLengthFacet ::= value::EInt ;
XSDSimpleTypeDefinition ::= variety::XSDVariety (final::XSDSimpleFinal)+ (lexicalFinal::XSDSimpleFinal)+ (validFacets::EString)+ (contents::XSDSimpleTypeDefinition)+ (facetContents::XSDConstrainingFacet)+ (facets::XSDConstrainingFacet)+ (memberTypeDefinitions::XSDSimpleTypeDefinition)+ (fundamentalFacets::XSDFundamentalFacet)+ baseTypeDefinition::XSDSimpleTypeDefinition primitiveTypeDefinition::XSDSimpleTypeDefinition itemTypeDefinition::XSDSimpleTypeDefinition rootTypeDefinition::XSDSimpleTypeDefinition minFacet::XSDMinFacet maxFacet::XSDMaxFacet maxInclusiveFacet::XSDMaxInclusiveFacet minInclusiveFacet::XSDMinInclusiveFacet minExclusiveFacet::XSDMinExclusiveFacet maxExclusiveFacet::XSDMaxExclusiveFacet lengthFacet::XSDLengthFacet whiteSpaceFacet::XSDWhiteSpaceFacet (enumerationFacets::XSDEnumerationFacet)+ (patternFacets::XSDPatternFacet)+ cardinalityFacet::XSDCardinalityFacet numericFacet::XSDNumericFacet maxLengthFacet::XSDMaxLengthFacet minLengthFacet::XSDMinLengthFacet totalDigitsFacet::XSDTotalDigitsFacet fractionDigitsFacet::XSDFractionDigitsFacet orderedFacet::XSDOrderedFacet boundedFacet::XSDBoundedFacet effectiveMaxFacet::XSDMaxFacet effectiveWhiteSpaceFacet::XSDWhiteSpaceFacet effectiveMaxLengthFacet::XSDMaxLengthFacet effectiveFractionDigitsFacet::XSDFractionDigitsFacet effectivePatternFacet::XSDPatternFacet effectiveEnumerationFacet::XSDEnumerationFacet effectiveTotalDigitsFacet::XSDTotalDigitsFacet effectiveMinLengthFacet::XSDMinLengthFacet effectiveLengthFacet::XSDLengthFacet effectiveMinFacet::XSDMinFacet (syntheticFacets::XSDFacet)+ ;
BindingOutput ::= name::EString eOutput::Output ;
TerminationHandler ::= activity::Activity ;
Throw ::= faultName::QName faultVariable::Variable ;
XSDSchemaDirective ::= XSDImport ;
 XSDSchemaDirective ::= XSDSchemaCompositor ;
IPortType ::= PortType ;
Receive ::= createInstance::EBooleanObject variable::Variable (fromPart::FromPart)+ ;
XSDConstrainingFacet ::= XSDFixedFacet ;
 XSDConstrainingFacet ::= XSDRepeatableFacet ;
PartnerLink ::= name::EString myRole::Role partnerRole::Role PartnerLinkType::PartnerLinkType initializePartnerRole::EBooleanObject ;
BooleanExpression ::= body::EJavaObject expressionLanguage::EString opaque::EBooleanObject ;
XSDProcessContents ::= (skip::ε) | (lax::ε) | (strict::ε) ;
XSDInclude ::= annotation::XSDAnnotation ;
XSDAttributeGroupDefinition ::= attributeGroupDefinitionReference::EBoolean annotation::XSDAnnotation (contents::XSDAttributeGroupContent)+ (attributeUses::XSDAttributeUse)+ attributeWildcardContent::XSDWildcard attributeWildcard::XSDWildcard resolvedAttributeGroupDefinition::XSDAttributeGroupDefinition syntheticWildcard::XSDWildcard ;
ServiceRef ::= referenceScheme::EString value::EJavaObject ;
BindingFault ::= name::EString eFault::Fault ;
IExtensibilityElement ::= ExtensibilityElement ;
Expression ::= BooleanExpression ;
 Expression ::= Condition ;
 Expression ::= Branches ;
 Expression ::= body::EJavaObject expressionLanguage::EString opaque::EBooleanObject ;
XSDAnnotation ::= (applicationInformation::XSDDOMElement)+ (userInformation::XSDDOMElement)+ (attributes::DOMAttr)+ ;
XSDTerm ::= XSDModelGroup ;
 XSDTerm ::= XSDWildcard ;
XSDAttributeUseCategory ::= (prohibited::ε) | (optional::ε) | (required::ε) ;
Target ::= Link::Link activity::Activity ;
ITypes ::= Types ;
XSDNotationDeclaration ::= systemIdentifier::EString publicIdentifier::EString annotation::XSDAnnotation ;
XSDImport ::= namespace::EString annotation::XSDAnnotation ;
EndpointReferenceRole ::= (partnerRole::ε) | (myRole::ε) ;
Input ::= name::EString eMessage::Message ;
XSDSchema ::= document::XSDDOMDocument schemaLocation::EString targetNamespace::EString attributeFormDefault::XSDForm elementFormDefault::XSDForm (finalDefault::XSDProhibitedSubstitutions)+ (blockDefault::XSDDisallowedSubstitutions)+ version::EString (contents::XSDSchemaContent)+ (elementDeclarations::XSDElementDeclaration)+ (attributeDeclarations::XSDAttributeDeclaration)+ (attributeGroupDefinitions::XSDAttributeGroupDefinition)+ (typeDefinitions::XSDTypeDefinition)+ (modelGroupDefinitions::XSDModelGroupDefinition)+ (identityConstraintDefinitions::XSDIdentityConstraintDefinition)+ (notationDeclarations::XSDNotationDeclaration)+ (annotations::XSDAnnotation)+ (allDiagnostics::XSDDiagnostic)+ (referencingDirectives::XSDSchemaDirective)+ rootVersion::XSDSchema originalVersion::XSDSchema (incorporatedVersions::XSDSchema)+ schemaForSchema::XSDSchema ;
XSDFractionDigitsFacet ::= value::EInt ;
XSDWildcard ::= namespaceConstraintCategory::XSDNamespaceConstraintCategory (namespaceConstraint::EString)+ processContents::XSDProcessContents (lexicalNamespaceConstraint::EString)+ annotation::XSDAnnotation (annotations::XSDAnnotation)+ ;
Port ::= name::EString eBinding::Binding ;
CorrelationSet ::= name::EString (properties::Property)+ ;
XSDSchemaExtensibilityElement ::= schema::XSDSchema ;
Variable ::= name::EString messageType::Message XSDElement::XSDElementDeclaration type::XSDTypeDefinition from::From ;
To ::= From ;
 To ::= variable::Variable part::Part partnerLink::PartnerLink property::Property query::BPELQuery ;
Catch ::= faultName::QName faultVariable::Variable activity::Activity faultMessageType::Message faultElement::XSDElementDeclaration ;
Documentation ::= lang::EString source::EString value::EString ;
Links ::= (children::Link)+ ;
Sources ::= (children::Source)+ ;
Invoke ::= outputVariable::Variable inputVariable::Variable compensationHandler::CompensationHandler faultHandler::FaultHandler (toPart::ToPart)+ (fromPart::FromPart)+ ;
XSDComplexTypeContent ::= XSDParticle ;
 XSDComplexTypeContent ::= XSDSimpleTypeDefinition ;
Role ::= ID::EString name::EString portType::EJavaObject ;
Service ::= qName::QName undefined::EBoolean proxy::EBoolean resourceURI::EString (ePorts::Port)+ ;
Copy ::= to::To from::From keepSrcElementName::EBooleanObject ;
Wait ::= for::Expression until::Expression ;
Otherwise ::= activity::Activity ;
XSDMaxExclusiveFacet ::= value::Value inclusive::EBoolean exclusive::EBoolean ;
XSDAttributeUse ::= required::EBoolean value::Value constraint::XSDConstraint use::XSDAttributeUseCategory lexicalValue::EString attributeDeclaration::XSDAttributeDeclaration content::XSDAttributeDeclaration ;
XSDOrderedFacet ::= value::XSDOrdered ;
OnAlarm ::= activity::Activity for::Expression until::Expression repeatEvery::Expression ;
XSDCardinalityFacet ::= value::XSDCardinality ;
Iterator ::= finalCounterValue::Expression startCounterValue::Expression ;
XSDFacet ::= XSDConstrainingFacet ;
 XSDFacet ::= XSDFundamentalFacet ;
XSDAttributeGroupContent ::= XSDAttributeUse ;
BPELExtensibleElement ::= Process ;
 BPELExtensibleElement ::= PartnerLink ;
 BPELExtensibleElement ::= FaultHandler ;
 BPELExtensibleElement ::= Activity ;
 BPELExtensibleElement ::= CorrelationSet ;
 BPELExtensibleElement ::= Link ;
 BPELExtensibleElement ::= Catch ;
 BPELExtensibleElement ::= Case ;
 BPELExtensibleElement ::= OnAlarm ;
 BPELExtensibleElement ::= Copy ;
 BPELExtensibleElement ::= Extension ;
 BPELExtensibleElement ::= CompensationHandler ;
 BPELExtensibleElement ::= To ;
 BPELExtensibleElement ::= OnMessage ;
 BPELExtensibleElement ::= Correlation ;
 BPELExtensibleElement ::= EventHandler ;
 BPELExtensibleElement ::= Source ;
 BPELExtensibleElement ::= Target ;
 BPELExtensibleElement ::= PartnerLinks ;
 BPELExtensibleElement ::= Variables ;
 BPELExtensibleElement ::= CorrelationSets ;
 BPELExtensibleElement ::= Links ;
 BPELExtensibleElement ::= CatchAll ;
 BPELExtensibleElement ::= Correlations ;
 BPELExtensibleElement ::= Variable ;
 BPELExtensibleElement ::= Otherwise ;
 BPELExtensibleElement ::= OnEvent ;
 BPELExtensibleElement ::= Targets ;
 BPELExtensibleElement ::= Sources ;
 BPELExtensibleElement ::= Extensions ;
 BPELExtensibleElement ::= TerminationHandler ;
 BPELExtensibleElement ::= Then ;
 BPELExtensibleElement ::= ElseIf ;
 BPELExtensibleElement ::= Else ;
 BPELExtensibleElement ::= From ;
 BPELExtensibleElement ::= documentation::Documentation ;
XSDCompositor ::= (all::ε) | (choice::ε) | (sequence::ε) ;
XSDAttributeDeclaration ::= attributeDeclarationReference::EBoolean annotation::XSDAnnotation anonymousTypeDefinition::XSDSimpleTypeDefinition typeDefinition::XSDSimpleTypeDefinition resolvedAttributeDeclaration::XSDAttributeDeclaration ;
IBindingFault ::= BindingFault ;
XSDOrdered ::= (total::ε) | (partial::ε) ;
BindingOperation ::= name::EString eOperation::Operation eBindingInput::BindingInput eBindingOutput::BindingOutput (eBindingFaults::BindingFault)+ ;
CompletionCondition ::= branches::Branches ;
IMessage ::= Message ;
WSDLExtensibleElement ::= BPELExtensibleElement ;
 WSDLExtensibleElement ::= Binding ;
 WSDLExtensibleElement ::= BindingOperation ;
 WSDLExtensibleElement ::= Service ;
 WSDLExtensibleElement ::= Port ;
 WSDLExtensibleElement ::= Definition ;
 WSDLExtensibleElement ::= BindingInput ;
 WSDLExtensibleElement ::= BindingOutput ;
 WSDLExtensibleElement ::= BindingFault ;
 WSDLExtensibleElement ::= Types ;
UnknownExtensibilityAttribute ::= (children::UnknownExtensibilityElement)+ ;
IDefinition ::= Definition ;
XSDMaxFacet ::= XSDMaxExclusiveFacet ;
 XSDMaxFacet ::= XSDMaxInclusiveFacet ;
PortType ::= qName::QName undefined::EBoolean proxy::EBoolean resourceURI::EString (eOperations::Operation)+ ;
XSDSimpleFinal ::= (list::ε) | (restriction::ε) | (all::ε) | (union::ε) ;
BPELImport ::= namespace::EString location::EString importType::EString ;
XSDEnumerationFacet ::= (value::Value)+ ;
XSDRedefine ::= (annotations::XSDAnnotation)+ (contents::XSDRedefineContent)+ ;
XSDMaxLengthFacet ::= value::EInt ;
XSDMinInclusiveFacet ::= value::Value inclusive::EBoolean exclusive::EBoolean ;
Definition ::= targetNamespace::EString location::EString qName::QName encoding::EString (eImports::WSDLImport)+ eTypes::Types (eMessages::Message)+ (ePortTypes::PortType)+ (eBindings::Binding)+ (eServices::Service)+ (eNamespaces::Namespace)+ ;
Rethrow ::= name::EString suppressJoinFailure::EBooleanObject targets::Targets sources::Sources ;
XSDWhiteSpaceFacet ::= value::XSDWhiteSpace ;
OpaqueActivity ::= name::EString suppressJoinFailure::EBooleanObject targets::Targets sources::Sources ;
EventHandler ::= (alarm::OnAlarm)+ (events::OnEvent)+ ;
CompensationHandler ::= activity::Activity ;
XSDSchemaContent ::= XSDRedefineContent ;
 XSDSchemaContent ::= XSDSchemaDirective ;
 XSDSchemaContent ::= XSDAttributeDeclaration ;
 XSDSchemaContent ::= XSDNotationDeclaration ;
IPort ::= Port ;
XSDElementDeclaration ::= nillable::EBoolean (disallowedSubstitutions::XSDDisallowedSubstitutions)+ (substitutionGroupExclusions::XSDSubstitutionGroupExclusions)+ abstract::EBoolean (lexicalFinal::XSDProhibitedSubstitutions)+ (block::XSDDisallowedSubstitutions)+ elementDeclarationReference::EBoolean circular::EBoolean annotation::XSDAnnotation anonymousTypeDefinition::XSDTypeDefinition typeDefinition::XSDTypeDefinition (identityConstraintDefinitions::XSDIdentityConstraintDefinition)+ resolvedElementDeclaration::XSDElementDeclaration substitutionGroupAffiliation::XSDElementDeclaration (substitutionGroup::XSDElementDeclaration)+ ;
XSDConstraint ::= (fixed::ε) | (default::ε) ;
BindingInput ::= name::EString eInput::Input ;
Binding ::= qName::QName undefined::EBoolean proxy::EBoolean resourceURI::EString ePortType::PortType (eBindingOperations::BindingOperation)+ ;
RepeatUntil ::= activity::Activity condition::Condition ;
XSDBoundedFacet ::= value::EBoolean ;
Correlation ::= initiate::EString pattern::CorrelationPattern set::CorrelationSet ;
XSDVariety ::= (union::ε) | (list::ε) | (atomic::ε) ;
XSDModelGroup ::= compositor::XSDCompositor annotation::XSDAnnotation (contents::XSDParticle)+ (particles::XSDParticle)+ ;
PropertyAlias ::= messageType::EJavaObject part::EString propertyName::EJavaObject ID::EString wsdlPart::Part query::messagepropertiesQuery type::EJavaObject XSDElement::EJavaObject ;
Types ::= (eExtensibilityElements::ExtensibilityElement)+ ;
Else ::= activity::Activity ;
XSDRepeatableFacet ::= XSDEnumerationFacet ;
 XSDRepeatableFacet ::= XSDPatternFacet ;
Compensate ::= scope::EObject ;
Variables ::= (children::Variable)+ ;
ElseIf ::= condition::Condition activity::Activity ;
XSDTotalDigitsFacet ::= value::EInt ;
Switch ::= (cases::Case)+ otherwise::Otherwise ;
XSDComponent ::= XSDComplexTypeContent ;
 XSDComponent ::= XSDFacet ;
 XSDComponent ::= XSDNamedComponent ;
 XSDComponent ::= XSDScope ;
 XSDComponent ::= XSDXPathDefinition ;
 XSDComponent ::= XSDAnnotation ;
 XSDComponent ::= XSDAttributeUse ;
 XSDComponent ::= XSDTerm ;
BPELQuery ::= value::EString queryLanguage::EString ;
Correlations ::= (children::Correlation)+ ;
Case ::= activity::Activity condition::Condition ;
XSDPatternFacet ::= (value::EString)+ ;
Process ::= name::EString targetNamespace::EString queryLanguage::EString expressionLanguage::EString suppressJoinFailure::EBooleanObject variableAccessSerializable::EBooleanObject partnerLinks::PartnerLinks variables::Variables activity::Activity faultHandlers::FaultHandler eventHandlers::EventHandler correlationSets::CorrelationSets (imports::BPELImport)+ extensions::Extensions exitOnStandardFault::EBooleanObject ;
XSDParticle ::= minOccurs::EInt maxOccurs::EInt content::XSDParticleContent term::XSDTerm ;
XSDConcreteComponent ::= XSDAttributeGroupContent ;
 XSDConcreteComponent ::= XSDComponent ;
 XSDConcreteComponent ::= XSDDiagnostic ;
 XSDConcreteComponent ::= XSDParticleContent ;
 XSDConcreteComponent ::= XSDSchemaContent ;
IImport ::= WSDLImport ;
ExtensionActivity ::= name::EString suppressJoinFailure::EBooleanObject targets::Targets sources::Sources ;
Flow ::= (activities::Activity)+ links::Links completionCondition::CompletionCondition ;
XSDMinFacet ::= XSDMinExclusiveFacet ;
 XSDMinFacet ::= XSDMinInclusiveFacet ;
XSDNamespaceConstraintCategory ::= (set::ε) | (not::ε) | (any::ε) ;
XSDDiagnosticSeverity ::= (fatal::ε) | (warning::ε) | (error::ε) | (information::ε) ;
XSDSchemaCompositor ::= XSDInclude ;
 XSDSchemaCompositor ::= XSDRedefine ;
ForEach ::= parallel::EBooleanObject counterName::Variable completionCondition::CompletionCondition iterator::Iterator activity::Activity ;
Operation ::= style::OperationType name::EString undefined::EBoolean proxy::EBoolean resourceURI::EString eInput::Input eOutput::Output (eFaults::Fault)+ (eParameterOrdering::Part)+ ;
Pick ::= createInstance::EBooleanObject (messages::OnMessage)+ (alarm::OnAlarm)+ ;
XSDDerivationMethod ::= (extension::ε) | (restriction::ε) ;
Exit ::= name::EString suppressJoinFailure::EBooleanObject targets::Targets sources::Sources ;
Then ::= activity::Activity ;
If ::= condition::Condition then::Then (elseIf::ElseIf)+ else::Else ;
Namespace ::= URI::EString prefix::EString ;
Source ::= Link::Link activity::Activity transitionCondition::Condition ;
XSDFundamentalFacet ::= XSDBoundedFacet ;
 XSDFundamentalFacet ::= XSDCardinalityFacet ;
 XSDFundamentalFacet ::= XSDNumericFacet ;
 XSDFundamentalFacet ::= XSDOrderedFacet ;
XSDIdentityConstraintDefinition ::= identityConstraintCategory::XSDIdentityConstraintCategory annotation::XSDAnnotation referencedKey::XSDIdentityConstraintDefinition selector::XSDXPathDefinition (fields::XSDXPathDefinition)+ ;
Validate ::= (variables::Variable)+ ;
XSDTypeDefinition ::= XSDComplexTypeDefinition ;
 XSDTypeDefinition ::= XSDSimpleTypeDefinition ;
Extensions ::= (children::Extension)+ ;
Scope ::= isolated::EBooleanObject faultHandlers::FaultHandler compensationHandler::CompensationHandler activity::Activity variables::Variables correlationSets::CorrelationSets eventHandlers::EventHandler partnerLinks::PartnerLinks terminationHandler::TerminationHandler ;
XSDDiagnostic ::= severity::XSDDiagnosticSeverity message::EString locationURI::EString line::EInt column::EInt node::DOMNode annotationURI::EString key::EString (substitutions::EString)+ (components::XSDConcreteComponent)+ primaryComponent::XSDConcreteComponent ;
Activity ::= PartnerActivity ;
 Activity ::= Exit ;
 Activity ::= Throw ;
 Activity ::= Wait ;
 Activity ::= Empty ;
 Activity ::= Sequence ;
 Activity ::= Switch ;
 Activity ::= While ;
 Activity ::= Pick ;
 Activity ::= Flow ;
 Activity ::= Assign ;
 Activity ::= Scope ;
 Activity ::= Compensate ;
 Activity ::= Rethrow ;
 Activity ::= ExtensionActivity ;
 Activity ::= OpaqueActivity ;
 Activity ::= ForEach ;
 Activity ::= RepeatUntil ;
 Activity ::= Validate ;
 Activity ::= If ;
 Activity ::= Reply ;
 Activity ::= name::EString suppressJoinFailure::EBooleanObject targets::Targets sources::Sources ;
IBindingInput ::= BindingInput ;
ToPart ::= part::EString from::From ;
Empty ::= name::EString suppressJoinFailure::EBooleanObject targets::Targets sources::Sources ;
IService ::= Service ;
XSDFixedFacet ::= XSDFractionDigitsFacet ;
 XSDFixedFacet ::= XSDLengthFacet ;
 XSDFixedFacet ::= XSDMaxFacet ;
 XSDFixedFacet ::= XSDMaxLengthFacet ;
 XSDFixedFacet ::= XSDMinFacet ;
 XSDFixedFacet ::= XSDMinLengthFacet ;
 XSDFixedFacet ::= XSDTotalDigitsFacet ;
 XSDFixedFacet ::= XSDWhiteSpaceFacet ;
XSDScope ::= XSDSchema ;
 XSDScope ::= XSDComplexTypeDefinition ;
XSDParticleContent ::= XSDTerm ;
WSDLImport ::= namespaceURI::EString locationURI::EString eDefinition::Definition eSchema::XSDSchema ;
XSDCardinality ::= (countablyInfinite::ε) | (finite::ε) ;
MessageReference ::= Input ;
 MessageReference ::= Output ;
 MessageReference ::= Fault ;
Output ::= name::EString eMessage::Message ;
Extension ::= namespace::EString mustUnderstand::EBooleanObject ;
IOperation ::= Operation ;
XSDSubstitutionGroupExclusions ::= (restriction::ε) | (extension::ε) ;
UnknownExtensibilityElement ::= UnknownExtensibilityAttribute ;
 UnknownExtensibilityElement ::= (children::UnknownExtensibilityElement)+ ;
IBindingOutput ::= BindingOutput ;
PartnerLinkType ::= name::EString ID::EString (role::Role)+ ;
Link ::= name::EString (sources::Source)+ (targets::Target)+ ;
XSDXPathVariety ::= (field::ε) | (selector::ε) ;
Part ::= name::EString elementName::QName typeName::QName typeDefinition::XSDTypeDefinition elementDeclaration::XSDElementDeclaration eMessage::Message ;
XSDModelGroupDefinition ::= modelGroupDefinitionReference::EBoolean annotation::XSDAnnotation modelGroup::XSDModelGroup resolvedModelGroupDefinition::XSDModelGroupDefinition ;
While ::= activity::Activity condition::Condition ;
Assign ::= (copy::Copy)+ validate::EBooleanObject ;
XSDProhibitedSubstitutions ::= (extension::ε) | (restriction::ε) | (all::ε) ;
XSDFeature ::= XSDAttributeDeclaration ;
 XSDFeature ::= XSDElementDeclaration ;
XSDForm ::= (unqualified::ε) | (qualified::ε) ;
OnMessage ::= variable::Variable activity::Activity portType::PortType partnerLink::PartnerLink correlations::Correlations operation::Operation (fromPart::FromPart)+ ;
XSDContentTypeCategory ::= (elementOnly::ε) | (mixed::ε) | (simple::ε) | (empty::ε) ;
XSDLengthFacet ::= value::EInt ;
XSDXPathDefinition ::= variety::XSDXPathVariety value::EString annotation::XSDAnnotation ;
CatchAll ::= activity::Activity ;
XSDMaxInclusiveFacet ::= value::Value inclusive::EBoolean exclusive::EBoolean ;
Fault ::= name::EString eMessage::Message ;
XSDRedefineContent ::= XSDAnnotation ;
 XSDRedefineContent ::= XSDRedefinableComponent ;
 XSDRedefineContent ::= XSDTypeDefinition ;
XSDMinExclusiveFacet ::= value::Value inclusive::EBoolean exclusive::EBoolean ;
--------------------metamodels::BPMN.bgf--------------------
Group ::= (activities::Activity)+ ;
SequenceEdge ::= graph::Graph isDefault::Boolean source::Vertex target::Vertex ;
Integer ::= integer() ;
TextAnnotation ::= (associations::Association)+ artifactsContainer::ArtifactsContainer ;
Pool ::= (lanes::Lane)+ bpmnDiagram::BpmnDiagram ;
DirectionType ::= (Both::ε) | (From::ε) | (To::ε) | (None::ε) ;
IdentifiableNode ::= Vertex ;
 IdentifiableNode ::= Graph ;
 IdentifiableNode ::= (associations::Association)+ ;
Identifiable ::= IdentifiableNode ;
 Identifiable ::= Artifact ;
 Identifiable ::= BpmnDiagram ;
 Identifiable ::= Lane ;
 Identifiable ::= MessagingEdge ;
 Identifiable ::= SequenceEdge ;
 Identifiable ::= iD::ID ;
Artifact ::= DataObject ;
 Artifact ::= Group ;
 Artifact ::= TextAnnotation ;
 Artifact ::= (associations::Association)+ artifactsContainer::ArtifactsContainer ;
String ::= string() ;
SubProcess ::= (eventHandlers::Activity)+ isTransaction::Boolean ;
Activity ::= SubProcess ;
 Activity ::= (orderedMessages::MessagingEdge)+ (incomingMessages::MessagingEdge)+ (outgoingMessages::MessagingEdge)+ (groups::Group)+ activityType::ActivityType eventHandlerFor::SubProcess lane::Lane looping::Boolean ;
Graph ::= Pool ;
 Graph ::= SubProcess ;
 Graph ::= (vertices::Vertex)+ (sequenceEdges::SequenceEdge)+ ;
Lane ::= (activities::Activity)+ pool::Pool ;
DataObject ::= (associations::Association)+ artifactsContainer::ArtifactsContainer ;
ActivityType ::= (SubProcess::ε) | (EventEndMultiple::ε) | (EventEndMessage::ε) | (EventIntermediateMessage::ε) | (EventStartMultiple::ε) | (EventIntermediateMultiple::ε) | (GatewayParallel::ε) | (EventStartTimer::ε) | (EventStartEmpty::ε) | (EventIntermediateCancel::ε) | (EventEndError::ε) | (EventStartRule::ε) | (EventEndTerminate::ε) | (EventStartLink::ε) | (EventIntermediateLink::ε) | (EventEndCancel::ε) | (EventEndLink::ε) | (EventIntermediateEmpty::ε) | (EventIntermediateCompensation::ε) | (Task::ε) | (GatewayDataBasedExclusive::ε) | (GatewayComplex::ε) | (EventEndEmpty::ε) | (EventIntermediateError::ε) | (EventIntermediateTimer::ε) | (EventEndCompensation::ε) | (EventStartMessage::ε) | (GatewayDataBasedInclusive::ε) | (GatewayEventBasedExclusive::ε) | (EventIntermediateRule::ε) ;
Boolean ::= "true" | "false" ;
NamedBpmnObject ::= ArtifactsContainer ;
 NamedBpmnObject ::= Activity ;
 NamedBpmnObject ::= Artifact ;
 NamedBpmnObject ::= Lane ;
 NamedBpmnObject ::= MessagingEdge ;
 NamedBpmnObject ::= Pool ;
 NamedBpmnObject ::= SequenceEdge ;
 NamedBpmnObject ::= documentation::String name::String ncname::String ;
Vertex ::= Activity ;
 Vertex ::= (outgoingEdges::SequenceEdge)+ (incomingEdges::SequenceEdge)+ graph::Graph ;
BpmnDiagram ::= (pools::Pool)+ (messages::MessagingEdge)+ author::String title::String ;
Association ::= direction::DirectionType source::Artifact target::IdentifiableNode ;
MessagingEdge ::= bpmnDiagram::BpmnDiagram source::Activity target::Activity ;
ArtifactsContainer ::= BpmnDiagram ;
 ArtifactsContainer ::= Graph ;
 ArtifactsContainer ::= (artifacts::Artifact)+ ;
--------------------metamodels::Book.bgf--------------------
Integer ::= integer() ;
Chapter ::= title::String nbPages::Integer author::String book::Book ;
Book ::= title::String (chapters::Chapter)+ ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::Bossa.bgf--------------------
ForwardMoveStmt ::= isHead::Boolean isTail::Boolean moveExpr::MoveExpr ;
NonProcType ::= system::Boolean struct::Boolean id::Boolean nonProcType::String ;
BossaProgramm ::= scheduler::Scheduler ;
HandlerDef ::= id::String scheduler::Scheduler (onHandlerDef::OnHandlerDef)+ ;
ClassNameStorage ::= id::String className::ClassName storage::Storage ;
AssignStmt ::= locExpr::LocExpr assignUnop::AssignUnop assignBinop::AssignBinop expr::Expression ;
OrderDef ::= keyCritDecl::KeyCritDecls critDecls::CritDecls abstractSchedulerDecl::AbstractSchedulerDecl ;
TraceEvent ::= (eventName::EventName)+ ;
NormalScheduler ::= schedulerDecl::SchedulerDecl ;
CompoKeyCritDecls ::= critDecl::CritDecl ;
TypeExpr ::= id::String bossaTypeExpr::BossaTypeExpr ;
FunctionDef ::= (composantOfInterFunc::ComposantOfInterFunc)+ scheduler::Scheduler ;
SchedulerDef ::= (processVarDecl::ProcessVarDecl)+ ;
AssignUnop ::= doublePlus::Boolean doubleMoins::Boolean ;
SchedulerDecl ::= processDef::ProcessDef ;
StateVisibility ::= public::Boolean private::Boolean ;
BossaTypeExpr ::= bossaTypeExpr::String ;
ParameterType ::= (typeExpr::TypeExpr)+ ;
AbstractSchedulerDecl ::= SchedulerDecl ;
 AbstractSchedulerDecl ::= VSchdulerDecl ;
StateRef ::= stateRef::String ;
NormalMoveStmt ::= stateRef::StateRef ;
AdmissionDef ::= (valDef::ValDef)+ admCrit::AdmCrit attachDetach::AttachDetach abstractSchedulerDecl::AbstractSchedulerDecl ;
Critop ::= lowest::Boolean highest::Boolean ;
Storage ::= Process_Storage ;
 Storage ::= Scheduler_Storage ;
 Storage ::= Queue_Storage ;
Unop ::= plus::Boolean minus::Boolean excl::Boolean tild::Boolean ;
AssignBinop ::= affect::Boolean plusEqual::Boolean moinsEqual::Boolean starEqual::Boolean slashEqual::Boolean percentageEqual::Boolean andEqual::Boolean orEqual::Boolean doubleLtEqual::Boolean doubleGtEqual::Boolean ;
MoveStmt ::= NormalMoveStmt ;
 MoveStmt ::= ForwardMoveStmt ;
AttachDetach ::= procParam1::ProcParam procParam2::ProcParam seqStmt1::SeqStmt seqStmt2::SeqStmt ;
TraceTest ::= expr::Expression ;
ComposantOfInterFunc ::= id::String typeOrVoid::TypeOrVoid (paramVarDecl::ParamVarDecl)+ seqStmt::SeqStmt ;
StateDef ::= (classNameStorage::ClassNameStorage)+ abstractSchedulerDecl::AbstractSchedulerDecl ;
Statment ::= IfStmt ;
 Statment ::= ForStmt ;
 Statment ::= ReturnStmt ;
 Statment ::= SwitchStmt ;
 Statment ::= AssignStmt ;
 Statment ::= MoveStmt ;
 Statment ::= DeferStmt ;
 Statment ::= PrimStmt ;
 Statment ::= ErrorStmt ;
 Statment ::= BreakStmt ;
KeyCritDecls ::= (compoKeyCritDecls::CompoKeyCritDecls)+ ;
ErrorStmt ::= errorType::String ;
QueueType ::= Normal_QueueType ;
 QueueType ::= Fifo_QueueType ;
 QueueType ::= Lifo_QueueType ;
ValDecl ::= Normal_ValDecl ;
 ValDecl ::= System_ValDecl ;
 ValDecl ::= Timer_ValDecl ;
 ValDecl ::= id::String abstractSchedulerDecl::AbstractSchedulerDecl ;
TypeDef ::= enumRang::EnumRange ;
BreakStmt ::= ε ;
ParamVarDecl ::= id::String typeExpr::TypeExpr ;
ValDef ::= id::String typeExpr::TypeExpr expr::Expression ;
CritDecl ::= CritDeclWhithId ;
 CritDecl ::= CritDeclWhithoutId ;
ConstDef ::= id::String expr::Expression bossaTypeExpr::BossaTypeExpr ;
CritDeclWhithoutId ::= expr::Expression ;
SwitchStmt ::= locExpr::LocExpr (composantOfSwitchStmt::ComposantOfSwitchStmt)+ ;
OnHandlerDef ::= (eventName::EventName)+ seqStmt::SeqStmt ;
DeferStmt ::= deferStmt::String ;
TraceExpr ::= (id::String)+ ;
ReturnStmt ::= expr::Expression ;
Expression ::= Integer_Expression ;
 Expression ::= Id_Expression ;
 Expression ::= State_Expression ;
 Expression ::= True_Expression ;
 Expression ::= False_Expression ;
 Expression ::= Unop_Expression ;
 Expression ::= Etoile_Expression ;
 Expression ::= ExpId_Expression ;
 Expression ::= Select_Expression ;
 Expression ::= FnName_Expression ;
 Expression ::= Empty_Expression ;
 Expression ::= SRCOnSched_Expression ;
 Expression ::= SchedulerOf_Expression ;
 Expression ::= In_Expression ;
 Expression ::= Parenthese_Expression ;
 Expression ::= Binop_Expression ;
ProcParam ::= id::String process::Boolean scheduler::Boolean ;
ProcessDef ::= (processVarDecl::ProcessVarDecl)+ ;
LocExpr ::= stateName::String (id::String)+ ;
String ::= string() ;
CritDecls ::= (critDecl::CritDecl)+ ;
PrimStmt ::= (expr::Expression)+ ;
ForEachDecreasingForStmt ::= id::String seqStmt::SeqStmt ;
InterfaceDef ::= (composantOfInterFunc::ComposantOfInterFunc)+ scheduler::Scheduler ;
FunDecl ::= parameterTypes::ParameterType nonProcType::NonProcType abstractSchedulerDecl::AbstractSchedulerDecl ;
RangeDef ::= expr::Expression ;
ComposantOfSwitchStmt ::= (classState::ClassState)+ seqStmt::SeqStmt ;
ForeachForStmt ::= id::String isIn::Boolean (classState::ClassState)+ seqStmt::SeqStmt ;
SeqStmt ::= (valDef::ValDef)+ (stmt::Statment)+ ;
EventName ::= eventNameLeft::String eventNameRight::String ;
IfStmt ::= expr::Expression seqStmt::SeqStmt ;
EnumDef ::= (theIds::String)+ ;
BagId ::= theValue::String ;
ProcessVarDecl ::= Timer_ProcessVarDecl ;
 ProcessVarDecl ::= System_ProcessVarDecl ;
 ProcessVarDecl ::= Normal_ProcessVarDecl ;
 ProcessVarDecl ::= id::String processDef::ProcessDef schedulerDef::SchedulerDef ;
TraceDef ::= traceEvent::TraceEvent traceExpr::TraceExpr traceTest::TraceTest abstractSchedulerDecl::AbstractSchedulerDecl ;
Integer ::= integer() ;
EnumRange ::= enumDef::EnumDef rangeDef::RangeDef ;
Scheduler ::= NormalScheduler ;
 Scheduler ::= VirtualScheduler ;
ClassState ::= state::Boolean className::ClassName ;
ForStmt ::= ForeachForStmt ;
 ForStmt ::= ForEachIncreasingForStmt ;
 ForStmt ::= ForEachDecreasingForStmt ;
TypeOrVoid ::= isVoid::Boolean typeExpr::TypeExpr ;
VSchdulerDecl ::= schedulerDef::SchedulerDef ;
VirtualScheduler ::= vschedulerDecl::VSchdulerDecl ;
Boolean ::= "true" | "false" ;
Binop ::= plus::Boolean minus::Boolean star::Boolean slash::Boolean percentage::Boolean doubleAnd::Boolean doubleVerticalBar::Boolean and::Boolean eq::Boolean ne::Boolean lt::Boolean gt::Boolean le::Boolean ge::Boolean doubleLt::Boolean doubleGt::Boolean ;
ForEachIncreasingForStmt ::= id::String seqStmt::SeqStmt ;
MoveExpr ::= Select_MoveExpr ;
 MoveExpr ::= SatateName_MoveExpr ;
 MoveExpr ::= ID_MoveExpr ;
 MoveExpr ::= IDSource_MoveExpr ;
 MoveExpr ::= IDTarget_MoveExpr ;
AdmCrit ::= (paramVarDecl::ParamVarDecl)+ expr::Expression ;
ClassName ::= className::String ;
CritDeclWhithId ::= id::String ;
--------------------metamodels::BusinessEntityModel.bgf--------------------
Integer ::= integer() ;
OrganisationalUnit ::= characterisedby::BusinessEntityPropertySet typ::Class (task::Task)+ (fille::BusinessEntity)+ ;
Boolean ::= "true" | "false" ;
ArtifactRole ::= characterisedby::BusinessEntityPropertySet typ::Class (task::Task)+ (fille::BusinessEntity)+ ;
Class ::= BusinessEntity ;
BusinessRole ::= ArtifactRole ;
 BusinessRole ::= PerformerRole ;
 BusinessRole ::= OrganisationalUnit ;
Action ::= BusinessRole ;
Task ::= (associatedWith::BusinessRole)+ (needs::ArtifactRole)+ ;
PerformerRole ::= perform::Task ;
DataType ::= BusinessEntityPropertySet ;
BusinessEntity ::= (placehold::BusinessRole)+ ;
String ::= string() ;
--------------------metamodels::BusinessProcessModel.bgf--------------------
InvokerTask ::= (invokes::Task)+ ;
Integer ::= integer() ;
Decision ::= ε ;
Namespace ::= Task ;
 Namespace ::= DataSet ;
InputSet ::= (containsInput::Input)+ ;
DataFlow ::= ε ;
DataSet ::= OutputSet ;
 DataSet ::= InputSet ;
SimpleTask ::= InvokerTask ;
 SimpleTask ::= TerminatorTask ;
 SimpleTask ::= ApplicationTask ;
 SimpleTask ::= InvokerTask | TerminatorTask | ApplicationTask ;
ApplicationTask ::= Decision ;
 ApplicationTask ::= Clock ;
 ApplicationTask ::= SendCommunication ;
 ApplicationTask ::= ReceiveCommunication ;
 ApplicationTask ::= BusinessProcess ;
 ApplicationTask ::= Decision | Clock | SendCommunication | ReceiveCommunication | BusinessProcess ;
ReceiveCommunication ::= ε ;
ControlPoint ::= (sink::ControlFlow)+ ;
ModelElement ::= Flow ;
 ModelElement ::= ControlPoint ;
DataElement ::= Input ;
 DataElement ::= Output ;
String ::= string() ;
BusinessProcess ::= ε ;
Exception ::= ε ;
SendCommunication ::= ε ;
Clock ::= ε ;
MutliTask ::= (containsTask::Task)+ (containsFlow::Flow)+ realizes::BusinessProcess ;
Flow ::= DataFlow ;
 Flow ::= ControlFlow ;
 Flow ::= DataFlow | ControlFlow ;
CoumpoundTask ::= MutliTask ;
 CoumpoundTask ::= (containsTask::Task)+ (containsFlow::Flow)+ realizes::BusinessProcess ;
TerminatorTask ::= (terminates::Task)+ ;
ControlFlow ::= ε ;
Input ::= sink::DataFlow source::DataFlow ;
Parameter ::= DataElement ;
Boolean ::= "true" | "false" ;
Task ::= SimpleTask ;
 Task ::= CoumpoundTask ;
OutputSet ::= (containsOutput::Output)+ ;
Output ::= Exception ;
--------------------metamodels::CADM.bgf--------------------
InfoExchRequirement ::= (isCitedIn::Document)+ (isSpecifiedInInfos::InformationAsset)+ ;
Standard ::= (isAssociatedWith::Agreement)+ (isCitedBy::Agreement)+ (appliesTo::InformationAsset)+ (implements::Guidance)+ ;
Element ::= Architecture ;
 Element ::= Organization ;
 Element ::= Guidance ;
 Element ::= Document ;
 Element ::= Action ;
 Element ::= Agreement ;
 Element ::= Task ;
 Element ::= InformationAsset ;
 Element ::= Network ;
 Element ::= MissionArea ;
 Element ::= System ;
 Element ::= Mission ;
 Element ::= FunctionalArea ;
 Element ::= Capability ;
 Element ::= MaterielItem ;
 Element ::= Facility ;
 Element ::= name::String content::String ;
Document ::= (isAssociatedWith::Document)+ describesArchitecture::Architecture (describesSystem::System)+ (isSpecifiedUsing::Agreement)+ (cites::InformationAsset)+ ;
SoftwareItem ::= (uses::EquipmentType)+ isSourceFor::Organization ;
ActivityModel ::= (isAssociatedWith::InformationAsset)+ ;
MissionArea ::= (supports::Task)+ ;
Capability ::= (specifiesRequired::Requirement)+ ;
Guidance ::= Requirement ;
 Guidance ::= (isAssocitatedWith::Guidance)+ (isImplementedBy::Architecture)+ (isSpecifiedIn::Document)+ (providesAuthorityFor::InformationAsset)+ (defines::MissionArea)+ ;
MaterielItem ::= EquipmentType ;
 MaterielItem ::= SoftwareItem ;
 MaterielItem ::= (establishedAs::MaterielItem)+ (conformsTo::Standard)+ (performsTo::Capability)+ ;
Action ::= mayBeA::Task (isAssociatedWith::Action)+ (involvedIn::ActivityModel)+ ;
Organization ::= (isAssociatedWith::Organization)+ (softwareItems::SoftwareItem)+ (owns::InformationAsset)+ (includes::Node)+ (performsTo::Capability)+ (hasRequirement::Requirement)+ (hasMissionArea::MissionArea)+ (associatedSystems::System)+ (isProponentOf::FunctionalArea)+ ;
Architecture ::= (isAssociatedWith::Architecture)+ (missions::Mission)+ (isFocusOf::FunctionalArea)+ (uses::Organization)+ ;
String ::= string() ;
ExchangeNeedLineReq ::= (mayBeSatifiedBy::Architecture)+ (isSpecifiedUsing::InformationAsset)+ (specifiesNeedFor::MaterielItem)+ (cites::MissionArea)+ ;
FunctionalArea ::= (isPartOf::FunctionalArea)+ (supports::System)+ (cites::MissionArea)+ ;
System ::= (isAssociatedWith::System)+ (citedIn::Architecture)+ (compliesWith::Standard)+ (isDescribedBy::InformationAsset)+ (uses::MaterielItem)+ (operatesUsing::Network)+ (performsTo::Capability)+ (associatedOrganization::Organization)+ (appliesTo::Requirement)+ ;
Network ::= (isAssociatedWith::Network)+ (isDescribedIn::Document)+ (compliesWith::Standard)+ (has::Organization)+ (performsTo::Capability)+ ;
Mission ::= isCitedBy::Architecture (requires::Task)+ (isAssigned::Organization)+ (mayCite::FunctionalArea)+ ;
Agreement ::= Standard ;
 Agreement ::= (isAssociatedWith::Agreement)+ (isCitedBy::Agreement)+ (appliesTo::InformationAsset)+ (implements::Guidance)+ ;
EquipmentType ::= (establishedAs::MaterielItem)+ (conformsTo::Standard)+ (performsTo::Capability)+ ;
ConceptualDataModel ::= (isAssociatedWith::InformationAsset)+ ;
Task ::= (isAssociatedWith::Task)+ (isPerformedBy::Node)+ (isPerformedUsing::System)+ (specifies::Requirement)+ ;
InformationAsset ::= ConceptualDataModel ;
 InformationAsset ::= ActivityModel ;
 InformationAsset ::= (isAssociatedWith::InformationAsset)+ ;
Facility ::= name::String content::String ;
Requirement ::= InfoExchRequirement ;
 Requirement ::= ExchangeNeedLineReq ;
 Requirement ::= (mayBeSatifiedBy::Architecture)+ (isSpecifiedUsing::InformationAsset)+ (specifiesNeedFor::MaterielItem)+ (cites::MissionArea)+ ;
Node ::= (isAssociatedWith::Node)+ (describes::Architecture)+ (hasServicesProvidedBy::Facility)+ (involvedIn::ActivityModel)+ (uses::InformationAsset)+ (involves::InfoExchRequirement)+ (isParticipedInBy::Network)+ (supports::System)+ ;
--------------------metamodels::CDE.bgf--------------------
Integer ::= integer() ;
ICdeServer ::= (implements::ICdeComponent)+ ;
ICdeMemberExe ::= executionPerformance::String resourceNeeded::String executionDetails::String ;
IUmlClass ::= IUmlComponent ;
ICdeComponentSpec ::= (members::IUmlMember)+ ;
Boolean ::= "true" | "false" ;
ICdeMember ::= ε ;
IUmlMember ::= ICdeMember ;
IUmlType ::= ICdeComponentSpec ;
 IUmlType ::= IUmlClass ;
 IUmlType ::= (members::IUmlMember)+ ;
ICdeComponent ::= ε ;
IUmlComponent ::= ICdeServer ;
 IUmlComponent ::= ICdeComponent ;
 IUmlComponent ::= ICdeServer | ICdeComponent ;
String ::= string() ;
--------------------metamodels::CFG.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
Expression ::= expressionName::String ;
ConditionalNode ::= trueConditionNode::Node falseConditionNode::Node ;
AbstractNode ::= Node ;
 AbstractNode ::= ConditionalNode ;
Node ::= inNode::Node outNode::Node ;
String ::= string() ;
--------------------metamodels::COBOL.bgf--------------------
COBOLComposedType ::= (elements::COBOLElement)+ ;
COBOLSimpleType ::= usageValue::COBOLUsageValue pictureString::String usage::Boolean ;
Integer ::= integer() ;
COBOLRedefiningElement ::= redefines::COBOLElement ;
COBOLSourceText ::= source::String fileName::String ;
COBOLElement ::= COBOLRedefiningElement ;
 COBOLElement ::= level::String refined::Boolean name::String sharedType::COBOLClassifier group::COBOLComposedType (initial::COBOLElementInitialValue)+ (contains::COBOL88Element)+ source::COBOLSourceText array::COBOLFixedLengthArray ;
Boolean ::= "true" | "false" ;
COBOLElementInitialValue ::= initVal::String valueKind::COBOLInitialValueKind ;
COBOLVariableLengthArray ::= minUpper::Integer dependingOn::COBOLElement ;
COBOLClassifier ::= COBOLSimpleType ;
 COBOLClassifier ::= COBOLComposedType ;
 COBOLClassifier ::= typeded::Boolean name::String (typedElements::COBOLElement)+ ;
COBOLInitialValueKind ::= (civk_string_value::ε) | (civk_low_value::ε) | (civk_high_value::ε) | (civk_zero_value::ε) | (civk_quotes::ε) | (civk_null::ε) | (civk_all_literal::ε) ;
COBOLUsageValue ::= (cuv_binary::ε) | (cuv_dbcs::ε) | (cuv_double::ε) | (cuv_display::ε) | (cuv_float::ε) | (cuv_index::ε) | (cuv_objectReference::ε) | (cuv_packedDecimal::ε) | (cuv_pointer::ε) | (cuv_procedurePointer::ε) ;
COBOLFixedLengthArray ::= COBOLVariableLengthArray ;
 COBOLFixedLengthArray ::= maxUpper::Integer ;
String ::= string() ;
--------------------metamodels::CORBAComponent.bgf--------------------
FinderDef ::= fi_home::HomeDef ;
Integer ::= integer() ;
ConsumesDef ::= cd_home::ComponentDef ;
OperationDef ::= FactoryDef ;
 OperationDef ::= FinderDef ;
 OperationDef ::= FactoryDef | FinderDef ;
InterfaceDef ::= ComponentDef ;
 InterfaceDef ::= HomeDef ;
 InterfaceDef ::= ComponentDef | HomeDef ;
FactoryDef ::= fa_home::HomeDef ;
EventDef ::= EmitsDef ;
 EventDef ::= PublishesDef ;
 EventDef ::= ConsumesDef ;
 EventDef ::= type::ValueDef ;
UsesDef ::= multiple::Boolean uses::InterfaceDef ud_home::ComponentDef ;
Boolean ::= "true" | "false" ;
PrimaryKeyDef ::= pkd_home::HomeDef type::ValueDef ;
PublishesDef ::= pud_home::ComponentDef ;
ComponentDef ::= isBasic::Boolean (facets::ProvidesDef)+ (receptacles::UsesDef)+ (supports::InterfaceDef)+ (emits::EmitsDef)+ (publishes::PublishesDef)+ (consumes::ConsumesDef)+ ;
HomeDef ::= manages::ComponentDef (factories::FactoryDef)+ (finders::FinderDef)+ key::PrimaryKeyDef ;
EmitsDef ::= ed_home::ComponentDef ;
ValueDef ::= ε ;
ProvidesDef ::= provides::InterfaceDef prd_home::ComponentDef ;
String ::= string() ;
--------------------metamodels::CPL.bgf--------------------
Reject ::= status::String reason::String ;
NoAnswer ::= contents::Node ;
NodeContainer ::= SubAction ;
 NodeContainer ::= Outgoing ;
 NodeContainer ::= Incoming ;
 NodeContainer ::= NotPresent ;
 NodeContainer ::= Otherwise ;
 NodeContainer ::= SwitchedAddress ;
 NodeContainer ::= SwitchedString ;
 NodeContainer ::= SwitchedLanguage ;
 NodeContainer ::= SwitchedTime ;
 NodeContainer ::= SwitchedPriority ;
 NodeContainer ::= Busy ;
 NodeContainer ::= NoAnswer ;
 NodeContainer ::= Redirection ;
 NodeContainer ::= Failure ;
 NodeContainer ::= Default ;
 NodeContainer ::= Location ;
CPL ::= (subActions::SubAction)+ outgoing::Outgoing incoming::Incoming ;
Redirect ::= permanent::String ;
SwitchedPriority ::= less::String greater::String equal::String ;
SubAction ::= id::String ;
String ::= string() ;
SwitchedLanguage ::= matches::String ;
Failure ::= contents::Node ;
AddressSwitch ::= field::String subField::String (addresses::SwitchedAddress)+ ;
SwitchedString ::= is::String contains::String ;
Node ::= Switch ;
 Node ::= SubCall ;
 Node ::= Action ;
 Node ::= Location ;
Default ::= contents::Node ;
SwitchedTime ::= dtstart::String dtend::String duration::String freq::String until::String count::String interval::String bySecond::String byMinute::String byHour::String byDay::String byMonthDay::String byYearDay::String byWeekNo::String byMonth::String wkst::String bySetPos::String ;
Integer ::= integer() ;
SubCall ::= ref::String ;
Element ::= CPL ;
 Element ::= NodeContainer ;
 Element ::= Node ;
Busy ::= contents::Node ;
PrioritySwitch ::= (priorities::SwitchedPriority)+ ;
Action ::= SignallingAction ;
Location ::= url::String priority::String clear::String ;
SignallingAction ::= Proxy ;
 SignallingAction ::= Redirect ;
 SignallingAction ::= Reject ;
Switch ::= AddressSwitch ;
 Switch ::= StringSwitch ;
 Switch ::= LanguageSwitch ;
 Switch ::= TimeSwitch ;
 Switch ::= PrioritySwitch ;
Otherwise ::= contents::Node ;
Proxy ::= timeout::String recurse::String ordering::String busy::Busy noAnswer::NoAnswer redirection::Redirection failure::Failure default::Default ;
LanguageSwitch ::= (languages::SwitchedLanguage)+ ;
Outgoing ::= contents::Node ;
Redirection ::= contents::Node ;
Boolean ::= "true" | "false" ;
NotPresent ::= contents::Node ;
Incoming ::= contents::Node ;
StringSwitch ::= field::String (strings::SwitchedString)+ ;
TimeSwitch ::= tzid::String tzurl::String (times::SwitchedTime)+ ;
SwitchedAddress ::= is::String contains::String subDomainOf::String ;
--------------------metamodels::CPR.bgf--------------------
Resource ::= resource_action::Action ;
Integer ::= integer() ;
EvaluationCriteria ::= criteria_objective::Objective ;
Objective ::= objective_plan::Plan (criterias::EvaluationCriteria)+ ;
Plan ::= (sub_plans::Plan)+ super_plan::Plan (objectives::Objective)+ (actions::Action)+ ;
TimeSpec ::= timeSpec_action::Action ;
Boolean ::= "true" | "false" ;
Action ::= action_plan::Plan (sub_actions::Action)+ super_action::Action actor::Actor (resources::Resource)+ (timeSpecs::TimeSpec)+ ;
Actor ::= actor_action::Action (sub_actors::Actor)+ super_actor::Actor ;
String ::= string() ;
--------------------metamodels::CSM.bgf--------------------
Integer ::= integer() ;
Scenarion ::= Step ;
 Scenarion ::= (step::Step)+ (root::Start)+ ;
Component ::= ε ;
CSM ::= (step::Step)+ (generalResource::GeneralResource)+ (scenarion::Scenarion)+ ;
End ::= postPath::PathConnection prePath::PathConnection activeResource::ActiveResource ;
ResourceRelease ::= generalResource::GeneralResource ;
Merge ::= message::Message (post::Step)+ (pre::Step)+ ;
Workload ::= start::Start ;
GeneralResource ::= ActiveResource ;
 GeneralResource ::= PassiveResource ;
 GeneralResource ::= (resourceAcquire::ResourceAcquire)+ (resourceRelease::ResourceRelease)+ ;
PassiveResource ::= Component ;
ActiveResource ::= ProcessingResource ;
 ActiveResource ::= ExternalService ;
 ActiveResource ::= (step::Step)+ ;
String ::= string() ;
Step ::= Start ;
 Step ::= End ;
 Step ::= ResourceAcquire ;
 Step ::= ResourceRelease ;
 Step ::= postPath::PathConnection prePath::PathConnection activeResource::ActiveResource ;
Seqence ::= message::Message (post::Step)+ (pre::Step)+ ;
Join ::= message::Message (post::Step)+ (pre::Step)+ ;
ExternalService ::= (step::Step)+ ;
Boolean ::= "true" | "false" ;
ResourceAcquire ::= generalResource::GeneralResource ;
Message ::= ε ;
PathConnection ::= Join ;
 PathConnection ::= Fork ;
 PathConnection ::= Merge ;
 PathConnection ::= Branch ;
 PathConnection ::= Seqence ;
 PathConnection ::= message::Message (post::Step)+ (pre::Step)+ ;
Branch ::= message::Message (post::Step)+ (pre::Step)+ ;
Fork ::= message::Message (post::Step)+ (pre::Step)+ ;
Start ::= workload::Workload ;
ProcessingResource ::= (step::Step)+ ;
--------------------metamodels::CWMCore.bgf--------------------
Integer ::= integer() ;
Constraint ::= body::BooleanExpression (constrainedElements::ModelElement)+ ;
Attribute ::= type::Classifier ;
NameSpace ::= Classifier ;
 NameSpace ::= Package ;
 NameSpace ::= (ownedElements::ModelElement)+ ;
StructuralFeature ::= Attribute ;
 StructuralFeature ::= type::Classifier ;
Class ::= (features::Feature)+ ;
Feature ::= StructuralFeature ;
 Feature ::= owner::Classifier ;
ModelElement ::= Dependency ;
 ModelElement ::= Constraint ;
 ModelElement ::= Feature ;
 ModelElement ::= NameSpace ;
 ModelElement ::= name::String visibility::VisibilityKind (contraints::Constraint)+ (clientDependencies::Dependency)+ (supplierDependencies::Dependency)+ namespace::NameSpace (importers::Package)+ ;
String ::= string() ;
Subsystem ::= (features::Feature)+ (importedElements::ModelElement)+ ;
Dependency ::= kind::String (clients::ModelElement)+ (suppliers::ModelElement)+ ;
Model ::= (importedElements::ModelElement)+ ;
Boolean ::= "true" | "false" ;
Package ::= Model ;
 Package ::= Subsystem ;
 Package ::= (importedElements::ModelElement)+ ;
VisibilityKind ::= (vk_public_vis::ε) | (vk_private_vis::ε) | (vk_protected_vis::ε) ;
Datatype ::= (features::Feature)+ ;
Classifier ::= Class ;
 Classifier ::= Datatype ;
 Classifier ::= Subsystem ;
 Classifier ::= (features::Feature)+ ;
BooleanExpression ::= expresssion::String ;
--------------------metamodels::CWMRelationalData.bgf--------------------
Table ::= isTemporary::Boolean temporaryScope::String isSystem::Boolean (table_constraints::CheckConstraint)+ ;
Integer ::= integer() ;
ColumnSet ::= NamedColumnSet ;
 ColumnSet ::= QueryColumnSet ;
 ColumnSet ::= (features::Column)+ ;
SQLSimpleType ::= characterMaximumLength::Integer characterOctetLength::Integer numericPrecision::Integer numericPrecisionRadix::Integer numericScale::Integer dateTimePrecision::Integer (sqlDistinctTypes::SQLDistinctType)+ ;
Trigger ::= namedColumnSet::NamedColumnSet ;
Boolean ::= "true" | "false" ;
Column ::= precision::Integer scale::Integer isNullable::Boolean length::Integer collectionName::String characterSetName::String (column_constraints::CheckConstraint)+ type::SQLDataType owner::ColumnSet optionScopeColumnSet::NamedColumnSet ;
View ::= isReadOnly::Boolean checkOption::Boolean queryExpression::QueryExpression ;
CheckConstraint ::= (constraintElements::Column)+ (constrainedElements::Table)+ ;
SQLDistinctType ::= length::Integer precision::Integer scale::Integer sqlSimpleType::SQLSimpleType ;
QueryColumnSet ::= query::QueryExpression ;
NamedColumnSet ::= Table ;
 NamedColumnSet ::= View ;
 NamedColumnSet ::= optionScopeColumn::Column (triggers::Trigger)+ ;
SQLDataType ::= SQLDistinctType ;
 SQLDataType ::= SQLSimpleType ;
 SQLDataType ::= typeNumber::Integer (structuralFeatures::Column)+ ;
String ::= string() ;
QueryExpression ::= expresssion::String ;
--------------------metamodels::Class.bgf--------------------
Integer ::= integer() ;
Attribute ::= multiValued::Boolean type::Classifier owner::Class ;
Class ::= (super::Class)+ (attr::Attribute)+ isAbstract::Boolean ;
Boolean ::= "true" | "false" ;
DataType ::= ε ;
NamedElt ::= Classifier ;
 NamedElt ::= Attribute ;
Classifier ::= DataType ;
 Classifier ::= Class ;
String ::= string() ;
--------------------metamodels::ChocoModel.bgf--------------------
Integer ::= integer() ;
SymbolicTerm ::= term::Expression ;
OpConstraint ::= (eq::ε) | (and2::ε) | (or2::ε) | (gt::ε) | (ge::ε) | (lt::ε) | (le::ε) | (plus::ε) ;
PostConstraint ::= op::OpConstraint constraint::ConstraintDef ;
Constraint ::= op::OpConstraint left::Expression right::Expression ;
Element ::= Expression ;
 Element ::= PostConstraint ;
IntVar ::= domain::Domain ;
Expression ::= ConstraintDef ;
 Expression ::= IntVar ;
 Expression ::= IntConstant ;
 Expression ::= SymbolicTerm ;
 Expression ::= IntValue ;
 Expression ::= IntExp ;
 Expression ::= Constraint ;
IntConstant ::= val::Integer ;
String ::= string() ;
IntExp ::= op::OpConstraint left::Expression right::Expression ;
LocatedElement ::= Package ;
 LocatedElement ::= Import ;
 LocatedElement ::= ChocoProblem ;
 LocatedElement ::= Element ;
 LocatedElement ::= Domain ;
ChocoProblem ::= name::String (elements::Element)+ ;
ConstraintDef ::= op::OpConstraint left::Expression right::Expression ;
Boolean ::= "true" | "false" ;
Package ::= name::String (import::Import)+ problem::ChocoProblem ;
Import ::= fqn::String ;
Domain ::= lower::Integer upper::Integer ;
IntValue ::= val::Integer ;
--------------------metamodels::ClassicModels.bgf--------------------
OrderDetail ::= order::Order product::Product quantityOrdered::Integer priceEach::Double ;
Product ::= productLine::ProductLine code::String name::String scale::String vendor::String description::String quantityInStock::Integer buyPrice::Double MSRP::Double ;
Integer ::= integer() ;
Order ::= customer::Customer (orderDetails::OrderDetail)+ number::Integer date::Date requiredDate::Date shippedDate::Date status::String comments::String ;
Customer ::= customerOwner::ClassicModels number::Integer (orders::Order)+ (payments::Payment)+ salesRepEmployee::Employee name::String contactLastName::String contactFirstName::String creditLimit::Double ;
Employee ::= office::Office number::Integer (employeeCustomers::Customer)+ lastName::String firstName::String extension::String email::String reportsTo::Employee jobTitle::String ;
Date ::= year::Integer month::Integer day::Integer ;
Office ::= officeOwner::ClassicModels code::String (employees::Employee)+ territory::String ;
ClassicModels ::= (offices::Office)+ (productLines::ProductLine)+ (customers::Customer)+ ;
Payment ::= customer::Customer checkNumber::String date::Date amount::Double ;
ProductLine ::= productLineOwner::ClassicModels (products::Product)+ name::String textDescription::String htmlDescription::String ;
AddressInfo ::= Office ;
 AddressInfo ::= Customer ;
String ::= string() ;
--------------------metamodels::Cocus.owl.bgf--------------------
AssociatedChair ::= memberOfConference::Conference ;
PaperFullVersion ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Email ::= Notification_Email ;
 Email ::= Group_Email ;
 Email ::= Approval_Email ;
 Email ::= Rejection_Email ;
 Email ::= Notification_Email | Group_Email | Approval_Email | Rejection_Email ;
Conference ::= hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
Decision ::= Acceptance ;
 Decision ::= Rejection ;
 Decision ::= Acceptance | Rejection ;
Document ::= Review ;
 Document ::= Paper ;
 Document ::= Email ;
 Document ::= Submission ;
 Document ::= Template ;
 Document ::= recieved_by::User used_by::Person submited__by::User ;
Preference ::= ε ;
Event ::= Workshop ;
 Event ::= Symposium ;
 Event ::= Conference ;
 Event ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator ;
SubjectArea ::= ε ;
ProgramCommittee ::= hasProgramCommitteeMember::ProgramCommitteeMember ;
Review ::= Meta-Review ;
 Review ::= writtenBy::Reviewer ;
Acceptance ::= ε ;
ConferenceMember ::= Reviewer ;
 ConferenceMember ::= ConferenceChair ;
 ConferenceMember ::= AssociatedChair ;
 ConferenceMember ::= Author ;
 ConferenceMember ::= ProgramCommitteeMember ;
 ConferenceMember ::= Chairman ;
 ConferenceMember ::= memberOfConference::Conference ;
Person ::= ConferenceMember ;
 Person ::= ExternalReviewer ;
 Person ::= User ;
 Person ::= ProgramCommitteeMember ;
 Person ::= Chairman ;
 Person ::= Administrator ;
 Person ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person hasConflictOfInterest::Document email::String ;
ProgramCommitteeMember ::= ProgramCommitteeChair ;
 ProgramCommitteeMember ::= memberOfProgramCommittee::ProgramCommittee maxPapers::Integer addedBy::Administrator ;
String ::= string() ;
Detail ::= ε ;
Activity ::= Event_Creation ;
 Activity ::= Request ;
 Activity ::= Event_Approval ;
 Activity ::= Registration ;
 Activity ::= (has_result::Thing)+ sent_by::Person ;
Request ::= Help_Request ;
PaperAbstract ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Administrator ::= approve::Event assign::Role finalizePaperAssignment::Conference runPaperAssignmentTools::Conference enableVirtualMeeting::Conference startReviewerBidding::Conference assignReviewer::Reviewer rejectPaper::Paper enterConferenceDetails::Conference printHardcopyMailingManifests::Conference setMaxPapers::ProgramCommitteeMember enterReviewCriteria::Conference acceptPaper::Paper addProgramCommitteeMember::ProgramCommitteeMember ;
Submission ::= recieved_by::User used_by::Person submited__by::User ;
Paper ::= PaperAbstract ;
 Paper ::= PaperFullVersion ;
 Paper ::= Abstract ;
 Paper ::= Invited_Paper ;
 Paper ::= Short_Paper ;
 Paper ::= Full_Paper ;
 Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
User ::= Committee ;
 User ::= Administrator ;
 User ::= Reviewer ;
 User ::= Author ;
 User ::= recieve::Document (create::Thing)+ submit::Document ;
Author ::= AuthorNotReviewer ;
 Author ::= Co-author ;
 Author ::= Corresponding_Author ;
 Author ::= submitPaper::Paper writePaper::Paper ;
Rejection ::= ε ;
ConferenceChair ::= memberOfConference::Conference ;
Preview ::= ε ;
Workshop ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator ;
Reviewer ::= Meta-Reviewer ;
 Reviewer ::= assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper writeReview::Review assignExternalReviewer::ExternalReviewer ;
Inforamtion ::= ε ;
Integer ::= integer() ;
Committee ::= recieve::Document (create::Thing)+ submit::Document ;
Bid ::= adjustedBy::Reviewer ;
Description ::= ε ;
Template ::= recieved_by::User used_by::Person submited__by::User ;
Registration ::= (has_result::Thing)+ sent_by::Person ;
Assistance ::= ε ;
Role ::= Admin_Role ;
 Role ::= Author_Role ;
 Role ::= Committe_Role ;
 Role ::= Head_Role ;
 Role ::= Reviewer_Role ;
 Role ::= assigned_by::Administrator ;
Chairman ::= ConferenceChair ;
 Chairman ::= AssociatedChair ;
 Chairman ::= ProgramCommitteeChair ;
 Chairman ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person hasConflictOfInterest::Document email::String memberOfConference::Conference ;
Symposium ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator ;
ExternalReviewer ::= assignedByReviewer::Reviewer ;
URL ::= Event_URL ;
Thing ::= Event ;
 Thing ::= Role ;
 Thing ::= Person ;
 Thing ::= Document ;
 Thing ::= Detail ;
 Thing ::= Conference ;
 Thing ::= Event | Role | Person | Document | Detail ;
Account ::= registred_by::Person ;
AuthorNotReviewer ::= submitPaper::Paper writePaper::Paper ;
Misc ::= ε ;
ProgramCommitteeChair ::= endReview::Review ;
Boolean ::= "true" | "false" ;
Abstract ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
--------------------metamodels::DSL.bgf--------------------
Integer ::= integer() ;
SimpleType ::= ε ;
Namespace ::= LoadedElement ;
 Namespace ::= Type ;
Type ::= SimpleType ;
 Type ::= Enumeration ;
Boolean ::= "true" | "false" ;
EnumerationLiteral ::= value::PrimitiveTypes/Integer ;
Relationship ::= isEmbedding::PrimitiveTypes/Boolean roles::Role ;
Class ::= isSerializationRoot::PrimitiveTypes/Boolean ;
Enumeration ::= (literals::EnumerationLiteral)+ ;
LoadedElement ::= DomainModel ;
 LoadedElement ::= Classifier ;
ValueProperty ::= owner::Classifier type::Type ;
Role ::= min::PrimitiveTypes/Integer max::PrimitiveTypes/Integer isUnbounded::PrimitiveTypes/Boolean accepts::PrimitiveTypes/String isOrdered::PrimitiveTypes/Boolean isNavigableFrom::PrimitiveTypes/Boolean isPropertyGenerator::PrimitiveTypes/Boolean source::Classifier type::Classifier relation::Relationship ;
DomainModel ::= (classifiers::Classifier)+ (types::Type)+ ;
NamedElement ::= Namespace ;
 NamedElement ::= Role ;
 NamedElement ::= ValueProperty ;
 NamedElement ::= EnumerationLiteral ;
String ::= string() ;
Classifier ::= Class ;
 Classifier ::= Relationship ;
--------------------metamodels::CompanyStructure.bgf--------------------
Integer ::= integer() ;
Employee ::= ε ;
CorporateHQ ::= (manages::Store)+ corporateHQBackOffice::CorporateHQBackOffice ;
Company ::= corporateHQ::CorporateHQ (Store::Store)+ ;
Boolean ::= "true" | "false" ;
CashRegister ::= ε ;
StoreBackOffice ::= ε ;
String ::= string() ;
CorporateHQBackOffice ::= ε ;
Store ::= storeBackOffice::StoreBackOffice (employee::Employee)+ (cashRegister::CashRegister)+ ;
--------------------metamodels::ComponentUML.bgf--------------------
Integer ::= integer() ;
Attribute ::= entity::Entity ;
AssociationEnd ::= type::Entity association::Association ;
Boolean ::= "true" | "false" ;
Entity ::= (methods::Method)+ (attributes::Attribute)+ (associationEnds::AssociationEnd)+ ;
Method ::= entity::Entity ;
Association ::= associationEnds::AssociationEnd ;
String ::= string() ;
--------------------metamodels::Conference.owl.bgf--------------------
AssociatedChair ::= memberOfConference::Conference ;
Tutorial ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
PaperFullVersion ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Email ::= Notification_Email ;
 Email ::= Group_Email ;
 Email ::= Approval_Email ;
 Email ::= Rejection_Email ;
 Email ::= Notification_Email | Group_Email | Approval_Email | Rejection_Email ;
Conference ::= Conference_volume ;
 Conference ::= hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
Decision ::= Acceptance ;
 Decision ::= Rejection ;
 Decision ::= Acceptance | Rejection ;
Document ::= Email ;
 Document ::= Submission ;
 Document ::= Template ;
 Document ::= Paper ;
 Document ::= Review ;
 Document ::= recieved_by::User used_by::Person submited__by::User ;
Preference ::= ε ;
Presentation ::= Invited_talk ;
 Presentation ::= is_given_by::Active_conference_participant ;
Event ::= Symposium ;
 Event ::= Conference ;
 Event ::= Workshop ;
 Event ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator ;
SubjectArea ::= ε ;
ProgramCommittee ::= hasProgramCommitteeMember::ProgramCommitteeMember ;
Review ::= Meta-Review ;
 Review ::= writtenBy::Reviewer reviews::Reviewed_contribution ;
Acceptance ::= ε ;
ConferenceMember ::= Reviewer ;
 ConferenceMember ::= ConferenceChair ;
 ConferenceMember ::= AssociatedChair ;
 ConferenceMember ::= Author ;
 ConferenceMember ::= ProgramCommitteeMember ;
 ConferenceMember ::= Chairman ;
 ConferenceMember ::= memberOfConference::Conference ;
Person ::= ConferenceMember ;
 Person ::= ExternalReviewer ;
 Person ::= User ;
 Person ::= Conference_participant ;
 Person ::= Conference_contributor ;
 Person ::= Committee_member ;
 Person ::= Conference_applicant ;
 Person ::= Track-workshop_chair ;
 Person ::= ProgramCommitteeMember ;
 Person ::= Chairman ;
 Person ::= Administrator ;
 Person ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String hasConflictOfInterest::Document email::String ;
ProgramCommitteeMember ::= ProgramCommitteeChair ;
 ProgramCommitteeMember ::= memberOfProgramCommittee::ProgramCommittee maxPapers::Integer addedBy::Administrator ;
String ::= string() ;
Detail ::= ε ;
Activity ::= Event_Creation ;
 Activity ::= Request ;
 Activity ::= Event_Approval ;
 Activity ::= Registration ;
 Activity ::= (has_result::Thing)+ sent_by::Person ;
Request ::= Help_Request ;
PaperAbstract ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Poster ::= is_submitted_at::Conference_volume ;
Administrator ::= approve::Event assign::Role finalizePaperAssignment::Conference runPaperAssignmentTools::Conference enableVirtualMeeting::Conference startReviewerBidding::Conference assignReviewer::Reviewer rejectPaper::Paper enterConferenceDetails::Conference printHardcopyMailingManifests::Conference setMaxPapers::ProgramCommitteeMember enterReviewCriteria::Conference acceptPaper::Paper addProgramCommitteeMember::ProgramCommitteeMember ;
Submission ::= recieved_by::User used_by::Person submited__by::User ;
Paper ::= PaperAbstract ;
 Paper ::= PaperFullVersion ;
 Paper ::= Abstract ;
 Paper ::= Invited_Paper ;
 Paper ::= Short_Paper ;
 Paper ::= Full_Paper ;
 Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Track ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
User ::= Committee ;
 User ::= Administrator ;
 User ::= Author ;
 User ::= recieve::Document (create::Thing)+ submit::Document ;
Author ::= AuthorNotReviewer ;
 Author ::= Co-author ;
 Author ::= Corresponding_Author ;
 Author ::= submitPaper::Paper writePaper::Paper ;
Rejection ::= ε ;
ConferenceChair ::= memberOfConference::Conference ;
Preview ::= ε ;
Workshop ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator ;
EEnum ::= (high::ε) | (medium::ε) | (low::ε) | (very high::ε) | (male::ε) | (female::ε) ;
Chair ::= was_a_committee_chair_of::Committee ;
Reviewer ::= Meta-Reviewer ;
 Reviewer ::= assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper writeReview::Review assignExternalReviewer::ExternalReviewer invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ ;
Inforamtion ::= ε ;
Integer ::= integer() ;
Committee ::= Program_committee ;
 Committee ::= Organizing_committee ;
 Committee ::= Steering_committee ;
 Committee ::= has_members::Committee_member was_a_committee_of::Conference_volume has_a_committee_co-chair::Co-chair has_a_committee_chair::Chair ;
Bid ::= adjustedBy::Reviewer ;
Publisher ::= issues::Conference_proceedings ;
Description ::= ε ;
Template ::= recieved_by::User used_by::Person submited__by::User ;
Registration ::= (has_result::Thing)+ sent_by::Person ;
Assistance ::= ε ;
Role ::= Admin_Role ;
 Role ::= Author_Role ;
 Role ::= Committe_Role ;
 Role ::= Head_Role ;
 Role ::= Reviewer_Role ;
 Role ::= assigned_by::Administrator ;
Chairman ::= ConferenceChair ;
 Chairman ::= AssociatedChair ;
 Chairman ::= ProgramCommitteeChair ;
 Chairman ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String hasConflictOfInterest::Document email::String memberOfConference::Conference ;
Symposium ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator ;
Organization ::= ε ;
ExternalReviewer ::= assignedByReviewer::Reviewer ;
Organizer ::= ε ;
Topic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
URL ::= Event_URL ;
Thing ::= Event ;
 Thing ::= Role ;
 Thing ::= Person ;
 Thing ::= Document ;
 Thing ::= Detail ;
 Thing ::= Review_expertise ;
 Thing ::= Organizer ;
 Thing ::= Review_preference ;
 Thing ::= Conference ;
 Thing ::= Event | Role | Person | Document | Detail | Review_expertise | Organizer | Review_preference ;
Account ::= registred_by::Person ;
AuthorNotReviewer ::= submitPaper::Paper writePaper::Paper ;
Misc ::= ε ;
ProgramCommitteeChair ::= endReview::Review ;
Boolean ::= "true" | "false" ;
Abstract ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
 Abstract ::= (is_the_1th_part_of::Thing)+ ;
--------------------metamodels::Contact.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
Contact ::= nom::String prenom::String (num_fixes::Num_fixe)+ (num_portables::Num_portable)+ ;
--------------------metamodels::ControllerUML.bgf--------------------
Integer ::= integer() ;
StateMachineAction ::= ε ;
ViewState ::= (substates::State)+ theContainer::State (outGoing::StateTransition)+ (incoming::StateTransition)+ ;
Controller ::= (controllerAttribute::ControllerAttribute)+ behavior::StateMachine ;
Event ::= ε ;
Boolean ::= "true" | "false" ;
StateTransition ::= source::State target::State trigger::Event effect::StateMachineAction ;
StateMachine ::= (states::State)+ ;
SubControllerState ::= controller::Controller ;
State ::= SubControllerState ;
 State ::= ViewState ;
 State ::= (substates::State)+ theContainer::State (outGoing::StateTransition)+ (incoming::StateTransition)+ ;
String ::= string() ;
ControllerAttribute ::= controller::Controller ;
--------------------metamodels::Cristal.bgf--------------------
ActCompositeMember ::= (activityDefinitions::ActivityDefinition)+ ;
ElementaryActDef ::= actCompositeMember::ActCompositeMember ;
Integer ::= integer() ;
PartCompositeMember ::= partDefinitions::PartDefinition ;
CompositeParDef ::= (partCompositeMember::PartCompositeMember)+ ;
Condition ::= (partCompositeMembers::PartCompositeMember)+ (actCompositeMembers::ActCompositeMember)+ ;
CompositeActDef ::= (actCompositeMembers::ActCompositeMember)+ ;
Boolean ::= "true" | "false" ;
PartDefinition ::= CompositeParDef ;
 PartDefinition ::= ElementaryPartDef ;
 PartDefinition ::= (partCompositeMembers::PartCompositeMember)+ ;
ElementaryPartDef ::= (partCompositeMembers::PartCompositeMember)+ ;
ActivityDefinition ::= ElementaryActDef ;
 ActivityDefinition ::= CompositeActDef ;
 ActivityDefinition ::= actCompositeMember::ActCompositeMember ;
String ::= string() ;
--------------------metamodels::DSLModel.bgf--------------------
Integer ::= integer() ;
ModelElementLink ::= (links::ReferenceLink)+ ;
Element ::= ModelElement ;
 Element ::= ReferenceLink ;
BooleanValue ::= value::PrimitiveTypes/Boolean ;
Model ::= domainModel::PrimitiveTypes/String (contents::ModelElement)+ ;
Boolean ::= "true" | "false" ;
Role ::= element::ModelElement owner::ReferenceLink ;
Property ::= owner::ModelElement value::Value ;
ReferenceLink ::= owner::ModelElement modelElement::ModelElementLink roles::Role ;
IntegerValue ::= value::PrimitiveTypes/Integer ;
NamedElement ::= EmbeddingLink ;
 NamedElement ::= Property ;
 NamedElement ::= Role ;
ModelElement ::= ModelElementLink ;
 ModelElement ::= parentLink::EmbeddingLink (properties::Property)+ (embeddinglinks::EmbeddingLink)+ (referencelinks::ReferenceLink)+ ;
String ::= string() ;
Value ::= IntegerValue ;
 Value ::= DoubleValue ;
 Value ::= BooleanValue ;
 Value ::= StringValue ;
EmbeddingLink ::= owner::ModelElement (elements::ModelElement)+ ;
StringValue ::= value::PrimitiveTypes/String ;
DoubleValue ::= value::PrimitiveTypes/Double ;
--------------------metamodels::DSLtools.bgf--------------------
Integer ::= integer() ;
SimpleType ::= ε ;
Namespace ::= LoadedElement ;
 Namespace ::= Type ;
Type ::= SimpleType ;
 Type ::= Enumeration ;
Boolean ::= "true" | "false" ;
EnumerationLiteral ::= value::PrimitiveTypes/Integer ;
Relationship ::= isEmbedding::PrimitiveTypes/Boolean roles::Role ;
Class ::= isSerializationRoot::PrimitiveTypes/Boolean ;
Enumeration ::= (literals::EnumerationLiteral)+ ;
LoadedElement ::= DomainModel ;
 LoadedElement ::= Classifier ;
ValueProperty ::= owner::Classifier type::Type ;
Role ::= min::PrimitiveTypes/Integer max::PrimitiveTypes/Integer isUnbounded::PrimitiveTypes/Boolean accepts::PrimitiveTypes/String isOrdered::PrimitiveTypes/Boolean isNavigableFrom::PrimitiveTypes/Boolean isPropertyGenerator::PrimitiveTypes/Boolean source::Classifier type::Classifier relation::Relationship ;
DomainModel ::= (classifiers::Classifier)+ (types::Type)+ ;
NamedElement ::= Namespace ;
 NamedElement ::= Role ;
 NamedElement ::= ValueProperty ;
 NamedElement ::= EnumerationLiteral ;
String ::= string() ;
Classifier ::= Class ;
 Classifier ::= Relationship ;
--------------------metamodels::DTD.bgf--------------------
Children ::= Sequence ;
 Children ::= Leaf ;
 Children ::= Choice ;
Leaf ::= elementName::String ;
ElementContent ::= Mixed ;
 ElementContent ::= Children ;
Element ::= AnyElement ;
 Element ::= RestrictedElement ;
Mixed ::= elements::String ;
AttributeList ::= (containsAttributes::AttributeDescription)+ ;
Occurence ::= (zeroOrOne::ε) | (zeroOrMore::ε) | (oneOrMore::ε) | (one::ε) ;
AttributeType ::= Enumeration ;
String ::= string() ;
NoDefaultValue ::= isRequired::Boolean ;
DefaultValue ::= value::String isFixed::Boolean ;
AnyElement ::= ε ;
Boolean ::= "true" | "false" ;
Enumeration ::= values::String ;
OtherAttributeTypeEnum ::= (cdata::ε) | (id::ε) | (idref::ε) | (entityType::ε) | (entities::ε) | (nmtoken::ε) | (nmtakens::ε) ;
OtherAttributeType ::= type::OtherAttributeTypeEnum ;
Entity ::= content::String isInternal::Boolean ;
Notation ::= content::String ;
TypeDescription ::= Notation ;
 TypeDescription ::= Entity ;
 TypeDescription ::= Element ;
 TypeDescription ::= AttributeList ;
 TypeDescription ::= AttributeDescription ;
Choice ::= childrenChoice::Children ;
Sequence ::= children::Children ;
RestrictedElement ::= content::ElementContent ;
AttributeDescription ::= NoDefaultValue ;
 AttributeDescription ::= DefaultValue ;
--------------------metamodels::DTMP.bgf--------------------
Integer ::= integer() ;
Parameter ::= (name::String)+ (type::String)+ state::State ;
Boolean ::= "true" | "false" ;
Transition ::= (transProb::String)+ to::State from::State ;
State ::= name::String isStart::Boolean isEnd::Boolean isFail::Boolean (incoming::Transition)+ (outGoing::Transition)+ (formalParam::Parameter)+ ;
String ::= string() ;
--------------------metamodels::DXF.bgf--------------------
Integer ::= integer() ;
Mesh ::= name::String (points::Point)+ ;
DXF ::= (meshes::Mesh)+ ;
String ::= string() ;
Point ::= name::String mesh::Mesh x::Double y::Double z::Double ;
--------------------metamodels::DeploymentReport.bgf--------------------
SimpleName ::= value::String ;
DeploymentReport ::= (import::DeploymentImport)+ applications::Applications binding::Binding logicalServers::LogicalServers errors::ErrorCollection ;
SequenceReport ::= report::ReportObject setting::Setting (system::ReportSystem)+ (resource::ReportResource)+ (endpoint::ReportEndpoint)+ ;
ImportNamespaceIdentity ::= import::DeploymentImport ;
ReportObject ::= LogicalServer ;
 ReportObject ::= Application ;
 ReportObject ::= ReportSystem ;
 ReportObject ::= ReportResource ;
 ReportObject ::= ReportEndpoint ;
 ReportObject ::= (sequence::SequenceReport)+ name::String definition::String extends::String instanceId::Guid hostedOn::String ;
String ::= string() ;
PublicKeyType ::= value::String ;
DocumentConstraintError ::= (failedInput::FailedInput)+ constraintMember::String constraintDefinition::String targetInstancePath::String ownerInstancePath::String constraintErrorCode::String constraintErrorMessage::String ;
Setting ::= (value::SettingInstanceValue)+ (facet::SettingFacet)+ settingAttributes::SettingAttributes ;
Application ::= (sequence::SequenceReport)+ name::String definition::String extends::String instanceId::Guid hostedOn::String ;
ProcessorArchitectures ::= (x86::ε) | (ia64::ε) | (amd64::ε) | (wow64::ε) | (msil::ε) | (shx::ε) | (arm::ε) | (data::ε) ;
BoundLogicalServer ::= (setting::Setting)+ (application::Application)+ name::String definition::String extends::String ;
FailedInput ::= (contents::String)+ ;
OuterSystem ::= (system::OuterSystem)+ (application::Application)+ name::String ;
DeploymentImport ::= alias::SimpleName identity::ImportNamespaceIdentity ;
Guid ::= value::String ;
SettingAttributes ::= name::String definition::String state::SettingState fixed::Boolean list::Boolean null::Boolean secure::Boolean failedToSerialize::Boolean ;
SettingFacet ::= value::SettingInstanceValue settingAttributes::SettingAttributes ;
LogicalServers ::= (zone::Zone)+ (logicalServer::LogicalServer)+ ;
ErrorCollection ::= (documentError::DocumentError)+ (documentResolutionError::DocumentResolutionError)+ (documentConstraintError::DocumentConstraintError)+ ;
Binding ::= (zone::Zone)+ (boundLogicalServer::BoundLogicalServer)+ ;
ReportSystem ::= (sequence::SequenceReport)+ name::String definition::String extends::String instanceId::Guid hostedOn::String ;
SettingValue ::= (contents::String)+ Null::Boolean Secure::Boolean ;
Integer ::= integer() ;
PublicKeyTokenType ::= value::String ;
Element ::= Guid ;
 Element ::= SimpleName ;
 Element ::= Path ;
 Element ::= FourPartVersionType ;
 Element ::= PublicKeyType ;
 Element ::= PublicKeyTokenType ;
 Element ::= Culture ;
 Element ::= CultureNeutral ;
 Element ::= value::String ;
Description ::= (contents::String)+ ;
CultureNeutral ::= value::String ;
NamespaceIdentity ::= ImportNamespaceIdentity ;
 NamespaceIdentity ::= name::Path version::FourPartVersionType publicKey::PublicKeyType publicKeyToken::PublicKeyTokenType culture::CultureNeutral platform::Platform ;
FourPartVersionType ::= value::String ;
Platform ::= (x86::ε) | (ia64::ε) | (amd64::ε) | (wow64::ε) | (msil::ε) | (shx::ε) | (arm::ε) | (data::ε) | (*::ε) | (neutral::ε) ;
Culture ::= value::String ;
DocumentError ::= DocumentResolutionError ;
 DocumentError ::= DocumentConstraintError ;
 DocumentError ::= (description::Description)+ Code::Integer Level::Integer File::String ;
SettingInstanceValue ::= (contents::String)+ null::Boolean ;
LogicalServer ::= (sequence::SequenceReport)+ name::String definition::String extends::String instanceId::Guid hostedOn::String ;
Zone ::= (zone::Zone)+ (boundLogicalServer::BoundLogicalServer)+ (logicalServer::LogicalServer)+ name::String ;
ReportEndpoint ::= (sequence::SequenceReport)+ name::String definition::String extends::String instanceId::Guid hostedOn::String ;
Boolean ::= "true" | "false" ;
Path ::= value::String ;
Applications ::= (system::OuterSystem)+ (application::Application)+ ;
ReportResource ::= (sequence::SequenceReport)+ name::String definition::String extends::String instanceId::Guid hostedOn::String ;
SettingState ::= (Set::ε) | (NotSet::ε) | (Error::ε) ;
DocumentResolutionError ::= Statement::String ;
--------------------metamodels::DiagramInterchange.bgf--------------------
GraphicPrimitive ::= Polyline ;
 GraphicPrimitive ::= Ellipse ;
GraphConnector ::= position::Point gc_graphElement::GraphElement (graphEdges::GraphEdge)+ ;
Integer ::= integer() ;
Ellipse ::= center::Point radiusX::Double radiusY::Double rotation::Double startAngle::Double endAngle::Double ;
LeafElement ::= TextElement ;
 LeafElement ::= Image ;
 LeafElement ::= GraphicPrimitive ;
CoreElement ::= ε ;
Image ::= uri::String mimeType::String ;
Property ::= key::String value::String ;
Diagram ::= name::String zoom::Double viewPort::Point (diagramLinks::DiagramLink)+ namespace::SemanticModelBridge ;
String ::= string() ;
BezierPoint ::= controls::Point ;
GraphNode ::= Diagram ;
 GraphNode ::= size::Dimension ;
Point ::= BezierPoint ;
 Point ::= x::Double y::Double ;
TextElement ::= text::String ;
GraphElement ::= GraphEdge ;
 GraphElement ::= GraphNode ;
CoreSemanticModelBridge ::= element::ElementsElement ;
DiagramLink ::= zoom::Double viewPort::Point dl_graphElement::GraphElement dl_diagram::Diagram ;
SemanticModelBridge ::= SimpleSemanticModelElement ;
 SemanticModelBridge ::= UML1SemanticModelBridge ;
 SemanticModelBridge ::= CoreSemanticModelBridge ;
SimpleSemanticModelElement ::= typeInfo::String ;
GraphEdge ::= waypoints::Point anchors::GraphConnector ;
Reference ::= isIndividualRepresentation::Boolean referenced::DiagramElement ;
DiagramElement ::= Reference ;
 DiagramElement ::= GraphElement ;
 DiagramElement ::= LeafElement ;
Boolean ::= "true" | "false" ;
Dimension ::= width::Double heigth::Double ;
ElementsElement ::= ε ;
Polyline ::= waypoints::Point closed::Boolean ;
--------------------metamodels::DoDAF-OV5.bgf--------------------
InformationAssetDocument ::= name::String description::String view::String ;
AMIERole ::= Control ;
 AMIERole ::= Input ;
 AMIERole ::= Output ;
 AMIERole ::= Mechanism ;
 AMIERole ::= (defines::AMPA)+ ;
AMPA ::= (isOrdinateOf::AMPA)+ (isSubordinateOf::AMPA)+ (defines::AMIERole)+ ;
Control ::= source::String destination::String ;
MechanismFacility ::= source::String destination::String resourceType::String ;
IE ::= (isAssociatedWith::AMIERole)+ (isOrdinateOf::IE)+ (isSubordinateOf::IE)+ ;
Element ::= DoDAFModel ;
 Element ::= Document ;
 Element ::= AMSpecificationElement ;
 Element ::= PAExchangeRequirement ;
 Element ::= ArchitectureDocument ;
 Element ::= IE ;
 Element ::= AMIERole ;
 Element ::= InformationAssetDocument ;
 Element ::= AMPA ;
 Element ::= PACapability ;
 Element ::= PA ;
 Element ::= InformationAsset ;
 Element ::= Task ;
 Element ::= Organization ;
 Element ::= OrganizationType ;
 Element ::= OperationalRole ;
 Element ::= Occupation ;
 Element ::= PersonType ;
 Element ::= Skill ;
 Element ::= DOSCR ;
Document ::= AMSpecification ;
 Document ::= type::String (cites::InformationAssetDocument)+ (records::ArchitectureDocument)+ (isTheReferenceFor::IE)+ (isThePrimaryReferenceFor::PA)+ ;
Mechanism ::= MechanismSystem ;
 Mechanism ::= MechanismReference ;
 Mechanism ::= MechanismFacility ;
 Mechanism ::= source::String destination::String resourceType::String ;
DOSCR ::= mayBeAn::Occupation (appliesTo::PersonType)+ (mayBeCitedFor::OperationalRole)+ ;
AMSpecification ::= (isSpecifiedUsing::AMSpecificationElement)+ ;
PATask ::= isCitedBy::InformationAsset ;
Organization ::= type::OrganizationType (supplies::InformationAsset)+ (providesStewardshipFor::InformationAsset)+ (owns::InformationAsset)+ (develops::IE)+ (isCitedAs::MechanismReference)+ ;
MechanismReference ::= source::String destination::String resourceType::String ;
String ::= string() ;
Skill ::= (mayBeCitedFor::OperationalRole)+ ;
PA ::= (isTheProducerFor::PAExchangeRequirement)+ (isTheConsumerFor::PAExchangeRequirement)+ (isParentFor::PA)+ (isChildFor::PA)+ (has::PACapability)+ (isIncludedIn::AMPA)+ (correspondsTo::PATask)+ ;
PersonType ::= (mayBeCitedFor::OperationalRole)+ (can::Skill)+ ;
PAExchangeRequirement ::= (isTheSubjectOf::AMSpecificationElement)+ ;
ArchitectureDocument ::= name::String description::String view::String ;
OrganizationType ::= (isTheTypeOf::Organization)+ (isCitedAs::MechanismReference)+ ;
AM ::= type::String (specifies::AMSpecification)+ (includes::AMPA)+ (paTask::PATask)+ ;
Occupation ::= (mayBeCitedForOR::OperationalRole)+ (mayBeCitedForPT::PersonType)+ ;
DoDAFModel ::= (document::Document)+ (am::AM)+ (task::Task)+ (iaDocument::InformationAssetDocument)+ (amSpecification::AMSpecification)+ (doscr::DOSCR)+ (organizationType::OrganizationType)+ ;
Input ::= (isTheInputThatIsDefinedBy::Output)+ source::String destination::String information::String ;
PACapability ::= name::String description::String view::String ;
OperationalRole ::= (isCitedAs::MechanismReference)+ ;
MechanismSystem ::= source::String destination::String resourceType::String ;
Task ::= PATask ;
 Task ::= levelIdentifier::String references::String cost::String ;
AMSpecificationElement ::= subject::PAExchangeRequirement ;
InformationAsset ::= AM ;
Output ::= source::String destination::String information::String ;
--------------------metamodels::DoDAF-SV4.bgf--------------------
InformationAssetDocument ::= name::String description::String view::String ;
OrganizationTypeOperationalRole ::= name::String description::String view::String ;
Document ::= SystemFunctionalityDescription ;
 Document ::= FunctionalSpecification ;
 Document ::= AMSpecification ;
 Document ::= type::String (cites::InformationAssetDocument)+ (describes::SystemDocument)+ (records::ArchitectureDocument)+ (isTheReferenceFor::IE)+ (isThePrimaryReferenceFor::PA)+ ;
OperationalRolePA ::= name::String description::String view::String ;
DataStore ::= (isParentFor::PA)+ (isChildFor::PA)+ (isIncludedIn::AMPA)+ (isAssignedTo::SystemPA)+ (represents::ArchitectureBusinessSubFunction)+ (correspondsTo::PATask)+ (has::PACapability)+ (isPerformedBy::OperationalRolePA)+ ;
AMSpecification ::= (isUsedIn::FunctionalSpecification)+ ;
String ::= string() ;
Skill ::= (mayBeCitedFor::OperationalRole)+ ;
PA ::= DataStore ;
 PA ::= SystemFunction ;
 PA ::= (isParentFor::PA)+ (isChildFor::PA)+ (isIncludedIn::AMPA)+ (isAssignedTo::SystemPA)+ (represents::ArchitectureBusinessSubFunction)+ (correspondsTo::PATask)+ (has::PACapability)+ (isPerformedBy::OperationalRolePA)+ ;
ArchitectureDocument ::= name::String description::String view::String ;
AM ::= type::String (isCitedBy::PATask)+ (specifies::AMSpecification)+ (includes::AMPA)+ (isUsedToDescribe::SystemFunctionalityDescription)+ (defines::LineOfBusiness)+ ;
Occupation ::= (mayBeCitedForOR::OperationalRole)+ (mayBeCitedForPT::PersonType)+ ;
LineOfBusiness ::= (appliesToTask::Task)+ (appliesToBS::BusinessSubfunction)+ ;
DoDAFModel ::= (document::Document)+ (sfd::SystemFunctionalityDescription)+ (amSpecification::AMSpecification)+ (sd::SystemDocument)+ (task::Task)+ (iaDocument::InformationAssetDocument)+ (position::Position)+ (occupation::Occupation)+ (ad::ArchitectureDocument)+ (system::System)+ (am::AM)+ (spas::SystemPAStandard)+ (its::InformationTechnologyStandard)+ (orpa::OperationalRolePA)+ (ptcn::PersonTypeCapabilityNorm)+ ;
AMIERoleGraphic ::= name::String description::String view::String ;
Input ::= (isTheInputThatIsDefinedBy::Output)+ source::String destination::String information::String ;
PACapability ::= name::String description::String view::String ;
ArchitectureBusinessSubFunction ::= name::String description::String view::String ;
Task ::= HumanBehaviourTask ;
 Task ::= OperationalCapabilityTask ;
 Task ::= TaskMissionArea ;
 Task ::= PATask ;
 Task ::= levelIdentifier::String references::String cost::String (correspondsTo::PATask)+ (supports::TaskMissionArea)+ ;
PersonTypeCapabilityNorm ::= name::String description::String view::String ;
Output ::= source::String destination::String information::String ;
FunctionalSpecification ::= mayBeA::SystemDocument ;
SystemFunctionalityDescription ::= type::String (cites::InformationAssetDocument)+ (describes::SystemDocument)+ (records::ArchitectureDocument)+ (isTheReferenceFor::IE)+ (isThePrimaryReferenceFor::PA)+ ;
AMIERole ::= Input ;
 AMIERole ::= Output ;
 AMIERole ::= (defines::AMPA)+ (isRepresentedBy::AMIERoleGraphic)+ ;
SystemPAStandard ::= (isUsedToDefine::InformationTechnologyStandard)+ ;
AMPA ::= (isOrdinateOf::AMPA)+ (isSubordinateOf::AMPA)+ (defines::AMIERole)+ (isRepresentedBy::AMPAGraphic)+ ;
IE ::= (isAssociatedWith::AMIERole)+ (isOrdinateOf::IE)+ (isSubordinateOf::IE)+ ;
Element ::= DoDAFModel ;
 Element ::= Document ;
 Element ::= SystemDocument ;
 Element ::= ArchitectureDocument ;
 Element ::= System ;
 Element ::= SystemPA ;
 Element ::= IE ;
 Element ::= AMIERole ;
 Element ::= AMIERoleGraphic ;
 Element ::= InformationAssetDocument ;
 Element ::= AMPA ;
 Element ::= AMPAGraphic ;
 Element ::= PA ;
 Element ::= PACapability ;
 Element ::= InformationAsset ;
 Element ::= SystemPAStandard ;
 Element ::= InformationTechnologyStandard ;
 Element ::= LineOfBusiness ;
 Element ::= Task ;
 Element ::= BusinessSubfunction ;
 Element ::= ArchitectureBusinessSubFunction ;
 Element ::= OperationalRolePA ;
 Element ::= OperationalRole ;
 Element ::= OrganizationTypeOperationalRole ;
 Element ::= OrganizationOperationalRole ;
 Element ::= Occupation ;
 Element ::= PersonType ;
 Element ::= PersonTypeCapabilityNorm ;
 Element ::= Skill ;
 Element ::= Position ;
BusinessSubfunction ::= (appliesTo::ArchitectureBusinessSubFunction)+ ;
PATask ::= levelIdentifier::String references::String cost::String (correspondsTo::PATask)+ (supports::TaskMissionArea)+ ;
OrganizationOperationalRole ::= name::String description::String view::String ;
HumanBehaviourTask ::= levelIdentifier::String references::String cost::String (correspondsTo::PATask)+ (supports::TaskMissionArea)+ ;
InformationTechnologyStandard ::= (isUsedToDefine::SystemPAStandard)+ ;
TaskMissionArea ::= (hasContributionFrom::OperationalCapabilityTask)+ ;
PersonType ::= (mayBeCitedFor::OperationalRole)+ (performsTo::PersonTypeCapabilityNorm)+ (can::Skill)+ ;
OperationalCapabilityTask ::= levelIdentifier::String references::String cost::String (correspondsTo::PATask)+ (supports::TaskMissionArea)+ ;
System ::= (isDesignedToProvide::SystemPA)+ (isDescribedBy::SystemDocument)+ ;
AMPAGraphic ::= name::String description::String view::String ;
SystemDocument ::= name::String description::String view::String ;
Position ::= (mayBeCitedFor::OperationalRole)+ ;
OperationalRole ::= (performs::OperationalRolePA)+ (isPerformedByOTOR::OrganizationTypeOperationalRole)+ (isPerformedByOOR::OrganizationOperationalRole)+ ;
SystemFunction ::= (isParentFor::PA)+ (isChildFor::PA)+ (isIncludedIn::AMPA)+ (isAssignedTo::SystemPA)+ (represents::ArchitectureBusinessSubFunction)+ (correspondsTo::PATask)+ (has::PACapability)+ (isPerformedBy::OperationalRolePA)+ ;
InformationAsset ::= AM ;
 InformationAsset ::= (isCitedIn::InformationAssetDocument)+ (describes::DataStore)+ ;
SystemPA ::= (isDefinedUsing::SystemPAStandard)+ ;
--------------------metamodels::DoDAF-SV5.bgf--------------------
AMPA ::= (isOrdinateOf::AMPA)+ (isSubordinateOf::AMPA)+ ;
Element ::= DoDAFModel ;
 Element ::= Document ;
 Element ::= SystemFunctionTraceabilityElement ;
 Element ::= SystemDocument ;
 Element ::= ArchitectureDocument ;
 Element ::= PA ;
 Element ::= SystemPA ;
 Element ::= SoftwareApplicationProcedurePA ;
 Element ::= InformationAsset ;
 Element ::= AMPA ;
 Element ::= System ;
 Element ::= Task ;
 Element ::= ArchitectureTask ;
 Element ::= Capability ;
 Element ::= CapabilityDocument ;
 Element ::= SystemCapability ;
 Element ::= InformationTechnologyRequirement ;
Document ::= SystemFunctionTraceabilityMatrix ;
 Document ::= type::String (cites::CapabilityDocument)+ (describes::SystemDocument)+ (records::ArchitectureDocument)+ (isThePrimaryReferenceFor::PA)+ ;
SoftwareApplicationProcedurePA ::= name::String description::String view::String ;
Capability ::= NetworkCapability ;
 Capability ::= NodeLinkCapability ;
 Capability ::= MaterielItemCapabilityNorm ;
 Capability ::= OrganizationTypeCapabilityNorm ;
 Capability ::= RequiredInformationTechnologyCapability ;
 Capability ::= (isPerformedBy::SystemCapability)+ (isOrdinateFor::Capability)+ (isSubordinateOf::Capability)+ (isPerformedByNC::NetworkCapability)+ (isPerformedByNLC::NodeLinkCapability)+ (isPerformedBySC::SystemCapability)+ (isCitedInCD::CapabilityDocument)+ (isUsedInMICN::MaterielItemCapabilityNorm)+ (isUsedInOTCN::OrganizationTypeCapabilityNorm)+ (isAttainedFor::RequiredInformationTechnologyCapability)+ ;
ArchitectureTask ::= name::String description::String view::String ;
PATask ::= levelIdentifier::String references::String cost::String (correspondsTo::PATask)+ (isSupportedBy::ArchitectureTask)+ (isTheSourceOfNeedFor::InformationExchangeRequirement)+ (isTheDestinationOfNeedFor::InformationExchangeRequirement)+ (isCitedFor::SystemFunctionTraceabilityElement)+ ;
InformationExchangeRequirement ::= (specifies::RequiredInformationTechnologyCapability)+ ;
NodeLinkCapability ::= (isPerformedBy::SystemCapability)+ (isOrdinateFor::Capability)+ (isSubordinateOf::Capability)+ (isPerformedByNC::NetworkCapability)+ (isPerformedByNLC::NodeLinkCapability)+ (isPerformedBySC::SystemCapability)+ (isCitedInCD::CapabilityDocument)+ (isUsedInMICN::MaterielItemCapabilityNorm)+ (isUsedInOTCN::OrganizationTypeCapabilityNorm)+ (isAttainedFor::RequiredInformationTechnologyCapability)+ ;
CapabilityDocument ::= (isCitedIn::Capability)+ ;
String ::= string() ;
RequiredInformationTechnologyCapability ::= (isPerformedBy::SystemCapability)+ (isOrdinateFor::Capability)+ (isSubordinateOf::Capability)+ (isPerformedByNC::NetworkCapability)+ (isPerformedByNLC::NodeLinkCapability)+ (isPerformedBySC::SystemCapability)+ (isCitedInCD::CapabilityDocument)+ (isUsedInMICN::MaterielItemCapabilityNorm)+ (isUsedInOTCN::OrganizationTypeCapabilityNorm)+ (isAttainedFor::RequiredInformationTechnologyCapability)+ ;
PA ::= SystemFunction ;
 PA ::= (isParentFor::PA)+ (isChildFor::PA)+ (correspondsTo::PATask)+ (isIncludedIn::AMPA)+ (isAssignedTo::SystemPA)+ (isSupportedBy::SoftwareApplicationProcedurePA)+ (isTheConsumerFor::PAExchangeRequirement)+ (isTheProducerFor::PAExchangeRequirement)+ ;
SystemFunctionTraceabilityElement ::= systemFunction::SystemFunction operationalActivity::Task systemProcessActivity::SystemPA system::System capability::Capability supportStatusCode::SupportStatusCode ;
PAExchangeRequirement ::= (isCitedIn::InformationExchangeRequirement)+ ;
OperationalCapabilityTask ::= isAccomplishedA::SystemOperationalCapabilityTask ;
System ::= (isDesignedToProvide::SystemPA)+ (isDescribedBy::SystemDocument)+ (performs::SystemCapability)+ (isUsedToAccomplish::SystemOperationalCapabilityTask)+ ;
SupportStatusCode ::= (red::ε) | (yellow::ε) | (green::ε) ;
ArchitectureDocument ::= name::String description::String view::String ;
SystemFunctionTraceabilityMatrix ::= (isDefinedBy::SystemFunctionTraceabilityElement)+ ;
AM ::= type::String (isCitedBy::PATask)+ (includes::AMPA)+ ;
InformationTechnologyRequirement ::= InformationExchangeRequirement ;
 InformationTechnologyRequirement ::= PAExchangeRequirement ;
 InformationTechnologyRequirement ::= (specifies::RequiredInformationTechnologyCapability)+ ;
DoDAFModel ::= (document::Document)+ (sftm::SystemFunctionTraceabilityMatrix)+ (sd::SystemDocument)+ (am::AM)+ (system::System)+ (task::Task)+ (capability::Capability)+ (capabilityDocument::CapabilityDocument)+ (systemCapability::SystemCapability)+ ;
MaterielItemCapabilityNorm ::= (isPerformedBy::SystemCapability)+ (isOrdinateFor::Capability)+ (isSubordinateOf::Capability)+ (isPerformedByNC::NetworkCapability)+ (isPerformedByNLC::NodeLinkCapability)+ (isPerformedBySC::SystemCapability)+ (isCitedInCD::CapabilityDocument)+ (isUsedInMICN::MaterielItemCapabilityNorm)+ (isUsedInOTCN::OrganizationTypeCapabilityNorm)+ (isAttainedFor::RequiredInformationTechnologyCapability)+ ;
SystemDocument ::= name::String description::String view::String ;
SystemCapability ::= (isCitedIn::Capability)+ ;
SystemFunction ::= (isCitedFor::SystemFunctionTraceabilityElement)+ ;
NetworkCapability ::= (isPerformedBy::SystemCapability)+ (isOrdinateFor::Capability)+ (isSubordinateOf::Capability)+ (isPerformedByNC::NetworkCapability)+ (isPerformedByNLC::NodeLinkCapability)+ (isPerformedBySC::SystemCapability)+ (isCitedInCD::CapabilityDocument)+ (isUsedInMICN::MaterielItemCapabilityNorm)+ (isUsedInOTCN::OrganizationTypeCapabilityNorm)+ (isAttainedFor::RequiredInformationTechnologyCapability)+ ;
Task ::= OperationalCapabilityTask ;
 Task ::= SystemOperationalCapabilityTask ;
 Task ::= PATask ;
 Task ::= levelIdentifier::String references::String cost::String (correspondsTo::PATask)+ (isSupportedBy::ArchitectureTask)+ (isTheSourceOfNeedFor::InformationExchangeRequirement)+ (isTheDestinationOfNeedFor::InformationExchangeRequirement)+ (isCitedFor::SystemFunctionTraceabilityElement)+ ;
InformationAsset ::= AM ;
OrganizationTypeCapabilityNorm ::= (isPerformedBy::SystemCapability)+ (isOrdinateFor::Capability)+ (isSubordinateOf::Capability)+ (isPerformedByNC::NetworkCapability)+ (isPerformedByNLC::NodeLinkCapability)+ (isPerformedBySC::SystemCapability)+ (isCitedInCD::CapabilityDocument)+ (isUsedInMICN::MaterielItemCapabilityNorm)+ (isUsedInOTCN::OrganizationTypeCapabilityNorm)+ (isAttainedFor::RequiredInformationTechnologyCapability)+ ;
SystemOperationalCapabilityTask ::= levelIdentifier::String references::String cost::String (correspondsTo::PATask)+ (isSupportedBy::ArchitectureTask)+ (isTheSourceOfNeedFor::InformationExchangeRequirement)+ (isTheDestinationOfNeedFor::InformationExchangeRequirement)+ (isCitedFor::SystemFunctionTraceabilityElement)+ ;
SystemPA ::= (mayBeCitedFor::SystemFunctionTraceabilityElement)+ (provides::SystemCapability)+ (enables::SystemOperationalCapabilityTask)+ ;
--------------------metamodels::DoDAF.bgf--------------------
Constraint ::= ε ;
ATO ::= timePeriod::String (cr::CollectionRequirement)+ mea::MunitionsEffectsAssesment (tn::TargetNomination)+ rr::RestrikeRecommendation ;
WSV ::= missionID::String weaponfSystemID::String videoType::String ;
JFSOCC ::= jfc::JFC ;
TargetMaterialsAnalysis ::= targetID::String target::Target ;
TargetNomination ::= (ato::ATO)+ (mea::MunitionsEffectsAssesment)+ rr::RestrikeRecommendation target::Target ;
ServiceRegistry ::= ε ;
String ::= string() ;
Target ::= (cr::CollectionRequirement)+ tn::TargetNomination holds::MIDB (describes::TargetMaterialsAnalysis)+ ;
JFMCC ::= jfc::JFC ;
Performer ::= (decomposes::Performer)+ (fulfills::OperationalRole)+ ;
SystemProductFlow ::= (transports::Product)+ originatesFrom::SystemFunction ;
ComponentCommand ::= DJFLCC ;
 ComponentCommand ::= JFACC ;
 ComponentCommand ::= JFMCC ;
 ComponentCommand ::= JFSOCC ;
 ComponentCommand ::= jfc::JFC ;
SubordinateAirCommand ::= MAW ;
 SubordinateAirCommand ::= WOC ;
 SubordinateAirCommand ::= jfacc::JFACC ;
DJFLCC ::= jfc::JFC ;
WOC ::= jfacc::JFACC ;
AOCCID ::= name::String content::String ;
CombatReport ::= friendlyUnitsInvolved::String combatLocation::String resultsAssessment::String duration::String ;
ServiceMediator ::= ServiceRegistry ;
 ServiceMediator ::= ServiceLocator ;
 ServiceMediator ::= ServiceBroker ;
 ServiceMediator ::= ServiceRegistry | ServiceLocator | ServiceBroker ;
MISREP ::= missionID::String missionObjectives::String missionAssesments::String ;
SystemsNode ::= (groups::SystemAtNode)+ ;
ServiceProvider ::= ServiceMediator ;
CollectionRequirement ::= sourceID::String collectionTargetID::String toBeDoneByTime::String specialNeeds::String (rd::ResultData)+ (ato::ATO)+ (isContainedIn::Target)+ ;
JFACC ::= subordinateAirCommand::SubordinateAirCommand (aoccid::AOCCID)+ (aoccpsc::AOCCombatPlanStrategyCells)+ ;
SystemRole ::= ServiceProvider ;
 SystemRole ::= (decomposes::SystemRole)+ (performs::SystemFunction)+ terminatesAt::SystemRoleInterface ;
QualityRequirement ::= ε ;
ConstraintOrRequirement ::= Constraint ;
 ConstraintOrRequirement ::= QualityRequirement ;
DataReference ::= defineBy::Data ;
OperationalActivity ::= (decomposes::OperationalRole)+ (supports::SystemFunction)+ ;
HigherEchelon ::= dia::DIA jfc::JFC ;
Integer ::= integer() ;
RestrikeRecommendation ::= ato::ATO tn::TargetNomination ;
COI ::= (comprises::Performer)+ defines::Vocabulary ;
DIA ::= nmjic::NMJIC higherEchelon::HigherEchelon ;
Element ::= System ;
 Element ::= SystemRole ;
 Element ::= SystemFunction ;
 Element ::= SystemRoleInterface ;
 Element ::= SystemAtNode ;
 Element ::= SystemAtNodeInterface ;
 Element ::= SystemsNode ;
 Element ::= COI ;
 Element ::= Vocabulary ;
 Element ::= DataReference ;
 Element ::= Performer ;
 Element ::= OperationalRole ;
 Element ::= OperationalActivity ;
 Element ::= Product ;
 Element ::= SystemProductFlow ;
 Element ::= ConstraintOrRequirement ;
 Element ::= DIA ;
 Element ::= NMJIC ;
 Element ::= HigherEchelon ;
 Element ::= JFC ;
 Element ::= F2C2 ;
 Element ::= ComponentCommand ;
 Element ::= SubordinateAirCommand ;
 Element ::= AOCCID ;
 Element ::= AOCCombatPlanStrategyCells ;
MIDB ::= (target::Target)+ ;
Service ::= (decomposes::SystemFunction)+ (consumes::Product)+ (produces::Product)+ terminatesAt::SystemProductFlow (mesuredBy::ConstraintOrRequirement)+ ;
SystemAtNodeInterface ::= originatesFrom::SystemAtNode ;
SystemRoleInterface ::= ServiceDependency ;
 SystemRoleInterface ::= originatesFrom::SystemRole ;
BDAReport ::= targetID::String reportSourceID::String assesmentSumart::String validityDuration::String (rd::ResultData)+ mea::MunitionsEffectsAssesment ;
Product ::= Material ;
 Product ::= Data ;
 Product ::= Material | Data ;
System ::= (decomposes::System)+ (fulfills::SystemRole)+ ;
ServiceBroker ::= ε ;
AOCCombatPlanStrategyCells ::= name::String content::String ;
Data ::= ε ;
OperationalRole ::= (decomposes::OperationalRole)+ (accomplishes::OperationalActivity)+ ;
MunitionsEffectsAssesment ::= bdaReport::BDAReport ato::ATO tn::TargetNomination ;
ResultData ::= CombatReport ;
 ResultData ::= WSV ;
 ResultData ::= MISREP ;
 ResultData ::= Imagery ;
 ResultData ::= sourceID::String timeStamp::String (cr::CollectionRequirement)+ (bdaReport::BDAReport)+ ;
JFC ::= higherEchelon::HigherEchelon f2c2::F2C2 componentComand::ComponentCommand ;
Material ::= ε ;
SystemFunction ::= Service ;
 SystemFunction ::= (decomposes::SystemFunction)+ (consumes::Product)+ (produces::Product)+ terminatesAt::SystemProductFlow (mesuredBy::ConstraintOrRequirement)+ ;
Vocabulary ::= (comprises::DataReference)+ ;
NMJIC ::= dia::DIA ;
SystemAtNode ::= references::System terminatesAt::SystemAtNodeInterface ;
MAW ::= jfacc::JFACC ;
Imagery ::= imageType::String spectralData::String geospacialLocation::String imageSize::Integer ;
ServiceLocator ::= ε ;
ServiceDependency ::= originatesFrom::SystemRole ;
--------------------metamodels::DotNET_SystemReflection.bgf--------------------
MemberTypes ::= (Constructor::ε) | (Event::ε) | (Field::ε) | (Method::ε) | (Property::ε) | (TypeInfo::ε) | (Custom::ε) | (NestedType::ε) | (All::ε) ;
Integer ::= integer() ;
ManifestResource ::= content::String assembly::Assembly ;
Type ::= namespace::String (genericParameterAttributes::GenericParameterAttributes)+ (typeAttributes::TypeAttributes)+ baseType::Type module::Module (interfaces::Type)+ (members::MemberInfo)+ ;
MethodAttributes ::= (Abstract::ε) | (Assembly::ε) | (ChekedAccessOnOverride::ε) | (FamADNAssem::ε) | (Family::ε) | (FamORAssem::ε) | (Final::ε) | (HasSecurity::ε) | (HideBySig::ε) | (MemberAccessMask::ε) | (NewSlot::ε) | (PInvokeImpl::ε) | (Private::ε) | (PrivateScope::ε) | (Public::ε) | (RequiredSecObject::ε) | (ReservedMask::ε) | (ReuseSlot::ε) | (RTSpecialName::ε) | (SpecialName::ε) | (Static::ε) | (UnmanagedExport::ε) | (Virtual::ε) | (VtableLayoutMask::ε) ;
ParameterInfo ::= defaultValue::String position::Integer (attributes::ParameterAttributes)+ parameterType::Type member::MethodBase ;
MethodBase ::= MethodInfo ;
 MethodBase ::= ConstructorInfo ;
TypeAttributes ::= (Abstract::ε) | (AnsiClass::ε) | (AutoClass::ε) | (AutoLayout::ε) | (BeforFieldInit::ε) | (Class::ε) | (ClassSemanticsMask::ε) | (ExplicitLayout::ε) | (HasSecutity::ε) | (Import::ε) | (Interface::ε) | (LayoutMask::ε) | (NestedAssembly::ε) | (NestedFamADNAssem::ε) | (NestedFamily::ε) | (NestedFamORAssem::ε) | (NestedPrivate::ε) | (NestedPublic::ε) | (NotPublic::ε) | (Public::ε) | (ReservedMask::ε) | (RTSpecialName::ε) | (Sealed::ε) | (SequentialLayout::ε) | (Serializable::ε) | (SpecialName::ε) | (StringFormatMask::ε) | (UnicodeClass::ε) | (VisibilityMask::ε) ;
FieldAttributes ::= (FieldAccessMask::ε) | (PrivateScope::ε) | (Private::ε) | (Assembly::ε) | (Family::ε) | (FamANDAssem::ε) | (FamORAssem::ε) | (Public::ε) | (Shared::ε) | (InitOnly::ε) | (Literal::ε) | (NotSerialized::ε) | (SpecialName::ε) | (PinvokeImpl::ε) | (ReservedMask::ε) | (RTSpecialName::ε) | (HasFieldMarshal::ε) | (HasDefault::ε) | (HasFieldRVA::ε) | (Static::ε) ;
EventAttributes ::= (None::ε) | (ReservedMask::ε) | (RTSpecialName::ε) | (SpecialName::ε) ;
String ::= string() ;
MethodInfo ::= returnType::Type ;
PropertyAttributes ::= (NotSupported::ε) | (Optional::ε) | (Read::ε) | (Required::ε) | (Write::ε) ;
Module ::= qualifiedName::String scopeName::String assembly::Assembly (types::Type)+ ;
GenericParameterAttributes ::= (HasElementType::ε) | (Abstract::ε) | (AnsiClass::ε) | (AutoClass::ε) | (AutoLayout::ε) | (ByRef::ε) | (Class::ε) | (COMObject::ε) | (Contextful::ε) | (Enum::ε) | (ExplicitLayout::ε) | (Import::ε) | (Interface::ε) | (LayoutSequential::ε) | (MarshalByRef::ε) | (NestedAssembly::ε) | (NestedFamADNAssem::ε) | (NestedFamily::ε) | (NestedFamORAssem::ε) | (NestedPrivate::ε) | (NestedPublic::ε) | (NotPublic::ε) | (Pointer::ε) | (Primitive::ε) | (Public::ε) | (Sealed::ε) | (Serializable::ε) | (SpecialName::ε) | (UnicodeClass::ε) | (ValueType::ε) ;
ConstructorInfo ::= (attributes::MethodAttributes)+ (parameters::ParameterInfo)+ ;
EventInfo ::= isMulticast::Boolean attributes::EventAttributes eventHandlerType::Type ;
FieldInfo ::= fieldType::Type (attributes::FieldAttributes)+ ;
MemberInfo ::= PropertyInfo ;
 MemberInfo ::= FieldInfo ;
 MemberInfo ::= EventInfo ;
 MemberInfo ::= MethodBase ;
 MemberInfo ::= Type ;
Boolean ::= "true" | "false" ;
Assembly ::= location::String imageRuntimeVersion::String evidence::String codeBase::String entryPoint::MethodInfo (modules::Module)+ manifestModule::Module (referencedAssembly::Assembly)+ manifest::ManifestResource ;
PropertyInfo ::= propertyType::Type (attributes::PropertyAttributes)+ ;
NamedElement ::= Assembly ;
 NamedElement ::= Module ;
 NamedElement ::= MemberInfo ;
 NamedElement ::= ParameterInfo ;
ParameterAttributes ::= (HasDefault::ε) | (HasDefaultMArshal::ε) | (In::ε) | (Lcid::ε) | (None::ε) | (Optional::ε) | (Out::ε) | (Reserved3::ε) | (Reserved4::ε) | (ReservedMask::ε) | (RetVal::ε) ;
--------------------metamodels::EAI.bgf--------------------
Integer ::= integer() ;
EAIResource ::= EAIQueue ;
FCMSource ::= EAISource ;
EAISource ::= (resources::EAIResource)+ ;
EAIQueue ::= maxLength::Integer name::String ;
FCMSink ::= EAISink ;
String ::= string() ;
EAISink ::= (resources::EAIResource)+ ;
--------------------metamodels::EG.bgf--------------------
Integer ::= integer() ;
Basic ::= (predecessor::Node)+ (successor::Node)+ executionGraph::ExecutionGraph (nested::ExecutionGraph)+ ;
Control ::= Branch ;
 Control ::= Loop ;
 Control ::= Fork ;
 Control ::= Join ;
 Control ::= Acquire ;
 Control ::= Release ;
 Control ::= Split ;
 Control ::= Branch | Loop | Fork | Join | Acquire | Release | Split ;
End ::= (predecessor::Node)+ (successor::Node)+ executionGraph::ExecutionGraph (nested::ExecutionGraph)+ ;
Split ::= ε ;
Join ::= ε ;
Boolean ::= "true" | "false" ;
Release ::= ε ;
Acquire ::= ε ;
ExecutionGraph ::= (node::Node)+ nodeNested::Node ;
Loop ::= ε ;
Fork ::= ε ;
Branch ::= ε ;
Start ::= (predecessor::Node)+ (successor::Node)+ executionGraph::ExecutionGraph (nested::ExecutionGraph)+ ;
Node ::= Start ;
 Node ::= End ;
 Node ::= Control ;
 Node ::= Basic ;
 Node ::= (predecessor::Node)+ (successor::Node)+ executionGraph::ExecutionGraph (nested::ExecutionGraph)+ ;
String ::= string() ;
--------------------metamodels::EQN.bgf--------------------
Integer ::= integer() ;
Allocate ::= ε ;
PassiveCenter ::= node::Node queuingNetwork::QueuingNetwork ;
Source ::= ε ;
ActiveCenter ::= node::Node queuingNetwork::QueuingNetwork ;
RoutingChain ::= (queuingNetwork::QueuingNetwork)+ ;
Split ::= ε ;
Special ::= Source ;
 Special ::= Sink ;
 Special ::= Fork ;
 Special ::= Join ;
 Special ::= Split ;
 Special ::= Allocate ;
 Special ::= Release ;
 Special ::= Source | Sink | Fork | Join | Split | Allocate | Release ;
ExecutionGraph ::= nodeNested::Node (node::Node)+ ;
Center ::= Special ;
 Center ::= ActiveCenter ;
 Center ::= PassiveCenter ;
 Center ::= node::Node queuingNetwork::QueuingNetwork ;
Sink ::= ε ;
String ::= string() ;
Join ::= ε ;
Boolean ::= "true" | "false" ;
Release ::= ε ;
Fork ::= ε ;
Node ::= nested::ExecutionGraph executionGraph::ExecutionGraph (demand::Center)+ ;
QueuingNetwork ::= (center::Center)+ workLoad::RoutingChain ;
--------------------metamodels::EXPRESS.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::EXPRESSb.bgf--------------------
CaseStatement ::= (cases::statements/CaseAction)+ selectionExpression::core/Expression ;
ReturnStatement ::= returnValue::core/Expression ;
PartialEntityType ::= (components::core/SingleEntityType)+ ;
AttributeCell ::= refersTo::core/ExplicitAttribute baseEntity::statements/VARExpression id::core/Identifier ;
BinaryType ::= binaryLengthConstraint::core/LengthConstraint ;
ListMember ::= memberValue::core/Instance position::mof/Integer ;
Function ::= result::algorithms/FunctionResult ;
LISTType ::= ε ;
IndeterminateRef ::= refersTo::instances/Indeterminate ;
RepeatStatement ::= whileExpression::core/Expression body::algorithms/Statement controlVariable::statements/ControlVariable untilExpression::core/Expression ;
ANDConstraint ::= ε ;
IntegerValue ::= ε ;
Assignment ::= assignedValue::core/Expression variable::statements/VARExpression ;
ScopedId ::= localName::core/Identifier definingScope::core/Scope ;
ExtentRef ::= refersTo::core/NamedType id::core/Identifier ;
LocalVariable ::= initialValue::core/Expression ;
InParameter ::= variable::algorithms/InVariable ;
InVariable ::= source::algorithms/InParameter ;
SizeConstraint ::= bound::mof/Integer ;
EntityType ::= (playsRole::core/Role)+ (redeclarations::core/Redeclaration)+ (attributes::core/Attribute)+ (playsRangeRole::core/RangeRole)+ declares::core/SingleEntityType (extension::rules/Extent)+ (invertibleAttributes::core/InvertibleAttribute)+ (playsDomainRole::core/DomainRole)+ (uniqueRules::core/UniqueRule)+ (usedIn::core/InvertibleAttribute)+ (subtypeOf::core/EntityType)+ isAbstract::mof/Boolean ;
EnumerationItem ::= declaredIn::core/EnumerationType position::mof/Integer ;
ControlVariable ::= boundValue::core/Expression initialValue::core/Expression increment::core/Expression ;
SubtypeConstraint ::= (constrainedSubtypes::rules/Extent)+ equivalentRule::core/Expression collection::rules/SupertypeRule ;
ActualBAGType ::= ε ;
GeneralSETType ::= ε ;
ActualDataType ::= ε ;
BinaryValue ::= ε ;
EscapeStatement ::= ε ;
MultiLeafInstance ::= ε ;
AliasVariable ::= referent::statements/VARExpression ;
GenericAggregate ::= ε ;
NumericType ::= ε ;
SingleEntityValue ::= equivalent::instances/PartialEntityValue ofType::core/SingleEntityType (properties::instances/AttributeValue)+ ;
ArrayBound ::= boundExpression::core/Expression bound::mof/Integer ;
Constant ::= valueExpression::core/Expression actualValue::core/Instance dataType::core/InstantiableType ;
AggregateInitializer ::= resultValue::instances/GenericAggregate (bindings::expressions/MemberBinding)+ ;
Schema ::= (documentation::core/Remark)+ (interfaces::core/InterfacedElement)+ (schemaElements::core/SchemaElement)+ (interfacedElements::core/SchemaElement)+ name::core/Identifier version::core/Identifier ;
StringValue ::= ε ;
GeneralLISTType ::= ε ;
EntityInstance ::= state::instances/EntityValue (instanceOf::core/EntityType)+ id::instances/EntityName ;
ARRAYValue ::= (memberSlot::instances/ArrayMember)+ ;
Expression ::= evaluation::core/Instance interpretationContext::core/Scope dataType::core/DataType text::core/ExpressText ;
PartialEntityConstructor ::= resultValue::instances/PartialEntityValue attributeGroup::core/SingleEntityType (bindings::expressions/AttributeBinding)+ id::core/Identifier ;
NamedRule ::= assertsExpression::core/Expression position::mof/Integer ;
GroupRef ::= refersTo::core/SingleEntityType id::core/Identifier ;
Procedure ::= ε ;
IfStatement ::= ifCondition::core/Expression elseActions::algorithms/Statement thenActions::algorithms/Statement ;
ProcedureCall ::= invokes::algorithms/Procedure (actualParameters::expressions/ActualParameter)+ ;
SupertypeRule ::= namedSupertype::core/EntityType (constraints::rules/SubtypeConstraint)+ assertsAbstract::mof/Boolean ;
ExplicitAttribute ::= isOptional::mof/Boolean ;
SELFRef ::= ε ;
ActualLISTType ::= ε ;
CaseAction ::= (labelValue::core/Expression)+ action::algorithms/Statement isDefault::mof/Boolean ;
BagMember ::= memberValue::core/Instance count::mof/Integer ;
Remark ::= (describesSchema::core/Schema)+ appearsIn::core/Scope (describesElement::core/NamedElement)+ isTagged::mof/Boolean isTail::mof/Boolean text::core/ExpressText ;
SETType ::= ε ;
SingleLeafInstance ::= characterizingType::core/EntityType ;
Indeterminate ::= ε ;
ActualParameter ::= inProcedureCall::statements/ProcedureCall inFunctionCall::expressions/FunctionCall formalParameter::algorithms/Parameter actualReferent::statements/VARExpression actualValue::core/Expression position::mof/Integer ;
LogicType ::= ε ;
GenericType ::= constraint::algorithms/ActualTypeConstraint isEntity::mof/Boolean ;
SkipStatement ::= ε ;
Literal ::= refersTo::instances/SimpleValue ;
UniqueRule ::= domain::core/EntityType (keyComponent::core/Attribute)+ position::mof/Integer ;
ActualAGGREGATEType ::= upperBound::core/SizeConstraint refersTo::algorithms/ActualStructure memberType::core/VariableType lowerBound::core/SizeConstraint label::core/Identifier ;
NumberValue ::= ε ;
NullStatement ::= ε ;
LengthConstraint ::= maxLength::mof/Integer isFixed::mof/Boolean ;
SpecializedType ::= underlyingType::core/ConcreteType ;
StatementBlock ::= (bodyStatements_Statement::algorithms/Statement)+ delimited::mof/Boolean ;
Coercion ::= operand::core/Expression targetType::core/VariableType ;
DomainRole ::= rangeView::core/InverseAttribute domain::core/EntityType id::core/ScopedId ;
GeneralBAGType ::= ε ;
AGGREGATEType ::= upperBound::core/SizeConstraint memberType::core/ParameterType constraint::algorithms/ActualStructureConstraint lowerBound::core/SizeConstraint ;
AttributeRef ::= refersTo::core/Attribute id::core/Identifier ;
SelectType ::= (allowedTypes::core/NamedType)+ (extension::core/SelectType)+ base::core/SelectType (selectList::core/NamedType)+ isExtensible::mof/Boolean isEntity::mof/Boolean ;
FunctionCall ::= (actualParameters::expressions/ActualParameter)+ invokesFunction::algorithms/Function returnsResult::algorithms/FunctionResult ;
LISTValue ::= (memberSlot::instances/ListMember)+ ;
AggregateIndex ::= indexValue::core/Expression ;
Population ::= (compositionEntityInstance::instances/EntityInstance)+ (compositionInstance::core/Instance)+ (governingSchema::core/Schema)+ ;
InverseAttribute ::= modelsRole::core/DomainRole explicit::core/InvertibleAttribute isUnique::mof/Boolean ;
MemberBinding ::= repetition::expressions/RepeatCount (toSlot::instances/ListMember)+ memberValue::core/Expression position::mof/Integer ;
BAGValue ::= (memberSlot::instances/BagMember)+ ;
AttributeBinding ::= attributeValue::core/Expression toValue::instances/AttributeValue attribute::core/ExplicitAttribute position::mof/Integer ;
ActualStructure ::= ε ;
VARParameter ::= ε ;
GroupCell ::= baseEntity::statements/VARExpression refersTo::core/SingleEntityType id::core/Identifier ;
QueryExpression ::= selectCondition::core/Expression queryVariable::expressions/QueryVariable aggregateOperand::core/Expression ;
GlobalRule ::= supportingBody::algorithms/Statement (constrainedExtents::rules/Extent)+ (containsRules::rules/NamedRule)+ ;
ONEOFConstraint ::= ε ;
Relationship ::= domain::core/DomainRole roles::core/Role basedOn::core/InvertibleAttribute range::core/RangeRole ;
VariableRef ::= refersTo::algorithms/NamedVariable id::core/Identifier ;
AttributeValue ::= actualValue::core/Instance attribute::core/ExplicitAttribute ;
RealValue ::= ε ;
UsedInRef ::= inverseOf::core/Attribute ;
SETValue ::= (memberValue::core/Instance)+ ;
Statement ::= inBlock::statements/StatementBlock (bodyStatementsSkipStatement::statements/SkipStatement)+ (bodyStatementsEscapeStatement::statements/EscapeStatement)+ controlledBy::statements/RepeatStatement implements::algorithms/Algorithm text::core/ExpressText ;
GeneralARRAYType ::= hiIndex::core/ArrayBound loIndex::core/ArrayBound isOptional::mof/Boolean ;
ParameterRef ::= refersTo::algorithms/Parameter id::core/Identifier ;
Extent ::= (constraints::rules/SubtypeConstraint)+ (content::instances/EntityInstance)+ withinPopulation::instances/Population (constraintRules::rules/GlobalRule)+ forType::core/EntityType id::core/ScopedId ;
BooleanValue ::= ε ;
SpecializedValue ::= fundamentalValue::instances/ConcreteValue ;
Redeclaration ::= derivation::core/Expression restrictedType::core/AttributeType refines::core/Redeclaration upperBound::core/SizeConstraint lowerBound::core/SizeConstraint scope::core/EntityType originalAttribute::core/Attribute refinedRole::core/Role position::mof/Integer isMandatory::mof/Boolean alias::core/ScopedId ;
BinaryOperation ::= leftOperand::core/Expression rightOperand::core/Expression operator::expressions/BinaryOperator ;
SingleEntityType ::= (declaresExplicitAttribute::core/ExplicitAttribute)+ (declaresAttribute::core/Attribute)+ declaredIn::core/EntityType equivalent::core/PartialEntityType id::core/ScopedId ;
QueryVariable ::= ε ;
BAGType ::= ε ;
RoleName ::= refersTo::core/Attribute represents::core/ScopedId ;
MemberCell ::= indexValue::core/Expression baseAggregate::statements/VARExpression ;
FunctionResult ::= ε ;
InvertibleAttribute ::= (inverse::core/InverseAttribute)+ (rangeType::core/EntityType)+ createsRelationship::core/Relationship (referencingType::core/EntityType)+ modelsRole::core/RangeRole ;
ArrayMember ::= memberValue::core/Instance index::mof/Integer ;
RangeRole ::= domainView::core/InvertibleAttribute range::core/EntityType id::core/ScopedId ;
String ::= string() ;
BinaryIndex ::= firstBit::core/Expression lastBit::core/Expression ;
ConstantRef ::= refersTo::instances/Constant id::core/Identifier ;
EntityValue ::= (correspondsTo::core/EntityType)+ (describes::instances/EntityInstance)+ ;
ActualSETType ::= ε ;
PartialEntityValue ::= (components::instances/SingleEntityValue)+ ;
ActualARRAYType ::= hiIndex::core/ArrayBound loIndex::core/ArrayBound isOptional::mof/Boolean ;
ActualGenericType ::= refersTo::algorithms/ActualDataType isEntity::mof/Boolean label::core/Identifier ;
ActualStructureConstraint ::= matchingStructure::core/AGGREGATEType requiredStructure::algorithms/ActualStructure label::core/Identifier ;
StringIndex ::= firstCode::core/Expression lastCode::core/Expression ;
DerivedAttribute ::= derivation::core/Expression ;
AliasStatement ::= bindsToReference::statements/VARExpression body::algorithms/Statement aliasVariable::statements/AliasVariable ;
EnumItemRef ::= refersTo::instances/EnumerationItem id::core/Identifier ;
VariableCell ::= refersTo::algorithms/Variable id::core/Identifier ;
Integer ::= integer() ;
RealType ::= precision::mof/Integer ;
UnaryOperation ::= unaryOperand::core/Expression operator::expressions/UnaryOperator ;
RepeatCount ::= derivation::core/Expression ;
ARRAYType ::= loIndex::core/ArrayBound hiIndex::core/ArrayBound isOptional::mof/Boolean ;
InterfacedElement ::= interfacingSchema::core/Schema refersTo::core/SchemaElement isUSE::mof/Boolean interfacedId::core/ScopedId ;
StringType ::= stringLengthConstraint::core/LengthConstraint ;
VARCell ::= refersTo::algorithms/VARVariable id::core/Identifier ;
Boolean ::= "true" | "false" ;
LogicalValue ::= ε ;
TypeName ::= refersTo::core/NamedType represents::core/ScopedId ;
ActualTypeConstraint ::= matchingType::core/GenericType requiredType::algorithms/ActualDataType label::core/Identifier ;
EnumerationType ::= (values::instances/EnumerationItem)+ (declaredItems::instances/EnumerationItem)+ (extension::core/EnumerationType)+ base::core/EnumerationType isExtensible::mof/Boolean ;
DomainRule ::= position::mof/Integer ;
--------------------metamodels::EclipseLaunchConfigurations.bgf--------------------
ListAttribute ::= (entries::ListEntry)+ ;
Attribute ::= StringAttribute ;
 Attribute ::= BooleanAttribute ;
 Attribute ::= MapAttribute ;
 Attribute ::= ListAttribute ;
StringAttribute ::= MapEntry ;
 StringAttribute ::= value::String ;
Boolean ::= "true" | "false" ;
MapEntry ::= mapAttribute::MapAttribute ;
ListEntry ::= listAttribute::ListAttribute value::String ;
BooleanAttribute ::= value::Boolean ;
LaunchConfiguration ::= type::String (attributes::Attribute)+ ;
String ::= string() ;
MapAttribute ::= (entries::MapEntry)+ ;
--------------------metamodels::EclipsePlugIn.bgf--------------------
Extension ::= name::String id::String isConfiguredInto::ExtensionPoint ;
Integer ::= integer() ;
Librairy ::= name::String plugIn::PlugIn (classes::Class)+ ;
Description ::= xmlSchema::String (extensionPoints::ExtensionPoint)+ ;
Class ::= name::String librairy::Librairy ;
PlugIn ::= id::String displayableName::String version::String supplier::String (configures::Extension)+ (extensionPoints::ExtensionPoint)+ (requires::PlugIn)+ (uses::Librairy)+ ;
String ::= string() ;
ExtensionPoint ::= name::String id::String application::Application (descriptions::Description)+ plugIn::PlugIn ;
Application ::= name::String version::String author::String (extensionPoints::ExtensionPoint)+ ;
--------------------metamodels::Family.bgf--------------------
Integer ::= integer() ;
Person ::= firstName::String closestFriend::Person (emailAddresses::String)+ ;
Family ::= name::String (members::Person)+ ;
String ::= string() ;
--------------------metamodels::FeatureDiagrams.bgf--------------------
Integer ::= integer() ;
ORGroup ::= preliminary::Boolean name::String (no_src::Node)+ (co_dst::Child)+ ;
Child ::= (cn_src::Node)+ (cx_src::XORGroup)+ (co_src::ORGroup)+ ;
Attribute ::= description::String editable::Boolean key::Boolean value::String name::String node::Node ;
Boolean ::= "true" | "false" ;
XORGroup ::= preliminary::Boolean name::String (nx_src::Node)+ (cx_dst::Child)+ ;
Root ::= description::String preliminary::Boolean object::String (attributes::Attribute)+ (no_dst::ORGroup)+ (nx_dst::XORGroup)+ (cn_dst::Child)+ ;
Node ::= Root ;
 Node ::= Child ;
 Node ::= description::String preliminary::Boolean object::String (attributes::Attribute)+ (no_dst::ORGroup)+ (nx_dst::XORGroup)+ (cn_dst::Child)+ ;
String ::= string() ;
--------------------metamodels::GAIA.bgf--------------------
AgentType ::= (provides::Service)+ collaborates::AgentType agentType::AgentType (plays::Role)+ ;
LivenessRule ::= ε ;
OrganizationalRule ::= SafetyRule ;
 OrganizationalRule ::= LivenessRule ;
 OrganizationalRule ::= SafetyRule | LivenessRule ;
Protocol ::= name::String initiator::String partner::String inputs::String outputs::String description::String ;
LivenessProperty ::= ε ;
Communication ::= (observes::OrganizationalRule)+ protocol::Protocol ;
Action ::= type::String ;
Role ::= (activity::Activity)+ (communication::Communication)+ (responsibility::Responsibility)+ actsOn::AssociationConnector ;
Service ::= inputs::String outputs::String pre-conditions::String post-conditions::String ;
OrganizationalStructure ::= (organization::Organization)+ ;
Organization ::= collaborates::Organization interacts::Organization (member::AgentType)+ (observes::OrganizationalRule)+ ;
String ::= string() ;
Activity ::= ε ;
Permission ::= association::AssociationConnector ;
Resource ::= name::String description::String (permitted_action::Action)+ environnement::Environnement ;
Responsibility ::= LivenessProperty ;
 Responsibility ::= SafetyProperty ;
 Responsibility ::= LivenessProperty | SafetyProperty ;
SafetyRule ::= ε ;
AssociationConnector ::= (actsOn::Resource)+ role::Role (permission::Permission)+ ;
Environnement ::= (resource::Resource)+ ;
SafetyProperty ::= ε ;
--------------------metamodels::FiniteStateMachine.bgf--------------------
Integer ::= integer() ;
StateMachine ::= rootFolder::RootFolder (state::State)+ (transition::Transition)+ ;
MgaObject ::= Transition ;
 MgaObject ::= State ;
 MgaObject ::= StateMachine ;
 MgaObject ::= name::String position::String ;
Transition ::= stateMachine::StateMachine associationStateState::AssociationStateState ;
String ::= string() ;
AssociationStateState ::= transition::Transition (dstTransition::State)+ (srcTransition::State)+ ;
State ::= stateMachine::StateMachine (associationStateStatedst::AssociationStateState)+ (associationStateStatesrc::AssociationStateState)+ ;
RootFolder ::= name::String (rootFolders::RootFolder)+ (stateMachine::StateMachine)+ ;
--------------------metamodels::FlatSignalFlow.bgf--------------------
Receiver ::= name::String position::String actor::Actor associationReceiverQueue::AssociationReceiverQueue ;
RootContainer ::= name::String position::String rootFolder::RootFolder (actor::Actor)+ (inputSignal::InputSignal)+ (outputSignal::OutputSignal)+ (queue::Queue)+ ;
Integer ::= integer() ;
OutputSignal ::= name::String position::String rootContainer::RootContainer associationQueueTransmitter::AssociationQueueTransmitter ;
Actor ::= memory::String script::String file::String WCET::String name::String position::String rootContainer::RootContainer (transmitter::Transmitter)+ (receiver::Receiver)+ ;
InputSignal ::= name::String position::String rootContainer::RootContainer associationReceiverQueue::AssociationReceiverQueue ;
String ::= string() ;
AssociationQueueTransmitter ::= (dstqueue::Queue)+ (srctransmitter::Transmitter)+ outputSignal::OutputSignal ;
AssociationReceiverQueue ::= (srcqueue::Queue)+ (dstreceiver::Receiver)+ inputSignal::InputSignal ;
Queue ::= name::String position::String rootContainer::RootContainer associationReceiverQueue::AssociationReceiverQueue associationQueueTransmitter::AssociationQueueTransmitter ;
Transmitter ::= name::String position::String actor::Actor associationQueueTransmitter::AssociationQueueTransmitter ;
RootFolder ::= (rootContainer::RootContainer)+ ;
--------------------metamodels::GUI.bgf--------------------
Group ::= title::String layout::Layout description::String tabGroup::Tab (composants::Composant)+ ;
Integer ::= integer() ;
ComboBox ::= (listRows::Row)+ ;
GUI ::= (guiTabs::Tab)+ ;
TextArea ::= text::String nbRows::Integer ;
Row ::= rowList::ComboBox text::String (listItems::Item)+ ;
Named ::= GUI ;
 Named ::= Tab ;
 Named ::= Composant ;
Column ::= title::String columnTab::Table ;
Tab ::= title::String gui::GUI group::Group ;
Label ::= text::String ;
Composant ::= Group ;
 Composant ::= Label ;
 Composant ::= TextArea ;
 Composant ::= Table ;
 Composant ::= ComboBox ;
 Composant ::= Row ;
 Composant ::= Item ;
 Composant ::= Button ;
Item ::= itemList::Row text::String ;
Button ::= title::String ;
String ::= string() ;
Table ::= (tabColumns::Column)+ ;
Layout ::= (default::ε) | (horizontal::ε) | (vertical::ε) ;
LocatedElement ::= Named ;
 LocatedElement ::= Column ;
Boolean ::= "true" | "false" ;
--------------------metamodels::GWPNV0.bgf--------------------
Net ::= (place::Place)+ (transition::Transition)+ ;
Place ::= net::Net (src::Transition)+ (dst::Transition)+ ;
Transition ::= net::Net (src::Place)+ (dst::Place)+ ;
--------------------metamodels::GWPNV1.bgf--------------------
Net ::= (place::Place)+ (transition::Transition)+ ;
Place ::= net::Net (src::Transition)+ (dst::Transition)+ ;
Transition ::= net::Net (src::Place)+ (dst::Place)+ ;
--------------------metamodels::GWPNV2.bgf--------------------
PTArc ::= dst::Transition src::Place ;
Net ::= (place::Place)+ (transition::Transition)+ ;
Place ::= net::Net (out::PTArc)+ (in::TPArc)+ ;
TPArc ::= src::Transition dst::Place ;
Transition ::= net::Net (in::PTArc)+ (out::TPArc)+ ;
--------------------metamodels::GWPNV3.bgf--------------------
PTArc ::= dst::Transition src::Place ;
Net ::= (place::Place)+ (transition::Transition)+ ;
Place ::= net::Net (out::PTArc)+ (in::TPArc)+ ;
TPArc ::= src::Transition dst::Place ;
Transition ::= net::Net (in::PTArc)+ (out::TPArc)+ ;
Arc ::= PTArc ;
 Arc ::= TPArc ;
--------------------metamodels::GWPNV4.bgf--------------------
Integer ::= integer() ;
PTArc ::= dst::α src::α ;
Net ::= (place::α)+ (transition::α)+ ;
Place ::= net::α (out::α)+ (in::α)+ ;
TPArc ::= src::α dst::α ;
Transition ::= net::α (in::α)+ (out::α)+ ;
Arc ::= PTArc ;
 Arc ::= TPArc ;
--------------------metamodels::GWPNV5.bgf--------------------
Integer ::= integer() ;
PTArc ::= dst::α src::α ;
Net ::= (place::α)+ (transition::α)+ ;
Token ::= place::α ;
Place ::= net::α (out::α)+ (in::α)+ (token::α)+ ;
TPArc ::= src::α dst::α ;
Transition ::= net::α (in::α)+ (out::α)+ ;
Arc ::= PTArc ;
 Arc ::= TPArc ;
--------------------metamodels::Gantt.bgf--------------------
Integer ::= integer() ;
Date ::= year::Integer month::Integer day::Integer ;
Tasks ::= color::String (tasks::Task)+ ;
Vacation ::= ε ;
Description ::= ε ;
Depend ::= id::String type::Integer difference::Integer hardness::String task::Task ;
Ressource ::= Id::String name::String fonction::String contact::String phone::String ;
Project ::= name::String company::String viewDate::Date viewIndex::Date ganttDividerLocation::Integer ressourceDividerLocation::Integer webLink::String tasks::Tasks (ressources::Ressource)+ (allocations::Allocation)+ ;
Boolean ::= "true" | "false" ;
Previous ::= ε ;
Task ::= id::String name::String meeting::Boolean color::String expand::Boolean complete::Integer duration::Integer priority::Integer start::Date (depends::Depend)+ ;
String ::= string() ;
Allocation ::= taskId::String ressourceId::String name::String function::String responsible::Boolean load::Integer ;
--------------------metamodels::GenericEditor.bgf--------------------
Font ::= font::String bold::Boolean italic::Boolean ;
Integer ::= integer() ;
GroupElement ::= indent::Indent (element::Element)+ ;
Block ::= blockbegin::String blockend::String ;
Editor ::= extension::String (abstractElements::AbstractElement)+ ;
Indent ::= retrait::String groupElementIndent::GroupElement ;
Element ::= element::String groupElement::GroupElement ;
AbstractElement ::= Block ;
 AbstractElement ::= GroupElement ;
LocatedElement ::= Editor ;
 LocatedElement ::= AbstractElement ;
 LocatedElement ::= Element ;
 LocatedElement ::= Format ;
 LocatedElement ::= Color ;
 LocatedElement ::= Font ;
 LocatedElement ::= Indent ;
Boolean ::= "true" | "false" ;
Format ::= color::Color font::Font ;
Color ::= red::Integer green::Integer blue::Integer ;
String ::= string() ;
--------------------metamodels::GenericOutline.bgf--------------------
Integer ::= integer() ;
Map ::= mapString::String ;
LocatedElement ::= Outline ;
 LocatedElement ::= Node ;
 LocatedElement ::= Label ;
 LocatedElement ::= LabelSuite ;
 LocatedElement ::= Map ;
Boolean ::= "true" | "false" ;
LabelSuite ::= label::String methodCall::String ;
Label ::= label::String methodCall::String (labelSuite::LabelSuite)+ ;
Node ::= name::String label::Label icon::String outline::Outline (mapping::Map)+ ;
Outline ::= extension::String (nodes::Node)+ ;
String ::= string() ;
--------------------metamodels::GeoTrans.bgf--------------------
Integer ::= integer() ;
Param ::= name::String param::Double geoTransfo::GeoTransfo ;
Boolean ::= "true" | "false" ;
GeoTransfos ::= name::String (transfos::GeoTransfo)+ ;
String ::= string() ;
GeoTransfo ::= name::String freeze::Boolean (subGeoTransfos::GeoTransfo)+ superGeoTransfo::GeoTransfo (params::Param)+ ;
--------------------metamodels::Grafcet.bgf--------------------
Connection ::= StepToTransition ;
 Connection ::= TransitionToStep ;
TransitionToStep ::= from::Transition to::Step ;
StepToTransition ::= from::Step to::Transition ;
Step ::= isInitial::Boolean isActive::Boolean action::String (incomingConnections::TransitionToStep)+ (outgoingConnections::StepToTransition)+ ;
Element ::= Step ;
 Element ::= Transition ;
LocatedElement ::= NamedElement ;
Boolean ::= "true" | "false" ;
Transition ::= condition::String (incomingConnections::StepToTransition)+ (outgoingConnections::TransitionToStep)+ ;
NamedElement ::= Grafcet ;
 NamedElement ::= Element ;
 NamedElement ::= Connection ;
Grafcet ::= (elements::Element)+ (connections::Connection)+ ;
String ::= string() ;
--------------------metamodels::HAL.bgf--------------------
MetaType ::= MetaArtType ;
 MetaType ::= MetaArtNoticeType ;
Ouvrage ::= urldoi::String edcom::String annee::String page::String ;
TheseType ::= These ;
Conference ::= urldoi::String titconf::String ville::String pays::String edcom::String annee::String page::String edsci::String serie::String ;
DepotsType ::= (depots::AbstractDepot)+ ;
FormatEnum ::= (PDF::ε) | (TEX::ε) | (DOC::ε) | (RTF::ε) | (TXT::ε) | (PS::ε) | (ANNEX::ε) ;
Notice ::= metaArtNotice::MetaArtNoticeType ;
Communication ::= urldoi::String titconf::String ville::String pays::String edcom::String annee::String page::String edsci::String serie::String ;
ArtJournal ::= urldoi::String journal::String volume::String page::String annee::String ;
ArtOuvrageType ::= ArtOuvrage ;
HAL ::= connexion::Connexion (contents::Entry)+ ;
String ::= string() ;
ArtRevue ::= urldoi::String journal::String volume::String page::String annee::String ;
AutreType ::= Autre ;
AbstractDepotType ::= DepotsType ;
 AbstractDepotType ::= WebLink ;
AffiliationType ::= (institution::String)+ (prive::String)+ (ecole::String)+ (universite::String)+ ;
BrevetType ::= Brevet ;
TamponType ::= id::String ;
Connexion ::= login::String password::String ;
MetaLab ::= id::String ;
ArticleRetro ::= dateRedaction::String fichiers::AbstractDepot ;
AutLabType ::= (auteurs::Auteur)+ (laboratoires::Laboratoire)+ ;
Workshop ::= urldoi::String titconf::String ville::String pays::String edcom::String annee::String page::String edsci::String serie::String ;
AbstractMetaLab ::= MetaLab ;
DateVisibleEnum ::= (15J::ε) | (1M::ε) | (3M::ε) | (1A::ε) | (2A::ε) | (JAMAIS::ε) ;
Server ::= ε ;
These ::= orgthe::String niveau::String defencedate::String directeur::String codirecteur::String ;
Auteur ::= nom::String prenom::String autrePrenom::String email::String urlPerso::String lab::Laboratoire ;
DepotWeb ::= format::FormatWebEnum ;
FormatWebEnum ::= (XML::ε) | (HTML::ε) | (HTM::ε) ;
Integer ::= integer() ;
ReferenceBiblioType ::= ArtRevueType ;
 ReferenceBiblioType ::= WorkshopType ;
 ReferenceBiblioType ::= ArtOuvrageType ;
 ReferenceBiblioType ::= OuvrageType ;
 ReferenceBiblioType ::= TheseType ;
 ReferenceBiblioType ::= BrevetType ;
 ReferenceBiblioType ::= AutreType ;
ArtOuvrage ::= urldoi::String titouv::String edcom::String annee::String edsci::String serie::String ;
MetaArtType ::= domain::String abstract::String referenceBiblio::ReferenceBiblioType ;
OuvrageType ::= Ouvrage ;
Article ::= ArticleRecent ;
 Article ::= ArticleRetro ;
Depot ::= format::FormatEnum ;
Autre ::= urldoi::String annee::String description::String ;
AbstractDepot ::= Depot ;
 AbstractDepot ::= DepotWeb ;
Entry ::= Article ;
 Entry ::= Notice ;
ArticleRecent ::= fichiers::DepotsType ;
Laboratoire ::= id::Integer metas::AbstractMetaLab ;
Brevet ::= datebrevet::String numbrevet::String page::String pays::String ;
MetaArtNoticeType ::= domain::String abstract::String referenceBiblio::ReferenceBiblioType ;
WebLink ::= identifiant::String server::Server ;
ArtRevueType ::= ArtRevue ;
 ArtRevueType ::= ArtJournal ;
Boolean ::= "true" | "false" ;
WorkshopType ::= Workshop ;
 WorkshopType ::= Communication ;
 WorkshopType ::= Conference ;
--------------------metamodels::HPROF.bgf--------------------
StackTraceElement ::= method::Method fileName::String line::Integer trace::Trace ;
Integer ::= integer() ;
Date ::= day::Day month::Month dayOfMonth::Integer hour::Integer minutes::Integer seconds::Integer year::Integer ;
Time ::= rank::Integer self::Double accum::Double count::Integer trace::Trace method::Method ;
Day ::= (Monday::ε) | (Tuesday::ε) | (Wednesday::ε) | (Thursday::ε) | (Friday::ε) | (Saturday::ε) | (Sunday::ε) ;
LocatedElement ::= Profile ;
 LocatedElement ::= Method ;
 LocatedElement ::= ThreadAction ;
 LocatedElement ::= Trace ;
 LocatedElement ::= StackTraceElement ;
 LocatedElement ::= Times ;
 LocatedElement ::= Time ;
 LocatedElement ::= Date ;
Profile ::= header::String (threadActions::ThreadAction)+ (traces::Trace)+ times::Times (methods::Method)+ ;
Boolean ::= "true" | "false" ;
ThreadStart ::= obj::Integer name::String group::String ;
Times ::= unit::String total::Integer date::Date (elements::Time)+ ;
Trace ::= id::Integer threadId::Integer (elements::StackTraceElement)+ (times::Time)+ ;
String ::= string() ;
ThreadEnd ::= id::Integer ;
Method ::= fullyQualifiedName::String (stackTraceElements::StackTraceElement)+ ;
Month ::= (January::ε) | (February::ε) | (March::ε) | (April::ε) | (May::ε) | (June::ε) | (July::ε) | (August::ε) | (September::ε) | (October::ε) | (November::ε) | (December::ε) ;
ThreadAction ::= ThreadStart ;
 ThreadAction ::= ThreadEnd ;
--------------------metamodels::HierarchicalSignalFlow.bgf--------------------
Integer ::= integer() ;
LocalPort ::= compound::Compound ;
InputPort ::= base::Base ;
Compound ::= (localPort::LocalPort)+ (base::Base)+ ;
Signal ::= base::Base asso_Port_Signal::Asso_Port_Signal ;
Primitive ::= compound::Compound (inputPort::InputPort)+ (outputPort::OutputPort)+ (signal::Signal)+ ;
OutputPort ::= base::Base ;
Base ::= Compound ;
 Base ::= Primitive ;
 Base ::= compound::Compound (inputPort::InputPort)+ (outputPort::OutputPort)+ (signal::Signal)+ ;
Port ::= InputPort ;
 Port ::= OutputPort ;
 Port ::= LocalPort ;
 Port ::= asso_Port_Signalsrc::Asso_Port_Signal asso_Port_Signaldst::Asso_Port_Signal ;
String ::= string() ;
--------------------metamodels::HierarchicalStateMachine.bgf--------------------
Integer ::= integer() ;
DataVar ::= (stateBase::StateBase)+ orState::OrState associationDataStateBase::AssociationDataStateBase ;
StateDateRelation ::= value::String color::String ;
AndState ::= (compoundState::CompoundState)+ ;
AssociationDataStateBase ::= stateDataRelation::StateDataRelation (dataVar::DataVar)+ (stateBase::StateBase)+ ;
StateDataRelation ::= value::String color::String orState::OrState associationDataStateBase1::AssociationDataStateBase ;
Transition ::= guard::String trigger::String action::String isSync::Boolean orState::OrState associationStateState::AssociationStateState ;
String ::= string() ;
State ::= orState::OrState ;
Init ::= orState::OrState ;
RootFolder ::= name::String (rootFolders::RootFolder)+ (orState::OrState)+ ;
OrState ::= rootFolder::RootFolder (state::State)+ init::Init (dataVar::DataVar)+ (stateDataRelation::StateDataRelation)+ (transition::Transition)+ (compoundState::CompoundState)+ ;
PrimitiveState ::= Init ;
 PrimitiveState ::= State ;
 PrimitiveState ::= StateDataRelation ;
 PrimitiveState ::= Init | State | StateDataRelation ;
Boolean ::= "true" | "false" ;
CompoundState ::= OrState ;
 CompoundState ::= AndState ;
 CompoundState ::= andState::AndState orState::OrState ;
MgaObject ::= StateBase ;
 MgaObject ::= DataVar ;
 MgaObject ::= Transition ;
 MgaObject ::= StateDateRelation ;
 MgaObject ::= name::String position::String ;
StateBase ::= CompoundState ;
 StateBase ::= PrimitiveState ;
 StateBase ::= defaultTransition::String marked::Boolean (associationStateStatedst::AssociationStateState)+ (associationStateStatesrc::AssociationStateState)+ (data::DataVar)+ associationDataStateBase::AssociationDataStateBase ;
AssociationStateState ::= transition::Transition (dstTransition::StateBase)+ (srcTransition::StateBase)+ ;
--------------------metamodels::HybridAutomata.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
FiniteTransition ::= trigger::String guard::String action::String ;
FiniteState ::= name::String position::String isInit::Boolean ;
String ::= string() ;
--------------------metamodels::IEEE1471ConceptualModel.bgf--------------------
ArchitecturalDescription ::= (identifiesS::Stakeholder)+ (identifiesC::Concern)+ (selects::Viewpoint)+ (organizedBy::View)+ (aggregates::Model)+ ;
System ::= (fulfils::Mission)+ inhabits::Environment hasAn::Architecture (has::Stakeholder)+ ;
Mission ::= name::String content::String ;
Element ::= IEEE1471Model ;
 Element ::= System ;
 Element ::= Mission ;
 Element ::= Environment ;
 Element ::= Architecture ;
 Element ::= Rationale ;
 Element ::= ArchitecturalDescription ;
 Element ::= View ;
 Element ::= Model ;
 Element ::= Stakeholder ;
 Element ::= Concern ;
 Element ::= Viewpoint ;
 Element ::= LibraryViewpoint ;
Viewpoint ::= hasSource::LibraryViewpoint (usedToCover::Concern)+ (establishesMethodsFor::Model)+ ;
Model ::= (participatesInV::View)+ participatesInAD::ArchitecturalDescription ;
Rationale ::= provides::ArchitecturalDescription ;
Stakeholder ::= (has::Concern)+ ;
View ::= conformsTo::Viewpoint (consitsOf::Model)+ ;
Architecture ::= describedBy::ArchitecturalDescription ;
Environment ::= influences::System ;
String ::= string() ;
LibraryViewpoint ::= name::String content::String ;
Concern ::= (isImportantTo::Stakeholder)+ ;
--------------------metamodels::IRL.bgf--------------------
UpdateAction ::= objValue::IRLExpressions/Expression ;
VariableDeclaration ::= varName::String (variableExp::IRLExpressions/VariableExpression)+ ;
OperationCallExpression ::= (arguments::IRLExpressions/Expression)+ operationName::String signature::String ;
LoopExpression ::= body::IRLExpressions/Expression (iterators::IRLExpressions/Iterator)+ ;
OperatorCallExpression ::= ε ;
IntegerType ::= ε ;
ImportDefinition ::= importDefinitionOwners::RuleSet dotStar::Boolean ;
RealExpression ::= realSymbol::Double ;
Definition ::= ImportDefinition ;
 Definition ::= PropertyDefinition ;
CreateAction ::= (insertArguments::IRLExpressions/Expression)+ ;
RuleAction ::= actionOwner::IRLRules/RuleDefinition ;
ClassType ::= ε ;
String ::= string() ;
ModifyAction ::= objValue::IRLExpressions/Expression (modifiedArguments::IRLExpressions/Expression)+ ;
IteratorExp ::= name::String ;
InvokeAction ::= invocation::IRLExpressions/Expression ;
StringExpression ::= stringSymbol::String ;
PropertyDefinition ::= propertyDefinitionOwner::RuleSet (ruleSetDeclarations::IRLDeclarations/RuleSetDeclaration)+ semicoloneOpt::Boolean ;
RuleSet ::= (importDefinitions::ImportDefinition)+ propertyDefinitions::IRLDeclarations/PropertyDefinition (rulesetElementDefinitions::IRLRules/RulesetElementDefinition)+ ;
Binding ::= bindingOwner::IRLRules/RuleDefinition (ruleVariable::IRLRules/RuleVariable)+ ;
NamedElement ::= ExtendedIdentifier ;
 NamedElement ::= RuleSet ;
 NamedElement ::= Type ;
 NamedElement ::= RulesetElementDefinition ;
BooleanType ::= ε ;
ExtendedIdentifier ::= parentIdentifier::ExtendedIdentifier extendedIdentifierOwner::Extended ;
DeleteAction ::= objValue::IRLExpressions/Expression ;
RuleCondition ::= conditionExpression::IRLExpressions/Expression ruleDefinitionCondition::IRLRules/RuleDefinition ;
Integer ::= integer() ;
Element ::= NamedElement ;
 Element ::= Extended ;
 Element ::= Typed ;
 Element ::= RuleSetDeclaration ;
 Element ::= Binding ;
 Element ::= RuleCondition ;
 Element ::= RuleAction ;
 Element ::= location::String (commentsBefore::String)+ (commentsAfter::String)+ ;
NavigationOrAttributeCallExpression ::= name::String ;
Extended ::= Definition ;
 Extended ::= ClassInstancesDeclaration ;
RealType ::= ε ;
IntegerExpression ::= integerSymbol::Integer ;
ClassInstancesDeclaration ::= extendedIdentifier::ExtendedIdentifier ;
VariableExpression ::= referredVariable::IRLDeclarations/VariableDeclaration name::String ;
RuleDefinition ::= binding::IRLRules/Binding condition::IRLRules/RuleCondition (actions::IRLRules/RuleAction)+ ;
Iterator ::= loopExpression::IRLExpressions/LoopExpression ;
StringType ::= ε ;
SimpleRuleVariable ::= ε ;
Boolean ::= "true" | "false" ;
PropertyDeclaration ::= ε ;
CollectionOperationRuleVariable ::= operationName::String collectWhere::IRLExpressions/Expression ;
BooleanExpression ::= booleanSymbol::Boolean ;
--------------------metamodels::IEEE1471ViewpointM2.bgf--------------------
Process ::= (methodology::Technique)+ ;
Mapping ::= input::Language ouput::Language ;
AnalysisMethod ::= analysis::Language ;
ModelOrganization ::= (techniques::Technique)+ guidance::Language ;
Rule ::= ModelOrganization ;
 Rule ::= (techniques::Technique)+ guidance::Language ;
ModellingRule ::= ε ;
Viewpoint ::= (source::ViewpointImport)+ (covers::Concern)+ (supplierDependency::ViewpointDependency)+ (clientDependency::ViewpointDependency)+ isImportTo::Stakeholder (architecturalConstruct::ArchitecturalConstruct)+ process::Process ;
ArchitecturalConstruct ::= Rule ;
 ArchitecturalConstruct ::= Language ;
 ArchitecturalConstruct ::= Mapping ;
 ArchitecturalConstruct ::= Pattern ;
 ArchitecturalConstruct ::= Rule | Language | Mapping | Pattern ;
Language ::= ε ;
ViewpointDependency ::= supplier::Viewpoint client::Viewpoint ;
Stakeholder ::= concerns::Concern ;
Pattern ::= ε ;
Technique ::= (methods::AnalysisMethod)+ (applies::Rule)+ ;
ViewpointImport ::= ε ;
Concern ::= ε ;
--------------------metamodels::IMSTransactionMessage.bgf--------------------
TDLangElement ::= ε ;
Integer ::= integer() ;
OIMAPrefixFormats ::= (opp_one::ε) | (opp_two::ε) ;
StateData ::= ε ;
Field ::= fieldContainer::ApplicationData ;
ApplicationData ::= (languageElements::TDLangElement)+ (fieldComponents::Field)+ ;
SecurityData ::= ε ;
IMSTransactionMessage ::= OIMAPrefixFormat::OIMAPrefixFormats standardFieldsFlag::Boolean OIMAPrefixComponent::OIMAPrefix standardFieldComponent::StandardFields messageComponent::ApplicationData ;
VariableLengthField ::= ε ;
Boolean ::= "true" | "false" ;
ControlData ::= ε ;
StandardFields ::= length::TwoByteField reservedField::TwoByteField transactionCode::VariableLengthField ;
TwoByteField ::= ε ;
UserData ::= ε ;
String ::= string() ;
OIMAPrefix ::= controlDataComponent::ControlData stateDataComponent::StateData securityDataComponent::SecurityData userDataComponent::UserData ;
--------------------metamodels::M.bgf--------------------
WhereExpression ::= type::Types/DerivedType (queryExpressions::Expressions/QueryExpression)+ ;
Integer ::= integer() ;
Collection ::= (qualifiers::String)+ identifier::String ;
InExpression ::= value::Expressions/ValueExpression collection::Expressions/CollectionExpression ;
MElementReference ::= alias::String referencedElement::MElement ;
ExportDirective ::= module::Module (exportedElements::ModuleMember)+ ;
Field ::= owner::Types/DerivedType type::Types/TypeReference ;
NumericalValue ::= IntegerValue ;
 NumericalValue ::= DecimalValue ;
Language ::= module::Module ;
InitializationExpression ::= type::Types/DerivedType (values::Value)+ ;
DerivedType ::= (supertypes::Types/TypeReference)+ (fields::Types/Field)+ initializationExpression::Expressions/InitializationExpression whereExpression::Expressions/WhereExpression expression::Expressions/Expression ;
CollectionExpression ::= inExpression::Expressions/InExpression collectionValue::Expressions/ValueExpression ;
IdentityExpression ::= identity::Types/Field ;
DerivedTypeReference ::= type::Types/DerivedType ;
IntegerValue ::= value::Integer ;
String ::= string() ;
Value ::= NumericalValue ;
 Value ::= StringValue ;
 Value ::= BooleanValue ;
TypeReference ::= subtype::Types/DerivedType field::Types/Field lowerBound::Integer upperBound::Integer ;
MElement ::= Module ;
 MElement ::= ModuleMember ;
StandardValueExpression ::= context::Expressions/ValueExpression value::String ;
EqualExpression ::= leftValue::Expressions/ValueExpression rightValue::Expressions/ValueExpression ;
Module ::= (imports::ImportDirective)+ (exports::ExportDirective)+ (moduleMembers::ModuleMember)+ ;
IntrinsicTypeReference ::= typeIdentifier::String ;
ImportDirective ::= module::Module (importedElements::MElementReference)+ ;
BooleanValue ::= value::Boolean ;
Boolean ::= "true" | "false" ;
DefaultValueExpression ::= ε ;
ModuleMember ::= DerivedType ;
 ModuleMember ::= Language ;
 ModuleMember ::= Entity ;
ComputedValue ::= (qualifiers::String)+ identifier::String ;
Entity ::= module::Module ;
IdentifiedElement ::= MElement ;
 IdentifiedElement ::= Field ;
 IdentifiedElement ::= Collection ;
 IdentifiedElement ::= ComputedValue ;
DecimalValue ::= value::Double ;
StringValue ::= value::String ;
--------------------metamodels::Jess.bgf--------------------
ExitExp ::= ε ;
FactDefinition ::= factName::ValidIdentifier documentation::Str (fact::Expression)+ ;
ModuleDefinition ::= moduleName::ValidIdentifier documentation::Str ;
DeclareVar ::= (var::JessVariable)+ node::Expression max::Expression ;
VarDefinition ::= jessVar::JessVariable eq::ValidIdentifier expression::Expression ;
Floa ::= val::Double ;
Expression ::= Integ ;
 Expression ::= Floa ;
 Expression ::= Str ;
 Expression ::= Ident ;
 Expression ::= TemplateExpression ;
 Expression ::= DefinitionExp ;
 Expression ::= UseFuncExp ;
GlobalDefinition ::= (varDef::VarDefinition)+ ;
IfExpression ::= ifthen::ConditionAction (elifthen::ElifConditionAction)+ (else::Expression)+ ;
ForExp ::= initializer::Expression condition::Expression increment::Expression (expressions::Expression)+ ;
String ::= string() ;
Integ ::= val::Integer ;
ElifConditionAction ::= condAct::ConditionAction ;
FunctionDefinition ::= funcName::ValidIdentifier (parameters::JessVariable)+ (expressions::Expression)+ ;
DefinitionExp ::= GlobalDefinition ;
 DefinitionExp ::= FunctionDefinition ;
 DefinitionExp ::= AdviceDefinition ;
 DefinitionExp ::= UnDefAdvice ;
 DefinitionExp ::= FactDefinition ;
 DefinitionExp ::= RuleDefinition ;
 DefinitionExp ::= ModuleDefinition ;
 DefinitionExp ::= QueryDefinition ;
 DefinitionExp ::= TemplateDefinition ;
LocatedElement ::= Root ;
 LocatedElement ::= Expression ;
 LocatedElement ::= SlotOp ;
 LocatedElement ::= VarDefinition ;
 LocatedElement ::= DeclareRule ;
 LocatedElement ::= DeclareVar ;
 LocatedElement ::= DeclareBloc ;
 LocatedElement ::= ASlotDef ;
 LocatedElement ::= SlotOptions ;
 LocatedElement ::= ConditionAction ;
 LocatedElement ::= ElifConditionAction ;
ASlotDef ::= SlotDef ;
 ASlotDef ::= MultiSlotDef ;
 ASlotDef ::= slotName::SlotName (optionals::SlotOptions)+ ;
DeclareRule ::= salience::Expression nodeIndexHash::Expression autoFocus::ValidIdentifier noLoop::ValidIdentifier ;
ValidIdentifier ::= val::String ;
UnDefAdvice ::= op::Expression ;
FuncCall ::= funcName::ValidIdentifier (funcParam::Expression)+ ;
SlotOptions ::= type::ValidIdentifier def::Expression defaultDyn::Expression (allowedValues::Expression)+ ;
SlotOp ::= slotIdent::SlotName operator::ValidIdentifier exp::Expression ;
Integer ::= integer() ;
EngineExp ::= ε ;
QueryDefinition ::= queryName::ValidIdentifier documentation::Str declare::DeclareVar (expressions::Expression)+ ;
Advice ::= (before::ε) | (after::ε) ;
JessVariable ::= val::String ;
ForeachExp ::= var::JessVariable list::Expression (expressions::Expression)+ ;
UseFuncExp ::= WhileExp ;
 UseFuncExp ::= ForExp ;
 UseFuncExp ::= ForeachExp ;
 UseFuncExp ::= FuncCall ;
 UseFuncExp ::= EngineExp ;
 UseFuncExp ::= ExitExp ;
 UseFuncExp ::= IfExpression ;
TemplateExpression ::= templateName::ValidIdentifier firstSlot::SlotOp (slotOp::SlotOp)+ ;
ConditionAction ::= condition::Expression (actions::Expression)+ ;
Str ::= val::String ;
Ident ::= ValidIdentifier ;
 Ident ::= SlotName ;
 Ident ::= JessVariable ;
RuleDefinition ::= ruleName::ValidIdentifier documentation::Str declare::DeclareRule (conditions::Expression)+ (functionCall::UseFuncExp)+ ;
MultiSlotDef ::= slotName::SlotName (optionals::SlotOptions)+ ;
TemplateDefinition ::= templateName::ValidIdentifier (inherits::ValidIdentifier)+ documentation::Str declareBloc::DeclareBloc (slotDef::ASlotDef)+ ;
WhileExp ::= hasDo::Boolean boolExp::Expression (actions::Expression)+ ;
AdviceDefinition ::= direction::Advice op::Ident (advice::Expression)+ ;
SlotName ::= val::String ;
Boolean ::= "true" | "false" ;
DeclareBloc ::= slotSpecific::ValidIdentifier backchainReaction::ValidIdentifier fromClass::ValidIdentifier includeVariable::ValidIdentifier order::ValidIdentifier ;
SlotDef ::= slotName::SlotName (optionals::SlotOptions)+ ;
Root ::= (expressions::Expression)+ ;
--------------------metamodels::KDM.bgf--------------------
TypeUnit ::= ε ;
ExceptionFlow ::= to::action/ActionElement from::action/ActionElement ;
TrueFlow ::= ε ;
EnumeratedType ::= (value::code/Value)+ ;
Catalog ::= ε ;
DataResource ::= ε ;
RangeType ::= lower::core/Integer upper::core/Integer ;
LinksTo ::= to::build/AbstractBuildElement from::build/SymbolicLink ;
ConceptualModel ::= (conceptualElement::conceptual/AbstractConceptualElement)+ ;
SymbolicLink ::= ε ;
Supplier ::= ε ;
UIAction ::= kind::core/String (UIElement::ui/UIEvent)+ ;
IndexElement ::= (implementation::code/ItemUnit)+ ;
RuntimeResource ::= ε ;
ParameterTo ::= to::code/CodeItem from::code/AbstractCodeElement ;
UIFlow ::= to::ui/AbstractUIElement from::ui/AbstractUIElement ;
OctetstringType ::= ε ;
DataContainer ::= (dataElement::data/DataResource)+ ;
EventRelationship ::= to::core/KDMEntity from::event/AbstractEventElement ;
DataElement ::= type::code/Datatype ext::core/String size::core/Integer (codeElement::code/Datatype)+ ;
Implements ::= to::code/CodeItem from::code/CodeItem ;
CharType ::= ε ;
Requires ::= to::platform/AbstractPlatformElement from::platform/DeployedComponent ;
StreamResource ::= ε ;
InitialState ::= ε ;
DisplaysImage ::= to::source/Image from::action/ActionElement ;
FileResource ::= ε ;
UIElement ::= ε ;
RelationalSchema ::= (codeElement::code/CodeItem)+ ;
PlatformEvent ::= kind::core/String ;
BitType ::= ε ;
TimeType ::= ε ;
CompilationUnit ::= ε ;
ActionElement ::= kind::core/String (codeElement::code/AbstractCodeElement)+ (actionRelation::action/AbstractActionRelationship)+ ;
ConceptualElement ::= ε ;
VariantTo ::= to::code/PreprocessorDirective from::code/PreprocessorDirective ;
TryUnit ::= ε ;
OnExit ::= ε ;
ManagesResource ::= to::platform/ResourceType from::action/ActionElement ;
Audit ::= description::core/String author::core/String date::core/String ;
GeneratedFrom ::= to::code/PreprocessorDirective from::code/AbstractCodeElement ;
AllContent ::= ε ;
Tool ::= ε ;
DeployedComponent ::= (groupedCode::code/Module)+ ;
SynonymType ::= ε ;
Calls ::= to::code/ControlElement from::action/ActionElement ;
OnEntry ::= ε ;
ContentRestriction ::= kind::core/String value::core/String ;
Produces ::= to::build/AbstractBuildElement from::build/BuildStep ;
ActionRelationship ::= to::core/KDMEntity from::action/ActionElement ;
SharedUnit ::= ε ;
DependsOn ::= to::source/AbstractInventoryElement from::source/AbstractInventoryElement ;
BuildRelationship ::= to::core/KDMEntity from::build/AbstractBuildElement ;
PreprocessorDirective ::= (codeElement::code/AbstractCodeElement)+ ;
BitstringType ::= ε ;
StructureModel ::= (structureElement::structure/AbstractStructureElement)+ ;
FloatType ::= ε ;
InventoryRelationship ::= to::core/KDMEntity from::source/AbstractInventoryElement ;
BlockUnit ::= ε ;
ValueList ::= (valueElement::code/ValueElement)+ ;
UIDisplay ::= ε ;
RecordFile ::= ε ;
ExitFlow ::= to::action/ActionElement from::action/ActionElement ;
OctetType ::= ε ;
ExportKind ::= (private::ε) | (unknown::ε) | (public::ε) | (protected::ε) | (final::ε) ;
FinallyUnit ::= ε ;
SupportedBy ::= to::build/Tool from::build/BuildStep ;
Addresses ::= to::code/ComputationalObject from::action/ActionElement ;
DataModel ::= (dataElement::data/AbstractDataElement)+ ;
AggregatedRelationship ::= from::core/KDMEntity to::core/KDMEntity (relation::core/KDMRelationship)+ density::core/Integer ;
Reads ::= to::code/DataElement from::action/ActionElement ;
BuildModel ::= (buildElement::build/AbstractBuildElement)+ ;
ChoiceContent ::= ε ;
IntegerType ::= ε ;
Transition ::= ε ;
InstanceOf ::= to::code/TemplateUnit from::code/AbstractCodeElement ;
TaggedRef ::= reference::core/ModelElement ;
ConceptualFlow ::= to::conceptual/ConceptualContainer from::conceptual/ConceptualContainer ;
BooleanType ::= ε ;
MacroKind ::= (external::ε) | (unknown::ε) | (option::ε) | (undefined::ε) | (regular::ε) ;
NamespaceUnit ::= (groupedCode::code/CodeItem)+ ;
MemberUnit ::= export::code/ExportKind ;
KeyRelation ::= to::data/UniqueKey from::data/ReferenceKey ;
ItemUnit ::= ε ;
IndexUnit ::= ε ;
Report ::= ε ;
ScenarioUnit ::= ε ;
Stereotype ::= (tag::kdm/TagDefinition)+ name::core/String type::core/String ;
Value ::= ε ;
EventAction ::= kind::core/String (eventElement::event/Event)+ ;
MacroUnit ::= kind::code/MacroKind ;
Annotation ::= text::core/String ;
Imports ::= to::code/CodeItem from::code/CodeItem ;
Flow ::= ε ;
InventoryModel ::= (inventoryElement::source/AbstractInventoryElement)+ ;
RecordType ::= ε ;
ConceptualContainer ::= (conceptualElement::conceptual/AbstractConceptualElement)+ ;
ImplementationOf ::= to::code/CodeItem from::code/CodeItem ;
UsesType ::= to::code/Datatype from::action/ActionElement ;
TaggedValue ::= value::core/String ;
BagType ::= size::core/Integer ;
NextState ::= to::event/State from::event/Transition ;
TemplateUnit ::= (codeElement::code/CodeItem)+ ;
BinaryFile ::= ε ;
Image ::= ε ;
SeqContent ::= ε ;
ReferenceKey ::= ε ;
GuardedFlow ::= ε ;
Layer ::= ε ;
StructureRelationship ::= to::core/KDMEntity from::structure/AbstractStructureElement ;
OrdinalType ::= ε ;
ExecutionResource ::= ε ;
DataRelationship ::= to::core/KDMEntity from::data/AbstractDataElement ;
EventElement ::= ε ;
Integer ::= integer() ;
LanguageUnit ::= ε ;
CodeModel ::= (codeElement::code/AbstractCodeElement)+ ;
GroupContent ::= ε ;
VisibleIn ::= to::code/CodeItem from::code/CodeItem ;
HasValue ::= to::code/CodeItem from::code/CodeItem ;
BehaviorUnit ::= ε ;
ReadsState ::= to::event/State from::action/ActionElement ;
Segment ::= (segment::kdm/Segment)+ (model::kdm/KDMModel)+ ;
CodeAssembly ::= ε ;
ArrayType ::= size::core/Integer indexUnit::code/IndexUnit ;
MessagingResource ::= ε ;
DescribedBy ::= to::build/BuildDescription from::build/BuildStep ;
SourceRegion ::= file::source/SourceFile startLine::core/Integer startPosition::core/Integer endLine::core/Integer endPosition::core/Integer language::core/String path::core/String ;
VoidType ::= ε ;
ContentItem ::= type::data/ComplexContentType (contentElement::data/AbstractContentElement)+ ;
ColumnSet ::= (itemUnit::code/ItemUnit)+ ;
StringType ::= ε ;
ExecutableFile ::= ε ;
ReferenceTo ::= to::data/ContentItem from::data/ContentItem ;
ControlElement ::= type::code/Datatype (entryFlow::action/EntryFlow)+ (codeElement::code/AbstractCodeElement)+ ;
ClassUnit ::= isAbstract::core/Boolean (codeElement::code/CodeItem)+ ;
MarshalledResource ::= ε ;
DatatypeOf ::= to::code/Datatype from::data/ComplexContentType ;
ExtensionTo ::= to::data/ComplexContentType from::data/ComplexContentType ;
Project ::= ε ;
Expands ::= to::code/PreprocessorDirective from::code/PreprocessorDirective ;
WritesColumnSet ::= to::data/ColumnSet from::action/ActionElement ;
PointerType ::= ε ;
UIModel ::= (UIElement::ui/AbstractUIElement)+ ;
TemplateType ::= ε ;
ContentReference ::= ε ;
DataEvent ::= kind::core/String ;
ResourceDescription ::= ε ;
UIRelationship ::= to::core/KDMEntity from::ui/AbstractUIElement ;
Includes ::= to::code/AbstractCodeElement from::code/PreprocessorDirective ;
PlatformElement ::= ε ;
CodeRelationship ::= to::core/KDMEntity from::code/CodeItem ;
UILayout ::= to::ui/UIResource from::ui/UIResource ;
Component ::= ε ;
ExtendedDataElement ::= ε ;
DerivedType ::= itemUnit::code/ItemUnit ;
Creates ::= to::code/Datatype from::action/ActionElement ;
SoftwareSystem ::= ε ;
NamingResource ::= ε ;
Configuration ::= ε ;
SuppliedBy ::= to::build/Supplier from::build/AbstractBuildElement ;
ScaledType ::= ε ;
HasType ::= to::code/Datatype from::code/CodeItem ;
ReadsUI ::= to::ui/UIResource from::action/ActionElement ;
BindsTo ::= to::platform/ResourceType from::platform/ResourceType ;
FalseFlow ::= ε ;
EventModel ::= (eventElement::event/AbstractEventElement)+ ;
BuildDescription ::= (source::source/SourceRef)+ text::core/String ;
BuildElement ::= ε ;
ExternalActor ::= ε ;
Dispatches ::= to::code/DataElement from::action/ActionElement ;
RelationalTable ::= ε ;
UIField ::= ε ;
ConsumesEvent ::= to::event/Event from::event/Transition ;
UIResource ::= (UIElement::ui/AbstractUIElement)+ ;
WritesResource ::= to::platform/ResourceType from::action/ActionElement ;
BuildProduct ::= ε ;
RuleUnit ::= ε ;
CatchUnit ::= ε ;
ParameterKind ::= (byReference::ε) | (unknown::ε) | (exception::ε) | (return::ε) | (byValue::ε) | (catchall::ε) | (byName::ε) | (throws::ε) | (variadic::ε) ;
SequenceType ::= size::core/Integer ;
ArchitectureView ::= ε ;
CompliesTo ::= to::code/CodeItem from::action/ActionElement ;
Index ::= ε ;
ConceptualRole ::= conceptualElement::conceptual/AbstractConceptualElement ;
UniqueKey ::= ε ;
ParameterUnit ::= kind::code/ParameterKind pos::core/Integer ;
ReadsResource ::= to::platform/ResourceType from::action/ActionElement ;
PlatformAction ::= kind::core/String (platformElement::platform/PlatformEvent)+ ;
EventResource ::= (eventElement::event/AbstractEventElement)+ ;
ProducesEvent ::= to::event/Event from::action/ActionElement ;
IncludeDirective ::= ε ;
InventoryContainer ::= (inventoryElement::source/AbstractInventoryElement)+ ;
RestrictionOf ::= to::data/ComplexContentType from::data/ComplexContentType ;
ComplexContentType ::= (contentElement::data/AbstractContentElement)+ ;
ManagesUI ::= to::ui/UIResource from::action/ActionElement ;
PrimitiveType ::= ε ;
DataAction ::= kind::core/String (implementation::action/ActionElement)+ (dataElement::data/DataEvent)+ ;
EntryFlow ::= to::action/ActionElement from::code/ControlElement ;
HasContent ::= to::data/AbstractDataElement from::action/ActionElement ;
ProducesDataEvent ::= to::data/DataEvent from::action/ActionElement ;
SetType ::= size::core/Integer ;
ChoiceType ::= ε ;
Library ::= ε ;
Signature ::= (parameterUnit::code/ParameterUnit)+ ;
Writes ::= to::code/DataElement from::action/ActionElement ;
Screen ::= ε ;
Module ::= (codeElement::code/AbstractCodeElement)+ ;
CallableKind ::= (external::ε) | (regular::ε) | (stored::ε) | (operator::ε) | (unknown::ε) ;
RelationalView ::= ε ;
ConditionalDirective ::= ε ;
ResourceType ::= (platformElement::platform/AbstractPlatformElement)+ ;
DataManager ::= ε ;
Attribute ::= tag::core/String value::core/String ;
BuildResource ::= (implementation::core/KDMEntity)+ (groupedBuild::build/AbstractBuildElement)+ (buildElement::build/AbstractBuildElement)+ ;
CallableUnit ::= kind::code/CallableKind ;
Event ::= kind::core/String ;
LockResource ::= ε ;
Extends ::= to::code/Datatype from::code/Datatype ;
XMLSchema ::= (contentElement::data/AbstractContentElement)+ ;
Spawns ::= to::platform/RuntimeResource from::action/ActionElement ;
State ::= ε ;
ConceptualRelationship ::= to::core/KDMEntity from::conceptual/AbstractConceptualElement ;
InventoryItem ::= version::core/String path::core/String ;
TagDefinition ::= tag::core/String type::core/String ;
Throws ::= to::code/DataElement from::action/ActionElement ;
PlatformRelationship ::= to::core/KDMEntity from::platform/AbstractPlatformElement ;
UIEvent ::= kind::core/String ;
Redefines ::= to::code/PreprocessorDirective from::code/PreprocessorDirective ;
ExtensionFamily ::= (stereotype::kdm/Stereotype)+ name::core/String ;
ContentElement ::= ε ;
CommentUnit ::= text::core/String ;
SourceRef ::= (region::source/SourceRegion)+ language::core/String snippet::core/String ;
ManagesData ::= to::data/AbstractDataElement from::action/ActionElement ;
SourceFile ::= language::core/String encoding::core/String ;
PlatformModel ::= (platformElement::platform/AbstractPlatformElement)+ ;
ExceptionUnit ::= ε ;
Subsystem ::= ε ;
Process ::= ε ;
BuildComponent ::= ε ;
Directory ::= path::core/String ;
ContentAttribute ::= ε ;
TypedBy ::= to::data/ComplexContentType from::data/ContentItem ;
CompositeType ::= (itemUnit::code/ItemUnit)+ ;
InterfaceUnit ::= (codeElement::code/CodeItem)+ ;
DeployedSoftwareSystem ::= (groupedComponent::platform/DeployedComponent)+ ;
BuildStep ::= ε ;
HasState ::= to::event/AbstractEventElement from::action/ActionElement ;
MethodKind ::= (operator::ε) | (destructor::ε) | (method::ε) | (abstract::ε) | (virtual::ε) | (unknown::ε) | (constructor::ε) ;
StorableKind ::= (global::ε) | (external::ε) | (static::ε) | (unknown::ε) | (register::ε) | (local::ε) ;
String ::= string() ;
FactUnit ::= ε ;
TermUnit ::= ε ;
ReadsColumnSet ::= to::data/ColumnSet from::action/ActionElement ;
CodeElement ::= ε ;
TemplateParameter ::= ε ;
Loads ::= to::platform/DeployedComponent from::action/ActionElement ;
Thread ::= ε ;
StructureElement ::= ε ;
WritesUI ::= to::ui/UIResource from::action/ActionElement ;
DateType ::= ε ;
Machine ::= (deployedComponent::platform/DeployedComponent)+ (deployedResource::platform/DeployedResource)+ ;
Package ::= ε ;
MethodUnit ::= kind::code/MethodKind export::code/ExportKind ;
StorableUnit ::= kind::code/StorableKind ;
SimpleContentType ::= (type::data/ComplexContentType)+ kind::core/String ;
DefinedBy ::= to::code/CodeItem from::action/ActionElement ;
InventoryElement ::= ε ;
MixedContent ::= ε ;
Consumes ::= to::build/AbstractBuildElement from::build/BuildStep ;
DeployedResource ::= (platformElement::platform/ResourceType)+ ;
Displays ::= to::ui/UIResource from::action/ActionElement ;
DecimalType ::= ε ;
ControlFlow ::= to::action/ActionElement from::action/ActionElement ;
DataSegment ::= ε ;
Boolean ::= "true" | "false" ;
MacroDirective ::= ε ;
--------------------metamodels::KDMSimplified.bgf--------------------
KDMExtensionFamily ::= name::String (stereotype::Stereotype)+ ;
Annotation ::= note::String ;
Integer ::= integer() ;
TagDefinition ::= tag::String type::String ;
Attribute ::= tag::String value::String ;
Element ::= ModelElement ;
 Element ::= Annotation ;
 Element ::= Attribute ;
 Element ::= KDMExtensionFamily ;
 Element ::= Stereotype ;
 Element ::= TagDefinition ;
 Element ::= TaggedValue ;
 Element ::= KDMFramework ;
KDMFramework ::= KDMModel ;
Boolean ::= "true" | "false" ;
KDMEntity ::= KDMContainer ;
 KDMEntity ::= KDMGroup ;
TaggedValue ::= value::String tag::TagDefinition ;
ModelElement ::= KDMEntity ;
 ModelElement ::= KDMRelationship ;
Stereotype ::= baseClass::String name::String family::KDMExtensionFamily extendedElement::ModelElement (tag::TagDefinition)+ ;
String ::= string() ;
--------------------metamodels::KM3.bgf--------------------
EnumLiteral ::= name::String package::Package ;
Integer ::= integer() ;
Attribute ::= lower::Integer upper::Integer isOrdered::Boolean isUnique::Boolean owner::Class type::Classifier ;
Reference ::= isContainer::Boolean opposite::Reference ;
LocatedElement ::= ModelElement ;
 LocatedElement ::= Metamodel ;
StructuralFeature ::= Attribute ;
 StructuralFeature ::= Reference ;
 StructuralFeature ::= lower::Integer upper::Integer isOrdered::Boolean isUnique::Boolean owner::Class type::Classifier ;
Class ::= isAbstract::Boolean (supertypes::Class)+ (structuralFeatures::StructuralFeature)+ ;
Boolean ::= "true" | "false" ;
Enumeration ::= (literals::EnumLiteral)+ ;
Package ::= (contents::ModelElement)+ metamodel::Metamodel ;
Metamodel ::= (contents::Package)+ ;
DataType ::= ε ;
ModelElement ::= Classifier ;
 ModelElement ::= EnumLiteral ;
 ModelElement ::= StructuralFeature ;
 ModelElement ::= Package ;
Classifier ::= DataType ;
 Classifier ::= Enumeration ;
 Classifier ::= Class ;
 Classifier ::= DataType | Enumeration | Class ;
String ::= string() ;
--------------------metamodels::Klaper.bgf--------------------
ActualParam ::= value::String serviceCall::ServiceCall ;
Integer ::= integer() ;
Control ::= Branch ;
 Control ::= Fork ;
 Control ::= Join ;
 Control ::= Acquire ;
 Control ::= Release ;
 Control ::= Branch | Fork | Join | Acquire | Release ;
End ::= name::String repetition::String internalExecTime::String internalFailProb::String completionModel::String (serviceCall::ServiceCall)+ (predecessor::Step)+ (successor::Step)+ behavior::Behavior nestedBehavior::Behavior ;
WorkLoad ::= workLoadType::String arrivalProcess::String population::String initialResource::String behavior::Behavior ;
Acquire ::= resourceUnits::String resource::Resource ;
Service ::= name::String formalParams::String speedAttr::String failAttr::String description::String (behavior::Behavior)+ (behaviorUsed::Behavior)+ (serviceCall::ServiceCall)+ ;
ServiceCall ::= resourceType::String serviceName::String isSynch::Boolean (actualParam::ActualParam)+ step::Step calledService::Service ;
Behavior ::= Step ;
 Behavior ::= stepn::Step (stepb::Step)+ service::Service (usedService::Service)+ workLoad::WorkLoad ;
String ::= string() ;
Resource ::= name::String type::String capacity::Integer schedulingPolicy::String description::String acquire::Acquire release::Release ;
InternalActivity ::= name::String repetition::String internalExecTime::String internalFailProb::String completionModel::String (serviceCall::ServiceCall)+ (predecessor::Step)+ (successor::Step)+ behavior::Behavior nestedBehavior::Behavior ;
Step ::= Start ;
 Step ::= End ;
 Step ::= Control ;
 Step ::= InternalActivity ;
 Step ::= ServiceCall ;
 Step ::= name::String repetition::String internalExecTime::String internalFailProb::String completionModel::String (serviceCall::ServiceCall)+ (predecessor::Step)+ (successor::Step)+ behavior::Behavior nestedBehavior::Behavior ;
Join ::= ε ;
Boolean ::= "true" | "false" ;
Release ::= resourceUnits::String resource::Resource ;
Start ::= name::String repetition::String internalExecTime::String internalFailProb::String completionModel::String (serviceCall::ServiceCall)+ (predecessor::Step)+ (successor::Step)+ behavior::Behavior nestedBehavior::Behavior ;
Branch ::= branchProbs::String ;
Fork ::= ε ;
--------------------metamodels::LQN.bgf--------------------
TaskType ::= (a_reference::ε) | (non_reference::ε) ;
Call ::= EntryCall ;
 Call ::= ActivityCall ;
 Call ::= toEntry::Entry num_Phases::Integer type::CallType (callPhase::CallPhase)+ activity::Activity entryreceives::Entry entrysends::Entry ;
Integer ::= integer() ;
CallPhase ::= mean_Calls::Integer refers_To::Phase (call::Call)+ ;
Phase ::= number::Integer type::PhaseType think_Time::Integer execution_Demand::Integer COV::Integer entry::Entry activity::Activity ;
Link ::= type::LinkType mean_Links::Integer fromActivity::Activity toActivity::Activity activityPrecedes::Activity activityfollows::Activity ;
CallType ::= (synchronous::ε) | (asynchronous::ε) | (forwording::ε) ;
PhaseType ::= (stochastic::ε) | (deterministic::ε) ;
LinkType ::= (and_Fork::ε) | (and_join::ε) | (basic::ε) | (or_Fork::ε) | (or_join::ε) ;
Entry ::= name::String num_Phase::Integer arrival_Rate::Integer contained_In::Task replay_To::Entry callreceives::Call callsends::Call (phase::Phase)+ activity::Activity task::Task ;
Processor ::= name::String scheduling::SchedulingType mutliplicity::Integer replicas::Integer spped::Integer task::Task lqn::LQN ;
String ::= string() ;
EntryCall ::= from_Entry::Entry ;
Activity ::= name::String arrival_Rate::Integer contained_In::Task replay_To::Entry (linkPrecedes::Link)+ (linkfollows::Link)+ (call::Call)+ phase::Phase entry::Entry task::Task ;
Date ::= day::String month::String year::String ;
SchedulingType ::= (FCFS::ε) | (preemptive_Priority::ε) | (head_of_line::ε) | (random::ε) ;
ActivityCall ::= fromActivity::Activity ;
LQN ::= name::String comment::String author::String created_On::Date modified_On::Date (task::Task)+ (processor::Processor)+ ;
Boolean ::= "true" | "false" ;
Task ::= name::String type::TaskType priority::Integer mutliplicity::Integer replicas::Integer (entry::Entry)+ processor::Processor lqn::LQN (activity::Activity)+ ;
--------------------metamodels::LaTeX.bgf--------------------
Integer ::= integer() ;
DocumentBody ::= (sections::Section)+ (bibliography::Bibliography)+ document::Document ;
Fax ::= value::String ;
Description ::= date::Date ;
EMail ::= value::String ;
Document ::= type::Type title::Title author::Author date::Date heading::Heading abstract::Abstract keywords::Keywords documentbody::DocumentBody ;
Organisation ::= (names::Name)+ adress::Adress heading::Heading ;
Type ::= value::String ;
Title ::= value::String ;
Cite ::= sectionbody::SectionBody value::String ;
Adress ::= value::String ;
Label ::= value::String ;
Item ::= itemscontainer::Items enumeratecontainer::Enumerate ;
String ::= string() ;
Value ::= sectionbody::SectionBody value::String ;
Phone ::= value::String ;
Date ::= value::String ;
Author ::= (names::Name)+ ;
Name ::= author::Author organisation::Organisation ;
Keywords ::= value::String ;
Corps ::= Figure ;
 Corps ::= Items ;
 Corps ::= Enumerate ;
 Corps ::= Section ;
 Corps ::= Value ;
 Corps ::= Cite ;
ValuedElement ::= Type ;
 ValuedElement ::= Title ;
 ValuedElement ::= Name ;
 ValuedElement ::= Date ;
 ValuedElement ::= Adress ;
 ValuedElement ::= Phone ;
 ValuedElement ::= Fax ;
 ValuedElement ::= EMail ;
 ValuedElement ::= Abstract ;
 ValuedElement ::= Keywords ;
 ValuedElement ::= Path ;
 ValuedElement ::= Label ;
 ValuedElement ::= Item ;
 ValuedElement ::= Description ;
 ValuedElement ::= Value ;
 ValuedElement ::= Cite ;
Citation ::= label::Label author::Author description::Description bibliography::Bibliography ;
SectionBody ::= (corps::Corps)+ section::Section ;
Section ::= title::Title sectionBody::SectionBody ;
Path ::= value::String ;
Enumerate ::= (item::Item)+ ;
Figure ::= path::Path label::Label title::Title ;
Bibliography ::= (citations::Citation)+ documentbody::DocumentBody ;
Abstract ::= value::String ;
Heading ::= (organisations::Organisation)+ phone::Phone fax::Fax email::EMail ;
Items ::= (item::Item)+ ;
--------------------metamodels::MAS.bgf--------------------
LivenessRule ::= ε ;
NCS ::= cooperationRules::CooperationRules ;
CooperationRules ::= ncs::NCS ;
Characteristic ::= agentC::Agent ;
LivenessProperty ::= ε ;
Communication ::= name::String Exchanged Knoledge::Ontology (scenario::Scenario)+ aip::AIP (message::Message)+ ;
Action ::= environnement::Environnement ;
Role ::= agentR::Agent (activity::Task)+ (actsOn::Resource)+ (scenario::Scenario)+ (participant::Communication)+ (has::Responsibility)+ ;
Service ::= inputs::String outputs::String pre-conditions::String post-conditions::String ;
Organization ::= (observes::Organizational Structure)+ organizational_Structure::Organizational Structure ;
Skill ::= agentS::Agent ;
String ::= string() ;
Scenario ::= ε ;
Ontology ::= Concept ;
 Ontology ::= Predicat ;
 Ontology ::= Action ;
 Ontology ::= environnement::Environnement ;
Resource ::= name::String environnement::Environnement action::Action ;
Responsibility ::= LivenessProperty ;
 Responsibility ::= SafetyProperty ;
 Responsibility ::= LivenessProperty | SafetyProperty ;
Predicat ::= environnement::Environnement ;
SafetyRule ::= ε ;
Representation ::= agentRep::Agent ontology::Ontology environnement::Environnement ;
Environnement ::= resource::Resource ;
AIP ::= name::String performative::Performative ;
Concept ::= environnement::Environnement ;
Message ::= communication::Communication Comm_Act::Performative ;
SafetyProperty ::= ε ;
Aptitude ::= agentA::Agent ;
Task ::= name::String fipa_Platform_TaskT::FIPA-Platform Task ;
Agent ::= (service::Service)+ (non_Functionnal_Requirement::Non Functionnal Requirement)+ (requirement::Requirement)+ belongs::Organization (cooperationRules::CooperationRules)+ fipa_Platform_Agent::FIPA-Platform Agent role::Role representation::Representation characteristic::Characteristic skill::Skill aptitude::Aptitude ;
Performative ::= aip::AIP ;
Requirement ::= ε ;
--------------------metamodels::Marte.bgf--------------------
TilerSpecification ::= origin::MARTE_DataTypes/IntegerVector paving::MARTE_DataTypes/IntegerMatrix fitting::MARTE_DataTypes/IntegerVector ;
Constraint ::= IntervalConstraint ;
 Constraint ::= InteractionConstraint ;
 Constraint ::= (constrainedElement::Element)+ specification::ValueSpecification context::Namespace ;
ClockRefine ::= base_Dependency::Dependency (constraint::MARTE_Foundations/Time/ClockConstraint)+ ;
SchedulableResource ::= (schedParams::GRM_BasicTypes/SchedParameters)+ ;
Property ::= Port ;
 Property ::= class::Class datatype::DataType owningAssociation::Association association::Association isDerived::MARTE_PrimitivesTypes/Boolean isDerivedUnion::MARTE_PrimitivesTypes/Boolean default::MARTE_PrimitivesTypes/String aggregation::AggregationKind isComposite::MARTE_PrimitivesTypes/Boolean (redefinedProperty::Property)+ defaultValue::ValueSpecification opposite::Property (subsettedProperty::Property)+ (qualifier::Property)+ associationEnd::Property ;
HwMedia ::= bandWidth::BasicNFP_Types/NFP_DataTxRate base_Association::Association (arbiters::MARTE_DesignModel/HRM/HwLogical/HwCommunication/HwArbiter)+ ;
SynchronizationKind ::= (synchronous::ε) | (asynchronous::ε) | (delayedSynchronous::ε) | (rendezVous::ε) | (other::ε) ;
HwComputingResource ::= op_Frequencies::MARTE_DataTypes/NFP_FrequencyInterval ;
RtService ::= concPolicy::MARTE_DesignModel/RTEMoCC/ConcurrencyKind exeKind::MARTE_DesignModel/RTEMoCC/ExecutionKind isAtomic::MARTE_PrimitivesTypes/Boolean synchKind::MARTE_DesignModel/RTEMoCC/SynchronizationKind base_BehavioralFeature::BehavioralFeature ;
Artifact ::= DeploymentSpecification ;
 Artifact ::= fileName::MARTE_PrimitivesTypes/String (nestedArtifact::Artifact)+ (manifestation::Manifestation)+ (ownedOperation::Operation)+ (ownedAttribute::Property)+ ;
Interaction ::= (lifeline::Lifeline)+ (fragment::InteractionFragment)+ (action::Action)+ (formalGate::Gate)+ (message::Message)+ ;
DeviceBroker ::= accessPolicy::MARTE_DesignModel/SRM/SW_Brokering/AccessPolicyKind isBuffered::MARTE_PrimitivesTypes/Boolean (devices::TypedElement)+ (closeServices::BehavioralFeature)+ (controlServices::BehavioralFeature)+ (openServices::BehavioralFeature)+ (readServices::BehavioralFeature)+ (writeServices::BehavioralFeature)+ ;
GaCommHost ::= (capacity::BasicNFP_Types/NFP_DataTxRate)+ (packetT::BasicNFP_Types/NFP_Duration)+ (blockT::BasicNFP_Types/NFP_Duration)+ transmMode::MARTE_DataTypes/TransmModeKind (utilization::BasicNFP_Types/NFP_Real)+ (throughput::BasicNFP_Types/NFP_Frequency)+ ;
Clock ::= standard::TimeLibrary/TimeStandardKind base_InstanceSpecification::InstanceSpecification type::MARTE_Foundations/Time/ClockType unit::MARTE_Foundations/NFPs/Unit ;
TUK ::= ε ;
Message ::= messageKind::MessageKind messageSort::MessageSort receiveEvent::MessageEnd sendEvent::MessageEnd connector::Connector interaction::Interaction (argument::ValueSpecification)+ signature::NamedElement ;
Release ::= ε ;
VisibilityKind ::= (public::ε) | (private::ε) | (protected::ε) | (package::ε) ;
TimedElement ::= (on::MARTE_Foundations/Time/Clock)+ ;
SchedParameters ::= edf::GRM_BasicTypes/EDFParameters fp::GRM_BasicTypes/FixedPriorityParameters pooling::GRM_BasicTypes/PoolingParameters server::GRM_BasicTypes/PeriodicServerParameters ;
GaResourcesPlatform ::= (resources::MARTE_Foundations/GRM/Resource)+ base_Classifier::Classifier ;
IrregularPattern ::= phase::BasicNFP_Types/NFP_Duration (interarrivals::BasicNFP_Types/NFP_Duration)+ ;
SchedPolicyKind ::= (EarliestDeadlineFirst::ε) | (FIFO::ε) | (FixedPriority::ε) | (LeastLaxityFirst::ε) | (RoundRobin::ε) | (TimeTableDriven::ε) | (Undef::ε) | (Other::ε) ;
TransmModeKind ::= (simplex::ε) | (halfDuplex::ε) | (fullDuplex::ε) ;
MutualExclusionResourceKind ::= (BooleanSemaphore::ε) | (CountSemaphore::ε) | (Mutex::ε) | (Undef::ε) | (Other::ε) ;
DeployedArtifact ::= Artifact ;
DurationObservation ::= event::NamedElement firstEvent::MARTE_PrimitivesTypes/Boolean ;
ExpressionContext ::= base_NamedElement::NamedElement ;
ActivityNode ::= ExecutableNode ;
 ActivityNode ::= ObjectNode ;
WritePolicy ::= (WriteBack::ε) | (WriteThrough::ε) | (Other::ε) | (Undef::ε) ;
Realnterval ::= bound::MARTE_PrimitivesTypes/Real ;
CommunicationMedia ::= elementSize::MARTE_PrimitivesTypes/Integer base_Connector::Connector ;
HwBranchPredictor ::= ε ;
SecondaryScheduler ::= ε ;
AllocationNature ::= (spatialDistribution::ε) | (timeScheduling::ε) ;
Vertex ::= Pseudostate ;
 Vertex ::= ConnectionPointReference ;
PpUnit ::= concPolicy::MARTE_DesignModel/RTEMoCC/CallConcurrencyKind memorySize::BasicNFP_Types/NFP_DataSize base_BehavioredClassifier::BehavioredClassifier ;
HwEndPoint ::= base_Port::Port (connectedTo::MARTE_DesignModel/HRM/HwLogical/HwCommunication/HwMedia)+ ;
StatisticalQualifierKind ::= (max::ε) | (min::ε) | (mean::ε) | (range::ε) | (percent::ε) | (distrib::ε) | (determ::ε) | (other::ε) ;
TimedEvent ::= repetition::MARTE_PrimitivesTypes/Integer base_TimeEvent::TimeEvent every::ValueSpecification ;
StructuredActivityNode ::= (variable::Variable)+ (edge::ActivityEdge)+ mustIsolate::MARTE_PrimitivesTypes/Boolean (node::ActivityNode)+ ;
HwStorageManager ::= (managedMemories::MARTE_DesignModel/HRM/HwLogical/HwMemory/HwMemory)+ ;
IntervalType ::= intervalAttrib::Property base_DataType::DataType ;
ProtocolConformance ::= generalMachine::ProtocolStateMachine specificMachine::ProtocolStateMachine ;
GaLatencyObs ::= (latency::BasicNFP_Types/NFP_Duration)+ (miss::BasicNFP_Types/NFP_Real)+ (utility::MARTE_DataTypes/UtilityType)+ (maxJitter::BasicNFP_Types/NFP_Duration)+ ;
CacheType ::= (Data::ε) | (Instruction::ε) | (Unified::ε) | (Other::ε) | (Undef::ε) ;
DefaultLink ::= ε ;
OpaqueExpression ::= (body::MARTE_PrimitivesTypes/String)+ (language::MARTE_PrimitivesTypes/String)+ result::Parameter behavior::Behavior ;
QueuePolicyKind ::= (FIFO::ε) | (LIFO::ε) | (Priority::ε) | (Undef::ε) | (Other::ε) ;
Duration ::= expr::ValueSpecification (observation::Observation)+ ;
HWCache ::= level::BasicNFP_Types/NFP_Natural type::MARTE_DesignModel/HRM/HwLogical/HwMemory/CacheType structure::MARTE_DesignModel/HRM/HwLogical/HwMemory/CacheStructure repl_Policy::MARTE_DesignModel/HRM/HwLogical/HwMemory/Repl_Policy writePolicy::MARTE_DesignModel/HRM/HwLogical/HwMemory/WritePolicy ;
PackageMerge ::= mergedPackage::Package receivingPackage::Package ;
TimeEvent ::= isRelative::MARTE_PrimitivesTypes/Boolean when::ValueSpecification ;
StringExpression ::= (subExpression::StringExpression)+ owningExpression::StringExpression ;
TimeNatureKind ::= (discrete::ε) | (dense::ε) ;
PseudostateKind ::= (initial::ε) | (deepHistory::ε) | (shallowHistory::ε) | (join::ε) | (fork::ε) | (junction::ε) | (choice::ε) | (entryPoint::ε) | (exitPoint::ε) | (terminate::ε) ;
ConcurrencyKind ::= (reader::ε) | (writer::ε) | (parallel::ε) ;
HwPowerSupply ::= suppliedPower::BasicNFP_Types/NFP_Power capacity::BasicNFP_Types/NFP_Energy ;
Unit ::= convFactor::MARTE_PrimitivesTypes/Real convOffset::MARTE_PrimitivesTypes/Real baseUnit::MARTE_Foundations/NFPs/Unit base_EnumerationLiteral::EnumerationLiteral ;
NamedElement ::= Namespace ;
 NamedElement ::= TypedElement ;
 NamedElement ::= RedefinableElement ;
 NamedElement ::= DeploymentTarget ;
 NamedElement ::= CollaborationUse ;
 NamedElement ::= Message ;
 NamedElement ::= Lifeline ;
 NamedElement ::= Trigger ;
 NamedElement ::= Vertex ;
 NamedElement ::= ParameterSet ;
 NamedElement ::= DeployedArtifact ;
 NamedElement ::= MessageEnd ;
 NamedElement ::= InteractionFragment ;
 NamedElement ::= GeneralOrdering ;
 NamedElement ::= PackageableElement ;
 NamedElement ::= ActivityPartition ;
 NamedElement ::= Include ;
 NamedElement ::= Extend ;
FlowBFeature ::= kind::MARTE_Foundations/GCM/BFeatureKind base_BehavioralFeature::BehavioralFeature ;
GaAcqStep ::= acqRes::MARTE_Foundations/GRM/Resource resUnits::BasicNFP_Types/NFP_Integer ;
SaSharedResource ::= capacity::BasicNFP_Types/NFP_Integer isPreemp::BasicNFP_Types/NFP_Boolean isConsum::BasicNFP_Types/NFP_Boolean (acquisT::BasicNFP_Types/NFP_Duration)+ (releaseT::BasicNFP_Types/NFP_Duration)+ ;
ElementImport ::= visibility::VisibilityKind alias::MARTE_PrimitivesTypes/String importedElement::PackageableElement importingNamespace::Namespace ;
HwSupport ::= ε ;
HwDrive ::= sectorSize::BasicNFP_Types/NFP_DataSize buffer::MARTE_DesignModel/HRM/HwLogical/HwMemory/HwRAM ;
Trigger ::= event::Event (port::Port)+ ;
HwBridge ::= (sides::MARTE_DesignModel/HRM/HwLogical/HwCommunication/HwMedia)+ ;
HwResourceService ::= ε ;
NFP ::= base_Property::Property ;
NfpConstraint ::= kind::MARTE_Foundations/NFPs/ConstraintKind base_Constraint::Constraint ;
DirectionKind ::= (in::ε) | (out::ε) | (inout::ε) ;
BehavioredClassifier ::= UseCase ;
 BehavioredClassifier ::= Collaboration ;
 BehavioredClassifier ::= Class ;
PaRunTInstance ::= poolSize::BasicNFP_Types/NFP_Integer unbddPool::MARTE_PrimitivesTypes/Boolean instance::MARTE_Foundations/GRM/Resource host::MARTE_Foundations/GRM/SchedulableResource utilization::BasicNFP_Types/NFP_Real throughput::BasicNFP_Types/NFP_Frequency base_NamedElement::NamedElement ;
ExecutableNode ::= Action ;
InputPin ::= isControl::MARTE_PrimitivesTypes/Boolean ;
SaExecStep ::= base_BehavioralFeature::BehavioralFeature deadline::BasicNFP_Types/NFP_Duration spareCap::BasicNFP_Types/NFP_Duration schSlack::BasicNFP_Types/NFP_Real preemptT::BasicNFP_Types/NFP_Duration readyT::BasicNFP_Types/NFP_Duration delayT::BasicNFP_Types/NFP_Duration ;
TimedProcessing ::= base_Action::Action base_Behavior::Behavior base_Message::Message duration::ValueSpecification start::Event stop::Event ;
Parameter ::= direction::ParameterDirectionKind default::MARTE_PrimitivesTypes/String defaultValue::ValueSpecification operation::Operation (parameterSet::ParameterSet)+ isException::MARTE_PrimitivesTypes/Boolean isStream::MARTE_PrimitivesTypes/Boolean effect::ParameterEffectKind ;
StorageResource ::= elementSize::MARTE_PrimitivesTypes/Integer ;
TimeInterpretationKind ::= (duration::ε) | (instant::ε) ;
Profile ::= (ownedStereotype::Stereotype)+ (metaclassReference::ElementImport)+ (metamodelReference::PackageImport)+ ;
HwTimingResource ::= ε ;
TimeStandardKind ::= (TAI::ε) | (UT0::ε) | (UT1::ε) | (UTC::ε) | (Local::ε) | (TT::ε) | (TBD::ε) | (TCG::ε) | (TCB::ε) | (Sidereal::ε) | (GPS::ε) ;
ArrivalPattern ::= periodic::BasicNFP_Types/PeriodicPattern aperiodic::BasicNFP_Types/AperiodicPattern burst::BasicNFP_Types/BurstPattern irregular::BasicNFP_Types/IrregularPattern closed::BasicNFP_Types/ClosedPattern sporadic::BasicNFP_Types/SporadicPattern ;
AggregationKind ::= (none::ε) | (shared::ε) | (composite::ε) ;
Pin ::= OutputPin ;
 Pin ::= InputPin ;
 Pin ::= isControl::MARTE_PrimitivesTypes/Boolean ;
Transition ::= kind::TransitionKind container::Region redefinedTransition::Transition guard::Constraint effect::Behavior (trigger::Trigger)+ target::Vertex source::Vertex ;
MessageEnd ::= Gate ;
Pseudostate ::= kind::PseudostateKind stateMachine::StateMachine state::State ;
InterruptResource ::= kind::MARTE_DesignModel/SRM/SW_Concurrency/InterruptKind isMaskable::MARTE_PrimitivesTypes/Boolean (vectorElements::TypedElement)+ (maskElements::TypedElement)+ (routineConnectServices::BehavioralFeature)+ (routineDisconnectServices::BehavioralFeature)+ ;
InteractionConstraint ::= minint::ValueSpecification maxint::ValueSpecification ;
ConnectorEnd ::= definingEnd::Property partWithPort::Property role::ConnectableElement ;
NotificationResourceKind ::= (Event::ε) | (Barrier::ε) | (Undef::ε) | (Other::ε) ;
Dependency ::= Abstraction ;
 Dependency ::= Deployment ;
 Dependency ::= (supplier::NamedElement)+ (client::NamedElement)+ ;
PackageImport ::= visibility::VisibilityKind importedPackage::Package importingNamespace::Namespace ;
SwSynchronizationResource ::= ε ;
CallConcurrencyKind ::= (sequential::ε) | (guarded::ε) | (concurrent::ε) ;
TemplateableElement ::= StringExpression ;
TimeExpression ::= expr::ValueSpecification (observation::Observation)+ ;
GaEventTrace ::= content::MARTE_PrimitivesTypes/String format::MARTE_PrimitivesTypes/String location::MARTE_PrimitivesTypes/String base_NamedElement::NamedElement ;
Tiler ::= origin::MARTE_DataTypes/IntegerVector paving::MARTE_DataTypes/IntegerMatrix fitting::MARTE_DataTypes/IntegerMatrix tiler::RS_Library/TilerSpecification ;
SaCommHost ::= isSched::BasicNFP_Types/NFP_Boolean schSlack::BasicNFP_Types/NFP_Real ;
ConnectorKind ::= (assembly::ε) | (delegation::ε) ;
TimedDurationObservation ::= obsKind::TimeLibrary/EventKind base_DurationObservation::DurationObservation ;
SharedDataComResource ::= (readServices::BehavioralFeature)+ (writeServices::BehavioralFeature)+ ;
Allocate ::= kind::MARTE_Foundations/Alloc/AllocationKind nature::MARTE_Foundations/Alloc/AllocationNature base_Abstraction::Abstraction (impliedConstraint::MARTE_Foundations/NFPs/NfpConstraint)+ ;
HwCoolingSupply ::= coolingPower::BasicNFP_Types/NFP_Power ;
InterruptibleActivityRegion ::= (node::ActivityNode)+ (interruptingEdge::ActivityEdge)+ ;
Class ::= Stereotype ;
 Class ::= Behavior ;
 Class ::= (nestedClassifier::Classifier)+ (ownedOperation::Operation)+ (superClass::Class)+ isActive::MARTE_PrimitivesTypes/Boolean (ownedReception::Reception)+ (extension::Extension)+ ;
SaSchedObs ::= (suspentions::BasicNFP_Types/NFP_Integer)+ (blockT::BasicNFP_Types/NFP_Duration)+ (overlaps::BasicNFP_Types/NFP_Integer)+ ;
HwTimer ::= nbCounter::BasicNFP_Types/NFP_Natural counterWidth::BasicNFP_Types/NFP_DataSize inputClock::MARTE_DesignModel/HRM/HwLogical/HwTiming/HwClock ;
EncapsulatedClassifier ::= Class ;
Stereotype ::= (icon::Image)+ ;
TypedElement ::= ConnectableElement ;
 TypedElement ::= ValueSpecification ;
 TypedElement ::= ObjectNode ;
ProtocolStateMachine ::= (conformance::ProtocolConformance)+ ;
CommunicationEndPoint ::= packetSize::MARTE_PrimitivesTypes/Integer ;
RteConnector ::= bandwidth::BasicNFP_Types/NFP_DataTxRate packetT::BasicNFP_Types/NFP_Duration blockT::BasicNFP_Types/NFP_Duration transmMode::MARTE_DataTypes/TransmModeKind base_Connector::Connector ;
GRService ::= owner::MARTE_Foundations/GRM/Resource base_ExecutionSpecification::ExecutionSpecification base_BehavioralFeature::BehavioralFeature base_Behavior::Behavior base_Collaboration::Collaboration base_CollaborationUse::CollaborationUse ;
HwDMA ::= nbChannels::BasicNFP_Types/NFP_Natural transferWidth::BasicNFP_Types/NFP_DataSize (drivenBy::MARTE_DesignModel/HRM/HwLogical/HwComputing/HwProcessor)+ ;
Operation ::= interface::Interface class::Class isQuery::MARTE_PrimitivesTypes/Boolean isOrdered::MARTE_PrimitivesTypes/Boolean isUnique::MARTE_PrimitivesTypes/Boolean lower::MARTE_PrimitivesTypes/Integer upper::MARTE_PrimitivesTypes/UnlimitedNatural (precondition::Constraint)+ (postcondition::Constraint)+ (redefinedOperation::Operation)+ datatype::DataType bodyCondition::Constraint type::Type ;
DataTxRateUnitKind ::= (b_per_s::ε) | (Kb_per_s::ε) | (Mb_per_s::ε) ;
TimeUnitKind ::= (s::ε) | (tick::ε) | (ms::ε) | (us::ε) | (min::ε) | (hrs::ε) | (dys::ε) ;
DataSizeUnitKind ::= (bits::ε) | (Bytes::ε) | (KB::ε) | (MB::ε) | (GB::ε) ;
FlowProperty ::= direction::MARTE_Foundations/GCM/DirectionKind base_Property::Property ;
GaWorkloadGenerator ::= pop::BasicNFP_Types/NFP_Integer base_Behavior::Behavior ;
ComputingResource ::= ε ;
NotificationKind ::= (Memorized::ε) | (Bounded::ε) | (Memoryless::ε) | (Undef::ε) | (Other::ε) ;
TemplateSignature ::= (parameter::TemplateParameter)+ (ownedParameter::TemplateParameter)+ template::TemplateableElement ;
PowerUnitKind ::= (W::ε) | (mW::ε) | (KW::ε) ;
Image ::= content::MARTE_PrimitivesTypes/String location::MARTE_PrimitivesTypes/String format::MARTE_PrimitivesTypes/String ;
Namespace ::= Package ;
 Namespace ::= Classifier ;
 Namespace ::= BehavioralFeature ;
 Namespace ::= Region ;
 Namespace ::= Transition ;
 Namespace ::= State ;
 Namespace ::= InteractionOperand ;
Extend ::= extendedCase::UseCase condition::Constraint (extensionLocation::ExtensionPoint)+ extension::UseCase ;
StructuralFeature ::= Property ;
ConnectableElement ::= Parameter ;
 ConnectableElement ::= Variable ;
RtAction ::= isAtomic::MARTE_PrimitivesTypes/Boolean synchKind::MARTE_DesignModel/RTEMoCC/SynchronizationKind msgSize::BasicNFP_Types/NFP_DataSize base_BehavioralFeature::BehavioralFeature base_InvocationAction::InvocationAction ;
UseCase ::= (include::Include)+ (extend::Extend)+ (extensionPoint::ExtensionPoint)+ (subject::Classifier)+ ;
PartDecomposition ::= refersTo::Interaction (actualGate::Gate)+ (argument::Action)+ ;
SporadicPattern ::= minInterarrival::BasicNFP_Types/NFP_Duration maxInterarrival::BasicNFP_Types/NFP_Duration jitter::BasicNFP_Types/NFP_Duration ;
ValueSpecification ::= Expression ;
 ValueSpecification ::= OpaqueExpression ;
 ValueSpecification ::= TimeExpression ;
 ValueSpecification ::= Duration ;
 ValueSpecification ::= Interval ;
ConstraintKind ::= (required::ε) | (offered::ε) | (constraint::ε) ;
Activity ::= (structuredNode::StructuredActivityNode)+ (variable::Variable)+ (node::ActivityNode)+ isReadOnly::MARTE_PrimitivesTypes/Boolean (edge::ActivityEdge)+ (partition::ActivityPartition)+ isSingleExecution::MARTE_PrimitivesTypes/Boolean (group::ActivityGroup)+ ;
ParameterEffectKind ::= (create::ε) | (read::ε) | (update::ε) | (delete::ε) ;
EventKind ::= (start::ε) | (finish::ε) | (send::ε) | (receive::ε) | (consume::ε) ;
Reshape ::= patternShape::RS_Library/ShapeSpecification repetitonShape::RS_Library/ShapeSpecification srcTiler::MARTE_Annexes/RSM/Tiler targetTiler::MARTE_Annexes/RSM/Tiler ;
PaCommStep ::= ε ;
HwMMU ::= virtualAddrSpace::BasicNFP_Types/NFP_DataSize physicalAddrSpace::BasicNFP_Types/NFP_DataSize memoryProtection::BasicNFP_Types/NFP_Natural nbEntries::BasicNFP_Types/NFP_Boolean (ownedTLBs::MARTE_DesignModel/HRM/HwLogical/HwMemory/HWCache)+ ;
SwMutualExclusionResource ::= mechanism::MARTE_DesignModel/SRM/SW_Interaction/MutualExclusionResourceKind concurrentAccessProtocol::MARTE_DesignModel/SRM/SW_Interaction/ConcurrentAccessProtocolKind (accessTokenElements::TypedElement)+ (releaseServices::BehavioralFeature)+ (acquireServices::BehavioralFeature)+ ;
CollaborationUse ::= type::Collaboration (roleBinding::Dependency)+ ;
FixedPriorityParameters ::= priority::MARTE_PrimitivesTypes/Integer ;
Integer ::= integer() ;
Substitution ::= contract::Classifier substitutingClassifier::Classifier ;
SignalSpecification ::= kind::MARTE_Foundations/GCM/BFeatureKind base_Interface::Interface ;
Interface ::= (ownedAttribute::Property)+ (ownedOperation::Operation)+ (nestedClassifier::Classifier)+ (redefinedInterface::Interface)+ (ownedReception::Reception)+ protocol::ProtocolStateMachine ;
ParameterableElement ::= ConnectableElement ;
 ParameterableElement ::= PackageableElement ;
CollectionType ::= collectionAttrib::Property base_DataType::DataType ;
Region ::= (subvertex::Vertex)+ (transition::Transition)+ state::State extendedRegion::Region stateMachine::StateMachine ;
GaCommStep ::= ε ;
OptimallityCriterionKind ::= (meetHardDeadlines::ε) | (minimizeMissedDeadlines::ε) | (minimizedMeanTardiness::ε) | (undef::ε) | (other::ε) ;
Lifeline ::= represents::ConnectableElement interaction::Interaction selector::ValueSpecification decomposedAs::PartDecomposition (coveredBy::InteractionFragment)+ ;
HwMemory ::= memorySize::BasicNFP_Types/NFP_DataSize adressSize::BasicNFP_Types/NFP_DataSize (timings::MARTE_DesignModel/HRM/HwLogical/HwMemory/Timing)+ ;
MessagePort ::= base_Port::Port isAtomic::MARTE_PrimitivesTypes/Boolean isConjugated::MARTE_PrimitivesTypes/Boolean direction::MARTE_Foundations/GCM/DirectionKind ;
Var ::= dir::MARTE_Annexes/VSL/Variables/VariableDirectionKind base_Property::Property ;
RtUnit ::= isDynamic::MARTE_PrimitivesTypes/Boolean isMain::MARTE_PrimitivesTypes/Boolean poolSize::MARTE_PrimitivesTypes/Integer poolPolicy::MARTE_DesignModel/RTEMoCC/PoolMgtPolicyKind poolWaitingTime::BasicNFP_Types/NFP_Duration operationalMode::Behavior main::Operation memorySize::BasicNFP_Types/NFP_DataSize base_BehavioredClassifier::BehavioredClassifier ;
AreaUnitKind ::= (mm2::ε) | (um2::ε) ;
ShapeSpecification ::= (size::MARTE_PrimitivesTypes/UnlimitedNatural)+ ;
TupleType ::= (tupleAttrib::Property)+ base_DataType::DataType ;
TimedInstantObservation ::= obsKind::TimeLibrary/EventKind base_TimeObservation::TimeObservation ;
TimeObservation ::= event::NamedElement firstEvent::MARTE_PrimitivesTypes/Boolean ;
GaCommChannel ::= packetSize::BasicNFP_Types/NFP_DataSize (utlization::BasicNFP_Types/NFP_Real)+ ;
LogicalTimeUnit ::= tick::ε ;
MemoryOrganization ::= nbRows::BasicNFP_Types/NFP_Natural nbColumns::BasicNFP_Types/NFP_Natural nbBanks::BasicNFP_Types/NFP_Natural wordSize::BasicNFP_Types/NFP_DataSize ;
TimedValueType ::= unit::TimeLibrary/TUK value::MARTE_PrimitivesTypes/Real expr::TimeLibrary/ClockedValueSpecification onClock::MARTE_PrimitivesTypes/String ;
GaExecHost ::= commTxOch::BasicNFP_Types/NFP_Duration commRcvOvh::BasicNFP_Types/NFP_Duration cntxtSwt::BasicNFP_Types/NFP_Duration clockOvh::BasicNFP_Types/NFP_Duration schedPriRange::MARTE_DataTypes/IntegerInterval memSize::BasicNFP_Types/NFP_DataSize (utilization::BasicNFP_Types/NFP_Real)+ (throughput::BasicNFP_Types/NFP_Frequency)+ ;
SwSchedulableResource ::= isStaticSchedulingFeature::MARTE_PrimitivesTypes/Boolean isPreemptable::MARTE_PrimitivesTypes/Boolean schedulers::NamedElement (deadlineElements::TypedElement)+ (deadlineTypeElements::TypedElement)+ (timeScliceElements::TypedElement)+ (delayServices::BehavioralFeature)+ (joinServices::BehavioralFeature)+ (yieldServices::BehavioralFeature)+ ;
NfpType ::= valueAttrib::Property unitAttrib::Property exprAttrib::Property ;
FlowPort ::= isAtomic::MARTE_PrimitivesTypes/Boolean isConjugated::MARTE_PrimitivesTypes/Boolean direction::MARTE_Foundations/GCM/DirectionKind base_Port::Port ;
Gate ::= message::Message ;
Realization ::= Substitution ;
 Realization ::= InterfaceRealization ;
 Realization ::= Substitution | InterfaceRealization ;
PaLogicalResource ::= utilization::BasicNFP_Types/NFP_Real throughput::BasicNFP_Types/NFP_Frequency poolSize::BasicNFP_Types/NFP_Integer ;
GaStep ::= isAtomic::BasicNFP_Types/NFP_Boolean blockT::BasicNFP_Types/NFP_Duration rep::BasicNFP_Types/NFP_Real prob::BasicNFP_Types/NFP_Real priority::BasicNFP_Types/NFP_Integer concurRes::MARTE_Foundations/GRM/SchedulableResource host::MARTE_AnalysisModel/GQAM/GaExecHost (serDemand::MARTE_AnalysisModel/GQAM/GaRequestedService)+ (servCount::BasicNFP_Types/NFP_Real)+ ;
Deployment ::= (deployedArtifact::DeployedArtifact)+ (configuration::DeploymentSpecification)+ location::DeploymentTarget ;
Interval ::= DurationInterval ;
 Interval ::= TimeInterval ;
 Interval ::= min::ValueSpecification max::ValueSpecification ;
SaAnalysisContext ::= isSched::BasicNFP_Types/NFP_Boolean optCriterion::MARTE_AnalysisModel/SAM/OptimallityCriterionKind ;
Element ::= Comment ;
 Element ::= NamedElement ;
 Element ::= TemplateableElement ;
 Element ::= Relationship ;
 Element ::= TemplateSignature ;
 Element ::= TemplateParameter ;
 Element ::= ParameterableElement ;
 Element ::= TemplateParameterSubstitution ;
 Element ::= MultiplicityElement ;
 Element ::= Image ;
 Element ::= ActivityGroup ;
 Element ::= Slot ;
 Element ::= ExceptionHandler ;
IdealClock ::= ε ;
GaAnalysisContext ::= (context::BasicNFP_Types/NFP_String)+ (workload::MARTE_AnalysisModel/GQAM/GaWorkloadBehavior)+ (platform::MARTE_AnalysisModel/GQAM/GaResourcesPlatform)+ ;
DeploymentTarget ::= InstanceSpecification ;
Feature ::= Connector ;
 Feature ::= StructuralFeature ;
 Feature ::= BehavioralFeature ;
ConditionType ::= (Temperature::ε) | (Humidity::ε) | (Altitude::ε) | (Vibration::ε) | (Shock::ε) | (Other::ε) | (Undef::ε) ;
RtBehavior ::= queueSchedPolicy::GRM_BasicTypes/SchedPolicyKind queueSize::MARTE_PrimitivesTypes/Integer msgMaxSize::BasicNFP_Types/NFP_DataSize base_Behavior::Behavior ;
TimeInterval ::= min::ValueSpecification max::ValueSpecification ;
EDFParameters ::= deadline::BasicNFP_Types/NFP_Duration ;
HwBus ::= adressWidth::BasicNFP_Types/NFP_DataSize wordWidth::BasicNFP_Types/NFP_DataSize isSynchronous::MARTE_PrimitivesTypes/Boolean isSerial::MARTE_PrimitivesTypes/Boolean ;
TemplateParameterSubstitution ::= formal::TemplateParameter (actual::ParameterableElement)+ (ownedActual::ParameterableElement)+ templateBinding::TemplateBinding ;
SendFlowAction ::= base_InvocationAction::InvocationAction ;
PaRequestedStep ::= ε ;
MemoryPartition ::= (concurrentResources::TypedElement)+ (memorySpaces::TypedElement)+ (fork::BehavioralFeature)+ (exit::BehavioralFeature)+ base_Namespace::Namespace ;
Signal ::= (ownedAttribute::Property)+ ;
HwISA ::= family::BasicNFP_Types/NFP_String inst_Width::BasicNFP_Types/NFP_DataSize type::MARTE_DesignModel/HRM/HwLogical/HwComputing/ISA_Type ;
PoolMgtPolicyKind ::= (infiniteWait::ε) | (timedWait::ε) | (dynamic::ε) | (exception::ε) | (other::ε) ;
DirectedRelationship ::= ElementImport ;
 DirectedRelationship ::= PackageImport ;
 DirectedRelationship ::= TemplateBinding ;
 DirectedRelationship ::= Generalization ;
 DirectedRelationship ::= PackageMerge ;
 DirectedRelationship ::= ProfileApplication ;
 DirectedRelationship ::= ProtocolConformance ;
 DirectedRelationship ::= Dependency ;
 DirectedRelationship ::= Include ;
 DirectedRelationship ::= Extend ;
GeneralOrdering ::= before::OccurrenceSpecification after::OccurrenceSpecification ;
TimedDomain ::= base_Package::Package ;
HwArbiter ::= (controlledMedias::MARTE_DesignModel/HRM/HwLogical/HwCommunication/HwMedia)+ ;
Expression ::= StringExpression ;
 Expression ::= symbol::MARTE_PrimitivesTypes/String (operand::ValueSpecification)+ ;
Acquire ::= isBlocking::MARTE_PrimitivesTypes/Boolean ;
OutputPin ::= isControl::MARTE_PrimitivesTypes/Boolean ;
AllocationKind ::= (structural::ε) | (behavioral::ε) | (hybrid::ε) ;
SwResource ::= (identifierElements::TypedElement)+ (stateElements::TypedElement)+ memorySizeFootprint::TypedElement (createServices::BehavioralFeature)+ (deleteServices::BehavioralFeature)+ (initializeServices::BehavioralFeature)+ ;
ExtensionPoint ::= useCase::UseCase ;
DurationConstraint ::= firstEvent::MARTE_PrimitivesTypes/Boolean ;
PoolingParameters ::= period::BasicNFP_Types/NFP_Duration (overhead::BasicNFP_Types/NFP_Duration)+ ;
Reception ::= signal::Signal ;
ExecutionKind ::= (deferred::ε) | (remoteImmediate::ε) | (localImmediate::ε) ;
GaRelStep ::= relRes::MARTE_Foundations/GRM/Resource resUnits::BasicNFP_Types/NFP_Integer ;
ParameterDirectionKind ::= (in::ε) | (inout::ε) | (out::ε) | (return::ε) ;
TimeConstraint ::= firstEvent::MARTE_PrimitivesTypes/Boolean ;
GaScenario ::= cause::MARTE_AnalysisModel/GQAM/GaWorkloadEvent (hostDemand::BasicNFP_Types/NFP_Duration)+ (hostDemandOps::BasicNFP_Types/NFP_Real)+ (interOccT::BasicNFP_Types/NFP_Duration)+ (throughput::BasicNFP_Types/NFP_Frequency)+ respT::BasicNFP_Types/NFP_Duration (utilization::BasicNFP_Types/NFP_Real)+ (utilizationHost::BasicNFP_Types/NFP_Real)+ root::MARTE_AnalysisModel/GQAM/GaStep (timing::MARTE_AnalysisModel/GQAM/GaTimingObs)+ behavior::MARTE_AnalysisModel/GQAM/GaScenario ;
TransitionKind ::= (internal::ε) | (local::ε) | (external::ε) ;
Allocated ::= base_NamedElement::NamedElement ;
UtilityType ::= ε ;
DeviceResource ::= ε ;
IntervalConstraint ::= TimeConstraint ;
 IntervalConstraint ::= DurationConstraint ;
 IntervalConstraint ::= TimeConstraint | DurationConstraint ;
Port ::= isBehavior::MARTE_PrimitivesTypes/Boolean isService::MARTE_PrimitivesTypes/Boolean (required::Interface)+ (redefinedPort::Port)+ (provided::Interface)+ protocol::ProtocolStateMachine ;
ConcurrencyResource ::= ε ;
Variable ::= scope::StructuredActivityNode activityScope::Activity ;
Generalization ::= isSubstitutable::MARTE_PrimitivesTypes/Boolean general::Classifier (generalizationSet::GeneralizationSet)+ specific::Classifier ;
ChoiceType ::= (choiceAttrib::Property)+ defaultAttrib::Property base_DataType::DataType ;
ProtectProtocolKind ::= (FIFO::ε) | (NoPreemption::ε) | (PriorityCeiling::ε) | (PriorityInheritance::ε) | (StackBased::ε) | (Undef::ε) | (Other::ε) ;
Scheduler ::= isPreemptible::MARTE_PrimitivesTypes/Boolean schedPolicy::GRM_BasicTypes/SchedPolicyKind otherSchedPolicy::MARTE_PrimitivesTypes/String schedule::OpaqueExpression (processingUnit::MARTE_Foundations/GRM/ProcessingResource)+ host::MARTE_Foundations/GRM/ComputingResource ;
DurationInterval ::= min::ValueSpecification max::ValueSpecification ;
TimingResource ::= ε ;
StateMachine ::= ProtocolStateMachine ;
 StateMachine ::= (region::Region)+ (submachineState::State)+ (connectionPoint::Pseudostate)+ (extendedStateMachine::StateMachine)+ ;
TimedObservation ::= ε ;
FrequencyUnitKind ::= (Hz::ε) | (KHz::ε) | (MHz::ε) | (GHz::ε) | (rpm::ε) ;
OccurrenceSpecification ::= (toBefore::GeneralOrdering)+ event::Event (toAfter::GeneralOrdering)+ ;
PeriodicServerKind ::= (Sporadic::ε) | (Deferrable::ε) | (Undef::ε) | (Other::ε) ;
ActivityGroup ::= InterruptibleActivityRegion ;
 ActivityGroup ::= ActivityPartition ;
HwComponent ::= kind::MARTE_DesignModel/HRM/HwPhysical/HwLayout/ComponentKind dimenssions::BasicNFP_Types/NFP_Length area::BasicNFP_Types/NFP_Area position::MARTE_DataTypes/NFP_NaturalInterval grid::BasicNFP_Types/NFP_Natural nbPins::BasicNFP_Types/NFP_Natural weight::BasicNFP_Types/NFP_Real price::BasicNFP_Types/NFP_String (r_Conditions::MARTE_DesignModel/HRM/HwPhysical/HwLayout/Env_Condition)+ (poweredServices::MARTE_DesignModel/HRM/HwLogical/HwGeneral/HwResourceService)+ staticConsumption::BasicNFP_Types/NFP_Power staticDissipation::BasicNFP_Types/NFP_Power ;
SwAccessService ::= isModifier::MARTE_PrimitivesTypes/Boolean accessedElement::Property ;
TemplateBinding ::= signature::TemplateSignature (parameterSubstitution::TemplateParameterSubstitution)+ boundElement::TemplateableElement ;
ApplicationAllocationEnd ::= (allocatedTo::MARTE_Foundations/Alloc/ExecutionPlatformAllocationEnd)+ ;
AccessPolicyKind ::= (Read::ε) | (Write::ε) | (ReadWrite::ε) | (Undef::ε) | (Other::ε) ;
GaWorkloadEvent ::= pattern::BasicNFP_Types/ArrivalPattern generator::MARTE_AnalysisModel/GQAM/GaWorkloadGenerator trace::MARTE_AnalysisModel/GQAM/GaEventTrace effect::MARTE_AnalysisModel/GQAM/GaScenario timedEvent::TimeEvent base_NamedElement::NamedElement ;
TimedValueSpecification ::= interpretation::TimeTypesLibrary/TimeInterpretationKind base_ValueSpecification::ValueSpecification ;
Include ::= addition::UseCase includingCase::UseCase ;
EnumerationLiteral ::= enumeration::Enumeration ;
Abstraction ::= Realization ;
 Abstraction ::= Manifestation ;
 Abstraction ::= mapping::OpaqueExpression ;
SaCommStep ::= deadline::BasicNFP_Types/NFP_Duration spareCap::BasicNFP_Types/NFP_Duration schSlack::BasicNFP_Types/NFP_Real base_BehavioralFeature::BehavioralFeature ;
CompnentState ::= (Operating::ε) | (Storage::ε) | (Other::ε) | (Undef::ε) ;
GaRequestedService ::= base_Operation::Operation ;
IntegerMatrix ::= (matrixElem::MARTE_DataTypes/IntegerVector)+ ;
LaxityKind ::= (hard::ε) | (soft::ε) | (other::ε) ;
PaStep ::= noSynch::BasicNFP_Types/NFP_Boolean (extOpDemand::MARTE_PrimitivesTypes/String)+ (extOpCount::BasicNFP_Types/NFP_Real)+ (behavDemand::MARTE_AnalysisModel/GQAM/GaScenario)+ (behavCount::BasicNFP_Types/NFP_Real)+ ;
GaTimingObs ::= laxity::MARTE_AnalysisModel/GQAM/LaxityKind startObs::TimeObservation stopObs::TimeObservation ;
ActivityPartition ::= isDimension::MARTE_PrimitivesTypes/Boolean isExternal::MARTE_PrimitivesTypes/Boolean (node::ActivityNode)+ (subpartition::ActivityPartition)+ superPartition::ActivityPartition represents::Element (edge::ActivityEdge)+ ;
HwASIC ::= ε ;
Event ::= TimeEvent ;
InteractionOperand ::= guard::InteractionConstraint (fragment::InteractionFragment)+ ;
InterruptKind ::= (HardwareInterruption::ε) | (ProcessorDetectedException::ε) | (ProgrammedException::ε) | (Undef::ε) | (Other::ε) ;
VariableDirectionKind ::= (in::ε) | (out::ε) | (inout::ε) ;
StructuredClassifier ::= EncapsulatedClassifier ;
 StructuredClassifier ::= Collaboration ;
Behavior ::= StateMachine ;
 Behavior ::= Activity ;
 Behavior ::= Interaction ;
State ::= isComposite::MARTE_PrimitivesTypes/Boolean isOrthogonal::MARTE_PrimitivesTypes/Boolean isSimple::MARTE_PrimitivesTypes/Boolean isSubmachineState::MARTE_PrimitivesTypes/Boolean submachine::StateMachine (connection::ConnectionPointReference)+ (connectionPoint::Pseudostate)+ redefinedState::State stateInvariant::Constraint entry::Behavior exit::Behavior doActivity::Behavior (deferrableTrigger::Trigger)+ (region::Region)+ ;
BurstPattern ::= minInterarrival::BasicNFP_Types/NFP_Duration maxInterarrival::BasicNFP_Types/NFP_Duration minEventInterval::BasicNFP_Types/NFP_Duration maxEventInterval::BasicNFP_Types/NFP_Duration burstSize::BasicNFP_Types/NFP_Integer ;
SourceKind ::= (est::ε) | (meas::ε) | (calc::ε) | (req::ε) ;
HwRAM ::= organization::MARTE_DesignModel/HRM/HwLogical/HwMemory/MemoryOrganization isSynchronous::BasicNFP_Types/NFP_Boolean isStatic::BasicNFP_Types/NFP_Boolean isNonVolatile::BasicNFP_Types/NFP_Boolean repl_Policy::MARTE_DesignModel/HRM/HwLogical/HwMemory/Repl_Policy writePolicy::MARTE_DesignModel/HRM/HwLogical/HwMemory/WritePolicy ;
SynchronizationResource ::= ε ;
PaResPassStep ::= resource::MARTE_Foundations/GRM/Resource resUnits::BasicNFP_Types/NFP_Integer ;
RedefinableElement ::= Feature ;
 RedefinableElement ::= ExtensionPoint ;
 RedefinableElement ::= ActivityNode ;
 RedefinableElement ::= ActivityEdge ;
 RedefinableElement ::= Region ;
 RedefinableElement ::= Transition ;
ClockConstraint ::= ε ;
Timing ::= notation::BasicNFP_Types/NFP_String description::BasicNFP_Types/NFP_String value::BasicNFP_Types/NFP_Duration ;
PeriodicServerParameters ::= kind::GRM_BasicTypes/PeriodicServerKind backgroundPriority::MARTE_PrimitivesTypes/Integer initialBudget::BasicNFP_Types/NFP_Duration replenishPeriod::BasicNFP_Types/NFP_Duration maxPendingReplenish::MARTE_PrimitivesTypes/Integer ;
SaExecHost ::= isSched::BasicNFP_Types/NFP_Boolean schSlack::BasicNFP_Types/NFP_Real schedUtiliz::BasicNFP_Types/NFP_Real ISRswitchT::BasicNFP_Types/NFP_Duration ISRprioRange::MARTE_DataTypes/IntegerInterval schedPolicy::GRM_BasicTypes/SchedPolicyKind isPreempible::BasicNFP_Types/NFP_Boolean ;
HwDevice ::= ε ;
ClosedPattern ::= population::BasicNFP_Types/NFP_Integer extDelay::BasicNFP_Types/NFP_Duration ;
InteractionFragment ::= ExecutionSpecification ;
 InteractionFragment ::= InteractionUse ;
 InteractionFragment ::= OccurrenceSpecification ;
 InteractionFragment ::= Interaction ;
 InteractionFragment ::= InteractionOperand ;
ProcessingResource ::= speedFactor::MARTE_PrimitivesTypes/Real scheduler::MARTE_Foundations/GRM/Scheduler ;
Association ::= Extension ;
 Association ::= isDerived::MARTE_PrimitivesTypes/Boolean (ownedEnd::Property)+ (endType::Type)+ memberEnd::Property (navigableOwnedEnd::Property)+ ;
LengthUnitKind ::= (m::ε) | (cm::ε) | (mm::ε) ;
EntryPoint ::= isReentrant::MARTE_PrimitivesTypes/Boolean routine::BehavioralFeature base_BehavioralFeature::BehavioralFeature base_Dependency::Dependency ;
HwResource ::= description::BasicNFP_Types/NFP_String (p_HW_Services::MARTE_DesignModel/HRM/HwLogical/HwGeneral/HwResourceService)+ (r_HW_Services::MARTE_DesignModel/HRM/HwLogical/HwGeneral/HwResourceService)+ (ownedHW::MARTE_DesignModel/HRM/HwLogical/HwGeneral/HwResource)+ (endPoints::MARTE_DesignModel/HRM/HwLogical/HwCommunication/HwEndPoint)+ ;
MultiplicityElement ::= ConnectorEnd ;
 MultiplicityElement ::= Parameter ;
 MultiplicityElement ::= Pin ;
 MultiplicityElement ::= Variable ;
PackageableElement ::= Constraint ;
 PackageableElement ::= Type ;
 PackageableElement ::= GeneralizationSet ;
 PackageableElement ::= Observation ;
 PackageableElement ::= Event ;
 PackageableElement ::= Dependency ;
 PackageableElement ::= ValueSpecification ;
MemoryBroker ::= accessPolicy::MARTE_DesignModel/SRM/SW_Brokering/AccessPolicyKind (memories::TypedElement)+ (memoryBlockAdressSelements::TypedElement)+ (memoryBlockSizeElements::TypedElement)+ (lockServices::BehavioralFeature)+ (unlockServices::BehavioralFeature)+ (mapServices::BehavioralFeature)+ (unMapServices::BehavioralFeature)+ ;
Relationship ::= DirectedRelationship ;
 Relationship ::= Association ;
Action ::= InvocationAction ;
 Action ::= StructuredActivityNode ;
PeriodicPattern ::= period::BasicNFP_Types/NFP_Duration jitter::BasicNFP_Types/NFP_Duration phase::BasicNFP_Types/NFP_Duration ;
FlowSpecification ::= direction::MARTE_Foundations/GCM/DirectionKind base_Interface::Interface ;
TimedConstraint ::= interpretation::TimeTypesLibrary/TimeInterpretationKind ;
TimerResource ::= duration::BasicNFP_Types/NFP_Duration isPeriodic::MARTE_PrimitivesTypes/Boolean ;
AllocateActivityGroup ::= isUnique::MARTE_PrimitivesTypes/Boolean base_ActivityPartition::ActivityPartition ;
SwTimerResource ::= durationElements::TypedElement ;
InstanceSpecification ::= EnumerationLiteral ;
 InstanceSpecification ::= (classifier::Classifier)+ (slot::Slot)+ specification::ValueSpecification ;
InterRepetition ::= repetitionShapeDependence::MARTE_DataTypes/IntegerVector isModulo::MARTE_PrimitivesTypes/Boolean ;
MessageResourceKind ::= (MessageQueue::ε) | (Pipe::ε) | (Blackboard::ε) | (Undef::ε) | (Other::ε) ;
MessageComResource ::= isFixedMessageSize::MARTE_PrimitivesTypes/Boolean meachnism::MARTE_DesignModel/SRM/SW_Interaction/MessageResourceKind (messageSizeElements::TypedElement)+ (messageQueueCapacityElements::TypedElement)+ messageQueuePolicy::MARTE_DesignModel/SRM/SW_Interaction/QueuePolicyKind (sendServices::BehavioralFeature)+ (receiveServices::BehavioralFeature)+ ;
ClockType ::= nature::TimeTypesLibrary/TimeNatureKind unitType::Enumeration isLogical::MARTE_PrimitivesTypes/Boolean resolAttrib::Property maxValAttrib::Property offsetAttrib::Property getTime::Operation setTime::Operation indexToValue::Operation base_Class::Class ;
Classifier ::= BehavioredClassifier ;
 Classifier ::= DataType ;
 Classifier ::= Signal ;
 Classifier ::= Interface ;
 Classifier ::= StructuredClassifier ;
 Classifier ::= Association ;
 Classifier ::= Artifact ;
Comment ::= body::MARTE_PrimitivesTypes/String (annotatedElement::Element)+ ;
BoundedSubtype ::= baseType::DataType minValue::MARTE_PrimitivesTypes/String maxValue::MARTE_PrimitivesTypes/String isMinOpen::MARTE_PrimitivesTypes/Boolean isMaxOpen::MARTE_PrimitivesTypes/Boolean base_DataType::DataType ;
ConnectionPointReference ::= (entry::Pseudostate)+ (exit::Pseudostate)+ state::State ;
Array ::= ε ;
NotificationResource ::= occurence::MARTE_DesignModel/SRM/SW_Interaction/NotificationKind mechanism::MARTE_DesignModel/SRM/SW_Interaction/NotificationResourceKind (occurenceCountElements::TypedElement)+ (maskElements::TypedElement)+ (flushServices::BehavioralFeature)+ (signalServices::BehavioralFeature)+ (waitServices::BehavioralFeature)+ (clearServices::BehavioralFeature)+ ;
HwPLD ::= technology::MARTE_DesignModel/HRM/HwLogical/HwComputing/PLD_Technology organization::MARTE_DesignModel/HRM/HwLogical/HwComputing/PLD_Organization nbLUTs::BasicNFP_Types/NFP_Natural ndLUT_Inputs::BasicNFP_Types/NFP_Natural nbFlipFlops::BasicNFP_Types/NFP_Natural (blocksRAM::MARTE_DesignModel/HRM/HwLogical/HwMemory/HwRAM)+ ;
InteractionUse ::= PartDecomposition ;
 InteractionUse ::= refersTo::Interaction (actualGate::Gate)+ (argument::Action)+ ;
CacheStructure ::= nsSets::BasicNFP_Types/NFP_Natural blockSize::BasicNFP_Types/NFP_Natural associativity::BasicNFP_Types/NFP_Natural ;
Alarm ::= isWatchdog::MARTE_PrimitivesTypes/Boolean (timers::TypedElement)+ ;
String ::= string() ;
TemplateParameter ::= signature::TemplateSignature parameteredElement::ParameterableElement ownedParameteredElement::ParameterableElement default::ParameterableElement ownedDefault::ParameterableElement ;
Resource ::= resMult::MARTE_PrimitivesTypes/Integer isProtected::MARTE_PrimitivesTypes/Boolean isActive::MARTE_PrimitivesTypes/Boolean base_Property::Property base_InstanceSpecification::InstanceSpecification base_Classifier::Classifier base_Lifeline::Lifeline base_ConnectableElement::ConnectableElement ;
InterfaceRealization ::= contract::Interface implementingClassifier::BehavioredClassifier ;
Connector ::= type::Association (redefinedConnector::Connector)+ end::ConnectorEnd kind::ConnectorKind (contract::Behavior)+ ;
ObjectNodeOrderingKind ::= (unordered::ε) | (ordered::ε) | (LIFO::ε) | (FIFO::ε) ;
MutualExclusionResource ::= protectKind::GRM_BasicTypes/ProtectProtocolKind ceiling::MARTE_PrimitivesTypes/Integer otherProtectProtocol::MARTE_PrimitivesTypes/String ;
Enumeration ::= (ownedLiteral::EnumerationLiteral)+ ;
Package ::= Profile ;
 Package ::= (ownedType::Type)+ (packageMerge::PackageMerge)+ (packagedElement::PackageableElement)+ (nestedPackage::Package)+ nestingPackage::Package (profileApplication::ProfileApplication)+ ;
GeneralizationSet ::= isCovering::MARTE_PrimitivesTypes/Boolean isDisjoint::MARTE_PrimitivesTypes/Boolean powertype::Classifier (generalization::Generalization)+ ;
MessageSort ::= (synchCall::ε) | (asynchCall::ε) | (asynchSignal::ε) | (createMessage::ε) | (deleteMessage::ε) | (reply::ε) ;
Collaboration ::= (collaborationRole::ConnectableElement)+ ;
DataType ::= Enumeration ;
 DataType ::= (ownedAttribute::Property)+ (ownedOperation::Operation)+ ;
HwProcessor ::= architecture::BasicNFP_Types/NFP_DataSize mips::BasicNFP_Types/NFP_Natural ipc::BasicNFP_Types/NFP_Real nbCores::BasicNFP_Types/NFP_Natural nbPipelines::BasicNFP_Types/NFP_Natural nbStages::BasicNFP_Types/NFP_Natural nbALUs::BasicNFP_Types/NFP_Natural nbFBUs::BasicNFP_Types/NFP_Natural (ownedISAs::MARTE_DesignModel/HRM/HwLogical/HwComputing/HwISA)+ (predictors::MARTE_DesignModel/HRM/HwLogical/HwComputing/HwBranchPredictor)+ (caches::MARTE_DesignModel/HRM/HwLogical/HwMemory/HWCache)+ (ownedMMUs::MARTE_DesignModel/HRM/HwLogical/HwStorageManager/HwMMU)+ ;
HwROM ::= type::MARTE_DesignModel/HRM/HwLogical/HwMemory/ROM_Type organization::MARTE_DesignModel/HRM/HwLogical/HwMemory/MemoryOrganization ;
Extension ::= isRequired::MARTE_PrimitivesTypes/Boolean metaclass::Class ;
HwClock ::= frequency::BasicNFP_Types/NFP_Frequency ;
DeploymentSpecification ::= deploymentLocation::MARTE_PrimitivesTypes/String executionLocation::MARTE_PrimitivesTypes/String deployment::Deployment ;
Slot ::= definingFeature::StructuralFeature (value::ValueSpecification)+ owningInstance::InstanceSpecification ;
ClockResource ::= ε ;
ExceptionHandler ::= handlerBody::ExecutableNode exceptionInput::ObjectNode (exceptionType::Classifier)+ protectedNode::ExecutableNode ;
MessageKind ::= (complete::ε) | (lost::ε) | (found::ε) | (unknown::ε) ;
ParameterSet ::= (parameter::Parameter)+ (condition::Constraint)+ ;
BehavioralFeature ::= Reception ;
 BehavioralFeature ::= Operation ;
HwCommunicationResource ::= ε ;
AperiodicPattern ::= distribution::BasicNFP_Types/NFP_CommonType ;
ResourceUsage ::= (execTime::BasicNFP_Types/NFP_Duration)+ (msgSize::BasicNFP_Types/NFP_DataSize)+ (allocatedMemory::BasicNFP_Types/NFP_DataSize)+ (usedMemory::BasicNFP_Types/NFP_DataSize)+ (powerPeak::BasicNFP_Types/NFP_Power)+ (energy::BasicNFP_Types/NFP_Energy)+ base_NamedElement::NamedElement (usedResources::MARTE_Foundations/GRM/Resource)+ (subUsage::MARTE_Foundations/GRM/ResourceUsage)+ ;
ComponentKind ::= (Card::ε) | (Channel::ε) | (Chip::ε) | (Port::ε) | (Unit::ε) | (Other::ε) | (Undef::ε) ;
ExecutionPlatformAllocationEnd ::= (allocatedFrom::MARTE_Foundations/Alloc/ApplicationAllocationEnd)+ ;
Observation ::= TimeObservation ;
 Observation ::= DurationObservation ;
Boolean ::= "true" | "false" ;
BFeatureKind ::= (in::ε) | (out::ε) | (inout::ε) | (required::ε) | (provided::ε) | (reqpro::ε) ;
ConcurrentAccessProtocolKind ::= (PIP::ε) | (PCP::ε) | (NoPreemption::ε) | (Undef::ε) | (Other::ε) ;
ProfileApplication ::= appliedProfile::Profile isStrict::MARTE_PrimitivesTypes/Boolean applyingPackage::Package ;
Manifestation ::= utilizedElement::PackageableElement ;
IntegerInterval ::= bound::MARTE_PrimitivesTypes/Integer ;
GaWorkloadBehavior ::= (behavior::MARTE_AnalysisModel/GQAM/GaScenario)+ (demand::MARTE_AnalysisModel/GQAM/GaWorkloadEvent)+ base_NamedElement::NamedElement ;
ObjectNode ::= Pin ;
IntegerVector ::= (vectorElem::MARTE_PrimitivesTypes/Integer)+ ;
Distribute ::= patternShape::RS_Library/ShapeSpecification repetitionSpace::RS_Library/ShapeSpecification fromTiler::RS_Library/TilerSpecification toTiler::RS_Library/TilerSpecification ;
EnergyUnitKind ::= (J::ε) | (KJ::ε) | (Wh::ε) | (KWh::ε) | (mWh::ε) ;
--------------------metamodels::METAH.bgf--------------------
Process ::= procName::String periodic::String declaration::String implementation::String ;
METAHEntry ::= Package ;
 METAHEntry ::= PackageImplementation ;
 METAHEntry ::= ProcessDeclaration ;
 METAHEntry ::= ProcessImplementation ;
 METAHEntry ::= Connection ;
 METAHEntry ::= MacroDeclaration ;
 METAHEntry ::= MacroImplementation ;
METAHFile ::= (entries::METAHEntry)+ ;
Integer ::= integer() ;
MacroImplementation ::= macroImpName::String declaration::String (process::Process)+ (connections::Connection)+ ;
MacroDeclaration ::= name::String (ports::Port)+ ;
Connection ::= compSrc::String portSrc::String compDest::String portDest::String ;
ProcessAttribute ::= attName::String attValue::Integer attValueType::String ;
Attribute ::= attName::String attValue::Integer attValueType::String attType::String ;
ProcessDeclaration ::= procDecName::String (ports::Port)+ ;
Data ::= dataName::String ;
Boolean ::= "true" | "false" ;
PackageImplementation ::= implementationName::String implements::String (attributes::Attribute)+ ;
Package ::= packName::String (data::Data)+ ;
String ::= string() ;
Port ::= portName::String portCom::String portPackage::String portType::String ;
ProcessImplementation ::= procImpName::String declaration::String (processAttributes::ProcessAttribute)+ ;
--------------------metamodels::MICRO.owl.bgf--------------------
PerformanceTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Sponzorship ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
Programme ::= belongsToEvent::ConferenceEvent ;
Decision ::= Acceptance ;
 Decision ::= Rejection ;
 Decision ::= Acceptance | Rejection ;
BreakEvent ::= CoffeeBreak ;
 BreakEvent ::= FreeTimeBreak ;
 BreakEvent ::= MealBreak ;
 BreakEvent ::= CoffeeBreak | FreeTimeBreak | MealBreak ;
Preference ::= ε ;
Sponsor ::= hasMail::String worksForCompany::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item ;
Organisation ::= Organising_Agency ;
 Organisation ::= Academic_Institution ;
 Organisation ::= Proceedings_Publisher ;
 Organisation ::= (publisherOf::Thing)+ technicallyOrganises::Thing ;
AcademiaOrganization ::= isProviderOf::Sponsorship ;
TraditionalLecture ::= hasAcronym::String ;
RadioCommunicationsTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
ConferenceMember ::= ConferenceChair ;
 ConferenceMember ::= AssociatedChair ;
 ConferenceMember ::= ProgramCommitteeMember ;
 ConferenceMember ::= Chairman ;
 ConferenceMember ::= memberOfConference::Conference ;
AccommodationPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
MedicineTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
TwoLevelConference ::= isOrganizedBy::OrganizingCommittee annualOrder::Integer takesPlace::Location hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country ;
SignalProcessingTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
SessionChair ::= hasMail::String worksForCompany::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item ;
Time ::= Deadline ;
 Time ::= Trip_day ;
 Time ::= Conference_days ;
 Time ::= Deadline | Trip_day | Conference_days ;
SteeringCommittee ::= organizes::Conference ;
RatedPapers ::= hasRating::ReviewRating ;
User ::= Committee ;
 User ::= Administrator ;
 User ::= recieve::Document (create::Thing)+ submit::Document ;
Renting ::= ε ;
ConferenceChair ::= memberOfConference::Conference ;
 ConferenceChair ::= hasMail::String worksForCompany::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item ;
Rejection ::= ε ;
Place ::= DiningPlace ;
 Place ::= ConferenceVenuePlace ;
 Place ::= MeetingRoomPlace ;
 Place ::= AccommodationPlace ;
 Place ::= Building ;
 Place ::= Session_room ;
 Place ::= Hotel_room ;
 Place ::= Conference_hall ;
 Place ::= Main_office ;
 Place ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
EEnum ::= (Compilers::ε) | (Microarchitecture::ε) | (Systems::ε) | (ForwardLookingIdea::ε) | (male::ε) | (female::ε) | (high::ε) | (medium::ε) | (low::ε) | (very high::ε) ;
AcceptRating ::= ε ;
Form ::= Hotel_registration_form ;
 Form ::= Registration_form ;
 Form ::= Author_information_form ;
 Form ::= Hotel_registration_form | Registration_form | Author_information_form ;
GovernmentOrganization ::= isProviderOf::Sponsorship ;
CallForManuscripts ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
MealMenu ::= isMenuOf::MealEvent ;
ClosingTalk ::= ε ;
Speaker ::= Author ;
 Speaker ::= ε ;
Bid ::= adjustedBy::Reviewer ;
MealBreak ::= ε ;
Publisher ::= issues::Conference_proceedings ;
Description ::= ε ;
OutsideReferee ::= hasMail::String worksForCompany::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item ;
Attendee ::= hasMail::String worksForCompany::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item ;
Registration ::= is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime hasTopic::Topic expectedAttendance::Integer isPartOf::Conference (has_result::Thing)+ sent_by::Person ;
 Registration ::= ε ;
OperatingTopicsystems ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
WorksopProposal ::= isSubmittedBy::Author hasAuthor::Author submissionDeadline::dateTime ;
Location ::= locationOf::Event ;
Lecturer ::= Worker_lecturer ;
 Lecturer ::= Student_lecturer ;
 Lecturer ::= Worker_lecturer | Student_lecturer ;
Departure ::= ε ;
Listener ::= ε ;
Building ::= Presenter_house ;
 Building ::= Conference_restaurant ;
 Building ::= Conference_building ;
 Building ::= Conference_airport ;
 Building ::= Conference_hotel ;
 Building ::= Sponsor_company_house ;
 Building ::= Presenter_university ;
 Building ::= Presenter_house | Conference_restaurant | Conference_building | Conference_airport | Conference_hotel | Sponsor_company_house | Presenter_university ;
GeneralCoChair ::= organizes::Conference ;
ConferenceDinner ::= hasMenu::MealMenu ;
ComputerNetworksEnterpriseTopic ::= ε ;
Thing ::= Role ;
 Thing ::= Activity ;
 Thing ::= Detail ;
 Thing ::= Review_expertise ;
 Thing ::= Review_preference ;
 Thing ::= date ;
 Thing ::= URL ;
 Thing ::= conference_setup ;
 Thing ::= Contribution ;
 Thing ::= Event ;
 Thing ::= Person ;
 Thing ::= Place ;
 Thing ::= City ;
 Thing ::= OrganizingCommittee ;
 Thing ::= ActivitySubmissionForm ;
 Thing ::= DoubleBlindReview ;
 Thing ::= Organizer ;
 Thing ::= Document ;
 Thing ::= Role | Activity | Detail | Review_expertise | Review_preference | date | URL | conference_setup | Contribution | Event | Person | Place | City | OrganizingCommittee | ActivitySubmissionForm | DoubleBlindReview ;
PaperSubmissionChair ::= organizes::Conference ;
ProgramCommitteeChair ::= endReview::Review ;
SatelliteAndSpaceCommunicationsTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
WorkShop ::= is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime hasTopic::Topic expectedAttendance::Integer isPartOf::Conference (has_result::Thing)+ sent_by::Person ;
Scholar ::= studyAt::University ;
Excursion ::= ε ;
TPCMember ::= hasMail::String worksForCompany::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item ;
Assistant ::= hasMail::String worksForCompany::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item ;
ConferenceEvent ::= NonAcademicEvent ;
 ConferenceEvent ::= AcademicEvent ;
 ConferenceEvent ::= hasAttendee::Person hasLocation::Place hasProgramme::Programme hasEndDateTime::dateTime hasStartDateTime::dateTime ;
MobileComputingTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Research ::= Simulating ;
 Research ::= Modelling ;
 Research ::= Simulating | Modelling ;
ConferenceSession ::= ε ;
Member ::= earlyRegistration::Boolean ;
SubjectArea ::= ε ;
ComputerNetworksMeasurementsTopic ::= ε ;
NGO ::= isProviderOf::Sponsorship ;
ProgramCoChair ::= organizes::Conference ;
Car ::= ε ;
CommunicationTheoryTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
AcademicEvent ::= TalkEvent ;
 AcademicEvent ::= OrganizationalMeeting ;
 AcademicEvent ::= PaperPresentation ;
 AcademicEvent ::= hasCall::Call ;
CallForPapers ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
CommunicationsTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
ComputerNetworksTopic ::= ComputerNetworksEnterpriseTopic ;
 ComputerNetworksTopic ::= ComputerNetworksSwitchingTopic ;
 ComputerNetworksTopic ::= ComputerNetworksSensorTopic ;
 ComputerNetworksTopic ::= ComputerNetworksSecurityTopic ;
 ComputerNetworksTopic ::= ComputerNetworksOpticalTopic ;
 ComputerNetworksTopic ::= ComputerNetworksMeasurementsTopic ;
 ComputerNetworksTopic ::= ComputerNetworksManagementTopic ;
 ComputerNetworksTopic ::= ComputerNetworksAapplicationsTopic ;
 ComputerNetworksTopic ::= ComputerNetworksEnterpriseTopic | ComputerNetworksSwitchingTopic | ComputerNetworksSensorTopic | ComputerNetworksSecurityTopic | ComputerNetworksOpticalTopic | ComputerNetworksMeasurementsTopic | ComputerNetworksManagementTopic | ComputerNetworksAapplicationsTopic ;
SecurityTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Reception ::= ε ;
University ::= scientificallyOrganises::Academic_Institution isProviderOf::Sponsorship ;
DiningPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
PaperAbstract ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
Administrator ::= finalizePaperAssignment::Conference runPaperAssignmentTools::Conference enableVirtualMeeting::Conference startReviewerBidding::Conference assignReviewer::Reviewer rejectPaper::Paper enterConferenceDetails::Conference printHardcopyMailingManifests::Conference setMaxPapers::ProgramCommitteeMember enterReviewCriteria::Conference acceptPaper::Paper addProgramCommitteeMember::ProgramCommitteeMember approve::Event assign::Role ;
Author ::= AuthorNotReviewer ;
 Author ::= Co-author ;
 Author ::= Corresponding_Author ;
 Author ::= Author_cd_proceedings_included ;
 Author ::= Lecturer ;
 Author ::= Plenary_lecture_speaker ;
 Author ::= Tutorial_speaker ;
 Author ::= Author_book_proceedings_included ;
 Author ::= Presenter ;
 Author ::= submitPaper::Paper writePaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing ;
Preview ::= ε ;
Workshop ::= ε ;
StudentAdvocate ::= organizes::Conference ;
PaperPresentation ::= relatedToPaper::AcceptedPaper ;
Delegate ::= One_day_presenter ;
 Delegate ::= Technical_commitee ;
 Delegate ::= Listener ;
 Delegate ::= Session_chair ;
 Delegate ::= Speaker ;
 Delegate ::= Hotel_presenter ;
 Delegate ::= Non_speaker ;
 Delegate ::= IASTED_non_member ;
 Delegate ::= Conference_Hiker ;
 Delegate ::= IASTED_member ;
 Delegate ::= One_day_presenter | Technical_commitee | Listener | Session_chair | Speaker | Hotel_presenter | Non_speaker | IASTED_non_member | Conference_Hiker | IASTED_member ;
Chair ::= was_a_committee_chair_of::Committee ;
Inforamtion ::= ε ;
ComputerArchitectureTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
WorkshopTutorialChair ::= organizes::Conference ;
Money ::= Tax ;
 Money ::= Fee ;
 Money ::= Sponzorship ;
 Money ::= Tip ;
 Money ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
AntennasTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
OrganizingCommittee ::= ProgramCoChair ;
 OrganizingCommittee ::= PublicationsChair ;
 OrganizingCommittee ::= WorkshopTutorialChair ;
 OrganizingCommittee ::= RegistrationChair ;
 OrganizingCommittee ::= StudentAdvocate ;
 OrganizingCommittee ::= FinanceChair ;
 OrganizingCommittee ::= PaperSubmissionChair ;
 OrganizingCommittee ::= PublicityWebChair ;
 OrganizingCommittee ::= SteeringCommittee ;
 OrganizingCommittee ::= GeneralCoChair ;
 OrganizingCommittee ::= organizes::Conference ;
OrganizationalMeeting ::= hasCall::Call ;
PersonalReviewHistory ::= isReviewHistoryOf::Reviewer ;
MicroelectronicsTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Template ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
ComputerNetworksOpticalTopic ::= ε ;
Role ::= Admin_Role ;
 Role ::= Author_Role ;
 Role ::= Committe_Role ;
 Role ::= Head_Role ;
 Role ::= Reviewer_Role ;
 Role ::= assigned_by::Administrator ;
Chairman ::= ConferenceChair ;
 Chairman ::= AssociatedChair ;
 Chairman ::= ProgramCommitteeChair ;
 Chairman ::= hasMail::String worksForCompany::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item memberOfConference::Conference ;
AccpetIfRoomRating ::= ε ;
TutorialProposal ::= isSubmittedBy::Author hasAuthor::Author submissionDeadline::dateTime ;
RejectedPaper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
ParallelAndDistributedComputingTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Tax ::= Value_added_tax ;
 Tax ::= Departure_tax ;
 Tax ::= Value_added_tax | Departure_tax ;
City ::= Presenter_city ;
 City ::= Conference_city ;
 City ::= Sponsor_city ;
 City ::= Trip_city ;
 City ::= Presenter_city | Conference_city | Sponsor_city | Trip_city ;
Presenter ::= Invited_Speaker ;
MultimediaTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
CryptographyTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Modelling ::= ε ;
ReviewQuestion ::= TextualReviewQuestion ;
 ReviewQuestion ::= NumericalReviewQuestion ;
 ReviewQuestion ::= TextualReviewQuestion | NumericalReviewQuestion ;
Call ::= CallForPapers ;
 Call ::= CallForReviews ;
 Call ::= CallForManuscripts ;
 Call ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
Tutorial ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Email ::= Notification_Email ;
 Email ::= Group_Email ;
 Email ::= Approval_Email ;
 Email ::= Rejection_Email ;
 Email ::= Notification_Email | Group_Email | Approval_Email | Rejection_Email ;
Regular ::= earlyRegistration::Boolean ;
Tip ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
Event ::= Symposium ;
 Event ::= Social_event ;
 Event ::= Administrative_event ;
 Event ::= Working_event ;
 Event ::= pc_meeting ;
 Event ::= session ;
 Event ::= Social_Event ;
 Event ::= Scientific_Event ;
 Event ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location ;
ProgramCommittee ::= hasProgramCommitteeMember::ProgramCommitteeMember ;
Transparency ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
Deadline ::= Deadline_hotel_reservation ;
 Deadline ::= Submissions_deadline ;
 Deadline ::= Deadline_for_notification_of_acceptance ;
 Deadline ::= Registation_deadline ;
 Deadline ::= Camera_ready_manuscript_deadline ;
 Deadline ::= done_till::date ;
Review ::= Meta-Review ;
 Review ::= Positive_Review ;
 Review ::= Negative_Review ;
 Review ::= Neutral_Review ;
 Review ::= writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::activity review_written_by::Reviewer reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer ;
MealEvent ::= ConferenceDinner ;
 MealEvent ::= hasMenu::MealMenu ;
Acceptance ::= ε ;
PublicityWebChair ::= organizes::Conference ;
Session ::= Conference_Session ;
 Session ::= Regular_Session ;
 Session ::= Poster_Session ;
 Session ::= Demo_Session ;
 Session ::= Workshop_Session ;
 Session ::= Speaker_lecture ;
 Session ::= Conference_Session | Regular_Session | Poster_Session | Demo_Session | Workshop_Session | Speaker_lecture ;
Country ::= ε ;
Person ::= ConferenceMember ;
 Person ::= ExternalReviewer ;
 Person ::= User ;
 Person ::= Conference_participant ;
 Person ::= Conference_contributor ;
 Person ::= Committee_member ;
 Person ::= Conference_applicant ;
 Person ::= Track-workshop_chair ;
 Person ::= Scholar ;
 Person ::= Participant ;
 Person ::= Member_PC ;
 Person ::= Chair_PC ;
 Person ::= Science_Worker ;
 Person ::= Assistant ;
 Person ::= Volunteer ;
 Person ::= chair ;
 Person ::= participant ;
 Person ::= ConferenceChair ;
 Person ::= Attendee ;
 Person ::= SessionChair ;
 Person ::= TPCMember ;
 Person ::= Paper_Author ;
 Person ::= Conference_Participant ;
 Person ::= Agency_Staff_Member ;
 Person ::= Possible_Reviewer ;
 Person ::= Student ;
 Person ::= Delegate ;
 Person ::= Sponsor ;
 Person ::= OutsideReferee ;
 Person ::= ProgramCommitteeMember ;
 Person ::= Chairman ;
 Person ::= Administrator ;
 Person ::= Organizer ;
 Person ::= hasMail::String worksForCompany::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item ;
CoffeeBreak ::= ε ;
ProgramCommitteeMember ::= ProgramCommitteeChair ;
 ProgramCommitteeMember ::= memberOfProgramCommittee::ProgramCommittee maxPapers::Integer addedBy::Administrator ;
State ::= Presenter_state ;
 State ::= Conference_state ;
 State ::= Sponsor_state ;
 State ::= Presenter_state | Conference_state | Sponsor_state ;
Detail ::= ε ;
Request ::= Help_Request ;
Poster ::= is_submitted_at::Conference_volume ;
 Poster ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
Paper ::= PaperAbstract ;
 Paper ::= PaperFullVersion ;
 Paper ::= Invited_Paper ;
 Paper ::= Short_Paper ;
 Paper ::= Full_Paper ;
 Paper ::= Accepted_Paper ;
 Paper ::= Rejected_Paper ;
 Paper ::= Undecided_Paper ;
 Paper ::= ActivePaper ;
 Paper ::= PendingPaper ;
 Paper ::= WithdrawnPaper ;
 Paper ::= RejectedPaper ;
 Paper ::= AcceptedPaper ;
 Paper ::= PublishedPaper ;
 Paper ::= Camera_Ready_Paper ;
 Paper ::= Workshop_Paper ;
 Paper ::= Industrial_Paper ;
 Paper ::= Conference_Paper ;
 Paper ::= Submitted_Paper ;
 Paper ::= Poster_Paper ;
 Paper ::= Regular_Paper ;
 Paper ::= Demo_Paper ;
 Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
RegistrationChair ::= organizes::Conference ;
Submission ::= Final_manuscript ;
 Submission ::= Initial_manuscipt ;
 Submission ::= Final_manuscript | Initial_manuscipt ;
Volunteer ::= hasMail::String worksForCompany::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item ;
WithdrawnPaper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
Fee ::= Registration_fee ;
 Fee ::= Hotel_fee ;
 Fee ::= Fee_for_extra_trip ;
 Fee ::= Registration_fee | Hotel_fee | Fee_for_extra_trip ;
Proceedings ::= Conference_Proceedings ;
Lecture ::= Plenary_lecture ;
 Lecture ::= QualitatvieLecture ;
 Lecture ::= TraditionalLecture ;
 Lecture ::= Session ;
 Lecture ::= hasAcronym::String ;
PublishedPaper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
Committee ::= Program_committee ;
 Committee ::= Organizing_committee ;
 Committee ::= Steering_committee ;
 Committee ::= has_members::Committee_member was_a_committee_of::Conference_volume has_a_committee_co-chair::Co-chair has_a_committee_chair::Chair ;
Company ::= isProviderOf::Sponsorship ;
DoubleBlindReview ::= isExecutedBy::Reviewer ;
ReviewForm ::= ε ;
QualitatvieLecture ::= hasAcronym::String ;
Assistance ::= ε ;
CommitteeMember ::= isMemberOf::Conference ;
NumericalReviewQuestion ::= ε ;
PendingPaper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
Symposium ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location ;
Organization ::= Company ;
 Organization ::= AcademiaOrganization ;
 Organization ::= IndustryOrganization ;
 Organization ::= NGO ;
 Organization ::= GovernmentOrganization ;
 Organization ::= University ;
 Organization ::= isProviderOf::Sponsorship ;
PowerlineTransmissionTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
IndustryOrganization ::= isProviderOf::Sponsorship ;
TestOnlyTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
WeekRejectRating ::= ε ;
ComputerNetworksSecurityTopic ::= ε ;
URL ::= Event_URL ;
 URL ::= Senior_Reviewer_URL ;
 URL ::= Chair_URL ;
 URL ::= Contact_Person_URL ;
 URL ::= Regular_Reviewer_URL ;
 URL ::= Event_URL | Senior_Reviewer_URL | Chair_URL | Contact_Person_URL | Regular_Reviewer_URL ;
AuthorNotReviewer ::= submitPaper::Paper writePaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing ;
PersonalPublicationHistory ::= ε ;
Trip ::= ε ;
Banquet ::= ε ;
Abstract ::= Tutorial_Abstract ;
 Abstract ::= Invited_Talk_Abstract ;
 Abstract ::= part_of_article::article (is_the_1th_part_of::Thing)+ ;
Cheque ::= ε ;
Flyer ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
ActivitySubmissionForm ::= TutorialProposal ;
 ActivitySubmissionForm ::= WorksopProposal ;
 ActivitySubmissionForm ::= Paper ;
 ActivitySubmissionForm ::= isSubmittedBy::Author hasAuthor::Author submissionDeadline::dateTime ;
AssociatedChair ::= memberOfConference::Conference ;
Taxi ::= ε ;
PaperFullVersion ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
Conference ::= Conference_volume ;
 Conference ::= TwoLevelConference ;
 Conference ::= SingleLevelConference ;
 Conference ::= isOrganizedBy::OrganizingCommittee annualOrder::Integer takesPlace::Location hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country ;
RejectRating ::= ε ;
Computer ::= ε ;
Document ::= Email ;
 Document ::= Submission ;
 Document ::= Template ;
 Document ::= article ;
 Document ::= SlideSet ;
 Document ::= Programme ;
 Document ::= MealMenu ;
 Document ::= Programme_Brochure ;
 Document ::= Flyer ;
 Document ::= Web_Site ;
 Document ::= Multi-author_Volume ;
 Document ::= Form ;
 Document ::= Mailing_list ;
 Document ::= Record_of_attendance ;
 Document ::= Brief_introduction_for_Session_chair ;
 Document ::= Invitation_letter ;
 Document ::= Viza ;
 Document ::= Transparency ;
 Document ::= Payment_document ;
 Document ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
Introduction ::= Introduction_of_speaker ;
Viza ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
Presentation ::= Invited_talk ;
 Presentation ::= PowerPoint_presentation ;
 Presentation ::= Video_presentation ;
 Presentation ::= is_given_by::Active_conference_participant ;
SingleLevelConference ::= isOrganizedBy::OrganizingCommittee annualOrder::Integer takesPlace::Location hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country ;
Sponsorship ::= TravelGrant ;
 Sponsorship ::= providedBy::Organization hasCostCurrency::String hasCostAmount::Integer ;
ReviewRating ::= WeekRejectRating ;
 ReviewRating ::= AcceptRating ;
 ReviewRating ::= AccpetIfRoomRating ;
 ReviewRating ::= RejectRating ;
 ReviewRating ::= WeekRejectRating | AcceptRating | AccpetIfRoomRating | RejectRating ;
ConferenceVenuePlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
WirelessCommunicationsTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Item ::= Transport_vehicle ;
 Item ::= Card ;
 Item ::= Audiovisual_equipment ;
 Item ::= Publication ;
 Item ::= Document ;
 Item ::= go_through::Activity (is_used_for::Thing)+ is_signed_by::Person is_made_from::Item is_sent_after::Time is_needed_for::Person is_sent_before::Time is_prepared_by::Person is_used_by::Person is_given_to::Person is_sent_by::Person is_writen_by::Person ;
String ::= string() ;
Currency ::= ε ;
TextualReviewQuestion ::= ε ;
Card ::= Credit_card ;
CallForReviews ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
Contribution ::= Poster ;
 Contribution ::= Short_paper ;
 Contribution ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
Activity ::= Event_Creation ;
 Activity ::= Request ;
 Activity ::= Event_Approval ;
 Activity ::= Registration ;
 Activity ::= Activity_before_conference ;
 Activity ::= Conference_activity ;
 Activity ::= Activity_after_conference ;
 Activity ::= WorkShop ;
 Activity ::= Lecture ;
 Activity ::= is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime hasTopic::Topic expectedAttendance::Integer isPartOf::Conference (has_result::Thing)+ sent_by::Person ;
TalkEvent ::= ClosingTalk ;
 TalkEvent ::= WelcomeTalk ;
 TalkEvent ::= ClosingTalk | WelcomeTalk ;
ComputerNetworksManagementTopic ::= ε ;
FinanceChair ::= organizes::Conference ;
Track ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
CADTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
NonAcademicEvent ::= MealEvent ;
 NonAcademicEvent ::= BreakEvent ;
 NonAcademicEvent ::= SocialEvent ;
 NonAcademicEvent ::= MealEvent | BreakEvent | SocialEvent ;
Reviewer ::= Meta-Reviewer ;
 Reviewer ::= assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper writeReview::Review assignExternalReviewer::ExternalReviewer invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ writes_review::Review hasReviewHistory::PersonalReviewHistory executes::DoubleBlindReview ;
ComputerNetworksSwitchingTopic ::= ε ;
Integer ::= integer() ;
PublicationsChair ::= organizes::Conference ;
Student ::= earlyRegistration::Boolean ;
 Student ::= hasMail::String worksForCompany::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item ;
ComputerNetworksSensorTopic ::= ε ;
PersonalHistory ::= PersonalPublicationHistory ;
 PersonalHistory ::= PersonalReviewHistory ;
 PersonalHistory ::= PersonalPublicationHistory | PersonalReviewHistory ;
Participant ::= Member ;
 Participant ::= Student ;
 Participant ::= Regular ;
 Participant ::= earlyRegistration::Boolean ;
MeetingRoomPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
SlideSet ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
ExternalReviewer ::= assignedByReviewer::Reviewer ;
Topic ::= ParallelAndDistributedComputingTopic ;
 Topic ::= WirelessCommunicationsTopic ;
 Topic ::= OperatingTopicsystems ;
 Topic ::= ComputerNetworksTopic ;
 Topic ::= SatelliteAndSpaceCommunicationsTopic ;
 Topic ::= CADTopic ;
 Topic ::= MultimediaTopic ;
 Topic ::= CommunicationsTopic ;
 Topic ::= PowerlineTransmissionTopic ;
 Topic ::= AntennasTopic ;
 Topic ::= PerformanceTopic ;
 Topic ::= SignalProcessingTopic ;
 Topic ::= MicroelectronicsTopic ;
 Topic ::= TestOnlyTopic ;
 Topic ::= RadioCommunicationsTopic ;
 Topic ::= ComputerArchitectureTopic ;
 Topic ::= MedicineTopic ;
 Topic ::= SecurityTopic ;
 Topic ::= MobileComputingTopic ;
 Topic ::= CryptographyTopic ;
 Topic ::= CommunicationTheoryTopic ;
 Topic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Organizer ::= CommitteeMember ;
 Organizer ::= Reviewer ;
WelcomeTalk ::= ε ;
SocialEvent ::= Excursion ;
 SocialEvent ::= Reception ;
 SocialEvent ::= Excursion | Reception ;
Account ::= registred_by::Person ;
Publication ::= Cd_proceening ;
 Publication ::= Book_proceeding ;
 Publication ::= Cd_proceening | Book_proceeding ;
ContactInformation ::= hasCity::String hasStreet::String hasPostalCode::String hasPhone::String ;
Misc ::= ε ;
ComputerNetworksAapplicationsTopic ::= ε ;
Boolean ::= "true" | "false" ;
FreeTimeBreak ::= ε ;
ActivePaper ::= RatedPapers ;
 ActivePaper ::= hasRating::ReviewRating ;
AcceptedPaper ::= relatedToEvent::PaperPresentation ;
Van ::= ε ;
TravelGrant ::= providedBy::Organization hasCostCurrency::String hasCostAmount::Integer ;
Simulating ::= ε ;
--------------------metamodels::MSOfficeExcel_SpreadsheetMLBasicDef.bgf--------------------
Comment ::= c_cell::Cell com_data::Data author::String showAlways::Boolean ;
Integer ::= integer() ;
CustomDocumentPropertiesCollection ::= cdp_workbook::Workbook (customDocumentProperties::CustomDocumentProperty)+ ;
DateTimeTypeValue ::= value::DateTimeType ;
Row ::= r_table::Table (r_cells::Cell)+ autoFitHeight::Boolean height::Double ;
Workbook ::= wb_smartTags::SmartTagsCollection wb_docProperties::DocumentPropertiesCollection wb_customDocProperties::CustomDocumentPropertiesCollection (wb_worksheets::Worksheet)+ ;
Column ::= c_table::Table autoFitWidth::Boolean width::Double ;
DateTimeType ::= year::Integer month::Integer day::Integer hour::Integer minute::Integer second::Integer ;
VersionType ::= n::Integer nn::Integer ;
String ::= string() ;
TableElement ::= ColOrRowElement ;
 TableElement ::= Cell ;
Table ::= t_worksheet::Worksheet (t_cols::Column)+ (t_rows::Row)+ defaultColumnWidth::Double defaultRowHeight::Double expandedColumnCount::Integer expandedRowCount::Integer leftCell::Integer topCell::Integer fullColumns::Boolean fullRows::Boolean ;
Worksheet ::= ws_workbook::Workbook ws_table::Table name::String ;
DocumentPropertiesCollection ::= dp_workbook::Workbook title::String subject::String keywords::String description::String category::String author::String lastAuthor::String manager::String company::String hyperlinkBase::String revision::Integer presentationFormat::String guid::String appName::String version::VersionType totalTime::Integer lastPrinted::DateTimeType created::DateTimeType lastSaved::DateTimeType pages::Integer words::Integer characters::Integer charactersWithSpaces::Integer bytes::Integer lines::Integer paragraphs::Integer ;
SmartTagType ::= smartTagType_ste::SmartTagsCollection namespaceuri::String name::String url::String ;
ValueType ::= StringValue ;
 ValueType ::= NumberValue ;
 ValueType ::= DateTimeTypeValue ;
 ValueType ::= BooleanValue ;
 ValueType ::= ErrorValue ;
Data ::= d_cell::Cell d_comment::Comment value::ValueType ;
StyledElement ::= Table ;
 StyledElement ::= TableElement ;
ErrorValue ::= vt_data::Data ;
BooleanValue ::= value::Boolean ;
Boolean ::= "true" | "false" ;
NumberValue ::= value::Double ;
ColOrRowElement ::= Column ;
 ColOrRowElement ::= Row ;
Cell ::= c_row::Row (c_smartTags::SmartTagsCollection)+ arrayRange::String formula::String hRef::String mergeAcross::Double mergeDown::Double c_data::Data c_comment::Comment ;
CustomDocumentProperty ::= customDocumentProperty_cdpe::CustomDocumentPropertiesCollection name::String value::ValueType ;
SmartTagsCollection ::= st_workbook::Workbook st_cell::Cell (smartTagTypes::SmartTagType)+ ;
StringValue ::= value::String ;
--------------------metamodels::MSOfficeExcel_SpreadsheetMLPrintingSetup.bgf--------------------
Comment ::= c_cell::Cell com_data::Data author::String showAlways::Boolean ;
Footer ::= f_pageSetup::PageSetup ;
Row ::= r_table::Table (r_cells::Cell)+ autoFitHeight::Boolean height::Double ;
CommentsLayoutType ::= (clt_InPlace::ε) | (clt_PrintNone::ε) | (clt_SheetEnd::ε) ;
Column ::= c_table::Table autoFitWidth::Boolean width::Double ;
DisplayDrawingObjectsType ::= (ddot_displayShapes::ε) | (ddot_placeHolders::ε) | (ddot_hideAll::ε) ;
String ::= string() ;
ExcelWorkbook ::= ew_workbook::Workbook selectedSheets::Integer windowHidden::Boolean hideHorizontalScrollBar::Boolean hideVerticalScrollBar::Boolean hideWorkbookTabs::Boolean windowHeight::Double windowWidth::Double windowTopX::Double windowTopY::Double activeSheet::Integer activeChart::String firstVisibleSheet::Integer hidePivotTableFieldList::Boolean protectStructure::Boolean protectWindows::Boolean displayInkNotes::Boolean embedSaveSmartTags::Boolean futureVer::String tabRatio::Integer windowIconic::Boolean displayDrawingObjects::DisplayDrawingObjectsType createBackup::Boolean calculation::CalculationWorkbookType doNotCalculateBeforeSave::Boolean date1904::Boolean refModeR1C1::Boolean iteration::Boolean maxIterations::Integer maxChange::Double precisionAsDisplayed::Boolean doNotSaveLinkValues::Boolean noAutoRecover::Boolean acceptLabelsInFormulas::Boolean uncalced::Boolean ;
Table ::= t_worksheet::Worksheet (t_cols::Column)+ (t_rows::Row)+ defaultColumnWidth::Double defaultRowHeight::Double expandedColumnCount::Integer expandedRowCount::Integer leftCell::Integer topCell::Integer fullColumns::Boolean fullRows::Boolean ;
TableElement ::= ColOrRowElement ;
 TableElement ::= Cell ;
Header ::= h_pageSetup::PageSetup ;
VisibleType ::= (vt_SheetVisible::ε) | (vt_SheetHidden::ε) | (vt_SheetVeryHidden::ε) ;
ValueType ::= StringValue ;
 ValueType ::= NumberValue ;
 ValueType ::= DateTimeTypeValue ;
 ValueType ::= BooleanValue ;
 ValueType ::= ErrorValue ;
ErrorValue ::= vt_data::Data ;
PageMarginsInfo ::= pm_pageSetup::PageSetup left::Double right::Double top::Double bottom::Double ;
SmartTagsCollection ::= st_workbook::Workbook st_cell::Cell (smartTagTypes::SmartTagType)+ ;
Integer ::= integer() ;
WorksheetOptionsElt ::= wo_worksheet::Worksheet fitToPage::Boolean doNotDisplayColHeaders::Boolean doNotDisplayRowHeaders::Boolean gridlineColor::String name::String excelWorksheetType::ExcelWorksheetTypeType intlMacro::Boolean unsynced::Boolean selected::Boolean codeName::String displayPageBreak::Boolean transitionExpressionEvaluation::Boolean transitionFormulaEntry::Boolean zoom::Integer pageBreakZoom::Integer showPageBreakZoom::Boolean defaultRowHeight::Integer defaultColumnWidth::Integer standardWidth::Integer visible::VisibleType leftColumnVisible::Integer displayRightToLeft::Boolean gridlineColorIndex::Integer displayFormulas::Boolean doNotDisplayGridlines::Boolean doNotDisplayHeadings::Boolean doNotDisplayOutline::Boolean applyAutomaticOutlineStyles::Boolean noSummaryRowsBelowDetail::Boolean noSummaryColumnsRightDetail::Boolean doNotDisplayZeros::Boolean activeRow::Integer activeColumn::Integer filterOn::Boolean rangeSelection::String topRowVisible::Integer topRowBottomPane::Integer leftColumnRightPane::Integer activePane::Integer splitHorizontal::Integer splitVertical::Integer freezePanes::Boolean frozenNoSplit::Boolean tabColorIndex::Integer protectContentst::Boolean protectObjects::Boolean protectScenarios::Boolean enableSelection::EnableSelectionType allowFormatCells::Boolean allowSizeCols::Boolean allowSizeRows::Boolean allowInsertCols::Boolean allowInsertRows::Boolean allowInsertHyperlinks::Boolean allowDeleteCols::Boolean allowDeleteRows::Boolean allowSort::Boolean allowFilter::Boolean allowUsePivotTables::Boolean wo_pageSetup::PageSetup wo_print::Print ;
CalculationWorkbookType ::= (cwt_automaticCalculation::ε) | (cwt_manualCalculation::ε) | (cwt_semiAutomaticCalculation::ε) ;
CustomDocumentPropertiesCollection ::= cdp_workbook::Workbook (customDocumentProperties::CustomDocumentProperty)+ ;
DateTimeTypeValue ::= value::DateTimeType ;
Workbook ::= wb_smartTags::SmartTagsCollection wb_docProperties::DocumentPropertiesCollection wb_customDocProperties::CustomDocumentPropertiesCollection wb_excelWorkbook::ExcelWorkbook (wb_worksheets::Worksheet)+ ;
DateTimeType ::= year::Integer month::Integer day::Integer hour::Integer minute::Integer second::Integer ;
VersionType ::= n::Integer nn::Integer ;
PageSetup ::= ps_worksheetOptions::WorksheetOptionsElt ps_layout::Layout ps_header::Header ps_footer::Footer ps_pageMargins::PageMarginsInfo ;
Worksheet ::= ws_workbook::Workbook ws_table::Table name::String protected::Boolean rightToLeft::Boolean w_worksheetOptions::WorksheetOptionsElt ;
Print ::= p_worksheetOptions::WorksheetOptionsElt fitWidth::Integer fitHeight::Integer leftToRight::Boolean blackAndWhite::Boolean draftQuality::Boolean commentsLayout::CommentsLayoutType scale::Integer printErrors::String validPrinterInfo::Boolean paperSizeIndex::Integer horizontalResolution::Integer verticalResolution::Integer gridlines::Boolean numberOfCopies::Integer rowColHeadings::Boolean ;
DocumentPropertiesCollection ::= dp_workbook::Workbook title::String subject::String keywords::String description::String category::String author::String lastAuthor::String manager::String company::String hyperlinkBase::String revision::Integer presentationFormat::String guid::String appName::String version::VersionType totalTime::Integer lastPrinted::DateTimeType created::DateTimeType lastSaved::DateTimeType pages::Integer words::Integer characters::Integer charactersWithSpaces::Integer bytes::Integer lines::Integer paragraphs::Integer ;
SmartTagType ::= smartTagType_ste::SmartTagsCollection namespaceuri::String name::String url::String ;
ExcelWorksheetTypeType ::= (ewt_Worksheet::ε) | (ewt_Chart::ε) | (ewt_Macro::ε) | (ewt_Dialog::ε) ;
OrientationType ::= (ot_Landscape::ε) | (ot_Portrait::ε) ;
Layout ::= l_pageSetup::PageSetup orientation::OrientationType centerHorizontal::Boolean centerVertical::Boolean startPageNumber::String ;
Data ::= d_cell::Cell d_comment::Comment value::ValueType ;
StyledElement ::= Table ;
 StyledElement ::= TableElement ;
BooleanValue ::= value::Boolean ;
Boolean ::= "true" | "false" ;
NumberValue ::= value::Double ;
ColOrRowElement ::= Column ;
 ColOrRowElement ::= Row ;
EnableSelectionType ::= (est_UnlockedCells::ε) | (est_NoSelection::ε) ;
HeaderOrFooterElt ::= Header ;
 HeaderOrFooterElt ::= Footer ;
Cell ::= (c_smartTags::SmartTagsCollection)+ c_row::Row arrayRange::String formula::String hRef::String mergeAcross::Double mergeDown::Double c_data::Data c_comment::Comment ;
CustomDocumentProperty ::= customDocumentProperty_cdpe::CustomDocumentPropertiesCollection name::String value::ValueType ;
StringValue ::= value::String ;
--------------------metamodels::MSOfficeExcel_SpreadsheetMLSimplified.bgf--------------------
Integer ::= integer() ;
DateTimeTypeValue ::= value::DateTimeType ;
Row ::= r_table::Table (r_cells::Cell)+ autoFitHeight::Boolean height::Double ;
Workbook ::= (wb_worksheets::Worksheet)+ ;
Column ::= c_table::Table autoFitWidth::Boolean width::Double ;
DateTimeType ::= year::Integer month::Integer day::Integer hour::Integer minute::Integer second::Integer ;
String ::= string() ;
Worksheet ::= ws_workbook::Workbook ws_table::Table name::String ;
Table ::= t_worksheet::Worksheet (t_cols::Column)+ (t_rows::Row)+ ;
TableElement ::= ColOrRowElement ;
 TableElement ::= Cell ;
ValueType ::= StringValue ;
 ValueType ::= NumberValue ;
 ValueType ::= DateTimeTypeValue ;
 ValueType ::= BooleanValue ;
 ValueType ::= ErrorValue ;
Data ::= d_cell::Cell value::ValueType ;
ErrorValue ::= vt_data::Data ;
BooleanValue ::= value::Boolean ;
NumberValue ::= value::Double ;
Boolean ::= "true" | "false" ;
ColOrRowElement ::= Column ;
 ColOrRowElement ::= Row ;
Cell ::= c_row::Row arrayRange::String formula::String hRef::String mergeAcross::Double mergeDown::Double c_data::Data ;
StringValue ::= value::String ;
--------------------metamodels::MSOfficeExcel_SpreadsheetMLStyles.bgf--------------------
Comment ::= c_cell::Cell com_data::Data author::String showAlways::Boolean ;
Footer ::= f_pageSetup::PageSetup ;
Row ::= r_table::Table (r_cells::Cell)+ autoFitHeight::Boolean height::Double ;
CommentsLayoutType ::= (clt_InPlace::ε) | (clt_PrintNone::ε) | (clt_SheetEnd::ε) ;
Column ::= c_table::Table autoFitWidth::Boolean width::Double ;
DisplayDrawingObjectsType ::= (ddot_displayShapes::ε) | (ddot_placeHolders::ε) | (ddot_hideAll::ε) ;
String ::= string() ;
ExcelNumberFormatType ::= (enft_General::ε) | (enft_General_Number::ε) | (enft_General_Date::ε) | (enft_Long_Date::ε) | (enft_Medium_Date::ε) | (enft_Short_Date::ε) | (enft_Long_Time::ε) | (enft_Medium_Time::ε) | (enft_Short_Time::ε) | (enft_Currency::ε) | (enft_Euro_Currency::ε) | (enft_Fixed::ε) | (enft_Standard::ε) | (enft_Percent::ε) | (enft_Scientific::ε) | (enft_Yes_No::ε) | (enft_True_False::ε) | (enft_On_Off::ε) ;
ExcelWorkbook ::= ew_workbook::Workbook selectedSheets::Integer windowHidden::Boolean hideHorizontalScrollBar::Boolean hideVerticalScrollBar::Boolean hideWorkbookTabs::Boolean windowHeight::Double windowWidth::Double windowTopX::Double windowTopY::Double activeSheet::Integer activeChart::String firstVisibleSheet::Integer hidePivotTableFieldList::Boolean protectStructure::Boolean protectWindows::Boolean displayInkNotes::Boolean embedSaveSmartTags::Boolean futureVer::String tabRatio::Integer windowIconic::Boolean displayDrawingObjects::DisplayDrawingObjectsType createBackup::Boolean calculation::CalculationWorkbookType doNotCalculateBeforeSave::Boolean date1904::Boolean refModeR1C1::Boolean iteration::Boolean maxIterations::Integer maxChange::Double precisionAsDisplayed::Boolean doNotSaveLinkValues::Boolean noAutoRecover::Boolean acceptLabelsInFormulas::Boolean uncalced::Boolean ;
VerticalAlignementType ::= (vat_Top::ε) | (vat_Bottom::ε) | (vat_Justify::ε) | (vat_Distributed::ε) | (vat_Center::ε) | (vat_Automatic::ε) | (vat_JustifyDistributed::ε) ;
Table ::= t_worksheet::Worksheet (t_cols::Column)+ (t_rows::Row)+ defaultColumnWidth::Double defaultRowHeight::Double expandedColumnCount::Integer expandedRowCount::Integer leftCell::Integer topCell::Integer fullColumns::Boolean fullRows::Boolean ;
TableElement ::= ColOrRowElement ;
 TableElement ::= Cell ;
Header ::= h_pageSetup::PageSetup ;
VisibleType ::= (vt_SheetVisible::ε) | (vt_SheetHidden::ε) | (vt_SheetVeryHidden::ε) ;
StyleType ::= st_styles::StylesCollection st_styledElement::StyledElement id::String name::String parent::StyleType st_parent::StyleType alignment::AlignmentType borders::BordersType font::FontType interior::InteriorType numberFormat::NumberFormatType protection::ProtectionType ;
ValueType ::= StringValue ;
 ValueType ::= NumberValue ;
 ValueType ::= DateTimeTypeValue ;
 ValueType ::= BooleanValue ;
 ValueType ::= ErrorValue ;
InteriorType ::= it_styleType::StyleType color::String pattern::PatternType patternColor::String ;
VerticalAlignType ::= (vat_None::ε) | (vat_Subscript::ε) | (vat_Superscript::ε) ;
ErrorValue ::= vt_data::Data ;
BorderType ::= bt_bordersType::BordersType position::PositionType color::String lineStyle::LineStyleType weight::Double ;
NamedRange ::= nr_namesType::NamesType name::String refersTo::String hidden::Boolean ;
PageMarginsInfo ::= pm_pageSetup::PageSetup left::Double right::Double top::Double bottom::Double ;
PositionType ::= (pt_Left::ε) | (pt_Top::ε) | (pt_Right::ε) | (pt_Bottom::ε) | (pt_DiagonalLeft::ε) | (pt_DiagonalRight::ε) ;
SmartTagsCollection ::= st_workbook::Workbook st_cell::Cell (smartTagTypes::SmartTagType)+ ;
Integer ::= integer() ;
AlignmentType ::= at_styleType::StyleType horizontal::HorizontalAlignementType readingOrder::ReadingOrderType indent::Double rotate::Double shrinkToFit::Boolean vertical::VerticalAlignementType verticalText::Boolean wrapText::Boolean ;
WorksheetOptionsElt ::= wo_worksheet::Worksheet fitToPage::Boolean doNotDisplayColHeaders::Boolean doNotDisplayRowHeaders::Boolean gridlineColor::String name::String excelWorksheetType::ExcelWorksheetTypeType intlMacro::Boolean unsynced::Boolean selected::Boolean codeName::String displayPageBreak::Boolean transitionExpressionEvaluation::Boolean transitionFormulaEntry::Boolean zoom::Integer pageBreakZoom::Integer showPageBreakZoom::Boolean defaultRowHeight::Integer defaultColumnWidth::Integer standardWidth::Integer visible::VisibleType leftColumnVisible::Integer displayRightToLeft::Boolean gridlineColorIndex::Integer displayFormulas::Boolean doNotDisplayGridlines::Boolean doNotDisplayHeadings::Boolean doNotDisplayOutline::Boolean applyAutomaticOutlineStyles::Boolean noSummaryRowsBelowDetail::Boolean noSummaryColumnsRightDetail::Boolean doNotDisplayZeros::Boolean activeRow::Integer activeColumn::Integer filterOn::Boolean rangeSelection::String topRowVisible::Integer topRowBottomPane::Integer leftColumnRightPane::Integer activePane::Integer splitHorizontal::Integer splitVertical::Integer freezePanes::Boolean frozenNoSplit::Boolean tabColorIndex::Integer protectContentst::Boolean protectObjects::Boolean protectScenarios::Boolean enableSelection::EnableSelectionType allowFormatCells::Boolean allowSizeCols::Boolean allowSizeRows::Boolean allowInsertCols::Boolean allowInsertRows::Boolean allowInsertHyperlinks::Boolean allowDeleteCols::Boolean allowDeleteRows::Boolean allowSort::Boolean allowFilter::Boolean allowUsePivotTables::Boolean wo_pageSetup::PageSetup wo_print::Print ;
CalculationWorkbookType ::= (cwt_automaticCalculation::ε) | (cwt_manualCalculation::ε) | (cwt_semiAutomaticCalculation::ε) ;
CustomDocumentPropertiesCollection ::= cdp_workbook::Workbook (customDocumentProperties::CustomDocumentProperty)+ ;
ReadingOrderType ::= (rot_RightToLeft::ε) | (rot_LeftToRight::ε) | (rot_Context::ε) ;
HorizontalAlignementType ::= (hat_CenterAcrossSelection::ε) | (hat_Fill::ε) | (hat_Left::ε) | (hat_Right::ε) | (hat_Justify::ε) | (hat_Distributed::ε) | (hat_Center::ε) | (hat_Automatic::ε) | (hat_JustifyDistributed::ε) ;
DateTimeTypeValue ::= value::DateTimeType ;
NumberFormatType ::= nft_styleType::StyleType format::ExcelNumberFormatType ;
Workbook ::= wb_smartTags::SmartTagsCollection wb_docProperties::DocumentPropertiesCollection wb_customDocProperties::CustomDocumentPropertiesCollection wb_excelWorkbook::ExcelWorkbook wb_styles::StylesCollection wb_names::NamesType (wb_worksheets::Worksheet)+ ;
LineStyleType ::= (lst_None::ε) | (lst_Continuous::ε) | (lst_Dash::ε) | (lst_Dot::ε) | (lst_DashDot::ε) | (lst_DashDotDot::ε) | (lst_SlantDashDot::ε) | (lst_Double::ε) ;
DateTimeType ::= year::Integer month::Integer day::Integer hour::Integer minute::Integer second::Integer ;
ProtectionType ::= pt_styleType::StyleType protected::Boolean ;
VersionType ::= n::Integer nn::Integer ;
PageSetup ::= ps_worksheetOptions::WorksheetOptionsElt ps_layout::Layout ps_header::Header ps_footer::Footer ps_pageMargins::PageMarginsInfo ;
Worksheet ::= ws_workbook::Workbook ws_table::Table name::String protected::Boolean rightToLeft::Boolean w_worksheetOptions::WorksheetOptionsElt ;
Print ::= p_worksheetOptions::WorksheetOptionsElt fitWidth::Integer fitHeight::Integer leftToRight::Boolean blackAndWhite::Boolean draftQuality::Boolean commentsLayout::CommentsLayoutType scale::Integer printErrors::String validPrinterInfo::Boolean paperSizeIndex::Integer horizontalResolution::Integer verticalResolution::Integer gridlines::Boolean numberOfCopies::Integer rowColHeadings::Boolean ;
DocumentPropertiesCollection ::= dp_workbook::Workbook title::String subject::String keywords::String description::String category::String author::String lastAuthor::String manager::String company::String hyperlinkBase::String revision::Integer presentationFormat::String guid::String appName::String version::VersionType totalTime::Integer lastPrinted::DateTimeType created::DateTimeType lastSaved::DateTimeType pages::Integer words::Integer characters::Integer charactersWithSpaces::Integer bytes::Integer lines::Integer paragraphs::Integer ;
SmartTagType ::= smartTagType_ste::SmartTagsCollection namespaceuri::String name::String url::String ;
ExcelWorksheetTypeType ::= (ewt_Worksheet::ε) | (ewt_Chart::ε) | (ewt_Macro::ε) | (ewt_Dialog::ε) ;
PatternType ::= (pt_None::ε) | (pt_Solid::ε) | (pt_Gray75::ε) | (pt_Gray50::ε) | (pt_Gray25::ε) | (pt_Gray125::ε) | (pt_Gray0625::ε) | (pt_HorzStripe::ε) | (pt_VertStripe::ε) | (pt_ReverseDiagStripe::ε) | (pt_DiagStripe::ε) | (pt_DiagCross::ε) | (pt_ThickDiagCross::ε) | (pt_ThinHorzStripe::ε) | (pt_ThinVertStripe::ε) | (pt_ThinReverseDiagStripe::ε) | (pt_ThinDiagStripe::ε) | (pt_ThinHorzCross::ε) | (pt_ThinDiagCross::ε) ;
OrientationType ::= (ot_Landscape::ε) | (ot_Portrait::ε) ;
Layout ::= l_pageSetup::PageSetup orientation::OrientationType centerHorizontal::Boolean centerVertical::Boolean startPageNumber::String ;
Data ::= d_cell::Cell d_comment::Comment value::ValueType ;
FontType ::= ft_styleType::StyleType bold::Boolean color::String fontName::String italic::Boolean outline::Boolean shadow::Boolean size::Double strikeThrough::Boolean underline::UnderlineType verticalAlign::VerticalAlignType ;
StyledElement ::= Table ;
 StyledElement ::= TableElement ;
BooleanValue ::= value::Boolean ;
Boolean ::= "true" | "false" ;
NumberValue ::= value::Double ;
UnderlineType ::= (ut_None::ε) | (ut_Single::ε) | (ut_Double::ε) | (ut_SingleAccounting::ε) | (ut_DoubleAccounting::ε) ;
ColOrRowElement ::= Column ;
 ColOrRowElement ::= Row ;
EnableSelectionType ::= (est_UnlockedCells::ε) | (est_NoSelection::ε) ;
NamesType ::= nt_workbook::Workbook (namedRanges::NamedRange)+ ;
HeaderOrFooterElt ::= Header ;
 HeaderOrFooterElt ::= Footer ;
Cell ::= (c_smartTags::SmartTagsCollection)+ c_row::Row arrayRange::String formula::String hRef::String mergeAcross::Double mergeDown::Double c_data::Data c_comment::Comment ;
BordersType ::= bt_styleType::StyleType border::BorderType ;
CustomDocumentProperty ::= customDocumentProperty_cdpe::CustomDocumentPropertiesCollection name::String value::ValueType ;
StylesCollection ::= s_workbook::Workbook (style::StyleType)+ ;
StringValue ::= value::String ;
--------------------metamodels::MSOfficeExcel_SpreadsheetMLWorkbookProp.bgf--------------------
Comment ::= c_cell::Cell com_data::Data author::String showAlways::Boolean ;
Integer ::= integer() ;
CalculationWorkbookType ::= (cwt_automaticCalculation::ε) | (cwt_manualCalculation::ε) | (cwt_semiAutomaticCalculation::ε) ;
CustomDocumentPropertiesCollection ::= cdp_workbook::Workbook (customDocumentProperties::CustomDocumentProperty)+ ;
DateTimeTypeValue ::= value::DateTimeType ;
Row ::= r_table::Table (r_cells::Cell)+ autoFitHeight::Boolean height::Double ;
Workbook ::= wb_smartTags::SmartTagsCollection wb_docProperties::DocumentPropertiesCollection wb_customDocProperties::CustomDocumentPropertiesCollection wb_excelWorkbook::ExcelWorkbook (wb_worksheets::Worksheet)+ ;
Column ::= c_table::Table autoFitWidth::Boolean width::Double ;
DateTimeType ::= year::Integer month::Integer day::Integer hour::Integer minute::Integer second::Integer ;
DisplayDrawingObjectsType ::= (ddot_displayShapes::ε) | (ddot_placeHolders::ε) | (ddot_hideAll::ε) ;
VersionType ::= n::Integer nn::Integer ;
ExcelWorkbook ::= ew_workbook::Workbook selectedSheets::Integer windowHidden::Boolean hideHorizontalScrollBar::Boolean hideVerticalScrollBar::Boolean hideWorkbookTabs::Boolean windowHeight::Double windowWidth::Double windowTopX::Double windowTopY::Double activeSheet::Integer activeChart::String firstVisibleSheet::Integer hidePivotTableFieldList::Boolean protectStructure::Boolean protectWindows::Boolean displayInkNotes::Boolean embedSaveSmartTags::Boolean futureVer::String tabRatio::Integer windowIconic::Boolean displayDrawingObjects::DisplayDrawingObjectsType createBackup::Boolean calculation::CalculationWorkbookType doNotCalculateBeforeSave::Boolean date1904::Boolean refModeR1C1::Boolean iteration::Boolean maxIterations::Integer maxChange::Double precisionAsDisplayed::Boolean doNotSaveLinkValues::Boolean noAutoRecover::Boolean acceptLabelsInFormulas::Boolean uncalced::Boolean ;
String ::= string() ;
TableElement ::= ColOrRowElement ;
 TableElement ::= Cell ;
Table ::= t_worksheet::Worksheet (t_cols::Column)+ (t_rows::Row)+ defaultColumnWidth::Double defaultRowHeight::Double expandedColumnCount::Integer expandedRowCount::Integer leftCell::Integer topCell::Integer fullColumns::Boolean fullRows::Boolean ;
Worksheet ::= ws_workbook::Workbook ws_table::Table name::String ;
DocumentPropertiesCollection ::= dp_workbook::Workbook title::String subject::String keywords::String description::String category::String author::String lastAuthor::String manager::String company::String hyperlinkBase::String revision::Integer presentationFormat::String guid::String appName::String version::VersionType totalTime::Integer lastPrinted::DateTimeType created::DateTimeType lastSaved::DateTimeType pages::Integer words::Integer characters::Integer charactersWithSpaces::Integer bytes::Integer lines::Integer paragraphs::Integer ;
SmartTagType ::= smartTagType_ste::SmartTagsCollection namespaceuri::String name::String url::String ;
ValueType ::= StringValue ;
 ValueType ::= NumberValue ;
 ValueType ::= DateTimeTypeValue ;
 ValueType ::= BooleanValue ;
 ValueType ::= ErrorValue ;
Data ::= d_cell::Cell d_comment::Comment value::ValueType ;
StyledElement ::= Table ;
 StyledElement ::= TableElement ;
ErrorValue ::= vt_data::Data ;
BooleanValue ::= value::Boolean ;
NumberValue ::= value::Double ;
Boolean ::= "true" | "false" ;
ColOrRowElement ::= Column ;
 ColOrRowElement ::= Row ;
Cell ::= (c_smartTags::SmartTagsCollection)+ c_row::Row arrayRange::String formula::String hRef::String mergeAcross::Double mergeDown::Double c_data::Data c_comment::Comment ;
CustomDocumentProperty ::= customDocumentProperty_cdpe::CustomDocumentPropertiesCollection name::String value::ValueType ;
SmartTagsCollection ::= st_workbook::Workbook st_cell::Cell (smartTagTypes::SmartTagType)+ ;
StringValue ::= value::String ;
--------------------metamodels::MSOfficeExcel_SpreadsheetMLWorksheetOpt.bgf--------------------
Comment ::= c_cell::Cell com_data::Data author::String showAlways::Boolean ;
Row ::= r_table::Table (r_cells::Cell)+ autoFitHeight::Boolean height::Double ;
Column ::= c_table::Table autoFitWidth::Boolean width::Double ;
DisplayDrawingObjectsType ::= (ddot_displayShapes::ε) | (ddot_placeHolders::ε) | (ddot_hideAll::ε) ;
String ::= string() ;
ExcelWorkbook ::= ew_workbook::Workbook selectedSheets::Integer windowHidden::Boolean hideHorizontalScrollBar::Boolean hideVerticalScrollBar::Boolean hideWorkbookTabs::Boolean windowHeight::Double windowWidth::Double windowTopX::Double windowTopY::Double activeSheet::Integer activeChart::String firstVisibleSheet::Integer hidePivotTableFieldList::Boolean protectStructure::Boolean protectWindows::Boolean displayInkNotes::Boolean embedSaveSmartTags::Boolean futureVer::String tabRatio::Integer windowIconic::Boolean displayDrawingObjects::DisplayDrawingObjectsType createBackup::Boolean calculation::CalculationWorkbookType doNotCalculateBeforeSave::Boolean date1904::Boolean refModeR1C1::Boolean iteration::Boolean maxIterations::Integer maxChange::Double precisionAsDisplayed::Boolean doNotSaveLinkValues::Boolean noAutoRecover::Boolean acceptLabelsInFormulas::Boolean uncalced::Boolean ;
Table ::= t_worksheet::Worksheet (t_cols::Column)+ (t_rows::Row)+ defaultColumnWidth::Double defaultRowHeight::Double expandedColumnCount::Integer expandedRowCount::Integer leftCell::Integer topCell::Integer fullColumns::Boolean fullRows::Boolean ;
TableElement ::= ColOrRowElement ;
 TableElement ::= Cell ;
VisibleType ::= (vt_SheetVisible::ε) | (vt_SheetHidden::ε) | (vt_SheetVeryHidden::ε) ;
ValueType ::= StringValue ;
 ValueType ::= NumberValue ;
 ValueType ::= DateTimeTypeValue ;
 ValueType ::= BooleanValue ;
 ValueType ::= ErrorValue ;
ErrorValue ::= vt_data::Data ;
SmartTagsCollection ::= st_workbook::Workbook st_cell::Cell (smartTagTypes::SmartTagType)+ ;
Integer ::= integer() ;
WorksheetOptionsElt ::= wo_worksheet::Worksheet fitToPage::Boolean doNotDisplayColHeaders::Boolean doNotDisplayRowHeaders::Boolean gridlineColor::String name::String excelWorksheetType::ExcelWorksheetTypeType intlMacro::Boolean unsynced::Boolean selected::Boolean codeName::String displayPageBreak::Boolean transitionExpressionEvaluation::Boolean transitionFormulaEntry::Boolean zoom::Integer pageBreakZoom::Integer showPageBreakZoom::Boolean defaultRowHeight::Integer defaultColumnWidth::Integer standardWidth::Integer visible::VisibleType leftColumnVisible::Integer displayRightToLeft::Boolean gridlineColorIndex::Integer displayFormulas::Boolean doNotDisplayGridlines::Boolean doNotDisplayHeadings::Boolean doNotDisplayOutline::Boolean applyAutomaticOutlineStyles::Boolean noSummaryRowsBelowDetail::Boolean noSummaryColumnsRightDetail::Boolean doNotDisplayZeros::Boolean activeRow::Integer activeColumn::Integer filterOn::Boolean rangeSelection::String topRowVisible::Integer topRowBottomPane::Integer leftColumnRightPane::Integer activePane::Integer splitHorizontal::Integer splitVertical::Integer freezePanes::Boolean frozenNoSplit::Boolean tabColorIndex::Integer protectContentst::Boolean protectObjects::Boolean protectScenarios::Boolean enableSelection::EnableSelectionType allowFormatCells::Boolean allowSizeCols::Boolean allowSizeRows::Boolean allowInsertCols::Boolean allowInsertRows::Boolean allowInsertHyperlinks::Boolean allowDeleteCols::Boolean allowDeleteRows::Boolean allowSort::Boolean allowFilter::Boolean allowUsePivotTables::Boolean ;
CalculationWorkbookType ::= (cwt_automaticCalculation::ε) | (cwt_manualCalculation::ε) | (cwt_semiAutomaticCalculation::ε) ;
CustomDocumentPropertiesCollection ::= cdp_workbook::Workbook (customDocumentProperties::CustomDocumentProperty)+ ;
DateTimeTypeValue ::= value::DateTimeType ;
Workbook ::= wb_smartTags::SmartTagsCollection wb_docProperties::DocumentPropertiesCollection wb_customDocProperties::CustomDocumentPropertiesCollection wb_excelWorkbook::ExcelWorkbook (wb_worksheets::Worksheet)+ ;
DateTimeType ::= year::Integer month::Integer day::Integer hour::Integer minute::Integer second::Integer ;
VersionType ::= n::Integer nn::Integer ;
Worksheet ::= ws_workbook::Workbook ws_table::Table name::String protected::Boolean rightToLeft::Boolean w_worksheetOptions::WorksheetOptionsElt ;
DocumentPropertiesCollection ::= dp_workbook::Workbook title::String subject::String keywords::String description::String category::String author::String lastAuthor::String manager::String company::String hyperlinkBase::String revision::Integer presentationFormat::String guid::String appName::String version::VersionType totalTime::Integer lastPrinted::DateTimeType created::DateTimeType lastSaved::DateTimeType pages::Integer words::Integer characters::Integer charactersWithSpaces::Integer bytes::Integer lines::Integer paragraphs::Integer ;
SmartTagType ::= smartTagType_ste::SmartTagsCollection namespaceuri::String name::String url::String ;
ExcelWorksheetTypeType ::= (ewt_Worksheet::ε) | (ewt_Chart::ε) | (ewt_Macro::ε) | (ewt_Dialog::ε) ;
Data ::= d_cell::Cell d_comment::Comment value::ValueType ;
StyledElement ::= Table ;
 StyledElement ::= TableElement ;
BooleanValue ::= value::Boolean ;
Boolean ::= "true" | "false" ;
NumberValue ::= value::Double ;
ColOrRowElement ::= Column ;
 ColOrRowElement ::= Row ;
EnableSelectionType ::= (est_UnlockedCells::ε) | (est_NoSelection::ε) ;
Cell ::= (c_smartTags::SmartTagsCollection)+ c_row::Row arrayRange::String formula::String hRef::String mergeAcross::Double mergeDown::Double c_data::Data c_comment::Comment ;
CustomDocumentProperty ::= customDocumentProperty_cdpe::CustomDocumentPropertiesCollection name::String value::ValueType ;
StringValue ::= value::String ;
--------------------metamodels::MSOfficeWord_WordprocessingMLBasicDef.bgf--------------------
NoteValue ::= (ftn_normal::ε) | (ftn_separator::ε) | (ftn_continuation_separator::ε) | (ftn_continuation_notice::ε) ;
ListsElt ::= le_wordDocument::WordDocument ;
TabElt ::= Tab ;
 TabElt ::= ε ;
Tab ::= rce_rElt::RunElt ;
FootnoteRef ::= rce_rElt::RunElt ;
NoBreakHyphen ::= rce_rElt::RunElt ;
PgNum ::= rce_rElt::RunElt ;
HLinkElt ::= pce_pElt::ParaElt ;
WordDocument ::= wd_smartTags::SmartTagsCollection wd_docProperties::DocumentPropertiesCollection wd_customDocProperties::CustomDocumentPropertiesCollection ignoreSubtree::StringProperty ignoreElements::StringProperty fonts::FontsListElt lists::ListsElt styles::StylesElt docPr::DocPrElt body::BodyElt ;
Picture ::= rce_rElt::RunElt ;
DateTimeTypeValue ::= value::DateTimeType ;
FldCharElt ::= FldChar ;
 FldCharElt ::= fldData::StringType fldCharType::FldCharTypeProperty fldLock::OnOffType ;
ContinuationSeparator ::= rce_rElt::RunElt ;
BreakElt ::= type::BreakType ;
Text ::= rce_rElt::RunElt val::String ;
StylesElt ::= se_wordDocument::WordDocument ;
OnOffType ::= (oot_on::ε) | (oot_off::ε) ;
BooleanValue ::= value::Boolean ;
SimpleFieldElt ::= pce_pElt::ParaElt ;
Separator ::= rce_rElt::RunElt ;
AnnotationRef ::= rce_rElt::RunElt ;
RunElt ::= rPr::RunPrElt (rContentElts::RunContentElt)+ ;
CustomDocumentProperty ::= customDocumentProperty_cdpe::CustomDocumentPropertiesCollection name::String value::ValueType ;
StringValue ::= value::String ;
RunContentElt ::= BreakElt ;
 RunContentElt ::= NoBreakHyphen ;
 RunContentElt ::= SoftHyphen ;
 RunContentElt ::= AnnotationRef ;
 RunContentElt ::= FootnoteRef ;
 RunContentElt ::= EndnoteRef ;
 RunContentElt ::= Separator ;
 RunContentElt ::= ContinuationSeparator ;
 RunContentElt ::= PgNum ;
 RunContentElt ::= Cr ;
 RunContentElt ::= Text ;
 RunContentElt ::= DelText ;
 RunContentElt ::= InstrText ;
 RunContentElt ::= DelInstrText ;
 RunContentElt ::= Footnote ;
 RunContentElt ::= Endnote ;
 RunContentElt ::= Picture ;
 RunContentElt ::= Symbol ;
 RunContentElt ::= Tab ;
 RunContentElt ::= FldChar ;
NoteElt ::= Footnote ;
 NoteElt ::= Endnote ;
BreakType ::= (bt_page::ε) | (bt_column::ε) | (bt_text_wrapping::ε) ;
PictureType ::= Picture ;
 PictureType ::= ε ;
Symbol ::= rce_rElt::RunElt font::StringType char::StringType ;
DelText ::= rce_rElt::RunElt val::String ;
BlockLevelChunkElt ::= ParaElt ;
 BlockLevelChunkElt ::= RunLevelElt ;
FldChar ::= rce_rElt::RunElt fldData::StringType fldCharType::FldCharTypeProperty fldLock::OnOffType ;
String ::= string() ;
Endnote ::= rce_rElt::RunElt (n_blockLevelElts::BlockLevelElt)+ type::NoteValue suppressRef::OnOffType ;
FontsListElt ::= fle_wordDocument::WordDocument ;
ParaPrElt ::= ppe_pElt::ParaElt ;
ValueType ::= StringValue ;
 ValueType ::= FloatValue ;
 ValueType ::= DateTimeTypeValue ;
 ValueType ::= BooleanValue ;
CfChunk ::= ble_bodyElt::BodyElt ble_note::NoteElt ;
SectPrElt ::= spe_bodyElt::BodyElt ;
EndnoteRef ::= rce_rElt::RunElt ;
StringProperty ::= val::String ;
SmartTagsCollection ::= st_wordDocument::WordDocument (smartTagTypes::SmartTagType)+ ;
RunPrElt ::= rpe_rElt::RunElt ;
Integer ::= integer() ;
CustomDocumentPropertiesCollection ::= cdp_wordDocument::WordDocument (customDocumentProperties::CustomDocumentProperty)+ ;
SoftHyphen ::= rce_rElt::RunElt ;
InstrText ::= rce_rElt::RunElt val::String ;
BlockLevelElt ::= BlockLevelChunkElt ;
 BlockLevelElt ::= CfChunk ;
SubDocElt ::= pce_pElt::ParaElt ;
FloatValue ::= value::Double ;
DateTimeType ::= year::Integer month::Integer day::Integer hour::Integer minute::Integer second::Integer ;
RunLevelElt ::= ε ;
ParaContentElt ::= RunElt ;
 ParaContentElt ::= SimpleFieldElt ;
 ParaContentElt ::= HLinkElt ;
 ParaContentElt ::= SubDocElt ;
DocPrElt ::= dpe_wordDocument::WordDocument ;
VersionType ::= n::Integer nn::Integer ;
Cr ::= rce_rElt::RunElt ;
DelInstrText ::= rce_rElt::RunElt val::String ;
ParaElt ::= pPr::ParaPrElt (pContentElts::ParaContentElt)+ ;
DocumentPropertiesCollection ::= dp_wordDocument::WordDocument title::String subject::String keywords::String description::String category::String author::String lastAuthor::String manager::String company::String hyperlinkBase::String revision::Integer presentationFormat::String guid::String appName::String version::VersionType totalTime::Integer lastPrinted::DateTimeType created::DateTimeType lastSaved::DateTimeType pages::Integer words::Integer characters::Integer charactersWithSpaces::Integer bytes::Integer lines::Integer paragraphs::Integer ;
SmartTagType ::= smartTagType_ste::SmartTagsCollection namespaceuri::String name::String url::String ;
StringType ::= StringProperty ;
 StringType ::= Text ;
 StringType ::= DelText ;
 StringType ::= InstrText ;
 StringType ::= DelInstrText ;
 StringType ::= val::String ;
BodyElt ::= be_wordDocument::WordDocument (blockLevelElts::BlockLevelElt)+ sectPr::SectPrElt ;
Boolean ::= "true" | "false" ;
SymElt ::= Symbol ;
 SymElt ::= font::StringType char::StringType ;
FldCharTypeProperty ::= (fctp_begin::ε) | (fctp_separate::ε) | (fctp_end::ε) ;
Footnote ::= rce_rElt::RunElt (n_blockLevelElts::BlockLevelElt)+ type::NoteValue suppressRef::OnOffType ;
--------------------metamodels::MSOfficeWord_WordprocessingMLSimplified.bgf--------------------
RunContentElt ::= BreakElt ;
 RunContentElt ::= NoBreakHyphen ;
 RunContentElt ::= SoftHyphen ;
 RunContentElt ::= AnnotationRef ;
 RunContentElt ::= FootnoteRef ;
 RunContentElt ::= EndnoteRef ;
 RunContentElt ::= Separator ;
 RunContentElt ::= ContinuationSeparator ;
 RunContentElt ::= PgNum ;
 RunContentElt ::= Cr ;
 RunContentElt ::= Picture ;
 RunContentElt ::= Tab ;
 RunContentElt ::= Text ;
 RunContentElt ::= DelText ;
 RunContentElt ::= InstrText ;
 RunContentElt ::= DelInstrText ;
 RunContentElt ::= Footnote ;
 RunContentElt ::= Endnote ;
 RunContentElt ::= Symbol ;
 RunContentElt ::= FldChar ;
NoteValue ::= (ftn_normal::ε) | (ftn_separator::ε) | (ftn_continuation_separator::ε) | (ftn_continuation_notice::ε) ;
NoteElt ::= Footnote ;
 NoteElt ::= Endnote ;
BreakType ::= (bt_page::ε) | (bt_column::ε) | (bt_text_wrapping::ε) ;
Symbol ::= rce_rElt::RunElt font::StringType char::StringType ;
DelText ::= rce_rElt::RunElt val::String ;
BlockLevelChunkElt ::= ParaElt ;
Tab ::= rce_rElt::RunElt ;
FldChar ::= rce_rElt::RunElt fldData::StringType fldCharType::FldCharTypeProperty fldLock::OnOffType ;
FootnoteRef ::= rce_rElt::RunElt ;
String ::= string() ;
NoBreakHyphen ::= rce_rElt::RunElt ;
PgNum ::= rce_rElt::RunElt ;
Endnote ::= rce_rElt::RunElt (n_blockLevelElts::BlockLevelElt)+ type::NoteValue suppressRef::OnOffType ;
EndnoteRef ::= rce_rElt::RunElt ;
StringProperty ::= val::String ;
WordDocument ::= ignoreSubtree::StringProperty ignoreElements::StringProperty body::BodyElt ;
Picture ::= rce_rElt::RunElt ;
Integer ::= integer() ;
SoftHyphen ::= rce_rElt::RunElt ;
FldCharElt ::= FldChar ;
 FldCharElt ::= fldData::StringType fldCharType::FldCharTypeProperty fldLock::OnOffType ;
InstrText ::= rce_rElt::RunElt val::String ;
BlockLevelElt ::= BlockLevelChunkElt ;
ParaContentElt ::= RunElt ;
Cr ::= rce_rElt::RunElt ;
ContinuationSeparator ::= rce_rElt::RunElt ;
DelInstrText ::= rce_rElt::RunElt val::String ;
BreakElt ::= type::BreakType ;
Text ::= rce_rElt::RunElt val::String ;
ParaElt ::= (pContentElts::ParaContentElt)+ ;
BodyElt ::= be_wordDocument::WordDocument (blockLevelElts::BlockLevelElt)+ ;
StringType ::= StringProperty ;
 StringType ::= Text ;
 StringType ::= DelText ;
 StringType ::= InstrText ;
 StringType ::= DelInstrText ;
 StringType ::= val::String ;
OnOffType ::= (oot_on::ε) | (oot_off::ε) ;
Boolean ::= "true" | "false" ;
SymElt ::= Symbol ;
 SymElt ::= font::StringType char::StringType ;
Separator ::= rce_rElt::RunElt ;
AnnotationRef ::= rce_rElt::RunElt ;
FldCharTypeProperty ::= (fctp_begin::ε) | (fctp_separate::ε) | (fctp_end::ε) ;
RunElt ::= (rContentElts::RunContentElt)+ ;
Footnote ::= rce_rElt::RunElt (n_blockLevelElts::BlockLevelElt)+ type::NoteValue suppressRef::OnOffType ;
--------------------metamodels::MSOfficeWord_WordprocessingMLStyles.bgf--------------------
NoteValue ::= (ftn_normal::ε) | (ftn_separator::ε) | (ftn_continuation_separator::ε) | (ftn_continuation_notice::ε) ;
TableCellPrElt ::= tcpe_tableCellElt::TableCellElt tcpe_styleElt::StyleElt ;
TableGridElt ::= tge_tblElt::TableElt ;
TabElt ::= Tab ;
 TabElt ::= ε ;
ListsElt ::= le_wordDocument::WordDocument ;
Tab ::= rce_rElt::RunElt ;
FootnoteRef ::= rce_rElt::RunElt ;
NoBreakHyphen ::= rce_rElt::RunElt ;
PgNum ::= rce_rElt::RunElt ;
UnderlineValues ::= (uv_single::ε) | (uv_words::ε) | (uv_double::ε) | (uv_thick::ε) | (uv_dotted::ε) | (uv_dotted_heavy::ε) | (uv_dash::ε) | (uv_dashed_heavy::ε) | (uv_dash_long::ε) | (uv_dash_long_heavy::ε) | (uv_dot_dash::ε) | (uv_dash_dot_heavy::ε) | (uv_dot_dot_dash::ε) | (uv_dash_dot_dot_heavy::ε) | (uv_wave::ε) | (uv_wavy_heavy::ε) | (uv_wavy_double::ε) | (uv_none::ε) ;
HLinkElt ::= pce_pElt::ParaElt ;
WordDocument ::= wd_smartTags::SmartTagsCollection wd_docProperties::DocumentPropertiesCollection wd_customDocProperties::CustomDocumentPropertiesCollection ignoreSubtree::StringProperty ignoreElements::StringProperty fonts::FontsListElt lists::ListsElt styles::StylesElt docPr::DocPrElt body::BodyElt ;
TableRowPrElt ::= tpe_rowElt::RowElt trpe_styleElt::StyleElt ;
Picture ::= rce_rElt::RunElt ;
TableCellElt ::= tce_rowContentElt::RowContentElt tcPr::TableCellPrElt (tce_content::BlockLevelElt)+ ;
StyleElt ::= se_stylesElt::StylesElt type::StyleKindValue styleId::StringType default::OnOffType name::StringProperty aliases::StringProperty sti::Double basedOn::StringProperty next::StringProperty link::StringProperty autoRedefine::OnOffType hidden::OnOffType semiHidden::OnOffType locked::OnOffType personal::OnOffType personalCompose::OnOffType personalReply::OnOffType rsid::StringType se_pPr::ParaPrElt se_rPr::RunPrElt se_tblPr::TablePrElt se_trPr::TableRowPrElt se_tcPr::TableCellPrElt ;
DateTimeTypeValue ::= value::DateTimeType ;
FldCharElt ::= FldChar ;
 FldCharElt ::= fldData::StringType fldCharType::FldCharTypeProperty fldLock::OnOffType ;
VerticalAlignRunType ::= (vart_baseline::ε) | (vart_superscript::ε) | (vart_subscript::ε) ;
RowContentElt ::= rce_rowElt::RowElt (tc::TableCellElt)+ rce_runLevelElts::RunLevelElt ;
ContinuationSeparator ::= rce_rElt::RunElt ;
BreakElt ::= type::BreakType ;
Text ::= rce_rElt::RunElt val::String ;
StylesElt ::= se_wordDocument::WordDocument versionOfBuiltInStylenames::Double (styles::StyleElt)+ ;
OnOffType ::= (oot_on::ε) | (oot_off::ε) ;
BooleanValue ::= value::Boolean ;
SimpleFieldElt ::= pce_pElt::ParaElt ;
Separator ::= rce_rElt::RunElt ;
AnnotationRef ::= rce_rElt::RunElt ;
TableContentElt ::= tce_tblElt::TableElt (tr::RowElt)+ tce_runLevelElts::RunLevelElt ;
RunElt ::= rPr::RunPrElt (rContentElts::RunContentElt)+ ;
CustomDocumentProperty ::= customDocumentProperty_cdpe::CustomDocumentPropertiesCollection name::String value::ValueType ;
StringValue ::= value::String ;
JustificationValue ::= (jv_left::ε) | (jv_center::ε) | (jv_right::ε) | (jv_both::ε) ;
LangElt ::= le_runPrElt::RunPrElt val::String bidi::String ;
RunContentElt ::= BreakElt ;
 RunContentElt ::= NoBreakHyphen ;
 RunContentElt ::= SoftHyphen ;
 RunContentElt ::= AnnotationRef ;
 RunContentElt ::= FootnoteRef ;
 RunContentElt ::= EndnoteRef ;
 RunContentElt ::= Separator ;
 RunContentElt ::= ContinuationSeparator ;
 RunContentElt ::= PgNum ;
 RunContentElt ::= Cr ;
 RunContentElt ::= Text ;
 RunContentElt ::= DelText ;
 RunContentElt ::= InstrText ;
 RunContentElt ::= DelInstrText ;
 RunContentElt ::= Footnote ;
 RunContentElt ::= Endnote ;
 RunContentElt ::= Picture ;
 RunContentElt ::= Symbol ;
 RunContentElt ::= Tab ;
 RunContentElt ::= FldChar ;
FontElt ::= fe_fontsListElt::FontsListElt name::StringType altName::StringProperty ;
TablePrElt ::= tpe_tblElt::TableElt tpe_styleElt::StyleElt ;
NoteElt ::= Footnote ;
 NoteElt ::= Endnote ;
BreakType ::= (bt_page::ε) | (bt_column::ε) | (bt_text_wrapping::ε) ;
PictureType ::= Picture ;
 PictureType ::= ε ;
Symbol ::= rce_rElt::RunElt font::StringType char::StringType ;
DelText ::= rce_rElt::RunElt val::String ;
BlockLevelChunkElt ::= ParaElt ;
 BlockLevelChunkElt ::= TableElt ;
 BlockLevelChunkElt ::= RunLevelElt ;
FldChar ::= rce_rElt::RunElt fldData::StringType fldCharType::FldCharTypeProperty fldLock::OnOffType ;
String ::= string() ;
HighlightColorValues ::= (hcv_black::ε) | (hcv_blue::ε) | (hcv_cyan::ε) | (hcv_green::ε) | (hcv_magenta::ε) | (hcv_red::ε) | (hcv_yellow::ε) | (hcv_white::ε) | (hcv_dark_blue::ε) | (hcv_dark_cyan::ε) | (hcv_dark_green::ε) | (hcv_dark_magenta::ε) | (hcv_dark_red::ε) | (hcv_dark_yellow::ε) | (hcv_dark_gray::ε) | (hcv_light_gray::ε) | (hcv_none::ε) ;
Endnote ::= rce_rElt::RunElt (n_blockLevelElts::BlockLevelElt)+ type::NoteValue suppressRef::OnOffType ;
StyleKindValue ::= (skv_paragraph::ε) | (skv_character::ε) | (skv_table::ε) | (skv_list::ε) ;
FontsListElt ::= fle_wordDocument::WordDocument defaultFonts::FontsElt (fonts::FontElt)+ ;
ParaPrElt ::= ppe_pElt::ParaElt ppe_styleElt::StyleElt pStyle::StringProperty keepNext::OnOffType keepLines::OnOffType pageBreakBefore::OnOffType supressLineNumbers::OnOffType suppressAutoHyphens::OnOffType contextualSpacing::OnOffType bidi::OnOffType justification::JustificationValue ;
ValueType ::= StringValue ;
 ValueType ::= FloatValue ;
 ValueType ::= DateTimeTypeValue ;
 ValueType ::= BooleanValue ;
CfChunk ::= ble_bodyElt::BodyElt ble_note::NoteElt ble_tableCellElt::TableCellElt ;
FontsElt ::= fse_fontsListElt::FontsListElt fse_runPrElt::RunPrElt hint::HintType ascii::StringType h_ansi::StringType fareast::StringType cs::StringType ;
SectPrElt ::= spe_bodyElt::BodyElt ;
EndnoteRef ::= rce_rElt::RunElt ;
StringProperty ::= val::String ;
UnderlineProperty ::= val::UnderlineValues color::String ;
RunPrElt ::= rpe_rElt::RunElt rpe_styleElt::StyleElt rStyle::StringProperty rFonts::FontsElt bold::OnOffType bold_cs::OnOffType italic::OnOffType italic_cs::OnOffType capitals::OnOffType smallCapitals::OnOffType strike::OnOffType doubleStrike::OnOffType outline::OnOffType shadow::OnOffType emboss::OnOffType imprint::OnOffType noProof::OnOffType vanish::OnOffType specVanish::OnOffType rtl::OnOffType cs::OnOffType underline::UnderlineProperty color::String highlight::HighlightColorValues verticalAlign::VerticalAlignRunType language::LangElt ;
SmartTagsCollection ::= st_wordDocument::WordDocument (smartTagTypes::SmartTagType)+ ;
TableElt ::= tblPr::TablePrElt tblGrid::TableGridElt (tblContent::TableContentElt)+ ;
Integer ::= integer() ;
CustomDocumentPropertiesCollection ::= cdp_wordDocument::WordDocument (customDocumentProperties::CustomDocumentProperty)+ ;
SoftHyphen ::= rce_rElt::RunElt ;
InstrText ::= rce_rElt::RunElt val::String ;
BlockLevelElt ::= BlockLevelChunkElt ;
 BlockLevelElt ::= CfChunk ;
SubDocElt ::= pce_pElt::ParaElt ;
FloatValue ::= value::Double ;
DateTimeType ::= year::Integer month::Integer day::Integer hour::Integer minute::Integer second::Integer ;
RunLevelElt ::= rle_tblContentElt::TableContentElt rle_rowContentElt::RowContentElt ;
ParaContentElt ::= RunElt ;
 ParaContentElt ::= SimpleFieldElt ;
 ParaContentElt ::= HLinkElt ;
 ParaContentElt ::= SubDocElt ;
RowElt ::= re_tblContentElt::TableContentElt tblPrEx::TablePrExElt trPr::TableRowPrElt (rowContent::RowContentElt)+ ;
DocPrElt ::= dpe_wordDocument::WordDocument ;
VersionType ::= n::Integer nn::Integer ;
Cr ::= rce_rElt::RunElt ;
DelInstrText ::= rce_rElt::RunElt val::String ;
ParaElt ::= pPr::ParaPrElt (pContentElts::ParaContentElt)+ ;
DocumentPropertiesCollection ::= dp_wordDocument::WordDocument title::String subject::String keywords::String description::String category::String author::String lastAuthor::String manager::String company::String hyperlinkBase::String revision::Integer presentationFormat::String guid::String appName::String version::VersionType totalTime::Integer lastPrinted::DateTimeType created::DateTimeType lastSaved::DateTimeType pages::Integer words::Integer characters::Integer charactersWithSpaces::Integer bytes::Integer lines::Integer paragraphs::Integer ;
SmartTagType ::= smartTagType_ste::SmartTagsCollection namespaceuri::String name::String url::String ;
StringType ::= StringProperty ;
 StringType ::= Text ;
 StringType ::= DelText ;
 StringType ::= InstrText ;
 StringType ::= DelInstrText ;
 StringType ::= val::String ;
BodyElt ::= be_wordDocument::WordDocument (blockLevelElts::BlockLevelElt)+ sectPr::SectPrElt ;
TablePrExElt ::= tpee_rowElt::RowElt ;
Boolean ::= "true" | "false" ;
SymElt ::= Symbol ;
 SymElt ::= font::StringType char::StringType ;
FldCharTypeProperty ::= (fctp_begin::ε) | (fctp_separate::ε) | (fctp_end::ε) ;
HintType ::= (ht_default::ε) | (ht_fareast::ε) | (ht_cs::ε) ;
Footnote ::= rce_rElt::RunElt (n_blockLevelElts::BlockLevelElt)+ type::NoteValue suppressRef::OnOffType ;
--------------------metamodels::MSOfficeWord_WordprocessingMLTableElts.bgf--------------------
NoteValue ::= (ftn_normal::ε) | (ftn_separator::ε) | (ftn_continuation_separator::ε) | (ftn_continuation_notice::ε) ;
TableCellPrElt ::= tcpe_tableCellElt::TableCellElt ;
TableGridElt ::= tge_tblElt::TableElt ;
TabElt ::= Tab ;
 TabElt ::= ε ;
ListsElt ::= le_wordDocument::WordDocument ;
Tab ::= rce_rElt::RunElt ;
FootnoteRef ::= rce_rElt::RunElt ;
NoBreakHyphen ::= rce_rElt::RunElt ;
PgNum ::= rce_rElt::RunElt ;
HLinkElt ::= pce_pElt::ParaElt ;
WordDocument ::= wd_smartTags::SmartTagsCollection wd_docProperties::DocumentPropertiesCollection wd_customDocProperties::CustomDocumentPropertiesCollection ignoreSubtree::StringProperty ignoreElements::StringProperty fonts::FontsListElt lists::ListsElt styles::StylesElt docPr::DocPrElt body::BodyElt ;
TableRowPrElt ::= tpe_rowElt::RowElt ;
Picture ::= rce_rElt::RunElt ;
TableCellElt ::= tce_rowContentElt::RowContentElt tcPr::TableCellPrElt (tce_content::BlockLevelElt)+ ;
DateTimeTypeValue ::= value::DateTimeType ;
FldCharElt ::= FldChar ;
 FldCharElt ::= fldData::StringType fldCharType::FldCharTypeProperty fldLock::OnOffType ;
ContinuationSeparator ::= rce_rElt::RunElt ;
RowContentElt ::= rce_rowElt::RowElt (tc::TableCellElt)+ rce_runLevelElts::RunLevelElt ;
BreakElt ::= type::BreakType ;
Text ::= rce_rElt::RunElt val::String ;
StylesElt ::= se_wordDocument::WordDocument ;
OnOffType ::= (oot_on::ε) | (oot_off::ε) ;
BooleanValue ::= value::Boolean ;
SimpleFieldElt ::= pce_pElt::ParaElt ;
Separator ::= rce_rElt::RunElt ;
AnnotationRef ::= rce_rElt::RunElt ;
TableContentElt ::= tce_tblElt::TableElt (tr::RowElt)+ tce_runLevelElts::RunLevelElt ;
RunElt ::= rPr::RunPrElt (rContentElts::RunContentElt)+ ;
CustomDocumentProperty ::= customDocumentProperty_cdpe::CustomDocumentPropertiesCollection name::String value::ValueType ;
StringValue ::= value::String ;
RunContentElt ::= BreakElt ;
 RunContentElt ::= NoBreakHyphen ;
 RunContentElt ::= SoftHyphen ;
 RunContentElt ::= AnnotationRef ;
 RunContentElt ::= FootnoteRef ;
 RunContentElt ::= EndnoteRef ;
 RunContentElt ::= Separator ;
 RunContentElt ::= ContinuationSeparator ;
 RunContentElt ::= PgNum ;
 RunContentElt ::= Cr ;
 RunContentElt ::= Text ;
 RunContentElt ::= DelText ;
 RunContentElt ::= InstrText ;
 RunContentElt ::= DelInstrText ;
 RunContentElt ::= Footnote ;
 RunContentElt ::= Endnote ;
 RunContentElt ::= Picture ;
 RunContentElt ::= Symbol ;
 RunContentElt ::= Tab ;
 RunContentElt ::= FldChar ;
TablePrElt ::= tpe_tblElt::TableElt ;
NoteElt ::= Footnote ;
 NoteElt ::= Endnote ;
BreakType ::= (bt_page::ε) | (bt_column::ε) | (bt_text_wrapping::ε) ;
PictureType ::= Picture ;
 PictureType ::= ε ;
Symbol ::= rce_rElt::RunElt font::StringType char::StringType ;
DelText ::= rce_rElt::RunElt val::String ;
BlockLevelChunkElt ::= ParaElt ;
 BlockLevelChunkElt ::= TableElt ;
 BlockLevelChunkElt ::= RunLevelElt ;
FldChar ::= rce_rElt::RunElt fldData::StringType fldCharType::FldCharTypeProperty fldLock::OnOffType ;
String ::= string() ;
Endnote ::= rce_rElt::RunElt (n_blockLevelElts::BlockLevelElt)+ type::NoteValue suppressRef::OnOffType ;
FontsListElt ::= fle_wordDocument::WordDocument ;
ParaPrElt ::= ppe_pElt::ParaElt ;
ValueType ::= StringValue ;
 ValueType ::= FloatValue ;
 ValueType ::= DateTimeTypeValue ;
 ValueType ::= BooleanValue ;
CfChunk ::= ble_bodyElt::BodyElt ble_note::NoteElt ble_tableCellElt::TableCellElt ;
SectPrElt ::= spe_bodyElt::BodyElt ;
EndnoteRef ::= rce_rElt::RunElt ;
StringProperty ::= val::String ;
SmartTagsCollection ::= st_wordDocument::WordDocument (smartTagTypes::SmartTagType)+ ;
RunPrElt ::= rpe_rElt::RunElt ;
TableElt ::= tblPr::TablePrElt tblGrid::TableGridElt (tblContent::TableContentElt)+ ;
Integer ::= integer() ;
CustomDocumentPropertiesCollection ::= cdp_wordDocument::WordDocument (customDocumentProperties::CustomDocumentProperty)+ ;
SoftHyphen ::= rce_rElt::RunElt ;
InstrText ::= rce_rElt::RunElt val::String ;
BlockLevelElt ::= BlockLevelChunkElt ;
 BlockLevelElt ::= CfChunk ;
SubDocElt ::= pce_pElt::ParaElt ;
FloatValue ::= value::Double ;
DateTimeType ::= year::Integer month::Integer day::Integer hour::Integer minute::Integer second::Integer ;
RunLevelElt ::= rle_tblContentElt::TableContentElt rle_rowContentElt::RowContentElt ;
ParaContentElt ::= RunElt ;
 ParaContentElt ::= SimpleFieldElt ;
 ParaContentElt ::= HLinkElt ;
 ParaContentElt ::= SubDocElt ;
RowElt ::= re_tblContentElt::TableContentElt tblPrEx::TablePrExElt trPr::TableRowPrElt (rowContent::RowContentElt)+ ;
DocPrElt ::= dpe_wordDocument::WordDocument ;
VersionType ::= n::Integer nn::Integer ;
Cr ::= rce_rElt::RunElt ;
DelInstrText ::= rce_rElt::RunElt val::String ;
ParaElt ::= pPr::ParaPrElt (pContentElts::ParaContentElt)+ ;
DocumentPropertiesCollection ::= dp_wordDocument::WordDocument title::String subject::String keywords::String description::String category::String author::String lastAuthor::String manager::String company::String hyperlinkBase::String revision::Integer presentationFormat::String guid::String appName::String version::VersionType totalTime::Integer lastPrinted::DateTimeType created::DateTimeType lastSaved::DateTimeType pages::Integer words::Integer characters::Integer charactersWithSpaces::Integer bytes::Integer lines::Integer paragraphs::Integer ;
SmartTagType ::= smartTagType_ste::SmartTagsCollection namespaceuri::String name::String url::String ;
StringType ::= StringProperty ;
 StringType ::= Text ;
 StringType ::= DelText ;
 StringType ::= InstrText ;
 StringType ::= DelInstrText ;
 StringType ::= val::String ;
BodyElt ::= be_wordDocument::WordDocument (blockLevelElts::BlockLevelElt)+ sectPr::SectPrElt ;
TablePrExElt ::= tpee_rowElt::RowElt ;
Boolean ::= "true" | "false" ;
SymElt ::= Symbol ;
 SymElt ::= font::StringType char::StringType ;
FldCharTypeProperty ::= (fctp_begin::ε) | (fctp_separate::ε) | (fctp_end::ε) ;
Footnote ::= rce_rElt::RunElt (n_blockLevelElts::BlockLevelElt)+ type::NoteValue suppressRef::OnOffType ;
--------------------metamodels::MSProject.bgf--------------------
Task ::= UID::String (predecessors::Task)+ ;
NamedElement ::= Task ;
MSProject ::= (tasks::Task)+ ;
String ::= string() ;
--------------------metamodels::MSProject2.bgf--------------------
MSPTask ::= finishDate::Date startDate::Date project::MSPProject superTask::MSPTask (subTask::MSPTask)+ (assignment::MSPAssignment)+ (inLink::MSPLink)+ (outLink::MSPLink)+ ;
MSPProject ::= (resource::MSPResource)+ (link::MSPLink)+ (task::MSPTask)+ ;
Date ::= day::Integer month::Integer year::Integer ;
Integer ::= integer() ;
MSPMachine ::= cost::Double project::MSPProject (assignment::MSPAssignment)+ ;
MSPResource ::= MSPHumanResource ;
 MSPResource ::= MSPMachine ;
 MSPResource ::= cost::Double project::MSPProject (assignment::MSPAssignment)+ ;
MSPAssignment ::= task::MSPTask resource::MSPResource ;
MSPLink ::= project::MSPProject succ::MSPTask pred::MSPTask ;
MSPHumanResource ::= email::String ;
String ::= string() ;
--------------------metamodels::MTRANS.bgf--------------------
Instruction ::= body::Expression section::Section ;
Variable ::= name::String rule::Rule ;
Rule ::= isAbstract::Boolean isEntryPoint::Boolean name::String module::Module target::MetaClass source::MetaClass declaration::Variable (sections::Section)+ guard::Expression (inheritances::Inheritance)+ ;
Module ::= name::String mode::String (metaDest::MetaModel)+ (metaSource::MetaModel)+ (rules::Rule)+ ;
Inheritance ::= rule::Rule (expressions::Expression)+ (inheritedRules::Rule)+ ;
Boolean ::= "true" | "false" ;
Expression ::= operator::String inheritance::Inheritance rule::Rule instruction::Instruction ;
Section ::= kind::String rule::Rule (instructions::Instruction)+ ;
MetaModel ::= ε ;
MetaClass ::= ε ;
String ::= string() ;
--------------------metamodels::MSVisio_DatadiagramMLBasicDef.bgf--------------------
SolutionXML ::= sx_visioDocument::VisioDocument ;
PageElt ::= ShapesCollection ;
 PageElt ::= ConnectsCollection ;
Ellipse ::= e_geom::Geom ;
IXElt ::= XYElt ;
StringElt ::= value::String ;
PolylineTo ::= pt_geom::Geom ;
EventList ::= el_visioDocument::VisioDocument ;
EmailRoutingData ::= erd_visioDocument::VisioDocument data::String size::Integer ;
IdentifiedElt ::= MasterShortCut ;
 IdentifiedElt ::= Master ;
 IdentifiedElt ::= Page ;
String ::= string() ;
WindowsInfo ::= ws_visioDocument::VisioDocument ;
SplineStart ::= ss_geom::Geom ;
PrintSetup ::= ps_visioDocument::VisioDocument ;
PageSheet ::= DocumentSheet ;
 PageSheet ::= ss_shapes::ShapesCollection lineStyle::Integer fillStyle::Integer textStyle::Integer (shapeElts::ShapeElt)+ ;
Page ::= p_pages::PagesCollection background::Boolean backPage::Integer viewScale::Double viewCenterX::Double ViewCenterY::Double reviewerID::Integer associatedPage::Integer (pageElts::PageElt)+ ;
MastersCollection ::= ms_visioDocument::VisioDocument (masters::Master)+ (masterShortCuts::MasterShortCut)+ ;
LineTo ::= lt_geom::Geom ;
XYAElt ::= ArcTo ;
 XYAElt ::= SplineKnot ;
 XYAElt ::= PolylineTo ;
 XYAElt ::= XYABElt ;
XYElt ::= LineTo ;
 XYElt ::= MoveTo ;
 XYElt ::= XYAElt ;
ShapeElt ::= Text ;
 ShapeElt ::= Geom ;
XYABCDEElt ::= NURBSTo ;
XYABElt ::= InfiniteLine ;
 XYABElt ::= XYABCDElt ;
XYABCDElt ::= Ellipse ;
 XYABCDElt ::= EllipticalArcTo ;
 XYABCDElt ::= SplineStart ;
 XYABCDElt ::= XYABCDEElt ;
HeaderFooter ::= ef_visioDocument::VisioDocument ;
ConnectsCollection ::= (connections::Connect)+ ;
DocumentSheet ::= ds_visioDocument::VisioDocument ;
StyleSheetsCollection ::= sss_visioDocument::VisioDocument (stylesSheets::StyleSheet)+ ;
PagesCollection ::= ps_visioDocument::VisioDocument (pages::Page)+ ;
CustomPropertiesCollection ::= cps_docProp::DocumentPropertiesCollection (cps_customProps::CustomProperty)+ ;
VisioDocument ::= start::Integer key::String metric::Boolean buildnum::Integer version::String docLangId::Integer docProps::DocumentPropertiesCollection docSettings::DocumentSettingsElt docColors::ColorsTable docPrintSetup::PrintSetup docFonts::FontsTable docFaceNames::FaceNamesTable docStyleSheets::StyleSheetsCollection docDocumentSheet::DocumentSheet docMasters::MastersCollection docPages::PagesCollection docWindows::WindowsInfo docEventList::EventList docHeaderFooter::HeaderFooter docVBProjectData::VBProjectData docEmailRoutingData::EmailRoutingData (docSolutionXML::SolutionXML)+ ;
TextElt ::= StringElt ;
EllipticalArcTo ::= eat_geom::Geom ;
Integer ::= integer() ;
ColorsTable ::= cs_visioDocument::VisioDocument ;
Geom ::= noFill::CellType noLine::CellType noShow::CellType noSnap::CellType (linesTo::LineTo)+ (movesTo::MoveTo)+ (arcsTo::ArcTo)+ (splineKnots::SplineKnot)+ (polylinesTo::PolylineTo)+ (infiniteLines::InfiniteLine)+ (ellipses::Ellipse)+ (ellipticalArcsTo::EllipticalArcTo)+ (splineStarts::SplineStart)+ (nurbsTo::NURBSTo)+ ;
CellType ::= unit::String formula::String err::String value::String ;
Icon ::= i_masterShortCut::MasterShortCut value::String ;
SplineKnot ::= sk_geom::Geom ;
NURBSTo ::= nt_geom::Geom ;
VBProjectData ::= vpd_visioDocument::VisioDocument data::String ;
DateTimeType ::= year::Integer month::Integer day::Integer hour::Integer minute::Integer second::Integer ;
NamedElt ::= DocumentSheet ;
 NamedElt ::= MasterShortCut ;
 NamedElt ::= Page ;
ShapesCollection ::= (shapes::Shape)+ ;
DocumentSettingsElt ::= dss_visioDocument::VisioDocument ;
StyleSheet ::= ss_stylesSheets::StyleSheetsCollection ;
Text ::= (textElts::TextElt)+ ;
ArcTo ::= ac_geom::Geom ;
DocumentPropertiesCollection ::= dps_visioDocument::VisioDocument title::String subject::String creator::String manager::String company::String category::String keywords::String description::String hyperlinkBase_href::String alternateNames::String template::String buildNumberCreated::String buildNumberEdited::String customProps::CustomPropertiesCollection timeCreated::DateTimeType timeSaved::DateTimeType timeEdited::DateTimeType timePrinted::DateTimeType ;
MoveTo ::= mt_geom::Geom ;
MasterElt ::= Icon ;
 MasterElt ::= ShapesCollection ;
 MasterElt ::= ConnectsCollection ;
FontsTable ::= fs_visioDocument::VisioDocument ;
Connect ::= c_connects::ConnectsCollection fromSheet::Integer toSheet::Integer fromCell::String toCell::String fromPart::Integer toPart::Integer ;
Boolean ::= "true" | "false" ;
MasterShortCut ::= m_masterShortCuts::MastersCollection iconSize::Integer patternFlags::Integer prompt::String shortcutURL::String shortcutHelp::String alignName::Integer (icons::Icon)+ ;
InfiniteLine ::= il_geom::Geom ;
CustomProperty ::= cp_customProps::CustomPropertiesCollection name::String dataType::String ;
FaceNamesTable ::= fns_visioDocument::VisioDocument ;
Master ::= m_masters::MastersCollection baseID::String matchByName::Boolean iconSize::Integer patternFlags::Integer prompt::String hidden::Boolean iconUpdate::Boolean alignName::Integer (masterElts::MasterElt)+ ;
DelElt ::= XYElt ;
Shape ::= StyleSheet ;
 Shape ::= PageSheet ;
 Shape ::= ss_shapes::ShapesCollection lineStyle::Integer fillStyle::Integer textStyle::Integer (shapeElts::ShapeElt)+ ;
--------------------metamodels::MSVisio_DatadiagramMLSimplified.bgf--------------------
PageElt ::= ShapesCollection ;
 PageElt ::= ConnectsCollection ;
Ellipse ::= e_geom::Geom ;
IXElt ::= XYElt ;
StringElt ::= value::String ;
PolylineTo ::= pt_geom::Geom ;
IdentifiedElt ::= MasterShortCut ;
 IdentifiedElt ::= Master ;
 IdentifiedElt ::= Page ;
String ::= string() ;
SplineStart ::= ss_geom::Geom ;
PageSheet ::= ss_shapes::ShapesCollection lineStyle::Integer fillStyle::Integer textStyle::Integer (shapeElts::ShapeElt)+ ;
Page ::= p_pages::PagesCollection background::Boolean backPage::Integer viewScale::Double viewCenterX::Double ViewCenterY::Double reviewerID::Integer associatedPage::Integer (pageElts::PageElt)+ ;
MastersCollection ::= ms_visioDocument::VisioDocument (masters::Master)+ (masterShortCuts::MasterShortCut)+ ;
LineTo ::= lt_geom::Geom ;
XYAElt ::= ArcTo ;
 XYAElt ::= SplineKnot ;
 XYAElt ::= PolylineTo ;
 XYAElt ::= XYABElt ;
XYElt ::= LineTo ;
 XYElt ::= MoveTo ;
 XYElt ::= XYAElt ;
ShapeElt ::= Text ;
 ShapeElt ::= Geom ;
XYABCDEElt ::= NURBSTo ;
XYABElt ::= InfiniteLine ;
 XYABElt ::= XYABCDElt ;
XYABCDElt ::= Ellipse ;
 XYABCDElt ::= EllipticalArcTo ;
 XYABCDElt ::= SplineStart ;
 XYABCDElt ::= XYABCDEElt ;
ConnectsCollection ::= (connections::Connect)+ ;
PagesCollection ::= ps_visioDocument::VisioDocument (pages::Page)+ ;
VisioDocument ::= docMasters::MastersCollection docPages::PagesCollection ;
TextElt ::= StringElt ;
EllipticalArcTo ::= eat_geom::Geom ;
Integer ::= integer() ;
Geom ::= noFill::CellType noLine::CellType noShow::CellType noSnap::CellType (linesTo::LineTo)+ (movesTo::MoveTo)+ (arcsTo::ArcTo)+ (splineKnots::SplineKnot)+ (polylinesTo::PolylineTo)+ (infiniteLines::InfiniteLine)+ (ellipses::Ellipse)+ (ellipticalArcsTo::EllipticalArcTo)+ (splineStarts::SplineStart)+ (nurbsTo::NURBSTo)+ ;
CellType ::= unit::String formula::String err::String value::String ;
Icon ::= i_masterShortCut::MasterShortCut value::String ;
SplineKnot ::= sk_geom::Geom ;
NURBSTo ::= nt_geom::Geom ;
NamedElt ::= MasterShortCut ;
 NamedElt ::= Page ;
ShapesCollection ::= (shapes::Shape)+ ;
ArcTo ::= ac_geom::Geom ;
Text ::= (textElts::TextElt)+ ;
MoveTo ::= mt_geom::Geom ;
MasterElt ::= Icon ;
 MasterElt ::= ShapesCollection ;
 MasterElt ::= ConnectsCollection ;
Connect ::= c_connects::ConnectsCollection fromSheet::Integer toSheet::Integer fromCell::String toCell::String fromPart::Integer toPart::Integer ;
Boolean ::= "true" | "false" ;
MasterShortCut ::= m_masterShortCuts::MastersCollection iconSize::Integer patternFlags::Integer prompt::String shortcutURL::String shortcutHelp::String alignName::Integer (icons::Icon)+ ;
InfiniteLine ::= il_geom::Geom ;
Master ::= m_masters::MastersCollection baseID::String matchByName::Boolean iconSize::Integer patternFlags::Integer prompt::String hidden::Boolean iconUpdate::Boolean alignName::Integer (masterElts::MasterElt)+ ;
DelElt ::= XYElt ;
Shape ::= PageSheet ;
 Shape ::= ss_shapes::ShapesCollection lineStyle::Integer fillStyle::Integer textStyle::Integer (shapeElts::ShapeElt)+ ;
--------------------metamodels::MSVisio_DatadiagramMLTextFormat.bgf--------------------
IXrequiredElt ::= ColorEntry ;
 IXrequiredElt ::= Cp ;
 IXrequiredElt ::= Pp ;
 IXrequiredElt ::= Tp ;
 IXrequiredElt ::= Fld ;
PageElt ::= ShapesCollection ;
 PageElt ::= ConnectsCollection ;
IXElt ::= Tab ;
 IXElt ::= XYElt ;
PolylineTo ::= pt_geom::Geom ;
Char ::= font::CellType color::CellType style::CellType case::CellType pos::CellType fontScale::CellType size::CellType dblUnderline::CellType overline::CellType strikethru::CellType doubleStrikethrough::CellType rtlText::CellType runVertical::CellType letterspace::CellType colorTrans::CellType localizeFont::CellType langID::CellType ;
Tab ::= t_tabs::TabsCollection position::CellType alignment::CellType ;
EmailRoutingData ::= erd_visioDocument::VisioDocument data::String size::Integer ;
IdentifiedElt ::= FontEntry ;
 IdentifiedElt ::= FaceName ;
 IdentifiedElt ::= MasterShortCut ;
 IdentifiedElt ::= Master ;
 IdentifiedElt ::= Page ;
SplineStart ::= ss_geom::Geom ;
PrintSetup ::= ps_visioDocument::VisioDocument ;
PageSheet ::= DocumentSheet ;
 PageSheet ::= ss_shapes::ShapesCollection lineStyle::Integer fillStyle::Integer textStyle::Integer (shapeElts::ShapeElt)+ ;
ColorEntry ::= ce_colors::ColorsTable rgb::String ;
ShapeElt ::= Text ;
 ShapeElt ::= Geom ;
 ShapeElt ::= Char ;
 ShapeElt ::= Para ;
 ShapeElt ::= TabsCollection ;
 ShapeElt ::= Field ;
XYElt ::= LineTo ;
 XYElt ::= MoveTo ;
 XYElt ::= XYAElt ;
XYABCDEElt ::= NURBSTo ;
XYABElt ::= InfiniteLine ;
 XYABElt ::= XYABCDElt ;
XYABCDElt ::= Ellipse ;
 XYABCDElt ::= EllipticalArcTo ;
 XYABCDElt ::= SplineStart ;
 XYABCDElt ::= XYABCDEElt ;
ConnectsCollection ::= (connections::Connect)+ ;
DocumentSheet ::= ds_visioDocument::VisioDocument ;
StyleSheetsCollection ::= sss_visioDocument::VisioDocument (stylesSheets::StyleSheet)+ ;
PagesCollection ::= ps_visioDocument::VisioDocument (pages::Page)+ ;
CustomPropertiesCollection ::= cps_docProp::DocumentPropertiesCollection (cps_customProps::CustomProperty)+ ;
VisioDocument ::= start::Integer key::String metric::Boolean buildnum::Integer version::String docLangId::Integer docProps::DocumentPropertiesCollection docSettings::DocumentSettingsElt docColors::ColorsTable docPrintSetup::PrintSetup docFonts::FontsTable docFaceNames::FaceNamesTable docStyleSheets::StyleSheetsCollection docDocumentSheet::DocumentSheet docMasters::MastersCollection docPages::PagesCollection docWindows::WindowsInfo docEventList::EventList docHeaderFooter::HeaderFooter docVBProjectData::VBProjectData docEmailRoutingData::EmailRoutingData (docSolutionXML::SolutionXML)+ ;
TabsCollection ::= (tabs::Tab)+ ;
Geom ::= noFill::CellType noLine::CellType noShow::CellType noSnap::CellType (linesTo::LineTo)+ (movesTo::MoveTo)+ (arcsTo::ArcTo)+ (splineKnots::SplineKnot)+ (polylinesTo::PolylineTo)+ (infiniteLines::InfiniteLine)+ (ellipses::Ellipse)+ (ellipticalArcsTo::EllipticalArcTo)+ (splineStarts::SplineStart)+ (nurbsTo::NURBSTo)+ ;
CellType ::= unit::String formula::String err::String value::String ;
Field ::= value::CellType editMode::CellType format::CellType type::CellType uiCat::CellType uiCode::CellType uiFmt::CellType calendar::CellType objectKind::CellType ;
NamedElt ::= DocumentSheet ;
 NamedElt ::= MasterShortCut ;
 NamedElt ::= Page ;
ShapesCollection ::= (shapes::Shape)+ ;
DocumentSettingsElt ::= dss_visioDocument::VisioDocument ;
StyleSheet ::= ss_stylesSheets::StyleSheetsCollection ;
Text ::= (textElts::TextElt)+ ;
ArcTo ::= ac_geom::Geom ;
MoveTo ::= mt_geom::Geom ;
MasterElt ::= Icon ;
 MasterElt ::= ShapesCollection ;
 MasterElt ::= ConnectsCollection ;
Connect ::= c_connects::ConnectsCollection fromSheet::Integer toSheet::Integer fromCell::String toCell::String fromPart::Integer toPart::Integer ;
FontsTable ::= fs_visioDocument::VisioDocument (fontEntries::FontEntry)+ ;
MasterShortCut ::= m_masterShortCuts::MastersCollection iconSize::Integer patternFlags::Integer prompt::String shortcutURL::String shortcutHelp::String alignName::Integer (icons::Icon)+ ;
InfiniteLine ::= il_geom::Geom ;
FaceNamesTable ::= fns_visioDocument::VisioDocument (faceNameEntries::FaceName)+ ;
FontEntry ::= fe_fonts::FontsTable name::String charSet::String pitchAndFamily::String attributes::Integer weight::Integer unicode::Boolean ;
DelElt ::= XYElt ;
SolutionXML ::= sx_visioDocument::VisioDocument ;
Ellipse ::= e_geom::Geom ;
Fld ::= iX::Integer te_text::Text ;
StringElt ::= value::String ;
EventList ::= el_visioDocument::VisioDocument ;
String ::= string() ;
WindowsInfo ::= ws_visioDocument::VisioDocument ;
LineTo ::= lt_geom::Geom ;
MastersCollection ::= ms_visioDocument::VisioDocument (masters::Master)+ (masterShortCuts::MasterShortCut)+ ;
Page ::= p_pages::PagesCollection background::Boolean backPage::Integer viewScale::Double viewCenterX::Double ViewCenterY::Double reviewerID::Integer associatedPage::Integer (pageElts::PageElt)+ ;
XYAElt ::= ArcTo ;
 XYAElt ::= SplineKnot ;
 XYAElt ::= PolylineTo ;
 XYAElt ::= XYABElt ;
HeaderFooter ::= ef_visioDocument::VisioDocument ;
FaceName ::= fn_faceNames::FaceNamesTable name::String unicodeRanges::String charSet::String panos::String flags::Integer ;
Pp ::= iX::Integer te_text::Text ;
TextElt ::= StringElt ;
 TextElt ::= Cp ;
 TextElt ::= Pp ;
 TextElt ::= Tp ;
 TextElt ::= Fld ;
EllipticalArcTo ::= eat_geom::Geom ;
Integer ::= integer() ;
ColorsTable ::= cs_visioDocument::VisioDocument (colorEntries::ColorEntry)+ ;
Tp ::= iX::Integer te_text::Text ;
Icon ::= i_masterShortCut::MasterShortCut value::String ;
SplineKnot ::= sk_geom::Geom ;
NURBSTo ::= nt_geom::Geom ;
VBProjectData ::= vpd_visioDocument::VisioDocument data::String ;
DateTimeType ::= year::Integer month::Integer day::Integer hour::Integer minute::Integer second::Integer ;
Cp ::= iX::Integer te_text::Text ;
DocumentPropertiesCollection ::= dps_visioDocument::VisioDocument title::String subject::String creator::String manager::String company::String category::String keywords::String description::String hyperlinkBase_href::String alternateNames::String template::String buildNumberCreated::String buildNumberEdited::String customProps::CustomPropertiesCollection timeCreated::DateTimeType timeSaved::DateTimeType timeEdited::DateTimeType timePrinted::DateTimeType ;
Boolean ::= "true" | "false" ;
CustomProperty ::= cp_customProps::CustomPropertiesCollection name::String dataType::String ;
Master ::= m_masters::MastersCollection baseID::String matchByName::Boolean iconSize::Integer patternFlags::Integer prompt::String hidden::Boolean iconUpdate::Boolean alignName::Integer (masterElts::MasterElt)+ ;
Shape ::= StyleSheet ;
 Shape ::= PageSheet ;
 Shape ::= ss_shapes::ShapesCollection lineStyle::Integer fillStyle::Integer textStyle::Integer (shapeElts::ShapeElt)+ ;
Para ::= indFirst::CellType indLeft::CellType indRight::CellType spLine::CellType spBefore::CellType spAfter::CellType horzAlign::CellType bullet::CellType bulletStr::CellType bulletFont::CellType localizeBulletFont::CellType bulletFontSize::CellType textPosAfterBullet::CellType flags::CellType ;
--------------------metamodels::MSVisio_DatadiagramMLXForm.bgf--------------------
IXrequiredElt ::= ColorEntry ;
 IXrequiredElt ::= Cp ;
 IXrequiredElt ::= Pp ;
 IXrequiredElt ::= Tp ;
 IXrequiredElt ::= Fld ;
PageElt ::= ShapesCollection ;
 PageElt ::= ConnectsCollection ;
IXElt ::= Tab ;
 IXElt ::= XYElt ;
PolylineTo ::= pt_geom::Geom ;
Char ::= font::CellType color::CellType style::CellType case::CellType pos::CellType fontScale::CellType size::CellType dblUnderline::CellType overline::CellType strikethru::CellType doubleStrikethrough::CellType rtlText::CellType runVertical::CellType letterspace::CellType colorTrans::CellType localizeFont::CellType langID::CellType ;
Tab ::= t_tabs::TabsCollection position::CellType alignment::CellType ;
EmailRoutingData ::= erd_visioDocument::VisioDocument data::String size::Integer ;
IdentifiedElt ::= FontEntry ;
 IdentifiedElt ::= FaceName ;
 IdentifiedElt ::= MasterShortCut ;
 IdentifiedElt ::= Master ;
 IdentifiedElt ::= Page ;
SplineStart ::= ss_geom::Geom ;
PageSheet ::= DocumentSheet ;
 PageSheet ::= ss_shapes::ShapesCollection lineStyle::Integer fillStyle::Integer textStyle::Integer (shapeElts::ShapeElt)+ ;
PrintSetup ::= ps_visioDocument::VisioDocument ;
ColorEntry ::= ce_colors::ColorsTable rgb::String ;
ShapeElt ::= Text ;
 ShapeElt ::= Geom ;
 ShapeElt ::= Char ;
 ShapeElt ::= Para ;
 ShapeElt ::= TabsCollection ;
 ShapeElt ::= Field ;
 ShapeElt ::= XForm ;
XYElt ::= LineTo ;
 XYElt ::= MoveTo ;
 XYElt ::= XYAElt ;
XYABCDEElt ::= NURBSTo ;
XYABElt ::= InfiniteLine ;
 XYABElt ::= XYABCDElt ;
XYABCDElt ::= Ellipse ;
 XYABCDElt ::= EllipticalArcTo ;
 XYABCDElt ::= SplineStart ;
 XYABCDElt ::= XYABCDEElt ;
ConnectsCollection ::= (connections::Connect)+ ;
DocumentSheet ::= ds_visioDocument::VisioDocument ;
StyleSheetsCollection ::= sss_visioDocument::VisioDocument (stylesSheets::StyleSheet)+ ;
PagesCollection ::= ps_visioDocument::VisioDocument (pages::Page)+ ;
CustomPropertiesCollection ::= cps_docProp::DocumentPropertiesCollection (cps_customProps::CustomProperty)+ ;
VisioDocument ::= start::Integer key::String metric::Boolean buildnum::Integer version::String docLangId::Integer docProps::DocumentPropertiesCollection docSettings::DocumentSettingsElt docColors::ColorsTable docPrintSetup::PrintSetup docFonts::FontsTable docFaceNames::FaceNamesTable docStyleSheets::StyleSheetsCollection docDocumentSheet::DocumentSheet docMasters::MastersCollection docPages::PagesCollection docWindows::WindowsInfo docEventList::EventList docHeaderFooter::HeaderFooter docVBProjectData::VBProjectData docEmailRoutingData::EmailRoutingData (docSolutionXML::SolutionXML)+ ;
TabsCollection ::= (tabs::Tab)+ ;
Geom ::= noFill::CellType noLine::CellType noShow::CellType noSnap::CellType (linesTo::LineTo)+ (movesTo::MoveTo)+ (arcsTo::ArcTo)+ (splineKnots::SplineKnot)+ (polylinesTo::PolylineTo)+ (infiniteLines::InfiniteLine)+ (ellipses::Ellipse)+ (ellipticalArcsTo::EllipticalArcTo)+ (splineStarts::SplineStart)+ (nurbsTo::NURBSTo)+ ;
CellType ::= unit::String formula::String err::String value::String ;
Field ::= value::CellType editMode::CellType format::CellType type::CellType uiCat::CellType uiCode::CellType uiFmt::CellType calendar::CellType objectKind::CellType ;
NamedElt ::= DocumentSheet ;
 NamedElt ::= MasterShortCut ;
 NamedElt ::= Page ;
ShapesCollection ::= (shapes::Shape)+ ;
DocumentSettingsElt ::= dss_visioDocument::VisioDocument topPage::Page defaultTextStyle::StyleSheet defaultLineStyle::StyleSheet defaultFillStyle::StyleSheet defaultGuideStyle::StyleSheet glueSettings::Integer snapSettings::Integer snapExtensions::Integer ds_snapAngles::SnapAnglesCollection dynamicGridEnabled::Boolean protectStyles::Boolean protectShapes::Boolean protectMasters::Boolean protectBkgnds::Boolean customMenusFile::String customToolbarsFile::String attachedToolbars::String ;
StyleSheet ::= ss_stylesSheets::StyleSheetsCollection ;
Text ::= (textElts::TextElt)+ ;
ArcTo ::= ac_geom::Geom ;
MoveTo ::= mt_geom::Geom ;
MasterElt ::= Icon ;
 MasterElt ::= ShapesCollection ;
 MasterElt ::= ConnectsCollection ;
Connect ::= c_connects::ConnectsCollection fromSheet::Integer toSheet::Integer fromCell::String toCell::String fromPart::Integer toPart::Integer ;
FontsTable ::= fs_visioDocument::VisioDocument (fontEntries::FontEntry)+ ;
MasterShortCut ::= m_masterShortCuts::MastersCollection iconSize::Integer patternFlags::Integer prompt::String shortcutURL::String shortcutHelp::String alignName::Integer (icons::Icon)+ ;
InfiniteLine ::= il_geom::Geom ;
SnapAnglesCollection ::= sa_docSettings::DocumentSettingsElt (snapAngles::SnapAngle)+ ;
FaceNamesTable ::= fns_visioDocument::VisioDocument (faceNameEntries::FaceName)+ ;
FontEntry ::= fe_fonts::FontsTable name::String charSet::String pitchAndFamily::String attributes::Integer weight::Integer unicode::Boolean ;
DelElt ::= XYElt ;
 DelElt ::= XForm ;
SolutionXML ::= sx_visioDocument::VisioDocument ;
Ellipse ::= e_geom::Geom ;
Fld ::= iX::Integer te_text::Text ;
XForm ::= pinX::CellType pinY::CellType width::CellType height::CellType locPinX::CellType locPinY::CellType angle::CellType flipX::CellType flipY::CellType resizeMode::CellType ;
StringElt ::= value::String ;
EventList ::= el_visioDocument::VisioDocument ;
String ::= string() ;
WindowsInfo ::= ws_visioDocument::VisioDocument ;
Page ::= p_pages::PagesCollection background::Boolean backPage::Integer viewScale::Double viewCenterX::Double ViewCenterY::Double reviewerID::Integer associatedPage::Integer (pageElts::PageElt)+ ;
MastersCollection ::= ms_visioDocument::VisioDocument (masters::Master)+ (masterShortCuts::MasterShortCut)+ ;
LineTo ::= lt_geom::Geom ;
XYAElt ::= ArcTo ;
 XYAElt ::= SplineKnot ;
 XYAElt ::= PolylineTo ;
 XYAElt ::= XYABElt ;
HeaderFooter ::= ef_visioDocument::VisioDocument ;
FaceName ::= fn_faceNames::FaceNamesTable name::String unicodeRanges::String charSet::String panos::String flags::Integer ;
Pp ::= iX::Integer te_text::Text ;
TextElt ::= StringElt ;
 TextElt ::= Cp ;
 TextElt ::= Pp ;
 TextElt ::= Tp ;
 TextElt ::= Fld ;
EllipticalArcTo ::= eat_geom::Geom ;
Integer ::= integer() ;
ColorsTable ::= cs_visioDocument::VisioDocument (colorEntries::ColorEntry)+ ;
Tp ::= iX::Integer te_text::Text ;
Icon ::= i_masterShortCut::MasterShortCut value::String ;
SplineKnot ::= sk_geom::Geom ;
NURBSTo ::= nt_geom::Geom ;
VBProjectData ::= vpd_visioDocument::VisioDocument data::String ;
DateTimeType ::= year::Integer month::Integer day::Integer hour::Integer minute::Integer second::Integer ;
Cp ::= iX::Integer te_text::Text ;
DocumentPropertiesCollection ::= dps_visioDocument::VisioDocument title::String subject::String creator::String manager::String company::String category::String keywords::String description::String hyperlinkBase_href::String alternateNames::String template::String buildNumberCreated::String buildNumberEdited::String customProps::CustomPropertiesCollection timeCreated::DateTimeType timeSaved::DateTimeType timeEdited::DateTimeType timePrinted::DateTimeType ;
SnapAngle ::= sa_snapAngles::SnapAnglesCollection angleValue::Double ;
Boolean ::= "true" | "false" ;
CustomProperty ::= cp_customProps::CustomPropertiesCollection name::String dataType::String ;
Master ::= m_masters::MastersCollection baseID::String matchByName::Boolean iconSize::Integer patternFlags::Integer prompt::String hidden::Boolean iconUpdate::Boolean alignName::Integer (masterElts::MasterElt)+ ;
Shape ::= StyleSheet ;
 Shape ::= PageSheet ;
 Shape ::= ss_shapes::ShapesCollection lineStyle::Integer fillStyle::Integer textStyle::Integer (shapeElts::ShapeElt)+ ;
Para ::= indFirst::CellType indLeft::CellType indRight::CellType spLine::CellType spBefore::CellType spAfter::CellType horzAlign::CellType bullet::CellType bulletStr::CellType bulletFont::CellType localizeBulletFont::CellType bulletFontSize::CellType textPosAfterBullet::CellType flags::CellType ;
--------------------metamodels::Mantis.bgf--------------------
Integer ::= integer() ;
PrivateElt ::= Issue ;
 PrivateElt ::= Note ;
Issue ::= i_mantisRoot::MantisRoot project::ValueWithId category::String priority::ValueWithId severity::ValueWithId status::ValueWithId reporter::Person summary::String description::String version::String build::String platform::String os::String osVersion::String reproducibility::ValueWithId stepsToReproduce::String additionalInfo::String dateSubmitted::Integer assignedTo::Person projection::ValueWithId eta::ValueWithId resolution::ValueWithId fixedInVersion::String (attachments::Attachment)+ (relationships::Relationship)+ (notes::Note)+ lastUpdate::Integer ;
Boolean ::= "true" | "false" ;
TimeStampedElt ::= Attachment ;
 TimeStampedElt ::= Note ;
Relationship ::= type::RelationshipType ;
MantisRoot ::= (issues::Issue)+ ;
Person ::= login::String ;
Attachment ::= filename::String size::Integer contentType::String downloadUrl::String ;
Note ::= author::Person text::String ;
ValueWithId ::= Person ;
 ValueWithId ::= value::String ;
IdentifiedElt ::= ValueWithId ;
 IdentifiedElt ::= Relationship ;
 IdentifiedElt ::= Issue ;
RelationshipType ::= (rt_related to::ε) | (rt_parent of::ε) | (rt_child of::ε) | (rt_duplicate of::ε) | (rt_has duplicate::ε) ;
String ::= string() ;
--------------------metamodels::Matlab.bgf--------------------
StateFlow ::= stateFlow::String (machines::Machine)+ simulink::Simulink ;
Chart ::= name::String id::String _id::String decomposotion::String updateMethode::String sampleTime::String (junctions::Junction)+ (events::Event)+ (transitions::Transition)+ (data::Data)+ (states::State)+ ;
INteger ::= value::String ;
Event ::= name::String id::String scope::String description::String trigger::String machine::Machine chart::Chart state::State ;
Array ::= firstIndex::String size::String props::Props ;
Instance ::= _id::String id::String name::String machine::Machine ;
Transition ::= _id::String dataLimites::String id::String trigger::String condition::String conditionAction::String action::String chart::Chart state::State ;
BranchedLine ::= (branchs::Branch)+ ;
Junction ::= _id::String id::String type::String position::String state::State chart::Chart ;
State ::= name::String id::String _id::String type::String entryAction::String exitAction::String duringAction::String eventActions::String decomposition::String position::String (junctions::Junction)+ (events::Event)+ (transitions::Transition)+ (data::Data)+ chart::Chart (states::State)+ ;
Target ::= name::String id::String codeCommand::String description::String makeCommand::String codeFlags::String checksumOld::String machine::Machine ;
Double ::= value::String ;
String ::= string() ;
Block ::= Subsystem ;
 Block ::= Primitive ;
 Block ::= Reference ;
 Block ::= name::String blockType::String description::String priority::String tag::String position::String mySystem::System (ports::Port)+ ;
Reference ::= sourceType::String sourceBlock::String (parameters::Parameter)+ ;
Masked ::= system::System ;
BOolean ::= value::TrueFalse ;
Machine ::= name::String id::String (events::Event)+ (data::Data)+ (instances::Instance)+ (targets::Target)+ stateFlow::StateFlow ;
Enumeration ::= value::String ;
Vector ::= value::String ;
Port ::= InputPort ;
 Port ::= OutputPort ;
 Port ::= id::String number::String portBlock::Block primitive::Primitive ;
BlockDefaults ::= Block ;
 BlockDefaults ::= blockDefaults::String model::Model ;
Integer ::= integer() ;
Range ::= maximum::String minimum::String props::Props ;
DirectLine ::= destPort1::InputPort ;
Type ::= value::String ;
NestedBranch ::= (branchs::Branch)+ ;
Simulink ::= simulink::String (stateFlows::StateFlow)+ (models::Model)+ ;
TrueFalse ::= (True::ε) | (False::ε) ;
Line ::= DirectLine ;
 Line ::= BranchedLine ;
 Line ::= points::String id::String srcPort::OutputPort system::System ;
TransitionTerminal ::= _id::String ;
Props ::= initialValue::String (arrays::Array)+ (ranges::Range)+ data::Data ;
System ::= name::String (blocks::Block)+ (lines::Line)+ (annotations::Annotation)+ model::Model parentSubsystem::Subsystem ;
Subsystem ::= Masked ;
 Subsystem ::= Normal ;
 Subsystem ::= system::System ;
Annotation ::= position::String text::String system::System ;
Text ::= value::String ;
Matlab ::= (model::Model)+ ;
DirectBranch ::= id::String destPort::InputPort ;
InputPort ::= owningDirectLine::DirectLine owningDirectBranch::DirectBranch ;
Data ::= name::String id::String scope::String description::String units::String dataType::String (props::Props)+ state::State chart::Chart machine::Machine ;
Parameter ::= Type ;
 Parameter ::= Double ;
 Parameter ::= INteger ;
 Parameter ::= Enumeration ;
 Parameter ::= BOolean ;
 Parameter ::= Text ;
 Parameter ::= Vector ;
 Parameter ::= name::String le_reference::Reference primitive::Primitive ;
Model ::= name::String matlab::Matlab (annotationDefaults::AnnotationDefaults)+ (system::System)+ (blockDefaults::BlockDefaults)+ (lineDefaults::LineDefaults)+ simulink::Simulink ;
Normal ::= system::System ;
Primitive ::= id::String (parameters::Parameter)+ refPort::Port ;
LineDefaults ::= Line ;
 LineDefaults ::= lineDefaults::String model::Model ;
OutputPort ::= owningLine::Line ;
Branch ::= DirectBranch ;
 Branch ::= NestedBranch ;
 Branch ::= points::String branchedLine::BranchedLine nestedBranch::NestedBranch ;
AnnotationDefaults ::= Annotation ;
 AnnotationDefaults ::= annotationDefaults::String model::Model ;
--------------------metamodels::Maude.bgf--------------------
Sort ::= (subsortRels::SubsortRel)+ (supersortRels::SubsortRel)+ kind::Kind ;
RecTerm ::= op::String (args::Term)+ ;
SubsortRel ::= (subsorts::Sort)+ (supersorts::Sort)+ ;
Condition ::= EquationalCond ;
 Condition ::= RewriteCond ;
ModElement ::= ModImportation ;
 ModElement ::= SubsortRel ;
 ModElement ::= Operation ;
 ModElement ::= Statement ;
 ModElement ::= Sort ;
MaudeTopEl ::= Theory ;
 MaudeTopEl ::= Module ;
 MaudeTopEl ::= View ;
MembershipCond ::= rhs::Sort ;
Membership ::= term::Term sort::Sort ;
Kind ::= (sorts::Sort)+ ;
String ::= string() ;
SortMapping ::= from::Sort to::String ;
RewriteCond ::= rhs::Term ;
ModImportation ::= imports::ModExpression mode::ImportationMode ;
Equation ::= lhs::Term rhs::Term ;
OpTypedMapping ::= from::Operation to::String (atts::String)+ ;
TermMapping ::= from::Term to::Term ;
ModuleIdModExp ::= module::Module ;
MatchingCond ::= rhs::Term ;
SModule ::= (els::ModElement)+ (params::Parameter)+ ;
MaudeSpec ::= (els::MaudeTopEl)+ (printableEls::MaudeTopEl)+ ;
Variable ::= name::String ;
Rule ::= lhs::Term rhs::Term ;
TheoryIdModExp ::= theory::Theory ;
LabelMapping ::= from::String to::String ;
ModExpression ::= InstModExp ;
 ModExpression ::= RenModExp ;
 ModExpression ::= CompModExp ;
 ModExpression ::= ModuleIdModExp ;
 ModExpression ::= TheoryIdModExp ;
 ModExpression ::= Parameter ;
Type ::= Kind ;
 Type ::= Sort ;
EquationalCond ::= MembershipCond ;
 EquationalCond ::= BooleanCond ;
 EquationalCond ::= MatchingCond ;
 EquationalCond ::= EqualCond ;
STheory ::= (els::ModElement)+ ;
EqualCond ::= rhs::Term ;
RenModExp ::= modExp::ModExpression (renamings::RenMapping)+ ;
RenMapping ::= SortMapping ;
 RenMapping ::= OpTypedMapping ;
 RenMapping ::= OpMapping ;
 RenMapping ::= LabelMapping ;
ImportationMode ::= (protecting::ε) | (including::ε) | (extending::ε) ;
FModule ::= (els::ModElement)+ (params::Parameter)+ ;
Statement ::= Membership ;
 Statement ::= Equation ;
 Statement ::= Rule ;
OpMapping ::= from::Operation to::String ;
Term ::= Constant ;
 Term ::= RecTerm ;
 Term ::= Variable ;
Module ::= FModule ;
 Module ::= SModule ;
FTheory ::= (els::ModElement)+ ;
BooleanCond ::= ε ;
CompModExp ::= modExps::ModExpression ;
ViewMapping ::= RenMapping ;
 ViewMapping ::= TermMapping ;
Parameter ::= label::String modExp::ModExpression ;
Operation ::= name::String coarity::Type (arity::Type)+ (atts::String)+ ;
View ::= from::ModExpression to::ModExpression (els::ViewMapping)+ ;
Theory ::= FTheory ;
 Theory ::= STheory ;
Constant ::= op::String ;
InstModExp ::= modExp::ModExpression (views::View)+ ;
--------------------metamodels::MavenMaven.bgf--------------------
DocumentationTask ::= Javadoc ;
InExcludes ::= Includes ;
 InExcludes ::= Excludes ;
 InExcludes ::= IncludesFile ;
 InExcludes ::= ExcludesFile ;
AntProperty ::= AntPropertyName ;
 AntProperty ::= AntPropertyFile ;
 AntProperty ::= AntPropertyEnv ;
Xmlns ::= name::String value::String ;
Jar ::= jarfile::String basedir::String compress::String encoding::String manifest::String ;
AntTaskDef ::= name::String classname::String ;
Excludes ::= name::String ifCondition::String unless::String ;
Project ::= (xmlns::Xmlns)+ default::Goal path::Path (properties::AntProperty)+ (taskdefs::AntTaskDef)+ (prePostGoals::PrePostGoal)+ (goals::Goal)+ ;
CompileTask ::= Javac ;
PathElement ::= path::String location::String ;
FiltersFile ::= file::String ;
Javadoc ::= sourcepath::String destdir::String packagenames::String defaultexcludes::String author::String version::String use::String windowtitle::String ;
PreGoal ::= centralGoal::Goal ;
PrePostGoal ::= PreGoal ;
 PrePostGoal ::= PostGoal ;
AbstractGoal ::= PrePostGoal ;
 AbstractGoal ::= Goal ;
MiscellaneousTask ::= Echo ;
 MiscellaneousTask ::= Tstamp ;
Goal ::= name::String preGoal::PreGoal postGoal::PostGoal ;
PostGoal ::= centralGoal::Goal ;
String ::= string() ;
Exec ::= executable::String dir::String ;
Pattern ::= Basic ;
 Pattern ::= Set ;
Tstamp ::= (format::FormatTstamp)+ ;
ContentsGoal ::= AntProperty ;
 ContentsGoal ::= JellyCommand ;
 ContentsGoal ::= AttainGoal ;
 ContentsGoal ::= Task ;
 ContentsGoal ::= AntTaskDef ;
JellyCommand ::= JellySet ;
 JellyCommand ::= JellyForEach ;
PreDefinedTask ::= ExecutionTask ;
 PreDefinedTask ::= MiscellaneousTask ;
 PreDefinedTask ::= CompileTask ;
 PreDefinedTask ::= DocumentationTask ;
 PreDefinedTask ::= ArchiveTask ;
 PreDefinedTask ::= FileTask ;
Includes ::= name::String ifCondition::String unless::String ;
FilterSet ::= starttoken::String endtoken::String (filter::Filter)+ (filtersfile::FiltersFile)+ ;
AntPropertyName ::= AntPropertyValue ;
 AntPropertyName ::= AntPropertyLocation ;
FileSet ::= dir::String (patternset::PatternSet)+ (include::Includes)+ (exclude::Excludes)+ ;
NewTask ::= taskName::AntTaskDef (attributes::Attribut)+ ;
Task ::= NewTask ;
 Task ::= PreDefinedTask ;
Javac ::= srcdir::String destdir::String debug::String fork::String optimize::String deprecation::String (inExcludes::InExcludes)+ classPath::ClassPath ;
Mapper ::= type::String classname::String classpath::String classpathref::String from::String to::String ;
ExecutionTask ::= Exec ;
 ExecutionTask ::= Java ;
ClassPath ::= refid::String (pathElement::PathElement)+ (fileset::FileSet)+ ;
FileList ::= dir::String files::String ;
Filter ::= token::String value::String ;
AttainGoal ::= attainGoal::Goal ;
AntPropertyFile ::= file::String ;
Copy ::= file::String presservelastmodified::String tofile::String todir::String overwrite::String filtering::String flatten::String includeEmptyDirs::String fileset::FileSet filterset::FilterSet mapper::Mapper ;
ExcludesFile ::= name::String ifCondition::String unless::String ;
AntPropertyValue ::= value::String ;
PatternSet ::= (inexcludes::InExcludes)+ ;
AntPropertyEnv ::= environment::String ;
AntPropertyLocation ::= location::String ;
Mkdir ::= dir::String ;
Basic ::= Mapper ;
 Basic ::= InExcludes ;
 Basic ::= FileList ;
 Basic ::= Filter ;
 Basic ::= FiltersFile ;
 Basic ::= PathElement ;
JellyForEach ::= items::String var::String indexVar::String contents::ContentsGoal ;
Delete ::= file::String dir::String verbose::String quiet::String failonerror::String includeEmptyDirs::String includes::String includesfile::String excludes::String excludesfile::String defaultexcludes::String ;
Attribut ::= name::String value::String ;
ArchiveTask ::= Jar ;
IncludesFile ::= name::String ifCondition::String unless::String ;
FormatTstamp ::= property::String pattern::String offset::String unit::String locale::String ;
Echo ::= message::String file::String append::String ;
Path ::= id::String refid::String path::Path (pathElement::PathElement)+ (fileset::FileSet)+ ;
JellySet ::= var::String value::String ;
Java ::= classname::String jar::String fork::String classPath::ClassPath ;
Set ::= PatternSet ;
 Set ::= FileSet ;
 Set ::= FilterSet ;
 Set ::= Path ;
 Set ::= ClassPath ;
FileTask ::= Mkdir ;
 FileTask ::= Copy ;
 FileTask ::= Delete ;
--------------------metamodels::MavenProject.bgf--------------------
Resource ::= targetPath::String filtering::String directory::String includes::String excludes::String ;
Build ::= defaultGoal::String sourceDirectory::String unitTestSourceDirectory::String (uniTest::Resource)+ (resources::Resource)+ ;
Contributor ::= name::String email::String url::String organization::String organizationUrl::String roles::String timezone::String properties::String ;
Developer ::= id::String ;
MailingList ::= name::String subscribe::String unsubscribe::String post::String archive::String otherArchives::String ;
Project ::= id::String groupId::String artifactId::String name::String description::String (mailingLists::MailingList)+ (developersAndContributors::Person)+ build::Build (dependencies::Project)+ ;
Person ::= Developer ;
 Person ::= Contributor ;
String ::= string() ;
--------------------metamodels::Measure.bgf--------------------
Integer ::= integer() ;
Measure ::= IntegerMeasure ;
 Measure ::= DoubleMeasure ;
 Measure ::= PercentageMeasure ;
Category ::= name::String desc::String (metrics::Metric)+ root::RootMeasureSet ;
DoubleMeasure ::= value::Double ;
ModelKind ::= (KM3::ε) | (UML2::ε) ;
Boolean ::= "true" | "false" ;
RootMeasureSet ::= modelType::ModelKind (categories::Category)+ (measureSets::MeasureSet)+ ;
PercentageMeasure ::= value::Double ;
MeasureSet ::= elementName::String elementType::ElementKind (measures::Measure)+ root::RootMeasureSet (subsets::MeasureSet)+ parent::MeasureSet ;
String ::= string() ;
IntegerMeasure ::= value::Integer ;
ElementKind ::= (metamodel::ε) | (model::ε) | (package::ε) | (interface::ε) | (class::ε) ;
Metric ::= name::String desc::String preferredValue::String category::Category ;
--------------------metamodels::Metrics.bgf--------------------
Integer ::= integer() ;
BooleanMetricValue ::= value::Boolean ;
Boolean ::= "true" | "false" ;
IntegerMetricValue ::= value::Integer ;
MetricValue ::= StringMetricValue ;
 MetricValue ::= BooleanMetricValue ;
 MetricValue ::= IntegerMetricValue ;
 MetricValue ::= DoubleMetricValue ;
String ::= string() ;
DoubleMetricValue ::= value::Double ;
StringMetricValue ::= value::String ;
Metric ::= name::String (values::MetricValue)+ ;
--------------------metamodels::MoMM.bgf--------------------
Integer ::= integer() ;
Generalization ::= target::ModelElement source::ModelElement ;
Attribute ::= type::ModelElement ;
Relationship ::= Generalization ;
 Relationship ::= Association ;
Boolean ::= "true" | "false" ;
ModelElement ::= Attribute ;
 ModelElement ::= Relationship ;
 ModelElement ::= level::Integer name::String potency::String hasClass::ModelElement (classElement::ModelElement)+ elementTarget::Relationship elementSource::Relationship (attributes::Attribute)+ attType::Attribute ;
Association ::= maxSource::String maxTarget::String minSource::String minTarget::String ;
String ::= string() ;
--------------------metamodels::MiningMart_SimplifiedMetamodel.bgf--------------------
Integer ::= attribute::Attribute ;
ColumnSet ::= name::String (attributes::Attribute)+ ;
Attribute ::= Column ;
 Attribute ::= FeatureAttribute ;
 Attribute ::= Value ;
 Attribute ::= RoleRestriction ;
 Attribute ::= class::Class has::DataType ;
StructuralFeature ::= Attribute ;
DomainDataType ::= attribute::Attribute ;
Concept ::= name::String (attributes::Attribute)+ ;
Class ::= Concept ;
 Class ::= ColumnSet ;
 Class ::= name::String (attributes::Attribute)+ ;
RoleRestriction ::= class::Class has::DataType ;
FeatureAttribute ::= class::Class has::DataType ;
Column ::= class::Class has::DataType ;
DataType ::= Integer ;
 DataType ::= String ;
 DataType ::= DomainDataType ;
 DataType ::= attribute::Attribute ;
ModelElement ::= Classifier ;
 ModelElement ::= StructuralFeature ;
 ModelElement ::= Classifier | StructuralFeature ;
String ::= attribute::Attribute ;
Value ::= class::Class has::DataType ;
Classifier ::= Class ;
 Classifier ::= DataType ;
 Classifier ::= Class | DataType ;
--------------------metamodels::MiningMart_ViewCaseRepresentation.bgf--------------------
Attribute ::= class::Class has::DataType ;
SQLQuery ::= transformationGroup::TransformationGroup ;
StructuralFeature ::= Attribute ;
Function ::= nameOf::String signature::String ;
ModelElement ::= Case ;
 ModelElement ::= Step ;
 ModelElement ::= Operator ;
 ModelElement ::= Classifier ;
 ModelElement ::= StructuralFeature ;
 ModelElement ::= Case | Step | Operator | Classifier | StructuralFeature ;
RowSelection ::= Segmentation ;
 RowSelection ::= Sampling ;
 RowSelection ::= Segmentation | Sampling ;
TimeOperator ::= loopable::Boolean numberOfInputParameters::Integer numberOfOutputParameters::Integer manual::Boolean tool::String (input::Parameter)+ (output::Parameter)+ realizes::ExecutionElement ;
String ::= string() ;
LoopStep ::= name::String description::String belongsToCase::Case embedsOperator::Operator (predecessors::Step)+ (successors::Step)+ ;
Step ::= LoopStep ;
 Step ::= MultiStep ;
 Step ::= name::String description::String belongsToCase::Case embedsOperator::Operator (predecessors::Step)+ (successors::Step)+ ;
DataObject ::= source::ExecutionElement target::ExecutionElement ;
Transformation ::= Function ;
 Transformation ::= StoredProcedure ;
 Transformation ::= SQLQuery ;
 Transformation ::= transformationGroup::TransformationGroup ;
Agregation ::= ε ;
Scaling ::= scalingFactor::Integer ;
MultiRelFeatureConstr ::= Agregation ;
ExecutionElement ::= MSL-Tool ;
 ExecutionElement ::= TransformationGroup ;
 ExecutionElement ::= Transformation ;
 ExecutionElement ::= source::DataObject target::DataObject ;
DataType ::= attribute::Attribute ;
ParameterType ::= (Value::ε) | (Concept::ε) | (RelationShip::ε) | (FeatureAttribute::ε) ;
Integer ::= integer() ;
Class ::= name::String (attributes::Attribute)+ ;
Discretization ::= scalingFactor::Integer ;
TransformationGroup ::= (transformation::Transformation)+ ;
FeatureSelection ::= loopable::Boolean numberOfInputParameters::Integer numberOfOutputParameters::Integer manual::Boolean tool::String (input::Parameter)+ (output::Parameter)+ realizes::ExecutionElement ;
DataMinStep ::= loopable::Boolean numberOfInputParameters::Integer numberOfOutputParameters::Integer manual::Boolean tool::String (input::Parameter)+ (output::Parameter)+ realizes::ExecutionElement ;
StoredProcedure ::= nameOf::String signature::String ;
Case ::= name::String caseMode::Boolean caseInput::Parameter documentation::String (listOfStep::Step)+ ;
Parameter ::= name::String place::String parameterType::ParameterType belongsToOperator::Operator ;
Boolean ::= "true" | "false" ;
Sampling ::= ε ;
FeatureConstruction ::= Scaling ;
 FeatureConstruction ::= Discretization ;
 FeatureConstruction ::= scalingFactor::Integer ;
MultiStep ::= iterationCondition::String ;
Operator ::= FeatureConstruction ;
 Operator ::= DataMinStep ;
 Operator ::= TimeOperator ;
 Operator ::= FeatureSelection ;
 Operator ::= MultiRelFeatureConstr ;
 Operator ::= RowSelection ;
Segmentation ::= ε ;
Classifier ::= Class ;
 Classifier ::= DataType ;
 Classifier ::= Class | DataType ;
--------------------metamodels::MoDAF-AV.bgf--------------------
ProjectThreadType ::= taxonomy::Taxonomy ;
NodeConnectionType ::= taxonomy::Taxonomy ;
OperationalMission ::= name::String content::String ;
SystemConnectionSpecification ::= taxonomy::Taxonomy ;
Property ::= value::String ;
LiteralSpecification ::= value::String ;
Architecture ::= enterprise::Enterprise describedBy::ArchitecturalDescription ;
Environment ::= influences::Enterprise ;
Effect ::= taxonomy::Taxonomy ;
Taxonomy ::= date::String url::String version::String (contents::ClassifiedElement)+ ;
String ::= string() ;
LocationType ::= taxonomy::Taxonomy ;
OperationalConstraint ::= nodeUsageContext::Property ;
EnduringTask ::= taxonomy::Taxonomy ;
MetaData ::= ArchitectureMetaData ;
 MetaData ::= dublinCoreElement::String modMetaDataElement::String name::String body::String ;
ArchitecturalReference ::= referred::ArchitecturalDescription referrer::ArchitecturalDescription ;
CapabilityRequirement ::= taxonomy::Taxonomy ;
Competence ::= taxonomy::Taxonomy ;
TimeExpression ::= value::String ;
Unit ::= taxonomy::Taxonomy ;
ArchitectureMetaData ::= annotatedArchitecture::ArchitecturalDescription ;
Node ::= taxonomy::Taxonomy ;
OperationalActivity ::= taxonomy::Taxonomy ;
ArchitecturalFramework ::= (ownedMember::View)+ ;
ArchitecturalDescription ::= approvialAuthority::String architect::String assumptionAndConstraints::String creatingOrganisation::String dateCompleted::String purpose::String recommendations::String summaryOfFindings::String tollsUsed::String (viewpoints::View)+ (products::ArchitecturalProduct)+ taxonomy::Taxonomy ;
Standard ::= identifier::String publishedWebsite::String publisher::String ratificationDate::TimeExpression version::String withdrawalDate::TimeExpression ;
Element ::= MoDAFModel ;
 Element ::= Enterprise ;
 Element ::= OperationalMission ;
 Element ::= Architecture ;
 Element ::= ArchitecturalDescription ;
 Element ::= ArchitecturalReference ;
 Element ::= ArchitecturalProduct ;
 Element ::= Elements ;
 Element ::= ArchitecturalFramework ;
 Element ::= View ;
 Element ::= Concern ;
 Element ::= Stakeholder ;
 Element ::= Taxonomy ;
 Element ::= ClassifiedElement ;
PostType ::= taxonomy::Taxonomy ;
OrganisationProjectRelationship ::= taxonomy::Taxonomy ;
Elements ::= name::String content::String ;
MeasurableProperty ::= maxValue::LiteralSpecification minValue::LiteralSpecification ;
Service ::= taxonomy::Taxonomy ;
RoleInOrganisation ::= taxonomy::Taxonomy ;
OrganisationType ::= taxonomy::Taxonomy ;
ProjectType ::= taxonomy::Taxonomy ;
DataElement ::= taxonomy::Taxonomy ;
ArchitecturalProduct ::= description::String (architecturalElements::Elements)+ definingView::View (addresses::Concern)+ ;
InformationElement ::= taxonomy::Taxonomy ;
System ::= taxonomy::Taxonomy ;
InformationExchange ::= identifier::String requirementText::String ;
StakeholderHasConcern ::= client::Stakeholder supplier::Concern owner::MoDAFModel ;
ClassifiedElement ::= Environment ;
 ClassifiedElement ::= Standard ;
 ClassifiedElement ::= MeasurableProperty ;
 ClassifiedElement ::= CapabilityRequirement ;
 ClassifiedElement ::= Effect ;
 ClassifiedElement ::= EnduringTask ;
 ClassifiedElement ::= OperationalConstraint ;
 ClassifiedElement ::= PostType ;
 ClassifiedElement ::= OrganisationType ;
 ClassifiedElement ::= RoleInOrganisation ;
 ClassifiedElement ::= LocationType ;
 ClassifiedElement ::= OperationalActivity ;
 ClassifiedElement ::= Node ;
 ClassifiedElement ::= InformationExchange ;
 ClassifiedElement ::= Competence ;
 ClassifiedElement ::= InformationElement ;
 ClassifiedElement ::= NodeConnectionType ;
 ClassifiedElement ::= System ;
 ClassifiedElement ::= DataElement ;
 ClassifiedElement ::= SystemFunction ;
 ClassifiedElement ::= SystemConnectionSpecification ;
 ClassifiedElement ::= ProjectType ;
 ClassifiedElement ::= Service ;
 ClassifiedElement ::= Unit ;
 ClassifiedElement ::= Dimension ;
 ClassifiedElement ::= OrganisationProjectRelationship ;
 ClassifiedElement ::= ProjectThreadType ;
SystemFunction ::= systemUsageContext::Property ;
Dimension ::= taxonomy::Taxonomy ;
Stakeholder ::= name::String content::String ;
View ::= framework::String frameworkWebsite::String viewCode::String viewDescription::String viewName::String definingFramework::ArchitecturalFramework (usedToCover::Concern)+ ;
MoDAFModel ::= enterprise::Enterprise environment::Environment (operationalMissions::OperationalMission)+ (architectures::Architecture)+ (architecturalDescription::ArchitecturalDescription)+ (architecturalReferences::ArchitecturalReference)+ (architecturalFrameworks::ArchitecturalFramework)+ (architectureMetadatas::ArchitectureMetaData)+ (metaDatas::MetaData)+ (stakeholders::Stakeholder)+ (stakeholderHasConcerns::StakeholderHasConcern)+ ;
Enterprise ::= inhabits::Environment (fulfills::OperationalMission)+ ;
Concern ::= (adressedBy::ArchitecturalProduct)+ ;
--------------------metamodels::MiningMart_ViewDataRepresentation.bgf--------------------
Key ::= ForeignKey ;
 Key ::= PrimaryKey ;
 Key ::= isUsedForIndex::Boolean (hasColumn::Column)+ isAssociatedToColumnSet::ColumnSet ;
Nominal ::= Categorial ;
 Nominal ::= KeyAttribute ;
 Nominal ::= Constant ;
 Nominal ::= Binary ;
 Nominal ::= Categorial | KeyAttribute | Constant ;
Attribute ::= Column ;
 Attribute ::= FeatureAttribute ;
 Attribute ::= RoleRestriction ;
 Attribute ::= Value ;
 Attribute ::= class::Class has::DataType ;
Categorial ::= ε ;
ColumnStatistics ::= unique::Integer missing::Integer min::Integer max::Integer average::Integer standarDeviation::Integer distributionValue::String distributionCount::Integer distributionMin::Integer distributionMax::Integer forColumn::Column ;
StructuralFeature ::= Attribute ;
RelationShip ::= name::String subRelationShipRestriction::String defined::String isA::RelationShip (correspondsToForeignKey::ForeignKey)+ correspondsToColumnSet::ColumnSet FromConcept::Concept ToConcept::Concept ;
Column ::= name::String dataType::DataType (keys::Key)+ belongsToColumnSet::ColumnSet corespondsToBaseAttribute::BaseAttribute ;
ModelElement ::= Classifier ;
 ModelElement ::= StructuralFeature ;
 ModelElement ::= ColumnSetStatistics ;
 ModelElement ::= Key ;
 ModelElement ::= RelationShip ;
 ModelElement ::= Classifier | StructuralFeature | ColumnSetStatistics | Key ;
String ::= string() ;
Table ::= number::Integer file::String dbConnectString::String user::String (hasColumn::Column)+ (hasKey::Key)+ correspondsToConcept::Concept correspondsToRelationShip::RelationShip ;
Time ::= ε ;
BaseAttribute ::= isPartMultiColumnFeature::MultiColumnFeature domainDataType::DomainDataType ;
MultiColumnFeature ::= (consitsOfBaseAttributes::BaseAttribute)+ ;
FeatureAttribute ::= BaseAttribute ;
 FeatureAttribute ::= MultiColumnFeature ;
 FeatureAttribute ::= name::String relevanceForMining::Boolean attributeType::DataType belongsToConcept::Concept (correspondsToColumns::Column)+ ;
Spatial ::= ε ;
Snapshot ::= number::Integer file::String dbConnectString::String user::String (hasColumn::Column)+ (hasKey::Key)+ correspondsToConcept::Concept correspondsToRelationShip::RelationShip ;
DataType ::= DomainDataType ;
 DataType ::= attribute::Attribute ;
Binary ::= ε ;
UserInput ::= (containsValues::Value)+ ;
Integer ::= integer() ;
KeyAttribute ::= TimeGroup ;
 KeyAttribute ::= Spatial ;
 KeyAttribute ::= TimeGroup | Spatial ;
PrimaryKey ::= isUsedForIndex::Boolean (hasColumn::Column)+ isAssociatedToColumnSet::ColumnSet ;
Class ::= ColumnSet ;
 Class ::= UserInput ;
 Class ::= Concept ;
 Class ::= name::String (attributes::Attribute)+ ;
RoleRestriction ::= name::String restrictionForRelationShip::RelationShip restrictionForConcept::Concept restrictionToConcept::Concept min::Integer max::Integer belongsToConcept::Concept ;
TimeGroup ::= ε ;
Value ::= name::String domainDataType::DomainDataType (belongsToUserInput::UserInput)+ ;
Ordinal ::= Scalar ;
ColumnSetStatistics ::= allNumber::Integer ordinalNumber::Integer nominalNumber::Integer timeNumber::Integer forColumnSet::ColumnSet ;
Scalar ::= Time ;
 Scalar ::= Binary ;
ColumnSet ::= Snapshot ;
 ColumnSet ::= Table ;
 ColumnSet ::= View ;
 ColumnSet ::= number::Integer file::String dbConnectString::String user::String (hasColumn::Column)+ (hasKey::Key)+ correspondsToConcept::Concept correspondsToRelationShip::RelationShip ;
ForeignKey ::= isConnectionTo::Table correspondsToRelationShip::RelationShip ;
Parameter ::= Concept ;
 Parameter ::= RelationShip ;
 Parameter ::= Value ;
 Parameter ::= ε ;
DomainDataType ::= Ordinal ;
 DomainDataType ::= Nominal ;
 DomainDataType ::= baseAttributeD::BaseAttribute ;
Concept ::= subConceptRestriction::String isA::Concept FromConcept::RelationShip ToConcept::RelationShip correspondsToColumnSet::ColumnSet ;
Boolean ::= "true" | "false" ;
View ::= number::Integer file::String dbConnectString::String user::String (hasColumn::Column)+ (hasKey::Key)+ correspondsToConcept::Concept correspondsToRelationShip::RelationShip ;
Constant ::= ε ;
Classifier ::= Class ;
 Classifier ::= DataType ;
 Classifier ::= Class | DataType ;
--------------------metamodels::PASSI.bgf--------------------
Ontology ::= ε ;
Ressource ::= Name::String ;
Concept ::= ε ;
AIP ::= Name::String performative::Agency Domain/Performative ;
Predicate ::= ε ;
Message ::= communication::Agency Domain/Communication Comm_Act::Agency Domain/Performative ;
Action ::= ε ;
Communication ::= Name::String Exchanged Knowledge::Problem Domain/Ontology message::Agency Domain/Message aip::Agency Domain/AIP ;
Role ::= agentR::Agency Domain/Agent (service::Solution Domain/Service)+ (task::Agency Domain/Task)+ (scenario::Problem Domain/Scenario)+ (communication::Agency Domain/Communication)+ ;
Task ::= Name::String fipa_platform_TaskT::Solution Domain/FIPA-platform Task ;
Agent ::= Name::String Knowledge::Problem Domain/Ontology fipa_platform_AgentA::Solution Domain/FIPA-Platform Agent role::Agency Domain/Role (resource::Problem Domain/Ressource)+ (non_functionnal_Requirement::Problem Domain/Non functionnal Requirement)+ (requirement::Problem Domain/Requirement)+ ;
Service ::= ε ;
Performative ::= aip::Agency Domain/AIP ;
Requirement ::= ε ;
String ::= string() ;
Scenario ::= ε ;
--------------------metamodels::MonitorProgram.bgf--------------------
IntegerExp ::= symbol::Integer ;
Direction ::= (in::ε) | (out::ε) ;
Integer ::= integer() ;
VariableDeclaration ::= Parameter ;
 VariableDeclaration ::= type::Type initialValue::Expression structure::Structure ;
OperatorCallExp ::= right::Expression ;
ConditionalStat ::= condition::Expression (thenStats::Statement)+ (elseStats::Statement)+ ;
Monitor ::= program::Program ;
Type ::= name::String ;
Expression ::= VariableExp ;
 Expression ::= PropertyCallExp ;
 Expression ::= LiteralExp ;
BooleanExp ::= symbol::Boolean ;
Structure ::= ProcContainerElement ;
 Structure ::= Procedure ;
Procedure ::= container::ProcContainerElement (parameters::Parameter)+ (statements::Statement)+ ;
String ::= string() ;
ProcContainerElement ::= Program ;
 ProcContainerElement ::= Monitor ;
Statement ::= AssignmentStat ;
 Statement ::= ConditionalStat ;
 Statement ::= WhileStat ;
 Statement ::= ExpressionStat ;
LiteralExp ::= BooleanExp ;
 LiteralExp ::= IntegerExp ;
ExpressionStat ::= expression::Expression ;
ProcedureCallExp ::= (arguments::Expression)+ ;
PropertyCallExp ::= OperatorCallExp ;
 PropertyCallExp ::= AttributeCallExp ;
 PropertyCallExp ::= ProcedureCallExp ;
LocatedElement ::= NamedElement ;
 LocatedElement ::= Expression ;
 LocatedElement ::= Statement ;
Parameter ::= direction::Direction procedure::Procedure ;
Boolean ::= "true" | "false" ;
WhileStat ::= condition::Expression (doStats::Statement)+ ;
Program ::= (monitors::Monitor)+ ;
AttributeCallExp ::= source::Expression name::String ;
NamedElement ::= Structure ;
 NamedElement ::= VariableDeclaration ;
 NamedElement ::= Type ;
AssignmentStat ::= target::VariableExp value::Expression ;
VariableExp ::= declaration::VariableDeclaration ;
--------------------metamodels::MySQL.bgf--------------------
Table ::= (columns::Column)+ database::DataBase ;
Integer ::= integer() ;
DataBase ::= (tables::Table)+ ;
Boolean ::= "true" | "false" ;
EnumColumn ::= enumSet::EnumSet ;
Column ::= IntegerColumn ;
 Column ::= EnumColumn ;
 Column ::= type::String isPrimaryKey::Boolean null::Boolean defaultValue::String comment::String table::Table ;
EnumItem ::= enumSet::EnumSet ;
IntegerColumn ::= isAutoIncrement::Boolean ;
NamedElement ::= DataBase ;
 NamedElement ::= Table ;
 NamedElement ::= Column ;
 NamedElement ::= EnumItem ;
EnumSet ::= (enumItems::EnumItem)+ ;
String ::= string() ;
--------------------metamodels::News.bgf--------------------
Integer ::= integer() ;
Date ::= eDay::DayKind day::Integer month::Integer year::Integer hours::Integer minutes::Integer seconds::Integer ;
Category ::= value::String ;
Element ::= Newspaper ;
 Element ::= News ;
Newspaper ::= language::String copyright::String pubDate::Date category::Category (news::News)+ ;
Boolean ::= "true" | "false" ;
News ::= author::String comments::String pubDate::Date category::Category newspaper::Newspaper ;
String ::= string() ;
DayKind ::= (Monday::ε) | (Tuesday::ε) | (Wednesday::ε) | (Thursday::ε) | (Friday::ε) | (Saturday::ε) | (Sunday::ε) ;
--------------------metamodels::ODP-CV.bgf--------------------
StreamInterfaceSignature ::= (strisig_to_fsig::FlowSignature)+ ;
StreamInterface ::= owner_i::ComputationalObject i_to_bd::Binding specifier_i::ComputationalInterfaceTemplate (i_to_ina::Interaction)+ ;
TerminationSignature ::= tersig_to_intsig::InterrogationSignature ;
InternalAction ::= (constrainer_ec::EnvironmentContract)+ (changedState::State)+ specifier_a::ActionTemplate a_to_bh::Behaviour ;
Interaction ::= Flow ;
 Interaction ::= Signal ;
 Interaction ::= Operation ;
 Interaction ::= Invocation ;
 Interaction ::= Termination ;
OperationInterface ::= owner_i::ComputationalObject i_to_bd::Binding specifier_i::ComputationalInterfaceTemplate (i_to_ina::Interaction)+ ;
State ::= startState::State endState::State (changer::Action)+ st_to_co::ComputationalObject ;
ComputationalObject ::= BindingObject ;
 ComputationalObject ::= (co_to_i::Interface)+ co_to_bh::Behaviour specifier_co::ComputationalObjectTemplate co_to_st::State ;
Invocation ::= inv_to_ter::Termination inv_to_opt::Operation ;
ActionTemplate ::= (at_to_a::Action)+ at_to_isig::InteractionSignature ;
ComputationalTemplate ::= ComputationalObjectTemplate ;
 ComputationalTemplate ::= ComputationalInterfaceTemplate ;
Announcement ::= opt_to_inv::Invocation ;
Interrogation ::= int_to_ter::Termination ;
SignalInterfaceSignature ::= (sgisig_to_ssig::SignalSignature)+ ;
InteractionSignature ::= AnnouncementSignature ;
 InteractionSignature ::= InterrogationSignature ;
 InteractionSignature ::= TerminationSignature ;
 InteractionSignature ::= SignalSignature ;
 InteractionSignature ::= FlowSignature ;
OperationInterfaceSignature ::= (optisig_to_ansig::AnnouncementSignature)+ (optisig_to_intsig::InterrogationSignature)+ ;
Binding ::= bd_to_i::Interface ;
EnvironmentContract ::= (ec_to_a::Action)+ specifier_ec::ComputationalTemplate ;
Termination ::= owner_ter::Interrogation ter_to_inv::Invocation ;
ComputationalInterfaceTemplate ::= (cit_to_i::Interface)+ (aggregate_provide::ComputationalObjectTemplate)+ (aggregate_request::ComputationalObjectTemplate)+ cit_to_intsig::InterfaceSignature ;
InterfaceSignature ::= SignalInterfaceSignature ;
 InterfaceSignature ::= OperationInterfaceSignature ;
 InterfaceSignature ::= StreamInterfaceSignature ;
Behaviour ::= specifier_bh::ComputationalTemplate owner_bh::ComputationalObject (bh_to_a::Action)+ ;
Interface ::= SignalInterface ;
 Interface ::= OperationInterface ;
 Interface ::= StreamInterface ;
Action ::= InternalAction ;
 Action ::= Interaction ;
 Action ::= (constrainer_ec::EnvironmentContract)+ (changedState::State)+ specifier_a::ActionTemplate a_to_bh::Behaviour ;
SignalInterface ::= owner_i::ComputationalObject i_to_bd::Binding specifier_i::ComputationalInterfaceTemplate (i_to_ina::Interaction)+ ;
AnnouncementSignature ::= ansig_to_optisig::OperationInterfaceSignature ;
InterrogationSignature ::= intsig_to_optisig::OperationInterfaceSignature (intsig_to_tersig::TerminationSignature)+ ;
SignalSignature ::= ssig_to_sgisig::SignalInterfaceSignature ;
Flow ::= ina_to_i::Interface ;
ComputationalObjectTemplate ::= (cot_to_co::ComputationalObject)+ (part_provide::ComputationalInterfaceTemplate)+ (part_request::ComputationalInterfaceTemplate)+ ;
FlowSignature ::= fsig_to_strisig::StreamInterfaceSignature ;
Parameter ::= param_to_isig::InteractionSignature ;
Signal ::= ina_to_i::Interface ;
Operation ::= Announcement ;
 Operation ::= Interrogation ;
BindingObject ::= (co_to_i::Interface)+ co_to_bh::Behaviour specifier_co::ComputationalObjectTemplate co_to_st::State ;
--------------------metamodels::ODP-EV.bgf--------------------
PolicyValue ::= pvValue::PolicyEnvelope ;
FieldOfApplication ::= faEnterpriseSpecifications::EnterpriseSpecification ;
Obligation ::= (ruViolation::Violation)+ ;
Behaviour ::= Violation ;
 Behaviour ::= (beObjectives::Objective)+ (beSpecifiers::Contract)+ (beActions::Action)+ beIdentifier::Role bePolicyEnvelope::PolicyEnvelope beConstrainer::PolicyEnvelope (bePolicyConstrainer::Policy)+ (bePolicy::Policy)+ ;
AccountableAction ::= Prescription ;
 AccountableAction ::= Commitment ;
 AccountableAction ::= Declaration ;
 AccountableAction ::= Evaluation ;
 AccountableAction ::= Delegation ;
Rule ::= Obligation ;
 Rule ::= Authorisation ;
 Rule ::= Permission ;
 Rule ::= Prohibition ;
Evaluation ::= (aaAccountableParty::Party)+ ;
Declaration ::= (aaAccountableParty::Party)+ ;
Prescription ::= (aaAccountableParty::Party)+ ;
Objective ::= objFulfiller::ODPSystem objSpecifier::Contract (objRefiners::Objective)+ objRefinement::Objective (objAchievers::Process)+ (objFulfillers::Behaviour)+ ;
Role ::= InterfaceRole ;
 Role ::= roleBehaviour::Behaviour roleSpecifier::Community (rolefillers::EnterpriseObject)+ (roleConstrainer::Policy)+ (roleEOAR::EO_A_R)+ ;
Action ::= AccountableAction ;
 Action ::= (actBehaviours::Behaviour)+ (actArtefactRoleFillers::EnterpriseObject)+ (actResourceRoleFillers::EnterpriseObject)+ (actActorRoleFillers::EnterpriseObject)+ ;
Commitment ::= (aaAccountableParty::Party)+ ;
Scope ::= scOdpSystem::ODPSystem ;
Policy ::= PolicyEnvelope ;
 Policy ::= PolicyValue ;
 Policy ::= AssigmentPolicy ;
 Policy ::= poSpecifier::Contract poOwner::Community (poProcess::Process)+ (poBehaviour::Behaviour)+ (poChanger::Behaviour)+ (poRole::Role)+ (poEnterpriseObject::EnterpriseObject)+ ;
Contract ::= ctPolicies::Policy ctObjective::Objective (ctBehaviours::Behaviour)+ ;
Permission ::= (ruViolation::Violation)+ ;
InterfaceRole ::= roleBehaviour::Behaviour roleSpecifier::Community (rolefillers::EnterpriseObject)+ (roleConstrainer::Policy)+ (roleEOAR::EO_A_R)+ ;
AssigmentPolicy ::= (apEOAR::EO_A_R)+ ;
Process ::= (prObjectives::Objective)+ (prDetails::Step)+ prRefinement::Step (prConstrainer::Policy)+ ;
Step ::= Action ;
 Step ::= (stGraphs::Process)+ stAbstraction::Process ;
ODPSystem ::= odpBehaviour::Scope (odpObjectives::Objective)+ odpSpecifier::EnterpriseSpecification ;
Prohibition ::= (ruViolation::Violation)+ ;
Community ::= coAbstraction::CommunityObject (coMembers::EnterpriseObject)+ (coCommunityRoles::Role)+ (coPolicy::Policy)+ ;
CommunityObject ::= cobjRefinement::Community ;
Delegation ::= dlgEOPD::EO_P_D ;
Party ::= (ptyAccountableAction::AccountableAction)+ ptyEOPD::EO_P_D ;
Violation ::= vioProhibitor::Rule ;
PolicyEnvelope ::= pePolicySetter::Behaviour peBehaviour::Behaviour (peValues::PolicyValue)+ peCurrentValue::PolicyValue ;
EnterpriseSpecification ::= (esDescribedSystems::ODPSystem)+ esContext::FieldOfApplication ;
Authorisation ::= (ruViolation::Violation)+ ;
EnterpriseObject ::= ODPSystem ;
 EnterpriseObject ::= Party ;
 EnterpriseObject ::= CommunityObject ;
 EnterpriseObject ::= (eoConfigurations::Community)+ (eoRoles::Role)+ (eoArtefactActions::Action)+ (eoResourceActions::Action)+ (eoActorActions::Action)+ (eoPolicy::Policy)+ (eoEOAR::EO_A_R)+ eoEOPD::EO_P_D ;
--------------------metamodels::ODP-IV.bgf--------------------
StaticSchema ::= locationTime::Double (SS_IO::InformationObject)+ ;
InformationObject ::= (describer::StaticSchema)+ (IO_IOT::InformationObjectTemplate)+ (IO_IOTy::InformationObjectType)+ (IO_A::Action)+ IO_S::State ;
Action ::= (effect::StateChange)+ (A_AT::ActionTemplate)+ (participant::InformationObject)+ (A_ATy::ActionType)+ ;
InformationObjectType ::= (IOTy_IO::InformationObject)+ (IOTy_constrainer::InvariantSchema)+ ;
InformationObjectTemplate ::= (IOT_IO::InformationObject)+ (IOT_constrainer::InvariantSchema)+ ;
StateChange ::= startState::State endState::State (specifier::DynamicSchema)+ (cause::Action)+ (SC_constrainer::InvariantSchema)+ ;
State ::= change::StateChange causeSC::StateChange S_IO::InformationObject (S_constrainer::InvariantSchema)+ ;
InvariantSchema ::= (constrainer_AT::ActionTemplate)+ (constrainer_ATy::ActionType)+ (constrainer_SC::StateChange)+ (constrainer_S::State)+ (constrainer_IOT::InformationObjectTemplate)+ (constrainer_IOTy::InformationObjectType)+ ;
ActionTemplate ::= (AT_A::Action)+ (AT_constrainer::InvariantSchema)+ ;
ActionType ::= (ATy_A::Action)+ (ATy_constrainer::InvariantSchema)+ ;
DynamicSchema ::= (dsStateChange::StateChange)+ ;
--------------------metamodels::ODP-NV.bgf--------------------
NamingAuthority ::= (coDomain::Domain)+ ;
EngineeringInterfaceReferenceManagementPolicy ::= (eirmpManagementDomain::EngineeringInterfaceReferenceManagementDomain)+ ;
Cluster ::= clusterManager::ClusterManager (clusterBeos::BEO)+ ;
ProtocolObject ::= type::String poChannel::Channel poBinder::Binder (poInterceptor::Interceptor)+ (poBoundProtocolObject::ProtocolObject)+ ;
AddressingAuthority ::= (coDomain::Domain)+ ;
ClientServerChannel ::= chStub::Stub chBinder::Binder chPObject::ProtocolObject (chInterceptor::Interceptor)+ chEndPoint::BEO ;
ClusterManager ::= (clusters::Cluster)+ (clustermanagerBeos::BEO)+ capsuleManager::CapsuleManager ;
Nucleus ::= (otherEngObjects::EngineeringObject)+ (beos::BEO)+ ;
AddressingDomain ::= parentDomain::Domain (subDomain::Domain)+ domControllingObject::ControllingObject (domMember::ControlledObject)+ ;
EngineeringObject ::= Nucleus ;
 EngineeringObject ::= CapsuleManager ;
 EngineeringObject ::= ClusterManager ;
 EngineeringObject ::= BEO ;
 EngineeringObject ::= Stub ;
 EngineeringObject ::= Binder ;
 EngineeringObject ::= ProtocolObject ;
 EngineeringObject ::= Interceptor ;
 EngineeringObject ::= ControllingObject ;
 EngineeringObject ::= ControlledObject ;
 EngineeringObject ::= nodeManager::Nucleus ;
ControllingObject ::= SecurityAuthority ;
 ControllingObject ::= ManagementAuthority ;
 ControllingObject ::= AddressingAuthority ;
 ControllingObject ::= NamingAuthority ;
 ControllingObject ::= (coDomain::Domain)+ ;
String ::= string() ;
Stub ::= stChannel::Channel stBinder::Binder stBeo::BEO ;
ControlledObject ::= (cdoDomain::Domain)+ ;
Capsule ::= (otherEngObjects::EngineeringObject)+ capsuleManager::CapsuleManager (clusterManagers::ClusterManager)+ (clusters::Cluster)+ ;
EngineeringInterfaceReferenceManagementDomain ::= (eirmdReference::EngineeringInterfaceReference)+ eirmdManagementPolicy::EngineeringInterfaceReferenceManagementPolicy ;
NamingDomain ::= EngineeringInterfaceReferenceManagementDomain ;
BEO ::= beoNodeManager::Nucleus (locallyBoundObjects::BEO)+ (localbinds::BEO)+ beoManager::ClusterManager (beoChannel::Channel)+ (beoStub::Stub)+ ;
Binder ::= bdChannel::Channel chBinder::Stub (bdProtocolObject::ProtocolObject)+ ;
ManagementDomain ::= parentDomain::Domain (subDomain::Domain)+ domControllingObject::ControllingObject (domMember::ControlledObject)+ ;
EngineeringInterfaceReference ::= eirManagementDomain::EngineeringInterfaceReferenceManagementDomain ;
Interceptor ::= intChannel::Channel intProtocolObject::ProtocolObject ;
SecurityDomain ::= parentDomain::Domain (subDomain::Domain)+ domControllingObject::ControllingObject (domMember::ControlledObject)+ ;
Domain ::= SecurityDomain ;
 Domain ::= ManagementDomain ;
 Domain ::= AddressingDomain ;
 Domain ::= NamingDomain ;
 Domain ::= parentDomain::Domain (subDomain::Domain)+ domControllingObject::ControllingObject (domMember::ControlledObject)+ ;
Channel ::= ClientServerChannel ;
 Channel ::= chStub::Stub chBinder::Binder chPObject::ProtocolObject (chInterceptor::Interceptor)+ chEndPoint::BEO ;
SecurityAuthority ::= (coDomain::Domain)+ ;
Node ::= location::String manager::Nucleus (capsules::Capsule)+ ;
ManagementAuthority ::= (coDomain::Domain)+ ;
CapsuleManager ::= (cmClusterManagers::ClusterManager)+ ;
--------------------metamodels::ODP-TV.bgf--------------------
TechnologyObject ::= (implStandard::ImplementableStandard)+ (toImplementation::Implementation)+ ;
ImplementableStandard ::= (techObject::TechnologyObject)+ ;
IXIT ::= (ixitImplementation::Implementation)+ ;
Implementation ::= (implIXIT::IXIT)+ (implProduct::TechnologyObject)+ ;
--------------------metamodels::OWL.bgf--------------------
AllValuesFromRestriction ::= OWLAllValuesFromDataRange::OWLDataRange OWLAllValuesFromClass::OWLClass ;
Seq ::= ε ;
CardinalityRestriction ::= OWLCardinality::TypedLiteral ;
List ::= first::RDFSResource rest::List (originalList::List)+ ;
RDFStatement ::= OWLStatement ;
 RDFStatement ::= reificationKind::ReificationKind (graph::RDFGraph)+ RDFpredicate::RDFProperty RDFobject::RDFSResource RDFsubject::RDFSResource (nameForReification::URIReference)+ (document::Document)+ ;
Namespace ::= (document::Document)+ namespaceURIRef::URIReference (namespaceDefinition::NamespaceDefinition)+ ;
Document ::= (localName::LocalName)+ (xmlBase::Namespace)+ (namespaceDefinition::NamespaceDefinition)+ (statement::RDFStatement)+ ;
TransitiveProperty ::= OWLInverseOf::OWLObjectProperty (inverseProperty::OWLObjectProperty)+ ;
Individual ::= (OWLDifferentFrom::Individual)+ (differentIndividual::Individual)+ (OWLSameAs::Individual)+ (sameIndividual::Individual)+ (allDifferent::OWLAllDifferent)+ (enumeratedClass::EnumeratedClass)+ (restrictionClass::HasValueRestriction)+ ;
RDFSClass ::= RDFSDataType ;
 RDFSClass ::= OWLClass ;
 RDFSClass ::= OWLDataRange ;
 RDFSClass ::= (subClassOf::RDFSClass)+ (superClass::RDFSClass)+ (typedResource::RDFSResource)+ (propertyForDomain::RDFProperty)+ (propertyForRange::RDFProperty)+ ;
OWLObjectProperty ::= InverseFunctionalProperty ;
 OWLObjectProperty ::= SymmetricProperty ;
 OWLObjectProperty ::= TransitiveProperty ;
 OWLObjectProperty ::= OWLInverseOf::OWLObjectProperty (inverseProperty::OWLObjectProperty)+ ;
EnumeratedClass ::= (OWLOneOf::Individual)+ ;
XMLLiteral ::= datatypeURI::URIReference (cardinalityRestriction::CardinalityRestriction)+ (minCardinalityRestriction::MinCardinalityRestriction)+ (maxCardinalityRestriction::MaxCardinalityRestriction)+ ;
LocalName ::= name::String document::Document (uriRef::URIReference)+ ;
Property ::= FunctionalProperty ;
 Property ::= OWLDatatypeProperty ;
 Property ::= OWLObjectProperty ;
HasValueRestriction ::= OWLHasLiteralValue::RDFSLiteral OWLHasIndividualValue::Individual ;
OWLClass ::= IntersectionClass ;
 OWLClass ::= UnionClass ;
 OWLClass ::= ComplementClass ;
 OWLClass ::= EnumeratedClass ;
 OWLClass ::= OWLRestriction ;
 OWLClass ::= OWLAllDifferent ;
 OWLClass ::= isDeprecated::Boolean (OWLequivalentClass::OWLClass)+ (equivalentClass::OWLClass)+ (OWLdisjointWith::OWLClass)+ (disjointClass::OWLClass)+ (intersectionClass::IntersectionClass)+ (unionClass::UnionClass)+ (complementClass::ComplementClass)+ (allValuesFromRestrictionClass::AllValuesFromRestriction)+ (someValuesFromRestrictionClass::SomeValuesFromRestriction)+ ;
String ::= string() ;
MinCardinalityRestriction ::= OWLMinCardinality::TypedLiteral ;
RDFSLiteral ::= PlainLiteral ;
 RDFSLiteral ::= TypedLiteral ;
 RDFSLiteral ::= lexicalForm::String (restrictionClass::HasValueRestriction)+ (dataRange::OWLDataRange)+ ;
OWLDataRange ::= datatype::RDFSDataType (OWLOneOf::RDFSLiteral)+ someValuesFromRestrictionClass::SomeValuesFromRestriction allValuesFromRestrictionClass::AllValuesFromRestriction ;
NamespaceDefinition ::= namespacePrefix::String document::Document namespace::Namespace ;
RDFSResource ::= Document ;
 RDFSResource ::= RDFGraph ;
 RDFSResource ::= List ;
 RDFSResource ::= Container ;
 RDFSResource ::= RDFProperty ;
 RDFSResource ::= RDFStatement ;
 RDFSResource ::= URIReferenceNode ;
 RDFSResource ::= BlankNode ;
 RDFSResource ::= RDFSClass ;
 RDFSResource ::= RDFSLiteral ;
 RDFSResource ::= OWLOntology ;
 RDFSResource ::= OWLUniverse ;
 RDFSResource ::= Individual ;
 RDFSResource ::= (uriRef::URIReference)+ (subjectStatement::RDFStatement)+ (objectStatement::RDFStatement)+ (label::PlainLiteral)+ (type::RDFSClass)+ (comment::PlainLiteral)+ (seeAlso::RDFSResource)+ (referringResource::RDFSResource)+ (isDefinedBy::RDFSResource)+ (definedResource::RDFSResource)+ (member::RDFSResource)+ (container::RDFSResource)+ (list::List)+ ;
OWLStatement ::= (ontology::OWLOntology)+ (owlGraph::OWLGraph)+ ;
InverseFunctionalProperty ::= OWLInverseOf::OWLObjectProperty (inverseProperty::OWLObjectProperty)+ ;
OWLAnnotationProperty ::= (predicateStatement::RDFStatement)+ (subPropertyOf::RDFProperty)+ (superProperty::RDFProperty)+ (domain::RDFSClass)+ (range::RDFSClass)+ (propertyRestriction::OWLRestriction)+ (ontology::OWLOntology)+ ;
Bag ::= ε ;
PlainLiteral ::= language::String labeledResource::RDFSResource commentedResource::RDFSResource ;
RDFSDataType ::= (dataRange::OWLDataRange)+ ;
Container ::= Alt ;
 Container ::= Bag ;
 Container ::= Seq ;
 Container ::= Alt | Bag | Seq ;
ReificationKind ::= (none::ε) | (reifiedOnly::ε) | (reified::ε) ;
URIReference ::= UniformResourceIdentifier ;
 URIReference ::= uri::UniformResourceIdentifier resource::RDFSResource (literal::TypedLiteral)+ namedGraph::RDFGraph (reifiedStatement::RDFStatement)+ fragmentIdentifier::LocalName namespace::Namespace ;
Integer ::= integer() ;
OWLDatatypeProperty ::= isDeprecated::Boolean (OWLEquivalentProperty::Property)+ (equivalentProperty::Property)+ ;
OWLAllDifferent ::= OWLDistinctMembers::Individual ;
RDFGraph ::= OWLGraph ;
 RDFGraph ::= graphName::URIReference (statement::RDFStatement)+ ;
FunctionalProperty ::= isDeprecated::Boolean (OWLEquivalentProperty::Property)+ (equivalentProperty::Property)+ ;
BlankNode ::= nodeId::String ;
OWLOntology ::= (owlUniverse::OWLUniverse)+ (OWLPriorVersion::OWLOntology)+ (newerOntology::OWLOntology)+ (OWLIncompatibleWith::OWLOntology)+ (incompatibleOntology::OWLOntology)+ (OWLImports::OWLOntology)+ (importingOntology::OWLOntology)+ (owlGraph::OWLGraph)+ (owlStatement::OWLStatement)+ (versionInfo::RDFSLiteral)+ ;
ComplementClass ::= (OWLComplementOf::OWLClass)+ ;
IntersectionClass ::= (OWLIntersectionOf::OWLClass)+ ;
SymmetricProperty ::= OWLInverseOf::OWLObjectProperty (inverseProperty::OWLObjectProperty)+ ;
SomeValuesFromRestriction ::= OWLSomeValuesFromClass::OWLClass OWLSomeValuesFromDataRange::OWLDataRange ;
ContainerMembershipProperty ::= ε ;
UniformResourceIdentifier ::= name::String (uriRef::URIReference)+ ;
OWLGraph ::= (ontology::OWLOntology)+ (owlStatement::OWLStatement)+ ;
UnionClass ::= (OWLUnionOf::OWLClass)+ ;
OWLUniverse ::= OWLClass ;
 OWLUniverse ::= OWLAnnotationProperty ;
 OWLUniverse ::= OWLOntologyProperty ;
 OWLUniverse ::= Property ;
 OWLUniverse ::= Individual ;
 OWLUniverse ::= OWLDataRange ;
 OWLUniverse ::= (ontology::OWLOntology)+ ;
RDFProperty ::= OWLAnnotationProperty ;
 RDFProperty ::= OWLOntologyProperty ;
 RDFProperty ::= Property ;
 RDFProperty ::= (predicateStatement::RDFStatement)+ (subPropertyOf::RDFProperty)+ (superProperty::RDFProperty)+ (domain::RDFSClass)+ (range::RDFSClass)+ (propertyRestriction::OWLRestriction)+ ;
Alt ::= ε ;
OWLOntologyProperty ::= (predicateStatement::RDFStatement)+ (subPropertyOf::RDFProperty)+ (superProperty::RDFProperty)+ (domain::RDFSClass)+ (range::RDFSClass)+ (propertyRestriction::OWLRestriction)+ (ontology::OWLOntology)+ ;
OWLRestriction ::= HasValueRestriction ;
 OWLRestriction ::= AllValuesFromRestriction ;
 OWLRestriction ::= SomeValuesFromRestriction ;
 OWLRestriction ::= CardinalityRestriction ;
 OWLRestriction ::= MaxCardinalityRestriction ;
 OWLRestriction ::= MinCardinalityRestriction ;
 OWLRestriction ::= OWLOnProperty::RDFProperty ;
Boolean ::= "true" | "false" ;
TypedLiteral ::= XMLLiteral ;
 TypedLiteral ::= datatypeURI::URIReference (cardinalityRestriction::CardinalityRestriction)+ (minCardinalityRestriction::MinCardinalityRestriction)+ (maxCardinalityRestriction::MaxCardinalityRestriction)+ ;
MaxCardinalityRestriction ::= OWLMaxCardinality::TypedLiteral ;
URIReferenceNode ::= (uriRef::URIReference)+ (subjectStatement::RDFStatement)+ (objectStatement::RDFStatement)+ (label::PlainLiteral)+ (type::RDFSClass)+ (comment::PlainLiteral)+ (seeAlso::RDFSResource)+ (referringResource::RDFSResource)+ (isDefinedBy::RDFSResource)+ (definedResource::RDFSResource)+ (member::RDFSResource)+ (container::RDFSResource)+ (list::List)+ ;
--------------------metamodels::OpenConf.owl.bgf--------------------
Decision ::= Acceptance ;
 Decision ::= Rejection ;
 Decision ::= Acceptance | Rejection ;
TraditionalLecture ::= hasAcronym::String ;
RadioCommunicationsTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
AccommodationPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
TwoLevelConference ::= is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country isOrganizedBy::OrganizingCommittee annualOrder::Integer takesPlace::Location hasAcronym::String hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
SignalProcessingTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
SessionChair ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person hasConflictOfInterest::Document email::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasMail::String worksForCompany::String hasAffiliation::String hasFirstName::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String ;
SteeringCommittee ::= organizes::Conference ;
User ::= Committee ;
 User ::= Administrator ;
 User ::= recieve::Document (create::Thing)+ submit::Document ;
Rejection ::= ε ;
Renting ::= ε ;
GovernmentOrganization ::= isProviderOf::Sponsorship ;
CallForManuscripts ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
MealMenu ::= isMenuOf::MealEvent ;
IndexOfAuthors ::= isProducedBy::Chair ;
Speaker ::= ε ;
Publisher ::= issues::Conference_proceedings ;
Description ::= ε ;
OutsideReferee ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person hasConflictOfInterest::Document email::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasMail::String worksForCompany::String hasAffiliation::String hasFirstName::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String ;
OperatingTopicsystems ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Location ::= locationOf::Event ;
GeneralCoChair ::= organizes::Conference ;
ComputerNetworksEnterpriseTopic ::= ε ;
PaperSubmissionChair ::= organizes::Conference ;
SatelliteAndSpaceCommunicationsTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
WorkShop ::= (has_result::Thing)+ sent_by::Person is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime hasTopic::Topic expectedAttendance::Integer isPartOf::Conference ;
High ::= ε ;
MobileComputingTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Research ::= Simulating ;
 Research ::= Modelling ;
 Research ::= Simulating | Modelling ;
ConferenceSession ::= ε ;
SubjectArea ::= ε ;
NGO ::= isProviderOf::Sponsorship ;
Car ::= ε ;
CommunicationTheoryTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
AcademicEvent ::= TalkEvent ;
 AcademicEvent ::= OrganizationalMeeting ;
 AcademicEvent ::= PaperPresentation ;
 AcademicEvent ::= hasCall::Call ;
CallForPapers ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
CommunicationsTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
SecurityTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
PaperAbstract ::= isAbstractOf::Paper abstractIsSubmittedBy::ContactAuthor ;
DiningPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
Author ::= AuthorNotReviewer ;
 Author ::= Co-author ;
 Author ::= Corresponding_Author ;
 Author ::= Author_cd_proceedings_included ;
 Author ::= Lecturer ;
 Author ::= Plenary_lecture_speaker ;
 Author ::= Tutorial_speaker ;
 Author ::= Author_book_proceedings_included ;
 Author ::= ContactAuthor ;
 Author ::= Contact_Author ;
 Author ::= Presenter ;
 Author ::= submitPaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing submitsPaper::Paper writePaper::Paper writes_Paper::Paper ;
PostScript ::= ε ;
HTML ::= ε ;
ContactAuthor ::= submitsAbstract::PaperAbstract ;
ConferenceProgram ::= isProgramOf::Conference consistsOf::Slot ;
Preview ::= ε ;
Workshop ::= ε ;
Delegate ::= One_day_presenter ;
 Delegate ::= Technical_commitee ;
 Delegate ::= Listener ;
 Delegate ::= Session_chair ;
 Delegate ::= Speaker ;
 Delegate ::= Hotel_presenter ;
 Delegate ::= Non_speaker ;
 Delegate ::= IASTED_non_member ;
 Delegate ::= Conference_Hiker ;
 Delegate ::= IASTED_member ;
 Delegate ::= One_day_presenter | Technical_commitee | Listener | Session_chair | Speaker | Hotel_presenter | Non_speaker | IASTED_non_member | Conference_Hiker | IASTED_member ;
Inforamtion ::= ε ;
ComputerArchitectureTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
WorkshopTutorialChair ::= organizes::Conference ;
OrganizingCommittee ::= ProgramCoChair ;
 OrganizingCommittee ::= PublicationsChair ;
 OrganizingCommittee ::= WorkshopTutorialChair ;
 OrganizingCommittee ::= RegistrationChair ;
 OrganizingCommittee ::= StudentAdvocate ;
 OrganizingCommittee ::= FinanceChair ;
 OrganizingCommittee ::= PaperSubmissionChair ;
 OrganizingCommittee ::= PublicityWebChair ;
 OrganizingCommittee ::= SteeringCommittee ;
 OrganizingCommittee ::= GeneralCoChair ;
 OrganizingCommittee ::= organizes::Conference ;
OrganizationalMeeting ::= hasCall::Call ;
PersonalReviewHistory ::= isReviewHistoryOf::Reviewer ;
AccpetIfRoomRating ::= ε ;
RejectedPaper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::Boolean Keywords::String hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
ParallelAndDistributedComputingTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Advocate ::= will_advocate::Advocated_Paper ;
Tax ::= Value_added_tax ;
 Tax ::= Departure_tax ;
 Tax ::= Value_added_tax | Departure_tax ;
City ::= Presenter_city ;
 City ::= Conference_city ;
 City ::= Sponsor_city ;
 City ::= Trip_city ;
 City ::= Presenter_city | Conference_city | Sponsor_city | Trip_city ;
MultimediaTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
CryptographyTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
ReviewQuestion ::= TextualReviewQuestion ;
 ReviewQuestion ::= NumericalReviewQuestion ;
 ReviewQuestion ::= TextualReviewQuestion | NumericalReviewQuestion ;
Tutorial ::= hasTopic::Topic hasAdministrativeEvent::Administrative_event ;
Regular ::= earlyRegistration::Boolean ;
Email ::= Notification_Email ;
 Email ::= Group_Email ;
 Email ::= Approval_Email ;
 Email ::= Rejection_Email ;
 Email ::= Notification_Email | Group_Email | Approval_Email | Rejection_Email ;
ProgramCommittee ::= hasProgramCommitteeMember::ProgramCommitteeMember hasMember::ProgramCommitteeMember ;
Transparency ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
Review ::= Meta-Review ;
 Review ::= Positive_Review ;
 Review ::= Negative_Review ;
 Review ::= Neutral_Review ;
 Review ::= writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::Activity review_written_by::Reviewer reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer containsEvaluation::Evaluation rates::Paper isWritenBy::Reviewer ;
Country ::= ε ;
Person ::= ConferenceMember ;
 Person ::= ExternalReviewer ;
 Person ::= User ;
 Person ::= Conference_participant ;
 Person ::= Conference_contributor ;
 Person ::= Committee_member ;
 Person ::= Conference_applicant ;
 Person ::= Track-workshop_chair ;
 Person ::= Scholar ;
 Person ::= Participant ;
 Person ::= Member_PC ;
 Person ::= Chair_PC ;
 Person ::= Science_Worker ;
 Person ::= Assistant ;
 Person ::= Volunteer ;
 Person ::= participant ;
 Person ::= ConferenceChair ;
 Person ::= Attendee ;
 Person ::= SessionChair ;
 Person ::= TPCMember ;
 Person ::= Paper_Author ;
 Person ::= Conference_Participant ;
 Person ::= Agency_Staff_Member ;
 Person ::= Possible_Reviewer ;
 Person ::= Student ;
 Person ::= Delegate ;
 Person ::= Sponsor ;
 Person ::= OutsideReferee ;
 Person ::= ConferenceAttendant ;
 Person ::= Chairman ;
 Person ::= Organizer ;
 Person ::= ProgramCommitteeMember ;
 Person ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person hasConflictOfInterest::Document email::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasMail::String worksForCompany::String hasAffiliation::String hasFirstName::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String ;
ProgramCommitteeMember ::= ProgramCommitteeChair ;
 ProgramCommitteeMember ::= Chair ;
 ProgramCommitteeMember ::= memberOfProgramCommittee::ProgramCommittee maxPapers::Integer addedBy::Administrator isMemberOf::ProgramCommittee hasPassword::String ;
PaperQuestion ::= ε ;
Poster ::= is_submitted_at::Conference_volume ;
 Poster ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
RegistrationChair ::= organizes::Conference ;
Submission ::= Final_manuscript ;
 Submission ::= Initial_manuscipt ;
 Submission ::= Final_manuscript | Initial_manuscipt ;
Paper ::= PaperFullVersion ;
 Paper ::= Invited_Paper ;
 Paper ::= Short_Paper ;
 Paper ::= Full_Paper ;
 Paper ::= Accepted_Paper ;
 Paper ::= Rejected_Paper ;
 Paper ::= Undecided_Paper ;
 Paper ::= ActivePaper ;
 Paper ::= PendingPaper ;
 Paper ::= WithdrawnPaper ;
 Paper ::= RejectedPaper ;
 Paper ::= PublishedPaper ;
 Paper ::= Camera_Ready_Paper ;
 Paper ::= Workshop_Paper ;
 Paper ::= Industrial_Paper ;
 Paper ::= Conference_Paper ;
 Paper ::= Submitted_Paper ;
 Paper ::= Poster_Paper ;
 Paper ::= Regular_Paper ;
 Paper ::= Demo_Paper ;
 Paper ::= AcceptedPaper ;
 Paper ::= Abstract ;
 Paper ::= PaperAbstract ;
 Paper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::Boolean Keywords::String hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Volunteer ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person hasConflictOfInterest::Document email::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasMail::String worksForCompany::String hasAffiliation::String hasFirstName::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String ;
WithdrawnPaper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::Boolean Keywords::String hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Fee ::= Registration_fee ;
 Fee ::= Hotel_fee ;
 Fee ::= Fee_for_extra_trip ;
 Fee ::= Registration_fee | Hotel_fee | Fee_for_extra_trip ;
PCMembersList ::= isProducedBy::Chair ;
Lecture ::= Plenary_lecture ;
 Lecture ::= QualitatvieLecture ;
 Lecture ::= TraditionalLecture ;
 Lecture ::= hasAcronym::String ;
Committee ::= Program_committee ;
 Committee ::= Organizing_committee ;
 Committee ::= Steering_committee ;
 Committee ::= has_members::Committee_member was_a_committee_of::Conference_volume has_a_committee_co-chair::Co-chair has_a_committee_chair::Chair ;
OutputDocument ::= CD-ROM ;
 OutputDocument ::= IndexOfAuthors ;
 OutputDocument ::= ExternalReviewersList ;
 OutputDocument ::= Program ;
 OutputDocument ::= PCMembersList ;
 OutputDocument ::= ListOfAbstracts ;
 OutputDocument ::= BookletOfAbstracts ;
 OutputDocument ::= Proceedings ;
 OutputDocument ::= isProducedBy::Chair ;
Evaluation ::= isContainedIn::Review ;
QualitatvieLecture ::= hasAcronym::String ;
Assistance ::= ε ;
NumericalReviewQuestion ::= ε ;
Symposium ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location ;
Organization ::= Company ;
 Organization ::= AcademiaOrganization ;
 Organization ::= IndustryOrganization ;
 Organization ::= NGO ;
 Organization ::= GovernmentOrganization ;
 Organization ::= University ;
 Organization ::= isProviderOf::Sponsorship ;
ComputerNetworksSecurityTopic ::= ε ;
URL ::= Event_URL ;
 URL ::= Senior_Reviewer_URL ;
 URL ::= Chair_URL ;
 URL ::= Contact_Person_URL ;
 URL ::= Regular_Reviewer_URL ;
 URL ::= Event_URL | Senior_Reviewer_URL | Chair_URL | Contact_Person_URL | Regular_Reviewer_URL ;
Text ::= ε ;
AuthorNotReviewer ::= submitPaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing submitsPaper::Paper writePaper::Paper writes_Paper::Paper ;
PersonalPublicationHistory ::= ε ;
Topics ::= RFC ;
 Topics ::= Classic_Papers ;
 Topics ::= Networking ;
 Topics ::= Humour ;
 Topics ::= Programming ;
 Topics ::= Computer_Science ;
 Topics ::= RFC | Classic_Papers | Networking | Humour | Programming | Computer_Science ;
ActivitySubmissionForm ::= TutorialProposal ;
 ActivitySubmissionForm ::= WorksopProposal ;
 ActivitySubmissionForm ::= isSubmittedBy::Author hasAuthor::Author submissionDeadline::dateTime ;
AssociatedChair ::= memberOfConference::Conference ;
Conference ::= Conference_volume ;
 Conference ::= TwoLevelConference ;
 Conference ::= SingleLevelConference ;
 Conference ::= is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country isOrganizedBy::OrganizingCommittee annualOrder::Integer takesPlace::Location hasAcronym::String hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
Document ::= Email ;
 Document ::= Template ;
 Document ::= article ;
 Document ::= SlideSet ;
 Document ::= Programme ;
 Document ::= MealMenu ;
 Document ::= Programme_Brochure ;
 Document ::= Flyer ;
 Document ::= Web_Site ;
 Document ::= Multi-author_Volume ;
 Document ::= Form ;
 Document ::= Mailing_list ;
 Document ::= Record_of_attendance ;
 Document ::= Brief_introduction_for_Session_chair ;
 Document ::= Invitation_letter ;
 Document ::= Viza ;
 Document ::= Transparency ;
 Document ::= Submission ;
 Document ::= Payment_document ;
 Document ::= Evaluation ;
 Document ::= PaperAbstract ;
 Document ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
Computer ::= ε ;
Viza ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
Presentation ::= Invited_talk ;
 Presentation ::= PowerPoint_presentation ;
 Presentation ::= Video_presentation ;
 Presentation ::= is_given_by::Active_conference_participant ;
ReviewRating ::= WeekRejectRating ;
 ReviewRating ::= AcceptRating ;
 ReviewRating ::= AccpetIfRoomRating ;
 ReviewRating ::= RejectRating ;
 ReviewRating ::= WeekRejectRating | AcceptRating | AccpetIfRoomRating | RejectRating ;
Low ::= ε ;
WirelessCommunicationsTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Item ::= Transport_vehicle ;
 Item ::= Card ;
 Item ::= Audiovisual_equipment ;
 Item ::= Publication ;
 Item ::= Document ;
 Item ::= go_through::Activity (is_used_for::Thing)+ is_signed_by::Person is_made_from::Item is_sent_after::Time is_needed_for::Person is_sent_before::Time is_prepared_by::Person is_used_by::Person is_given_to::Person is_sent_by::Person is_writen_by::Person ;
ConferenceAttendant ::= mustPay::Fee hasAdress::String paid::Boolean hasPhone::String ;
TextualReviewQuestion ::= ε ;
Card ::= Credit_card ;
Activity ::= Event_Creation ;
 Activity ::= Request ;
 Activity ::= Event_Approval ;
 Activity ::= Registration ;
 Activity ::= paper_assignment ;
 Activity ::= bidding_of_reviewer ;
 Activity ::= managing_of_conference_process ;
 Activity ::= reviewing_proces ;
 Activity ::= notification ;
 Activity ::= submission_process ;
 Activity ::= Activity_before_conference ;
 Activity ::= Conference_activity ;
 Activity ::= Activity_after_conference ;
 Activity ::= WorkShop ;
 Activity ::= Lecture ;
 Activity ::= (has_result::Thing)+ sent_by::Person is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime hasTopic::Topic expectedAttendance::Integer isPartOf::Conference ;
TalkEvent ::= ClosingTalk ;
 TalkEvent ::= WelcomeTalk ;
 TalkEvent ::= ClosingTalk | WelcomeTalk ;
FinanceChair ::= organizes::Conference ;
Track ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
CADTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Moderate ::= ε ;
Integer ::= integer() ;
PublicationsChair ::= organizes::Conference ;
ComputerNetworksSensorTopic ::= ε ;
Networking ::= ε ;
Participant ::= Student ;
 Participant ::= Regular ;
 Participant ::= Member ;
 Participant ::= earlyRegistration::Boolean ;
MeetingRoomPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
SlideSet ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
ExternalReviewer ::= assignedByReviewer::Reviewer cooperatesReviewer::Reviewer ;
Organizer ::= CommitteeMember ;
Topic ::= ParallelAndDistributedComputingTopic ;
 Topic ::= WirelessCommunicationsTopic ;
 Topic ::= OperatingTopicsystems ;
 Topic ::= ComputerNetworksTopic ;
 Topic ::= SatelliteAndSpaceCommunicationsTopic ;
 Topic ::= CADTopic ;
 Topic ::= MultimediaTopic ;
 Topic ::= CommunicationsTopic ;
 Topic ::= PowerlineTransmissionTopic ;
 Topic ::= AntennasTopic ;
 Topic ::= PerformanceTopic ;
 Topic ::= SignalProcessingTopic ;
 Topic ::= MicroelectronicsTopic ;
 Topic ::= TestOnlyTopic ;
 Topic ::= RadioCommunicationsTopic ;
 Topic ::= ComputerArchitectureTopic ;
 Topic ::= MedicineTopic ;
 Topic ::= SecurityTopic ;
 Topic ::= MobileComputingTopic ;
 Topic ::= CryptographyTopic ;
 Topic ::= CommunicationTheoryTopic ;
 Topic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
WelcomeTalk ::= ε ;
SocialEvent ::= Excursion ;
 SocialEvent ::= Reception ;
 SocialEvent ::= Excursion | Reception ;
ContactInformation ::= hasCity::String hasStreet::String hasPostalCode::String hasPhone::String ;
Misc ::= ε ;
FreeTimeBreak ::= ε ;
Van ::= ε ;
PerformanceTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Sponzorship ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
Programme ::= belongsToEvent::ConferenceEvent ;
BreakEvent ::= CoffeeBreak ;
 BreakEvent ::= FreeTimeBreak ;
 BreakEvent ::= MealBreak ;
 BreakEvent ::= CoffeeBreak | FreeTimeBreak | MealBreak ;
Preference ::= ε ;
Sponsor ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person hasConflictOfInterest::Document email::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasMail::String worksForCompany::String hasAffiliation::String hasFirstName::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String ;
Organisation ::= Organising_Agency ;
 Organisation ::= Academic_Institution ;
 Organisation ::= Proceedings_Publisher ;
 Organisation ::= (publisherOf::Thing)+ technicallyOrganises::Thing ;
AcademiaOrganization ::= isProviderOf::Sponsorship ;
ConferenceMember ::= ConferenceChair ;
 ConferenceMember ::= AssociatedChair ;
 ConferenceMember ::= Chairman ;
 ConferenceMember ::= ProgramCommitteeMember ;
 ConferenceMember ::= memberOfConference::Conference ;
MedicineTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Other ::= ε ;
Time ::= Deadline ;
 Time ::= Trip_day ;
 Time ::= Conference_days ;
 Time ::= Deadline | Trip_day | Conference_days ;
RatedPapers ::= hasRating::ReviewRating ;
ConferenceChair ::= memberOfConference::Conference ;
 ConferenceChair ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person hasConflictOfInterest::Document email::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasMail::String worksForCompany::String hasAffiliation::String hasFirstName::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String ;
Place ::= DiningPlace ;
 Place ::= ConferenceVenuePlace ;
 Place ::= MeetingRoomPlace ;
 Place ::= AccommodationPlace ;
 Place ::= Building ;
 Place ::= Session_room ;
 Place ::= Hotel_room ;
 Place ::= Conference_hall ;
 Place ::= Main_office ;
 Place ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
EEnum ::= (Yes::ε) | (No::ε) | (Accept::ε) | (Reject::ε) | (Unsure::ε) | (male::ε) | (female::ε) | (high::ε) | (medium::ε) | (low::ε) | (very high::ε) | (Compilers::ε) | (Microarchitecture::ε) | (Systems::ε) | (ForwardLookingIdea::ε) ;
AcceptRating ::= ε ;
Form ::= Hotel_registration_form ;
 Form ::= Registration_form ;
 Form ::= Author_information_form ;
 Form ::= Hotel_registration_form | Registration_form | Author_information_form ;
ClosingTalk ::= ε ;
Bid ::= adjustedBy::Reviewer ;
MealBreak ::= ε ;
ListOfAbstracts ::= isProducedBy::Chair ;
Attendee ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person hasConflictOfInterest::Document email::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasMail::String worksForCompany::String hasAffiliation::String hasFirstName::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String ;
Registration ::= (has_result::Thing)+ sent_by::Person is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime hasTopic::Topic expectedAttendance::Integer isPartOf::Conference ;
 Registration ::= ε ;
WorksopProposal ::= isSubmittedBy::Author hasAuthor::Author submissionDeadline::dateTime ;
Lecturer ::= Worker_lecturer ;
 Lecturer ::= Student_lecturer ;
 Lecturer ::= Worker_lecturer | Student_lecturer ;
Departure ::= ε ;
Listener ::= ε ;
Building ::= Presenter_house ;
 Building ::= Conference_restaurant ;
 Building ::= Conference_building ;
 Building ::= Conference_airport ;
 Building ::= Conference_hotel ;
 Building ::= Sponsor_company_house ;
 Building ::= Presenter_university ;
 Building ::= Presenter_house | Conference_restaurant | Conference_building | Conference_airport | Conference_hotel | Sponsor_company_house | Presenter_university ;
ConferenceDinner ::= hasMenu::MealMenu ;
Thing ::= Role ;
 Thing ::= Detail ;
 Thing ::= Review_expertise ;
 Thing ::= Review_preference ;
 Thing ::= date ;
 Thing ::= URL ;
 Thing ::= conference_setup ;
 Thing ::= Contribution ;
 Thing ::= Person ;
 Thing ::= Event ;
 Thing ::= Place ;
 Thing ::= City ;
 Thing ::= Activity ;
 Thing ::= OrganizingCommittee ;
 Thing ::= ActivitySubmissionForm ;
 Thing ::= DoubleBlindReview ;
 Thing ::= ConferenceProgram ;
 Thing ::= Slot ;
 Thing ::= ResearchTopic ;
 Thing ::= OutputDocument ;
 Thing ::= ProgramCommittee ;
 Thing ::= Criterion ;
 Thing ::= Session ;
 Thing ::= Organizer ;
 Thing ::= Document ;
 Thing ::= Role | Detail | Review_expertise | Review_preference | date | URL | conference_setup | Contribution | Person | Event | Place | City | Activity | OrganizingCommittee | ActivitySubmissionForm | DoubleBlindReview | ConferenceProgram | Slot | ResearchTopic | OutputDocument | ProgramCommittee | Criterion ;
ProgramCommitteeChair ::= endReview::Review ;
Scholar ::= studyAt::University ;
Excursion ::= ε ;
TPCMember ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person hasConflictOfInterest::Document email::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasMail::String worksForCompany::String hasAffiliation::String hasFirstName::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String ;
Assistant ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person hasConflictOfInterest::Document email::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasMail::String worksForCompany::String hasAffiliation::String hasFirstName::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String ;
ConferenceEvent ::= NonAcademicEvent ;
 ConferenceEvent ::= AcademicEvent ;
 ConferenceEvent ::= hasAttendee::Person hasLocation::Place hasProgramme::Programme hasEndDateTime::dateTime hasStartDateTime::dateTime ;
Member ::= Program_chair ;
 Member ::= Advocate ;
 Member ::= Reviewer ;
 Member ::= Web_address::String ;
Programming ::= ε ;
ComputerNetworksMeasurementsTopic ::= ε ;
Committees ::= Program_Committee ;
 Committees ::= Review_Committee ;
 Committees ::= Program_Committee | Review_Committee ;
ProgramCoChair ::= organizes::Conference ;
People ::= Author ;
 People ::= Member ;
 People ::= Surname::String Name::String Country::String E-mail::String Organisation::String ;
ComputerNetworksTopic ::= ComputerNetworksEnterpriseTopic ;
 ComputerNetworksTopic ::= ComputerNetworksSwitchingTopic ;
 ComputerNetworksTopic ::= ComputerNetworksSensorTopic ;
 ComputerNetworksTopic ::= ComputerNetworksSecurityTopic ;
 ComputerNetworksTopic ::= ComputerNetworksOpticalTopic ;
 ComputerNetworksTopic ::= ComputerNetworksMeasurementsTopic ;
 ComputerNetworksTopic ::= ComputerNetworksManagementTopic ;
 ComputerNetworksTopic ::= ComputerNetworksAapplicationsTopic ;
 ComputerNetworksTopic ::= ComputerNetworksEnterpriseTopic | ComputerNetworksSwitchingTopic | ComputerNetworksSensorTopic | ComputerNetworksSecurityTopic | ComputerNetworksOpticalTopic | ComputerNetworksMeasurementsTopic | ComputerNetworksManagementTopic | ComputerNetworksAapplicationsTopic ;
Reception ::= ε ;
University ::= scientificallyOrganises::Academic_Institution isProviderOf::Sponsorship ;
Administrator ::= approve::Event assign::Role assigns::Thing finalizePaperAssignment::Conference runPaperAssignmentTools::Conference enableVirtualMeeting::Conference startReviewerBidding::Conference assignReviewer::Reviewer rejectPaper::Paper enterConferenceDetails::Conference printHardcopyMailingManifests::Conference setMaxPapers::ProgramCommitteeMember enterReviewCriteria::Conference acceptPaper::Paper addProgramCommitteeMember::ProgramCommitteeMember ;
PaymentMode ::= ε ;
BookletOfAbstracts ::= isProducedBy::Chair ;
StudentAdvocate ::= organizes::Conference ;
PaperPresentation ::= relatedToPaper::AcceptedPaper ;
Chair ::= was_a_committee_chair_of::Committee assigns_reviewers_to_article::Reviewer creates_program::program produces::OutputDocument sets::Thing accepts::Paper rejects::Paper asksForPreference::Reviewer isChairOf::Session ;
ExternalReviewersList ::= isProducedBy::Chair ;
Money ::= Tax ;
 Money ::= Fee ;
 Money ::= Sponzorship ;
 Money ::= Tip ;
 Money ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
AntennasTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
MicroelectronicsTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Template ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
ComputerNetworksOpticalTopic ::= ε ;
Role ::= Admin_Role ;
 Role ::= Author_Role ;
 Role ::= Committe_Role ;
 Role ::= Head_Role ;
 Role ::= Reviewer_Role ;
 Role ::= assigned_by::Administrator ;
Chairman ::= ConferenceChair ;
 Chairman ::= AssociatedChair ;
 Chairman ::= ProgramCommitteeChair ;
 Chairman ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person hasConflictOfInterest::Document email::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasMail::String worksForCompany::String hasAffiliation::String hasFirstName::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String memberOfConference::Conference ;
TutorialProposal ::= isSubmittedBy::Author hasAuthor::Author submissionDeadline::dateTime ;
RFC ::= ε ;
Presenter ::= Invited_Speaker ;
Criterion ::= hasWeight::double ;
Modelling ::= ε ;
Call ::= CallForPapers ;
 Call ::= CallForReviews ;
 Call ::= CallForManuscripts ;
 Call ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
PaperStatus ::= isStatusOf::Paper ;
Tip ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
Event ::= Symposium ;
 Event ::= Social_event ;
 Event ::= Administrative_event ;
 Event ::= Working_event ;
 Event ::= pc_meeting ;
 Event ::= session ;
 Event ::= Social_Event ;
 Event ::= Scientific_Event ;
 Event ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location ;
Deadline ::= Deadline_hotel_reservation ;
 Deadline ::= Submissions_deadline ;
 Deadline ::= Deadline_for_notification_of_acceptance ;
 Deadline ::= Registation_deadline ;
 Deadline ::= Camera_ready_manuscript_deadline ;
 Deadline ::= done_till::date ;
MealEvent ::= ConferenceDinner ;
 MealEvent ::= hasMenu::MealMenu ;
Acceptance ::= ε ;
PublicityWebChair ::= organizes::Conference ;
Session ::= Conference_Session ;
 Session ::= Regular_Session ;
 Session ::= Poster_Session ;
 Session ::= Demo_Session ;
 Session ::= Workshop_Session ;
 Session ::= Speaker_lecture ;
 Session ::= hasAssignedPaper::AcceptedPaper room::String isAssociatedTo::Slot hasChair::Chair ;
Reccommendation ::= Marginal_Tend_to_Reject ;
 Reccommendation ::= Marginal_Tend_to_Accept ;
 Reccommendation ::= Portable_Reject ;
 Reccommendation ::= Must_Accept ;
 Reccommendation ::= Clear_Reject ;
 Reccommendation ::= Clear_Accept ;
 Reccommendation ::= Marginal_Tend_to_Reject | Marginal_Tend_to_Accept | Portable_Reject | Must_Accept | Clear_Reject | Clear_Accept ;
CoffeeBreak ::= ε ;
State ::= Presenter_state ;
 State ::= Conference_state ;
 State ::= Sponsor_state ;
 State ::= Presenter_state | Conference_state | Sponsor_state ;
Detail ::= ε ;
Request ::= Help_Request ;
Humour ::= ε ;
Program ::= isProducedBy::Chair ;
Proceedings ::= Conference_Proceedings ;
 Proceedings ::= (includes::Thing)+ ;
PublishedPaper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::Boolean Keywords::String hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Company ::= isProviderOf::Sponsorship ;
DoubleBlindReview ::= isExecutedBy::Reviewer ;
ReviewForm ::= ε ;
CommitteeMember ::= isMemberOf::Conference ;
PendingPaper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::Boolean Keywords::String hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
PowerlineTransmissionTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
IndustryOrganization ::= isProviderOf::Sponsorship ;
TestOnlyTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
WeekRejectRating ::= ε ;
Trip ::= ε ;
RTF ::= ε ;
Banquet ::= ε ;
Abstract ::= Tutorial_Abstract ;
 Abstract ::= Invited_Talk_Abstract ;
 Abstract ::= (is_the_1th_part_of::Thing)+ part_of_article::article ;
Cheque ::= ε ;
Flyer ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
Taxi ::= ε ;
PaperFullVersion ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::Boolean Keywords::String hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
RejectRating ::= ε ;
Introduction ::= Introduction_of_speaker ;
SingleLevelConference ::= is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country isOrganizedBy::OrganizingCommittee annualOrder::Integer takesPlace::Location hasAcronym::String hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
Sponsorship ::= TravelGrant ;
 Sponsorship ::= providedBy::Organization hasCostCurrency::String hasCostAmount::Integer ;
ConferenceVenuePlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
ResearchTopic ::= ε ;
String ::= string() ;
Currency ::= ε ;
CallForReviews ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
Contribution ::= Poster ;
 Contribution ::= Short_paper ;
 Contribution ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
ComputerNetworksManagementTopic ::= ε ;
NonAcademicEvent ::= MealEvent ;
 NonAcademicEvent ::= BreakEvent ;
 NonAcademicEvent ::= SocialEvent ;
 NonAcademicEvent ::= MealEvent | BreakEvent | SocialEvent ;
Reviewer ::= Meta-Reviewer ;
 Reviewer ::= assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper assignExternalReviewer::ExternalReviewer invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ hasReviewHistory::PersonalReviewHistory executes::DoubleBlindReview cooperates::ExternalReviewer IsAssignedTo::Paper hasConflictedPaper::Paper hasPreferredPaper::Paper hasPreferredTopic::ResearchTopic writeReview::Review has_made_review::Paper_Review UserName::String Comments_to_Chair::String Other_Areas::String ;
ComputerNetworksSwitchingTopic ::= ε ;
Slot ::= date::date endsAt::time beginsAt::time forms::ConferenceProgram hosts::Session ;
Student ::= earlyRegistration::Boolean ;
 Student ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person hasConflictOfInterest::Document email::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasMail::String worksForCompany::String hasAffiliation::String hasFirstName::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String ;
Format ::= Adobe_PDF ;
 Format ::= MS_Word ;
 Format ::= Corel_Word_Perfect ;
 Format ::= HTML ;
 Format ::= PostScript ;
 Format ::= RTF ;
 Format ::= Text ;
 Format ::= Adobe_PDF | MS_Word | Corel_Word_Perfect | HTML | PostScript | RTF | Text ;
PersonalHistory ::= PersonalPublicationHistory ;
 PersonalHistory ::= PersonalReviewHistory ;
 PersonalHistory ::= PersonalPublicationHistory | PersonalReviewHistory ;
Account ::= registred_by::Person ;
Publication ::= Cd_proceening ;
 Publication ::= Book_proceeding ;
 Publication ::= Cd_proceening | Book_proceeding ;
ComputerNetworksAapplicationsTopic ::= ε ;
Boolean ::= "true" | "false" ;
Question ::= ReviewQuestion ;
 Question ::= PaperQuestion ;
 Question ::= ReviewQuestion | PaperQuestion ;
ActivePaper ::= RatedPapers ;
 ActivePaper ::= hasRating::ReviewRating ;
AcceptedPaper ::= relatedToEvent::PaperPresentation isAssignedToSession::Session ;
TravelGrant ::= providedBy::Organization hasCostCurrency::String hasCostAmount::Integer ;
Simulating ::= ε ;
--------------------metamodels::OpenQVT.bgf--------------------
RTransService ::= visibility::String signature::String rule::Rule ;
RootRule ::= ruleSet::RuleSet ;
OCLService ::= visibility::String signature::String rule::Rule ;
Rule ::= RootRule ;
 Rule ::= RuleSetCall ;
 Rule ::= QARule ;
 Rule ::= context::Context subRule::Rule superRule::Rule (services::Service)+ ;
Variable ::= name::String type::String value::String visibility::String context::Context ;
JavaFilter ::= qARule::QARule ;
JavaAction ::= qARule::QARule ;
Action ::= RTransAction ;
 Action ::= JavaAction ;
 Action ::= qARule::QARule ;
Service ::= OCLService ;
 Service ::= RTransService ;
 Service ::= JavaService ;
 Service ::= visibility::String signature::String rule::Rule ;
JavaService ::= visibility::String signature::String rule::Rule ;
RTransQuery ::= qARule::QARule ;
String ::= string() ;
OCLFilter ::= qARule::QARule ;
RulePart ::= Action ;
 RulePart ::= Query ;
Context ::= (variables::Variable)+ rule::Rule ;
QARule ::= query::Query action::Action ;
RTransAction ::= qARule::QARule ;
Query ::= OCLFilter ;
 Query ::= RTransQuery ;
 Query ::= JavaQuery ;
 Query ::= JavaFilter ;
 Query ::= qARule::QARule ;
JavaQuery ::= qARule::QARule ;
RuleSet ::= rootRule::RootRule ;
RuleSetCall ::= ruleSet::RuleSet ;
--------------------metamodels::PCS.owl.bgf--------------------
Decision ::= Acceptance ;
 Decision ::= Rejection ;
 Decision ::= Acceptance | Rejection ;
TraditionalLecture ::= hasAcronym::String ;
RadioCommunicationsTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
AccommodationPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
TwoLevelConference ::= is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country isOrganizedBy::OrganizingCommittee annualOrder::Integer takesPlace::Location hasAcronym::String finishedBy::Program_Comitee_Chair focusesOn::Topic startedBy::Program_Comitee_Chair takesPlace::Location has_conference_member::ConferenceMember WebSite::anyURI Topic_of_conference::String Date::date hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
SignalProcessingTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
SessionChair ::= loggin_in::System submit::Document get::Email E-mail::String hasMail::String worksForCompany::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
SteeringCommittee ::= organizes::Conference ;
User ::= Committee ;
 User ::= Administrator ;
 User ::= recieve::Document (create::Thing)+ submit::Document ;
Rejection ::= ε ;
Renting ::= ε ;
GovernmentOrganization ::= isProviderOf::Sponsorship ;
CallForManuscripts ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
MealMenu ::= isMenuOf::MealEvent ;
Speaker ::= loggin_in::System submit::Document get::Email E-mail::String hasMail::String worksForCompany::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
IndexOfAuthors ::= isProducedBy::Chair ;
Publisher ::= issues::Conference_proceedings ;
Description ::= ε ;
OutsideReferee ::= loggin_in::System submit::Document get::Email E-mail::String hasMail::String worksForCompany::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
OperatingTopicsystems ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Location ::= locationOf::Event ;
GeneralCoChair ::= organizes::Conference ;
ComputerNetworksEnterpriseTopic ::= ε ;
PaperSubmissionChair ::= organizes::Conference ;
SatelliteAndSpaceCommunicationsTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
High ::= ε ;
MobileComputingTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Research ::= Simulating ;
 Research ::= Modelling ;
 Research ::= Simulating | Modelling ;
ConferenceSession ::= ε ;
Invitation ::= sended_by::Administrator Receiver_of_email::String Message_of_email::String Subject_of_email::String ;
SubjectArea ::= ε ;
NGO ::= isProviderOf::Sponsorship ;
Car ::= ε ;
CommunicationTheoryTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
AcademicEvent ::= TalkEvent ;
 AcademicEvent ::= OrganizationalMeeting ;
 AcademicEvent ::= PaperPresentation ;
 AcademicEvent ::= hasCall::Call ;
CallForPapers ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
CommunicationsTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
SecurityTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
PaperAbstract ::= isAbstractOf::Paper abstractIsSubmittedBy::ContactAuthor ;
DiningPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
PostScript ::= ε ;
HTML ::= ε ;
ContactAuthor ::= submitsAbstract::PaperAbstract ;
Author ::= AuthorNotReviewer ;
 Author ::= Corresponding_Author ;
 Author ::= Author_cd_proceedings_included ;
 Author ::= Lecturer ;
 Author ::= Plenary_lecture_speaker ;
 Author ::= Tutorial_speaker ;
 Author ::= Author_book_proceedings_included ;
 Author ::= ContactAuthor ;
 Author ::= Contact_Author ;
 Author ::= Co-Author ;
 Author ::= MainAuthor ;
 Author ::= Presenter ;
 Author ::= submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution write_paper::Paper submitPaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing ;
ConferenceProgram ::= isProgramOf::Conference consistsOf::Slot ;
Preview ::= ε ;
Workshop ::= ε ;
Delegate ::= One_day_presenter ;
 Delegate ::= Technical_commitee ;
 Delegate ::= Listener ;
 Delegate ::= Session_chair ;
 Delegate ::= Hotel_presenter ;
 Delegate ::= Non_speaker ;
 Delegate ::= IASTED_non_member ;
 Delegate ::= Conference_Hiker ;
 Delegate ::= IASTED_member ;
 Delegate ::= Speaker ;
 Delegate ::= One_day_presenter | Technical_commitee | Listener | Session_chair | Hotel_presenter | Non_speaker | IASTED_non_member | Conference_Hiker | IASTED_member ;
Inforamtion ::= ε ;
ComputerArchitectureTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
WorkshopTutorialChair ::= organizes::Conference ;
OrganizingCommittee ::= ProgramCoChair ;
 OrganizingCommittee ::= PublicationsChair ;
 OrganizingCommittee ::= WorkshopTutorialChair ;
 OrganizingCommittee ::= RegistrationChair ;
 OrganizingCommittee ::= StudentAdvocate ;
 OrganizingCommittee ::= FinanceChair ;
 OrganizingCommittee ::= PaperSubmissionChair ;
 OrganizingCommittee ::= PublicityWebChair ;
 OrganizingCommittee ::= SteeringCommittee ;
 OrganizingCommittee ::= GeneralCoChair ;
 OrganizingCommittee ::= organizes::Conference ;
OrganizationalMeeting ::= hasCall::Call ;
PersonalReviewHistory ::= isReviewHistoryOf::Reviewer ;
AccpetIfRoomRating ::= ε ;
RejectedPaper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
ParallelAndDistributedComputingTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Advocate ::= will_advocate::Advocated_Paper ;
Tax ::= Value_added_tax ;
 Tax ::= Departure_tax ;
 Tax ::= Value_added_tax | Departure_tax ;
City ::= Presenter_city ;
 City ::= Conference_city ;
 City ::= Sponsor_city ;
 City ::= Trip_city ;
 City ::= Presenter_city | Conference_city | Sponsor_city | Trip_city ;
MultimediaTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
CryptographyTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
ReviewQuestion ::= TextualReviewQuestion ;
 ReviewQuestion ::= NumericalReviewQuestion ;
 ReviewQuestion ::= TextualReviewQuestion | NumericalReviewQuestion ;
Tutorial ::= hasTopic::Topic hasAdministrativeEvent::Administrative_event ;
Email ::= Notification_Email ;
 Email ::= Group_Email ;
 Email ::= Approval_Email ;
 Email ::= Rejection_Email ;
 Email ::= Information ;
 Email ::= Invitation ;
 Email ::= sended_by::Administrator Receiver_of_email::String Message_of_email::String Subject_of_email::String ;
Regular ::= submits_to_conference::Conference earlyRegistration::Boolean ;
ProgramCommittee ::= hasProgramCommitteeMember::ProgramCommitteeMember hasMember::ProgramCommitteeMember ;
Transparency ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String recieved_by::User used_by::Person submited__by::User ;
Review ::= Meta-Review ;
 Review ::= Positive_Review ;
 Review ::= Negative_Review ;
 Review ::= Neutral_Review ;
 Review ::= gives_classification::classification is_created_in::Activity review_written_by::Reviewer reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer containsEvaluation::Evaluation rates::Paper isWritenBy::Reviewer assigned_review_by::Primary_Reviewer written_review_by::Reviewer writtenBy::Reviewer reviews::Reviewed_contribution ;
Country ::= ε ;
Person ::= ExternalReviewer ;
 Person ::= User ;
 Person ::= Conference_participant ;
 Person ::= Conference_contributor ;
 Person ::= Committee_member ;
 Person ::= Conference_applicant ;
 Person ::= Track-workshop_chair ;
 Person ::= Scholar ;
 Person ::= Participant ;
 Person ::= Member_PC ;
 Person ::= Chair_PC ;
 Person ::= Science_Worker ;
 Person ::= Assistant ;
 Person ::= Volunteer ;
 Person ::= Attendee ;
 Person ::= SessionChair ;
 Person ::= TPCMember ;
 Person ::= Paper_Author ;
 Person ::= Conference_Participant ;
 Person ::= Agency_Staff_Member ;
 Person ::= Possible_Reviewer ;
 Person ::= Student ;
 Person ::= Delegate ;
 Person ::= Sponsor ;
 Person ::= OutsideReferee ;
 Person ::= ConferenceAttendant ;
 Person ::= Program_Comitee_Chair ;
 Person ::= External_Reviewer ;
 Person ::= ConferenceMember ;
 Person ::= Chairman ;
 Person ::= chair ;
 Person ::= Organizer ;
 Person ::= ProgramCommitteeMember ;
 Person ::= Speaker ;
 Person ::= loggin_in::System submit::Document get::Email E-mail::String hasMail::String worksForCompany::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
ProgramCommitteeMember ::= Chair ;
 ProgramCommitteeMember ::= ProgramCommitteeChair ;
 ProgramCommitteeMember ::= memberOfProgramCommittee::ProgramCommittee maxPapers::Integer addedBy::Administrator isMemberOf::ProgramCommittee hasPassword::String ;
PaperQuestion ::= ε ;
Poster ::= is_submitted_at::Conference_volume ;
 Poster ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String changedBy::Author hasContributionStatus::EEnum ;
 Poster ::= hasContributionFileStatus::EEnum ;
RegistrationChair ::= organizes::Conference ;
Submission ::= Final_manuscript ;
 Submission ::= Initial_manuscipt ;
 Submission ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
Paper ::= PaperFullVersion ;
 Paper ::= Invited_Paper ;
 Paper ::= Short_Paper ;
 Paper ::= Full_Paper ;
 Paper ::= Accepted_Paper ;
 Paper ::= Rejected_Paper ;
 Paper ::= Undecided_Paper ;
 Paper ::= ActivePaper ;
 Paper ::= PendingPaper ;
 Paper ::= WithdrawnPaper ;
 Paper ::= RejectedPaper ;
 Paper ::= PublishedPaper ;
 Paper ::= Camera_Ready_Paper ;
 Paper ::= Workshop_Paper ;
 Paper ::= Industrial_Paper ;
 Paper ::= Conference_Paper ;
 Paper ::= Poster_Paper ;
 Paper ::= Regular_Paper ;
 Paper ::= Demo_Paper ;
 Paper ::= AcceptedPaper ;
 Paper ::= Submitted_Paper ;
 Paper ::= Accepted_paper ;
 Paper ::= Rejected_paper ;
 Paper ::= Abstract ;
 Paper ::= PaperAbstract ;
 Paper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
Volunteer ::= loggin_in::System submit::Document get::Email E-mail::String hasMail::String worksForCompany::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
WithdrawnPaper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
Fee ::= Registration_fee ;
 Fee ::= Hotel_fee ;
 Fee ::= Fee_for_extra_trip ;
 Fee ::= Registration_fee | Hotel_fee | Fee_for_extra_trip ;
PCMembersList ::= isProducedBy::Chair ;
Lecture ::= Plenary_lecture ;
 Lecture ::= QualitatvieLecture ;
 Lecture ::= TraditionalLecture ;
 Lecture ::= hasAcronym::String ;
Committee ::= Organizing_committee ;
 Committee ::= Steering_committee ;
 Committee ::= Program_committee ;
 Committee ::= has_members::Committee_member was_a_committee_of::Conference_volume has_a_committee_co-chair::Co-chair has_a_committee_chair::Chair ;
OutputDocument ::= CD-ROM ;
 OutputDocument ::= IndexOfAuthors ;
 OutputDocument ::= ExternalReviewersList ;
 OutputDocument ::= Program ;
 OutputDocument ::= PCMembersList ;
 OutputDocument ::= ListOfAbstracts ;
 OutputDocument ::= BookletOfAbstracts ;
 OutputDocument ::= Proceedings ;
 OutputDocument ::= isProducedBy::Chair ;
Evaluation ::= isContainedIn::Review ;
QualitatvieLecture ::= hasAcronym::String ;
Assistance ::= ε ;
NumericalReviewQuestion ::= ε ;
Report ::= ε ;
Symposium ::= starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator ;
Organization ::= Company ;
 Organization ::= AcademiaOrganization ;
 Organization ::= IndustryOrganization ;
 Organization ::= NGO ;
 Organization ::= GovernmentOrganization ;
 Organization ::= University ;
 Organization ::= isProviderOf::Sponsorship ;
ComputerNetworksSecurityTopic ::= ε ;
URL ::= Event_URL ;
 URL ::= Senior_Reviewer_URL ;
 URL ::= Chair_URL ;
 URL ::= Contact_Person_URL ;
 URL ::= Regular_Reviewer_URL ;
 URL ::= Event_URL | Senior_Reviewer_URL | Chair_URL | Contact_Person_URL | Regular_Reviewer_URL ;
Text ::= ε ;
AuthorNotReviewer ::= submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution write_paper::Paper submitPaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing ;
PersonalPublicationHistory ::= ε ;
Topics ::= RFC ;
 Topics ::= Classic_Papers ;
 Topics ::= Networking ;
 Topics ::= Humour ;
 Topics ::= Programming ;
 Topics ::= Computer_Science ;
 Topics ::= RFC | Classic_Papers | Networking | Humour | Programming | Computer_Science ;
ActivitySubmissionForm ::= TutorialProposal ;
 ActivitySubmissionForm ::= WorksopProposal ;
 ActivitySubmissionForm ::= isSubmittedBy::Author hasAuthor::Author submissionDeadline::dateTime ;
AssociatedChair ::= memberOfConference::Conference member_of_conference::Conference ;
Conference ::= Conference_volume ;
 Conference ::= TwoLevelConference ;
 Conference ::= SingleLevelConference ;
 Conference ::= Programme ;
 Conference ::= is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country isOrganizedBy::OrganizingCommittee annualOrder::Integer takesPlace::Location hasAcronym::String finishedBy::Program_Comitee_Chair focusesOn::Topic startedBy::Program_Comitee_Chair takesPlace::Location has_conference_member::ConferenceMember WebSite::anyURI Topic_of_conference::String Date::date hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
Computer ::= ε ;
Document ::= Template ;
 Document ::= article ;
 Document ::= SlideSet ;
 Document ::= MealMenu ;
 Document ::= Programme_Brochure ;
 Document ::= Flyer ;
 Document ::= Web_Site ;
 Document ::= Multi-author_Volume ;
 Document ::= Form ;
 Document ::= Mailing_list ;
 Document ::= Record_of_attendance ;
 Document ::= Brief_introduction_for_Session_chair ;
 Document ::= Invitation_letter ;
 Document ::= Viza ;
 Document ::= Transparency ;
 Document ::= Payment_document ;
 Document ::= Evaluation ;
 Document ::= Email ;
 Document ::= Programme ;
 Document ::= Submission ;
 Document ::= PaperAbstract ;
 Document ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String recieved_by::User used_by::Person submited__by::User ;
Viza ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String recieved_by::User used_by::Person submited__by::User ;
Presentation ::= Invited_talk ;
 Presentation ::= PowerPoint_presentation ;
 Presentation ::= Video_presentation ;
 Presentation ::= is_given_by::Active_conference_participant ;
ReviewRating ::= WeekRejectRating ;
 ReviewRating ::= AcceptRating ;
 ReviewRating ::= AccpetIfRoomRating ;
 ReviewRating ::= RejectRating ;
 ReviewRating ::= WeekRejectRating | AcceptRating | AccpetIfRoomRating | RejectRating ;
Low ::= ε ;
WirelessCommunicationsTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Item ::= Transport_vehicle ;
 Item ::= Card ;
 Item ::= Audiovisual_equipment ;
 Item ::= Publication ;
 Item ::= Document ;
 Item ::= go_through::Activity (is_used_for::Thing)+ is_signed_by::Person is_made_from::Item is_sent_after::Time is_needed_for::Person is_sent_before::Time is_prepared_by::Person is_used_by::Person is_given_to::Person is_sent_by::Person is_writen_by::Person ;
ConferenceAttendant ::= mustPay::Fee hasAdress::String paid::Boolean hasPhone::String ;
TextualReviewQuestion ::= ε ;
Card ::= Credit_card ;
Activity ::= Event_Creation ;
 Activity ::= Request ;
 Activity ::= Event_Approval ;
 Activity ::= Registration ;
 Activity ::= paper_assignment ;
 Activity ::= bidding_of_reviewer ;
 Activity ::= managing_of_conference_process ;
 Activity ::= reviewing_proces ;
 Activity ::= notification ;
 Activity ::= submission_process ;
 Activity ::= Activity_before_conference ;
 Activity ::= Conference_activity ;
 Activity ::= Activity_after_conference ;
 Activity ::= Lecture ;
 Activity ::= hasTopic::Topic expectedAttendance::Integer isPartOf::Conference is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime has_result::article sent_by::Person ;
TalkEvent ::= ClosingTalk ;
 TalkEvent ::= WelcomeTalk ;
 TalkEvent ::= ClosingTalk | WelcomeTalk ;
FinanceChair ::= organizes::Conference ;
Track ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
CADTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Moderate ::= ε ;
Integer ::= integer() ;
PublicationsChair ::= organizes::Conference ;
ComputerNetworksSensorTopic ::= ε ;
Networking ::= ε ;
Participant ::= Student ;
 Participant ::= Regular ;
 Participant ::= Member ;
 Participant ::= submits_to_conference::Conference earlyRegistration::Boolean ;
MeetingRoomPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
SlideSet ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String recieved_by::User used_by::Person submited__by::User ;
ExternalReviewer ::= assignedByReviewer::Reviewer cooperatesReviewer::Reviewer ;
Organizer ::= CommitteeMember ;
 Organizer ::= loggin_in::System submit::Document get::Email E-mail::String hasMail::String worksForCompany::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
Topic ::= ParallelAndDistributedComputingTopic ;
 Topic ::= WirelessCommunicationsTopic ;
 Topic ::= OperatingTopicsystems ;
 Topic ::= ComputerNetworksTopic ;
 Topic ::= SatelliteAndSpaceCommunicationsTopic ;
 Topic ::= CADTopic ;
 Topic ::= MultimediaTopic ;
 Topic ::= CommunicationsTopic ;
 Topic ::= PowerlineTransmissionTopic ;
 Topic ::= AntennasTopic ;
 Topic ::= PerformanceTopic ;
 Topic ::= SignalProcessingTopic ;
 Topic ::= MicroelectronicsTopic ;
 Topic ::= TestOnlyTopic ;
 Topic ::= RadioCommunicationsTopic ;
 Topic ::= ComputerArchitectureTopic ;
 Topic ::= MedicineTopic ;
 Topic ::= SecurityTopic ;
 Topic ::= MobileComputingTopic ;
 Topic ::= CryptographyTopic ;
 Topic ::= CommunicationTheoryTopic ;
 Topic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
WelcomeTalk ::= ε ;
SocialEvent ::= Excursion ;
 SocialEvent ::= Reception ;
 SocialEvent ::= Excursion | Reception ;
Information ::= sended_by::Administrator Receiver_of_email::String Message_of_email::String Subject_of_email::String ;
ContactInformation ::= hasCity::String hasStreet::String hasPostalCode::String hasPhone::String ;
Misc ::= ε ;
FreeTimeBreak ::= ε ;
Van ::= ε ;
Slides ::= hasContributionFileStatus::EEnum ;
PerformanceTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Sponzorship ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
Programme ::= belongsToEvent::ConferenceEvent ;
BreakEvent ::= CoffeeBreak ;
 BreakEvent ::= FreeTimeBreak ;
 BreakEvent ::= MealBreak ;
 BreakEvent ::= CoffeeBreak | FreeTimeBreak | MealBreak ;
Preference ::= ε ;
Sponsor ::= loggin_in::System submit::Document get::Email E-mail::String hasMail::String worksForCompany::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
Organisation ::= Organising_Agency ;
 Organisation ::= Academic_Institution ;
 Organisation ::= Proceedings_Publisher ;
 Organisation ::= (publisherOf::Thing)+ technicallyOrganises::Thing ;
AcademiaOrganization ::= isProviderOf::Sponsorship ;
ConferenceMember ::= Reviewer ;
 ConferenceMember ::= ConferenceChair ;
 ConferenceMember ::= AssociatedChair ;
 ConferenceMember ::= Author ;
 ConferenceMember ::= CommitteeMember ;
 ConferenceMember ::= Chairman ;
 ConferenceMember ::= ProgramCommitteeMember ;
 ConferenceMember ::= memberOfConference::Conference member_of_conference::Conference ;
MedicineTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Other ::= ε ;
Time ::= Deadline ;
 Time ::= Trip_day ;
 Time ::= Conference_days ;
 Time ::= Deadline | Trip_day | Conference_days ;
RatedPapers ::= hasRating::ReviewRating ;
ConferenceChair ::= memberOfConference::Conference member_of_conference::Conference ;
Place ::= DiningPlace ;
 Place ::= ConferenceVenuePlace ;
 Place ::= MeetingRoomPlace ;
 Place ::= AccommodationPlace ;
 Place ::= Building ;
 Place ::= Session_room ;
 Place ::= Hotel_room ;
 Place ::= Conference_hall ;
 Place ::= Main_office ;
 Place ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
EEnum ::= (Yes::ε) | (No::ε) | (Accept::ε) | (Reject::ε) | (Unsure::ε) | (submitted::ε) | (missing::ε) | (notStarted::ε) | (active::ε) | (finished::ε) | (accepted::ε) | (rejected::ε) | (regular::ε) | (invited::ε) | (lowBid::ε) | (-::ε) | (CONFLICT::ε) | (wantNot::ε) | (highBid::ε) | (Compilers::ε) | (Microarchitecture::ε) | (Systems::ε) | (ForwardLookingIdea::ε) | (1::ε) | (2::ε) | (3::ε) | (4::ε) | (5::ε) | (6::ε) | (7::ε) | (male::ε) | (female::ε) | (high::ε) | (medium::ε) | (low::ε) | (very high::ε) ;
AcceptRating ::= ε ;
Form ::= Hotel_registration_form ;
 Form ::= Registration_form ;
 Form ::= Author_information_form ;
 Form ::= Hotel_registration_form | Registration_form | Author_information_form ;
ClosingTalk ::= ε ;
Bid ::= adjustedBy::Reviewer ;
MealBreak ::= ε ;
ListOfAbstracts ::= isProducedBy::Chair ;
Attendee ::= loggin_in::System submit::Document get::Email E-mail::String hasMail::String worksForCompany::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
Registration ::= hasTopic::Topic expectedAttendance::Integer isPartOf::Conference is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime has_result::article sent_by::Person ;
 Registration ::= ε ;
WorksopProposal ::= isSubmittedBy::Author hasAuthor::Author submissionDeadline::dateTime ;
Lecturer ::= Worker_lecturer ;
 Lecturer ::= Student_lecturer ;
 Lecturer ::= Worker_lecturer | Student_lecturer ;
Departure ::= ε ;
Listener ::= ε ;
Building ::= Presenter_house ;
 Building ::= Conference_restaurant ;
 Building ::= Conference_building ;
 Building ::= Conference_airport ;
 Building ::= Conference_hotel ;
 Building ::= Sponsor_company_house ;
 Building ::= Presenter_university ;
 Building ::= Presenter_house | Conference_restaurant | Conference_building | Conference_airport | Conference_hotel | Sponsor_company_house | Presenter_university ;
ConferenceDinner ::= hasMenu::MealMenu ;
Thing ::= Event ;
 Thing ::= Role ;
 Thing ::= Activity ;
 Thing ::= Detail ;
 Thing ::= Person ;
 Thing ::= Review_expertise ;
 Thing ::= Review_preference ;
 Thing ::= date ;
 Thing ::= URL ;
 Thing ::= conference_setup ;
 Thing ::= Topic ;
 Thing ::= Place ;
 Thing ::= City ;
 Thing ::= OrganizingCommittee ;
 Thing ::= ActivitySubmissionForm ;
 Thing ::= DoubleBlindReview ;
 Thing ::= ConferenceProgram ;
 Thing ::= Slot ;
 Thing ::= ResearchTopic ;
 Thing ::= OutputDocument ;
 Thing ::= ProgramCommittee ;
 Thing ::= Criterion ;
 Thing ::= Program_Comitee ;
 Thing ::= Contribution ;
 Thing ::= Conflict_Of_Interest ;
 Thing ::= Conflict_Rules ;
 Thing ::= Program_Comitee_Meeting ;
 Thing ::= Conference ;
 Thing ::= Document ;
 Thing ::= Session ;
 Thing ::= Submission ;
 Thing ::= Organizer ;
 Thing ::= Event | Role | Activity | Detail | Person | Review_expertise | Review_preference | date | URL | conference_setup | Topic | Place | City | OrganizingCommittee | ActivitySubmissionForm | DoubleBlindReview | ConferenceProgram | Slot | ResearchTopic | OutputDocument | ProgramCommittee | Criterion | Program_Comitee | Contribution | Conflict_Of_Interest | Conflict_Rules | Program_Comitee_Meeting ;
ProgramCommitteeChair ::= endReview::Review ;
Scholar ::= studyAt::University ;
MainAuthor ::= submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution write_paper::Paper submitPaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing ;
Excursion ::= ε ;
TPCMember ::= loggin_in::System submit::Document get::Email E-mail::String hasMail::String worksForCompany::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
Assistant ::= loggin_in::System submit::Document get::Email E-mail::String hasMail::String worksForCompany::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
ConferenceEvent ::= NonAcademicEvent ;
 ConferenceEvent ::= AcademicEvent ;
 ConferenceEvent ::= hasAttendee::Person hasLocation::Place hasProgramme::Programme hasEndDateTime::dateTime hasStartDateTime::dateTime ;
Member ::= Program_chair ;
 Member ::= Advocate ;
 Member ::= Web_address::String ;
Programming ::= ε ;
ComputerNetworksMeasurementsTopic ::= ε ;
Committees ::= Review_Committee ;
 Committees ::= Program_committee ;
ProgramCoChair ::= organizes::Conference ;
ComputerNetworksTopic ::= ComputerNetworksEnterpriseTopic ;
 ComputerNetworksTopic ::= ComputerNetworksSwitchingTopic ;
 ComputerNetworksTopic ::= ComputerNetworksSensorTopic ;
 ComputerNetworksTopic ::= ComputerNetworksSecurityTopic ;
 ComputerNetworksTopic ::= ComputerNetworksOpticalTopic ;
 ComputerNetworksTopic ::= ComputerNetworksMeasurementsTopic ;
 ComputerNetworksTopic ::= ComputerNetworksManagementTopic ;
 ComputerNetworksTopic ::= ComputerNetworksAapplicationsTopic ;
 ComputerNetworksTopic ::= ComputerNetworksEnterpriseTopic | ComputerNetworksSwitchingTopic | ComputerNetworksSensorTopic | ComputerNetworksSecurityTopic | ComputerNetworksOpticalTopic | ComputerNetworksMeasurementsTopic | ComputerNetworksManagementTopic | ComputerNetworksAapplicationsTopic ;
People ::= Member ;
 People ::= Surname::String Name::String Country::String E-mail::String Organisation::String ;
Reception ::= ε ;
University ::= scientificallyOrganises::Academic_Institution isProviderOf::Sponsorship ;
Administrator ::= approve::Event assign::Role assigns::Thing send::Email generate::Thing finalizePaperAssignment::Conference runPaperAssignmentTools::Conference enableVirtualMeeting::Conference startReviewerBidding::Conference assignReviewer::Reviewer rejectPaper::Paper enterConferenceDetails::Conference printHardcopyMailingManifests::Conference setMaxPapers::ProgramCommitteeMember enterReviewCriteria::Conference acceptPaper::Paper addProgramCommitteeMember::ProgramCommitteeMember ;
PaymentMode ::= ε ;
BookletOfAbstracts ::= isProducedBy::Chair ;
StudentAdvocate ::= organizes::Conference ;
PaperPresentation ::= relatedToPaper::AcceptedPaper ;
Chair ::= produces::OutputDocument sets::Thing accepts::Paper rejects::Paper asksForPreference::Reviewer isChairOf::Session ;
ExternalReviewersList ::= isProducedBy::Chair ;
Money ::= Tax ;
 Money ::= Fee ;
 Money ::= Sponzorship ;
 Money ::= Tip ;
 Money ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
AntennasTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
MicroelectronicsTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Template ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String recieved_by::User used_by::Person submited__by::User ;
ComputerNetworksOpticalTopic ::= ε ;
Role ::= Admin_Role ;
 Role ::= Author_Role ;
 Role ::= Committe_Role ;
 Role ::= Head_Role ;
 Role ::= Reviewer_Role ;
 Role ::= assigned_by::Administrator ;
Chairman ::= AssociatedChair ;
 Chairman ::= ProgramCommitteeChair ;
 Chairman ::= loggin_in::System submit::Document get::Email E-mail::String hasMail::String worksForCompany::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String memberOfConference::Conference member_of_conference::Conference ;
TutorialProposal ::= isSubmittedBy::Author hasAuthor::Author submissionDeadline::dateTime ;
RFC ::= ε ;
Presenter ::= Invited_Speaker ;
Criterion ::= hasWeight::double ;
Modelling ::= ε ;
Call ::= CallForPapers ;
 Call ::= CallForReviews ;
 Call ::= CallForManuscripts ;
 Call ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
PaperStatus ::= isStatusOf::Paper ;
Tip ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
Event ::= Symposium ;
 Event ::= Social_event ;
 Event ::= Administrative_event ;
 Event ::= Working_event ;
 Event ::= pc_meeting ;
 Event ::= session ;
 Event ::= Social_Event ;
 Event ::= Scientific_Event ;
 Event ::= starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator ;
Deadline ::= Deadline_hotel_reservation ;
 Deadline ::= Submissions_deadline ;
 Deadline ::= Deadline_for_notification_of_acceptance ;
 Deadline ::= Registation_deadline ;
 Deadline ::= Camera_ready_manuscript_deadline ;
 Deadline ::= done_till::date ;
MealEvent ::= ConferenceDinner ;
 MealEvent ::= hasMenu::MealMenu ;
Acceptance ::= ε ;
PublicityWebChair ::= organizes::Conference ;
Session ::= Conference_Session ;
 Session ::= Regular_Session ;
 Session ::= Poster_Session ;
 Session ::= Demo_Session ;
 Session ::= Workshop_Session ;
 Session ::= Speaker_lecture ;
 Session ::= hasAssignedPaper::AcceptedPaper room::String isAssociatedTo::Slot hasChair::Chair ;
Reccommendation ::= Marginal_Tend_to_Reject ;
 Reccommendation ::= Marginal_Tend_to_Accept ;
 Reccommendation ::= Portable_Reject ;
 Reccommendation ::= Must_Accept ;
 Reccommendation ::= Clear_Reject ;
 Reccommendation ::= Clear_Accept ;
 Reccommendation ::= Marginal_Tend_to_Reject | Marginal_Tend_to_Accept | Portable_Reject | Must_Accept | Clear_Reject | Clear_Accept ;
CoffeeBreak ::= ε ;
State ::= Presenter_state ;
 State ::= Conference_state ;
 State ::= Sponsor_state ;
 State ::= Presenter_state | Conference_state | Sponsor_state ;
Detail ::= ε ;
Request ::= Help_Request ;
Humour ::= ε ;
PhaseOfConferencePreparation ::= Setup_Phase ;
 PhaseOfConferencePreparation ::= Camera_Ready_Copy_Phase ;
 PhaseOfConferencePreparation ::= Assignment_Phase ;
 PhaseOfConferencePreparation ::= Blocked_Phase ;
 PhaseOfConferencePreparation ::= Abstract_And_Paper_Submission_Phase ;
 PhaseOfConferencePreparation ::= Invitation_Of_Reviewers_Phase ;
 PhaseOfConferencePreparation ::= Review_Phase ;
 PhaseOfConferencePreparation ::= Closed_Phase ;
 PhaseOfConferencePreparation ::= Bidding_Phase ;
 PhaseOfConferencePreparation ::= hasPhaseStatus::EEnum ;
Program ::= isProducedBy::Chair ;
CD ::= ε ;
Proceedings ::= Conference_Proceedings ;
 Proceedings ::= (includes::Thing)+ ;
PublishedPaper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
Company ::= isProviderOf::Sponsorship ;
DoubleBlindReview ::= isExecutedBy::Reviewer ;
ReviewForm ::= ε ;
CommitteeMember ::= Secondary_Reviewer ;
 CommitteeMember ::= Primary_Reviewer ;
 CommitteeMember ::= isMemberOf::Conference reject_paper::Paper accept::Paper ;
PendingPaper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
PowerlineTransmissionTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
IndustryOrganization ::= isProviderOf::Sponsorship ;
TestOnlyTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
WeekRejectRating ::= ε ;
System ::= ε ;
Discussion ::= ε ;
Trip ::= ε ;
RTF ::= ε ;
Abstract ::= Tutorial_Abstract ;
 Abstract ::= Invited_Talk_Abstract ;
 Abstract ::= (is_the_1th_part_of::Thing)+ part_of_article::article ;
Banquet ::= ε ;
Cheque ::= ε ;
Flyer ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String recieved_by::User used_by::Person submited__by::User ;
Taxi ::= ε ;
PaperFullVersion ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
RejectRating ::= ε ;
Introduction ::= Introduction_of_speaker ;
SingleLevelConference ::= is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country isOrganizedBy::OrganizingCommittee annualOrder::Integer takesPlace::Location hasAcronym::String finishedBy::Program_Comitee_Chair focusesOn::Topic startedBy::Program_Comitee_Chair takesPlace::Location has_conference_member::ConferenceMember WebSite::anyURI Topic_of_conference::String Date::date hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
Sponsorship ::= TravelGrant ;
 Sponsorship ::= providedBy::Organization hasCostCurrency::String hasCostAmount::Integer ;
ConferenceVenuePlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
ResearchTopic ::= ε ;
String ::= string() ;
Currency ::= ε ;
Contribution ::= Poster ;
 Contribution ::= Short_paper ;
 Contribution ::= Contribution_File ;
 Contribution ::= Paper ;
 Contribution ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String changedBy::Author hasContributionStatus::EEnum ;
CallForReviews ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
ComputerNetworksManagementTopic ::= ε ;
NonAcademicEvent ::= MealEvent ;
 NonAcademicEvent ::= BreakEvent ;
 NonAcademicEvent ::= SocialEvent ;
 NonAcademicEvent ::= MealEvent | BreakEvent | SocialEvent ;
Reviewer ::= Meta-Reviewer ;
 Reviewer ::= invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ writes_review::Review hasReviewHistory::PersonalReviewHistory executes::DoubleBlindReview cooperates::ExternalReviewer IsAssignedTo::Paper hasConflictedPaper::Paper hasPreferredPaper::Paper hasPreferredTopic::ResearchTopic writeReview::Review has_made_review::Paper_Review UserName::String Comments_to_Chair::String Other_Areas::String refuses::Pending_Proposed_Conflict reviews::Paper bidsFor::Paper confirmes::Pending_Proposed_Conflict assignedPaperBy::Program_Comitee_Chair assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper assignExternalReviewer::ExternalReviewer ;
ComputerNetworksSwitchingTopic ::= ε ;
Slot ::= date::date endsAt::time beginsAt::time forms::ConferenceProgram hosts::Session ;
Student ::= submits_to_conference::Conference earlyRegistration::Boolean ;
 Student ::= loggin_in::System submit::Document get::Email E-mail::String hasMail::String worksForCompany::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
Format ::= Adobe_PDF ;
 Format ::= MS_Word ;
 Format ::= Corel_Word_Perfect ;
 Format ::= HTML ;
 Format ::= PostScript ;
 Format ::= RTF ;
 Format ::= Text ;
 Format ::= Adobe_PDF | MS_Word | Corel_Word_Perfect | HTML | PostScript | RTF | Text ;
PersonalHistory ::= PersonalPublicationHistory ;
 PersonalHistory ::= PersonalReviewHistory ;
 PersonalHistory ::= PersonalPublicationHistory | PersonalReviewHistory ;
Account ::= registred_by::Person ;
Publication ::= Cd_proceening ;
 Publication ::= Book_proceeding ;
 Publication ::= Cd_proceening | Book_proceeding ;
ComputerNetworksAapplicationsTopic ::= ε ;
Boolean ::= "true" | "false" ;
Question ::= ReviewQuestion ;
 Question ::= PaperQuestion ;
 Question ::= ReviewQuestion | PaperQuestion ;
ActivePaper ::= RatedPapers ;
 ActivePaper ::= hasRating::ReviewRating ;
AcceptedPaper ::= relatedToEvent::PaperPresentation isAssignedToSession::Session ;
TravelGrant ::= providedBy::Organization hasCostCurrency::String hasCostAmount::Integer ;
Simulating ::= ε ;
--------------------metamodels::PDG.bgf--------------------
Integer ::= integer() ;
ExpressionNode ::= name::String expression::Expression (dataDependenceNodes::ExpressionNode)+ (controlDependenceNodes::ExpressionNode)+ ;
EnterNode ::= name::String (controlDependenceNodes::ExpressionNode)+ ;
Boolean ::= "true" | "false" ;
Expression ::= name::String isIdentifier::Boolean (innerExpressions::Expression)+ ;
String ::= string() ;
MProgramDependenceGraph ::= node::EnterNode ;
--------------------metamodels::PIF.bgf--------------------
Before ::= ε ;
Object ::= Agent ;
Activity ::= Decision ;
Uses ::= ε ;
Decision ::= ε ;
Relation ::= Creates ;
 Relation ::= Modifies ;
 Relation ::= Before ;
 Relation ::= Uses ;
 Relation ::= Performs ;
 Relation ::= ActivityStatus ;
 Relation ::= Succesor ;
 Relation ::= Creates | Modifies | Before | Uses | Performs | ActivityStatus | Succesor ;
Modifies ::= ε ;
Creates ::= ε ;
Agent ::= ε ;
Succesor ::= ε ;
Timepoint ::= ε ;
Entity ::= Activity ;
 Entity ::= Object ;
 Entity ::= Timepoint ;
 Entity ::= Relation ;
 Entity ::= Activity | Object | Timepoint | Relation ;
Performs ::= ε ;
ActivityStatus ::= ε ;
--------------------metamodels::PRR.bgf--------------------
RealExp ::= realSymbol::Double ;
VariableDeclaration ::= type::PRRTypes/OclType varName::String (variableExp::PRRExpressions/VariableExp)+ ;
OperatorCallExp ::= ε ;
NavigationOrAttributeCallExp ::= name::String ;
LoopExp ::= body::PRRExpressions/OclExpression (iterators::PRRExpressions/Iterator)+ ;
IntegerType ::= ε ;
RuleVariable ::= ruleVariableOwner::Binding filter::PRRExpressions/OclExpression ;
BooleanExp ::= booleanSymbol::Boolean ;
CreateAction ::= (insertArguments::PRRExpressions/OclExpression)+ ;
RuleAction ::= DeleteAction ;
 RuleAction ::= AssignAction ;
 RuleAction ::= InvokeAction ;
 RuleAction ::= CreateAction ;
 RuleAction ::= actionOwner::Rule ;
String ::= string() ;
IteratorExp ::= name::String ;
InvokeAction ::= invocation::PRRExpressions/OclExpression ;
StringExp ::= stringSymbol::String ;
RuleSet ::= (rules::Rule)+ ;
AssignAction ::= objValue::PRRExpressions/OclExpression aValue::PRRExpressions/OclExpression ;
Binding ::= bindingOwner::Rule (ruleVariable::RuleVariable)+ ;
TypeExp ::= referredType::PRRTypes/OclType ;
NamedElement ::= Rule ;
 NamedElement ::= OclType ;
BooleanType ::= ε ;
VariableExp ::= referredVariable::PRRExpressions/VariableDeclaration ;
DeleteAction ::= objValue::PRRExpressions/OclExpression ;
IntegerExp ::= integerSymbol::Integer ;
RuleCondition ::= ruleConditionOwner::Rule conditionExp::PRRExpressions/OclExpression ;
Integer ::= integer() ;
Rule ::= binding::Binding condition::RuleCondition (actions::RuleAction)+ ruleOwner::RuleSet ;
Element ::= NamedElement ;
 Element ::= RuleSet ;
 Element ::= RuleAction ;
 Element ::= RuleCondition ;
 Element ::= Binding ;
 Element ::= OclExpression ;
 Element ::= VariableDeclaration ;
 Element ::= location::String (commentsBefore::String)+ (commentsAfter::String)+ ;
OperationCallExp ::= (arguments::PRRExpressions/OclExpression)+ operationName::String signature::String ;
RealType ::= ε ;
CollectionOperationCallExp ::= ε ;
OclType ::= (variableDeclaration::PRRExpressions/VariableDeclaration)+ (oclExpression::PRRExpressions/OclExpression)+ appliedAllInstance::PRRExpressions/AllInstanceExp (typeExp::PRRExpressions/TypeExp)+ ;
Iterator ::= loopExpr::PRRExpressions/LoopExp ;
StringType ::= ε ;
Boolean ::= "true" | "false" ;
AllInstanceExp ::= sourceType::PRRTypes/OclType ;
--------------------metamodels::Parameters.bgf--------------------
Parameter ::= name::String value::String ;
ParametersList ::= (parameters::Parameter)+ ;
String ::= string() ;
--------------------metamodels::PathExp.bgf--------------------
Element ::= PathExp ;
 Element ::= Transition ;
PathExp ::= (states::State)+ (transitions::Transition)+ ;
Transition ::= source::State target::State ;
State ::= (incoming::Transition)+ (outgoing::Transition)+ ;
String ::= string() ;
--------------------metamodels::Perceptory.bgf--------------------
Integer ::= integer() ;
Constraint ::= caracteristic::Characteristic theClass::Class (relationSchip::RelationSchip)+ ;
Source ::= metaData::MetaData ;
Characteristic ::= DescriptiveAttribute ;
 Characteristic ::= Geometry ;
 Characteristic ::= Temporality ;
 Characteristic ::= VisualInfo ;
 Characteristic ::= details::MetaData rule::BusnissRule operations::Operation theClass::Class relationSchip::RelationSchip constraint::Constraint ;
AssociationEnd ::= ε ;
Class ::= (characteristic::Characteristic)+ details::MetaData operations::Operation (myOperations::Operation)+ (constraint::Constraint)+ steriotype::Steriotype (packages::Package)+ ;
BusnissRule ::= characteristic::Characteristic ;
Geometry ::= tempsDef::Temporality descriptiveAttributeg::DescriptiveAttribute ;
Value ::= enumeratedDomain::EnumeratedDomain ;
String ::= string() ;
DescriptiveAttribute ::= tempsDef::Temporality specialDef::Geometry steriotype::Steriotype domain::Domain ;
MetaData ::= source::Source characteristic::Characteristic operations::Operation theClass::Class ;
VisualInfo ::= details::MetaData rule::BusnissRule operations::Operation theClass::Class relationSchip::RelationSchip constraint::Constraint ;
Steriotype ::= PerceptorySteriotype ;
 Steriotype ::= (descriptiveAttribute::DescriptiveAttribute)+ (operations::Operation)+ (relationSchip::RelationSchip)+ (theClass::Class)+ (thePackage::Package)+ ;
ConstrainedRelationSchip ::= ε ;
Temporality ::= geometry::Geometry descriptiveAttributet::DescriptiveAttribute ;
Dependency ::= (affectCharacteristic::Characteristic)+ constraint::Constraint (steriotype::Steriotype)+ (packages::Package)+ associatePackages::Package ;
Composition ::= ε ;
Boolean ::= "true" | "false" ;
Operation ::= detail::MetaData (inCharacteristic::Characteristic)+ (affectFeature::Class)+ steriotype::Steriotype behaviour::Class ;
Package ::= steriotype::Steriotype (children::Package)+ parent::Package (classes::Class)+ (relationSchip::RelationSchip)+ (connectedRelationSchip::RelationSchip)+ ;
EnumeratedDomain ::= (value::Value)+ ;
Domain ::= RangeDomain ;
 Domain ::= EnumeratedDomain ;
 Domain ::= (descriptiveAttribute::DescriptiveAttribute)+ ;
Generalisation ::= (affectCharacteristic::Characteristic)+ constraint::Constraint (steriotype::Steriotype)+ (packages::Package)+ associatePackages::Package ;
RelationSchip ::= Association ;
 RelationSchip ::= Generalisation ;
 RelationSchip ::= Dependency ;
 RelationSchip ::= (affectCharacteristic::Characteristic)+ constraint::Constraint (steriotype::Steriotype)+ (packages::Package)+ associatePackages::Package ;
Aggregation ::= ε ;
PerceptorySteriotype ::= Geometry ;
 PerceptorySteriotype ::= Temporality ;
 PerceptorySteriotype ::= VisualInfo ;
 PerceptorySteriotype ::= (descriptiveAttribute::DescriptiveAttribute)+ (operations::Operation)+ (relationSchip::RelationSchip)+ (theClass::Class)+ (thePackage::Package)+ ;
RangeDomain ::= (descriptiveAttribute::DescriptiveAttribute)+ ;
Association ::= Aggregation ;
 Association ::= Composition ;
 Association ::= Aggregation | Composition ;
--------------------metamodels::Person.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
Person ::= name::String firstName::String phone::String ;
String ::= string() ;
--------------------metamodels::PetriNet_extended.bgf--------------------
Movement ::= exec::Execution fire::Transition source::Marking target::Marking ;
Integer ::= integer() ;
Element ::= Place ;
 Element ::= Transition ;
LocatedElement ::= NamedElement ;
Token ::= placedAt::Place marking::Marking ;
Execution ::= net::PetriNet (markings::Marking)+ (movements::Movement)+ ;
TransitionToPlace ::= from::Transition to::Place ;
PlaceToTransition ::= from::Place to::Transition ;
Place ::= (incomingArc::TransitionToPlace)+ (outgoingArc::PlaceToTransition)+ ;
PetriNet ::= (elements::Element)+ (arcs::Arc)+ (execs::Execution)+ ;
Marking ::= exec::Execution (tokens::Token)+ ;
Transition ::= (incomingArc::PlaceToTransition)+ (outgoingArc::TransitionToPlace)+ ;
NamedElement ::= PetriNet ;
 NamedElement ::= Element ;
 NamedElement ::= Arc ;
Arc ::= PlaceToTransition ;
 Arc ::= TransitionToPlace ;
String ::= string() ;
--------------------metamodels::PluginEclipse.bgf--------------------
Integer ::= integer() ;
Range ::= isLeftInclusive::Boolean isRightInclusive::Boolean lowerBound::Version upperBound::Version ;
Xfriends ::= (bundles::Bundle)+ ;
Version ::= major::Integer minor::Integer micro::Integer qualification::String ;
Xinternal ::= value::Boolean ;
RequireBundleAttribute ::= AttResolution ;
 RequireBundleAttribute ::= AttVisibility ;
 RequireBundleAttribute ::= Range ;
ExportedPackage ::= Xinternal ;
 ExportedPackage ::= package::Package version::Version xFriends::Xfriends ;
AttVisibility ::= value::Visibility ;
Visibility ::= (Private::ε) | (Reexport::ε) ;
String ::= string() ;
AttResolution ::= value::Resolution ;
Resolution ::= (Mandatory::ε) | (Optional::ε) ;
LocatedElement ::= Eclipse ;
 LocatedElement ::= Bundle ;
 LocatedElement ::= RequireBundleAttribute ;
 LocatedElement ::= Version ;
 LocatedElement ::= RequiredBundle ;
 LocatedElement ::= ImportedPackage ;
 LocatedElement ::= ExportedPackage ;
 LocatedElement ::= Package ;
 LocatedElement ::= Xfriends ;
Boolean ::= "true" | "false" ;
Eclipse ::= (bundles::Bundle)+ (packages::Package)+ ;
Package ::= fqn::String (importedBy::ImportedPackage)+ exportedBy::ExportedPackage ;
Bundle ::= symbolicName::String singleton::Boolean manifestVersion::Integer (require::RequiredBundle)+ version::Version (export::ExportedPackage)+ (import::ImportedPackage)+ (packages::Package)+ ;
ImportedPackage ::= resolution::Resolution package::Package range::Range ;
RequiredBundle ::= (requireBundleAttribute::RequireBundleAttribute)+ bundle::Bundle ;
--------------------metamodels::ProMarte.bgf--------------------
ProcessResource ::= (components::Component)+ ;
InstantUnitKinds ::= (TAI::ε) | (UT0::ε) | (UT1::ε) | (UTC::ε) | (TT::ε) | (TDB::ε) | (TCG::ε) | (TCB::ε) | (Sideral::ε) | (Local::ε) ;
ECU ::= (contain::ECUGate)+ ;
DiscreteTimeBase ::= Clock ;
 DiscreteTimeBase ::= refEvent::Event ;
Behavior ::= (scenario::Scenario)+ ;
NFPRateType ::= value::String unit::RateUnitKinds ;
NFPType ::= NFPInstantType ;
 NFPType ::= NFPurationType ;
 NFPType ::= NFPRateType ;
 NFPType ::= NFPProbabilityType ;
 NFPType ::= NFPSizeType ;
 NFPType ::= valueSpecificationLanguage::String source::SourceKinds (constrainedSpec::NFPValueSpecification)+ ;
SimultaneousEventOccurrence ::= at::Instant occurence::TimedEventOccurence ;
Clock ::= accuracy::MetricTimeInterval offset::MetricTimeInterval (generatedInterrupt::ClockInterrupt)+ ;
HardwareDeployment ::= owner::Hardware (contain::HardwareEntityInstance)+ ;
Step ::= (predecessor::Step)+ (successor::Step)+ (stepLatency::ComplexNFP)+ (usedResourceService::Service)+ ;
DiscreteTimeInterval ::= MetricTimeInterval ;
DurationUnitKinds ::= (ns::ε) | (us::ε) | (ms::ε) | (s::ε) | (min::ε) | (hrs::ε) | (dys::ε) | (wks::ε) | (mos::ε) | (yrs::ε) ;
Realization ::= (function::Measure)+ owner::QuantitativeNFP ;
Interval ::= SingleInterval ;
 Interval ::= MultipleInterval ;
SourceKinds ::= (est::ε) | (meas::ε) | (req::ε) | (implicit::ε) | (calc::ε) ;
Channel ::= specify::ECUGate ;
Delay ::= (duration::TimeInterval)+ (start::TimeValue)+ (end::TimeValue)+ ;
ECUGate ::= owner::ECU kindOf::Channel ;
DesignConcern ::= (relevantQuantity::Quantity)+ annotedModel::AnnotatedModel ;
ProcessingResource ::= (links::Link)+ (components::Component)+ ;
Response ::= efficiency::ComplexNFP endToEndLatency::ComplexNFP (cause::Trigger)+ (behavior::Scenario)+ ;
TimeBase ::= SingleTimeBase ;
 TimeBase ::= DiscreteTimeBase ;
 TimeBase ::= MultipleTimeBase ;
Component ::= StructuredComponent ;
 Component ::= BasicComponent ;
 Component ::= (process::ProcessResource)+ (interfaces::Interface)+ ;
EventOccurence ::= TimedEventOccurence ;
NFPConstant ::= NFPListConstant ;
 NFPConstant ::= NFPStringConstant ;
 NFPConstant ::= NFPIntegerConstant ;
 NFPConstant ::= NFPRealConstant ;
 NFPConstant ::= NFPBooleanConstant ;
 NFPConstant ::= ownerList::NFPListConstant ;
SingleInstant ::= coPoint::CoincidencePoint ;
NFPProbabilityType ::= value::String unit::ProbabilityUnitKinds ;
MultipleTimeValue ::= (values::SingleTimeValue)+ ;
TimeInterval ::= SingleTimeInterval ;
 TimeInterval ::= DiscreteTimeInterval ;
NFPExpression ::= (body::String)+ (operand::NFPValueSpecification)+ ;
System ::= (dimension::Quantity)+ ;
InstanceSpecification ::= ResourceInstanceSpecification ;
 InstanceSpecification ::= ResourceServiceInstanceSpecification ;
SingleInterval ::= first::SingleInstant last::SingleInstant (members::SingleInstant)+ ;
NFPIntegerConstant ::= body::Integer ;
NFPValueSpecification ::= NFPConstant ;
 NFPValueSpecification ::= NFPVariable ;
 NFPValueSpecification ::= NFPExpression ;
 NFPValueSpecification ::= (constrainedBy::NFPType)+ expression::NFPExpression ;
BasicNFP ::= statisticalQualifier::StatisticalQualifierKinds directon::DirectionKinds typedBy::NFPType (valuedBy::NFPValueSpecification)+ (dimensionOf::ComplexNFP)+ ;
SingleTimeBase ::= currentValue::SingleTimeValue maximumValue::SingleTimeValue currentInstant::SingleInstant ;
TimedEvent ::= (timestamp::MetricTimeValue)+ ;
Classifier ::= ResourceClassifier ;
 Classifier ::= ResourceServiceClassifier ;
QuantitativeNFP ::= (sampleSet::Realization)+ (measure::Measure)+ ;
Instant ::= SingleInstant ;
 Instant ::= DiscreteInstant ;
 Instant ::= CoincidencePoint ;
HardwareEntityInstance ::= ECUInstance ;
 HardwareEntityInstance ::= ChannelInstance ;
 HardwareEntityInstance ::= owner::HardwareDeployment ;
DirectionKinds ::= (increasing::ε) | (decreasing::ε) | (undefined::ε) ;
Transaction ::= (workload::Workload)+ (trigger::Trigger)+ response::Response ;
Measure ::= (appliesTo::Realization)+ owner::QuantitativeNFP ;
BasicResource ::= ε ;
NFPurationType ::= value::String unit::DurationUnitKinds ;
SingleTimeInterval ::= start::SingleTimeValue end::SingleTimeValue ;
BasicQuantity ::= ε ;
CoincidencePoint ::= (coincidenceInstants::SingleInstant)+ ;
NFPCategory ::= (setOf::NFP)+ (ownes::NFPCategory)+ owner::NFPCategory ;
NFPVariable ::= varName::String ;
NFPBooleanConstant ::= body::Boolean ;
MetricTimeValue ::= ε ;
TimedEventOccurence ::= at::Instant timestamp::TimeValue ;
ModelElement ::= AnnotatedModelElement ;
 ModelElement ::= owner::Model ;
String ::= string() ;
Scenario ::= TimedAction ;
 Scenario ::= Step ;
 Scenario ::= (behavior::Behavior)+ (scenarionLatency::ComplexNFP)+ (steps::Step)+ root::Step endToEndResponse::Response ;
Resource ::= BasicResource ;
 Resource ::= StructuredResource ;
 Resource ::= BasicResource | StructuredResource ;
TimedAction ::= Delay ;
 TimedAction ::= (duration::TimeInterval)+ (start::TimeValue)+ (end::TimeValue)+ ;
ECUInstance ::= (composedOf::ECUGateInstance)+ ;
AnnotatedModelElement ::= Classifier ;
 AnnotatedModelElement ::= InstanceSpecification ;
 AnnotatedModelElement ::= (annotation::NFP)+ ;
Quantity ::= ε ;
DerivedQuantity ::= ε ;
ModelingConcern ::= AnalysisConcern ;
 ModelingConcern ::= DesignConcern ;
 ModelingConcern ::= (relevantQuantity::Quantity)+ annotedModel::AnnotatedModel ;
ProbabilityUnitKinds ::= (us::ε) | (s::ε) ;
Timer ::= isPeriodic::Boolean duration::MetricTimeValue (genratedTimeOuts::TimeOut)+ ;
MetricTimeInterval ::= ε ;
TimeOut ::= ε ;
StructuredResource ::= ProcessingResource ;
 StructuredResource ::= ProcessResource ;
 StructuredResource ::= LogicalResource ;
 StructuredResource ::= ServerResource ;
 StructuredResource ::= basicResource::BasicResource ;
Integer ::= integer() ;
SingleTimeValue ::= (denotedInstant::Instant)+ ref::TimeBase ;
RateUnitKinds ::= (kbs::ε) | (MIPS::ε) ;
Link ::= ε ;
SizeUnitKinds ::= (bits::ε) | (bytes::ε) | (Mb::ε) | (MB::ε) ;
NFPRealConstant ::= bodyBeforeComa::Integer bodyAfterComa::Integer ;
NFPListConstant ::= (listElements::NFPConstant)+ ;
Interface ::= service::Service ;
Trigger ::= arrivalPattern::ComplexNFP (effect::Response)+ ;
ChannelInstance ::= gateInstances::ECUGateInstance ;
NFP ::= QualitativeNFP ;
 NFP ::= QuantitativeNFP ;
 NFP ::= ComplexNFP ;
 NFP ::= measurementQuantity::Quantity (storedBy::NFPLibrary)+ groupedBy::NFPCategory ;
LogicalResource ::= basicResource::BasicResource ;
Workload ::= (transaction::Transaction)+ ;
ECUGateInstance ::= channel::ChannelInstance ;
Service ::= resource::ServerResource interface::Interface ;
ClockInterrupt ::= ε ;
MultipleInterval ::= (first::CoincidencePoint)+ (last::CoincidencePoint)+ ;
AnalysisContext ::= (global::ComplexNFP)+ workload::Workload behavior::Behavior (usedResources::Resource)+ ;
HardwareLibrary ::= owner::Hardware ;
NFPSizeType ::= value::String unit::SizeUnitKinds ;
ServerResource ::= (services::Service)+ ;
AnnotatedModel ::= (conformsTo::ModelingConcern)+ (import::NFPLibrary)+ ;
StatisticalQualifierKinds ::= (max::ε) | (min::ε) | (range::ε) | (mean::ε) | (variance::ε) | (standardDeviation::ε) | (percentil::ε) | (frequency::ε) | (moment::ε) | (distribution::ε) | (instantaneous::ε) ;
BasicComponent ::= (process::ProcessResource)+ (interfaces::Interface)+ ;
TimingMechanism ::= Timer ;
 TimingMechanism ::= Clock ;
 TimingMechanism ::= stability::String drift::String skew::String origin::TimedEvent resolution::MetricTimeInterval refClock::Clock state::String ;
MultipleTimeBase ::= (bases::SingleTimeBase)+ ;
QualitativeNFP ::= (parameter::NFP)+ ;
NFPStringConstant ::= body::String ;
StructuredComponent ::= (process::ProcessResource)+ (interfaces::Interface)+ ;
HardwareEntity ::= ECU ;
 HardwareEntity ::= owner::Hardware ;
DiscreteTimeValue ::= MetricTimeValue ;
Model ::= AnnotatedModel ;
 Model ::= (ownes::ModelElement)+ ;
Boolean ::= "true" | "false" ;
Hardware ::= owner::Hardware (containH::Hardware)+ (containHL::HardwareLibrary)+ (containHE::HardwareEntity)+ (deploymentConfiguration::HardwareDeployment)+ ;
ComplexNFP ::= (parent::ComplexNFP)+ (child::ComplexNFP)+ (ownes::BasicNFP)+ ;
DiscreteInstant ::= next::DiscreteInstant previous::DiscreteInstant refOcc::EventOccurence ;
AnalysisConcern ::= (relevantQuantity::Quantity)+ annotedModel::AnnotatedModel ;
TimeValue ::= SingleTimeValue ;
 TimeValue ::= MultipleTimeValue ;
 TimeValue ::= DiscreteTimeValue ;
NFPLibrary ::= (refersTo::NFPLibrary)+ (usedNFP::NFP)+ ;
NFPInstantType ::= value::String unit::InstantUnitKinds ;
--------------------metamodels::Problem.bgf--------------------
Problem ::= severity::Severity location::String description::String ;
Severity ::= (error::ε) | (warning::ε) | (critic::ε) ;
String ::= string() ;
--------------------metamodels::Program.bgf--------------------
IntegerExp ::= symbol::Integer ;
Direction ::= (in::ε) | (out::ε) ;
Integer ::= integer() ;
VariableDeclaration ::= Parameter ;
 VariableDeclaration ::= type::Type initialValue::Expression structure::Structure ;
OperatorCallExp ::= right::Expression ;
ConditionalStat ::= condition::Expression (thenStats::Statement)+ (elseStats::Statement)+ ;
Monitor ::= program::Program ;
Type ::= name::String ;
Expression ::= VariableExp ;
 Expression ::= PropertyCallExp ;
 Expression ::= LiteralExp ;
BooleanExp ::= symbol::Boolean ;
Structure ::= ProcContainerElement ;
 Structure ::= Procedure ;
Procedure ::= container::ProcContainerElement (parameters::Parameter)+ (statements::Statement)+ ;
String ::= string() ;
ProcContainerElement ::= Program ;
 ProcContainerElement ::= Monitor ;
Statement ::= AssignmentStat ;
 Statement ::= ConditionalStat ;
 Statement ::= WhileStat ;
 Statement ::= ExpressionStat ;
LiteralExp ::= BooleanExp ;
 LiteralExp ::= IntegerExp ;
ExpressionStat ::= expression::Expression ;
ProcedureCallExp ::= (arguments::Expression)+ ;
PropertyCallExp ::= OperatorCallExp ;
 PropertyCallExp ::= AttributeCallExp ;
 PropertyCallExp ::= ProcedureCallExp ;
LocatedElement ::= NamedElement ;
 LocatedElement ::= Expression ;
 LocatedElement ::= Statement ;
Parameter ::= direction::Direction procedure::Procedure ;
Boolean ::= "true" | "false" ;
WhileStat ::= condition::Expression (doStats::Statement)+ ;
Program ::= (monitors::Monitor)+ ;
AttributeCallExp ::= source::Expression name::String ;
NamedElement ::= Structure ;
 NamedElement ::= VariableDeclaration ;
 NamedElement ::= Type ;
AssignmentStat ::= target::VariableExp value::Expression ;
VariableExp ::= declaration::VariableDeclaration ;
--------------------metamodels::Promenade.bgf--------------------
BasPrecedence ::= Strong ;
 BasPrecedence ::= Start ;
 BasPrecedence ::= End ;
 BasPrecedence ::= FeedBack ;
 BasPrecedence ::= (deprecs::DerPrecedence)+ (parbind::ParBinding)+ ;
Integer ::= integer() ;
DerPrecedence ::= Weak ;
 DerPrecedence ::= Grouping ;
 DerPrecedence ::= (precs::Precedence)+ (auxTasks::MetaTaskOccurence)+ ;
End ::= ε ;
Weak ::= (precs::Precedence)+ (auxTasks::MetaTaskOccurence)+ ;
Strong ::= ε ;
ModelElement ::= MetaTaskOccurence ;
 ModelElement ::= MetaTask ;
 ModelElement ::= dependencyUMLsupp::DependancyUML dependencyUMLcli::DependancyUML ;
String ::= string() ;
MetaTaskOccurence ::= (dprecs::DerPrecedence)+ (taskCl::MetaTask)+ ;
ParameterUML ::= ParameterPrec ;
 ParameterUML ::= task::MetaTask (doc::MetaDocument)+ ;
MetaTask ::= (params::ParameterUML)+ (occurs::MetaTaskOccurence)+ ;
Precedence ::= DynPrecedence ;
 Precedence ::= DerPrecedence ;
 Precedence ::= BasPrecedence ;
 Precedence ::= (deprecs::DerPrecedence)+ (parbind::ParBinding)+ ;
ParameterPrec ::= (parbindsTar::ParBinding)+ (parbindsSour::ParBinding)+ (dstParams::ParameterPrec)+ (orParams::ParameterPrec)+ ;
Boolean ::= "true" | "false" ;
DependancyUML ::= (suppier::ModelElement)+ (client::ModelElement)+ ;
FeedBack ::= ε ;
ParBinding ::= inclusion::Boolean (precs::Precedence)+ targetPar::ParameterPrec sourcePar::ParameterPrec ;
DynPrecedence ::= Strong ;
 DynPrecedence ::= Start ;
 DynPrecedence ::= End ;
 DynPrecedence ::= FeedBack ;
 DynPrecedence ::= Weak ;
 DynPrecedence ::= Grouping ;
 DynPrecedence ::= (deprecs::DerPrecedence)+ (parbind::ParBinding)+ ;
Grouping ::= (precs::Precedence)+ (auxTasks::MetaTaskOccurence)+ ;
Start ::= ε ;
MetaDocument ::= (params::ParameterUML)+ ;
--------------------metamodels::PtolemyII.bgf--------------------
ComponentPort ::= po_container::Entity (links::Relation)+ ;
Integer ::= integer() ;
Relation ::= ComponentRelation ;
 Relation ::= (ports::Port)+ ;
Attribute ::= Parameter ;
 Attribute ::= ComponentEntity ;
 Attribute ::= att_container::Entity value::String ;
ComponentRelation ::= re_container::CompositeEntity ;
NamedObject ::= Attribute ;
 NamedObject ::= Entity ;
 NamedObject ::= Port ;
 NamedObject ::= Relation ;
 NamedObject ::= Director ;
 NamedObject ::= name::String ;
WorkSpace ::= (containees::ComponentEntity)+ (relations::ComponentRelation)+ ;
String ::= string() ;
CompositeActor ::= directors::Director ;
Director ::= ca_container::CompositeActor ;
CompositeEntity ::= WorkSpace ;
 CompositeEntity ::= CompositeActor ;
 CompositeEntity ::= (containees::ComponentEntity)+ (relations::ComponentRelation)+ ;
AtomicActor ::= ce_container::CompositeEntity ;
Parameter ::= pa_container::Entity dataType::EDataType ;
EDataType ::= value::String ;
Boolean ::= "true" | "false" ;
Entity ::= (attributes::Attribute)+ (parameters::Parameter)+ (ports::Port)+ ;
Port ::= ComponentPort ;
 Port ::= po_container::Entity (links::Relation)+ ;
ComponentEntity ::= AtomicActor ;
 ComponentEntity ::= CompositeEntity ;
 ComponentEntity ::= ce_container::CompositeEntity ;
--------------------metamodels::Publication.bgf--------------------
Integer ::= integer() ;
Publication ::= title::String authors::String nbPages::Integer ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::QVT.bgf--------------------
StringLiteralExp ::= stringSymbol::String ;
TypedModel ::= transformation::Transformation (usedPackage::Package)+ (dependsOn::TypedModel)+ ;
ImportKind ::= (extension::ε) | (access::ε) ;
Function ::= queryExpression::OclExpression ;
NullLiteralExp ::= ε ;
Property ::= ContextualProperty ;
 Property ::= Class::Class opposite::Property module::Module isReadOnly::Boolean isDerived::Boolean isComposite::Boolean isId::Boolean default::String ;
CollectionItem ::= item::OclExpression ;
EnumLiteralExp ::= referredEnumLiteral::EnumerationLiteral ;
RelationImplementation ::= relation::Relation impl::Operation inDirectionOf::TypedModel ;
Assignment ::= bottomPattern::BottomPattern slotExpression::OclExpression value::OclExpression targetProperty::Property isDefault::Boolean ;
RealizedVariable ::= initExpression::OclExpression LetExp::LetExp computeOwner::ComputeExp bindParameter::Parameter ;
UnlinkExp ::= target::OclExpression item::OclExpression ;
Domain ::= RelationDomain ;
 Domain ::= CoreDomain ;
 Domain ::= isCheckable::Boolean isEnforceable::Boolean rule::Rule typedModel::TypedModel ;
EnforcementMode ::= (Deletion::ε) | (Creation::ε) ;
ModelType ::= (metamodel::Package)+ (additionalCondition::OclExpression)+ conformanceKind::String ;
VariableExp ::= referredVariable::Variable ;
Element ::= PropertyTemplateItem ;
 Element ::= DictLiteralPart ;
 Element ::= AnonymousTupleLiteralPart ;
 Element ::= Tag ;
 Element ::= NamedElement ;
 Element ::= Comment ;
 Element ::= ModuleImport ;
 Element ::= OperationBody ;
 Element ::= Pattern ;
 Element ::= Predicate ;
 Element ::= RelationImplementation ;
 Element ::= Key ;
ExpressionInOcl ::= bodyExpression::OclExpression context::Variable resultVariable::Variable parameterVariable::Variable ;
Constructor ::= context::VarParameter (result::VarParameter)+ overridden::ImperativeOperation body::OperationBody isBlackbox::Boolean ;
AssertExp ::= severity::SeverityKind log::LogExp assertion::OclExpression ;
ContinueExp ::= ε ;
UnlimitedNaturalExp ::= symbol::UnlimitedNatural ;
AltExp ::= condition::OclExpression body::OclExpression ;
CorePattern ::= BottomPattern ;
 CorePattern ::= GuardPattern ;
 CorePattern ::= BottomPattern | GuardPattern ;
Helper ::= isQuery::Boolean ;
FeaturePropertyCall ::= PropertyCallExp ;
 FeaturePropertyCall ::= OperationCallExp ;
AnonymousTupleLiteralExp ::= (part::AnonymousTupleLiteralPart)+ ;
AnonymousTupleLiteralPart ::= (value::OclExpression)+ ;
BottomPattern ::= area::Area (assignment::Assignment)+ (realizedVariable::RealizedVariable)+ (enforcementOperation::EnforcementOperation)+ ;
ImperativeExpression ::= AssignExp ;
 ImperativeExpression ::= BlockExp ;
 ImperativeExpression ::= VariableInitExp ;
 ImperativeExpression ::= WhileExp ;
 ImperativeExpression ::= ComputeExp ;
 ImperativeExpression ::= AltExp ;
 ImperativeExpression ::= UnlinkExp ;
 ImperativeExpression ::= ReturnExp ;
 ImperativeExpression ::= BreakExp ;
 ImperativeExpression ::= TryExp ;
 ImperativeExpression ::= RaiseExp ;
 ImperativeExpression ::= ContinueExp ;
 ImperativeExpression ::= TupleExp ;
 ImperativeExpression ::= InstantiationExp ;
 ImperativeExpression ::= LogExp ;
 ImperativeExpression ::= AssertExp ;
 ImperativeExpression ::= UnpackExp ;
 ImperativeExpression ::= SwitchExp ;
 ImperativeExpression ::= ImperativeLoopExp ;
CallExp ::= ResolveExp ;
 CallExp ::= FeaturePropertyCall ;
 CallExp ::= SwitchExp ;
 CallExp ::= LoopExp ;
BreakExp ::= ε ;
SequenceType ::= elementType::Type ;
NumericLiteralExp ::= UnlimitedNaturalExp ;
 NumericLiteralExp ::= IntegerLiteralExp ;
 NumericLiteralExp ::= RealLiteralExp ;
ImperativeOperation ::= Helper ;
 ImperativeOperation ::= Constructor ;
 ImperativeOperation ::= EntryOperation ;
 ImperativeOperation ::= MappingOperation ;
 ImperativeOperation ::= context::VarParameter (result::VarParameter)+ overridden::ImperativeOperation body::OperationBody isBlackbox::Boolean ;
OpaqueExpression ::= ExpressionInOcl ;
LoopExp ::= IteratorExp ;
 LoopExp ::= IterateExp ;
 LoopExp ::= ImperativeLoopExp ;
TupleLiteralExp ::= (part::TupleLiteralPart)+ ;
ForExp ::= condition::OclExpression ;
InvalidType ::= package::Package ;
ResolveExp ::= ResolveInExp ;
 ResolveExp ::= condition::OclExpression one::Boolean isInverse::Boolean isDeferred::Boolean ;
RaiseExp ::= exception::Type ;
VariableInitExp ::= referredVariable::Variable withResult::Boolean ;
OclExpression ::= ImperativeExpression ;
 OclExpression ::= CallExp ;
 OclExpression ::= IfExp ;
 OclExpression ::= LetExp ;
 OclExpression ::= VariableExp ;
 OclExpression ::= TypeExp ;
 OclExpression ::= LiteralExp ;
 OclExpression ::= LoopExp ;
InstantiationExp ::= ObjectExp ;
 InstantiationExp ::= instantiatedClass::Class extent::Variable (argument::OclExpression)+ ;
OrderedSetType ::= elementType::Type ;
IteratorExp ::= body::OclExpression (iterator::Variable)+ ;
Mapping ::= (specification::Mapping)+ (local::Mapping)+ context::Mapping ;
Area ::= Mapping ;
 Area ::= CoreDomain ;
ReturnExp ::= value::OclExpression ;
IntegerLiteralExp ::= integerSymbol::Integer ;
CollectionTemplateExp ::= (part::OclExpression)+ kind::CollectionKind referredCollectionType::CollectionType match::OclExpression ;
CollectionLiteralPart ::= CollectionItem ;
 CollectionLiteralPart ::= CollectionRange ;
NamedElement ::= Package ;
 NamedElement ::= Type ;
 NamedElement ::= EnumerationLiteral ;
 NamedElement ::= TypedElement ;
 NamedElement ::= Domain ;
 NamedElement ::= TypedModel ;
 NamedElement ::= Rule ;
PrimitiveType ::= ε ;
IfExp ::= condition::OclExpression thenExpression::OclExpression elseExpression::OclExpression ;
ModelParameter ::= ctxOwner::ImperativeOperation resOwner::ImperativeOperation kind::DirectionKind ;
SetType ::= elementType::Type ;
Variable ::= RealizedVariable ;
 Variable ::= VarParameter ;
 Variable ::= FunctionParameter ;
 Variable ::= initExpression::OclExpression LetExp::LetExp computeOwner::ComputeExp bindParameter::Parameter ;
ConstructorBody ::= operation::ImperativeOperation (content::OclExpression)+ ;
Library ::= (ownedTag::Tag)+ (configProperty::Property)+ (moduleImport::ModuleImport)+ (usedModelType::ModelType)+ isBlackbox::Boolean ;
MappingParameter ::= refinedDomain::RelationDomain extent::ModelParameter ;
OperationCallExp ::= ImperativeCallExp ;
 OperationCallExp ::= (argument::OclExpression)+ referredOperation::Operation ;
Predicate ::= conditionExpression::OclExpression pattern::Pattern ;
URIExtent ::= ModelType ;
 URIExtent ::= ε ;
DirectionKind ::= (in::ε) | (inout::ε) | (out::ε) ;
FunctionParameter ::= operation::Operation initExpression::OclExpression LetExp::LetExp computeOwner::ComputeExp bindParameter::Parameter ;
AssignExp ::= (value::OclExpression)+ left::OclExpression defaultValue::OclExpression isReset::Boolean ;
Module ::= OperationalTransformation ;
 Module ::= Library ;
 Module ::= (ownedTag::Tag)+ (configProperty::Property)+ (moduleImport::ModuleImport)+ (usedModelType::ModelType)+ isBlackbox::Boolean ;
DictLiteralPart ::= key::OclExpression value::OclExpression ;
Parameter ::= VarParameter ;
 Parameter ::= FunctionParameter ;
 Parameter ::= operation::Operation ;
OperationBody ::= MappingBody ;
 OperationBody ::= ConstructorBody ;
 OperationBody ::= operation::ImperativeOperation (content::OclExpression)+ ;
EnumerationLiteral ::= enumeration::Enumeration ;
ComputeExp ::= returnedElement::Variable body::OclExpression ;
TryExp ::= tryBody::OclExpression (exception::Type)+ exceptBody::OclExpression ;
TupleLiteralPart ::= TupleLiteralExp::TupleLiteralExp attribute::Property ;
Tag ::= (element::Element)+ transformation::Transformation owner::Module value::String name::String ;
CollectionKind ::= (OrderedSet::ε) | (Set::ε) | (Bag::ε) | (Sequence::ε) ;
Pattern ::= CorePattern ;
 Pattern ::= DomainPattern ;
 Pattern ::= (predicate::Predicate)+ (bindsTo::Variable)+ whenOwner::Relation whereOwner::Relation ;
CollectorExp ::= target::Variable ;
MappingBody ::= (initSection::OclExpression)+ (endSection::OclExpression)+ ;
BlockExp ::= (body::OclExpression)+ ;
ImperativeIterateExp ::= target::Variable ;
UnpackExp ::= (variable::Variable)+ ;
Typedef ::= base::Type condition::OclExpression ;
ContextualProperty ::= context::Class overridden::Property ;
DictLiteralExp ::= (part::DictLiteralPart)+ ;
ObjectTemplateExp ::= (part::PropertyTemplateItem)+ referredClass::Class ;
CoreDomain ::= isCheckable::Boolean isEnforceable::Boolean rule::Rule typedModel::TypedModel guardPattern::GuardPattern bottomPattern::BottomPattern ;
TypeExp ::= referredType::Type ;
IterateExp ::= result::Variable ;
VarParameter ::= MappingParameter ;
 VarParameter ::= ModelParameter ;
 VarParameter ::= ctxOwner::ImperativeOperation resOwner::ImperativeOperation kind::DirectionKind ;
Object ::= Element ;
 Object ::= Extent ;
 Object ::= Element | Extent ;
MultiplicityElement ::= Operation ;
 MultiplicityElement ::= Parameter ;
 MultiplicityElement ::= Property ;
OperationalTransformation ::= (intermediateClass::Class)+ refined::Transformation (intermediateProperty::Property)+ (modelParameter::ModelParameter)+ entry::EntryOperation (relation::Relation)+ ;
Type ::= TemplateParameterType ;
 Type ::= Class ;
 Type ::= DataType ;
 Type ::= InvalidType ;
 Type ::= VoidType ;
 Type ::= AnyType ;
MappingOperation ::= (disjunct::MappingOperation)+ refinedRelation::Relation (merged::MappingOperation)+ (inherited::MappingOperation)+ (when::OclExpression)+ ;
LogExp ::= text::String level::Integer condition::OclExpression element::Element ;
Class ::= Typedef ;
 Class ::= AnonymousTupleType ;
 Class ::= ModelType ;
 Class ::= Module ;
 Class ::= Transformation ;
 Class ::= TupleType ;
 Class ::= AnyType ;
 Class ::= (ownedAttribute::Property)+ (ownedOperation::Operation)+ (superClass::Class)+ isAbstract::Boolean ;
AnonymousTupleType ::= (elementType::Type)+ ;
TupleExp ::= (element::OclExpression)+ ;
TypedElement ::= OclExpression ;
 TypedElement ::= Variable ;
 TypedElement ::= CollectionLiteralPart ;
 TypedElement ::= TupleLiteralPart ;
 TypedElement ::= Operation ;
 TypedElement ::= Parameter ;
 TypedElement ::= Property ;
ModuleImport ::= (binding::ModelType)+ module::Module importedModule::Module kind::ImportKind ;
MappingCallExp ::= isStrict::Boolean ;
SeverityKind ::= (error::ε) | (fatal::ε) | (warning::ε) ;
CollectionLiteralExp ::= kind::CollectionKind (part::CollectionLiteralPart)+ ;
RealLiteralExp ::= realSymbol::Real ;
ResolveInExp ::= inMapping::MappingOperation ;
WhileExp ::= condition::OclExpression body::OclExpression ;
GuardPattern ::= area::Area ;
Extent ::= URIExtent ;
Operation ::= ImperativeOperation ;
 Operation ::= Function ;
 Operation ::= class::Class (ownedParameter::Parameter)+ (raisedException::Type)+ ;
BagType ::= elementType::Type ;
PropertyTemplateItem ::= objContainer::ObjectTemplateExp value::OclExpression referredProperty::Property ;
Key ::= identifies::Class (part::Property)+ transformation::RelationalTransformation ;
Comment ::= (annotatedElement::NamedElement)+ ;
ObjectExp ::= referredObject::Variable body::ConstructorBody ;
EntryOperation ::= context::VarParameter (result::VarParameter)+ overridden::ImperativeOperation body::OperationBody isBlackbox::Boolean ;
ImperativeCallExp ::= MappingCallExp ;
 ImperativeCallExp ::= isVirtual::Boolean ;
String ::= string() ;
RelationalTransformation ::= (ownedKey::Key)+ ;
ImperativeLoopExp ::= ImperativeIterateExp ;
 ImperativeLoopExp ::= ForExp ;
 ImperativeLoopExp ::= CollectorExp ;
PropertyCallExp ::= referredProperty::Property ;
Transformation ::= RelationalTransformation ;
 Transformation ::= (ownedTag::Tag)+ (modelParameter::TypedModel)+ (rule::Rule)+ extends::Transformation ;
SwitchExp ::= (alternativePart::AltExp)+ elsePart::OclExpression ;
EnforcementOperation ::= enforcementMode::EnforcementMode bottomPattern::BottomPattern operationCallExp::OperationCallExp ;
Enumeration ::= (ownedLiteral::EnumerationLiteral)+ ;
AnyType ::= (ownedAttribute::Property)+ (ownedOperation::Operation)+ (superClass::Class)+ isAbstract::Boolean package::Package ;
Package ::= Module ;
 Package ::= Transformation ;
 Package ::= (ownedType::Type)+ (nestedPackage::Package)+ uri::String ;
InvalidLiteralExp ::= ε ;
DataType ::= Enumeration ;
 DataType ::= PrimitiveType ;
 DataType ::= CollectionType ;
 DataType ::= TupleType ;
TemplateExp ::= ObjectTemplateExp ;
 TemplateExp ::= CollectionTemplateExp ;
LetExp ::= (in::OclExpression)+ variable::Variable ;
CollectionRange ::= first::OclExpression last::OclExpression ;
Integer ::= integer() ;
Rule ::= Relation ;
 Rule ::= Mapping ;
 Rule ::= (domain::Domain)+ transformation::Transformation overrides::Rule ;
Relation ::= isTopLevel::Boolean (variable::Variable)+ (operationalImpl::RelationImplementation)+ where::Pattern when::Pattern ;
CollectionType ::= DictionaryType ;
 CollectionType ::= ListType ;
 CollectionType ::= BagType ;
 CollectionType ::= OrderedSetType ;
 CollectionType ::= SequenceType ;
 CollectionType ::= SetType ;
ListType ::= elementType::Type ;
BooleanLiteralExp ::= booleanSymbol::Boolean ;
PrimitiveLiteralExp ::= BooleanLiteralExp ;
 PrimitiveLiteralExp ::= StringLiteralExp ;
 PrimitiveLiteralExp ::= NumericLiteralExp ;
DictionaryType ::= keyType::Type ;
VoidType ::= package::Package ;
LiteralExp ::= TemplateExp ;
 LiteralExp ::= DictLiteralExp ;
 LiteralExp ::= AnonymousTupleLiteralExp ;
 LiteralExp ::= PrimitiveLiteralExp ;
 LiteralExp ::= CollectionLiteralExp ;
 LiteralExp ::= TupleLiteralExp ;
 LiteralExp ::= NullLiteralExp ;
 LiteralExp ::= InvalidLiteralExp ;
 LiteralExp ::= EnumLiteralExp ;
DomainPattern ::= templateExpression::TemplateExp ;
TemplateParameterType ::= specification::String ;
Boolean ::= "true" | "false" ;
TupleType ::= (ownedAttribute::Property)+ (ownedOperation::Operation)+ (superClass::Class)+ isAbstract::Boolean ;
RelationDomain ::= pattern::DomainPattern rootVariable::Variable ;
--------------------metamodels::QVT_SimpleRDBMS.bgf--------------------
Key ::= owner::Table (column::Column)+ (refersToOpposite::ForeignKey)+ ;
Table ::= schema::Schema (column::Column)+ (key::Key)+ (foreignKey::ForeignKey)+ ;
ForeignKey ::= (column::Column)+ owner::Table refersTo::Key ;
Column ::= type::String owner::Table (key::Key)+ (foreignKey::ForeignKey)+ ;
RModelElement ::= Schema ;
 RModelElement ::= Table ;
 RModelElement ::= Column ;
 RModelElement ::= Key ;
 RModelElement ::= ForeignKey ;
String ::= string() ;
Schema ::= (tables::Table)+ ;
--------------------metamodels::QoS.bgf--------------------
ProfileTransition ::= (operations::Operation)+ from::SimpleProfile to::SimpleProfile compoundProfile::CompoundProfile ;
CompoundProfile ::= (profileTransition::ProfileTransition)+ (simpleProfile::SimpleProfile)+ ;
Integer ::= integer() ;
QoSStatement ::= SingleQoSStatement ;
 QoSStatement ::= CoumpoundQoSStatement ;
 QoSStatement ::= (contraints::QoSContraints)+ relation::CoumpoundQoSStatement (parameter::Parameter)+ ;
QoSContraints ::= invariant::BooleanExpression parallel_and_composition::MappingExpression parallel_or_composition::MappingExpression sequential_composition::MappingExpression values::MappingExpression (statisticalAttribute::StatisticalAttributekindKind)+ parameter::Parameter domain::Domain ;
QoSContraint ::= qualification::QualificationKind ;
SimpleProfile ::= compoundProfile::CompoundProfile use::QoSStatement provides::QoSStatement ;
QoSProfile ::= CompoundProfile ;
 QoSProfile ::= SimpleProfile ;
DirectionKind ::= value::String ;
StringSet ::= (string::String)+ ;
String ::= string() ;
QoSCharacteristic ::= QoSContraints ;
 QoSCharacteristic ::= QualificationKind ;
 QoSCharacteristic ::= invariant::BooleanExpression parallel_and_composition::MappingExpression parallel_or_composition::MappingExpression sequential_composition::MappingExpression values::MappingExpression (statisticalAttribute::StatisticalAttributekindKind)+ parameter::Parameter domain::Domain ;
Numeric ::= direction::DirectionKind ;
Parameter ::= ε ;
StatisticalAttributekindKind ::= ε ;
QoSComponent ::= (profile::QoSProfile)+ operations::Operation ;
Boolean ::= "true" | "false" ;
Enumeration ::= direction::DirectionKind ;
Operation ::= ε ;
MappingExpression ::= value::String ;
Domain ::= Numeric ;
 Domain ::= Set ;
 Domain ::= Enumeration ;
 Domain ::= direction::DirectionKind ;
DataType ::= Domain ;
QualificationKind ::= value::String ;
Set ::= (stringSet::StringSet)+ ;
CoumpoundQoSStatement ::= statement::QoSStatement ;
SingleQoSStatement ::= contraint::QoSContraint ;
BooleanExpression ::= value::String ;
--------------------metamodels::QoS_Characteristic.bgf--------------------
Integer ::= integer() ;
Numeric ::= direction::DirectionKind ;
Parameter ::= ε ;
StatisticalAttributekindKind ::= ε ;
Boolean ::= "true" | "false" ;
Enumeration ::= direction::DirectionKind ;
MappingExpression ::= value::String ;
Domain ::= Numeric ;
 Domain ::= Set ;
 Domain ::= Enumeration ;
 Domain ::= direction::DirectionKind ;
DataType ::= Domain ;
 DataType ::= Domain ;
DirectionKind ::= value::String ;
Set ::= (stringSet::StringSet)+ ;
String ::= string() ;
StringSet ::= (string::String)+ ;
BooleanExpression ::= value::String ;
QoSCharacteristic ::= invariant::BooleanExpression parallel_and_composition::MappingExpression parallel_or_composition::MappingExpression sequential_composition::MappingExpression values::MappingExpression (statisticalAttribute::StatisticalAttributekindKind)+ parameter::Parameter domain::Domain ;
--------------------metamodels::RDFS.bgf--------------------
URIReference ::= UniformResourceIdentifier ;
 URIReference ::= uri::UniformResourceIdentifier resource::Resource literal::TypedLiteral namedGraph::Graph (reifiedStatement::Statement)+ ;
Seq ::= ε ;
Integer ::= integer() ;
List ::= first::Resource rest::List (originalList::List)+ ;
Class ::= Datatype ;
 Class ::= (subClassOf::Class)+ (superClass::Class)+ (typedResource::Resource)+ (propertyForDomain::Property)+ (propertyForRange::Property)+ ;
BlankNode ::= nodeId::String ;
Property ::= (predicateStatement::Statement)+ (subPropertyOf::Property)+ (superProperty::Property)+ (domain::Class)+ (range::Class)+ ;
String ::= string() ;
Statement ::= predicate::Property object::Resource subject::Resource isReifiedOnly::Boolean isReified::Boolean (nameForReification::URIReference)+ ;
Literal ::= PlainLiteral ;
 Literal ::= TypedLiteral ;
 Literal ::= lexicalForm::String ;
Graph ::= graphName::URIReference (resources::Resource)+ ;
Resource ::= Graph ;
 Resource ::= List ;
 Resource ::= Container ;
 Resource ::= Property ;
 Resource ::= Statement ;
 Resource ::= URIReferenceNode ;
 Resource ::= BlankNode ;
 Resource ::= Class ;
 Resource ::= Literal ;
 Resource ::= graph::Graph (uriRef::URIReference)+ (subjectStatement::Statement)+ (objectStatement::Statement)+ (label::PlainLiteral)+ (type::Class)+ (seeAlso::Resource)+ (referringResource::Resource)+ (member::Resource)+ (container::Resource)+ (list::List)+ ;
RDFXMLLiteral ::= datatypeURI::URIReference ;
ContainerMembershipProperty ::= ε ;
UniformResourceIdentifier ::= name::String (uriRef::URIReference)+ ;
Alt ::= ε ;
Boolean ::= "true" | "false" ;
Bag ::= ε ;
PlainLiteral ::= language::String labeledResource::Resource ;
TypedLiteral ::= RDFXMLLiteral ;
 TypedLiteral ::= datatypeURI::URIReference ;
Datatype ::= (subClassOf::Class)+ (superClass::Class)+ (typedResource::Resource)+ (propertyForDomain::Property)+ (propertyForRange::Property)+ ;
URIReferenceNode ::= graph::Graph (uriRef::URIReference)+ (subjectStatement::Statement)+ (objectStatement::Statement)+ (label::PlainLiteral)+ (type::Class)+ (seeAlso::Resource)+ (referringResource::Resource)+ (member::Resource)+ (container::Resource)+ (list::List)+ ;
Container ::= Alt ;
 Container ::= Bag ;
 Container ::= Seq ;
 Container ::= Alt | Bag | Seq ;
--------------------metamodels::QoS_Profile.bgf--------------------
ProfileTransition ::= (operations::Operation)+ from::SimpleProfile to::SimpleProfile compoundProfile::CompoundProfile ;
CompoundProfile ::= (profileTransition::ProfileTransition)+ (simpleProfile::SimpleProfile)+ ;
Integer ::= integer() ;
QoSStatement ::= ε ;
QoSComponent ::= operations::Operation (profile::QoSProfile)+ ;
Boolean ::= "true" | "false" ;
SimpleProfile ::= compoundProfile::CompoundProfile uses::QoSStatement provides::QoSStatement ;
Operation ::= ε ;
QoSProfile ::= CompoundProfile ;
 QoSProfile ::= SimpleProfile ;
String ::= string() ;
--------------------metamodels::QoS_Statement.bgf--------------------
Integer ::= integer() ;
QoSStatement ::= SingleQoSStatement ;
 QoSStatement ::= CoumpoundQoSStatement ;
 QoSStatement ::= relation::CoumpoundQoSStatement (parameter::Parameter)+ ;
QoSContraint ::= qualification::QualificationKind ;
Parameter ::= ε ;
Boolean ::= "true" | "false" ;
QualificationKind ::= value::String ;
CoumpoundQoSStatement ::= statement::QoSStatement ;
SingleQoSStatement ::= contraint::QoSContraint ;
String ::= string() ;
QoSCharacteristic ::= QualificationKind ;
--------------------metamodels::Relational.bgf--------------------
Table ::= (col::Column)+ (key::Column)+ ;
Integer ::= integer() ;
Type ::= name::String ;
Named ::= Table ;
 Named ::= Column ;
 Named ::= Type ;
Boolean ::= "true" | "false" ;
Column ::= owner::Table keyOf::Table type::Type ;
String ::= string() ;
--------------------metamodels::RelationalDBContent.bgf--------------------
Integer ::= integer() ;
Table ::= database::DataBase (tuples::Tuple)+ ;
DataBase ::= SGBDname::String (tables::Table)+ ;
Boolean ::= "true" | "false" ;
Tuple ::= owner::Table (elements::TupleElement)+ ;
TupleElement ::= tuple::Tuple value::String ;
NamedElement ::= DataBase ;
 NamedElement ::= Table ;
String ::= string() ;
--------------------metamodels::RelationalDBSchema.bgf--------------------
Integer ::= integer() ;
Table ::= database::DataBase (columns::Column)+ (key::Column)+ ;
DataBase ::= SGBDname::String (tables::Table)+ ;
Boolean ::= "true" | "false" ;
Column ::= dataType::String null::Boolean defaultValue::String owner::Table keyOf::Table ;
NamedElement ::= DataBase ;
 NamedElement ::= Table ;
 NamedElement ::= Column ;
String ::= string() ;
--------------------metamodels::Repository.bgf--------------------
Subsystem ::= (classes::Class)+ (relations::Relation)+ ;
Integer ::= integer() ;
Relation ::= subsystem::Subsystem classes::Class ;
Type ::= name::String ;
Class ::= name::String is_deferred::Boolean (features::Feature)+ parentSubsystem::Subsystem subsystem::Subsystem (relations::Relation)+ ;
Boolean ::= "true" | "false" ;
Feature ::= Entity ;
 Feature ::= Routine ;
 Feature ::= theClass::Class type::Type ;
Routine ::= theClass::Class type::Type ;
Entity ::= theClass::Class type::Type ;
String ::= string() ;
--------------------metamodels::Reqtify.bgf--------------------
TextElement ::= Section ;
 TextElement ::= AbstractRequirement ;
Attribute ::= value::String ;
Document ::= project::Project (sections::Section)+ ;
Project ::= (documents::Document)+ ;
MacroRequirement ::= (contains::AbstractRequirement)+ ;
Section ::= document::Document (sectionChildren::Section)+ sectionParent::Section (requirements::AbstractRequirement)+ ;
ElementWithIL ::= Document ;
 ElementWithIL ::= TextElement ;
Requirement ::= section::Section isContained::MacroRequirement (coverLinks::CoverLink)+ (attribute::Attribute)+ ;
TypedElement ::= ElementWithIL ;
 TypedElement ::= CoverLink ;
 TypedElement ::= Attribute ;
String ::= string() ;
CoverLink ::= linkWith::AbstractRequirement ;
AbstractRequirement ::= Requirement ;
 AbstractRequirement ::= MacroRequirement ;
--------------------metamodels::RequisitePro.bgf--------------------
Attribute ::= value::String ;
ContainerElt ::= Project ;
 ContainerElt ::= Package ;
Document ::= description::String ;
Project ::= (content::ContainedElt)+ (packages::Package)+ ;
Package ::= parentPackage::ContainerElt ;
NamedElt ::= ContainerElt ;
 NamedElt ::= Requirement ;
DescribedElt ::= Document ;
 DescribedElt ::= ContainerElt ;
Requirement ::= text::String (attributes::Attribute)+ location::Document parent::Requirement (children::Requirement)+ (coverLink::Requirement)+ ;
TypedElt ::= Attribute ;
String ::= string() ;
--------------------metamodels::SBVRvoc.bgf--------------------
EndOperator ::= (given::ε) | (thanone::ε) | (one::ε) | (isobligatorythat::ε) | (ispermittedthat::ε) | (isprohibitedthat::ε) | (isnecessarythat::ε) | (ispossiblethat::ε) | (isimpossiblethat::ε) | (isnotthecasethat::ε) | (least::ε) | (leastone::ε) | (most::ε) | (mostone::ε) | (leastnandatmostm::ε) | (andonlyif::ε) | (ornot::ε) | (not::ε) | (of::ε) ;
Verb ::= (is::ε) | (relevant::ε) | (comprises::ε) | (to::ε) | (work::ε) | (in::ε) | (trades::ε) | (as::ε) | (are::ε) | (accepted::ε) | (generally::ε) | (important::ε) | (across::ε) | (share::ε) | (sets::ε) | (assigned::ε) | (by::ε) | (contains::ε) | (for::ε) | (has::ε) | (specifies::ε) | (specified::ε) ;
NSURICaption ::= namespaceURI::NameSpaceURI ;
CTypCaption ::= (conceptType::PrimaryRepresentation)+ ;
NameConcept ::= the::Qualif (name::NameWord)+ ;
ConceptDefinition ::= exp::Concept (conjexp::ConjConcept)+ ;
TermRepresentation ::= (term::StringWord)+ ;
StringConcept ::= (stringWord::QuotedStringWord)+ ;
FactTypeFormRepresentation ::= primaryRep1::NotFactTypeRepresentation (verbExp::Verb)+ primaryRep2::NotFactTypeRepresentation ;
Necessity ::= exp::SBVRExpression ;
DescCaption ::= description::Note ;
NoteCaption ::= note::Note ;
SeeCaption ::= see::PrimaryRepresentation ;
String ::= string() ;
ModalForm ::= modal::ModalVerb isNeg::Boolean ;
SubSBVRProp ::= join::Join modalVerb::ModalVerb (verbs::Verb)+ concept2::Concept ;
Word ::= StringWord ;
 Word ::= QuotedStringWord ;
 Word ::= NameWord ;
LocatedElement ::= Root ;
 LocatedElement ::= VocabularyEntry ;
 LocatedElement ::= Caption ;
 LocatedElement ::= PrimaryRepresentation ;
 LocatedElement ::= ConceptDefinition ;
 LocatedElement ::= ConceptSource ;
 LocatedElement ::= Note ;
 LocatedElement ::= Sentence ;
 LocatedElement ::= NameSpaceURI ;
 LocatedElement ::= Word ;
 LocatedElement ::= SBVRExpression ;
 LocatedElement ::= SBVRPropWithKW ;
 LocatedElement ::= ModalForm ;
 LocatedElement ::= SimpleSBVRProp ;
 LocatedElement ::= SubSBVRProp ;
 LocatedElement ::= LinkSBVRConcept ;
 LocatedElement ::= ConjConcept ;
 LocatedElement ::= Concept ;
 LocatedElement ::= NounConcept ;
 LocatedElement ::= Qualification ;
 LocatedElement ::= GeneralConcept ;
 LocatedElement ::= Qualifier ;
 LocatedElement ::= ModalBegin ;
SynFCaption ::= (synonymousForm::SBVRExpression)+ ;
ModalBeginC ::= endOperator::EndOperator ;
QuotedStringWord ::= val::String ;
SimpleSBVRProp ::= modal::ModalBegin concept1::Concept modalVerb::ModalForm (verbs::Verb)+ concept2::Concept ;
SBVRPropWithKW ::= conjonction::ConjonctionnalKeyWord endConj::EndOperator proposition::SimpleSBVRProp ;
ConjonctionnalKeyWord ::= (and::ε) | (or::ε) | (if::ε) | (whether::ε) ;
Integer ::= integer() ;
SynCaption ::= (synonym::PrimaryRepresentation)+ ;
ModalBegin ::= ModalBeginC ;
 ModalBegin ::= endOperator::EndOperator ;
NounGConcept ::= (noun::StringWord)+ ;
StringWord ::= val::String ;
Link ::= (of::ε) | (quoteS::ε) ;
NameRepresentation ::= hasThe::Boolean (name::NameWord)+ ;
NameWord ::= val::String ;
SFCaption ::= subjectField::PrimaryRepresentation ;
ExCaption ::= (example::SBVRExpression)+ ;
Possibility ::= exp::SBVRExpression ;
GenCCaption ::= generalConcept::PrimaryRepresentation ;
Note ::= (sentences::Sentence)+ ;
NameSpaceURI ::= (URI::Word)+ ;
Qualification ::= (generalConcept::GeneralConcept)+ ;
PrimaryRepresentation ::= NotFactTypeRepresentation ;
 PrimaryRepresentation ::= FactTypeFormRepresentation ;
NounConcept ::= qualif::Qualifier (noun::StringWord)+ ;
NameGConcept ::= name::NameConcept ;
Qualif ::= (the::ε) | (The::ε) | (a::ε) | (A::ε) | (an::ε) | (An::ε) | (Each::ε) | (each::ε) | (Some::ε) | (some::ε) | (At::ε) | (at::ε) | (Exactly::ε) | (exactly::ε) ;
ModalVerb ::= (must::ε) | (may::ε) | (never::ε) | (always::ε) ;
VocabularyEntry ::= primaryRep::PrimaryRepresentation (caption::Caption)+ ;
Qualifier ::= op::Qualif endOperator::EndOperator min::StringWord max::StringWord ;
Join ::= (that::ε) | (who::ε) ;
ObjectConcept ::= operatoredConcept::NounConcept qualify::Qualification ;
Boolean ::= "true" | "false" ;
Concept ::= NameConcept ;
 Concept ::= ObjectConcept ;
 Concept ::= StringConcept ;
DBCaption ::= dictionaryBasis::ConceptSource ;
NotFactTypeRepresentation ::= TermRepresentation ;
 NotFactTypeRepresentation ::= NameRepresentation ;
RefSCaption ::= referenceScheme::PrimaryRepresentation ;
Caption ::= DefCaption ;
 Caption ::= DescCaption ;
 Caption ::= SrcCaption ;
 Caption ::= DBCaption ;
 Caption ::= GenCCaption ;
 Caption ::= CTypCaption ;
 Caption ::= Necessity ;
 Caption ::= Possibility ;
 Caption ::= RefSCaption ;
 Caption ::= NoteCaption ;
 Caption ::= ExCaption ;
 Caption ::= SynCaption ;
 Caption ::= SynFCaption ;
 Caption ::= SeeCaption ;
 Caption ::= SFCaption ;
 Caption ::= NSURICaption ;
LinkSBVRConcept ::= link::Link concept::Concept ;
SBVRExpression ::= hasPoint::Boolean firstProposition::SimpleSBVRProp (nextProposition::SBVRPropWithKW)+ ;
Sentence ::= (words::Word)+ ;
ConceptSource ::= (source::Word)+ ;
SrcCaption ::= source::ConceptSource ;
Root ::= (entries::VocabularyEntry)+ ;
DefCaption ::= definition::ConceptDefinition ;
GeneralConcept ::= NameGConcept ;
 GeneralConcept ::= NounGConcept ;
ConjConcept ::= conjonction::ConjonctionnalKeyWord concept::Concept ;
--------------------metamodels::SCADE.bgf--------------------
MtcEntity ::= Element ;
 MtcEntity ::= File ;
 MtcEntity ::= HistoryEntry ;
 MtcEntity ::= Criterion ;
 MtcEntity ::= Instance ;
 MtcEntity ::= Result ;
 MtcEntity ::= Record ;
 MtcEntity ::= Model ;
 MtcEntity ::= Operator ;
StorageUnit ::= saoFileName::String annFileName::String persistAs::String loaded::Boolean saoModified::Boolean annModified::Boolean fileRef::FileRef modelS::Model (element::StorageElement)+ ;
AnnAttCharValue ::= value::Char ;
Project ::= pathname::String (configuration::Configuration)+ (fileRef::FileRef)+ (owner::Element)+ ;
Session ::= descriptor::Descriptor model::Model (loadsModel::Model)+ DefinedIn::String loader::Loader ;
Transition ::= conditions::String transKind::Integer state1::State state2::State ;
AnnPropertyReal ::= value::Double ;
RSize ::= ε ;
NamedType ::= kind::Object (refinement::NamedType)+ (refined::NamedType)+ to::Operator from::Operator implementation::Implementation definition::Type keyM::Model key::TypeBlock ;
Record ::= creator::String name::String date::String author::String description::String key::CoverageFile associationClassRc::AssociationClass coverageFileR::CoverageFile (result::Result)+ ;
Base ::= StateBase ;
State ::= name::String cx::Double cy::Double (transition1::Transition)+ (transition2::Transition)+ stOutput::StOutput ;
ListString ::= value::String ;
ConstValue ::= value::String kind::Object ;
Block ::= NodeBlock ;
 Block ::= ModelBlock ;
Equation ::= rotation::Integer symetrical::Boolean terminator::Boolean eqBlock::EqBlock (left::Variable)+ right::Expression (outEdge::Edge)+ position::RPoint size::RSize ;
ParamArray ::= (notes::ListString)+ paramBlock::ParamBlock operator::Operator (value::Expression)+ ;
Error ::= ε ;
AnnPropertyString ::= value::String ;
AnnAttBoolValue ::= value::Boolean ;
Composite ::= Structure ;
 Composite ::= Tuple ;
OperatorReference ::= ε ;
LocalVariable ::= optional::Boolean const::Boolean probe::Boolean pure::Boolean initValue::String operatorI::Operator operatorO::Operator operatorH::Operator nodeL::Node nodeI::Node ;
ConstVar ::= Constant ;
 ConstVar ::= Variable ;
 ConstVar ::= kind::Object type::Type (client::EqBlock)+ ;
StateBase ::= DefineIn::String ;
Assertion ::= key::EqBlock expression::Expression edge::Edge position::RPoint ;
StOutput ::= name::String type::String clock::Boolean const::Boolean optional::Boolean ;
AnnCategory ::= name::String key::AnnotSchema (anootability::Annotability)+ ;
GlobalVariable ::= key::VarBlock ;
Object ::= Implementation ;
 Object ::= Descriptor ;
 Object ::= StorageUnit ;
 Object ::= Expression ;
 Object ::= Label ;
 Object ::= CompositeElement ;
 Object ::= Annotable ;
 Object ::= Edge ;
 Object ::= StateMachine ;
 Object ::= Model ;
HistoryEntry ::= file::File ;
RPoint ::= ε ;
Edge ::= leftVarIndex::Integer labelOrientation::Integer leftVar::Variable rightExpression::ExprId srcEquation::Equation assertion::Assertion (position::RPoint)+ dstEquation::Equation ;
Element ::= FileRef ;
 Element ::= Folder ;
Type ::= Table ;
 Type ::= NamedType ;
 Type ::= Enumeration ;
 Type ::= Composite ;
AnnPropertyInt ::= value::Integer ;
AnnPropertyEnum ::= value::Object ;
FileRef ::= pathname::String persistAs::String DefinedIn::String ;
Configuration ::= name::String (propC::Prop)+ projectC::Project ;
Label ::= expression::Expression ;
AnnNote ::= name::String modified::Boolean annNoteType::AnnNoteType annotable::Annotable (annAttValue::AnnAttValue)+ ;
Structure ::= element::CompositeElement ;
TypeBlock ::= type::NamedType key::Model ;
Implementation ::= key::Model (namedTypeI::NamedType)+ ;
ExprContact ::= boolAct::ExprId (initValue::Expression)+ calledOpr::ExprCall ;
StInput ::= name::String type::String clock::Boolean const::Boolean optional::Boolean ;
StateObj ::= GraphicalObject ;
VarBlock ::= variable::GlobalVariable keyVB::Model key::Model ;
Operator ::= Node ;
 Operator ::= category::String conversion::Boolean state::Boolean index::Integer variable::LocalVariable (input::LocalVariable)+ (output::LocalVariable)+ (hidden::LocalVariable)+ (client::EqBlock)+ modelO::Model modelOp::Model criterionO::Criterion (intanceO::Instance)+ operator::Operator ;
Constant ::= imported::Boolean value::Expression enumeration::Enumeration key::ConstBlock ;
AnnPropertyBool ::= value::Boolean ;
Annotable ::= StorageElement ;
 Annotable ::= ParamArray ;
 Annotable ::= ConstVar ;
 Annotable ::= Type ;
 Annotable ::= Equation ;
 Annotable ::= Assertion ;
 Annotable ::= Project ;
AnnAttGroup ::= name::String key::AnnNoteType ;
Result ::= elementCount::Integer associationClassRs::AssociationClass record::Record ;
ExprNull ::= label::Label exprContactE::ExprContact exprCallE::ExprCall dependance::ConstVar (subExprId::ExprId)+ paramArray::ParamArray constant::Constant equationE::Equation assertionE::Assertion ;
Expression ::= ExprNull ;
 Expression ::= ConstValue ;
 Expression ::= ExprContact ;
 Expression ::= ExprCall ;
 Expression ::= ExprId ;
AnnProperty ::= AnnPropertyInt ;
 AnnProperty ::= AnnPropertyBool ;
 AnnProperty ::= AnnPropertyChar ;
 AnnProperty ::= AnnPropertyReal ;
 AnnProperty ::= AnnPropertyString ;
 AnnProperty ::= AnnPropertyEnum ;
 AnnProperty ::= name::String type::Integer key::AnnAttDefinition ;
Instance ::= index::Integer occ::String modelI::Model operatorI::Operator associationClassI::AssociationClass caller::Instance (called::Instance)+ origin::Instance (related::Instance)+ ;
MtcApplication ::= (coverageFileCov::CoverageFile)+ (criterionFileCri::CriterionFile)+ modelM::Model ;
Loader ::= descriptor::Descriptor session::Session ;
AnnAttRealValue ::= value::Double ;
String ::= string() ;
AnnAttValue ::= AnnAttIntValue ;
 AnnAttValue ::= AnnAttBoolValue ;
 AnnAttValue ::= AnnAttCharValue ;
 AnnAttValue ::= AnnAttRealValue ;
 AnnAttValue ::= AnnAttStringValue ;
AnnAttEnumValue ::= value::String ;
Table ::= size::Integer typeT::Type ;
AnnNoteType ::= name::String annAttDefinition::AnnAttDefinition annAttGroup::AnnAttGroup key::AnnotSchema ;
AnnPropertyChar ::= value::Char ;
Reference ::= TypeReference ;
 Reference ::= OperatorReference ;
 Reference ::= VariableReference ;
StInputOutput ::= StInitInput ;
 StInputOutput ::= StInput ;
 StInputOutput ::= StOutput ;
Tuple ::= element::CompositeElement ;
AnnotSchema ::= pathname::String annNoteType::AnnNoteType annCategory::AnnCategory ;
Enumeration ::= (value::Constant)+ ;
CoverageFile ::= record::Record modelCov::Model application::MtcApplication recordCov::Record ;
AnnAttDateValue ::= value::String ;
Node ::= nodeKind::Object eqBlock::EqBlock paramBlock::ParamBlock (local::LocalVariable)+ (internal::LocalVariable)+ key::Model stateMachine::StateMachine modelN::Model ;
EqBlock ::= (equation::Equation)+ assertion::Assertion key::Node (calledOperator::Operator)+ (referencedId::ConstVar)+ ;
StorageElement ::= Block ;
 StorageElement ::= Operator ;
AnnAttStringValue ::= AnnAttFileValue ;
 AnnAttStringValue ::= AnnAttDateValue ;
 AnnAttStringValue ::= AnnAttOidValue ;
 AnnAttStringValue ::= AnnAttEnumValue ;
 AnnAttStringValue ::= value::String ;
ParamBlock ::= key::Node (columnsSize::ListInteger)+ (array::ParamArray)+ ;
ListInteger ::= value::Integer ;
Integer ::= integer() ;
CriterionFile ::= application::MtcApplication modelCri::Model (criterionC::Criterion)+ ;
File ::= CoverageFile ;
 File ::= CriterionFile ;
Variable ::= GlobalVariable ;
 Variable ::= LocalVariable ;
 Variable ::= clock::Variable (definition::Equation)+ ;
StInitInput ::= name::String type::String clock::Boolean const::Boolean optional::Boolean ;
AssociationClass ::= resultA::Result (recordA::Record)+ (instanceA::Instance)+ ;
StateMachine ::= initialStPtr::InitialStPtr (state::State)+ (transition::Transition)+ ;
AnnAttFileValue ::= value::String ;
CompositeElement ::= typeC::Type key::Composite ;
AnnAttDefinition ::= name::String type::Integer annAttGroup::AnnAttGroup key::AnnNoteType annProperty::AnnProperty ;
ExprCall ::= numOcc::Integer predefOpr::Integer (parameter::Expression)+ exprContactEC::ExprContact operator::Operator ;
GraphicalObject ::= StInputOutput ;
 GraphicalObject ::= Transition ;
 GraphicalObject ::= State ;
 GraphicalObject ::= InitialStPtr ;
TypeReference ::= ε ;
ExprId ::= exprContactEI::ExprContact reference::ConstVar ;
VariableReference ::= ε ;
Descriptor ::= modelFileName::String sernFileName::String sernPersistAs::String rnetFileName::String rnetPersistAs::String occBase::Integer size::Integer nameVerify::Boolean checked::Boolean (libraryModels::ListString)+ (annTypeFiles::ListString)+ modelD::Model ;
Folder ::= extensions::String (element::Element)+ ;
NodeBlock ::= ParamBlock ;
 NodeBlock ::= EqBlock ;
 NodeBlock ::= node::Node ;
ConstBlock ::= modelC::Model keyC::Model key::Model constant::Constant ;
InitialStPtr ::= cx::Double cy::Double state::State ;
Model ::= library::Boolean pathname::String descriptor::Descriptor project::Project fileRef::FileRef (storageUnitM::StorageUnit)+ enumsBlock::ConstBlock (importedOperator::Operator)+ (client::Model)+ (libraries::Model)+ (allLibry::Model)+ (typeM::Type)+ model::Model coverageFileM::CoverageFile criterionFileM::CriterionFile root::Instance (all::Operator)+ application::MtcApplication (reference::Reference)+ (tmpNode::Node)+ constBlockK::ConstBlock node::Node varBlockK::VarBlock typeBlock::TypeBlock refinement::NamedType implementation::Implementation constant::Constant allConstant::Constant allvariable::GlobalVariable variable::GlobalVariable allConstVar::ConstVar constVar::ConstVar constBlock::ConstBlock varBlock::VarBlock allNamedType::NamedType namedType::NamedType ;
Boolean ::= "true" | "false" ;
AnnAttOidValue ::= value::String ;
Annotability ::= minCardinality::Integer maxCardinality::Integer defaultNote::Boolean annNoteType::AnnNoteType ;
ModelBlock ::= ConstBlock ;
 ModelBlock ::= VarBlock ;
 ModelBlock ::= TypeBlock ;
Entity ::= StateObj ;
Prop ::= name::String (values::ListString)+ entity::Annotable configurationP::Configuration ;
AnnAttIntValue ::= value::Integer ;
Criterion ::= ident::String name::String description::String criterionFileC::CriterionFile operatorC::Operator (element::Element)+ ;
--------------------metamodels::SDM.bgf--------------------
CDObjectConstraint ::= constraintDefinition::ConstraintDefinition ;
OBEndpointDefinition ::= objectDefinition::ObjectDefinition ;
SettingsAttributes ::= list::Boolean access::SettingMemberAccess secure::SettingMemberSecure deploymentTime::Boolean required::Boolean canBeNull::Boolean elementsCanBeNull::Boolean defaultRead::String defaultWrite::String ;
RDDelegation ::= relationshipDefinition::RelationshipDefinition ;
ConstraintMember ::= OBConstraint ;
 ConstraintMember ::= RDConstraint ;
 ConstraintMember ::= OCConstraint ;
 ConstraintMember ::= RCConstraint ;
 ConstraintMember ::= CGConstraint ;
 ConstraintMember ::= CDConstraint ;
 ConstraintMember ::= (input::Input)+ raiseError::Boolean evaluate::ConstraintEvaluation ;
CDRelationshipConstraint ::= constraintDefinition::ConstraintDefinition ;
DescriptionEntry ::= Entry ;
 DescriptionEntry ::= name::String resourceId::String manager::QualifiedName substitute::Substitute ;
ImportNamespaceIdentity ::= import::Import ;
SDMManager ::= sdm::SystemDefinitionModel ;
CommunicationMember ::= OBConnection ;
 CommunicationMember ::= RDConnection ;
 CommunicationMember ::= clientMember::Path serverMember::Path ;
SettingMemberAccess ::= (ReadWrite::ε) | (ReadOnly::ε) | (WriteOnly::ε) ;
RCConstraint ::= relationshipConstraint::RelationshipConstraint ;
MembSettingValue ::= member::Member ;
SettingMember ::= DefSettingDeclaration ;
 SettingMember ::= (facet::Facet)+ settingAttributes::SettingsAttributes ;
EndpointDefinition ::= SDMEndpointDefinition ;
 EndpointDefinition ::= OBEndpointDefinition ;
 EndpointDefinition ::= SDMEndpointDefinition | OBEndpointDefinition ;
OBRelationshipConstraint ::= objectDefinition::ObjectDefinition ;
OBHosting ::= objectDefinition::ObjectDefinition ;
ReferenceDefinition ::= SDMReferenceDefinition ;
 ReferenceDefinition ::= OBReferenceDefinition ;
 ReferenceDefinition ::= dependentDefinition::QualifiedName sourceDefinition::QualifiedName ;
Element ::= NameSpace ;
 Element ::= SimpleName ;
 Element ::= QualifiedName ;
 Element ::= Path ;
 Element ::= SettingPath ;
 Element ::= MaxOccurs ;
 Element ::= MinOccurs ;
 Element ::= FourPartVersionType ;
 Element ::= PublicKeyType ;
 Element ::= PublicKeyTokenType ;
 Element ::= CompilationHashType ;
 Element ::= Culture ;
 Element ::= CultureNeutral ;
 Element ::= value::String ;
Description ::= (entry::Entry)+ resourceId::String manager::QualifiedName ;
OBSubsystem ::= objectDefinition::ObjectDefinition ;
RolesList ::= (Host::ε) | (Guest::ε) | (Parent::ε) | (Member::ε) | (Source::ε) | (Dependent::ε) | (Proxy::ε) | (Delegate::ε) | (Client::ε) | (Server::ε) ;
MinOccurs ::= value::String ;
ObjectMember ::= SystemMember ;
 ObjectMember ::= EndpointMember ;
 ObjectMember ::= ResourceMember ;
 ObjectMember ::= minOccurs::MinOccurs maxOccurs::MaxOccurs reference::Boolean proxy::Boolean ;
SDMDelegationDefinition ::= sdm::SystemDefinitionModel ;
OBSystemDefinition ::= objectDefinition::ObjectDefinition ;
OCConstraint ::= objectConstraint::ObjectConstraint ;
DefSettingDeclaration ::= definition_DSD::Definition ;
RDObjectConstraint ::= relationshipDefinition::RelationshipDefinition ;
RCObjectConstraint ::= relationshipConstraint_RC::RelationshipConstraint ;
RelationshipDefinition ::= CommunicationDefinition ;
 RelationshipDefinition ::= HostingDefinition ;
 RelationshipDefinition ::= ContainmentDefinition ;
 RelationshipDefinition ::= DelegationDefinition ;
 RelationshipDefinition ::= ReferenceDefinition ;
 RelationshipDefinition ::= (objectConstraint::RDObjectConstraint)+ (constraint::RDConstraint)+ (constraintGroup::RDConstraintGroup)+ (flow::RDFlow)+ (connection::RDConnection)+ (hosting::RDHosting)+ (delegation::RDDelegation)+ (reference::RDReference)+ (containment::RDContainment)+ extends::QualifiedName abstract::Boolean ;
SystemMember ::= OBSubsystem ;
RCRelationshipConstraint ::= relationshipConstraint_RC::RelationshipConstraint ;
Import ::= sdm::SystemDefinitionModel alias::SimpleName identity::ImportNamespaceIdentity ;
DelegationDefinition ::= SDMDelegationDefinition ;
 DelegationDefinition ::= OBDelegationDefinition ;
 DelegationDefinition ::= proxyDefinition::QualifiedName delegateDefinition::QualifiedName ;
Substitute ::= descriptionEntry::DescriptionEntry ;
StructuralConstraint ::= ObjectConstraint ;
 StructuralConstraint ::= RelationshipConstraint ;
 StructuralConstraint ::= ConstraintGroup ;
 StructuralConstraint ::= description::Description designData::DesignData name::SimpleName evaluate::ConstraintEvaluation raiseError::Boolean returnEarly::Boolean ;
Member ::= ObjectMember ;
 Member ::= RelationshipMember ;
 Member ::= ConstraintMember ;
 Member ::= FlowMember ;
 Member ::= SettingMember ;
 Member ::= (description::Description)+ designData::DesignData (settingValue::MembSettingValue)+ (settingValueList::MembSettingValueList)+ name::SimpleName definition::QualifiedName ;
CGRelationshipConstraint ::= constraintGroup_CG::ConstraintGroup ;
OBReference ::= objectDefinition::ObjectDefinition ;
RDConnection ::= relationshipDefinition::RelationshipDefinition ;
EndpointMember ::= OBEndpoint ;
RDConstraint ::= relationshipDefinition::RelationshipDefinition ;
ManagerDeclaration ::= SDMManager ;
 ManagerDeclaration ::= description::Description name::SimpleName assemblyName::String version::FourPartVersionType publicKeyToken::PublicKeyTokenType culture::CultureNeutral platform::Platform sourcePath::Path ;
MembSettingValueList ::= member::Member ;
Input ::= name::SimpleName path::SettingPath cast::Boolean convert::Boolean ;
CommunicationDefinition ::= SDMCommunicationDefinition ;
 CommunicationDefinition ::= OBCommunicationDefinition ;
 CommunicationDefinition ::= clientDefinition::QualifiedName serverDefinition::QualifiedName ;
DesignData ::= (nameSpace::NameSpace)+ ;
RDHosting ::= relationshipDefinition::RelationshipDefinition ;
ReferenceMember ::= OBReference ;
 ReferenceMember ::= RDReference ;
 ReferenceMember ::= dependentMember::Path sourceMember::Path ;
OBFlow ::= objectDefinition::ObjectDefinition ;
RDContainment ::= relationshipDefinition::RelationshipDefinition ;
ObjectConstraint ::= RDObjectConstraint ;
 ObjectConstraint ::= RCObjectConstraint ;
 ObjectConstraint ::= CGObjectConstraint ;
 ObjectConstraint ::= CDObjectConstraint ;
 ObjectConstraint ::= (constraint::OCConstraint)+ (relationshipConstraint::OCRelationshipConstraint)+ (constraintGroup::OCConstraintGroup)+ primaryRole::RolesList primaryObjectDefinition::QualifiedName (secondaryRole::RolesList)+ (secondaryObjectDefinition::QualifiedName)+ (minOccurs::MinOccurs)+ (maxOccurs::MaxOccurs)+ ;
OBHostingDefinition ::= objectDefinition::ObjectDefinition ;
Facet ::= name::SimpleName ;
Platform ::= (x86::ε) | (ia64::ε) | (amd64::ε) | (wow64::ε) | (msil::ε) | (shx::ε) | (arm::ε) | (data::ε) | (*::ε) | (neutral::ε) ;
Culture ::= value::String ;
OBEndpoint ::= objectDefinition::ObjectDefinition ;
FlowMember ::= OBFlow ;
 FlowMember ::= RDFlow ;
 FlowMember ::= (input::Input)+ (output::Output)+ ;
DefSettingValue ::= definition::Definition ;
PathList ::= Substitute ;
 PathList ::= (settingPath::SettingPath)+ ;
ConstraintGroup ::= OBConstraintGroup ;
 ConstraintGroup ::= RDConstraintGroup ;
 ConstraintGroup ::= OCConstraintGroup ;
 ConstraintGroup ::= RCConstraintGroup ;
 ConstraintGroup ::= CDConstraintGroup ;
 ConstraintGroup ::= (constraint::CGConstraint)+ (relationshipConstraint::CGRelationshipConstraint)+ (objectConstraint::CGObjectConstraint)+ ;
RDFlow ::= relationshipDefinition::RelationshipDefinition ;
SimpleName ::= value::String ;
OBCommunicationDefinition ::= objectDefinition::ObjectDefinition ;
SettingPath ::= value::String ;
Definition ::= ObjectDefinition ;
 Definition ::= RelationshipDefinition ;
 Definition ::= ConstraintDefinition ;
 Definition ::= FlowDefinition ;
 Definition ::= description::Description designData::DesignData (settingDeclaration::DefSettingDeclaration)+ (settingValue::DefSettingValue)+ (settingValueList::DefSettingValueList)+ name::SimpleName manager::QualifiedName className::String ;
PublicKeyType ::= value::String ;
MaxOccurs ::= value::String ;
SDMContainmentDefinition ::= sdm::SystemDefinitionModel ;
ResourceMember ::= OBResource ;
CGConstraint ::= constraintGroup::ConstraintGroup ;
SettingValueList ::= MembSettingValueList ;
 SettingValueList ::= DefSettingValueList ;
 SettingValueList ::= (value::Value)+ settingValueAttributes::SettingValueAttributes ;
OBContainment ::= objectDefinition::ObjectDefinition ;
PublicKeyTokenType ::= value::String ;
ValueTransfer ::= Output ;
 ValueTransfer ::= Input ;
 ValueTransfer ::= name::SimpleName path::SettingPath cast::Boolean convert::Boolean ;
OBDelegation ::= objectDefinition::ObjectDefinition ;
CultureNeutral ::= value::String ;
SettingValueAttributes ::= path::SettingPath null::Boolean fixed::Boolean unset::Boolean definition::QualifiedName convert::Boolean secure::Boolean reference::Boolean ;
RelationshipConstraint ::= OBRelationshipConstraint ;
 RelationshipConstraint ::= OCRelationshipConstraint ;
 RelationshipConstraint ::= RCRelationshipConstraint ;
 RelationshipConstraint ::= CGRelationshipConstraint ;
 RelationshipConstraint ::= CDRelationshipConstraint ;
 RelationshipConstraint ::= (constraint::RCConstraint)+ (relationshipConstraint::RCRelationshipConstraint)+ (objectConstraint::RCObjectConstraint)+ (constraintGroup::RCConstraintGroup)+ relationshipDefinition::QualifiedName targetRole::RolesList targetObjectDefinition::QualifiedName minOccurs::MinOccurs maxOccurs::MaxOccurs delegationAware::Boolean ;
HostingMember ::= OBHosting ;
 HostingMember ::= RDHosting ;
 HostingMember ::= guestMember::Path hostMember::Path ;
Entry ::= description::Description ;
Value ::= (contents::String)+ null::Boolean ;
OBConstraintGroup ::= objectDefinition::ObjectDefinition ;
ContainmentMember ::= OBContainment ;
 ContainmentMember ::= RDContainment ;
 ContainmentMember ::= childMember::Path ;
SDMConstraintDefinition ::= sdm::SystemDefinitionModel ;
SystemDefinitionModel ::= information::Information (import::Import)+ designData::DesignData settingDefinitions::SettingDefinitions (communicationDefinition::SDMCommunicationDefinition)+ (containmentDefinition::SDMContainmentDefinition)+ (delegationDefinition::SDMDelegationDefinition)+ (referenceDefinition::SDMReferenceDefinition)+ (endpointDefinition::SDMEndpointDefinition)+ (resourceDefinition::SDMResourceDefinition)+ (systemDefinition::SDMSystemDefinition)+ (constraintDefinition::SDMConstraintDefinition)+ (manager::SDMManager)+ nameSpace::NameSpace namespaceIdentity::NamespaceIdentity (documentLanguage::Culture)+ (compilationHash::CompilationHashType)+ ;
Path ::= value::String ;
DefSettingValueList ::= definition::Definition ;
SDMReferenceDefinition ::= sdm::SystemDefinitionModel ;
FlowDefinition ::= description::Description designData::DesignData (settingDeclaration::DefSettingDeclaration)+ (settingValue::DefSettingValue)+ (settingValueList::DefSettingValueList)+ name::SimpleName manager::QualifiedName className::String ;
SDMResourceDefinition ::= sdm::SystemDefinitionModel ;
RDReference ::= relationshipDefinition::RelationshipDefinition ;
OBResourceDefinition ::= objectDefinition::ObjectDefinition ;
RCConstraintGroup ::= relationshipConstraint_RC::RelationshipConstraint ;
String ::= string() ;
ConstraintDefinition ::= SDMConstraintDefinition ;
 ConstraintDefinition ::= (relationshipConstraint::CDRelationshipConstraint)+ (constraintGroup::CDConstraintGroup)+ (objectConstraint::CDObjectConstraint)+ (constraint::CDConstraint)+ targetDefinition::QualifiedName returnEarly::Boolean ;
SettingDefinitions ::= nameSpace::NameSpace manager::QualifiedName clrNameSpace::String ;
ProcessorArchitectures ::= (x86::ε) | (ia64::ε) | (amd64::ε) | (wow64::ε) | (msil::ε) | (shx::ε) | (arm::ε) | (data::ε) ;
OCConstraintGroup ::= objectConstraint_OC::ObjectConstraint ;
CompilationHashType ::= value::String ;
OBReferenceDefinition ::= objectDefinition::ObjectDefinition ;
OCRelationshipConstraint ::= objectConstraint_OC::ObjectConstraint ;
QualifiedName ::= value::String ;
ResourceDefinition ::= SDMResourceDefinition ;
 ResourceDefinition ::= OBResourceDefinition ;
 ResourceDefinition ::= SDMResourceDefinition | OBResourceDefinition ;
Output ::= fixed::Boolean replace::Boolean ;
SettingValue ::= MembSettingValue ;
 SettingValue ::= DefSettingValue ;
 SettingValue ::= (contents::String)+ settingValueAttributes::SettingValueAttributes ;
CDConstraint ::= constraintDefinition::ConstraintDefinition ;
SDMSystemDefinition ::= sdm::SystemDefinitionModel ;
Integer ::= integer() ;
NameSpace ::= designData::DesignData ;
ConstraintEvaluation ::= (Design::ε) | (Never::ε) ;
FourPartVersionType ::= value::String ;
NamespaceIdentity ::= ImportNamespaceIdentity ;
 NamespaceIdentity ::= name::Path version::FourPartVersionType publicKey::PublicKeyType publicKeyToken::PublicKeyTokenType culture::CultureNeutral platform::Platform ;
RelationshipMember ::= HostingMember ;
 RelationshipMember ::= CommunicationMember ;
 RelationshipMember ::= ContainmentMember ;
 RelationshipMember ::= DelegationMember ;
 RelationshipMember ::= ReferenceMember ;
 RelationshipMember ::= HostingMember | CommunicationMember | ContainmentMember | DelegationMember | ReferenceMember ;
OBContainmentDefinition ::= objectDefinition::ObjectDefinition ;
ObjectDefinition ::= SystemDefinition ;
 ObjectDefinition ::= EndpointDefinition ;
 ObjectDefinition ::= ResourceDefinition ;
 ObjectDefinition ::= (flow::OBFlow)+ (relationshipConstraint::OBRelationshipConstraint)+ (constraint::OBConstraint)+ (constraintGroup::OBConstraintGroup)+ (endpointDefinition::OBEndpointDefinition)+ (systemDefinition::OBSystemDefinition)+ (resourceDefinition::OBResourceDefinition)+ (communicationDefinition::OBCommunicationDefinition)+ (containmentDefinition::OBContainmentDefinition)+ (delegationDefinition::OBDelegationDefinition)+ (referenceDefinition::OBReferenceDefinition)+ (hostingDefinition::OBHostingDefinition)+ (endpoint::OBEndpoint)+ (subsystem::OBSubsystem)+ (resource::OBResource)+ (hosting::OBHosting)+ (containment::OBContainment)+ (connection::OBConnection)+ (delegation::OBDelegation)+ (obreference::OBReference)+ layer::String extends::QualifiedName abstract::Boolean ;
OBConnection ::= objectDefinition::ObjectDefinition ;
RDConstraintGroup ::= relationshipDefinition::RelationshipDefinition ;
OBConstraint ::= objectDefinition::ObjectDefinition ;
OBDelegationDefinition ::= objectDefinition::ObjectDefinition ;
HostingDefinition ::= OBHostingDefinition ;
 HostingDefinition ::= guestDefinition::QualifiedName hostDefinition::QualifiedName simulationRoot::Boolean ;
SDMCommunicationDefinition ::= sdm::SystemDefinitionModel ;
Information ::= sdm::SystemDefinitionModel friendlyname::String companyname::String copyright::String trademark::String description::Description comments::String compilerversion::FourPartVersionType ;
Boolean ::= "true" | "false" ;
ContainmentDefinition ::= SDMContainmentDefinition ;
 ContainmentDefinition ::= OBContainmentDefinition ;
 ContainmentDefinition ::= parentDefinition::QualifiedName memberDefinition::QualifiedName ;
SDMEndpointDefinition ::= sdm::SystemDefinitionModel ;
DelegationMember ::= OBDelegation ;
 DelegationMember ::= RDDelegation ;
 DelegationMember ::= proxyMember::Path delegateMember::Path ;
SystemDefinition ::= SDMSystemDefinition ;
 SystemDefinition ::= OBSystemDefinition ;
 SystemDefinition ::= simulationRoot::Boolean ;
SettingMemberSecure ::= (Always::ε) | (PerInstance::ε) | (Never::ε) ;
CDConstraintGroup ::= constraintDefinition::ConstraintDefinition ;
OBResource ::= objectDefinition::ObjectDefinition ;
CGObjectConstraint ::= constraintGroup_CG::ConstraintGroup ;
--------------------metamodels::SEE_Design.bgf--------------------
Literal ::= VariableExpression ;
 Literal ::= NumberExpression ;
 Literal ::= value::Integer ;
Integer ::= integer() ;
PlusOperator ::= operand1::Expression operand2::Expression ;
UnaryPlusOp ::= operand::Expression ;
Boolean ::= "true" | "false" ;
Expression ::= Literal ;
 Expression ::= UnaryOperator ;
 Expression ::= BinaryOperator ;
 Expression ::= loggingOn::Boolean logger::Logger ;
BinaryOperator ::= PlusOperator ;
 BinaryOperator ::= MinusOperator ;
 BinaryOperator ::= operand1::Expression operand2::Expression ;
MinusOperator ::= operand1::Expression operand2::Expression ;
VariableExpression ::= name::String ;
UnaryOperator ::= UnaryPlusOp ;
 UnaryOperator ::= UnaryMinusOp ;
 UnaryOperator ::= operand::Expression ;
UnaryMinusOp ::= operand::Expression ;
String ::= string() ;
NumberExpression ::= value::Integer ;
Logger ::= instance::Logger expression::Expression logFile::LogFile ;
LogFile ::= file::String instance::LogFile logger::Logger ;
--------------------metamodels::SPEM.bgf--------------------
ProcessComponent ::= (processDefinitionElements::ProcessDefinitionElement)+ ;
Iteration ::= (artifactUsageNames::ArtifactUsageName)+ goal::Goal precondition::Precondition ;
Phase ::= (artifactUsageNames::ArtifactUsageName)+ goal::Goal precondition::Precondition ;
Condition ::= Goal ;
 Condition ::= Precondition ;
 Condition ::= Goal | Precondition ;
Lifecycle ::= (artifactUsageNames::ArtifactUsageName)+ goal::Goal precondition::Precondition ;
RoleKind ::= (artifactKinds::ArtifactKind)+ ;
ProcessDefinitionElement ::= Guidance ;
 ProcessDefinitionElement ::= ArtifactKind ;
 ProcessDefinitionElement ::= WorkItem ;
 ProcessDefinitionElement ::= RoleKind ;
 ProcessDefinitionElement ::= Condition ;
 ProcessDefinitionElement ::= ProcessComponent ;
 ProcessDefinitionElement ::= (guidances::Guidance)+ (processComponents::ProcessComponent)+ ;
ArtifactUsageName ::= isInput::Boolean isOutput::Boolean hasWorkPerArtifact::Boolean artifactKind::ArtifactKind workDefinition::WorkDefinition ;
Precondition ::= workDefinition::WorkDefinition ;
Guidance ::= (processDefinitionElements::ProcessDefinitionElement)+ ;
Boolean ::= "true" | "false" ;
ArtifactKind ::= (artifactUsageNames::ArtifactUsageName)+ responsible::RoleKind ;
WorkDefinition ::= ActivityKind ;
 WorkDefinition ::= Iteration ;
 WorkDefinition ::= Phase ;
 WorkDefinition ::= Lifecycle ;
 WorkDefinition ::= (artifactUsageNames::ArtifactUsageName)+ goal::Goal precondition::Precondition ;
WorkItem ::= WorkDefinition ;
ActivityKind ::= (performer::RoleKind)+ (assistant::RoleKind)+ ;
Goal ::= workDefinition::WorkDefinition ;
--------------------metamodels::SPL.bgf--------------------
ControlMethod ::= (deploy::ε) | (undeploy::ε) | (uninvite::ε) | (unregister::ε) | (unsubscribe::ε) ;
Event ::= eventId::String (declarations::Declaration)+ (methods::Method)+ ;
Modifier ::= (LIFO::ε) | (FIFO::ε) ;
FunctionCall ::= function::FunctionDeclaration (parameters::Expression)+ ;
Session ::= Registration ;
 Session ::= Dialog ;
 Session ::= Event ;
 Session ::= Method ;
StringConstant ::= value::String ;
HeadedMessageField ::= headerId::String ;
BlockExp ::= exp::Expression ;
SelectCase ::= (values::Constant)+ ;
FunctionCallStat ::= functionCall::FunctionCall ;
LocatedElement ::= Program ;
 LocatedElement ::= Service ;
 LocatedElement ::= Session ;
 LocatedElement ::= MethodName ;
 LocatedElement ::= Branch ;
 LocatedElement ::= TypeExpression ;
 LocatedElement ::= Declaration ;
 LocatedElement ::= StructureProperty ;
 LocatedElement ::= FunctionCall ;
 LocatedElement ::= Statement ;
 LocatedElement ::= SelectMember ;
 LocatedElement ::= Expression ;
 LocatedElement ::= MessageField ;
 LocatedElement ::= Constant ;
 LocatedElement ::= Response ;
Dialog ::= (declarations::Declaration)+ (methods::Method)+ ;
SIPHeader ::= (CALL_ID::ε) | (CONTACT::ε) | (CSEQ::ε) | (EVENT::ε) | (FROM::ε) | (MAX_FORWARDS::ε) | (SUBSCRIPTION_STATE::ε) | (TO::ε) | (VIA::ε) ;
Place ::= SIPHeaderPlace ;
 Place ::= VariablePlace ;
GlobalErrorResponse ::= errorKind::GlobalErrorKind ;
SIPMethodName ::= name::SIPMethod ;
Program ::= service::Service ;
IntegerConstant ::= value::Integer ;
FunctionDeclaration ::= RemoteFunctionDeclaration ;
 FunctionDeclaration ::= LocalFunctionDeclaration ;
Response ::= SuccessResponse ;
 Response ::= ErrorResponse ;
SIPHeaderPlace ::= header::SIPHeader ;
RequestURIExp ::= ε ;
Direction ::= (inout::ε) | (in::ε) | (out::ε) ;
Argument ::= type::TypeExpression initExp::Expression ;
Declaration ::= VariableDeclaration ;
 Declaration ::= FunctionDeclaration ;
 Declaration ::= StructureDeclaration ;
Registration ::= (declarations::Declaration)+ (sessions::Session)+ ;
WithExp ::= exp::Expression (msgFields::MessageField)+ ;
SelectMember ::= SelectDefault ;
 SelectMember ::= SelectCase ;
PropertyCallPlace ::= propName::String source::VariablePlace ;
MessageField ::= ReasonMessageField ;
 MessageField ::= HeadedMessageField ;
BreakStat ::= ε ;
Statement ::= CompoundStat ;
 Statement ::= SetStat ;
 Statement ::= DeclarationStat ;
 Statement ::= ReturnStat ;
 Statement ::= IfStat ;
 Statement ::= WhenStat ;
 Statement ::= ForeachStat ;
 Statement ::= SelectStat ;
 Statement ::= FunctionCallStat ;
 Statement ::= ContinueStat ;
 Statement ::= BreakStat ;
 Statement ::= PushStat ;
WhenStat ::= idExp::Variable (whenHeaders::WhenHeader)+ (statements::Statement)+ (elseStatements::Statement)+ ;
DeclarationStat ::= declaration::Declaration ;
FunctionLocation ::= (remote::ε) | (local::ε) ;
BooleanConstant ::= value::Boolean ;
VariablePlace ::= PropertyCallPlace ;
 VariablePlace ::= Variable ;
ErrorResponse ::= ClientErrorResponse ;
 ErrorResponse ::= GlobalErrorResponse ;
 ErrorResponse ::= RedirectionErrorResponse ;
 ErrorResponse ::= ServerErrorResponse ;
 ErrorResponse ::= ClientErrorResponse | GlobalErrorResponse | RedirectionErrorResponse | ServerErrorResponse ;
StructureProperty ::= name::String type::TypeExpression ;
FunctionCallExp ::= functionCall::FunctionCall ;
ServerErrorResponse ::= errorKind::ServerErrorKind ;
SuccessResponse ::= successKind::SuccessKind ;
Constant ::= BooleanConstant ;
 Constant ::= IntegerConstant ;
 Constant ::= StringConstant ;
 Constant ::= URIConstant ;
 Constant ::= SequenceConstant ;
 Constant ::= ResponseConstant ;
ReturnStat ::= returnedValue::Expression branch::NamedBranch ;
DefinedType ::= typeName::String ;
Branch ::= DefaultBranch ;
 Branch ::= NamedBranch ;
 Branch ::= (statements::Statement)+ ;
CompoundStat ::= (statements::Statement)+ ;
ClientErrorResponse ::= errorKind::ClientErrorKind ;
VariableDeclaration ::= Argument ;
 VariableDeclaration ::= WhenHeader ;
 VariableDeclaration ::= type::TypeExpression initExp::Expression ;
RedirectionErrorResponse ::= errorKind::RedirectionErrorKind ;
RemoteFunctionDeclaration ::= functionLocation::FunctionLocation ;
SIPMethod ::= (ACK::ε) | (BYE::ε) | (CANCEL::ε) | (INVITE::ε) | (NOTIFY::ε) | (OPTIONS::ε) | (REACK::ε) | (REGISTER::ε) | (REINVITE::ε) | (REREGISTER::ε) | (RESUBSCRIBE::ε) | (SUBSCRIBE::ε) ;
ContinueStat ::= ε ;
SequenceType ::= modifier::Modifier type::PrimitiveType size::Integer ;
GlobalErrorKind ::= (BUSY_EVERYWHERE::ε) | (DECLINE::ε) | (DOES_NOT_EXIST_ANYWHERE::ε) | (NOT_ACCEPTABLE::ε) ;
OperatorExp ::= opName::String leftExp::Expression rightExp::Expression ;
ConstantExp ::= value::Constant ;
ForwardExp ::= isParallel::Boolean exp::Expression ;
Expression ::= ConstantExp ;
 Expression ::= OperatorExp ;
 Expression ::= ForwardExp ;
 Expression ::= WithExp ;
 Expression ::= BlockExp ;
 Expression ::= ReasonExp ;
 Expression ::= BODYExp ;
 Expression ::= RequestURIExp ;
 Expression ::= PopExp ;
 Expression ::= FunctionCallExp ;
 Expression ::= Place ;
ReasonMessageField ::= exp::Expression ;
LocalFunctionDeclaration ::= (statements::Statement)+ ;
SetStat ::= target::Place setValue::Expression ;
IfStat ::= condition::Expression (thenStatements::Statement)+ (elseStatements::Statement)+ ;
String ::= string() ;
PushStat ::= target::Place pushedValue::Expression ;
PopExp ::= source::Place ;
SimpleType ::= type::PrimitiveType ;
MethodName ::= SIPMethodName ;
 MethodName ::= ControlMethodName ;
ControlMethodName ::= name::ControlMethod ;
StructureDeclaration ::= (properties::Argument)+ ;
ResponseConstant ::= response::Response ;
SequenceConstant ::= (values::Constant)+ ;
DefaultBranch ::= (statements::Statement)+ ;
PrimitiveType ::= (void::ε) | (bool::ε) | (int::ε) | (request::ε) | (response::ε) | (string::ε) | (time::ε) | (uri::ε) ;
ForeachStat ::= iteratorName::String sequenceExp::Expression (statements::Statement)+ ;
Integer ::= integer() ;
Variable ::= source::Declaration ;
BODYExp ::= ε ;
NamedBranch ::= (name::String)+ ;
ServerErrorKind ::= (BAD_GATEWAY::ε) | (MESSAGE_TOO_LARGE::ε) | (NOT_IMPLEMENTED::ε) | (SERVER_INTERNAL_ERROR::ε) | (SERVER_TIMEOUT::ε) | (SERVICE_UNAVAILABLE::ε) | (VERSION_NOT_SUPPORTED::ε) ;
ReasonExp ::= ε ;
SuccessKind ::= (OK::ε) | (ACCEPTED::ε) ;
Service ::= name::String (declarations::Declaration)+ (sessions::Session)+ ;
TypeExpression ::= SimpleType ;
 TypeExpression ::= SequenceType ;
 TypeExpression ::= DefinedType ;
ClientErrorKind ::= (ADDRESS_INCOMPLETE::ε) | (AMBIGUOUS::ε) | (BAD_EXTENSION::ε) | (BAD_REQUEST::ε) | (BUSY_HERE::ε) | (CALL_OR_TRANSACTION_DOES_NOT_EXIST::ε) | (EXTENSION_REQUIRED::ε) | (FORBIDDEN::ε) | (GONE::ε) | (INTERVAL_TOO_BRIEF::ε) | (LOOP_DETECTED::ε) | (METHOD_NOT_ALLOWED::ε) | (NOT_ACCEPTABLE_HERE::ε) | (NOT_ACCEPTABLE::ε) | (NOT_FOUND::ε) | (PAYMENT_REQUIRED::ε) | (PROXY_AUTHENTICATION_REQUIRED::ε) | (REQUESTURI_TOO_LONG::ε) | (REQUEST_ENTITY_TOO_LARGE::ε) | (REQUEST_PENDING::ε) | (REQUEST_TERMINATED::ε) | (REQUEST_TIMEOUT::ε) | (TEMPORARILY_UNAVAILABLE::ε) | (TOO_MANY_HOPS::ε) | (UNAUTHORIZED::ε) | (UNDECIPHERABLE::ε) | (UNSUPPORTED_MEDIA_TYPE::ε) | (UNSUPPORTED_URI_SCHEME::ε) ;
RedirectionErrorKind ::= (ALTERNATIVE_SERVICE::ε) | (MOVED_PERMANENTLY::ε) | (MOVED_TEMPORARILY::ε) | (MULTIPLE_CHOICES::ε) | (USE_PROXY::ε) ;
URIConstant ::= uri::String ;
SelectStat ::= matchedExp::Expression (selectCases::SelectCase)+ selectDefault::SelectDefault ;
Boolean ::= "true" | "false" ;
WhenHeader ::= headerId::String value::Constant ;
SelectDefault ::= (statements::Statement)+ ;
Method ::= type::TypeExpression direction::Direction methodName::MethodName (arguments::Argument)+ (statements::Statement)+ (branches::Branch)+ ;
--------------------metamodels::SQLDDL.bgf--------------------
Key ::= SimpleKey ;
 Key ::= PrimaryKey ;
 Key ::= ForeignKey ;
Integer ::= integer() ;
PrimaryKey ::= isUnique::Boolean name::String (columns::Column)+ ;
Database ::= (tables::Table)+ ;
NullVal ::= ε ;
Type ::= length::Integer isUnsigned::Boolean ;
Column ::= (referencedBy::ForeignKey)+ name::String type::Type canBeNull::Boolean default::Value (keys::Key)+ ;
Value ::= IntegerVal ;
 Value ::= NullVal ;
 Value ::= StringVal ;
String ::= string() ;
StringVal ::= value::String ;
Table ::= database::Database (referencedBy::ForeignKey)+ (elements::TableElement)+ (parameters::Parameter)+ ;
TableElement ::= Column ;
 TableElement ::= Key ;
SimpleKey ::= isUnique::Boolean name::String (columns::Column)+ ;
ForeignKey ::= referencedTable::Table (referencedColumns::Column)+ ;
LocatedElement ::= NamedElement ;
 LocatedElement ::= TableElement ;
 LocatedElement ::= Value ;
Parameter ::= table::Table value::Value ;
Boolean ::= "true" | "false" ;
IntegerVal ::= value::Integer ;
NamedElement ::= Database ;
 NamedElement ::= Table ;
 NamedElement ::= Type ;
 NamedElement ::= Parameter ;
--------------------metamodels::SWRC.bgf--------------------
DevelopmentProject ::= name::String carriedOutBy::Organization financedBy::Organization head::AcademicStaff (isAbout::ResearchTopic)+ (member::Person)+ (projectInfo::ProjectReport)+ ;
FacultyMember ::= FullProfessor ;
 FacultyMember ::= AssistantProfessor ;
 FacultyMember ::= AssociateProfessor ;
 FacultyMember ::= FullProfessor | AssistantProfessor | AssociateProfessor ;
Conference ::= series::String ;
Event ::= Conference ;
 Event ::= Workshop ;
 Event ::= Exhibition ;
 Event ::= Lecture ;
 Event ::= Meeting ;
 Event ::= name::String date::String eventTitle::String location::String atEvent::Event hasPartEvent::Event ;
InProceedings ::= editor::Person (author::Person)+ month::String number::Integer pages::String address::String volume::Integer series::String booktitle::String organization::Organization publisher::Organization ;
Project ::= ResearchProject ;
 Project ::= DevelopmentProject ;
 Project ::= SoftwareProject ;
AcademicStaff ::= Lecturer ;
 AcademicStaff ::= FacultyMember ;
 AcademicStaff ::= (cooperateWith::AcademicStaff)+ editor::Publication headOf::Project headOfGroup::ResearchGroup memberOfPC::Event organizerOrChairOf::Event (publication::Publication)+ (supervises::PhDStudent)+ worksAtProject::ResearchTopic ;
SoftwareComponent ::= hasPrice::Integer ;
Institute ::= cooperateWith::Institute (hasParts::ResearchGroup)+ ;
Person ::= Employee ;
 Person ::= AcademicStaff ;
 Person ::= Student ;
 Person ::= address::String name::String email::String fax::String homepage::String phone::String photo::String ;
ResearchTopic ::= dealWithIn::Project (isWorkedOnBy::AcademicStaff)+ ;
Department ::= hasParts::Institute ;
AdministrativeStaff ::= affiliation::Organization ;
Booklet ::= (author::Person)+ month::String address::String edition::String howpublished::String ;
String ::= string() ;
PhDStudent ::= (publication::Publication)+ worksAtProject::Project supervisor::AcademicStaff ;
Exhibition ::= name::String date::String eventTitle::String location::String atEvent::Event hasPartEvent::Event ;
University ::= (hasParts::Department)+ (student::Student)+ ;
MasterThesis ::= (author::Person)+ school::University month::String address::String type::String ;
Thesis ::= MasterThesis ;
 Thesis ::= PhDThesis ;
Graduate ::= PhDStudent ;
Workshop ::= series::String ;
Manual ::= (author::Person)+ organization::Organization month::String address::String edition::String ;
TechnicalStaff ::= affiliation::Organization ;
Association ::= location::String name::String (carriesOut::Project)+ (develops::Product)+ (employs::Employee)+ (finances::Project)+ (publishes::Publication)+ (technicalReport::TechnicalReport)+ ;
Proceedings ::= editor::Person publisher::Organization organization::Organization month::String number::String volume::String address::String series::String ;
Integer ::= integer() ;
ResearchProject ::= name::String carriedOutBy::Organization financedBy::Organization head::AcademicStaff (isAbout::ResearchTopic)+ (member::Person)+ (projectInfo::ProjectReport)+ ;
Lecture ::= givenBy::Person ;
Student ::= Undergraduate ;
 Student ::= Graduate ;
 Student ::= studiesAt::University ;
Meeting ::= ProjectMeeting ;
 Meeting ::= title::String (participant::Person)+ ;
PhDThesis ::= (author::Person)+ school::University month::String address::String type::String ;
Article ::= (author::Person)+ journal::String month::String number::Integer pages::String volume::Integer ;
Unpublished ::= (author::Person)+ month::String ;
Lecturer ::= (cooperateWith::AcademicStaff)+ editor::Publication headOf::Project headOfGroup::ResearchGroup memberOfPC::Event organizerOrChairOf::Event (publication::Publication)+ (supervises::PhDStudent)+ worksAtProject::ResearchTopic ;
Report ::= ProjectReport ;
 Report ::= TechnicalReport ;
Organization ::= ResearchGroup ;
 Organization ::= Association ;
 Organization ::= Department ;
 Organization ::= Institute ;
 Organization ::= Enterprise ;
 Organization ::= University ;
 Organization ::= location::String name::String (carriesOut::Project)+ (develops::Product)+ (employs::Employee)+ (finances::Project)+ (publishes::Publication)+ (technicalReport::TechnicalReport)+ ;
SoftwareProject ::= product::Product ;
AssociateProfessor ::= ε ;
AssistantProfessor ::= ε ;
TechnicalReport ::= series::String organization::Organization ;
Topic ::= ResearchTopic ;
 Topic ::= name::String ;
Product ::= SoftwareComponent ;
 Product ::= name::String developedBy::Organization ;
Employee ::= Manager ;
 Employee ::= AdministrativeStaff ;
 Employee ::= TechnicalStaff ;
 Employee ::= affiliation::Organization ;
InBook ::= (author::Person)+ publisher::Organization editor::Person month::String number::Integer pages::String volume::Integer series::String chapter::String type::String address::String ;
Manager ::= affiliation::Organization ;
ProjectReport ::= describesProject::Project ;
Misc ::= month::String howpublished::String ;
Publication ::= Article ;
 Publication ::= Book ;
 Publication ::= InBook ;
 Publication ::= Booklet ;
 Publication ::= InCollection ;
 Publication ::= InProceedings ;
 Publication ::= Proceedings ;
 Publication ::= Manual ;
 Publication ::= Misc ;
 Publication ::= Unpublished ;
 Publication ::= Thesis ;
 Publication ::= Report ;
Book ::= month::String number::Integer volume::Integer series::String source::String address::String edition::String isbn::String price::String editor::Person publisher::Organization (author::Person)+ ;
ResearchGroup ::= head::AcademicStaff (member::Employee)+ ;
Undergraduate ::= studiesAt::University ;
InCollection ::= editor::Person (author::Person)+ publisher::Organization month::String number::Integer pages::String address::String edition::String volume::Integer series::String chapter::String type::String booktitle::String ;
ProjectMeeting ::= title::String (participant::Person)+ ;
Bibliography ::= (publications::Publication)+ ;
Enterprise ::= location::String name::String (carriesOut::Project)+ (develops::Product)+ (employs::Employee)+ (finances::Project)+ (publishes::Publication)+ (technicalReport::TechnicalReport)+ ;
FullProfessor ::= ε ;
--------------------metamodels::SQLDML.bgf--------------------
ListExp ::= (elements::Expression)+ ;
Integer ::= integer() ;
StringValueExp ::= aValue::String ;
BinaryExp ::= OrExp ;
 BinaryExp ::= AndExp ;
 BinaryExp ::= OperationExp ;
OrExp ::= opName::String leftExp::Expression rightExp::Expression ;
InExp ::= columnName::String (elements::Predicate)+ ;
Expression ::= BinaryExp ;
 Expression ::= NotExp ;
 Expression ::= LikeExp ;
 Expression ::= InExp ;
 Expression ::= Predicate ;
 Expression ::= QueryPredicate ;
Predicate ::= ValueExp ;
 Predicate ::= ListExp ;
 Predicate ::= FunctionExp ;
 Predicate ::= ColumnExp ;
OperationExp ::= optName::String ;
WhereClause ::= expression::Expression ;
String ::= string() ;
QueryStmtCol ::= (columns::Expression)+ ;
QueryStmt ::= QueryStmtCol ;
 QueryStmt ::= QueryStmtAllCol ;
SQLRoot ::= (statements::Statement)+ ;
QueryPredicate ::= query::QueryStmt ;
QueryStmtAllCol ::= (tables::Table)+ condition::WhereClause ;
Statement ::= ViewStatement ;
 Statement ::= InsertStmt ;
 Statement ::= QueryStmt ;
Table ::= alias::String ;
ValueExp ::= StringValueExp ;
 ValueExp ::= IntegerValueExp ;
IntegerValueExp ::= aValue::Integer ;
NotExp ::= opName::String valueExp::Expression unused::Expression ;
ViewStatement ::= name::String (columns::ColumnExp)+ query::QueryStmt ;
LocatedElement ::= SQLRoot ;
 LocatedElement ::= Statement ;
 LocatedElement ::= NamedElement ;
 LocatedElement ::= WhereClause ;
 LocatedElement ::= Expression ;
Boolean ::= "true" | "false" ;
ColumnExp ::= alias::String type::DataType ;
LikeExp ::= columnName::String expression::StringValueExp ;
AndExp ::= opName::String leftExp::Expression rightExp::Expression ;
FunctionExp ::= (arguments::Expression)+ name::String ;
DataType ::= name::String ;
NamedElement ::= Table ;
 NamedElement ::= DataType ;
 NamedElement ::= ColumnExp ;
InsertStmt ::= tableName::String (values::Expression)+ ;
--------------------metamodels::Scilab.bgf--------------------
Integer ::= integer() ;
SP ::= biblio::Biblio ;
Description ::= (itemize::Itemize)+ (description_Indent::Description_Indent)+ ;
Link ::= link::String psppp::PSPPP see_Also_Item::See_Also_Item authors_Item::Authors_Item ;
Man ::= language::String title::String type::String date::String name::String keyword::String exemple::String (meta::Meta)+ ;
Biblio ::= Short_Description ;
 Biblio ::= Used_Functions ;
 Biblio ::= Authors_Item ;
 Biblio ::= (p::P)+ (sp::SP)+ (pp::PP)+ ;
Item ::= (itemize::Itemize)+ ;
String ::= string() ;
P ::= biblio::Biblio ;
Table ::= (table_New_Row::Table_New_Row)+ used_Functions::Used_Functions ;
Exemple ::= exemple::String xml_space::PreDef ;
PSPPP ::= P ;
 PSPPP ::= SP ;
 PSPPP ::= PP ;
 PSPPP ::= (verb::String)+ (em::String)+ (bd::String)+ (tt::String)+ (a::A)+ (link::Link)+ (img::Img)+ ;
Param ::= target::InOut (param_Indent::Param_Indent)+ ;
InOut ::= (in::ε) | (out::ε) ;
Authors ::= (authors_Item::Authors_Item)+ ;
Section ::= (itemize::Itemize)+ ;
Meta ::= meta::String path::String category::String version_CSI::String version_DOC::String author::String man::Man ;
Img ::= src::String psppp::PSPPP ;
PreDef ::= (Preserve::ε) | (Default::ε) ;
AIMG ::= A ;
 AIMG ::= Img ;
 AIMG ::= (verb::String)+ ;
A ::= href::String psppp::PSPPP authors_Item::Authors_Item ;
Itemize ::= Item ;
 Itemize ::= Section ;
 Itemize ::= label::String item::Item section::Section authors_Item::Authors_Item description::Description ;
PP ::= biblio::Biblio ;
--------------------metamodels::SecureUML.bgf--------------------
Permission ::= (role::Role)+ constraintAssignment::AuthorizationConstraint (actionAssignment::Action)+ ;
Group ::= (subjectGroup::Subject)+ ;
Resource ::= (resourceAction::Action)+ ;
Integer ::= integer() ;
CompositeAction ::= (subordinatedAction::Action)+ ;
Subject ::= Group ;
 Subject ::= User ;
 Subject ::= group::Group (role::Role)+ ;
User ::= group::Group (role::Role)+ ;
Boolean ::= "true" | "false" ;
Action ::= AtomicAction ;
 Action ::= CompositeAction ;
 Action ::= (permission::Permission)+ resource::Resource (actionHyerarchy::CompositeAction)+ ;
AuthorizationConstraint ::= (permission::Permission)+ ;
Role ::= (roleHierarchy::Role)+ (subjectAssignment::Subject)+ (permissionAssignment::Permission)+ ;
AtomicAction ::= (permission::Permission)+ resource::Resource (actionHyerarchy::CompositeAction)+ ;
String ::= string() ;
--------------------metamodels::Sharengo.bgf--------------------
BusinessObject ::= (operations::BusinessObjectOperation)+ ;
Flow ::= Service2BusinessObjectFlow ;
BusinessRule ::= expr::String ;
BusinessObjectOperation ::= (rules::BusinessRule)+ ;
Operation ::= ServiceOperation ;
 Operation ::= BusinessObjectOperation ;
 Operation ::= ServiceOperation | BusinessObjectOperation ;
Service ::= (operations::ServiceOperation)+ ;
ModelElement ::= Classifier ;
 ModelElement ::= Operation ;
 ModelElement ::= BusinessRule ;
 ModelElement ::= Flow ;
ServiceOperation ::= (BOFlows::Service2BusinessObjectFlow)+ (rules::BusinessRule)+ ;
String ::= string() ;
Classifier ::= Service ;
 Classifier ::= BusinessObject ;
--------------------metamodels::SeminarSchedulingSystem.bgf--------------------
Integer ::= integer() ;
Date ::= year::Integer month::Integer day::Integer ;
Attendee ::= name::String (offering::Offering)+ ;
Boolean ::= "true" | "false" ;
Presenter ::= name::String seminarSchedulingSystem::SeminarSchedulingSystem (qualifiedFor::Seminar)+ (offering::Offering)+ ;
Offering ::= is_cancelled::Boolean date::Date (attendee::Attendee)+ presenter::Presenter seminar::Seminar ;
SeminarSchedulingSystem ::= (presenter::Presenter)+ (seminar::Seminar)+ ;
String ::= string() ;
Seminar ::= title::String seminarSchedulingSystem::SeminarSchedulingSystem (qualified::Presenter)+ (offering::Offering)+ ;
--------------------metamodels::SignalFlow.bgf--------------------
Integer ::= integer() ;
LocalPort ::= compoundComponent::CompoundComponent ;
BaseComponent ::= CompoundComponent ;
 BaseComponent ::= PrimitiveComponent ;
 BaseComponent ::= name::String position::String (signal::Signal)+ (outputPort::OutputPort)+ (inputPort::InputPort)+ compoundComponent::CompoundComponent ;
InputPort ::= baseComponent::BaseComponent ;
Signal ::= name::String position::String baseComponent::BaseComponent associationPortBase_PortBase::AssociationPortBase_PortBase ;
PrimitiveComponent ::= name::String position::String (signal::Signal)+ (outputPort::OutputPort)+ (inputPort::InputPort)+ compoundComponent::CompoundComponent ;
PortBase ::= InputPort ;
 PortBase ::= LocalPort ;
 PortBase ::= OutputPort ;
 PortBase ::= name::String position::String associationPortBase_PortBasesrc::AssociationPortBase_PortBase associationPortBase_PortBasedst::AssociationPortBase_PortBase ;
OutputPort ::= baseComponent::BaseComponent ;
CompoundComponent ::= rootFolder::RootFolder (baseComponent::BaseComponent)+ (localPort::LocalPort)+ ;
String ::= string() ;
RootFolder ::= (compoundComponent::CompoundComponent)+ ;
--------------------metamodels::SimpleAirlineDomain.bgf--------------------
Integer ::= integer() ;
Airline ::= name::String nationality::String (flight::Flight)+ ;
Time ::= year::Integer month::Integer day::Integer hour::Integer minute::Integer second::Integer ;
Airport ::= name::String (departingFlight::Flight)+ (arrivingFlight::Flight)+ ;
Passenger ::= name::String age::Integer gender::Genre needsAssistance::Boolean flight::Flight ;
Boolean ::= "true" | "false" ;
Genre ::= (male::ε) | (female::ε) ;
String ::= string() ;
Flight ::= departTime::Time duration::Time maxnrPassengers::Integer (passenger::Passenger)+ airline::Airline origin::Airport destination::Airport ;
--------------------metamodels::SysML.bgf--------------------
Problem ::= content::String ;
DeriveReqt ::= ε ;
ActivityPartition ::= AllocateActivityPartition ;
DistributedProperty ::= BasicInterval ;
 DistributedProperty ::= Normal ;
 DistributedProperty ::= BasicInterval | Normal ;
Continous ::= instance::InstanceSpecification ;
Property ::= BlockProperty ;
 Property ::= Port ;
 Property ::= FlowProperty ;
 Property ::= BlockProperty | Port | FlowProperty ;
BasicInterval ::= Interval ;
 BasicInterval ::= Uniform ;
 BasicInterval ::= min::Integer max::Integer ;
Behavior ::= ControlOperation ;
 Behavior ::= TestCase ;
 Behavior ::= ε ;
ConstraintProperty ::= ε ;
FlowPort ::= isAtomic::Boolean direction::FlowDirection isConjugated::Boolean ;
ConnectorEnd ::= NestedConnectorEnd ;
Block ::= ConstraintBlock ;
 Block ::= isEncapsulated::Boolean ;
Overwrite ::= ε ;
Viewpoint ::= (stakeholders::String)+ purpose::String (concerns::String)+ (languages::String)+ (methods::String)+ ;
Dependency ::= Conform ;
Realization ::= Satisfy ;
Interval ::= min::Integer max::Integer ;
BlockProperty ::= ConstraintProperty ;
 BlockProperty ::= DistributedProperty ;
 BlockProperty ::= ConstraintProperty | DistributedProperty ;
Allocate ::= ε ;
InformationFlow ::= ItemFlow ;
 InformationFlow ::= (conveyed::Classifier)+ (source::NamedElement)+ (target::NamedElement)+ ;
Class ::= Viewpoint ;
 Class ::= Block ;
 Class ::= Requirement ;
 Class ::= name::String ;
Rationale ::= content::String ;
FlowSpecification ::= (ownedFlowProperty::FlowProperty)+ ;
FlowDirection ::= (in::ε) | (out::ε) | (inout::ε) ;
InstanceSpecification ::= ε ;
Operation ::= ControlOperation ;
 Operation ::= TestCase ;
 Operation ::= ε ;
Dimension ::= unit::Unit dimension::Dimension ;
View ::= conformsTo::Viewpoint ;
FlowProperty ::= direction::FlowDirection ;
Satisfy ::= ε ;
Classifier ::= Class ;
 Classifier ::= InformationItem ;
 Classifier ::= Class | InformationItem ;
InformationItem ::= (represented::Classifier)+ ;
Comment ::= Rationale ;
 Comment ::= Problem ;
 Comment ::= content::String ;
AllocateActivityPartition ::= ε ;
ValueSpecification ::= ε ;
String ::= string() ;
ValueType ::= Unit ;
 ValueType ::= Dimension ;
 ValueType ::= unit::Unit dimension::Dimension ;
ControlOperation ::= ε ;
Allocated ::= (allocatedFrom::NamedElement)+ (allocatedTo::NamedElement)+ ;
Package ::= View ;
Conform ::= target::Viewpoint source::View ;
Trace ::= DeriveReqt ;
 Trace ::= Verify ;
 Trace ::= Copy ;
 Trace ::= DeriveReqt | Verify | Copy ;
Unit ::= unit::Unit dimension::Dimension ;
DataType ::= ValueType ;
Requirement ::= text::String id::String (derived::Requirement)+ (derivedFrom::Requirement)+ (satisfiedBy::NamedElement)+ (refinedBy::NamedElement)+ (tracedTo::NamedElement)+ (verifiedBy::TestCase)+ master::Requirement ;
NamedElement ::= Dependency ;
 NamedElement ::= Package ;
 NamedElement ::= Allocated ;
 NamedElement ::= RequirementRelated ;
Port ::= FlowPort ;
 Port ::= isBehavior::Boolean ;
Integer ::= integer() ;
Verify ::= ε ;
Discrete ::= instance::InstanceSpecification ;
ParameterSet ::= Probability ;
 ParameterSet ::= ε ;
Interface ::= FlowSpecification ;
Probability ::= probability::ValueSpecification ;
Copy ::= ε ;
Uniform ::= min::Integer max::Integer ;
ConstraintBlock ::= isEncapsulated::Boolean ;
ActivityEdge ::= Probability ;
 ActivityEdge ::= Rate ;
 ActivityEdge ::= ε ;
Parameter ::= Optional ;
 Parameter ::= Rate ;
Boolean ::= "true" | "false" ;
RequirementRelated ::= (verifies::Requirement)+ (tracedFrom::Requirement)+ (satisfies::Requirement)+ (refines::Requirement)+ ;
Normal ::= mean::Integer standardDeviation::Integer ;
Abstraction ::= Allocate ;
NestedConnectorEnd ::= propertyPath::Property ;
Entity ::= NamedElement ;
 Entity ::= Comment ;
 Entity ::= Property ;
 Entity ::= DataType ;
 Entity ::= ConnectorEnd ;
 Entity ::= Interface ;
 Entity ::= Classifier ;
 Entity ::= InformationFlow ;
 Entity ::= Parameter ;
 Entity ::= ActivityEdge ;
 Entity ::= ParameterSet ;
 Entity ::= InstanceSpecification ;
 Entity ::= ValueSpecification ;
 Entity ::= Behavior ;
 Entity ::= Operation ;
 Entity ::= ObjectNode ;
 Entity ::= Abstraction ;
 Entity ::= ActivityPartition ;
 Entity ::= Trace ;
 Entity ::= Realization ;
TestCase ::= ε ;
ObjectNode ::= NoBuffer ;
 ObjectNode ::= Overwrite ;
 ObjectNode ::= NoBuffer | Overwrite ;
NoBuffer ::= ε ;
ItemFlow ::= itemProperty::BlockProperty ;
Rate ::= Continous ;
 Rate ::= Discrete ;
 Rate ::= instance::InstanceSpecification ;
Optional ::= ε ;
--------------------metamodels::SimpleSBVR.bgf--------------------
ExactlyNQuantification ::= cardinality::NonNegativeInteger ;
FactTypeRole ::= nounConcept::NounConcept ;
ObjectType ::= specializes::ObjectType (generalizes::ObjectType)+ ;
AtMostNQuantification ::= maxCardinality::NonNegativeInteger ;
String ::= string() ;
AtomicFormulation ::= BinaryAtomicFormulation ;
 AtomicFormulation ::= isBasedOn::FactType ;
CategorizationFactType ::= role1::FactTypeRole role2::FactTypeRole ;
IndividualConcept ::= instanceOf::ObjectType ;
BinaryAtomicFormulation ::= roleBinding1::RoleBinding roleBinding2::RoleBinding ;
Representation ::= Designation ;
 Representation ::= meaning::Meaning ;
BindableTarget ::= Variable ;
FactType ::= BinaryFactType ;
DataType ::= NonEmptyString ;
 DataType ::= NonNegativeInteger ;
 DataType ::= NonEmptyString | NonNegativeInteger ;
Integer ::= integer() ;
Meaning ::= Concept ;
 Meaning ::= LogicalFormulation ;
 Meaning ::= (representations::Representation)+ ;
Variable ::= rangesOver::ObjectType ;
IsPropertyOfFactType ::= role1::FactTypeRole role2::FactTypeRole ;
NonNegativeInteger ::= value::Integer ;
Element ::= Representation ;
 Element ::= Text ;
 Element ::= Meaning ;
 Element ::= Role ;
 Element ::= BindableTarget ;
 Element ::= RoleBinding ;
 Element ::= objectName::String ;
Quantification ::= UniversalQuantification ;
 Quantification ::= AtLeastNQuantification ;
 Quantification ::= ExactlyNQuantification ;
 Quantification ::= AtMostNQuantification ;
 Quantification ::= introducedVariable::Variable scopesOver::LogicalFormulation ;
AssociativeFactType ::= role1::FactTypeRole role2::FactTypeRole ;
Designation ::= text::Text ;
Role ::= FactTypeRole ;
 Role ::= nounConcept::NounConcept ;
AtLeastNQuantification ::= minCardinality::NonNegativeInteger ;
LogicalFormulation ::= AtomicFormulation ;
 LogicalFormulation ::= NecessityFormulation ;
 LogicalFormulation ::= Quantification ;
 LogicalFormulation ::= AtomicFormulation | NecessityFormulation | Quantification ;
NonEmptyString ::= value::String ;
RoleBinding ::= occursIn::AtomicFormulation isOf::FactType bindsTo::BindableTarget ;
NounConcept ::= ObjectType ;
 NounConcept ::= IndividualConcept ;
 NounConcept ::= DataType ;
 NounConcept ::= ObjectType | IndividualConcept | DataType ;
Text ::= value::String ;
Concept ::= NounConcept ;
 Concept ::= FactType ;
 Concept ::= NounConcept | FactType ;
BinaryFactType ::= IsPropertyOfFactType ;
 BinaryFactType ::= AssociativeFactType ;
 BinaryFactType ::= CategorizationFactType ;
 BinaryFactType ::= ObjectificationFactType ;
 BinaryFactType ::= role1::FactTypeRole role2::FactTypeRole ;
UniversalQuantification ::= introducedVariable::Variable scopesOver::LogicalFormulation ;
NecessityFormulation ::= ε ;
ObjectificationFactType ::= role1::FactTypeRole role2::FactTypeRole ;
Root ::= (elements::Element)+ ;
--------------------metamodels::SimulinkStateFlow.bgf--------------------
Integer ::= integer() ;
TriggerEnum ::= (alpha::ε) | (beta::ε) ;
TriggerPort ::= triggerType::TriggerEnum ;
Simulink ::= (subSystem::System)+ ;
Line ::= name::String block::Block system::System ;
String ::= string() ;
Units ::= (alpha::ε) | (beta::ε) ;
Annotation ::= text::String block::Block ;
System ::= name::String simulink::Simulink blocks::Block lines::Line (subSystem::System)+ ;
BranchPoint ::= ε ;
Block ::= Primitive ;
 Block ::= Reference ;
 Block ::= description::String name::String priority::String natagme::String blockType::String (lines::Line)+ (parameters::Parameter)+ (annotations::Annotation)+ (blockRefs::BlockRef)+ system::System ;
Connector ::= BranchPoint ;
 Connector ::= Port ;
 Connector ::= BranchPoint | Port ;
Reference ::= sourceBlock::String sourceType::String ;
Parameter ::= value::String block::Block ;
Primitive ::= deadLine::String period::String executionTime::String ;
BlockRef ::= ε ;
EnableEnum ::= (alpha::ε) | (beta::ε) ;
EnablePort ::= statesWhenEnabling::EnableEnum ;
OutPut ::= number::Integer ;
Port ::= OutPut ;
 Port ::= TriggerPort ;
 Port ::= EnablePort ;
 Port ::= units::Units ;
--------------------metamodels::SoftwareQualityControl.bgf--------------------
Integer ::= integer() ;
Control ::= c_controlsSequence::ControlsSequence responsible::String component::String developmentPhase::String scope::String date::DateType controlledElt::String eltRef::String eltAuthor::String formRef::String type::ControlType ;
BugTracking ::= (bugs::Bug)+ ;
Boolean ::= "true" | "false" ;
DateType ::= day::Integer month::Integer year::Integer ;
ControlType ::= BugTracking ;
ControlsSequence ::= (controls::Control)+ ;
Bug ::= b_bugTracking::BugTracking number::Integer componentVersion::String description::String status::BugStatusType originator::String responsible::String commentsAnswers::String openDate::String closeDate::String ;
String ::= string() ;
BugStatusType ::= (bst_open::ε) | (bst_closed::ε) | (bst_skipped::ε) ;
--------------------metamodels::SyncCharts.bgf--------------------
SimpleState ::= isFinal::Boolean ;
Integer ::= integer() ;
Transition ::= kind::TransitionKind ;
PseudoState ::= kind::PseudoStateKind ;
PseudoTransition ::= kind::PseudoTransitionKind ;
ModelElement ::= Arc ;
 ModelElement ::= Vertex ;
Arc ::= Transition ;
 Arc ::= PseudoTransition ;
String ::= string() ;
State ::= SimpleState ;
 State ::= CompositeState ;
 State ::= isFinal::Boolean ;
CompositeState ::= canTerminate::Boolean isSuspendable::Boolean (stg::Stg)+ ;
TransitionKind ::= ε ;
Boolean ::= "true" | "false" ;
PseudoTransitionKind ::= ε ;
PseudoStateKind ::= ε ;
Stg ::= withFinal::Boolean compositeState::CompositeState (arc::Arc)+ (referenceState::ReferenceState)+ ;
ReferenceState ::= CompositeState ;
 ReferenceState ::= subSyncChart::SyncChart containers::Stg ;
Vertex ::= PseudoState ;
 Vertex ::= State ;
SyncChart ::= context::ModelElement (referenceState::ReferenceState)+ ;
--------------------metamodels::Table.bgf--------------------
Table ::= (rows::Row)+ ;
Row ::= (cells::Cell)+ ;
Cell ::= content::String ;
String ::= string() ;
--------------------metamodels::TextualPathExp.bgf--------------------
AlternativeTrans ::= (altPaths::Path)+ ;
Boolean ::= "true" | "false" ;
Transition ::= AlternativeTrans ;
 Transition ::= PrimitiveTrans ;
Path ::= (transitions::Transition)+ ;
TextualPathExp ::= path::Path ;
String ::= string() ;
PrimitiveTrans ::= name::String ;
--------------------metamodels::Trace.bgf--------------------
Integer ::= integer() ;
Call ::= level::Level (indexes::Index)+ methodName::String DBAccessesNumber::Integer DBRowsNumber::Integer CPUTime::Integer ;
Boolean ::= "true" | "false" ;
Trace ::= (levels::Level)+ name::String ;
Level ::= trace::Trace (calls::Call)+ ;
Index ::= value::Integer ;
String ::= string() ;
--------------------metamodels::TroposActorConcept.bgf--------------------
Resource ::= use::Actor dependencyWR::Dependency dependencyR::Dependency ;
HardGoal ::= wanter::Actor (plan::Plan)+ (dependencyWG::Dependency)+ (dependencyG::Dependency)+ ;
SoftGoal ::= wanter::Actor (plan::Plan)+ (dependencyWG::Dependency)+ (dependencyG::Dependency)+ ;
Dependency ::= dependee::Actor depender::Actor goal::Goal WhyG::Goal WhyR::Resource resourceD::Resource WhyP::Plan plan::Plan ;
Plan ::= isFulfilled::Goal capableOf::Actor (dependencyWP::Dependency)+ (dependencyP::Dependency)+ ;
Actor ::= (dependencyE::Dependency)+ (dependencyR::Dependency)+ (goal::Goal)+ (plan::Plan)+ (resource::Resource)+ ;
Goal ::= SoftGoal ;
 Goal ::= HardGoal ;
 Goal ::= wanter::Actor (plan::Plan)+ (dependencyWG::Dependency)+ (dependencyG::Dependency)+ ;
--------------------metamodels::TroposGoalAndPlanConcepts.bgf--------------------
Resource ::= (meansEndR::MeansEnd)+ ;
MeansEnd ::= meansR::Resource means::Goal end::Goal PointOfView::Actor meansP::Plan ;
OrDecLink ::= booleanDecompositionB::BooleanDecomposition target::Goal targetP::Plan ;
Plan ::= (meansEndP::MeansEnd)+ booleanDecompositionP::BooleanDecomposition (booleanDecLinkP::BooleanDecLink)+ ;
Decomposition ::= BooleanDecomposition ;
 Decomposition ::= PointOfView::Actor ;
AndDecLink ::= booleanDecompositionB::BooleanDecomposition target::Goal targetP::Plan ;
Actor ::= (decomposition::Decomposition)+ (contribution::Contribution)+ (meansEnd::MeansEnd)+ ;
BooleanDecLink ::= AndDecLink ;
 BooleanDecLink ::= OrDecLink ;
 BooleanDecLink ::= booleanDecompositionB::BooleanDecomposition target::Goal targetP::Plan ;
Goal ::= (contributionR::Contribution)+ (contributionD::Contribution)+ (meansEndS::MeansEnd)+ (meansEndD::MeansEnd)+ booleanDecomposition::BooleanDecomposition (booleanDecLink::BooleanDecLink)+ ;
BooleanDecomposition ::= type::String root::Goal rootP::Plan (booleanDecLinkD::BooleanDecLink)+ ;
String ::= string() ;
Contribution ::= metric::String contributer::Goal contributed::Goal PointOfView::Actor ;
--------------------metamodels::UEML.bgf--------------------
Object ::= InformationObject ;
 Object ::= Resource ;
 Object ::= ioFlow::IOFlow ;
ResourceFlow ::= (resourceCarries::Resource)+ ;
HumanResource ::= carries::ResourceFlow (plays::ResourceRole)+ ;
UEMLModel ::= (contains::UEMLObject)+ ;
Anchor ::= OutputPort ;
 Anchor ::= InputPort ;
 Anchor ::= ConnectionOperator ;
 Anchor ::= target::AssociationConnector origin::AssociationConnector ;
MaterialResource ::= carries::ResourceFlow (plays::ResourceRole)+ ;
IOFlow ::= (carries::Object)+ ;
Geometry ::= object::UEMLObject ;
RoleType ::= ε ;
Activity ::= (resourceRole::ResourceRole)+ (child::Activity)+ parent::Activity (hasOutput::OutputPort)+ (hasInput::InputPort)+ ;
Resource ::= MaterialResource ;
 Resource ::= HumanResource ;
 Resource ::= carries::ResourceFlow (plays::ResourceRole)+ ;
Flow ::= ResourceFlow ;
 Flow ::= IOFlow ;
 Flow ::= ControlFlow ;
 Flow ::= associationConnector::AssociationConnector ;
UEMLObject ::= UEMLModel ;
 UEMLObject ::= Port ;
 UEMLObject ::= Flow ;
 UEMLObject ::= Activity ;
 UEMLObject ::= Object ;
 UEMLObject ::= has::Geometry model::UEMLModel ;
AssociationConnector ::= (origin::Anchor)+ (target::Anchor)+ classAssociation::Flow ;
InputPort ::= activity::Activity ;
ControlFlow ::= TriggerFlow ;
 ControlFlow ::= ConstraintFlow ;
 ControlFlow ::= (carries::InformationObject)+ ;
ConstraintFlow ::= (carries::InformationObject)+ ;
InformationObject ::= controlFlow::ControlFlow ;
TriggerFlow ::= (carries::InformationObject)+ ;
ResourceRole ::= (resourcePlays::Resource)+ roleQualifier::RoleType in::Activity ;
ConnectionOperator ::= target::AssociationConnector origin::AssociationConnector ;
OutputPort ::= activity::Activity ;
Port ::= ResourceRole ;
 Port ::= Anchor ;
 Port ::= ResourceRole | Anchor ;
--------------------metamodels::TroposIntegratingActorConcept.bgf--------------------
Position ::= (cover::Role)+ ;
Role ::= ε ;
Agent ::= occupy::Position (play::Role)+ ;
Actor ::= Agent ;
 Actor ::= Position ;
 Actor ::= Role ;
 Actor ::= Agent | Position | Role ;
--------------------metamodels::UDDI_meta-model_fragment.bgf--------------------
IdentifierBag ::= ε ;
BusinessTemplate ::= ε ;
TModel ::= (overviewDocuments::OverviewDocument)+ identifierBag::IdentifierBag ;
BusinessService ::= ε ;
OverviewDocument ::= ε ;
BusinessEntity ::= (businessContacts::BusinessContact)+ (businessServices::BusinessService)+ identifierBag::IdentifierBag ;
BusinessContact ::= ε ;
--------------------metamodels::UEMLExtended.bgf--------------------
ResourceFlow ::= (resourceCarries::Resource)+ ;
HumanResource ::= obliger::Commitment claimer::Commitment has_parties::Contract ;
Organisation ::= obliger::Commitment claimer::Commitment has_parties::Contract ;
Event ::= target::AssociationConnector origin::AssociationConnector ;
UEMLModel ::= (contains::UEMLObject)+ ;
Commitment ::= (resource::Resource)+ task::Task agentO::Agent agentC::Agent contract::Contract ;
MaterialResource ::= ε ;
IOFlow ::= (carries::Object)+ ;
Contract ::= (process::Process)+ agent::Agent (collection_of::Commitment)+ ;
RoleType ::= ε ;
Activity ::= Process ;
 Activity ::= Task ;
 Activity ::= (resourceRole::ResourceRole)+ parent::Process (hasOutput::OutputPort)+ (hasInput::InputPort)+ activityType::ActivityType ;
Resource ::= PassiveObject ;
 Resource ::= Service ;
 Resource ::= Agent ;
 Resource ::= carries::ResourceFlow (plays::ResourceRole)+ resourceType::ResourceType (commitment::Commitment)+ ;
FlowObject ::= Event ;
 FlowObject ::= Activity ;
 FlowObject ::= ConnectionOperator ;
 FlowObject ::= target::AssociationConnector origin::AssociationConnector ;
AssociationConnector ::= (origin::FlowObject)+ (target::FlowObject)+ classAssociation::Flow ;
InformationObject ::= controlFlow::ControlFlow ;
PassiveObject ::= MaterialResource ;
 PassiveObject ::= Commitment ;
 PassiveObject ::= Contract ;
 PassiveObject ::= MaterialResource | Commitment | Contract ;
TriggerFlow ::= (carries::InformationObject)+ ;
Task ::= (fulfills::Commitment)+ ;
Agent ::= HumanResource ;
 Agent ::= Software ;
 Agent ::= Organisation ;
 Agent ::= obliger::Commitment claimer::Commitment has_parties::Contract ;
Port ::= ResourceRole ;
 Port ::= Anchor ;
 Port ::= ResourceRole | Anchor ;
Object ::= InformationObject ;
 Object ::= Resource ;
 Object ::= ioFlow::IOFlow ;
Anchor ::= OutputPort ;
 Anchor ::= InputPort ;
 Anchor ::= ConnectionOperator ;
 Anchor ::= OutputPort | InputPort ;
Service ::= process::Process ;
Geometry ::= object::UEMLObject ;
Process ::= child::Activity (fulfills::Contract)+ realises::Service ;
Flow ::= ResourceFlow ;
 Flow ::= IOFlow ;
 Flow ::= ControlFlow ;
 Flow ::= associationConnector::AssociationConnector ;
UEMLObject ::= UEMLModel ;
 UEMLObject ::= Port ;
 UEMLObject ::= Flow ;
 UEMLObject ::= Object ;
 UEMLObject ::= Activity ;
 UEMLObject ::= has::Geometry model::UEMLModel ;
ConstraintFlow ::= (carries::InformationObject)+ ;
ControlFlow ::= TriggerFlow ;
 ControlFlow ::= ConstraintFlow ;
 ControlFlow ::= (carries::InformationObject)+ ;
InputPort ::= activity::Activity ;
ActivityType ::= (activityT::Activity)+ ;
ResourceType ::= (resource::Resource)+ ;
Software ::= obliger::Commitment claimer::Commitment has_parties::Contract ;
ResourceRole ::= (resourcePlays::Resource)+ roleQualifier::RoleType in::Activity ;
ConnectionOperator ::= target::AssociationConnector origin::AssociationConnector ;
OutputPort ::= activity::Activity ;
--------------------metamodels::UEMLExtensionCapturingAgents.bgf--------------------
Object ::= InformationObject ;
 Object ::= Resource ;
 Object ::= ioFlow::IOFlow ;
ResourceFlow ::= (resourceCarries::Resource)+ ;
HumanResource ::= ε ;
Organisation ::= ε ;
UEMLModel ::= (contains::UEMLObject)+ ;
Commitment ::= (resource::Resource)+ ;
Anchor ::= OutputPort ;
 Anchor ::= InputPort ;
 Anchor ::= ConnectionOperator ;
 Anchor ::= target::AssociationConnector origin::AssociationConnector ;
MaterialResource ::= ε ;
IOFlow ::= (carries::Object)+ ;
Contract ::= ε ;
Geometry ::= object::UEMLObject ;
RoleType ::= ε ;
Activity ::= (resourceRole::ResourceRole)+ (child::Activity)+ parent::Activity (hasOutput::OutputPort)+ (hasInput::InputPort)+ ;
Resource ::= PassiveObject ;
 Resource ::= Agent ;
 Resource ::= carries::ResourceFlow (plays::ResourceRole)+ (commitment::Commitment)+ ;
Flow ::= ResourceFlow ;
 Flow ::= IOFlow ;
 Flow ::= ControlFlow ;
 Flow ::= associationConnector::AssociationConnector ;
UEMLObject ::= UEMLModel ;
 UEMLObject ::= Port ;
 UEMLObject ::= Flow ;
 UEMLObject ::= Activity ;
 UEMLObject ::= Object ;
 UEMLObject ::= has::Geometry model::UEMLModel ;
AssociationConnector ::= (origin::Anchor)+ (target::Anchor)+ classAssociation::Flow ;
InputPort ::= activity::Activity ;
ControlFlow ::= TriggerFlow ;
 ControlFlow ::= ConstraintFlow ;
 ControlFlow ::= (carries::InformationObject)+ ;
ConstraintFlow ::= (carries::InformationObject)+ ;
InformationObject ::= controlFlow::ControlFlow ;
Software ::= ε ;
PassiveObject ::= MaterialResource ;
 PassiveObject ::= Commitment ;
 PassiveObject ::= Contract ;
 PassiveObject ::= MaterialResource | Commitment | Contract ;
TriggerFlow ::= (carries::InformationObject)+ ;
Agent ::= HumanResource ;
 Agent ::= Software ;
 Agent ::= Organisation ;
 Agent ::= HumanResource | Software | Organisation ;
ResourceRole ::= (resourcePlays::Resource)+ roleQualifier::RoleType in::Activity ;
ConnectionOperator ::= target::AssociationConnector origin::AssociationConnector ;
OutputPort ::= activity::Activity ;
Port ::= ResourceRole ;
 Port ::= Anchor ;
 Port ::= ResourceRole | Anchor ;
--------------------metamodels::UEMLExtensionCapturingSocialEffects.bgf--------------------
Object ::= InformationObject ;
 Object ::= Resource ;
 Object ::= ioFlow::IOFlow ;
ResourceFlow ::= (resourceCarries::Resource)+ ;
HumanResource ::= carries::ResourceFlow (plays::ResourceRole)+ ;
UEMLModel ::= (contains::UEMLObject)+ ;
Commitment ::= task::Task agentO::Agent agentC::Agent contract::Contract ;
Service ::= process::Process ;
Anchor ::= OutputPort ;
 Anchor ::= InputPort ;
 Anchor ::= ConnectionOperator ;
 Anchor ::= target::AssociationConnector origin::AssociationConnector ;
MaterialResource ::= carries::ResourceFlow (plays::ResourceRole)+ ;
IOFlow ::= (carries::Object)+ ;
Contract ::= (process::Process)+ agent::Agent (collection_of::Commitment)+ ;
Geometry ::= object::UEMLObject ;
RoleType ::= ε ;
Process ::= child::Activity (fulfills::Contract)+ realises::Service ;
Activity ::= Process ;
 Activity ::= Task ;
 Activity ::= (resourceRole::ResourceRole)+ parent::Process hasOutput::OutputPort ;
Resource ::= MaterialResource ;
 Resource ::= HumanResource ;
 Resource ::= Service ;
 Resource ::= Agent ;
 Resource ::= carries::ResourceFlow (plays::ResourceRole)+ ;
Flow ::= ResourceFlow ;
 Flow ::= IOFlow ;
 Flow ::= ControlFlow ;
 Flow ::= associationConnector::AssociationConnector ;
UEMLObject ::= UEMLModel ;
 UEMLObject ::= Port ;
 UEMLObject ::= Flow ;
 UEMLObject ::= Activity ;
 UEMLObject ::= Object ;
 UEMLObject ::= has::Geometry model::UEMLModel ;
AssociationConnector ::= (origin::Anchor)+ (target::Anchor)+ classAssociation::Flow ;
InputPort ::= target::AssociationConnector origin::AssociationConnector ;
ControlFlow ::= TriggerFlow ;
 ControlFlow ::= ConstraintFlow ;
 ControlFlow ::= (carries::InformationObject)+ ;
ConstraintFlow ::= (carries::InformationObject)+ ;
InformationObject ::= controlFlow::ControlFlow ;
TriggerFlow ::= (carries::InformationObject)+ ;
Task ::= (fulfills::Commitment)+ ;
Agent ::= obliger::Commitment claimer::Commitment has_parties::Contract ;
ResourceRole ::= (resourcePlays::Resource)+ roleQualifier::RoleType in::Activity ;
ConnectionOperator ::= target::AssociationConnector origin::AssociationConnector ;
OutputPort ::= activity::Activity ;
Port ::= ResourceRole ;
 Port ::= Anchor ;
 Port ::= ResourceRole | Anchor ;
--------------------metamodels::UEMLExtensionDynamicAspects.bgf--------------------
Object ::= InformationObject ;
 Object ::= Resource ;
 Object ::= ioFlow::IOFlow ;
ResourceFlow ::= (resourceCarries::Resource)+ ;
HumanResource ::= carries::ResourceFlow (plays::ResourceRole)+ ;
Event ::= target::AssociationConnector origin::AssociationConnector ;
UEMLModel ::= (contains::UEMLObject)+ ;
Anchor ::= OutputPort ;
 Anchor ::= InputPort ;
 Anchor ::= ConnectionOperator ;
 Anchor ::= OutputPort | InputPort ;
MaterialResource ::= carries::ResourceFlow (plays::ResourceRole)+ ;
IOFlow ::= (carries::Object)+ ;
Geometry ::= object::UEMLObject ;
RoleType ::= ε ;
Process ::= (child::Activity)+ ;
Activity ::= Task ;
 Activity ::= (resourceRole::ResourceRole)+ parent::Process (hasOutput::OutputPort)+ (hasInput::InputPort)+ ;
Resource ::= MaterialResource ;
 Resource ::= HumanResource ;
 Resource ::= carries::ResourceFlow (plays::ResourceRole)+ ;
Flow ::= ResourceFlow ;
 Flow ::= IOFlow ;
 Flow ::= ControlFlow ;
 Flow ::= associationConnector::AssociationConnector ;
UEMLObject ::= UEMLModel ;
 UEMLObject ::= Port ;
 UEMLObject ::= Flow ;
 UEMLObject ::= Object ;
 UEMLObject ::= Activity ;
 UEMLObject ::= has::Geometry model::UEMLModel ;
FlowObject ::= Event ;
 FlowObject ::= Activity ;
 FlowObject ::= ConnectionOperator ;
 FlowObject ::= target::AssociationConnector origin::AssociationConnector ;
AssociationConnector ::= (origin::FlowObject)+ (target::FlowObject)+ classAssociation::Flow ;
InputPort ::= activity::Activity ;
ControlFlow ::= TriggerFlow ;
 ControlFlow ::= ConstraintFlow ;
 ControlFlow ::= (carries::InformationObject)+ ;
ConstraintFlow ::= (carries::InformationObject)+ ;
InformationObject ::= controlFlow::ControlFlow ;
TriggerFlow ::= (carries::InformationObject)+ ;
Task ::= (resourceRole::ResourceRole)+ parent::Process (hasOutput::OutputPort)+ (hasInput::InputPort)+ ;
ResourceRole ::= (resourcePlays::Resource)+ roleQualifier::RoleType in::Activity ;
ConnectionOperator ::= target::AssociationConnector origin::AssociationConnector ;
OutputPort ::= activity::Activity ;
Port ::= ResourceRole ;
 Port ::= Anchor ;
 Port ::= ResourceRole | Anchor ;
--------------------metamodels::UEMLExtensionModelingAspects.bgf--------------------
Object ::= InformationObject ;
 Object ::= Resource ;
 Object ::= ioFlow::IOFlow ;
ResourceFlow ::= (resourceCarries::Resource)+ ;
HumanResource ::= carries::ResourceFlow (plays::ResourceRole)+ resourceType::ResourceType ;
UEMLModel ::= (contains::UEMLObject)+ ;
Anchor ::= OutputPort ;
 Anchor ::= InputPort ;
 Anchor ::= ConnectionOperator ;
 Anchor ::= target::AssociationConnector origin::AssociationConnector ;
MaterialResource ::= carries::ResourceFlow (plays::ResourceRole)+ resourceType::ResourceType ;
IOFlow ::= (carries::Object)+ ;
Geometry ::= object::UEMLObject ;
RoleType ::= ε ;
Activity ::= (resourceRole::ResourceRole)+ (child::Activity)+ parent::Activity (hasOutput::OutputPort)+ (hasInput::InputPort)+ activityType::ActivityType ;
Resource ::= MaterialResource ;
 Resource ::= HumanResource ;
 Resource ::= carries::ResourceFlow (plays::ResourceRole)+ resourceType::ResourceType ;
Flow ::= ResourceFlow ;
 Flow ::= IOFlow ;
 Flow ::= ControlFlow ;
 Flow ::= associationConnector::AssociationConnector ;
UEMLObject ::= UEMLModel ;
 UEMLObject ::= Port ;
 UEMLObject ::= Flow ;
 UEMLObject ::= Activity ;
 UEMLObject ::= Object ;
 UEMLObject ::= has::Geometry model::UEMLModel ;
AssociationConnector ::= (origin::Anchor)+ (target::Anchor)+ classAssociation::Flow ;
InputPort ::= activity::Activity ;
ControlFlow ::= TriggerFlow ;
 ControlFlow ::= ConstraintFlow ;
 ControlFlow ::= (carries::InformationObject)+ ;
ConstraintFlow ::= (carries::InformationObject)+ ;
InformationObject ::= controlFlow::ControlFlow ;
ActivityType ::= (activityT::Activity)+ ;
ResourceType ::= (resource::Resource)+ ;
TriggerFlow ::= (carries::InformationObject)+ ;
ResourceRole ::= (resourcePlays::Resource)+ roleQualifier::RoleType in::Activity ;
ConnectionOperator ::= target::AssociationConnector origin::AssociationConnector ;
OutputPort ::= activity::Activity ;
Port ::= ResourceRole ;
 Port ::= Anchor ;
 Port ::= ResourceRole | Anchor ;
--------------------metamodels::USECASE1.bgf--------------------
Integer ::= integer() ;
PostCondition ::= (context::Context)+ ;
Episode ::= (event::Event)+ ;
Event ::= Action ;
 Event ::= Responce ;
 Event ::= Stimilus ;
 Event ::= (episode::Episode)+ ;
PreCondition ::= (context::Context)+ ;
UseCase ::= context::Context (service::Service)+ (user::User)+ (actor::Actor)+ ;
Action ::= (episode::Episode)+ ;
Actor ::= (useCase::UseCase)+ (goal::Goal)+ (user::User)+ ;
Service ::= (useCase::UseCase)+ (goal::Goal)+ (task::Task)+ ;
Goal ::= (service::Service)+ (actor::Actor)+ ;
String ::= string() ;
Responce ::= (parameter::Parameter)+ ;
Scenario ::= ε ;
Context ::= (preCondition::PreCondition)+ (postCondition::PostCondition)+ (useCase::UseCase)+ ;
User ::= (useCase::UseCase)+ (actor::Actor)+ ;
Parameter ::= (stimilus::Stimilus)+ (responce::Responce)+ ;
Boolean ::= "true" | "false" ;
Stimilus ::= (parameter::Parameter)+ ;
Task ::= (service::Service)+ ;
--------------------metamodels::USECASE2.bgf--------------------
Integer ::= integer() ;
Condition ::= Pre ;
 Condition ::= Post ;
 Condition ::= (constrained_with::UseCase)+ ;
UseCase ::= Manage ;
 UseCase ::= (scenario::ScenarioDescription)+ (condition::Condition)+ (interacter::Role)+ (specified_by::FunctionnelRequirement)+ (scoped_by::NonFunctionnelRequirement)+ (meet_by::Goal)+ ;
Role ::= HumanRole ;
 Role ::= SystemRole ;
 Role ::= EventRole ;
 Role ::= (interacted_with::UseCase)+ ;
NonFunctionnelRequirement ::= (scopes::UseCase)+ ;
Goal ::= (to_meet::UseCase)+ ;
String ::= string() ;
EventRole ::= (interacted_with::UseCase)+ ;
Resource ::= ε ;
ScenarioDescription ::= useCase::UseCase ;
Boolean ::= "true" | "false" ;
FunctionnelRequirement ::= (specifies::UseCase)+ ;
Manage ::= (managed_Resource::Resource)+ ;
SystemRole ::= (interacted_with::UseCase)+ ;
HumanRole ::= (interacted_with::UseCase)+ ;
Pre ::= (constrained_with::UseCase)+ ;
Requirement ::= NonFunctionnelRequirement ;
 Requirement ::= FunctionnelRequirement ;
 Requirement ::= NonFunctionnelRequirement | FunctionnelRequirement ;
Post ::= (constrained_with::UseCase)+ ;
--------------------metamodels::WSDL.bgf--------------------
BindingFault ::= operation::BindingOperation binding::Fault ;
Param ::= Input ;
 Param ::= Output ;
 Param ::= name::String message::Message ;
StartWithExtensions ::= Binding ;
 StartWithExtensions ::= BindingFault ;
 StartWithExtensions ::= BindingOperation ;
 StartWithExtensions ::= Binding | BindingFault | BindingOperation ;
PortType ::= name::String (operations::Operation)+ (bindings::Binding)+ ;
Input ::= operation::Operation ;
Message ::= name::String (params::Param)+ (faults::Fault)+ (parts::Part)+ ;
Operation ::= name::String input::Input output::Output type::PortType (faults::Fault)+ ;
Binding ::= name::String (ports::Port)+ type::PortType (operations::BindingOperation)+ ;
Service ::= name::String (ports::Port)+ ;
Part ::= name::String message::Message ;
Fault ::= name::String operation::Operation message::Message ;
BindingOperation ::= name::String bind::Binding binding::Operation input::StartWithExtensions output::StartWithExtensions (faults::BindingFault)+ ;
String ::= string() ;
Output ::= operation::Operation ;
Port ::= name::String service::Service binding::Binding ;
--------------------metamodels::UnifiedOntologyLanguage.bgf--------------------
Ontology ::= (imports::Package)+ ;
Literal ::= ε ;
Resource ::= Package ;
 Resource ::= context::Package ;
Integer ::= integer() ;
Fact ::= object::Node subject::Resource predicate::Resource context::Package ;
Boolean ::= "true" | "false" ;
Package ::= Ontology ;
Node ::= Resource ;
 Node ::= Literal ;
 Node ::= Resource | Literal ;
String ::= string() ;
--------------------metamodels::UnixFS.bgf--------------------
FileSystemRoot ::= (contents::File)+ ;
Directory ::= FileSystemRoot ;
 Directory ::= (contents::File)+ ;
File ::= Directory ;
 File ::= TextFile ;
TextFile ::= owner::String group::String ;
NamedElement ::= File ;
String ::= string() ;
--------------------metamodels::UsiXML-task.bgf--------------------
Integer ::= integer() ;
BinaryType ::= (Enabling::ε) | (Disabling::ε) | (SuspendResume::ε) | (OrderIndependence::ε) | (IndependentConcurrency::ε) | (ConcurencyWithInformationPassing::ε) | (UnderterministicChoice::ε) | (EnablingWithInformationPassing::ε) ;
UnaryType ::= (Optional::ε) | (Iteration::ε) | (finitIteration::ε) ;
Boolean ::= "true" | "false" ;
FiniteInteration ::= interation::Integer ;
BinaryOperator ::= type::BinaryType leftTask::Task rightTask::Task ;
Task ::= id::String name::String category::String frequency::Integer importance::Integer structurationLevel::Integer complexityLevel::Integer criticity::Integer centrality::Integer terminationValue::String taskType::String taskItem::String (decompositionTasks::Task)+ decomposedTask::Task leftOperator::BinaryOperator rightOperator::BinaryOperator decoration::UnaryOperator ;
Operator ::= BinaryOperator ;
 Operator ::= UnaryOperator ;
UnaryOperator ::= FiniteInteration ;
 UnaryOperator ::= UnaryType::UnaryType decoratedTask::Task ;
String ::= string() ;
--------------------metamodels::WSLink.bgf--------------------
Services ::= WebService ;
 Services ::= RSS ;
Network ::= (services::Services)+ name::String ;
Integer ::= integer() ;
LocatedElement ::= Network ;
 LocatedElement ::= Services ;
Boolean ::= "true" | "false" ;
RSS ::= name::String URL::String descriptions::String ;
WebService ::= (linkedServices::Services)+ ;
String ::= string() ;
--------------------metamodels::WTIP_SimpleClass.bgf--------------------
Attribute ::= name::String is_primary::Boolean type::Classifier ;
PrimitiveDataType ::= name::String ;
Boolean ::= "true" | "false" ;
Class ::= is_persistent::Boolean parent::Class (attrs::Attribute)+ ;
String ::= string() ;
Association ::= name::String src::Class dest::Class ;
Classifier ::= Class ;
 Classifier ::= PrimitiveDataType ;
 Classifier ::= name::String ;
--------------------metamodels::WTIP_SimpleRDBMS.bgf--------------------
Table ::= name::String (fkeys::FKey)+ (pkey::Column)+ (cols::Column)+ ;
FKey ::= references::Table (cols::Column)+ ;
Column ::= name::String type::String ;
String ::= string() ;
--------------------metamodels::WebApplications_AbstractModel.bgf--------------------
BusinessLogic ::= ε ;
DesignElement ::= ε ;
Integer ::= integer() ;
LogicInterface ::= ε ;
ClientPage ::= hyperlink::HyperLink ;
DesignTemplate ::= ε ;
Boolean ::= "true" | "false" ;
ClientPageModule ::= consistsOf::Client/ClientPage ;
HyperLink ::= (server::Server/ServerPage)+ ;
ServerPage ::= useBusinessLogic::Server/BusinessLogic useDesignTemplate::Server/DesignTemplate (generates::Client/ClientPage)+ (link::HyperLink)+ ;
String ::= string() ;
--------------------metamodels::WfMC.bgf--------------------
WorkflowProcessActivity ::= processDefinition::WorkflowProcessDefinition (applicationDeclarations::WorkflowApplicationDeclaration)+ (revelantDatas::WorkflowRelevantData)+ (participantSpecifications::WorkflowParticipantSpecification)+ to_transitionInformation::TransitionInformation from_transitionInformation::TransitionInformation ;
WorkflowParticipantSpecification ::= processDefinition::WorkflowProcessDefinition (revelantDatas::WorkflowRelevantData)+ (processActivities::WorkflowProcessActivity)+ ;
WorkflowApplicationDeclaration ::= processDefinition::WorkflowProcessDefinition (processActivities::WorkflowProcessActivity)+ (revelantDatas::WorkflowRelevantData)+ ;
TransitionInformation ::= processDefinition::WorkflowProcessDefinition (revelantDatas::WorkflowRelevantData)+ to_processActivity::WorkflowProcessActivity from_processActivity::WorkflowProcessActivity ;
WorkflowRelevantData ::= processDefinition::WorkflowProcessDefinition (applicationDeclarations::WorkflowApplicationDeclaration)+ (processActivities::WorkflowProcessActivity)+ (participantSpecifications::WorkflowParticipantSpecification)+ (transitionInformations::TransitionInformation)+ ;
WorkflowProcessDefinition ::= (participantSpecificatons::WorkflowParticipantSpecification)+ (revelantDatas::WorkflowRelevantData)+ (applicationDeclarations::WorkflowApplicationDeclaration)+ (processActivities::WorkflowProcessActivity)+ (transitionInformations::TransitionInformation)+ ;
String ::= string() ;
--------------------metamodels::WebApplications_ConceptualModel.bgf--------------------
ServerDecision ::= evaluatesResultOf::Server/Processor ;
Integer ::= integer() ;
LogicElement ::= (uses::Server/UseCase)+ generatedBy::Server/LogicElement next::Server/LogicElement ;
ServerPageModule ::= (contains::Server/ServerPage)+ link::Server/Link containsModule::Server/DesignModule ;
DesignElement ::= represents::Server/DesignModule ;
LogicInterface ::= represents::Server/LogicModule generatedBy::Server/Renderer ;
Link ::= page::Server/ServerPage posts::Server/Data ;
ClientPage ::= hyperlink::HyperLink ;
UseCase ::= (logicElem::Server/LogicElement)+ ;
Processor ::= (persistentData::Server/Data)+ (inputData::Server/Data)+ (outputData::Server/Data)+ ;
ServerPage ::= (link::HyperLink)+ (generates::Client/ClientPage)+ (module::Server/ServerPageModule)+ ;
String ::= string() ;
BeginUseCase ::= useCase::Server/UseCase ;
Alternative ::= ε ;
Data ::= (renderer::Server/Renderer)+ (persist::Server/Processor)+ (uses::Server/Processor)+ (computes::Server/Processor)+ ;
DesignModule ::= ε ;
LogicModule ::= (useCase::Server/UseCase)+ (logicElement::Server/LogicElement)+ ;
Boolean ::= "true" | "false" ;
UserDecision ::= (allows::Server/Alternative)+ ;
ClientPageModule ::= consistsOf::Client/ClientPage representsSMP::Server/ServerPageModule ;
HyperLink ::= (server::Server/ServerPage)+ ;
Renderer ::= (renders::Server/Data)+ ;
--------------------metamodels::WorkDefinitions.bgf--------------------
Activity ::= iteration::Iteration (steps::Step)+ ;
ProcessPerformer ::= Role ;
 ProcessPerformer ::= (features::WorkDefinition)+ ;
WorkProduct ::= responsible::Role ;
Iteration ::= phase::Phase (activities::Activity)+ ;
Step ::= ε ;
Phase ::= lifeCycle::Lifecycle (iterations::Iteration)+ ;
Lifecycle ::= (phases::Phase)+ ;
Boolean ::= "true" | "false" ;
Role ::= (products::WorkProduct)+ ;
WorkDefinition ::= Lifecycle ;
 WorkDefinition ::= Phase ;
 WorkDefinition ::= Iteration ;
 WorkDefinition ::= Activity ;
 WorkDefinition ::= (parentWorks::WorkDefinition)+ (subWorks::WorkDefinition)+ owner::ProcessPerformer ;
--------------------metamodels::XAML-Perspective.bgf--------------------
Page ::= (xmlns::NameSpace)+ title::String graphContainer::GraphicalContainer pageResources::PageResource ;
Integer ::= integer() ;
WinFXElement ::= Name ;
GraphicalContainer ::= Grid ;
PageResource ::= (dictionaries::ResourceDictionary)+ ;
Name ::= name::String ;
NameSpace ::= namespace::String identifier::String ;
Boolean ::= "true" | "false" ;
Grid ::= (object3D::Object3D)+ ;
ResourceDictionary ::= source::String ;
String ::= string() ;
PerspectiveElement ::= Workshop3D ;
 PerspectiveElement ::= XyzAxis3D ;
 PerspectiveElement ::= Box3D ;
 PerspectiveElement ::= Square3D ;
--------------------metamodels::XAML-ResourceDictionary.bgf--------------------
Key ::= name::String ;
Integer ::= integer() ;
WinFXElement ::= Key ;
NameSpace ::= namespace::String identifier::String ;
DiffuseMaterial ::= Brush::String ;
Transformation ::= TranslateTransform3D ;
 Transformation ::= ScaleTransform3D ;
 Transformation ::= RotateTransform3D ;
Boolean ::= "true" | "false" ;
MaterialGroup ::= (materials::Material)+ ;
Material ::= DiffuseMaterial ;
ResourceDictionary ::= (resourcegroups::ResourceGroup)+ (xmlns::NameSpace)+ ;
String ::= string() ;
ResourceGroup ::= Transform3DGroup ;
 ResourceGroup ::= MaterialGroup ;
 ResourceGroup ::= key::Key ;
--------------------metamodels::XMorphLanguage_abstractSyntax.bgf--------------------
NotTerm ::= (term::Term)+ ;
Key ::= (property::MOF::Property)+ transformation::Transformation ;
CoumpoundExpr ::= CollectionExpr ;
 CoumpoundExpr ::= FunctionExpr ;
 CoumpoundExpr ::= FeatureExpr ;
ExtentVar ::= src::Term ;
Condition ::= reason::String ;
Expression ::= VarUse ;
 Expression ::= CoumpoundExpr ;
 Expression ::= InstanceRef ;
 Expression ::= MOF::Object ;
 Expression ::= SimpleExpr ;
PatternUse ::= tRuleST::TRule (arg::Expression)+ ;
StringConstant ::= representation::String ;
String ::= string() ;
MofTerm ::= MofInstance ;
 MofTerm ::= MofOrder ;
TrackingUse ::= featureNames::String tracking::MOF::Class ;
TRule ::= (superseded::TRule)+ (superseder::TRule)+ transformation::Transformation (extended::TRule)+ (extender::TRule)+ term::Term (tgt::SimpleTerm)+ ;
FeatureExpr ::= collect::String featureName::String ;
Transformation ::= (keys::Key)+ (tRule::TRule)+ ;
Query ::= term::Term (parameter::PatternVar)+ ;
SimpleExpr ::= StringConstant ;
 SimpleExpr ::= IntConstant ;
 SimpleExpr ::= BooleanConstant ;
 SimpleExpr ::= EnumConstant ;
EnumConstant ::= representation::String ;
InstanceRef ::= obj::MOF::Object ;
SimpleTerm ::= TrackingUse ;
 SimpleTerm ::= PatternUse ;
 SimpleTerm ::= MofTerm ;
 SimpleTerm ::= Condition ;
MofInstance ::= isExactly::Boolean typeName::Expression instance::Expression ;
PatternDefn ::= scope::PatternScope (parameter::PatternVar)+ body::Term ;
CompoundTerm ::= AndTerm ;
 CompoundTerm ::= OrTerm ;
 CompoundTerm ::= NotTerm ;
 CompoundTerm ::= IfTerm ;
PatternVar ::= query::Query patternDefn::PatternDefn ;
TRuleVar ::= (superseder::TRuleVar)+ (superseded::TRuleVar)+ (extended::TRuleVar)+ (extender::TRuleVar)+ ;
IntConstant ::= representation::String ;
CollectionExpr ::= unique::Boolean ordered::Boolean ;
OrTerm ::= (term::Term)+ ;
FunctionExpr ::= function::String ;
VarScope ::= PatternScope ;
 VarScope ::= PatternDefn ;
 VarScope ::= TRule ;
BooleanConstant ::= representation::String ;
Term ::= CompoundTerm ;
 Term ::= SimpleTerm ;
MofOrder ::= lesser::Expression instance::Expression greater::Expression ;
IfTerm ::= (term::Term)+ ;
Boolean ::= "true" | "false" ;
AbstractVar ::= TRuleVar ;
 AbstractVar ::= PatternVar ;
 AbstractVar ::= ExtentVar ;
PatternScope ::= Transformation ;
 PatternScope ::= Query ;
AndTerm ::= (term::Term)+ ;
VarUse ::= var::AbstractVar ;
--------------------metamodels::XPDL-1.14.bgf--------------------
TaskReceive ::= instantiate::Boolean implementation::ImplementationKind ;
Event ::= StartEvent ;
 Event ::= IntermediateEvent ;
 Event ::= EndEvent ;
StartEvent ::= triggerKind::TriggerKind implementation::ImplementationKind trigger::Trigger ;
ReferencedApplication ::= externalReference::ExternalReference ;
ModeKind ::= (Automatic::ε) | (Manual::ε) ;
Transition ::= quantity::Integer object::Object to::Activity from::Activity ;
TriggerResultMessage ::= ε ;
Artifact ::= DataObject ;
 Artifact ::= Group ;
 Artifact ::= Annotation ;
 Artifact ::= textAnnotation::String group::String object::Object dataObject::DataObject ;
TriggerResultLink ::= processRef::Process ;
SubFlow ::= execution::ExecutionKind instanceDataField::String packageRef::Package startActivitySet::ActivitySet startActivity::Activity ;
ResultMultiple ::= ε ;
Script ::= type::String version::String grammar::String ;
TaskApplication ::= packageRef::Package ;
OrientationKind ::= (Horizontal::ε) | (Vertical::ε) ;
Association ::= associationDirection::AssociationDirectionKind targetArtifact::Artifact sourceArtifact::Artifact targetPool::Pool sourcePool::Pool targetActivity::Activity sourceActivity::Activity object::Object ;
TriggerIntermediateMultiple ::= ε ;
Object ::= (categories::Category)+ ;
Group ::= textAnnotation::String group::String object::Object dataObject::DataObject ;
ProcessTypeKind ::= (None::ε) | (Private::ε) | (Abstract::ε) | (Collaboration::ε) ;
Element ::= Package ;
 Element ::= MessageFlow ;
 Element ::= Association ;
 Element ::= Pool ;
 Element ::= Lane ;
 Element ::= Participant ;
 Element ::= Artifact ;
 Element ::= TypeDeclaration ;
 Element ::= Application ;
 Element ::= Activity ;
 Element ::= Process ;
 Element ::= Transition ;
 Element ::= ActivitySet ;
 Element ::= Object ;
 Element ::= ExternalPackage ;
 Element ::= Category ;
 Element ::= DataField ;
ExternalPackage ::= href::String ;
AssociationDirectionKind ::= (None::ε) | (To::ε) | (From::ε) | (Both::ε) ;
DataField ::= isArray::Boolean correlation::Boolean dataType::TypeDeclaration ;
TaskScript ::= script::Script ;
TaskService ::= implementation::ImplementationKind ;
Process ::= accessLevel::AccessLevelKind processType::ProcessTypeKind status::StatusKind suppressJoinFailure::Boolean enableInstanceCompensation::Boolean adHoc::Boolean adHocOrdering::AdHocOrderingKind adHocCompletionCondition::String (participant::Participant)+ (applications::Application)+ dataField::DataField (activitySets::ActivitySet)+ (activities::Activity)+ (transitions::Transition)+ object::Object defaultStartActivitySet::ActivitySet defaultStartActivity::Activity ;
Annotation ::= textAnnotation::String group::String object::Object dataObject::DataObject ;
TaskSend ::= implementation::ImplementationKind ;
TriggerKind ::= (None::ε) | (Message::ε) | (Timer::ε) | (Rule::ε) | (Link::ε) | (Error::ε) | (Cancel::ε) | (Compensation::ε) | (Terminate::ε) | (Multiple::ε) ;
ResultError ::= errorCode::String ;
TaskManual ::= ε ;
ParametrizedApplication ::= ε ;
TriggerMultiple ::= ε ;
StatusKind ::= (None::ε) | (Ready::ε) | (Active::ε) | (Cancelled::ε) | (Aborting::ε) | (Aborted::ε) | (Completing::ε) | (Completed::ε) ;
TypeDeclaration ::= id::String name::String ;
Pool ::= orientation::OrientationKind boundaryVisible::Boolean (lanes::Lane)+ object::Object participant::Participant process::Process ;
ResultCompensation ::= activity::Activity ;
MessageFlow ::= targetActivity::Activity sourceActivity::Activity targetPool::Pool sourcePool::Pool object::Object ;
TriggerRule ::= ruleName::String ;
ActivitySet ::= adHoc::Boolean adHocOrdering::AdHocOrderingKind adHocCompletionCondition::String defaultStartActivity::Activity (activities::Activity)+ (transitions::Transition)+ object::Object ;
GatewayTypeKind ::= (Xor::ε) | (Or::ε) | (Complex::ε) | (And::ε) ;
String ::= string() ;
Application ::= ParametrizedApplication ;
 Application ::= ReferencedApplication ;
 Application ::= ParametrizedApplication | ReferencedApplication ;
Activity ::= Task ;
 Activity ::= Route ;
 Activity ::= SubFlow ;
 Activity ::= BlockActivity ;
 Activity ::= Event ;
 Activity ::= isStartActivity::Boolean status::StatusKind startMode::ModeKind finishMode::ModeKind startQuantity::Integer isATransaction::Boolean (dataFields::DataField)+ object::Object ;
ExecutionKind ::= (Asynchr::ε) | (Synchr::ε) ;
Route ::= Gateway ;
 Route ::= gatewayType::GatewayTypeKind instantiate::Boolean markerVisiable::Boolean ;
DataObject ::= state::String requiredForStart::Boolean producedAtCompletion::Boolean (dataFields::DataField)+ ;
TaskReference ::= taskRef::Task ;
Package ::= script::Script (externalPackages::ExternalPackage)+ (typeDeclarations::TypeDeclaration)+ (participants::Participant)+ (applications::Application)+ (dataFields::DataField)+ (pools::Pool)+ (messageFlows::MessageFlow)+ (associations::Association)+ (artifacts::Artifact)+ (workflowProcesses::Process)+ ;
Task ::= TaskService ;
 Task ::= TaskReceive ;
 Task ::= TaskManual ;
 Task ::= TaskReference ;
 Task ::= TaskScript ;
 Task ::= TaskSend ;
 Task ::= TaskUser ;
 Task ::= TaskApplication ;
Gateway ::= gatewayType::GatewayTypeKind instantiate::Boolean markerVisiable::Boolean ;
AdHocOrderingKind ::= (Sequential::ε) | (Parallel::ε) ;
ExternalReference ::= xref::String location::String namespace::String ;
EndEvent ::= triggerKind::TriggerKind implementation::ImplementationKind trigger::Trigger ;
Category ::= id::String name::String ;
Integer ::= integer() ;
BlockActivity ::= activitySet::ActivitySet startActivity::Activity ;
Trigger ::= ResultCompensation ;
 Trigger ::= ResultError ;
 Trigger ::= ResultMultiple ;
 Trigger ::= TriggerResultLink ;
 Trigger ::= TriggerResultMessage ;
 Trigger ::= TriggerIntermediateMultiple ;
 Trigger ::= TriggerMultiple ;
 Trigger ::= TriggerRule ;
 Trigger ::= TriggerTimer ;
AccessLevelKind ::= (Public::ε) | (Private::ε) ;
Participant ::= id::String name::String ;
TaskUser ::= implementation::ImplementationKind ;
TriggerTimer ::= timeDate::String timeCycle::String ;
Lane ::= object::Object parentLane::Lane parentPool::Pool ;
Boolean ::= "true" | "false" ;
ImplementationKind ::= (WebService::ε) | (Other::ε) | (Unspecified::ε) ;
IntermediateEvent ::= target::Activity ;
--------------------metamodels::XUL-Interactorl.bgf--------------------
Integer ::= integer() ;
TextBox ::= multiline::Boolean value::String ;
MenuList ::= (menuitems::MenuItem)+ ;
Description ::= value::String ;
Radio ::= id::String label::String selected::Boolean disabled::Boolean ;
Image ::= src::String ;
Event ::= onClick ;
 Event ::= (functionCallParameters::Parameter)+ functionCalledName::String name::String ;
Interactor ::= Radio ;
 Interactor ::= ListItem ;
 Interactor ::= MenuItem ;
 Interactor ::= Containement ;
 Interactor ::= Container ;
 Interactor ::= flex::Integer id::String stat::String style::String (events::Event)+ ;
Function ::= name::String functionUIModel::UIModel body::String ;
HeaderCss ::= ref::String type::String ;
TabBox ::= (tabPanels::Interactor)+ ;
UIModel ::= windows::Windows (functions::Function)+ ;
Label ::= value::String control::String ;
MenuItem ::= label::String ;
Button ::= tooltiptext::String image::String ;
String ::= string() ;
ListItem ::= label::String value::String ;
TabPanel ::= id::String orient::Orients ;
Containement ::= Button ;
 Containement ::= Image ;
 Containement ::= RadioGroup ;
 Containement ::= ListBox ;
 Containement ::= MenuList ;
 Containement ::= TabBox ;
 Containement ::= TextBox ;
 Containement ::= Spacer ;
 Containement ::= Label ;
 Containement ::= Grid ;
 Containement ::= CheckBox ;
 Containement ::= Caption ;
 Containement ::= Description ;
 Containement ::= style::String accesskey::String class::String maxlength::Integer label::String orient::Orients minlength::String onclick::String disabled::String ;
Orients ::= (horizontal::ε) | (vertical::ε) ;
ListBox ::= rows::Integer (listitems::ListItem)+ ;
Spacer ::= style::String accesskey::String class::String maxlength::Integer label::String orient::Orients minlength::String onclick::String disabled::String ;
GroupBox ::= (xulInteractors::Interactor)+ ;
Parameter ::= value::String name::String ;
Boolean ::= "true" | "false" ;
HeaderJScript ::= ref::String ;
Caption ::= label::String ;
Grid ::= (columns::column)+ (rows::row)+ ;
RadioGroup ::= (radiobuttons::Radio)+ ;
CheckBox ::= checked::Boolean ;
Windows ::= id::String title::String orient::Orients style::String (headers::HeaderCss)+ (headersJScript::HeaderJScript)+ ;
Container ::= Windows ;
 Container ::= vbox ;
 Container ::= hbox ;
 Container ::= GroupBox ;
 Container ::= row ;
 Container ::= column ;
 Container ::= TabPanel ;
 Container ::= (xulInteractors::Interactor)+ ;
--------------------metamodels::bmmOmg.bgf--------------------
Influencer ::= Regulation ;
 Influencer ::= (categorizingInfluencerCategory::InfluencerCategory)+ (sourceInfluencingOrganization::InfluencingOrganization)+ (judgingAssessment::Assessment)+ (recognizingOrganizationUnit::OrganizationUnit)+ ;
BusinessRule ::= (effectingTactic::Tactic)+ (guidedBusinessProcess::BusinessProcess)+ (baseBusinessPolicy::BusinessPolicy)+ ;
FixedAsset ::= Offering ;
 FixedAsset ::= (usingOffering::Offering)+ (providedResource::Resource)+ ;
InfluencerCategory ::= (categorizedInfluencer::Influencer)+ ;
End ::= DesiredResult ;
 End ::= Vision ;
 End ::= (judgingAssessment::Assessment)+ (definingOrganizationUnit::OrganizationUnit)+ ;
Objective ::= (quantifiedGoal::Goal)+ ;
Tactic ::= (implementedStrategy::Strategy)+ (enforcedBusinessRule::BusinessRule)+ ;
DesiredResult ::= Goal ;
 DesiredResult ::= Objective ;
 DesiredResult ::= (moreSpecificDesiredResult::DesiredResult)+ (broaderDesiredResult::DesiredResult)+ (supportingDirective::Directive)+ (supportingCourseOfAction::CourseOfAction)+ ;
OrganizationUnit ::= (definedEnd::End)+ (managedBusinessProces::BusinessProcess)+ (managedLiability::Liability)+ (managedAsset::Asset)+ (determiningStrategy::Strategy)+ (recognizedInfluencer::Influencer)+ (internalInfluencingOrganization::InfluencingOrganization)+ (madeAssessment::Assessment)+ (establishedMeans::Means)+ ;
Goal ::= (quantifyingObjective::Objective)+ amplifiedVision::Vision ;
Strategy ::= (determinedOrganizationUnit::OrganizationUnit)+ (plannedMission::Mission)+ (implementingTactic::Tactic)+ ;
BusinessPolicy ::= (moreSpecificBusinessPolicy::BusinessPolicy)+ (broaderBusinessPolicy::BusinessPolicy)+ (derivedBusinessRule::BusinessRule)+ (governedBusinessProcess::BusinessProcess)+ ;
String ::= string() ;
OrganizationCategory ::= (categorizedInfluencingOrganization::InfluencingOrganization)+ ;
Asset ::= Resource ;
 Asset ::= FixedAsset ;
 Asset ::= Offering ;
 Asset ::= (deployingCourseOfAction::CourseOfAction)+ (governingDirective::Directive)+ (responsibleOrganizationUnit::OrganizationUnit)+ (managingBusinessProcess::BusinessProcess)+ ;
Risk ::= (identifyingAssessment::Assessment)+ (motivatedDirective::Directive)+ ;
BusinessProcess ::= (deliveredOffering::Offering)+ (realizedCourseOfAction::CourseOfAction)+ (managedAsset::Asset)+ (governingBusinessPolicy::BusinessPolicy)+ guidingBusinessRule::BusinessRule (responsibleOrganizationUnit::OrganizationUnit)+ ;
Directive ::= BusinessPolicy ;
 Directive ::= BusinessRule ;
 Directive ::= (supportedDesiredResult::DesiredResult)+ (governedCourseOfAction::CourseOfAction)+ (derivedCourseOfAction::CourseOfAction)+ (governedAsset::Asset)+ (motivatingPotentialImpact::PotentialImpact)+ (directiveRegulation::Regulation)+ (motivatingAssessment::Assessment)+ ;
Resource ::= (providingFixedAsset::FixedAsset)+ (requiringOffering::Offering)+ (claimingLiability::Liability)+ ;
Means ::= Directive ;
 Means ::= CourseOfAction ;
 Means ::= Mission ;
 Means ::= (establishingOrganizationUnit::OrganizationUnit)+ (judgingAssessment::Assessment)+ ;
PotentialReward ::= (identifyingAssessment::Assessment)+ (motivatedDirective::Directive)+ ;
Liability ::= (claimedResource::Resource)+ (responsibleOrganizationUnit::OrganizationUnit)+ (dischargingCourseOfAction::CourseOfAction)+ ;
Mission ::= operativeVision::Vision (componentStrategy::Strategy)+ ;
Regulation ::= regulatingDirective::Directive ;
Vision ::= (amplifyingGoal::Goal)+ (deliveringMission::Mission)+ ;
CourseOfAction ::= Tactic ;
 CourseOfAction ::= Strategy ;
 CourseOfAction ::= (enabledCourseOfAction::CourseOfAction)+ (enablingCourseOfAction::CourseOfAction)+ (moreSpecficCourseOfAction::CourseOfAction)+ (broaderCourseOfAction::CourseOfAction)+ (supportedDesiredResult::DesiredResult)+ (definedOffering::Offering)+ (dischargedLiability::Liability)+ realizingBusinessProcess::BusinessProcess (governingDirective::Directive)+ (baseDirective::Directive)+ (deployedAsset::Asset)+ ;
Offering ::= (definingCourseOfAction::CourseOfAction)+ (usedAsset::FixedAsset)+ (requiredResource::Resource)+ (deliveringBusinessProcess::BusinessProcess)+ ;
MotivationElement ::= Assessment ;
 MotivationElement ::= Means ;
 MotivationElement ::= OrganizationUnit ;
 MotivationElement ::= End ;
 MotivationElement ::= BusinessProcess ;
 MotivationElement ::= Asset ;
 MotivationElement ::= Liability ;
 MotivationElement ::= Influencer ;
 MotivationElement ::= InfluencerCategory ;
 MotivationElement ::= InfluencingOrganization ;
 MotivationElement ::= OrganizationCategory ;
 MotivationElement ::= PotentialImpact ;
 MotivationElement ::= AssessmentCategory ;
InfluencingOrganization ::= (categorizingOrganizationCategory::OrganizationCategory)+ influencingOrganizationUnit::OrganizationUnit (providedInfluencer::Influencer)+ ;
PotentialImpact ::= PotentialReward ;
 PotentialImpact ::= Risk ;
 PotentialImpact ::= (identifyingAssessment::Assessment)+ (motivatedDirective::Directive)+ ;
Assessment ::= (motivatedDirective::Directive)+ (affectedEnd::End)+ (judgedInfluencer::Influencer)+ assessingOrganizationUnit::OrganizationUnit (affectedMeans::Means)+ (identifiedPotentialImpact::PotentialImpact)+ (usedAssessment::Assessment)+ (usingAssessment::Assessment)+ (categorizingAssessmentCategory::AssessmentCategory)+ ;
AssessmentCategory ::= (categorizedAssessment::Assessment)+ ;
--------------------metamodels::cmt.owl.bgf--------------------
AssociatedChair ::= memberOfConference::Conference ;
Integer ::= integer() ;
PaperFullVersion ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Bid ::= adjustedBy::Reviewer ;
Conference ::= hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
Decision ::= Acceptance ;
 Decision ::= Rejection ;
 Decision ::= Acceptance | Rejection ;
Preference ::= ε ;
Document ::= Review ;
 Document ::= Paper ;
 Document ::= Review | Paper ;
SubjectArea ::= ε ;
ProgramCommittee ::= hasProgramCommitteeMember::ProgramCommitteeMember ;
Review ::= Meta-Review ;
 Review ::= writtenBy::Reviewer ;
Acceptance ::= ε ;
ConferenceMember ::= Reviewer ;
 ConferenceMember ::= ConferenceChair ;
 ConferenceMember ::= AssociatedChair ;
 ConferenceMember ::= Author ;
 ConferenceMember ::= ProgramCommitteeMember ;
 ConferenceMember ::= Chairman ;
 ConferenceMember ::= memberOfConference::Conference ;
Person ::= ConferenceMember ;
 Person ::= ExternalReviewer ;
 Person ::= User ;
 Person ::= ProgramCommitteeMember ;
 Person ::= Chairman ;
 Person ::= hasConflictOfInterest::Document email::String ;
Chairman ::= ConferenceChair ;
 Chairman ::= AssociatedChair ;
 Chairman ::= ProgramCommitteeChair ;
 Chairman ::= hasConflictOfInterest::Document email::String memberOfConference::Conference ;
ProgramCommitteeMember ::= ProgramCommitteeChair ;
 ProgramCommitteeMember ::= memberOfProgramCommittee::ProgramCommittee maxPapers::Integer addedBy::Administrator ;
String ::= string() ;
ExternalReviewer ::= assignedByReviewer::Reviewer ;
PaperAbstract ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Thing ::= Conference ;
Administrator ::= finalizePaperAssignment::Conference runPaperAssignmentTools::Conference enableVirtualMeeting::Conference startReviewerBidding::Conference assignReviewer::Reviewer rejectPaper::Paper enterConferenceDetails::Conference printHardcopyMailingManifests::Conference setMaxPapers::ProgramCommitteeMember enterReviewCriteria::Conference acceptPaper::Paper addProgramCommitteeMember::ProgramCommitteeMember ;
AuthorNotReviewer ::= submitPaper::Paper writePaper::Paper ;
Paper ::= PaperAbstract ;
 Paper ::= PaperFullVersion ;
 Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
ProgramCommitteeChair ::= endReview::Review ;
User ::= Administrator ;
 User ::= Reviewer ;
 User ::= Author ;
Author ::= AuthorNotReviewer ;
 Author ::= Co-author ;
 Author ::= submitPaper::Paper writePaper::Paper ;
Rejection ::= ε ;
ConferenceChair ::= memberOfConference::Conference ;
Boolean ::= "true" | "false" ;
Reviewer ::= Meta-Reviewer ;
 Reviewer ::= assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper writeReview::Review assignExternalReviewer::ExternalReviewer ;
--------------------metamodels::confOf.owl.bgf--------------------
Tutorial ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair hasTopic::Topic hasAdministrativeEvent::Administrative_event ;
Regular ::= earlyRegistration::Boolean ;
Email ::= Notification_Email ;
 Email ::= Group_Email ;
 Email ::= Approval_Email ;
 Email ::= Rejection_Email ;
 Email ::= Notification_Email | Group_Email | Approval_Email | Rejection_Email ;
Decision ::= Acceptance ;
 Decision ::= Rejection ;
 Decision ::= Acceptance | Rejection ;
Preference ::= ε ;
Event ::= Symposium ;
 Event ::= Social_event ;
 Event ::= Administrative_event ;
 Event ::= Working_event ;
 Event ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String ;
ProgramCommittee ::= hasProgramCommitteeMember::ProgramCommitteeMember ;
Review ::= Meta-Review ;
 Review ::= writtenBy::Reviewer reviews::Reviewed_contribution ;
Acceptance ::= ε ;
Country ::= ε ;
ConferenceMember ::= Reviewer ;
 ConferenceMember ::= ConferenceChair ;
 ConferenceMember ::= AssociatedChair ;
 ConferenceMember ::= Author ;
 ConferenceMember ::= ProgramCommitteeMember ;
 ConferenceMember ::= Chairman ;
 ConferenceMember ::= memberOfConference::Conference ;
Person ::= ConferenceMember ;
 Person ::= ExternalReviewer ;
 Person ::= User ;
 Person ::= Conference_participant ;
 Person ::= Conference_contributor ;
 Person ::= Committee_member ;
 Person ::= Conference_applicant ;
 Person ::= Track-workshop_chair ;
 Person ::= Scholar ;
 Person ::= Participant ;
 Person ::= Member_PC ;
 Person ::= Chair_PC ;
 Person ::= Science_Worker ;
 Person ::= Assistant ;
 Person ::= Volunteer ;
 Person ::= ProgramCommitteeMember ;
 Person ::= Chairman ;
 Person ::= Administrator ;
 Person ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String hasConflictOfInterest::Document email::String ;
ProgramCommitteeMember ::= ProgramCommitteeChair ;
 ProgramCommitteeMember ::= memberOfProgramCommittee::ProgramCommittee maxPapers::Integer addedBy::Administrator ;
Detail ::= ε ;
Request ::= Help_Request ;
Poster ::= is_submitted_at::Conference_volume ;
 Poster ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
Submission ::= recieved_by::User used_by::Person submited__by::User ;
Paper ::= PaperAbstract ;
 Paper ::= PaperFullVersion ;
 Paper ::= Abstract ;
 Paper ::= Invited_Paper ;
 Paper ::= Short_Paper ;
 Paper ::= Full_Paper ;
 Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
User ::= Committee ;
 User ::= Administrator ;
 User ::= recieve::Document (create::Thing)+ submit::Document ;
Volunteer ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String hasConflictOfInterest::Document email::String ;
Rejection ::= ε ;
ConferenceChair ::= memberOfConference::Conference ;
EEnum ::= (high::ε) | (medium::ε) | (low::ε) | (very high::ε) | (male::ε) | (female::ε) ;
Company ::= ε ;
Committee ::= Program_committee ;
 Committee ::= Organizing_committee ;
 Committee ::= Steering_committee ;
 Committee ::= has_members::Committee_member was_a_committee_of::Conference_volume has_a_committee_co-chair::Co-chair has_a_committee_chair::Chair ;
Bid ::= adjustedBy::Reviewer ;
Publisher ::= issues::Conference_proceedings ;
Description ::= ε ;
Registration ::= (has_result::Thing)+ sent_by::Person ;
Assistance ::= ε ;
Symposium ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String ;
Organization ::= Company ;
 Organization ::= University ;
 Organization ::= Company | University ;
URL ::= Event_URL ;
 URL ::= Senior_Reviewer_URL ;
 URL ::= Chair_URL ;
 URL ::= Contact_Person_URL ;
 URL ::= Regular_Reviewer_URL ;
 URL ::= Event_URL | Senior_Reviewer_URL | Chair_URL | Contact_Person_URL | Regular_Reviewer_URL ;
Thing ::= Person ;
 Thing ::= Event ;
 Thing ::= Role ;
 Thing ::= Document ;
 Thing ::= Detail ;
 Thing ::= Review_expertise ;
 Thing ::= Organizer ;
 Thing ::= Review_preference ;
 Thing ::= date ;
 Thing ::= conference ;
 Thing ::= URL ;
 Thing ::= conference_setup ;
 Thing ::= Contribution ;
 Thing ::= Conference ;
 Thing ::= Person | Event | Role | Document | Detail | Review_expertise | Organizer | Review_preference | date | conference | URL | conference_setup | Contribution ;
AuthorNotReviewer ::= writes::Contribution submitPaper::Paper writePaper::Paper ;
ProgramCommitteeChair ::= endReview::Review ;
Scholar ::= studyAt::University ;
Trip ::= ε ;
Banquet ::= ε ;
Abstract ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
 Abstract ::= (is_the_1th_part_of::Thing)+ ;
AssociatedChair ::= memberOfConference::Conference ;
Assistant ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String hasConflictOfInterest::Document email::String ;
PaperFullVersion ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Conference ::= Conference_volume ;
 Conference ::= hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
Document ::= Email ;
 Document ::= Submission ;
 Document ::= Template ;
 Document ::= Paper ;
 Document ::= Review ;
 Document ::= recieved_by::User used_by::Person submited__by::User ;
Member ::= earlyRegistration::Boolean ;
Presentation ::= Invited_talk ;
 Presentation ::= is_given_by::Active_conference_participant ;
SubjectArea ::= ε ;
String ::= string() ;
Contribution ::= Poster ;
 Contribution ::= Short_paper ;
 Contribution ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
Activity ::= Event_Creation ;
 Activity ::= Request ;
 Activity ::= Event_Approval ;
 Activity ::= Registration ;
 Activity ::= (has_result::Thing)+ sent_by::Person ;
Reception ::= ε ;
University ::= ε ;
PaperAbstract ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Administrator ::= approve::Event assign::Role finalizePaperAssignment::Conference runPaperAssignmentTools::Conference enableVirtualMeeting::Conference startReviewerBidding::Conference assignReviewer::Reviewer rejectPaper::Paper enterConferenceDetails::Conference printHardcopyMailingManifests::Conference setMaxPapers::ProgramCommitteeMember enterReviewCriteria::Conference acceptPaper::Paper addProgramCommitteeMember::ProgramCommitteeMember ;
Track ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Author ::= AuthorNotReviewer ;
 Author ::= Co-author ;
 Author ::= Corresponding_Author ;
 Author ::= writes::Contribution submitPaper::Paper writePaper::Paper ;
Preview ::= ε ;
Workshop ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Chair ::= was_a_committee_chair_of::Committee ;
Reviewer ::= Meta-Reviewer ;
 Reviewer ::= invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper writeReview::Review assignExternalReviewer::ExternalReviewer ;
Inforamtion ::= ε ;
Integer ::= integer() ;
Student ::= earlyRegistration::Boolean ;
Template ::= recieved_by::User used_by::Person submited__by::User ;
Role ::= Admin_Role ;
 Role ::= Author_Role ;
 Role ::= Committe_Role ;
 Role ::= Head_Role ;
 Role ::= Reviewer_Role ;
 Role ::= assigned_by::Administrator ;
Chairman ::= ConferenceChair ;
 Chairman ::= AssociatedChair ;
 Chairman ::= ProgramCommitteeChair ;
 Chairman ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String hasConflictOfInterest::Document email::String memberOfConference::Conference ;
Participant ::= Member ;
 Participant ::= Student ;
 Participant ::= Regular ;
 Participant ::= earlyRegistration::Boolean ;
ExternalReviewer ::= assignedByReviewer::Reviewer ;
Organizer ::= ε ;
Topic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
Account ::= registred_by::Person ;
Misc ::= ε ;
City ::= ε ;
Boolean ::= "true" | "false" ;
--------------------metamodels::confious.owl.bgf--------------------
AssociatedChair ::= memberOfConference::Conference ;
Tutorial ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
PaperFullVersion ::= full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Email ::= Notification_Email ;
 Email ::= Group_Email ;
 Email ::= Approval_Email ;
 Email ::= Rejection_Email ;
 Email ::= Notification_Email | Group_Email | Approval_Email | Rejection_Email ;
Conference ::= Conference_volume ;
 Conference ::= is_in_phase::phase_of_conference hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
Decision ::= Acceptance ;
 Decision ::= Rejection ;
 Decision ::= Acceptance | Rejection ;
Document ::= Email ;
 Document ::= Submission ;
 Document ::= Template ;
 Document ::= Review ;
 Document ::= Paper ;
 Document ::= recieved_by::User used_by::Person submited__by::User ;
Preference ::= ε ;
Presentation ::= Invited_talk ;
 Presentation ::= is_given_by::Active_conference_participant ;
Event ::= Symposium ;
 Event ::= Conference ;
 Event ::= Workshop ;
 Event ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator ;
SubjectArea ::= ε ;
ProgramCommittee ::= hasProgramCommitteeMember::ProgramCommitteeMember ;
Review ::= Meta-Review ;
 Review ::= reviews::Reviewed_contribution gives_classification::classification is_created_in::activity writtenBy::Reviewer ;
Acceptance ::= ε ;
ConferenceMember ::= Reviewer ;
 ConferenceMember ::= ConferenceChair ;
 ConferenceMember ::= AssociatedChair ;
 ConferenceMember ::= Author ;
 ConferenceMember ::= ProgramCommitteeMember ;
 ConferenceMember ::= Chairman ;
 ConferenceMember ::= memberOfConference::Conference ;
Person ::= ConferenceMember ;
 Person ::= ExternalReviewer ;
 Person ::= User ;
 Person ::= Conference_participant ;
 Person ::= Conference_contributor ;
 Person ::= Committee_member ;
 Person ::= Conference_applicant ;
 Person ::= Track-workshop_chair ;
 Person ::= ProgramCommitteeMember ;
 Person ::= Chairman ;
 Person ::= Administrator ;
 Person ::= hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
ProgramCommitteeMember ::= ProgramCommitteeChair ;
 ProgramCommitteeMember ::= memberOfProgramCommittee::ProgramCommittee maxPapers::Integer addedBy::Administrator ;
String ::= string() ;
Detail ::= ε ;
Activity ::= Event_Creation ;
 Activity ::= Request ;
 Activity ::= Event_Approval ;
 Activity ::= Registration ;
 Activity ::= (has_result::Thing)+ sent_by::Person ;
Request ::= Help_Request ;
PaperAbstract ::= full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Poster ::= is_submitted_at::Conference_volume ;
Administrator ::= approve::Event assign::Role finalizePaperAssignment::Conference runPaperAssignmentTools::Conference enableVirtualMeeting::Conference startReviewerBidding::Conference assignReviewer::Reviewer rejectPaper::Paper enterConferenceDetails::Conference printHardcopyMailingManifests::Conference setMaxPapers::ProgramCommitteeMember enterReviewCriteria::Conference acceptPaper::Paper addProgramCommitteeMember::ProgramCommitteeMember ;
Submission ::= recieved_by::User used_by::Person submited__by::User ;
Paper ::= PaperAbstract ;
 Paper ::= PaperFullVersion ;
 Paper ::= Abstract ;
 Paper ::= Invited_Paper ;
 Paper ::= Short_Paper ;
 Paper ::= Full_Paper ;
 Paper ::= Accepted_Paper ;
 Paper ::= Rejected_Paper ;
 Paper ::= Undecided_Paper ;
 Paper ::= full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Track ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
User ::= Committee ;
 User ::= Administrator ;
 User ::= Author ;
 User ::= recieve::Document (create::Thing)+ submit::Document ;
Author ::= AuthorNotReviewer ;
 Author ::= Co-author ;
 Author ::= Corresponding_Author ;
 Author ::= submitPaper::Paper writePaper::Paper ;
Rejection ::= ε ;
ConferenceChair ::= memberOfConference::Conference ;
Preview ::= ε ;
Workshop ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator ;
EEnum ::= (high::ε) | (medium::ε) | (low::ε) | (very high::ε) | (male::ε) | (female::ε) ;
Chair ::= was_a_committee_chair_of::Committee ;
Reviewer ::= Meta-Reviewer ;
 Reviewer ::= invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper writeReview::Review assignExternalReviewer::ExternalReviewer ;
Inforamtion ::= ε ;
Integer ::= integer() ;
Committee ::= Program_committee ;
 Committee ::= Organizing_committee ;
 Committee ::= Steering_committee ;
 Committee ::= has_members::Committee_member was_a_committee_of::Conference_volume has_a_committee_co-chair::Co-chair has_a_committee_chair::Chair ;
Bid ::= adjustedBy::Reviewer ;
Publisher ::= issues::Conference_proceedings ;
Description ::= ε ;
Template ::= recieved_by::User used_by::Person submited__by::User ;
Registration ::= (has_result::Thing)+ sent_by::Person ;
Assistance ::= ε ;
Role ::= Admin_Role ;
 Role ::= Author_Role ;
 Role ::= Committe_Role ;
 Role ::= Head_Role ;
 Role ::= Reviewer_Role ;
 Role ::= assigned_by::Administrator ;
Chairman ::= ConferenceChair ;
 Chairman ::= AssociatedChair ;
 Chairman ::= ProgramCommitteeChair ;
 Chairman ::= hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String memberOfConference::Conference ;
Symposium ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator ;
Organization ::= ε ;
ExternalReviewer ::= assignedByReviewer::Reviewer ;
URL ::= Event_URL ;
 URL ::= Senior_Reviewer_URL ;
 URL ::= Chair_URL ;
 URL ::= Contact_Person_URL ;
 URL ::= Regular_Reviewer_URL ;
 URL ::= Event_URL | Senior_Reviewer_URL | Chair_URL | Contact_Person_URL | Regular_Reviewer_URL ;
Organizer ::= ε ;
Topic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
Thing ::= Event ;
 Thing ::= Role ;
 Thing ::= Person ;
 Thing ::= Document ;
 Thing ::= Detail ;
 Thing ::= Review_expertise ;
 Thing ::= Organizer ;
 Thing ::= Review_preference ;
 Thing ::= date ;
 Thing ::= URL ;
 Thing ::= conference_setup ;
 Thing ::= Conference ;
 Thing ::= Event | Role | Person | Document | Detail | Review_expertise | Organizer | Review_preference | date | URL | conference_setup ;
Account ::= registred_by::Person ;
AuthorNotReviewer ::= submitPaper::Paper writePaper::Paper ;
Misc ::= ε ;
ProgramCommitteeChair ::= endReview::Review ;
Boolean ::= "true" | "false" ;
Abstract ::= full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
 Abstract ::= (is_the_1th_part_of::Thing)+ ;
--------------------metamodels::crs_dr.owl.bgf--------------------
Tutorial ::= hasTopic::Topic hasAdministrativeEvent::Administrative_event has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Regular ::= earlyRegistration::Boolean ;
Email ::= Notification_Email ;
 Email ::= Group_Email ;
 Email ::= Approval_Email ;
 Email ::= Rejection_Email ;
 Email ::= Notification_Email | Group_Email | Approval_Email | Rejection_Email ;
Decision ::= Acceptance ;
 Decision ::= Rejection ;
 Decision ::= Acceptance | Rejection ;
Preference ::= ε ;
Event ::= Symposium ;
 Event ::= Social_event ;
 Event ::= Administrative_event ;
 Event ::= Working_event ;
 Event ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String ;
ProgramCommittee ::= hasProgramCommitteeMember::ProgramCommitteeMember ;
Review ::= Meta-Review ;
 Review ::= reviews::Reviewed_contribution writtenBy::Reviewer ;
Acceptance ::= ε ;
Country ::= ε ;
ConferenceMember ::= Reviewer ;
 ConferenceMember ::= ConferenceChair ;
 ConferenceMember ::= AssociatedChair ;
 ConferenceMember ::= Author ;
 ConferenceMember ::= ProgramCommitteeMember ;
 ConferenceMember ::= Chairman ;
 ConferenceMember ::= memberOfConference::Conference ;
Person ::= ConferenceMember ;
 Person ::= ExternalReviewer ;
 Person ::= User ;
 Person ::= Conference_participant ;
 Person ::= Conference_contributor ;
 Person ::= Committee_member ;
 Person ::= Conference_applicant ;
 Person ::= Track-workshop_chair ;
 Person ::= Scholar ;
 Person ::= Participant ;
 Person ::= Member_PC ;
 Person ::= Chair_PC ;
 Person ::= Science_Worker ;
 Person ::= Assistant ;
 Person ::= Volunteer ;
 Person ::= ProgramCommitteeMember ;
 Person ::= Chairman ;
 Person ::= Administrator ;
 Person ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String hasConflictOfInterest::Document email::String ;
ProgramCommitteeMember ::= ProgramCommitteeChair ;
 ProgramCommitteeMember ::= memberOfProgramCommittee::ProgramCommittee maxPapers::Integer addedBy::Administrator ;
Detail ::= ε ;
Request ::= Help_Request ;
Poster ::= is_submitted_at::Conference_volume ;
 Poster ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
Submission ::= recieved_by::User used_by::Person submited__by::User ;
Paper ::= PaperAbstract ;
 Paper ::= PaperFullVersion ;
 Paper ::= Abstract ;
 Paper ::= Invited_Paper ;
 Paper ::= Short_Paper ;
 Paper ::= Full_Paper ;
 Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
User ::= Committee ;
 User ::= Administrator ;
 User ::= recieve::Document (create::Thing)+ submit::Document ;
Volunteer ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String hasConflictOfInterest::Document email::String ;
Rejection ::= ε ;
ConferenceChair ::= memberOfConference::Conference ;
EEnum ::= (high::ε) | (medium::ε) | (low::ε) | (very high::ε) | (male::ε) | (female::ε) ;
Company ::= ε ;
Committee ::= Program_committee ;
 Committee ::= Organizing_committee ;
 Committee ::= Steering_committee ;
 Committee ::= has_members::Committee_member was_a_committee_of::Conference_volume has_a_committee_co-chair::Co-chair has_a_committee_chair::Chair ;
Bid ::= adjustedBy::Reviewer ;
Publisher ::= issues::Conference_proceedings ;
Description ::= ε ;
Registration ::= (has_result::Thing)+ sent_by::Person ;
Assistance ::= ε ;
Symposium ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String ;
Organization ::= Company ;
 Organization ::= University ;
 Organization ::= Company | University ;
URL ::= Event_URL ;
 URL ::= Senior_Reviewer_URL ;
 URL ::= Chair_URL ;
 URL ::= Contact_Person_URL ;
 URL ::= Regular_Reviewer_URL ;
 URL ::= Event_URL | Senior_Reviewer_URL | Chair_URL | Contact_Person_URL | Regular_Reviewer_URL ;
Thing ::= Person ;
 Thing ::= Event ;
 Thing ::= Role ;
 Thing ::= Document ;
 Thing ::= URL ;
 Thing ::= Detail ;
 Thing ::= Review_expertise ;
 Thing ::= Organizer ;
 Thing ::= Review_preference ;
 Thing ::= date ;
 Thing ::= conference_setup ;
 Thing ::= Contribution ;
 Thing ::= Conference ;
 Thing ::= conference ;
 Thing ::= Person | Event | Role | Document | URL | Detail | Review_expertise | Organizer | Review_preference | date | conference_setup | Contribution ;
AuthorNotReviewer ::= writes::Contribution submitPaper::Paper writePaper::Paper ;
ProgramCommitteeChair ::= endReview::Review ;
Scholar ::= studyAt::University ;
Trip ::= ε ;
Banquet ::= ε ;
Abstract ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
 Abstract ::= (is_the_1th_part_of::Thing)+ ;
AssociatedChair ::= memberOfConference::Conference ;
Assistant ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String hasConflictOfInterest::Document email::String ;
PaperFullVersion ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Conference ::= Conference_volume ;
 Conference ::= hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
Document ::= Email ;
 Document ::= Submission ;
 Document ::= Template ;
 Document ::= Review ;
 Document ::= recieved_by::User used_by::Person submited__by::User ;
Member ::= earlyRegistration::Boolean ;
Presentation ::= Invited_talk ;
 Presentation ::= is_given_by::Active_conference_participant ;
SubjectArea ::= ε ;
String ::= string() ;
Contribution ::= Poster ;
 Contribution ::= Short_paper ;
 Contribution ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
Activity ::= Event_Creation ;
 Activity ::= Request ;
 Activity ::= Event_Approval ;
 Activity ::= Registration ;
 Activity ::= (has_result::Thing)+ sent_by::Person ;
Reception ::= ε ;
University ::= ε ;
PaperAbstract ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Administrator ::= approve::Event assign::Role finalizePaperAssignment::Conference runPaperAssignmentTools::Conference enableVirtualMeeting::Conference startReviewerBidding::Conference assignReviewer::Reviewer rejectPaper::Paper enterConferenceDetails::Conference printHardcopyMailingManifests::Conference setMaxPapers::ProgramCommitteeMember enterReviewCriteria::Conference acceptPaper::Paper addProgramCommitteeMember::ProgramCommitteeMember ;
Track ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Author ::= AuthorNotReviewer ;
 Author ::= Co-author ;
 Author ::= Corresponding_Author ;
 Author ::= writes::Contribution submitPaper::Paper writePaper::Paper ;
Preview ::= ε ;
Workshop ::= hasTopic::Topic hasAdministrativeEvent::Administrative_event ;
Chair ::= was_a_committee_chair_of::Committee ;
Reviewer ::= Meta-Reviewer ;
 Reviewer ::= invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper writeReview::Review assignExternalReviewer::ExternalReviewer ;
Inforamtion ::= ε ;
Integer ::= integer() ;
Student ::= earlyRegistration::Boolean ;
Template ::= recieved_by::User used_by::Person submited__by::User ;
Role ::= Admin_Role ;
 Role ::= Author_Role ;
 Role ::= Committe_Role ;
 Role ::= Head_Role ;
 Role ::= Reviewer_Role ;
 Role ::= assigned_by::Administrator ;
Chairman ::= ConferenceChair ;
 Chairman ::= AssociatedChair ;
 Chairman ::= ProgramCommitteeChair ;
 Chairman ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String hasConflictOfInterest::Document email::String memberOfConference::Conference ;
Participant ::= Member ;
 Participant ::= Student ;
 Participant ::= Regular ;
 Participant ::= earlyRegistration::Boolean ;
ExternalReviewer ::= assignedByReviewer::Reviewer ;
Topic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
Organizer ::= ε ;
Account ::= registred_by::Person ;
Misc ::= ε ;
City ::= ε ;
Boolean ::= "true" | "false" ;
--------------------metamodels::deployment.bgf--------------------
ExecutionEnvironment ::= (nestedNode::Node)+ name::String ;
Device ::= (nestedNode::Node)+ name::String ;
Specification ::= (ownedNode::Node)+ (ownedCommunicationLink::CommunicationLink)+ ;
Node ::= Device ;
 Node ::= ExecutionEnvironment ;
String ::= string() ;
CommunicationLink ::= source::Node target::Node name::String ;
--------------------metamodels::edas.owl.bgf--------------------
PerformanceTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Programme ::= belongsToEvent::ConferenceEvent ;
Decision ::= Acceptance ;
 Decision ::= Rejection ;
 Decision ::= Acceptance | Rejection ;
BreakEvent ::= CoffeeBreak ;
 BreakEvent ::= FreeTimeBreak ;
 BreakEvent ::= MealBreak ;
 BreakEvent ::= CoffeeBreak | FreeTimeBreak | MealBreak ;
Preference ::= ε ;
AcademiaOrganization ::= isProviderOf::Sponsorship ;
RadioCommunicationsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
ConferenceMember ::= Reviewer ;
 ConferenceMember ::= ConferenceChair ;
 ConferenceMember ::= AssociatedChair ;
 ConferenceMember ::= ProgramCommitteeMember ;
 ConferenceMember ::= Chairman ;
 ConferenceMember ::= memberOfConference::Conference ;
AccommodationPlace ::= isLocationOf::ConferenceEvent ;
MedicineTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
TwoLevelConference ::= is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
SignalProcessingTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
SessionChair ::= hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
RatedPapers ::= hasRating::ReviewRating ;
User ::= Committee ;
 User ::= Administrator ;
 User ::= recieve::Document (create::Thing)+ submit::Document ;
ConferenceChair ::= memberOfConference::Conference ;
 ConferenceChair ::= hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
Rejection ::= ε ;
Place ::= DiningPlace ;
 Place ::= ConferenceVenuePlace ;
 Place ::= MeetingRoomPlace ;
 Place ::= AccommodationPlace ;
 Place ::= isLocationOf::ConferenceEvent ;
EEnum ::= (male::ε) | (female::ε) | (high::ε) | (medium::ε) | (low::ε) | (very high::ε) ;
AcceptRating ::= ε ;
GovernmentOrganization ::= isProviderOf::Sponsorship ;
CallForManuscripts ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
MealMenu ::= isMenuOf::MealEvent ;
ClosingTalk ::= ε ;
Bid ::= adjustedBy::Reviewer ;
MealBreak ::= ε ;
Publisher ::= issues::Conference_proceedings ;
Description ::= ε ;
Attendee ::= hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
Registration ::= (has_result::Thing)+ sent_by::Person ;
OperatingTopicsystems ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
ConferenceDinner ::= hasMenu::MealMenu ;
ComputerNetworksEnterpriseTopic ::= ε ;
Thing ::= Event ;
 Thing ::= Role ;
 Thing ::= Person ;
 Thing ::= Document ;
 Thing ::= Detail ;
 Thing ::= Review_expertise ;
 Thing ::= Organizer ;
 Thing ::= Review_preference ;
 Thing ::= date ;
 Thing ::= URL ;
 Thing ::= conference_setup ;
 Thing ::= Contribution ;
 Thing ::= Event | Role | Person | Document | Detail | Review_expertise | Organizer | Review_preference | date | URL | conference_setup | Contribution ;
ProgramCommitteeChair ::= endReview::Review ;
SatelliteAndSpaceCommunicationsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Scholar ::= studyAt::University ;
Excursion ::= ε ;
TPCMember ::= hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
ConferenceEvent ::= NonAcademicEvent ;
 ConferenceEvent ::= AcademicEvent ;
 ConferenceEvent ::= hasAttendee::Person hasLocation::Place hasProgramme::Programme hasEndDateTime::dateTime hasStartDateTime::dateTime ;
Assistant ::= hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
MobileComputingTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
ConferenceSession ::= ε ;
Member ::= earlyRegistration::Boolean ;
SubjectArea ::= ε ;
ComputerNetworksMeasurementsTopic ::= ε ;
NGO ::= isProviderOf::Sponsorship ;
CommunicationTheoryTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
AcademicEvent ::= TalkEvent ;
 AcademicEvent ::= OrganizationalMeeting ;
 AcademicEvent ::= PaperPresentation ;
 AcademicEvent ::= hasCall::Call ;
CallForPapers ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
CommunicationsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
ComputerNetworksTopic ::= ComputerNetworksEnterpriseTopic ;
 ComputerNetworksTopic ::= ComputerNetworksSwitchingTopic ;
 ComputerNetworksTopic ::= ComputerNetworksSensorTopic ;
 ComputerNetworksTopic ::= ComputerNetworksSecurityTopic ;
 ComputerNetworksTopic ::= ComputerNetworksOpticalTopic ;
 ComputerNetworksTopic ::= ComputerNetworksMeasurementsTopic ;
 ComputerNetworksTopic ::= ComputerNetworksManagementTopic ;
 ComputerNetworksTopic ::= ComputerNetworksAapplicationsTopic ;
 ComputerNetworksTopic ::= ComputerNetworksEnterpriseTopic | ComputerNetworksSwitchingTopic | ComputerNetworksSensorTopic | ComputerNetworksSecurityTopic | ComputerNetworksOpticalTopic | ComputerNetworksMeasurementsTopic | ComputerNetworksManagementTopic | ComputerNetworksAapplicationsTopic ;
SecurityTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Reception ::= ε ;
DiningPlace ::= isLocationOf::ConferenceEvent ;
University ::= isProviderOf::Sponsorship ;
PaperAbstract ::= isWrittenBy::Author (isReviewedBy::Person)+ full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Administrator ::= approve::Event assign::Role finalizePaperAssignment::Conference runPaperAssignmentTools::Conference enableVirtualMeeting::Conference startReviewerBidding::Conference assignReviewer::Reviewer rejectPaper::Paper enterConferenceDetails::Conference printHardcopyMailingManifests::Conference setMaxPapers::ProgramCommitteeMember enterReviewCriteria::Conference acceptPaper::Paper addProgramCommitteeMember::ProgramCommitteeMember ;
Author ::= AuthorNotReviewer ;
 Author ::= Co-author ;
 Author ::= Corresponding_Author ;
 Author ::= Presenter ;
 Author ::= submitPaper::Paper writePaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper ;
Preview ::= ε ;
Workshop ::= hasTopic::Topic hasAdministrativeEvent::Administrative_event ;
PaperPresentation ::= relatedToPaper::AcceptedPaper ;
Chair ::= was_a_committee_chair_of::Committee ;
Inforamtion ::= ε ;
ComputerArchitectureTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
AntennasTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
OrganizationalMeeting ::= hasCall::Call ;
PersonalReviewHistory ::= isReviewHistoryOf::Reviewer ;
MicroelectronicsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Template ::= (relatesTo::Thing)+ recieved_by::User used_by::Person submited__by::User ;
ComputerNetworksOpticalTopic ::= ε ;
Role ::= Admin_Role ;
 Role ::= Author_Role ;
 Role ::= Committe_Role ;
 Role ::= Head_Role ;
 Role ::= Reviewer_Role ;
 Role ::= assigned_by::Administrator ;
Chairman ::= ConferenceChair ;
 Chairman ::= AssociatedChair ;
 Chairman ::= ProgramCommitteeChair ;
 Chairman ::= hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String memberOfConference::Conference ;
AccpetIfRoomRating ::= ε ;
RejectedPaper ::= isWrittenBy::Author (isReviewedBy::Person)+ full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
ParallelAndDistributedComputingTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
City ::= ε ;
Presenter ::= submitPaper::Paper writePaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper ;
MultimediaTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
CryptographyTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
ReviewQuestion ::= TextualReviewQuestion ;
 ReviewQuestion ::= NumericalReviewQuestion ;
 ReviewQuestion ::= TextualReviewQuestion | NumericalReviewQuestion ;
Call ::= CallForPapers ;
 Call ::= CallForReviews ;
 Call ::= CallForManuscripts ;
 Call ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
Tutorial ::= hasTopic::Topic hasAdministrativeEvent::Administrative_event has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Email ::= Notification_Email ;
 Email ::= Group_Email ;
 Email ::= Approval_Email ;
 Email ::= Rejection_Email ;
 Email ::= Notification_Email | Group_Email | Approval_Email | Rejection_Email ;
Regular ::= earlyRegistration::Boolean ;
Event ::= Symposium ;
 Event ::= Social_event ;
 Event ::= Administrative_event ;
 Event ::= Working_event ;
 Event ::= pc_meeting ;
 Event ::= session ;
 Event ::= Conference ;
 Event ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime ;
ProgramCommittee ::= hasProgramCommitteeMember::ProgramCommitteeMember ;
Review ::= Meta-Review ;
 Review ::= writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::activity review_written_by::Reviewer ;
MealEvent ::= ConferenceDinner ;
 MealEvent ::= hasMenu::MealMenu ;
Acceptance ::= ε ;
Country ::= ε ;
Person ::= ConferenceMember ;
 Person ::= ExternalReviewer ;
 Person ::= User ;
 Person ::= Conference_participant ;
 Person ::= Conference_contributor ;
 Person ::= Committee_member ;
 Person ::= Conference_applicant ;
 Person ::= Track-workshop_chair ;
 Person ::= Scholar ;
 Person ::= Participant ;
 Person ::= Member_PC ;
 Person ::= Chair_PC ;
 Person ::= Science_Worker ;
 Person ::= Assistant ;
 Person ::= Volunteer ;
 Person ::= chair ;
 Person ::= participant ;
 Person ::= ConferenceChair ;
 Person ::= Attendee ;
 Person ::= SessionChair ;
 Person ::= TPCMember ;
 Person ::= ProgramCommitteeMember ;
 Person ::= Chairman ;
 Person ::= Author ;
 Person ::= Administrator ;
 Person ::= hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
CoffeeBreak ::= ε ;
ProgramCommitteeMember ::= ProgramCommitteeChair ;
 ProgramCommitteeMember ::= memberOfProgramCommittee::ProgramCommittee maxPapers::Integer addedBy::Administrator ;
Detail ::= ε ;
Request ::= Help_Request ;
Poster ::= is_submitted_at::Conference_volume ;
 Poster ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
Submission ::= (relatesTo::Thing)+ recieved_by::User used_by::Person submited__by::User ;
Paper ::= PaperAbstract ;
 Paper ::= PaperFullVersion ;
 Paper ::= Abstract ;
 Paper ::= Invited_Paper ;
 Paper ::= Short_Paper ;
 Paper ::= Full_Paper ;
 Paper ::= Accepted_Paper ;
 Paper ::= Rejected_Paper ;
 Paper ::= Undecided_Paper ;
 Paper ::= ActivePaper ;
 Paper ::= PendingPaper ;
 Paper ::= WithdrawnPaper ;
 Paper ::= RejectedPaper ;
 Paper ::= AcceptedPaper ;
 Paper ::= PublishedPaper ;
 Paper ::= isWrittenBy::Author (isReviewedBy::Person)+ full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Volunteer ::= hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
WithdrawnPaper ::= isWrittenBy::Author (isReviewedBy::Person)+ full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
PublishedPaper ::= isWrittenBy::Author (isReviewedBy::Person)+ full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Committee ::= Program_committee ;
 Committee ::= Organizing_committee ;
 Committee ::= Steering_committee ;
 Committee ::= has_members::Committee_member was_a_committee_of::Conference_volume has_a_committee_co-chair::Co-chair has_a_committee_chair::Chair ;
Company ::= isProviderOf::Sponsorship ;
ReviewForm ::= ε ;
Assistance ::= ε ;
NumericalReviewQuestion ::= ε ;
PendingPaper ::= isWrittenBy::Author (isReviewedBy::Person)+ full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Symposium ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime ;
Organization ::= Company ;
 Organization ::= University ;
 Organization ::= AcademiaOrganization ;
 Organization ::= IndustryOrganization ;
 Organization ::= NGO ;
 Organization ::= GovernmentOrganization ;
 Organization ::= isProviderOf::Sponsorship ;
PowerlineTransmissionTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
IndustryOrganization ::= isProviderOf::Sponsorship ;
TestOnlyTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
WeekRejectRating ::= ε ;
ComputerNetworksSecurityTopic ::= ε ;
URL ::= Event_URL ;
 URL ::= Senior_Reviewer_URL ;
 URL ::= Chair_URL ;
 URL ::= Contact_Person_URL ;
 URL ::= Regular_Reviewer_URL ;
 URL ::= Event_URL | Senior_Reviewer_URL | Chair_URL | Contact_Person_URL | Regular_Reviewer_URL ;
AuthorNotReviewer ::= submitPaper::Paper writePaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper ;
PersonalPublicationHistory ::= ε ;
Trip ::= ε ;
Banquet ::= ε ;
Abstract ::= isWrittenBy::Author (isReviewedBy::Person)+ full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
 Abstract ::= (is_the_1th_part_of::Thing)+ ;
AssociatedChair ::= memberOfConference::Conference ;
PaperFullVersion ::= isWrittenBy::Author (isReviewedBy::Person)+ full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
RejectRating ::= ε ;
Conference ::= Conference_volume ;
 Conference ::= TwoLevelConference ;
 Conference ::= SingleLevelConference ;
 Conference ::= is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
Document ::= Email ;
 Document ::= Submission ;
 Document ::= Template ;
 Document ::= abstract ;
 Document ::= article ;
 Document ::= SlideSet ;
 Document ::= Programme ;
 Document ::= MealMenu ;
 Document ::= Paper ;
 Document ::= (relatesTo::Thing)+ recieved_by::User used_by::Person submited__by::User ;
Presentation ::= Invited_talk ;
 Presentation ::= is_given_by::Active_conference_participant ;
SingleLevelConference ::= is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
Sponsorship ::= TravelGrant ;
 Sponsorship ::= providedBy::Organization hasCostCurrency::String hasCostAmount::Integer ;
ReviewRating ::= WeekRejectRating ;
 ReviewRating ::= AcceptRating ;
 ReviewRating ::= AccpetIfRoomRating ;
 ReviewRating ::= RejectRating ;
 ReviewRating ::= WeekRejectRating | AcceptRating | AccpetIfRoomRating | RejectRating ;
ConferenceVenuePlace ::= isLocationOf::ConferenceEvent ;
WirelessCommunicationsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
String ::= string() ;
TextualReviewQuestion ::= ε ;
CallForReviews ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
Contribution ::= Poster ;
 Contribution ::= Short_paper ;
 Contribution ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
Activity ::= Event_Creation ;
 Activity ::= Request ;
 Activity ::= Event_Approval ;
 Activity ::= Registration ;
 Activity ::= (has_result::Thing)+ sent_by::Person ;
TalkEvent ::= ClosingTalk ;
 TalkEvent ::= WelcomeTalk ;
 TalkEvent ::= ClosingTalk | WelcomeTalk ;
ComputerNetworksManagementTopic ::= ε ;
Track ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
CADTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
NonAcademicEvent ::= MealEvent ;
 NonAcademicEvent ::= BreakEvent ;
 NonAcademicEvent ::= SocialEvent ;
 NonAcademicEvent ::= MealEvent | BreakEvent | SocialEvent ;
Reviewer ::= Meta-Reviewer ;
 Reviewer ::= invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ writes_review::Review hasReviewHistory::PersonalReviewHistory assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper writeReview::Review assignExternalReviewer::ExternalReviewer ;
ComputerNetworksSwitchingTopic ::= ε ;
Integer ::= integer() ;
Student ::= earlyRegistration::Boolean ;
ComputerNetworksSensorTopic ::= ε ;
PersonalHistory ::= PersonalPublicationHistory ;
 PersonalHistory ::= PersonalReviewHistory ;
 PersonalHistory ::= PersonalPublicationHistory | PersonalReviewHistory ;
Participant ::= Member ;
 Participant ::= Student ;
 Participant ::= Regular ;
 Participant ::= earlyRegistration::Boolean ;
MeetingRoomPlace ::= isLocationOf::ConferenceEvent ;
SlideSet ::= (relatesTo::Thing)+ recieved_by::User used_by::Person submited__by::User ;
ExternalReviewer ::= assignedByReviewer::Reviewer ;
Topic ::= ParallelAndDistributedComputingTopic ;
 Topic ::= WirelessCommunicationsTopic ;
 Topic ::= OperatingTopicsystems ;
 Topic ::= ComputerNetworksTopic ;
 Topic ::= SatelliteAndSpaceCommunicationsTopic ;
 Topic ::= CADTopic ;
 Topic ::= MultimediaTopic ;
 Topic ::= CommunicationsTopic ;
 Topic ::= PowerlineTransmissionTopic ;
 Topic ::= AntennasTopic ;
 Topic ::= PerformanceTopic ;
 Topic ::= SignalProcessingTopic ;
 Topic ::= MicroelectronicsTopic ;
 Topic ::= TestOnlyTopic ;
 Topic ::= RadioCommunicationsTopic ;
 Topic ::= ComputerArchitectureTopic ;
 Topic ::= MedicineTopic ;
 Topic ::= SecurityTopic ;
 Topic ::= MobileComputingTopic ;
 Topic ::= CryptographyTopic ;
 Topic ::= CommunicationTheoryTopic ;
 Topic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Organizer ::= ε ;
WelcomeTalk ::= ε ;
SocialEvent ::= Excursion ;
 SocialEvent ::= Reception ;
 SocialEvent ::= Excursion | Reception ;
Account ::= registred_by::Person ;
ContactInformation ::= hasCity::String hasStreet::String hasPostalCode::String hasPhone::String ;
Misc ::= ε ;
ComputerNetworksAapplicationsTopic ::= ε ;
Boolean ::= "true" | "false" ;
FreeTimeBreak ::= ε ;
ActivePaper ::= RatedPapers ;
 ActivePaper ::= hasRating::ReviewRating ;
AcceptedPaper ::= relatedToEvent::PaperPresentation ;
TravelGrant ::= providedBy::Organization hasCostCurrency::String hasCostAmount::Integer ;
--------------------metamodels::ekaw.owl.bgf--------------------
PerformanceTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Programme ::= belongsToEvent::ConferenceEvent ;
Decision ::= Acceptance ;
 Decision ::= Rejection ;
 Decision ::= Acceptance | Rejection ;
BreakEvent ::= CoffeeBreak ;
 BreakEvent ::= FreeTimeBreak ;
 BreakEvent ::= MealBreak ;
 BreakEvent ::= CoffeeBreak | FreeTimeBreak | MealBreak ;
Preference ::= ε ;
Organisation ::= Organising_Agency ;
 Organisation ::= Academic_Institution ;
 Organisation ::= Proceedings_Publisher ;
 Organisation ::= (publisherOf::Thing)+ technicallyOrganises::Thing ;
AcademiaOrganization ::= isProviderOf::Sponsorship ;
RadioCommunicationsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
ConferenceMember ::= ConferenceChair ;
 ConferenceMember ::= AssociatedChair ;
 ConferenceMember ::= ProgramCommitteeMember ;
 ConferenceMember ::= Chairman ;
 ConferenceMember ::= memberOfConference::conference ;
AccommodationPlace ::= isLocationOf::ConferenceEvent ;
MedicineTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
TwoLevelConference ::= is_in_phase::phase_of_conference hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI has_program::program ;
SignalProcessingTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
SessionChair ::= attendeeAt::ConferenceEvent isMemberOf::conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person ;
RatedPapers ::= hasRating::ReviewRating ;
User ::= Committee ;
 User ::= Administrator ;
 User ::= Author ;
 User ::= recieve::Document (create::Thing)+ submit::Document ;
ConferenceChair ::= memberOfConference::conference ;
 ConferenceChair ::= attendeeAt::ConferenceEvent isMemberOf::conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person ;
Rejection ::= ε ;
Place ::= DiningPlace ;
 Place ::= ConferenceVenuePlace ;
 Place ::= MeetingRoomPlace ;
 Place ::= AccommodationPlace ;
 Place ::= isLocationOf::ConferenceEvent ;
EEnum ::= (male::ε) | (female::ε) | (high::ε) | (medium::ε) | (low::ε) | (very high::ε) ;
AcceptRating ::= ε ;
GovernmentOrganization ::= isProviderOf::Sponsorship ;
CallForManuscripts ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
MealMenu ::= isMenuOf::MealEvent ;
ClosingTalk ::= ε ;
Bid ::= adjustedBy::Reviewer ;
MealBreak ::= ε ;
Publisher ::= issues::Conference_proceedings ;
Description ::= ε ;
Attendee ::= attendeeAt::ConferenceEvent isMemberOf::conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person ;
Registration ::= has_result::article sent_by::Person ;
OperatingTopicsystems ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Location ::= locationOf::Event ;
ConferenceDinner ::= hasMenu::MealMenu ;
ComputerNetworksEnterpriseTopic ::= ε ;
Thing ::= Role ;
 Thing ::= Person ;
 Thing ::= Document ;
 Thing ::= Detail ;
 Thing ::= Review_expertise ;
 Thing ::= Organizer ;
 Thing ::= Review_preference ;
 Thing ::= date ;
 Thing ::= URL ;
 Thing ::= conference_setup ;
 Thing ::= Event ;
 Thing ::= Contribution ;
 Thing ::= conference ;
 Thing ::= Role | Person | Document | Detail | Review_expertise | Organizer | Review_preference | date | URL | conference_setup | Event | Contribution ;
ProgramCommitteeChair ::= endReview::Review ;
SatelliteAndSpaceCommunicationsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Scholar ::= studyAt::University ;
Excursion ::= ε ;
TPCMember ::= attendeeAt::ConferenceEvent isMemberOf::conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person ;
ConferenceEvent ::= NonAcademicEvent ;
 ConferenceEvent ::= AcademicEvent ;
 ConferenceEvent ::= hasAttendee::Person hasLocation::Place hasProgramme::Programme hasEndDateTime::dateTime hasStartDateTime::dateTime ;
Assistant ::= attendeeAt::ConferenceEvent isMemberOf::conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person ;
MobileComputingTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Member ::= earlyRegistration::Boolean ;
ConferenceSession ::= ε ;
SubjectArea ::= ε ;
ComputerNetworksMeasurementsTopic ::= ε ;
NGO ::= isProviderOf::Sponsorship ;
CommunicationTheoryTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
AcademicEvent ::= TalkEvent ;
 AcademicEvent ::= OrganizationalMeeting ;
 AcademicEvent ::= PaperPresentation ;
 AcademicEvent ::= hasCall::Call ;
CallForPapers ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
CommunicationsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
ComputerNetworksTopic ::= ComputerNetworksEnterpriseTopic ;
 ComputerNetworksTopic ::= ComputerNetworksSwitchingTopic ;
 ComputerNetworksTopic ::= ComputerNetworksSensorTopic ;
 ComputerNetworksTopic ::= ComputerNetworksSecurityTopic ;
 ComputerNetworksTopic ::= ComputerNetworksOpticalTopic ;
 ComputerNetworksTopic ::= ComputerNetworksMeasurementsTopic ;
 ComputerNetworksTopic ::= ComputerNetworksManagementTopic ;
 ComputerNetworksTopic ::= ComputerNetworksAapplicationsTopic ;
 ComputerNetworksTopic ::= ComputerNetworksEnterpriseTopic | ComputerNetworksSwitchingTopic | ComputerNetworksSensorTopic | ComputerNetworksSecurityTopic | ComputerNetworksOpticalTopic | ComputerNetworksMeasurementsTopic | ComputerNetworksManagementTopic | ComputerNetworksAapplicationsTopic ;
SecurityTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Reception ::= ε ;
University ::= scientificallyOrganises::Academic_Institution isProviderOf::Sponsorship ;
DiningPlace ::= isLocationOf::ConferenceEvent ;
PaperAbstract ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Administrator ::= approve::Event assign::Role finalizePaperAssignment::conference runPaperAssignmentTools::conference enableVirtualMeeting::conference startReviewerBidding::conference assignReviewer::Reviewer rejectPaper::Paper enterConferenceDetails::conference printHardcopyMailingManifests::conference setMaxPapers::ProgramCommitteeMember enterReviewCriteria::conference acceptPaper::Paper addProgramCommitteeMember::ProgramCommitteeMember ;
Author ::= AuthorNotReviewer ;
 Author ::= Co-author ;
 Author ::= Corresponding_Author ;
 Author ::= Presenter ;
 Author ::= writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper submitPaper::Paper writePaper::Paper writes::Contribution ;
Preview ::= ε ;
Workshop ::= hasTopic::Topic hasAdministrativeEvent::Administrative_event ;
PaperPresentation ::= relatedToPaper::AcceptedPaper ;
Chair ::= was_a_committee_chair_of::Committee ;
Inforamtion ::= ε ;
ComputerArchitectureTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
AntennasTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
OrganizationalMeeting ::= hasCall::Call ;
PersonalReviewHistory ::= isReviewHistoryOf::Reviewer ;
MicroelectronicsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Template ::= (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document recieved_by::User used_by::Person submited__by::User ;
ComputerNetworksOpticalTopic ::= ε ;
Role ::= Admin_Role ;
 Role ::= Author_Role ;
 Role ::= Committe_Role ;
 Role ::= Head_Role ;
 Role ::= Reviewer_Role ;
 Role ::= assigned_by::Administrator ;
Chairman ::= ConferenceChair ;
 Chairman ::= AssociatedChair ;
 Chairman ::= ProgramCommitteeChair ;
 Chairman ::= attendeeAt::ConferenceEvent isMemberOf::conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person memberOfConference::conference ;
AccpetIfRoomRating ::= ε ;
RejectedPaper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
ParallelAndDistributedComputingTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
City ::= ε ;
Presenter ::= Invited_Speaker ;
MultimediaTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
CryptographyTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
ReviewQuestion ::= TextualReviewQuestion ;
 ReviewQuestion ::= NumericalReviewQuestion ;
 ReviewQuestion ::= TextualReviewQuestion | NumericalReviewQuestion ;
Call ::= CallForPapers ;
 Call ::= CallForReviews ;
 Call ::= CallForManuscripts ;
 Call ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
Tutorial ::= hasTopic::Topic hasAdministrativeEvent::Administrative_event ;
Email ::= Notification_Email ;
 Email ::= Group_Email ;
 Email ::= Approval_Email ;
 Email ::= Rejection_Email ;
 Email ::= Notification_Email | Group_Email | Approval_Email | Rejection_Email ;
Regular ::= earlyRegistration::Boolean ;
Event ::= Symposium ;
 Event ::= Social_event ;
 Event ::= Administrative_event ;
 Event ::= Working_event ;
 Event ::= pc_meeting ;
 Event ::= session ;
 Event ::= Social_Event ;
 Event ::= Scientific_Event ;
 Event ::= (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime ;
ProgramCommittee ::= hasProgramCommitteeMember::ProgramCommitteeMember ;
Review ::= Meta-Review ;
 Review ::= Positive_Review ;
 Review ::= Negative_Review ;
 Review ::= Neutral_Review ;
 Review ::= reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::activity review_written_by::Reviewer ;
MealEvent ::= ConferenceDinner ;
 MealEvent ::= hasMenu::MealMenu ;
Acceptance ::= ε ;
Session ::= Conference_Session ;
 Session ::= Regular_Session ;
 Session ::= Poster_Session ;
 Session ::= Demo_Session ;
 Session ::= Workshop_Session ;
 Session ::= Conference_Session | Regular_Session | Poster_Session | Demo_Session | Workshop_Session ;
Country ::= ε ;
Person ::= ConferenceMember ;
 Person ::= ExternalReviewer ;
 Person ::= User ;
 Person ::= Conference_participant ;
 Person ::= Conference_contributor ;
 Person ::= Committee_member ;
 Person ::= Conference_applicant ;
 Person ::= Track-workshop_chair ;
 Person ::= Scholar ;
 Person ::= Participant ;
 Person ::= Member_PC ;
 Person ::= Chair_PC ;
 Person ::= Science_Worker ;
 Person ::= Assistant ;
 Person ::= Volunteer ;
 Person ::= chair ;
 Person ::= participant ;
 Person ::= ConferenceChair ;
 Person ::= Attendee ;
 Person ::= SessionChair ;
 Person ::= TPCMember ;
 Person ::= Paper_Author ;
 Person ::= Conference_Participant ;
 Person ::= Agency_Staff_Member ;
 Person ::= Possible_Reviewer ;
 Person ::= Student ;
 Person ::= ProgramCommitteeMember ;
 Person ::= Chairman ;
 Person ::= Reviewer ;
 Person ::= Administrator ;
 Person ::= attendeeAt::ConferenceEvent isMemberOf::conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person ;
CoffeeBreak ::= ε ;
ProgramCommitteeMember ::= ProgramCommitteeChair ;
 ProgramCommitteeMember ::= memberOfProgramCommittee::ProgramCommittee maxPapers::Integer addedBy::Administrator ;
Detail ::= ε ;
Request ::= Help_Request ;
Poster ::= is_submitted_at::Conference_volume ;
 Poster ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
Paper ::= PaperAbstract ;
 Paper ::= PaperFullVersion ;
 Paper ::= Invited_Paper ;
 Paper ::= Short_Paper ;
 Paper ::= Full_Paper ;
 Paper ::= Accepted_Paper ;
 Paper ::= Rejected_Paper ;
 Paper ::= Undecided_Paper ;
 Paper ::= ActivePaper ;
 Paper ::= PendingPaper ;
 Paper ::= WithdrawnPaper ;
 Paper ::= RejectedPaper ;
 Paper ::= AcceptedPaper ;
 Paper ::= PublishedPaper ;
 Paper ::= Camera_Ready_Paper ;
 Paper ::= Workshop_Paper ;
 Paper ::= Industrial_Paper ;
 Paper ::= Conference_Paper ;
 Paper ::= Submitted_Paper ;
 Paper ::= Poster_Paper ;
 Paper ::= Regular_Paper ;
 Paper ::= Demo_Paper ;
 Paper ::= Abstract ;
 Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Submission ::= (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document recieved_by::User used_by::Person submited__by::User ;
Volunteer ::= attendeeAt::ConferenceEvent isMemberOf::conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person ;
WithdrawnPaper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Proceedings ::= Conference_Proceedings ;
PublishedPaper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Committee ::= Program_committee ;
 Committee ::= Organizing_committee ;
 Committee ::= Steering_committee ;
 Committee ::= has_members::Committee_member was_a_committee_of::Conference_volume has_a_committee_co-chair::Co-chair has_a_committee_chair::Chair ;
Company ::= isProviderOf::Sponsorship ;
ReviewForm ::= ε ;
Assistance ::= ε ;
NumericalReviewQuestion ::= ε ;
PendingPaper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Symposium ::= (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime ;
Organization ::= Company ;
 Organization ::= AcademiaOrganization ;
 Organization ::= IndustryOrganization ;
 Organization ::= NGO ;
 Organization ::= GovernmentOrganization ;
 Organization ::= University ;
 Organization ::= isProviderOf::Sponsorship ;
PowerlineTransmissionTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
IndustryOrganization ::= isProviderOf::Sponsorship ;
TestOnlyTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
WeekRejectRating ::= ε ;
ComputerNetworksSecurityTopic ::= ε ;
URL ::= Event_URL ;
 URL ::= Senior_Reviewer_URL ;
 URL ::= Chair_URL ;
 URL ::= Contact_Person_URL ;
 URL ::= Regular_Reviewer_URL ;
 URL ::= Event_URL | Senior_Reviewer_URL | Chair_URL | Contact_Person_URL | Regular_Reviewer_URL ;
AuthorNotReviewer ::= writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper submitPaper::Paper writePaper::Paper writes::Contribution ;
PersonalPublicationHistory ::= ε ;
Trip ::= ε ;
Banquet ::= ε ;
Abstract ::= Tutorial_Abstract ;
 Abstract ::= Invited_Talk_Abstract ;
 Abstract ::= part_of_article::article (is_the_1th_part_of::Thing)+ ;
Flyer ::= (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document recieved_by::User used_by::Person submited__by::User ;
AssociatedChair ::= memberOfConference::conference ;
PaperFullVersion ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
RejectRating ::= ε ;
Document ::= Email ;
 Document ::= Submission ;
 Document ::= Template ;
 Document ::= article ;
 Document ::= SlideSet ;
 Document ::= Programme ;
 Document ::= MealMenu ;
 Document ::= Programme_Brochure ;
 Document ::= Flyer ;
 Document ::= Web_Site ;
 Document ::= Multi-author_Volume ;
 Document ::= Paper ;
 Document ::= (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document recieved_by::User used_by::Person submited__by::User ;
Presentation ::= Invited_talk ;
 Presentation ::= is_given_by::Active_conference_participant ;
SingleLevelConference ::= is_in_phase::phase_of_conference hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI has_program::program ;
Sponsorship ::= TravelGrant ;
 Sponsorship ::= providedBy::Organization hasCostCurrency::String hasCostAmount::Integer ;
ReviewRating ::= WeekRejectRating ;
 ReviewRating ::= AcceptRating ;
 ReviewRating ::= AccpetIfRoomRating ;
 ReviewRating ::= RejectRating ;
 ReviewRating ::= WeekRejectRating | AcceptRating | AccpetIfRoomRating | RejectRating ;
ConferenceVenuePlace ::= isLocationOf::ConferenceEvent ;
WirelessCommunicationsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
String ::= string() ;
TextualReviewQuestion ::= ε ;
CallForReviews ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
Contribution ::= Poster ;
 Contribution ::= Short_paper ;
 Contribution ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
Activity ::= Event_Creation ;
 Activity ::= Request ;
 Activity ::= Event_Approval ;
 Activity ::= Registration ;
 Activity ::= has_result::article sent_by::Person ;
TalkEvent ::= ClosingTalk ;
 TalkEvent ::= WelcomeTalk ;
 TalkEvent ::= ClosingTalk | WelcomeTalk ;
ComputerNetworksManagementTopic ::= ε ;
Track ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
CADTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
NonAcademicEvent ::= MealEvent ;
 NonAcademicEvent ::= BreakEvent ;
 NonAcademicEvent ::= SocialEvent ;
 NonAcademicEvent ::= MealEvent | BreakEvent | SocialEvent ;
Reviewer ::= Meta-Reviewer ;
 Reviewer ::= assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper writeReview::Review assignExternalReviewer::ExternalReviewer invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ writes_review::Review hasReviewHistory::PersonalReviewHistory ;
ComputerNetworksSwitchingTopic ::= ε ;
Integer ::= integer() ;
Student ::= earlyRegistration::Boolean ;
 Student ::= attendeeAt::ConferenceEvent isMemberOf::conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person ;
ComputerNetworksSensorTopic ::= ε ;
PersonalHistory ::= PersonalPublicationHistory ;
 PersonalHistory ::= PersonalReviewHistory ;
 PersonalHistory ::= PersonalPublicationHistory | PersonalReviewHistory ;
Participant ::= Member ;
 Participant ::= Student ;
 Participant ::= Regular ;
 Participant ::= earlyRegistration::Boolean ;
MeetingRoomPlace ::= isLocationOf::ConferenceEvent ;
SlideSet ::= (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document recieved_by::User used_by::Person submited__by::User ;
ExternalReviewer ::= assignedByReviewer::Reviewer ;
Topic ::= ParallelAndDistributedComputingTopic ;
 Topic ::= WirelessCommunicationsTopic ;
 Topic ::= OperatingTopicsystems ;
 Topic ::= ComputerNetworksTopic ;
 Topic ::= SatelliteAndSpaceCommunicationsTopic ;
 Topic ::= CADTopic ;
 Topic ::= MultimediaTopic ;
 Topic ::= CommunicationsTopic ;
 Topic ::= PowerlineTransmissionTopic ;
 Topic ::= AntennasTopic ;
 Topic ::= PerformanceTopic ;
 Topic ::= SignalProcessingTopic ;
 Topic ::= MicroelectronicsTopic ;
 Topic ::= TestOnlyTopic ;
 Topic ::= RadioCommunicationsTopic ;
 Topic ::= ComputerArchitectureTopic ;
 Topic ::= MedicineTopic ;
 Topic ::= SecurityTopic ;
 Topic ::= MobileComputingTopic ;
 Topic ::= CryptographyTopic ;
 Topic ::= CommunicationTheoryTopic ;
 Topic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Organizer ::= ε ;
WelcomeTalk ::= ε ;
SocialEvent ::= Excursion ;
 SocialEvent ::= Reception ;
 SocialEvent ::= Excursion | Reception ;
Account ::= registred_by::Person ;
ContactInformation ::= hasCity::String hasStreet::String hasPostalCode::String hasPhone::String ;
Misc ::= ε ;
ComputerNetworksAapplicationsTopic ::= ε ;
Boolean ::= "true" | "false" ;
FreeTimeBreak ::= ε ;
ActivePaper ::= RatedPapers ;
 ActivePaper ::= hasRating::ReviewRating ;
AcceptedPaper ::= relatedToEvent::PaperPresentation ;
TravelGrant ::= providedBy::Organization hasCostCurrency::String hasCostAmount::Integer ;
--------------------metamodels::iasted.owl.bgf--------------------
PerformanceTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Sponzorship ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
Programme ::= belongsToEvent::ConferenceEvent ;
Decision ::= Acceptance ;
 Decision ::= Rejection ;
 Decision ::= Acceptance | Rejection ;
BreakEvent ::= CoffeeBreak ;
 BreakEvent ::= FreeTimeBreak ;
 BreakEvent ::= MealBreak ;
 BreakEvent ::= CoffeeBreak | FreeTimeBreak | MealBreak ;
Preference ::= ε ;
Sponsor ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasConflictOfInterest::Document email::String ;
Organisation ::= Organising_Agency ;
 Organisation ::= Academic_Institution ;
 Organisation ::= Proceedings_Publisher ;
 Organisation ::= (publisherOf::Thing)+ technicallyOrganises::Thing ;
AcademiaOrganization ::= isProviderOf::Sponsorship ;
RadioCommunicationsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
ConferenceMember ::= Reviewer ;
 ConferenceMember ::= ConferenceChair ;
 ConferenceMember ::= AssociatedChair ;
 ConferenceMember ::= ProgramCommitteeMember ;
 ConferenceMember ::= Chairman ;
 ConferenceMember ::= memberOfConference::Conference ;
AccommodationPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
MedicineTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
TwoLevelConference ::= is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
SignalProcessingTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
SessionChair ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasConflictOfInterest::Document email::String ;
Time ::= Deadline ;
 Time ::= Trip_day ;
 Time ::= Conference_days ;
 Time ::= Deadline | Trip_day | Conference_days ;
RatedPapers ::= hasRating::ReviewRating ;
User ::= Committee ;
 User ::= Administrator ;
 User ::= recieve::Document (create::Thing)+ submit::Document ;
Renting ::= ε ;
Rejection ::= ε ;
ConferenceChair ::= memberOfConference::Conference ;
 ConferenceChair ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasConflictOfInterest::Document email::String ;
Place ::= DiningPlace ;
 Place ::= ConferenceVenuePlace ;
 Place ::= MeetingRoomPlace ;
 Place ::= AccommodationPlace ;
 Place ::= Building ;
 Place ::= Session_room ;
 Place ::= Hotel_room ;
 Place ::= Conference_hall ;
 Place ::= Main_office ;
 Place ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
EEnum ::= (male::ε) | (female::ε) | (high::ε) | (medium::ε) | (low::ε) | (very high::ε) ;
AcceptRating ::= ε ;
Form ::= Hotel_registration_form ;
 Form ::= Registration_form ;
 Form ::= Author_information_form ;
 Form ::= Hotel_registration_form | Registration_form | Author_information_form ;
GovernmentOrganization ::= isProviderOf::Sponsorship ;
CallForManuscripts ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
MealMenu ::= isMenuOf::MealEvent ;
ClosingTalk ::= ε ;
Speaker ::= Author ;
 Speaker ::= ε ;
Bid ::= adjustedBy::Reviewer ;
MealBreak ::= ε ;
Publisher ::= issues::Conference_proceedings ;
Description ::= ε ;
Attendee ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasConflictOfInterest::Document email::String ;
Registration ::= (has_result::Thing)+ sent_by::Person is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human is_held_before::Time (is_held_in::Trip_day)+ is_held_after::Time is_dated_on::dateTime ;
 Registration ::= ε ;
OperatingTopicsystems ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Location ::= locationOf::Event ;
Lecturer ::= Worker_lecturer ;
 Lecturer ::= Student_lecturer ;
 Lecturer ::= Worker_lecturer | Student_lecturer ;
Departure ::= ε ;
Listener ::= ε ;
Building ::= Presenter_house ;
 Building ::= Conference_restaurant ;
 Building ::= Conference_building ;
 Building ::= Conference_airport ;
 Building ::= Conference_hotel ;
 Building ::= Sponsor_company_house ;
 Building ::= Presenter_university ;
 Building ::= Presenter_house | Conference_restaurant | Conference_building | Conference_airport | Conference_hotel | Sponsor_company_house | Presenter_university ;
ConferenceDinner ::= hasMenu::MealMenu ;
ComputerNetworksEnterpriseTopic ::= ε ;
Thing ::= Person ;
 Thing ::= Role ;
 Thing ::= Detail ;
 Thing ::= Review_expertise ;
 Thing ::= Organizer ;
 Thing ::= Review_preference ;
 Thing ::= date ;
 Thing ::= URL ;
 Thing ::= conference_setup ;
 Thing ::= Contribution ;
 Thing ::= Event ;
 Thing ::= Place ;
 Thing ::= City ;
 Thing ::= Conference ;
 Thing ::= Document ;
 Thing ::= Person | Role | Detail | Review_expertise | Organizer | Review_preference | date | URL | conference_setup | Contribution | Event | Place | City ;
ProgramCommitteeChair ::= endReview::Review ;
SatelliteAndSpaceCommunicationsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Scholar ::= studyAt::University ;
Excursion ::= ε ;
TPCMember ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasConflictOfInterest::Document email::String ;
ConferenceEvent ::= NonAcademicEvent ;
 ConferenceEvent ::= AcademicEvent ;
 ConferenceEvent ::= hasAttendee::Person hasLocation::Place hasProgramme::Programme hasEndDateTime::dateTime hasStartDateTime::dateTime ;
Assistant ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasConflictOfInterest::Document email::String ;
MobileComputingTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Research ::= Simulating ;
 Research ::= Modelling ;
 Research ::= Simulating | Modelling ;
ConferenceSession ::= ε ;
Member ::= earlyRegistration::Boolean ;
SubjectArea ::= ε ;
ComputerNetworksMeasurementsTopic ::= ε ;
NGO ::= isProviderOf::Sponsorship ;
Car ::= ε ;
CommunicationTheoryTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
AcademicEvent ::= TalkEvent ;
 AcademicEvent ::= OrganizationalMeeting ;
 AcademicEvent ::= PaperPresentation ;
 AcademicEvent ::= Workshop ;
 AcademicEvent ::= hasCall::Call ;
CallForPapers ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
CommunicationsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
SecurityTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
ComputerNetworksTopic ::= ComputerNetworksEnterpriseTopic ;
 ComputerNetworksTopic ::= ComputerNetworksSwitchingTopic ;
 ComputerNetworksTopic ::= ComputerNetworksSensorTopic ;
 ComputerNetworksTopic ::= ComputerNetworksSecurityTopic ;
 ComputerNetworksTopic ::= ComputerNetworksOpticalTopic ;
 ComputerNetworksTopic ::= ComputerNetworksMeasurementsTopic ;
 ComputerNetworksTopic ::= ComputerNetworksManagementTopic ;
 ComputerNetworksTopic ::= ComputerNetworksAapplicationsTopic ;
 ComputerNetworksTopic ::= ComputerNetworksEnterpriseTopic | ComputerNetworksSwitchingTopic | ComputerNetworksSensorTopic | ComputerNetworksSecurityTopic | ComputerNetworksOpticalTopic | ComputerNetworksMeasurementsTopic | ComputerNetworksManagementTopic | ComputerNetworksAapplicationsTopic ;
Reception ::= ε ;
DiningPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
University ::= isProviderOf::Sponsorship scientificallyOrganises::Academic_Institution ;
PaperAbstract ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
Administrator ::= finalizePaperAssignment::Conference runPaperAssignmentTools::Conference enableVirtualMeeting::Conference startReviewerBidding::Conference assignReviewer::Reviewer rejectPaper::Paper enterConferenceDetails::Conference printHardcopyMailingManifests::Conference setMaxPapers::ProgramCommitteeMember enterReviewCriteria::Conference acceptPaper::Paper addProgramCommitteeMember::ProgramCommitteeMember approve::Event assign::Role ;
Author ::= AuthorNotReviewer ;
 Author ::= Co-author ;
 Author ::= Corresponding_Author ;
 Author ::= Author_cd_proceedings_included ;
 Author ::= Lecturer ;
 Author ::= Plenary_lecture_speaker ;
 Author ::= Tutorial_speaker ;
 Author ::= Author_book_proceedings_included ;
 Author ::= Presenter ;
 Author ::= submitPaper::Paper writePaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper ;
Preview ::= ε ;
Workshop ::= hasCall::Call ;
PaperPresentation ::= relatedToPaper::AcceptedPaper ;
Delegate ::= One_day_presenter ;
 Delegate ::= Technical_commitee ;
 Delegate ::= Listener ;
 Delegate ::= Session_chair ;
 Delegate ::= Speaker ;
 Delegate ::= Hotel_presenter ;
 Delegate ::= Non_speaker ;
 Delegate ::= IASTED_non_member ;
 Delegate ::= Conference_Hiker ;
 Delegate ::= IASTED_member ;
 Delegate ::= One_day_presenter | Technical_commitee | Listener | Session_chair | Speaker | Hotel_presenter | Non_speaker | IASTED_non_member | Conference_Hiker | IASTED_member ;
Chair ::= was_a_committee_chair_of::Committee ;
Inforamtion ::= ε ;
ComputerArchitectureTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Money ::= Tax ;
 Money ::= Fee ;
 Money ::= Sponzorship ;
 Money ::= Tip ;
 Money ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
AntennasTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
OrganizationalMeeting ::= hasCall::Call ;
PersonalReviewHistory ::= isReviewHistoryOf::Reviewer ;
MicroelectronicsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Template ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
ComputerNetworksOpticalTopic ::= ε ;
Role ::= Admin_Role ;
 Role ::= Author_Role ;
 Role ::= Committe_Role ;
 Role ::= Head_Role ;
 Role ::= Reviewer_Role ;
 Role ::= assigned_by::Administrator ;
Chairman ::= ConferenceChair ;
 Chairman ::= AssociatedChair ;
 Chairman ::= ProgramCommitteeChair ;
 Chairman ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasConflictOfInterest::Document email::String memberOfConference::Conference ;
AccpetIfRoomRating ::= ε ;
RejectedPaper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
ParallelAndDistributedComputingTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Tax ::= Value_added_tax ;
 Tax ::= Departure_tax ;
 Tax ::= Value_added_tax | Departure_tax ;
City ::= Presenter_city ;
 City ::= Conference_city ;
 City ::= Sponsor_city ;
 City ::= Trip_city ;
 City ::= Presenter_city | Conference_city | Sponsor_city | Trip_city ;
Presenter ::= Invited_Speaker ;
MultimediaTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
CryptographyTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Modelling ::= ε ;
ReviewQuestion ::= TextualReviewQuestion ;
 ReviewQuestion ::= NumericalReviewQuestion ;
 ReviewQuestion ::= TextualReviewQuestion | NumericalReviewQuestion ;
Call ::= CallForPapers ;
 Call ::= CallForReviews ;
 Call ::= CallForManuscripts ;
 Call ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
Tutorial ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Regular ::= earlyRegistration::Boolean ;
Email ::= Notification_Email ;
 Email ::= Group_Email ;
 Email ::= Approval_Email ;
 Email ::= Rejection_Email ;
 Email ::= Notification_Email | Group_Email | Approval_Email | Rejection_Email ;
Tip ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
Event ::= Symposium ;
 Event ::= Social_event ;
 Event ::= Administrative_event ;
 Event ::= Working_event ;
 Event ::= pc_meeting ;
 Event ::= session ;
 Event ::= Social_Event ;
 Event ::= Scientific_Event ;
 Event ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location ;
ProgramCommittee ::= hasProgramCommitteeMember::ProgramCommitteeMember ;
Review ::= Meta-Review ;
 Review ::= Positive_Review ;
 Review ::= Negative_Review ;
 Review ::= Neutral_Review ;
 Review ::= writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::Activity review_written_by::Reviewer reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer ;
Transparency ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
Deadline ::= Deadline_hotel_reservation ;
 Deadline ::= Submissions_deadline ;
 Deadline ::= Deadline_for_notification_of_acceptance ;
 Deadline ::= Registation_deadline ;
 Deadline ::= Camera_ready_manuscript_deadline ;
 Deadline ::= done_till::date ;
MealEvent ::= ConferenceDinner ;
 MealEvent ::= hasMenu::MealMenu ;
Acceptance ::= ε ;
Session ::= Conference_Session ;
 Session ::= Regular_Session ;
 Session ::= Poster_Session ;
 Session ::= Demo_Session ;
 Session ::= Workshop_Session ;
 Session ::= Speaker_lecture ;
 Session ::= Conference_Session | Regular_Session | Poster_Session | Demo_Session | Workshop_Session | Speaker_lecture ;
Country ::= ε ;
Person ::= ConferenceMember ;
 Person ::= ExternalReviewer ;
 Person ::= User ;
 Person ::= Conference_participant ;
 Person ::= Conference_contributor ;
 Person ::= Committee_member ;
 Person ::= Conference_applicant ;
 Person ::= Track-workshop_chair ;
 Person ::= Scholar ;
 Person ::= Participant ;
 Person ::= Member_PC ;
 Person ::= Chair_PC ;
 Person ::= Science_Worker ;
 Person ::= Assistant ;
 Person ::= Volunteer ;
 Person ::= chair ;
 Person ::= participant ;
 Person ::= ConferenceChair ;
 Person ::= Attendee ;
 Person ::= SessionChair ;
 Person ::= TPCMember ;
 Person ::= Paper_Author ;
 Person ::= Conference_Participant ;
 Person ::= Agency_Staff_Member ;
 Person ::= Possible_Reviewer ;
 Person ::= Student ;
 Person ::= Delegate ;
 Person ::= Sponsor ;
 Person ::= ProgramCommitteeMember ;
 Person ::= Chairman ;
 Person ::= Administrator ;
 Person ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasConflictOfInterest::Document email::String ;
CoffeeBreak ::= ε ;
ProgramCommitteeMember ::= ProgramCommitteeChair ;
 ProgramCommitteeMember ::= memberOfProgramCommittee::ProgramCommittee maxPapers::Integer addedBy::Administrator ;
State ::= Presenter_state ;
 State ::= Conference_state ;
 State ::= Sponsor_state ;
 State ::= Presenter_state | Conference_state | Sponsor_state ;
Detail ::= ε ;
Request ::= Help_Request ;
Poster ::= is_submitted_at::Conference_volume ;
 Poster ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
Paper ::= PaperAbstract ;
 Paper ::= PaperFullVersion ;
 Paper ::= Invited_Paper ;
 Paper ::= Short_Paper ;
 Paper ::= Full_Paper ;
 Paper ::= Accepted_Paper ;
 Paper ::= Rejected_Paper ;
 Paper ::= Undecided_Paper ;
 Paper ::= ActivePaper ;
 Paper ::= PendingPaper ;
 Paper ::= WithdrawnPaper ;
 Paper ::= RejectedPaper ;
 Paper ::= AcceptedPaper ;
 Paper ::= PublishedPaper ;
 Paper ::= Camera_Ready_Paper ;
 Paper ::= Workshop_Paper ;
 Paper ::= Industrial_Paper ;
 Paper ::= Conference_Paper ;
 Paper ::= Submitted_Paper ;
 Paper ::= Poster_Paper ;
 Paper ::= Regular_Paper ;
 Paper ::= Demo_Paper ;
 Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
Submission ::= Final_manuscript ;
 Submission ::= Initial_manuscipt ;
 Submission ::= Final_manuscript | Initial_manuscipt ;
Volunteer ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasConflictOfInterest::Document email::String ;
WithdrawnPaper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
Fee ::= Registration_fee ;
 Fee ::= Hotel_fee ;
 Fee ::= Fee_for_extra_trip ;
 Fee ::= Registration_fee | Hotel_fee | Fee_for_extra_trip ;
Proceedings ::= Conference_Proceedings ;
Lecture ::= Plenary_lecture ;
 Lecture ::= Session ;
PublishedPaper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
Committee ::= Program_committee ;
 Committee ::= Organizing_committee ;
 Committee ::= Steering_committee ;
 Committee ::= has_members::Committee_member was_a_committee_of::Conference_volume has_a_committee_co-chair::Co-chair has_a_committee_chair::Chair ;
Company ::= isProviderOf::Sponsorship ;
ReviewForm ::= ε ;
Assistance ::= ε ;
NumericalReviewQuestion ::= ε ;
PendingPaper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
Symposium ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location ;
Organization ::= Company ;
 Organization ::= AcademiaOrganization ;
 Organization ::= IndustryOrganization ;
 Organization ::= NGO ;
 Organization ::= GovernmentOrganization ;
 Organization ::= University ;
 Organization ::= isProviderOf::Sponsorship ;
PowerlineTransmissionTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
IndustryOrganization ::= isProviderOf::Sponsorship ;
TestOnlyTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
WeekRejectRating ::= ε ;
ComputerNetworksSecurityTopic ::= ε ;
URL ::= Event_URL ;
 URL ::= Senior_Reviewer_URL ;
 URL ::= Chair_URL ;
 URL ::= Contact_Person_URL ;
 URL ::= Regular_Reviewer_URL ;
 URL ::= Event_URL | Senior_Reviewer_URL | Chair_URL | Contact_Person_URL | Regular_Reviewer_URL ;
AuthorNotReviewer ::= submitPaper::Paper writePaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper ;
PersonalPublicationHistory ::= ε ;
Trip ::= ε ;
Banquet ::= ε ;
Abstract ::= Tutorial_Abstract ;
 Abstract ::= Invited_Talk_Abstract ;
 Abstract ::= part_of_article::article (is_the_1th_part_of::Thing)+ ;
Cheque ::= ε ;
Flyer ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
AssociatedChair ::= memberOfConference::Conference ;
Taxi ::= ε ;
PaperFullVersion ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
RejectRating ::= ε ;
Conference ::= Conference_volume ;
 Conference ::= TwoLevelConference ;
 Conference ::= SingleLevelConference ;
 Conference ::= is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
Computer ::= ε ;
Document ::= Email ;
 Document ::= Submission ;
 Document ::= Template ;
 Document ::= article ;
 Document ::= SlideSet ;
 Document ::= Programme ;
 Document ::= MealMenu ;
 Document ::= Programme_Brochure ;
 Document ::= Flyer ;
 Document ::= Web_Site ;
 Document ::= Multi-author_Volume ;
 Document ::= Form ;
 Document ::= Mailing_list ;
 Document ::= Record_of_attendance ;
 Document ::= Brief_introduction_for_Session_chair ;
 Document ::= Invitation_letter ;
 Document ::= Viza ;
 Document ::= Transparency ;
 Document ::= Payment_document ;
 Document ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
Introduction ::= Introduction_of_speaker ;
Viza ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
Presentation ::= Invited_talk ;
 Presentation ::= PowerPoint_presentation ;
 Presentation ::= Video_presentation ;
 Presentation ::= is_given_by::Active_conference_participant ;
SingleLevelConference ::= is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
Sponsorship ::= TravelGrant ;
 Sponsorship ::= providedBy::Organization hasCostCurrency::String hasCostAmount::Integer ;
ReviewRating ::= WeekRejectRating ;
 ReviewRating ::= AcceptRating ;
 ReviewRating ::= AccpetIfRoomRating ;
 ReviewRating ::= RejectRating ;
 ReviewRating ::= WeekRejectRating | AcceptRating | AccpetIfRoomRating | RejectRating ;
ConferenceVenuePlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
WirelessCommunicationsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Item ::= Transport_vehicle ;
 Item ::= Card ;
 Item ::= Audiovisual_equipment ;
 Item ::= Publication ;
 Item ::= Document ;
 Item ::= go_through::Activity (is_used_for::Thing)+ is_signed_by::Person is_made_from::Item is_sent_after::Time is_needed_for::Person is_sent_before::Time is_prepared_by::Person is_used_by::Person is_given_to::Person is_sent_by::Person is_writen_by::Person ;
String ::= string() ;
Currency ::= ε ;
TextualReviewQuestion ::= ε ;
Card ::= Credit_card ;
CallForReviews ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
Contribution ::= Poster ;
 Contribution ::= Short_paper ;
 Contribution ::= Paper ;
 Contribution ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
Activity ::= Event_Creation ;
 Activity ::= Request ;
 Activity ::= Event_Approval ;
 Activity ::= Registration ;
 Activity ::= paper_assignment ;
 Activity ::= bidding_of_reviewer ;
 Activity ::= managing_of_conference_process ;
 Activity ::= reviewing_proces ;
 Activity ::= notification ;
 Activity ::= submission_process ;
 Activity ::= Activity_before_conference ;
 Activity ::= Conference_activity ;
 Activity ::= Activity_after_conference ;
 Activity ::= (has_result::Thing)+ sent_by::Person is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human is_held_before::Time (is_held_in::Trip_day)+ is_held_after::Time is_dated_on::dateTime ;
TalkEvent ::= ClosingTalk ;
 TalkEvent ::= WelcomeTalk ;
 TalkEvent ::= ClosingTalk | WelcomeTalk ;
ComputerNetworksManagementTopic ::= ε ;
Track ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
CADTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
NonAcademicEvent ::= MealEvent ;
 NonAcademicEvent ::= BreakEvent ;
 NonAcademicEvent ::= SocialEvent ;
 NonAcademicEvent ::= MealEvent | BreakEvent | SocialEvent ;
Reviewer ::= Meta-Reviewer ;
 Reviewer ::= invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ writes_review::Review hasReviewHistory::PersonalReviewHistory assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper writeReview::Review assignExternalReviewer::ExternalReviewer ;
ComputerNetworksSwitchingTopic ::= ε ;
Integer ::= integer() ;
Student ::= earlyRegistration::Boolean ;
 Student ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasConflictOfInterest::Document email::String ;
ComputerNetworksSensorTopic ::= ε ;
PersonalHistory ::= PersonalPublicationHistory ;
 PersonalHistory ::= PersonalReviewHistory ;
 PersonalHistory ::= PersonalPublicationHistory | PersonalReviewHistory ;
Participant ::= Member ;
 Participant ::= Student ;
 Participant ::= Regular ;
 Participant ::= earlyRegistration::Boolean ;
MeetingRoomPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
SlideSet ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
ExternalReviewer ::= assignedByReviewer::Reviewer ;
Topic ::= ParallelAndDistributedComputingTopic ;
 Topic ::= WirelessCommunicationsTopic ;
 Topic ::= OperatingTopicsystems ;
 Topic ::= ComputerNetworksTopic ;
 Topic ::= SatelliteAndSpaceCommunicationsTopic ;
 Topic ::= CADTopic ;
 Topic ::= MultimediaTopic ;
 Topic ::= CommunicationsTopic ;
 Topic ::= PowerlineTransmissionTopic ;
 Topic ::= AntennasTopic ;
 Topic ::= PerformanceTopic ;
 Topic ::= SignalProcessingTopic ;
 Topic ::= MicroelectronicsTopic ;
 Topic ::= TestOnlyTopic ;
 Topic ::= RadioCommunicationsTopic ;
 Topic ::= ComputerArchitectureTopic ;
 Topic ::= MedicineTopic ;
 Topic ::= SecurityTopic ;
 Topic ::= MobileComputingTopic ;
 Topic ::= CryptographyTopic ;
 Topic ::= CommunicationTheoryTopic ;
 Topic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Organizer ::= ε ;
WelcomeTalk ::= ε ;
SocialEvent ::= Excursion ;
 SocialEvent ::= Reception ;
 SocialEvent ::= Excursion | Reception ;
Account ::= registred_by::Person ;
Publication ::= Cd_proceening ;
 Publication ::= Book_proceeding ;
 Publication ::= Cd_proceening | Book_proceeding ;
ContactInformation ::= hasCity::String hasStreet::String hasPostalCode::String hasPhone::String ;
Misc ::= ε ;
ComputerNetworksAapplicationsTopic ::= ε ;
Boolean ::= "true" | "false" ;
FreeTimeBreak ::= ε ;
ActivePaper ::= RatedPapers ;
 ActivePaper ::= hasRating::ReviewRating ;
AcceptedPaper ::= relatedToEvent::PaperPresentation ;
Van ::= ε ;
TravelGrant ::= providedBy::Organization hasCostCurrency::String hasCostAmount::Integer ;
Simulating ::= ε ;
--------------------metamodels::ifc2x3.bgf--------------------
IfcFlowStorageDevice ::= ε ;
IfcSoundProperties ::= IsAttenuating::α SoundScale::α SoundValues::α ;
IfcStructuralLoadSingleForce ::= ForceX::α ForceY::α ForceZ::α MomentX::α MomentY::α MomentZ::α ;
IfcRamp ::= ShapeType::α ;
IfcArithmeticOperatorEnum ::= (SUBTRACT::ε) | (MULTIPLY::ε) | (DIVIDE::ε) | (ADD::ε) ;
IfcHeatExchangerTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SHELLANDTUBE::ε) | (PLATE::ε) ;
IfcBuildingStorey ::= Elevation::α ;
IfcElectricalBaseProperties ::= ElectricCurrentType::α InputVoltage::α InputFrequency::α FullLoadCurrent::α MinimumCircuitCurrent::α MaximumPowerInput::α RatedPowerInput::α InputPhase::α ;
IfcOrganizationRelationship ::= Name::α Description::α RelatingOrganization::α (RelatedOrganizations::α)+ ;
IfcPlate ::= ε ;
IfcAsymmetricIShapeProfileDef ::= TopFlangeWidth::α TopFlangeThickness::α TopFlangeFilletRadius::α CentreOfGravityInY::α ;
IfcTShapeProfileDef ::= Depth::α FlangeWidth::α WebThickness::α FlangeThickness::α FilletRadius::α FlangeEdgeRadius::α WebEdgeRadius::α WebSlope::α FlangeSlope::α CentreOfGravityInY::α ;
IfcFuelProperties ::= CombustionTemperature::α CarbonContent::α LowerHeatingValue::α HigherHeatingValue::α ;
IfcQuantityVolume ::= VolumeValue::α ;
IfcRelSchedulesCostItems ::= ε ;
IfcDraughtingPreDefinedColour ::= ε ;
IfcValveTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (STOPCOCK::ε) | (STEAMTRAP::ε) | (SAFETYCUTOFF::ε) | (REGULATING::ε) | (PRESSURERELIEF::ε) | (PRESSUREREDUCING::ε) | (MIXING::ε) | (ISOLATING::ε) | (GASTAP::ε) | (GASCOCK::ε) | (FLUSHING::ε) | (FAUCET::ε) | (DOUBLEREGULATING::ε) | (DOUBLECHECK::ε) | (DRAWOFFCOCK::ε) | (DIVERTING::ε) | (COMMISSIONING::ε) | (CHECK::ε) | (CHANGEOVER::ε) | (ANTIVACUUM::ε) | (AIRRELEASE::ε) ;
IfcShellBasedSurfaceModel ::= (SbsmBoundary::α)+ ;
IfcConstructionResource ::= ResourceIdentifier::α ResourceGroup::α ResourceConsumption::α BaseQuantity::α ;
IfcActorRole ::= Role::α UserDefinedRole::α Description::α ;
IfcRoundedRectangleProfileDef ::= RoundingRadius::α ;
IfcDistributionChamberElementType ::= PredefinedType::α ;
IfcWorkControlTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (PLANNED::ε) | (BASELINE::ε) | (ACTUAL::ε) ;
IfcDerivedUnitElement ::= Unit::α Exponent::α ;
IfcQuantityTime ::= TimeValue::α ;
IfcChamferEdgeFeature ::= Width::α Height::α ;
IfcDefinedSymbol ::= Definition::α Target::α ;
IfcCsgSolid ::= TreeRootExpression::α ;
IfcLine ::= Pnt::α Dir::α ;
IfcTextPath ::= (DOWN::ε) | (UP::ε) | (RIGHT::ε) | (LEFT::ε) ;
IfcUnitAssignment ::= (Units::α)+ ;
IfcMetricValueSelect ::= IfcDateTimeSelectvalue::α IfcTextvalue::α IfcCostValuevalue::α IfcTimeSeriesvalue::α IfcTablevalue::α IfcMeasureWithUnitvalue::α ;
IfcStructuralPlanarAction ::= ProjectedOrTrue::α ;
IfcRelConnectsStructuralMember ::= RelatingStructuralMember::α RelatedStructuralConnection::α AppliedCondition::α AdditionalConditions::α ConditionCoordinateSystem::α SupportedLength::α ;
IfcEdgeFeature ::= FeatureLength::α ;
IfcSectionProperties ::= StartProfile::α EndProfile::α SectionType::α ;
IfcFlowController ::= ε ;
IfcDiscreteAccessoryType ::= ε ;
IfcDamperType ::= PredefinedType::α ;
IfcRelAssociatesApproval ::= RelatingApproval::α ;
IfcAsset ::= OriginalValue::α CurrentValue::α TotalReplacementCost::α Owner::α User::α ResponsiblePerson::α IncorporationDate::α DepreciatedValue::α AssetID::α ;
IfcPumpTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (VERTICALTURBINE::ε) | (VERTICALINLINE::ε) | (SPLITCASE::ε) | (ENDSUCTION::ε) | (CIRCULATOR::ε) ;
IfcAddressTypeEnum ::= (USERDEFINED::ε) | (DISTRIBUTIONPOINT::ε) | (HOME::ε) | (SITE::ε) | (OFFICE::ε) ;
IfcTopologicalRepresentationItem ::= ε ;
IfcStructuralLoad ::= Name::α ;
IfcRelOverridesProperties ::= (OverridingProperties::α)+ ;
IfcRectangleProfileDef ::= XDim::α YDim::α ;
IfcRailingType ::= PredefinedType::α ;
IfcVibrationIsolatorType ::= PredefinedType::α ;
IfcSizeSelect ::= IfcPositiveRatioMeasurevalue::α IfcNormalisedRatioMeasurevalue::α IfcPositiveLengthMeasurevalue::α IfcDescriptiveMeasurevalue::α IfcLengthMeasurevalue::α IfcRatioMeasurevalue::α ;
IfcAnalysisTheoryTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (FULL_NONLINEAR_THEORY::ε) | (THIRD_ORDER_THEORY::ε) | (SECOND_ORDER_THEORY::ε) | (FIRST_ORDER_THEORY::ε) ;
IfcBSplineCurve ::= Degree::α CurveForm::α ClosedCurve::α SelfIntersect::α ControlPointsList::α ;
IfcTimeSeriesSchedule ::= (ApplicableDates::α)+ TimeSeries::α TimeSeriesScheduleType::α ;
IfcSweptAreaSolid ::= SweptArea::α Position::α ;
IfcSurfaceStyleRefraction ::= RefractionIndex::α DispersionFactor::α ;
IfcTrimmingSelect ::= IfcParameterValuevalue::α IfcCartesianPointvalue::α ;
IfcMove ::= MoveFrom::α MoveTo::α (PunchList::α)+ ;
IfcQuantityLength ::= LengthValue::α ;
IfcControl ::= Controls::α ;
IfcLibraryReference ::= ReferenceIntoLibrary::α ;
IfcBoundedSurface ::= ε ;
IfcPreDefinedDimensionSymbol ::= ε ;
IfcFlowTerminal ::= ε ;
IfcFlowMeterType ::= PredefinedType::α ;
IfcOpticalMaterialProperties ::= VisibleTransmittance::α SolarTransmittance::α ThermalIrTransmittance::α ThermalIrEmissivityBack::α ThermalIrEmissivityFront::α VisibleReflectanceBack::α VisibleReflectanceFront::α SolarReflectanceFront::α SolarReflectanceBack::α ;
IfcEvaporativeCoolerType ::= PredefinedType::α ;
IfcPerformanceHistory ::= LifeCyclePhase::α ;
IfcVector ::= Orientation::α Magnitude::α ;
IfcResourceConsumptionEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (NOTOCCUPIED::ε) | (PARTIALLYOCCUPIED::ε) | (OCCUPIED::ε) | (NOTCONSUMED::ε) | (PARTIALLYCONSUMED::ε) | (CONSUMED::ε) ;
IfcRelConnectsWithRealizingElements ::= (RealizingElements::α)+ ConnectionType::α ;
IfcPropertySet ::= (HasProperties::α)+ ;
IfcChillerTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (HEATRECOVERY::ε) | (WATERCOOLED::ε) | (AIRCOOLED::ε) ;
IfcBSplineCurveForm ::= (UNSPECIFIED::ε) | (HYPERBOLIC_ARC::ε) | (PARABOLIC_ARC::ε) | (ELLIPTIC_ARC::ε) | (CIRCULAR_ARC::ε) | (POLYLINE_FORM::ε) ;
IfcAlarmTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (WHISTLE::ε) | (SIREN::ε) | (MANUALPULLBOX::ε) | (LIGHT::ε) | (BREAKGLASSBUTTON::ε) | (BELL::ε) ;
IfcVertexPoint ::= VertexGeometry::α ;
IfcStructuralPointAction ::= ε ;
IfcExternallyDefinedSymbol ::= ε ;
IfcSurfaceCurveSweptAreaSolid ::= StartParam::α EndParam::α Directrix::α ReferenceSurface::α ;
IfcLightSourcePositional ::= Radius::α ConstantAttenuation::α DistanceAttenuation::α QuadricAttenuation::α Position::α ;
IfcSlabTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (BASESLAB::ε) | (LANDING::ε) | (ROOF::ε) | (FLOOR::ε) ;
IfcContextDependentUnit ::= Name::α ;
IfcBuilding ::= ElevationOfRefHeight::α ElevationOfTerrain::α BuildingAddress::α ;
IfcStructuralLoadStatic ::= ε ;
IfcRelConnectsPorts ::= RelatingPort::α RelatedPort::α RealizingElement::α ;
IfcBeam ::= ε ;
IfcFlowTreatmentDeviceType ::= ε ;
IfcDoor ::= OverallHeight::α OverallWidth::α ;
IfcDuctSilencerType ::= PredefinedType::α ;
IfcZone ::= ε ;
IfcDimensionCurve ::= ε ;
IfcCableCarrierSegmentTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (CONDUITSEGMENT::ε) | (CABLETRUNKINGSEGMENT::ε) | (CABLETRAYSEGMENT::ε) | (CABLELADDERSEGMENT::ε) ;
IfcStructuralReaction ::= Causes::α ;
IfcFeatureElement ::= ε ;
IfcElectricGeneratorTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) ;
IfcDoorStyleOperationEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (ROLLINGUP::ε) | (REVOLVING::ε) | (DOUBLE_DOOR_FOLDING::ε) | (FOLDING_TO_RIGHT::ε) | (FOLDING_TO_LEFT::ε) | (DOUBLE_DOOR_SLIDING::ε) | (SLIDING_TO_RIGHT::ε) | (SLIDING_TO_LEFT::ε) | (DOUBLE_DOOR_DOUBLE_SWING::ε) | (DOUBLE_SWING_RIGHT::ε) | (DOUBLE_SWING_LEFT::ε) | (DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT::ε) | (DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT::ε) | (DOUBLE_DOOR_SINGLE_SWING::ε) | (SINGLE_SWING_RIGHT::ε) | (SINGLE_SWING_LEFT::ε) ;
IfcFillAreaStyleTileSymbolWithStyle ::= Symbol::α ;
IfcProjectionElement ::= ε ;
IfcProductDefinitionShape ::= HasShapeAspects::α ;
IfcPostalAddress ::= InternalLocation::α (AddressLines::α)+ PostalBox::α Town::α Region::α PostalCode::α Country::α ;
IfcTopologyRepresentation ::= ε ;
IfcStructuralConnection ::= ConnectsStructuralMembers::α AppliedCondition::α ;
IfcFlowSegment ::= ε ;
IfcRoleEnum ::= (USERDEFINED::ε) | (RESELLER::ε) | (FIELDCONSTRUCTIONMANAGER::ε) | (CONSTRUCTIONMANAGER::ε) | (CONSULTANT::ε) | (OWNER::ε) | (ENGINEER::ε) | (COMISSIONINGENGINEER::ε) | (CIVILENGINEER::ε) | (FACILITIESMANAGER::ε) | (PROJECTMANAGER::ε) | (ELECTRICALENGINEER::ε) | (MECHANICALENGINEER::ε) | (BUILDINGOPERATOR::ε) | (BUILDINGOWNER::ε) | (CLIENT::ε) | (COSTENGINEER::ε) | (STRUCTURALENGINEER::ε) | (ARCHITECT::ε) | (SUBCONTRACTOR::ε) | (CONTRACTOR::ε) | (MANUFACTURER::ε) | (SUPPLIER::ε) ;
IfcPipeSegmentTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SPOOL::ε) | (GUTTER::ε) | (RIGIDSEGMENT::ε) | (FLEXIBLESEGMENT::ε) ;
IfcSlabType ::= PredefinedType::α ;
IfcPhysicalSimpleQuantity ::= Unit::α ;
IfcFlowMovingDevice ::= ε ;
IfcDoorLiningProperties ::= LiningDepth::α LiningThickness::α ThresholdDepth::α ThresholdThickness::α TransomThickness::α TransomOffset::α LiningOffset::α ThresholdOffset::α CasingThickness::α CasingDepth::α ShapeAspectStyle::α ;
IfcCableSegmentType ::= PredefinedType::α ;
IfcRampTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SPIRAL_RAMP::ε) | (HALF_TURN_RAMP::ε) | (TWO_QUARTER_TURN_RAMP::ε) | (QUARTER_TURN_RAMP::ε) | (TWO_STRAIGHT_RUN_RAMP::ε) | (STRAIGHT_RUN_RAMP::ε) ;
IfcRelFlowControlElements ::= (RelatedControlElements::α)+ RelatingFlowElement::α ;
IfcInternalOrExternalEnum ::= (NOTDEFINED::ε) | (EXTERNAL::ε) | (INTERNAL::ε) ;
IfcRelAssignsToControl ::= RelatingControl::α ;
IfcShapeModel ::= OfShapeAspect::α ;
IfcRelAssociatesClassification ::= RelatingClassification::α ;
IfcPlateTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SHEET::ε) | (CURTAIN_PANEL::ε) ;
IfcProjectedOrTrueLengthEnum ::= (TRUE_LENGTH::ε) | (PROJECTED_LENGTH::ε) ;
IfcElectricGeneratorType ::= PredefinedType::α ;
IfcCostSchedule ::= Status::α ID::α PredefinedType::α SubmittedBy::α PreparedBy::α SubmittedOn::α (TargetUsers::α)+ UpdateDate::α ;
IfcSpecularHighlightSelect ::= IfcSpecularRoughnessvalue::α IfcSpecularExponentvalue::α ;
IfcVibrationIsolatorTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SPRING::ε) | (COMPRESSION::ε) ;
IfcColourOrFactor ::= IfcNormalisedRatioMeasurevalue::α IfcColourRgbvalue::α ;
IfcStyleModel ::= ε ;
IfcPropertyTableValue ::= (DefiningValues::α)+ (DefinedValues::α)+ DefiningUnit::α DefinedUnit::α Expression::α ;
IfcActuatorTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (THERMOSTATICACTUATOR::ε) | (PNEUMATICACTUATOR::ε) | (HYDRAULICACTUATOR::ε) | (HANDOPERATEDACTUATOR::ε) | (ELECTRICACTUATOR::ε) ;
IfcPresentationLayerWithStyle ::= LayerOn::α LayerFrozen::α LayerBlocked::α (LayerStyles::α)+ ;
IfcIShapeProfileDef ::= OverallWidth::α OverallDepth::α WebThickness::α FlangeThickness::α FilletRadius::α ;
IfcFilterTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (WATERFILTER::ε) | (STRAINER::ε) | (OILFILTER::ε) | (ODORFILTER::ε) | (AIRPARTICLEFILTER::ε) ;
IfcFlowSegmentType ::= ε ;
IfcGroup ::= IsGroupedBy::α ;
IfcDirection ::= DirectionRatios::α ;
IfcCooledBeamTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (PASSIVE::ε) | (ACTIVE::ε) ;
IfcServiceLifeFactorTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (G_MAINTENANCELEVEL::ε) | (F_INUSECONDITIONS::ε) | (E_OUTDOORENVIRONMENT::ε) | (D_INDOORENVIRONMENT::ε) | (C_WORKEXECUTIONLEVEL::ε) | (B_DESIGNLEVEL::ε) | (A_QUALITYOFCOMPONENTS::ε) ;
IfcPolygonalBoundedHalfSpace ::= Position::α PolygonalBoundary::α ;
IfcRectangleHollowProfileDef ::= WallThickness::α InnerFilletRadius::α OuterFilletRadius::α ;
IfcCoilType ::= PredefinedType::α ;
IfcMappedItem ::= MappingSource::α MappingTarget::α ;
IfcAirToAirHeatRecoveryTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (THERMOSIPHONCOILTYPEHEATEXCHANGERS::ε) | (THERMOSIPHONSEALEDTUBEHEATEXCHANGERS::ε) | (TWINTOWERENTHALPYRECOVERYLOOPS::ε) | (HEATPIPE::ε) | (RUNAROUNDCOILLOOP::ε) | (ROTARYWHEEL::ε) | (FIXEDPLATEPARALLELFLOWEXCHANGER::ε) | (FIXEDPLATECROSSFLOWEXCHANGER::ε) | (FIXEDPLATECOUNTERFLOWEXCHANGER::ε) ;
IfcPlateType ::= PredefinedType::α ;
IfcQuantityWeight ::= WeightValue::α ;
IfcProduct ::= ReferencedBy::α ObjectPlacement::α Representation::α ReferencedInStructures::α ContainedInStructure::α ;
IfcProxy ::= ProxyType::α Tag::α ;
IfcFanType ::= PredefinedType::α ;
IfcDuctSegmentType ::= PredefinedType::α ;
IfcMaterialLayer ::= LayerThickness::α IsVentilated::α ToMaterialLayerSet::α Material::α ;
IfcMeasureWithUnit ::= ValueComponent::α UnitComponent::α ;
IfcCircleHollowProfileDef ::= WallThickness::α ;
IfcSIUnit ::= Prefix::α Name::α ;
IfcTextStyleTextModel ::= TextAlign::α TextDecoration::α TextTransform::α TextIndent::α LetterSpacing::α WordSpacing::α LineHeight::α ;
IfcStructuralLoadLinearForce ::= LinearForceX::α LinearForceY::α LinearForceZ::α LinearMomentX::α LinearMomentY::α LinearMomentZ::α ;
IfcColourRgb ::= Red::α Green::α Blue::α ;
IfcLampTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TUNGSTENFILAMENT::ε) | (METALHALIDE::ε) | (HIGHPRESSURESODIUM::ε) | (HIGHPRESSUREMERCURY::ε) | (FLUORESCENT::ε) | (COMPACTFLUORESCENT::ε) ;
IfcLaborResource ::= SkillSet::α ;
IfcDimensionExtentUsage ::= (TARGET::ε) | (ORIGIN::ε) ;
IfcGeometricRepresentationSubContext ::= TargetScale::α TargetView::α UserDefinedTargetView::α ParentContext::α ;
IfcPlane ::= ε ;
IfcRelDefinesByType ::= RelatingType::α ;
IfcCircle ::= Radius::α ;
IfcSurfaceTextureEnum ::= (NOTDEFINED::ε) | (TRANSPARENCYMAP::ε) | (TEXTURE::ε) | (SPECULAR::ε) | (SHININESS::ε) | (SELFILLUMINATION::ε) | (REFLECTION::ε) | (OPACITY::ε) | (BUMP::ε) ;
IfcTrapeziumProfileDef ::= BottomXDim::α TopXDim::α YDim::α TopXOffset::α ;
IfcDuctSilencerTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (ROUND::ε) | (RECTANGULAR::ε) | (FLATOVAL::ε) ;
IfcRelAssociatesProfileProperties ::= ProfileOrientation::α RelatingProfileProperties::α ProfileSectionLocation::α ;
IfcDistributionElement ::= ε ;
IfcManifoldSolidBrep ::= Outer::α ;
IfcPropertyBoundedValue ::= UpperBoundValue::α LowerBoundValue::α Unit::α ;
IfcSite ::= RefLatitude::α RefLongitude::α RefElevation::α LandTitleNumber::α SiteAddress::α ;
IfcConstructionMaterialResource ::= (Suppliers::α)+ UsageRatio::α ;
IfcGrid ::= (UAxes::α)+ (VAxes::α)+ (WAxes::α)+ ;
IfcFlowControllerType ::= ε ;
IfcAirToAirHeatRecoveryType ::= PredefinedType::α ;
IfcZShapeProfileDef ::= Depth::α FlangeWidth::α WebThickness::α FlangeThickness::α FilletRadius::α EdgeRadius::α ;
IfcRepresentationMap ::= MapUsage::α MappingOrigin::α MappedRepresentation::α ;
IfcApproval ::= Description::α ApprovalStatus::α ApprovalLevel::α ApprovalQualifier::α Name::α Identifier::α Actors::α IsRelatedWith::α Relates::α ApprovalDateTime::α ;
IfcDistributionFlowElement ::= HasControlElements::α ;
IfcMaterialProperties ::= Material::α ;
IfcProtectiveDeviceType ::= PredefinedType::α ;
IfcOccupantTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TENANT::ε) | (OWNER::ε) | (LETTINGAGENT::ε) | (LESSOR::ε) | (LESSEE::ε) | (ASSIGNOR::ε) | (ASSIGNEE::ε) ;
IfcBoilerType ::= PredefinedType::α ;
IfcConstraintRelationship ::= Name::α Description::α RelatingConstraint::α (RelatedConstraints::α)+ ;
IfcOrganization ::= Id::α Name::α Description::α IsRelatedBy::α Relates::α Engages::α (Roles::α)+ (Addresses::α)+ ;
IfcSpaceHeaterTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (UNITHEATER::ε) | (FINNEDTUBEUNIT::ε) | (BASEBOARDHEATER::ε) | (CONVECTOR::ε) | (TUBULARRADIATOR::ε) | (PANELRADIATOR::ε) | (SECTIONALRADIATOR::ε) ;
IfcColumnType ::= PredefinedType::α ;
IfcMechanicalConcreteMaterialProperties ::= CompressiveStrength::α MaxAggregateSize::α AdmixturesDescription::α Workability::α ProtectivePoreRatio::α WaterImpermeability::α ;
IfcDateAndTime ::= DateComponent::α TimeComponent::α ;
IfcFooting ::= PredefinedType::α ;
IfcCartesianPoint ::= Coordinates::α ;
IfcCompositeCurve ::= (Segments::α)+ SelfIntersect::α ;
IfcChangeActionEnum ::= (MODIFIEDDELETED::ε) | (MODIFIEDADDED::ε) | (DELETED::ε) | (ADDED::ε) | (MODIFIED::ε) | (NOCHANGE::ε) ;
IfcCraneRailFShapeProfileDef ::= OverallHeight::α HeadWidth::α Radius::α HeadDepth2::α HeadDepth3::α WebThickness::α BaseDepth1::α BaseDepth2::α CentreOfGravityInY::α ;
IfcTimeSeries ::= Name::α Description::α TimeSeriesDataType::α DataOrigin::α UserDefinedDataOrigin::α DocumentedBy::α StartTime::α EndTime::α Unit::α ;
IfcFlowTerminalType ::= ε ;
IfcReinforcingBar ::= NominalDiameter::α CrossSectionArea::α BarLength::α BarRole::α BarSurface::α ;
IfcTubeBundleTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (FINNED::ε) ;
IfcSurface ::= ε ;
IfcSectionReinforcementProperties ::= LongitudinalStartPosition::α LongitudinalEndPosition::α TransversePosition::α ReinforcementRole::α SectionDefinition::α (CrossSectionReinforcementDefinitions::α)+ ;
IfcRelAssignsToProduct ::= RelatingProduct::α ;
IfcStructuralLoadSingleForceWarping ::= WarpingMoment::α ;
IfcComplexProperty ::= (HasProperties::α)+ UsageName::α ;
IfcElementarySurface ::= Position::α ;
IfcPropertyListValue ::= (ListValues::α)+ Unit::α ;
IfcConic ::= Position::α ;
IfcRelConnectsElements ::= ConnectionGeometry::α RelatingElement::α RelatedElement::α ;
IfcThermalLoadTypeEnum ::= (NOTDEFINED::ε) | (RADIANT::ε) | (LATENT::ε) | (SENSIBLE::ε) ;
IfcRoundedEdgeFeature ::= Radius::α ;
IfcReinforcingElement ::= SteelGrade::α ;
IfcRibPlateDirectionEnum ::= (DIRECTION_Y::ε) | (DIRECTION_X::ε) ;
IfcTransformerTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (VOLTAGE::ε) | (FREQUENCY::ε) | (CURRENT::ε) ;
IfcStairFlightTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (FREEFORM::ε) | (CURVED::ε) | (SPIRAL::ε) | (WINDER::ε) | (STRAIGHT::ε) ;
IfcOutletTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (POWEROUTLET::ε) | (COMMUNICATIONSOUTLET::ε) | (AUDIOVISUALOUTLET::ε) ;
IfcFireSuppressionTerminalType ::= PredefinedType::α ;
IfcSurfaceStyle ::= Styles::α Side::α ;
IfcOpeningElement ::= HasFillings::α ;
IfcRelAggregates ::= ε ;
IfcEdgeLoop ::= (EdgeList::α)+ ;
IfcCurveStyleFontAndScaling ::= Name::α CurveFontScaling::α CurveFont::α ;
IfcAirTerminalBoxTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (VARIABLEFLOWPRESSUREINDEPENDANT::ε) | (VARIABLEFLOWPRESSUREDEPENDANT::ε) | (CONSTANTFLOW::ε) ;
IfcRepresentationItem ::= StyledByItem::α ;
IfcBuildingElementProxyType ::= PredefinedType::α ;
IfcRailingTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (BALUSTRADE::ε) | (GUARDRAIL::ε) | (HANDRAIL::ε) ;
IfcBoundingBox ::= XDim::α YDim::α ZDim::α Corner::α ;
IfcCompositeProfileDef ::= Profiles::α Label::α ;
IfcCableCarrierFittingTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TEE::ε) | (REDUCER::ε) | (CROSS::ε) | (BEND::ε) ;
IfcPipeSegmentType ::= PredefinedType::α ;
IfcLibraryInformation ::= Name::α Version::α Publisher::α VersionDate::α (LibraryReference::α)+ ;
IfcConnectionGeometry ::= ε ;
IfcFlowMovingDeviceType ::= ε ;
IfcExternallyDefinedSurfaceStyle ::= ε ;
IfcActor ::= IsActingUpon::α TheActor::α ;
IfcEvaporativeCoolerTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (INDIRECTDIRECTCOMBINATION::ε) | (INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER::ε) | (INDIRECTEVAPORATIVEWETCOIL::ε) | (INDIRECTEVAPORATIVEPACKAGEAIRCOOLER::ε) | (DIRECTEVAPORATIVEAIRWASHER::ε) | (DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER::ε) | (DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER::ε) | (DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER::ε) | (DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER::ε) ;
IfcTextureCoordinate ::= AnnotatedSurface::α ;
IfcFlowFitting ::= ε ;
IfcPlanarExtent ::= SizeInX::α SizeInY::α ;
IfcGeometricRepresentationContext ::= CoordinateSpaceDimension::α Precision::α HasSubContexts::α WorldCoordinateSystem::α TrueNorth::α ;
IfcPipeFittingTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TRANSITION::ε) | (OBSTRUCTION::ε) | (JUNCTION::ε) | (EXIT::ε) | (ENTRY::ε) | (CONNECTOR::ε) | (BEND::ε) ;
IfcTerminatorSymbol ::= AnnotatedCurve::α ;
IfcTelecomAddress ::= (TelephoneNumbers::α)+ (FacsimileNumbers::α)+ PagerNumber::α (ElectronicMailAddresses::α)+ WWWHomePageURL::α ;
IfcSurfaceStyleRendering ::= Transparency::α ReflectanceMethod::α DiffuseColour::α TransmissionColour::α DiffuseTransmissionColour::α ReflectionColour::α SpecularColour::α SpecularHighlight::α ;
IfcStructuredDimensionCallout ::= ε ;
IfcWorkPlan ::= ε ;
IfcObjectPlacement ::= PlacesObject::α ReferencedByPlacements::α ;
IfcPlacement ::= Location::α ;
IfcAirTerminalTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (LINEARDIFFUSER::ε) | (LINEARGRILLE::ε) | (IRIS::ε) | (EYEBALL::ε) | (DIFFUSER::ε) | (REGISTER::ε) | (GRILLE::ε) ;
IfcProperty ::= Name::α Description::α PropertyForDependance::α PropertyDependsOn::α PartOfComplex::α ;
IfcConversionBasedUnit ::= ConversionFactor::α Name::α ;
IfcActuatorType ::= PredefinedType::α ;
IfcConnectionPointEccentricity ::= EccentricityInX::α EccentricityInY::α EccentricityInZ::α ;
IfcLightEmissionSourceEnum ::= (NOTDEFINED::ε) | (TUNGSTENFILAMENT::ε) | (METALHALIDE::ε) | (MAINVOLTAGEHALOGEN::ε) | (LOWVOLTAGEHALOGEN::ε) | (LOWPRESSURESODIUM::ε) | (LIGHTEMITTINGDIODE::ε) | (HIGHPRESSURESODIUM::ε) | (HIGHPRESSUREMERCURY::ε) | (FLUORESCENT::ε) | (COMPACTFLUORESCENT::ε) ;
IfcInventoryTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (FURNITUREINVENTORY::ε) | (SPACEINVENTORY::ε) | (ASSETINVENTORY::ε) ;
IfcRelAssociatesMaterial ::= RelatingMaterial::α ;
IfcWorkSchedule ::= ε ;
IfcProcedure ::= ProcedureID::α ProcedureType::α UserDefinedProcedureType::α ;
IfcRightCircularCylinder ::= Height::α Radius::α ;
IfcPileConstructionEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (PREFAB_STEEL::ε) | (PRECAST_CONCRETE::ε) | (COMPOSITE::ε) | (CAST_IN_PLACE::ε) ;
IfcApplication ::= Version::α ApplicationFullName::α ApplicationIdentifier::α ApplicationDeveloper::α ;
IfcBezierCurve ::= ε ;
IfcFurnitureStandard ::= ε ;
IfcPumpType ::= PredefinedType::α ;
IfcFeatureElementAddition ::= ProjectsElements::α ;
IfcMechanicalFastener ::= NominalDiameter::α NominalLength::α ;
IfcPolyline ::= Points::α ;
IfcRelDefines ::= (RelatedObjects::α)+ ;
IfcSolidModel ::= ε ;
IfcRelAssociatesDocument ::= RelatingDocument::α ;
IfcOccupant ::= PredefinedType::α ;
IfcDraughtingPreDefinedCurveFont ::= ε ;
IfcBooleanClippingResult ::= ε ;
IfcGlobalOrLocalEnum ::= (LOCAL_COORDS::ε) | (GLOBAL_COORDS::ε) ;
IfcConnectionCurveGeometry ::= CurveOnRelatingElement::α CurveOnRelatedElement::α ;
IfcRationalBezierCurve ::= WeightsData::α ;
IfcElectricalCircuit ::= ε ;
IfcDerivedUnit ::= UnitType::α UserDefinedType::α (Elements::α)+ ;
IfcStructuralConnectionCondition ::= Name::α ;
IfcAirTerminalType ::= PredefinedType::α ;
IfcCurrencyEnum ::= (NOK::ε) | (ZWD::ε) | (ZAR::ε) | (XEU::ε) | (VND::ε) | (VEB::ε) | (USD::ε) | (TWD::ε) | (TTD::ε) | (TRL::ε) | (THB::ε) | (SKP::ε) | (SGD::ε) | (SEK::ε) | (SCR::ε) | (SAR::ε) | (RUR::ε) | (QAR::ε) | (PTN::ε) | (PLN::ε) | (PKR::ε) | (PHP::ε) | (PGK::ε) | (OMR::ε) | (NZD::ε) | (NLG::ε) | (MYR::ε) | (MXN::ε) | (MUR::ε) | (MTL::ε) | (LUF::ε) | (LKR::ε) | (KYD::ε) | (KWD::ε) | (KRW::ε) | (KES::ε) | (JPY::ε) | (JOD::ε) | (JMD::ε) | (ITL::ε) | (IRP::ε) | (INR::ε) | (ILS::ε) | (IDR::ε) | (ICK::ε) | (HUF::ε) | (HKD::ε) | (GRX::ε) | (GMD::ε) | (GIP::ε) | (GBP::ε) | (FRF::ε) | (FKP::ε) | (FJD::ε) | (FIM::ε) | (FAK::ε) | (EUR::ε) | (EST::ε) | (EGL::ε) | (DKK::ε) | (DEM::ε) | (DDP::ε) | (CZK::ε) | (CYS::ε) | (CNY::ε) | (CLP::ε) | (CHF::ε) | (CBD::ε) | (CAD::ε) | (BZD::ε) | (BWP::ε) | (BSD::ε) | (BRL::ε) | (BND::ε) | (BMD::ε) | (BHD::ε) | (BGL::ε) | (BEG::ε) | (BBD::ε) | (AUD::ε) | (ATS::ε) | (AES::ε) | (AED::ε) ;
IfcPropertyEnumeratedValue ::= (EnumerationValues::α)+ EnumerationReference::α ;
IfcAnnotation ::= ε ;
IfcDraughtingCalloutRelationship ::= Name::α Description::α RelatingDraughtingCallout::α RelatedDraughtingCallout::α ;
IfcSweptSurface ::= SweptCurve::α Position::α ;
IfcElectricMotorType ::= PredefinedType::α ;
IfcTrimmedCurve ::= SenseAgreement::α MasterRepresentation::α Trim1::α Trim2::α BasisCurve::α ;
IfcFillAreaStyleTiles ::= TilingPattern::α (Tiles::α)+ TilingScale::α ;
IfcLoop ::= ε ;
IfcRampFlight ::= ε ;
IfcTextureCoordinateGenerator ::= (Parameter::α)+ Mode::α ;
IfcPointOnSurface ::= PointParameterU::α PointParameterV::α BasisSurface::α ;
IfcPermit ::= PermitID::α ;
IfcMechanicalFastenerType ::= ε ;
IfcTypeObject ::= ObjectTypeOf::α (HasPropertySets::α)+ ApplicableOccurrence::α ;
IfcPreDefinedItem ::= Name::α ;
IfcMaterialLayerSet ::= (MaterialLayers::α)+ LayerSetName::α ;
IfcFillAreaStyleHatching ::= StartOfNextHatchLine::α HatchLineAppearance::α PointOfReferenceHatchLine::α PatternStart::α HatchLineAngle::α ;
IfcDoorStyle ::= OperationType::α ConstructionType::α ParameterTakesPrecedence::α Sizeable::α ;
IfcRelCoversSpaces ::= RelatedSpace::α (RelatedCoverings::α)+ ;
IfcSanitaryTerminalTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (WCSEAT::ε) | (WASHHANDBASIN::ε) | (URINAL::ε) | (TOILETPAN::ε) | (SANITARYFOUNTAIN::ε) | (SINK::ε) | (SHOWER::ε) | (CISTERN::ε) | (BIDET::ε) | (BATH::ε) ;
IfcTransportElement ::= OperationType::α CapacityByWeight::α CapacityByNumber::α ;
IfcDimensionalExponents ::= LengthExponent::α MassExponent::α TimeExponent::α ElectricCurrentExponent::α ThermodynamicTemperatureExponent::α AmountOfSubstanceExponent::α LuminousIntensityExponent::α ;
IfcBenchmarkEnum ::= (NOTEQUALTO::ε) | (EQUALTO::ε) | (LESSTHANOREQUALTO::ε) | (LESSTHAN::ε) | (GREATERTHANOREQUALTO::ε) | (GREATERTHAN::ε) ;
IfcDirectionSenseEnum ::= (NEGATIVE::ε) | (POSITIVE::ε) ;
IfcAppliedValueSelect ::= IfcMonetaryMeasurevalue::α IfcRatioMeasurevalue::α IfcMeasureWithUnitvalue::α ;
IfcCrewResource ::= ε ;
IfcEnergyConversionDeviceType ::= ε ;
IfcStairFlight ::= NumberOfRiser::α NumberOfTreads::α RiserHeight::α TreadLength::α ;
IfcDamperTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (FUMEHOODEXHAUST::ε) | (BALANCINGDAMPER::ε) | (GRAVITYRELIEFDAMPER::ε) | (GRAVITYDAMPER::ε) | (BLASTDAMPER::ε) | (RELIEFDAMPER::ε) | (BACKDRAFTDAMPER::ε) | (FIRESMOKEDAMPER::ε) | (SMOKEDAMPER::ε) | (FIREDAMPER::ε) | (CONTROLDAMPER::ε) ;
IfcPropertyDefinition ::= ε ;
IfcTendon ::= PredefinedType::α NominalDiameter::α CrossSectionArea::α TensionForce::α PreStress::α FrictionCoefficient::α AnchorageSlip::α MinCurvatureRadius::α ;
IfcStructuralCurveConnection ::= ε ;
IfcPoint ::= ε ;
IfcStructuralLoadPlanarForce ::= PlanarForceX::α PlanarForceY::α PlanarForceZ::α ;
IfcPermeableCoveringProperties ::= OperationType::α PanelPosition::α FrameDepth::α FrameThickness::α ShapeAspectStyle::α ;
IfcMotorConnectionType ::= PredefinedType::α ;
IfcExternallyDefinedTextFont ::= ε ;
IfcWorkControl ::= Identifier::α Purpose::α Duration::α TotalFloat::α WorkControlType::α UserDefinedControlType::α CreationDate::α (Creators::α)+ StartTime::α FinishTime::α ;
IfcConstructionProductResource ::= ε ;
IfcAnnotationFillArea ::= OuterBoundary::α (InnerBoundaries::α)+ ;
IfcReferencesValueDocument ::= Name::α Description::α ReferencedDocument::α (ReferencingValues::α)+ ;
IfcLightDistributionData ::= MainPlaneAngle::α (SecondaryPlaneAngle::α)+ (LuminousIntensity::α)+ ;
IfcFastener ::= ε ;
IfcSubedge ::= ParentEdge::α ;
IfcWindow ::= OverallHeight::α OverallWidth::α ;
IfcActionRequest ::= RequestID::α ;
IfcCurtainWallTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) ;
IfcTextStyleWithBoxCharacteristics ::= BoxHeight::α BoxWidth::α BoxSlantAngle::α BoxRotateAngle::α CharacterSpacing::α ;
IfcRelInteractionRequirements ::= DailyInteraction::α ImportanceRating::α LocationOfInteraction::α RelatedSpaceProgram::α RelatingSpaceProgram::α ;
IfcAddress ::= Purpose::α Description::α UserDefinedPurpose::α OfPerson::α OfOrganization::α ;
IfcValue ::= IfcAbsorbedDoseMeasurevalue::α IfcAccelerationMeasurevalue::α IfcAmountOfSubstanceMeasurevalue::α IfcAngularVelocityMeasurevalue::α IfcAreaMeasurevalue::α IfcBooleanvalue::α IfcContextDependentMeasurevalue::α IfcCountMeasurevalue::α IfcCurvatureMeasurevalue::α IfcDescriptiveMeasurevalue::α IfcDoseEquivalentMeasurevalue::α IfcDynamicViscosityMeasurevalue::α IfcElectricCapacitanceMeasurevalue::α IfcElectricChargeMeasurevalue::α IfcElectricConductanceMeasurevalue::α IfcElectricCurrentMeasurevalue::α IfcElectricResistanceMeasurevalue::α IfcElectricVoltageMeasurevalue::α IfcEnergyMeasurevalue::α IfcForceMeasurevalue::α IfcFrequencyMeasurevalue::α IfcHeatFluxDensityMeasurevalue::α IfcHeatingValueMeasurevalue::α IfcIdentifiervalue::α IfcIlluminanceMeasurevalue::α IfcInductanceMeasurevalue::α IfcIntegervalue::α IfcIntegerCountRateMeasurevalue::α IfcIonConcentrationMeasurevalue::α IfcIsothermalMoistureCapacityMeasurevalue::α IfcKinematicViscosityMeasurevalue::α IfcLabelvalue::α IfcPositiveLengthMeasurevalue::α IfcLengthMeasurevalue::α IfcLinearForceMeasurevalue::α IfcLinearMomentMeasurevalue::α IfcLinearStiffnessMeasurevalue::α IfcLinearVelocityMeasurevalue::α IfcLogicalvalue::α IfcLuminousFluxMeasurevalue::α IfcLuminousIntensityDistributionMeasurevalue::α IfcLuminousIntensityMeasurevalue::α IfcMagneticFluxDensityMeasurevalue::α IfcMagneticFluxMeasurevalue::α IfcMassDensityMeasurevalue::α IfcMassFlowRateMeasurevalue::α IfcMassMeasurevalue::α IfcMassPerLengthMeasurevalue::α IfcModulusOfElasticityMeasurevalue::α IfcModulusOfLinearSubgradeReactionMeasurevalue::α IfcModulusOfRotationalSubgradeReactionMeasurevalue::α IfcModulusOfSubgradeReactionMeasurevalue::α IfcMoistureDiffusivityMeasurevalue::α IfcMolecularWeightMeasurevalue::α IfcMomentOfInertiaMeasurevalue::α IfcMonetaryMeasurevalue::α IfcNormalisedRatioMeasurevalue::α IfcNumericMeasurevalue::α IfcPHMeasurevalue::α IfcParameterValuevalue::α IfcPlanarForceMeasurevalue::α IfcPositivePlaneAngleMeasurevalue::α IfcPlaneAngleMeasurevalue::α IfcPositiveRatioMeasurevalue::α IfcPowerMeasurevalue::α IfcPressureMeasurevalue::α IfcRadioActivityMeasurevalue::α IfcRatioMeasurevalue::α IfcRealvalue::α IfcRotationalFrequencyMeasurevalue::α IfcRotationalMassMeasurevalue::α IfcRotationalStiffnessMeasurevalue::α IfcSectionModulusMeasurevalue::α IfcSectionalAreaIntegralMeasurevalue::α IfcShearModulusMeasurevalue::α IfcSolidAngleMeasurevalue::α IfcSoundPowerMeasurevalue::α IfcSoundPressureMeasurevalue::α IfcSpecificHeatCapacityMeasurevalue::α IfcTemperatureGradientMeasurevalue::α IfcTextvalue::α IfcThermalAdmittanceMeasurevalue::α IfcThermalConductivityMeasurevalue::α IfcThermalExpansionCoefficientMeasurevalue::α IfcThermalResistanceMeasurevalue::α IfcThermalTransmittanceMeasurevalue::α IfcThermodynamicTemperatureMeasurevalue::α IfcTimeMeasurevalue::α IfcTimeStampvalue::α IfcTorqueMeasurevalue::α IfcVaporPermeabilityMeasurevalue::α IfcVolumeMeasurevalue::α IfcVolumetricFlowRateMeasurevalue::α IfcWarpingConstantMeasurevalue::α IfcWarpingMomentMeasurevalue::α ;
IfcGasTerminalTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (GASBURNER::ε) | (GASBOOSTER::ε) | (GASAPPLIANCE::ε) ;
IfcDocumentReference ::= ReferenceToDocument::α ;
IfcSequenceEnum ::= (NOTDEFINED::ε) | (FINISH_FINISH::ε) | (FINISH_START::ε) | (START_FINISH::ε) | (START_START::ε) ;
IfcElectricTimeControlTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (RELAY::ε) | (TIMEDELAY::ε) | (TIMECLOCK::ε) ;
IfcGeometricSet ::= (Elements::α)+ ;
IfcLightIntensityDistribution ::= (DistributionData::α)+ LightDistributionCurve::α ;
IfcAnnotationOccurrence ::= ε ;
IfcDocumentInformationRelationship ::= RelatingDocument::α (RelatedDocuments::α)+ RelationshipType::α ;
IfcFace ::= (Bounds::α)+ ;
IfcIrregularTimeSeriesValue ::= (ListValues::α)+ TimeStamp::α ;
IfcHumidifierTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (ASSISTEDSTEAM::ε) | (ASSISTEDBUTANE::ε) | (ASSISTEDPROPANE::ε) | (ASSISTEDNATURALGAS::ε) | (ASSISTEDELECTRIC::ε) | (ADIABATICCOMPRESSEDAIRNOZZLE::ε) | (ADIABATICRIGIDMEDIA::ε) | (ADIABATICULTRASONIC::ε) | (ADIABATICATOMIZING::ε) | (ADIABATICWETTEDELEMENT::ε) | (ADIABATICPAN::ε) | (ADIABATICAIRWASHER::ε) | (STEAMINJECTION::ε) ;
IfcPresentationStyleAssignment ::= (Styles::α)+ ;
IfcHalfSpaceSolid ::= BaseSurface::α AgreementFlag::α ;
IfcConnectionPointGeometry ::= PointOnRelatingElement::α PointOnRelatedElement::α ;
IfcAnnotationSymbolOccurrence ::= ε ;
IfcTimeSeriesScheduleTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (DAILY::ε) | (WEEKLY::ε) | (MONTHLY::ε) | (ANNUAL::ε) ;
IfcDerivedUnitEnum ::= (USERDEFINED::ε) | (WARPINGMOMENTUNIT::ε) | (WARPINGCONSTANTUNIT::ε) | (THERMALEXPANSIONCOEFFICIENTUNIT::ε) | (TEMPERATUREGRADIENTUNIT::ε) | (SOUNDPRESSUREUNIT::ε) | (SOUNDPOWERUNIT::ε) | (SECTIONMODULUSUNIT::ε) | (SECTIONAREAINTEGRALUNIT::ε) | (ROTATIONALMASSUNIT::ε) | (PHUNIT::ε) | (MODULUSOFROTATIONALSUBGRADEREACTIONUNIT::ε) | (MODULUSOFLINEARSUBGRADEREACTIONUNIT::ε) | (MASSPERLENGTHUNIT::ε) | (LUMINOUSINTENSITYDISTRIBUTIONUNIT::ε) | (IONCONCENTRATIONUNIT::ε) | (HEATINGVALUEUNIT::ε) | (CURVATUREUNIT::ε) | (ACCELERATIONUNIT::ε) | (MODULUSOFSUBGRADEREACTIONUNIT::ε) | (ROTATIONALSTIFFNESSUNIT::ε) | (LINEARSTIFFNESSUNIT::ε) | (SHEARMODULUSUNIT::ε) | (MODULUSOFELASTICITYUNIT::ε) | (PLANARFORCEUNIT::ε) | (LINEARFORCEUNIT::ε) | (LINEARMOMENTUNIT::ε) | (MOMENTOFINERTIAUNIT::ε) | (TORQUEUNIT::ε) | (ROTATIONALFREQUENCYUNIT::ε) | (VOLUMETRICFLOWRATEUNIT::ε) | (VAPORPERMEABILITYUNIT::ε) | (THERMALTRANSMITTANCEUNIT::ε) | (THERMALRESISTANCEUNIT::ε) | (THERMALCONDUCTANCEUNIT::ε) | (THERMALADMITTANCEUNIT::ε) | (SPECIFICHEATCAPACITYUNIT::ε) | (MOLECULARWEIGHTUNIT::ε) | (MOISTUREDIFFUSIVITYUNIT::ε) | (MASSFLOWRATEUNIT::ε) | (MASSDENSITYUNIT::ε) | (LINEARVELOCITYUNIT::ε) | (KINEMATICVISCOSITYUNIT::ε) | (ISOTHERMALMOISTURECAPACITYUNIT::ε) | (INTEGERCOUNTRATEUNIT::ε) | (HEATFLUXDENSITYUNIT::ε) | (DYNAMICVISCOSITYUNIT::ε) | (COMPOUNDPLANEANGLEUNIT::ε) | (ANGULARVELOCITYUNIT::ε) ;
IfcEvaporatorTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SHELLANDCOIL::ε) | (FLOODEDSHELLANDTUBE::ε) | (DIRECTEXPANSIONBRAZEDPLATE::ε) | (DIRECTEXPANSIONTUBEINTUBE::ε) | (DIRECTEXPANSIONSHELLANDTUBE::ε) ;
IfcWindowLiningProperties ::= LiningDepth::α LiningThickness::α TransomThickness::α MullionThickness::α FirstTransomOffset::α SecondTransomOffset::α FirstMullionOffset::α SecondMullionOffset::α ShapeAspectStyle::α ;
IfcRegularTimeSeries ::= (Values::α)+ TimeStep::α ;
IfcExtendedMaterialProperties ::= Description::α Name::α (ExtendedProperties::α)+ ;
IfcWindowPanelPositionEnum ::= (NOTDEFINED::ε) | (TOP::ε) | (BOTTOM::ε) | (RIGHT::ε) | (MIDDLE::ε) | (LEFT::ε) ;
IfcPreDefinedColour ::= ε ;
IfcFilterType ::= PredefinedType::α ;
IfcEllipse ::= SemiAxis1::α SemiAxis2::α ;
IfcBoundedCurve ::= ε ;
IfcRoofTypeEnum ::= (NOTDEFINED::ε) | (FREEFORM::ε) | (DOME_ROOF::ε) | (PAVILION_ROOF::ε) | (BUTTERFLY_ROOF::ε) | (RAINBOW_ROOF::ε) | (BARREL_ROOF::ε) | (MANSARD_ROOF::ε) | (GAMBREL_ROOF::ε) | (HIPPED_GABLE_ROOF::ε) | (HIP_ROOF::ε) | (GABLE_ROOF::ε) | (SHED_ROOF::ε) | (FLAT_ROOF::ε) ;
IfcSphere ::= Radius::α ;
IfcRelAssociatesLibrary ::= RelatingLibrary::α ;
IfcHygroscopicMaterialProperties ::= UpperVaporResistanceFactor::α LowerVaporResistanceFactor::α IsothermalMoistureCapacity::α VaporPermeability::α MoistureDiffusivity::α ;
IfcGeometricCurveSet ::= ε ;
IfcPlanarBox ::= Placement::α ;
IfcLightSource ::= Name::α AmbientIntensity::α Intensity::α LightColour::α ;
IfcStructuralAnalysisModel ::= OrientationOf2DPlane::α (LoadedBy::α)+ (HasResults::α)+ PredefinedType::α ;
IfcStructuralLoadSingleDisplacement ::= DisplacementX::α DisplacementY::α DisplacementZ::α RotationalDisplacementRX::α RotationalDisplacementRY::α RotationalDisplacementRZ::α ;
IfcShapeRepresentation ::= ε ;
IfcCurveBoundedPlane ::= BasisSurface::α OuterBoundary::α (InnerBoundaries::α)+ ;
IfcStructuralSurfaceMember ::= PredefinedType::α Thickness::α ;
IfcRelAssignsToProjectOrder ::= ε ;
IfcQuantityCount ::= CountValue::α ;
IfcRelSpaceBoundary ::= PhysicalOrVirtualBoundary::α InternalOrExternalBoundary::α RelatingSpace::α RelatedBuildingElement::α ConnectionGeometry::α ;
IfcDoorPanelOperationEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (ROLLINGUP::ε) | (REVOLVING::ε) | (FOLDING::ε) | (SLIDING::ε) | (DOUBLE_ACTING::ε) | (SWINGING::ε) ;
IfcLampType ::= PredefinedType::α ;
IfcProjectOrderTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (WORKORDER::ε) | (PURCHASEORDER::ε) | (MOVEORDER::ε) | (MAINTENANCEWORKORDER::ε) | (CHANGEORDER::ε) ;
IfcAnnotationFillAreaOccurrence ::= FillStyleTarget::α GlobalOrLocal::α ;
IfcArbitraryClosedProfileDef ::= OuterCurve::α ;
IfcScheduleTimeControl ::= ScheduleDuration::α ActualDuration::α RemainingTime::α FreeFloat::α TotalFloat::α IsCritical::α StartFloat::α FinishFloat::α Completion::α ScheduleTimeControlAssigned::α ActualStart::α EarlyStart::α LateStart::α ScheduleStart::α ActualFinish::α EarlyFinish::α LateFinish::α ScheduleFinish::α StatusTime::α ;
IfcBoundaryNodeConditionWarping ::= WarpingStiffness::α ;
IfcBeamTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (T_BEAM::ε) | (LINTEL::ε) | (JOIST::ε) | (BEAM::ε) ;
IfcDoorStyleConstructionEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (PLASTIC::ε) | (ALUMINIUM_PLASTIC::ε) | (ALUMINIUM_WOOD::ε) | (WOOD::ε) | (STEEL::ε) | (HIGH_GRADE_STEEL::ε) | (ALUMINIUM::ε) ;
IfcSimpleProperty ::= ε ;
IfcMaterial ::= HasRepresentation::α ClassifiedAs::α Name::α ;
IfcPhysicalOrVirtualEnum ::= (NOTDEFINED::ε) | (VIRTUAL::ε) | (PHYSICAL::ε) ;
IfcWasteTerminalTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (WASTETRAP::ε) | (WASTEDISPOSALUNIT::ε) | (ROOFDRAIN::ε) | (PETROLINTERCEPTOR::ε) | (OILINTERCEPTOR::ε) | (GREASEINTERCEPTOR::ε) | (GULLYTRAP::ε) | (GULLYSUMP::ε) | (FLOORWASTE::ε) | (FLOORTRAP::ε) ;
IfcJunctionBoxType ::= PredefinedType::α ;
IfcRibPlateProfileProperties ::= Thickness::α RibHeight::α RibWidth::α RibSpacing::α Direction::α ;
IfcOneDirectionRepeatFactor ::= RepeatFactor::α ;
IfcBoundaryNodeCondition ::= LinearStiffnessX::α LinearStiffnessY::α LinearStiffnessZ::α RotationalStiffnessX::α RotationalStiffnessY::α RotationalStiffnessZ::α ;
IfcRelConnectsStructuralActivity ::= RelatingElement::α RelatedStructuralActivity::α ;
IfcCompressorType ::= PredefinedType::α ;
IfcWaterProperties ::= IsPotable::α Hardness::α AlkalinityConcentration::α AcidityConcentration::α ImpuritiesContent::α PHLevel::α DissolvedSolidsContent::α ;
IfcPreDefinedSymbol ::= ε ;
IfcRampFlightTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SPIRAL::ε) | (STRAIGHT::ε) ;
IfcBuildingElement ::= ε ;
IfcEnvironmentalImpactCategoryEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TRANSPORTATION::ε) | (MANUFACTURE::ε) | (INSTALLATION::ε) | (EXTRACTION::ε) | (DISPOSAL::ε) | (COMBINEDVALUE::ε) ;
IfcElectricHeaterTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (ELECTRICMATHEATER::ε) | (ELECTRICCABLEHEATER::ε) | (ELECTRICPOINTHEATER::ε) ;
IfcSwitchingDeviceTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TOGGLESWITCH::ε) | (SWITCHDISCONNECTOR::ε) | (STARTER::ε) | (EMERGENCYSTOP::ε) | (CONTACTOR::ε) ;
IfcDraughtingPreDefinedTextFont ::= ε ;
IfcStructuralItem ::= ε ;
IfcFlowInstrumentType ::= PredefinedType::α ;
IfcRelContainedInSpatialStructure ::= (RelatedElements::α)+ RelatingStructure::α ;
IfcEllipseProfileDef ::= SemiAxis1::α SemiAxis2::α ;
IfcDiscreteAccessory ::= ε ;
IfcPreDefinedCurveFont ::= ε ;
IfcCalendarDate ::= DayComponent::α MonthComponent::α YearComponent::α ;
IfcCoolingTowerTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (MECHANICALFORCEDDRAFT::ε) | (MECHANICALINDUCEDDRAFT::ε) | (NATURALDRAFT::ε) ;
IfcRelAssigns ::= (RelatedObjects::α)+ RelatedObjectsType::α ;
IfcColourSpecification ::= Name::α ;
IfcLightSourceAmbient ::= ε ;
IfcStyledItem ::= Item::α (Styles::α)+ Name::α ;
IfcUnitaryEquipmentTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (ROOFTOPUNIT::ε) | (SPLITSYSTEM::ε) | (AIRCONDITIONINGUNIT::ε) | (AIRHANDLER::ε) ;
IfcSIUnitName ::= (WEBER::ε) | (WATT::ε) | (VOLT::ε) | (TESLA::ε) | (STERADIAN::ε) | (SQUARE_METRE::ε) | (SIEVERT::ε) | (SIEMENS::ε) | (SECOND::ε) | (RADIAN::ε) | (PASCAL::ε) | (OHM::ε) | (NEWTON::ε) | (MOLE::ε) | (METRE::ε) | (LUX::ε) | (LUMEN::ε) | (KELVIN::ε) | (JOULE::ε) | (HERTZ::ε) | (HENRY::ε) | (GRAY::ε) | (GRAM::ε) | (FARAD::ε) | (DEGREE_CELSIUS::ε) | (CUBIC_METRE::ε) | (COULOMB::ε) | (CANDELA::ε) | (BECQUEREL::ε) | (AMPERE::ε) ;
IfcStructuralLoadTemperature ::= DeltaT_Constant::α DeltaT_Y::α DeltaT_Z::α ;
IfcBoundaryCondition ::= Name::α ;
IfcWasteTerminalType ::= PredefinedType::α ;
IfcDistributionControlElement ::= AssignedToFlowElement::α ControlElementId::α ;
IfcClassificationNotationFacet ::= NotationValue::α ;
IfcTendonTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (COATED::ε) | (BAR::ε) | (WIRE::ε) | (STRAND::ε) ;
IfcStructuralCurveTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (COMPRESSION_MEMBER::ε) | (TENSION_MEMBER::ε) | (CABLE::ε) | (PIN_JOINED_MEMBER::ε) | (RIGID_JOINED_MEMBER::ε) ;
IfcProductsOfCombustionProperties ::= SpecificHeatCapacity::α N20Content::α COContent::α CO2Content::α ;
IfcDuctSegmentTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (FLEXIBLESEGMENT::ε) | (RIGIDSEGMENT::ε) ;
IfcTwoDirectionRepeatFactor ::= SecondRepeatFactor::α ;
IfcRampFlightType ::= PredefinedType::α ;
IfcSpace ::= InteriorOrExteriorSpace::α ElevationWithFlooring::α HasCoverings::α BoundedBy::α ;
IfcOpenShell ::= ε ;
IfcPresentationLayerAssignment ::= Name::α Description::α Identifier::α (AssignedItems::α)+ ;
IfcPhysicalComplexQuantity ::= Discrimination::α Quality::α Usage::α (HasQuantities::α)+ ;
IfcRelConnects ::= ε ;
IfcExternallyDefinedHatchStyle ::= ε ;
IfcElectricFlowStorageDeviceTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (UPS::ε) | (INDUCTORBANK::ε) | (HARMONICFILTER::ε) | (CAPACITORBANK::ε) | (BATTERY::ε) ;
IfcRectangularTrimmedSurface ::= U1::α V1::α U2::α V2::α Usense::α Vsense::α BasisSurface::α ;
IfcServiceLifeFactor ::= UpperValue::α MostUsedValue::α LowerValue::α PredefinedType::α ;
IfcElectricHeaterType ::= PredefinedType::α ;
IfcSanitaryTerminalType ::= PredefinedType::α ;
IfcVirtualElement ::= ε ;
IfcCurveStyleFont ::= (PatternList::α)+ Name::α ;
IfcVertexLoop ::= LoopVertex::α ;
IfcUShapeProfileDef ::= Depth::α FlangeWidth::α WebThickness::α FlangeThickness::α FilletRadius::α EdgeRadius::α FlangeSlope::α CentreOfGravityInX::α ;
IfcRelServicesBuildings ::= RelatingSystem::α (RelatedBuildings::α)+ ;
IfcWindowStyleOperationEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TRIPLE_PANEL_HORIZONTAL::ε) | (TRIPLE_PANEL_RIGHT::ε) | (TRIPLE_PANEL_LEFT::ε) | (TRIPLE_PANEL_TOP::ε) | (TRIPLE_PANEL_BOTTOM::ε) | (TRIPLE_PANEL_VERTICAL::ε) | (DOUBLE_PANEL_HORIZONTAL::ε) | (DOUBLE_PANEL_VERTICAL::ε) | (SINGLE_PANEL::ε) ;
IfcLightSourceSpot ::= ConcentrationExponent::α SpreadAngle::α BeamWidthAngle::α Orientation::α ;
IfcProjectOrderRecord ::= (Records::α)+ PredefinedType::α ;
IfcFaceBasedSurfaceModel ::= (FbsmFaces::α)+ ;
IfcStructuralPointConnection ::= ε ;
IfcRelaxation ::= RelaxationValue::α InitialStress::α ;
IfcUnitaryEquipmentType ::= PredefinedType::α ;
IfcCurve ::= ε ;
IfcLogicalOperatorEnum ::= (LOGICALOR::ε) | (LOGICALAND::ε) ;
IfcConstructionEquipmentResource ::= ε ;
IfcMaterialLayerSetUsage ::= LayerSetDirection::α DirectionSense::α OffsetFromReferenceLine::α ForLayerSet::α ;
IfcConnectionTypeEnum ::= (NOTDEFINED::ε) | (ATEND::ε) | (ATSTART::ε) | (ATPATH::ε) ;
IfcBoilerTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (STEAM::ε) | (WATER::ε) ;
IfcPropertyDependencyRelationship ::= Name::α Description::α Expression::α DependingProperty::α DependantProperty::α ;
IfcColumn ::= ε ;
IfcPerson ::= Id::α FamilyName::α GivenName::α (MiddleNames::α)+ (PrefixTitles::α)+ (SuffixTitles::α)+ EngagedIn::α (Roles::α)+ (Addresses::α)+ ;
IfcFillAreaStyle ::= (FillStyles::α)+ ;
IfcSectionTypeEnum ::= (TAPERED::ε) | (UNIFORM::ε) ;
IfcElectricFlowStorageDeviceType ::= PredefinedType::α ;
IfcStructuralProfileProperties ::= TorsionalConstantX::α MomentOfInertiaYZ::α MomentOfInertiaY::α MomentOfInertiaZ::α WarpingConstant::α ShearCentreZ::α ShearCentreY::α ShearDeformationAreaZ::α ShearDeformationAreaY::α MaximumSectionModulusY::α MinimumSectionModulusY::α MaximumSectionModulusZ::α MinimumSectionModulusZ::α TorsionalSectionModulus::α CentreOfGravityInX::α CentreOfGravityInY::α ;
IfcDraughtingCallout ::= IsRelatedFromCallout::α IsRelatedToCallout::α (Contents::α)+ ;
IfcCurveStyleFontPattern ::= VisibleSegmentLength::α InvisibleSegmentLength::α ;
IfcCableCarrierFittingType ::= PredefinedType::α ;
IfcCooledBeamType ::= PredefinedType::α ;
IfcReinforcingMesh ::= MeshLength::α MeshWidth::α LongitudinalBarNominalDiameter::α TransverseBarNominalDiameter::α LongitudinalBarCrossSectionArea::α TransverseBarCrossSectionArea::α LongitudinalBarSpacing::α TransverseBarSpacing::α ;
IfcDocumentElectronicFormat ::= FileExtension::α MimeContentType::α MimeSubtype::α ;
IfcFastenerType ::= ε ;
IfcLightSourceGoniometric ::= ColourTemperature::α LuminousFlux::α LightEmissionSource::α Position::α ColourAppearance::α LightDistributionDataSource::α ;
IfcIrregularTimeSeries ::= (Values::α)+ ;
IfcCraneRailAShapeProfileDef ::= OverallHeight::α BaseWidth2::α Radius::α HeadWidth::α HeadDepth2::α HeadDepth3::α WebThickness::α BaseWidth4::α BaseDepth1::α BaseDepth2::α BaseDepth3::α CentreOfGravityInY::α ;
IfcCovering ::= CoversSpaces::α Covers::α PredefinedType::α ;
IfcWall ::= ε ;
IfcElementType ::= ElementType::α ;
IfcTypeProduct ::= (RepresentationMaps::α)+ Tag::α ;
IfcElectricalElement ::= ε ;
IfcElectricMotorTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SYNCHRONOUS::ε) | (RELUCTANCESYNCHRONOUS::ε) | (POLYPHASE::ε) | (INDUCTION::ε) | (DC::ε) ;
IfcJunctionBoxTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) ;
IfcStructuralSurfaceMemberVarying ::= VaryingThicknessLocation::α SubsequentThickness::α ;
IfcGasTerminalType ::= PredefinedType::α ;
IfcElectricDistributionPoint ::= DistributionPointFunction::α UserDefinedFunction::α ;
IfcSurfaceStyleWithTextures ::= (Textures::α)+ ;
IfcTextureMap ::= (TextureMaps::α)+ ;
IfcObject ::= IsDefinedBy::α ObjectType::α ;
IfcRevolvedAreaSolid ::= Axis::α Angle::α ;
IfcEdge ::= EdgeStart::α EdgeEnd::α ;
IfcStructuralLinearAction ::= ProjectedOrTrue::α ;
IfcQuantityArea ::= AreaValue::α ;
IfcSensorTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TEMPERATURESENSOR::ε) | (SOUNDSENSOR::ε) | (SMOKESENSOR::ε) | (PRESSURESENSOR::ε) | (MOVEMENTSENSOR::ε) | (MOISTURESENSOR::ε) | (LIGHTSENSOR::ε) | (HUMIDITYSENSOR::ε) | (HEATSENSOR::ε) | (GASSENSOR::ε) | (FLOWSENSOR::ε) | (FIRESENSOR::ε) | (CO2SENSOR::ε) ;
IfcProjectOrder ::= ID::α PredefinedType::α Status::α ;
IfcPixelTexture ::= Width::α Height::α ColourComponents::α (Pixel::α)+ ;
IfcExternalReference ::= Location::α ItemReference::α Name::α ;
IfcEvaporatorType ::= PredefinedType::α ;
IfcCableSegmentTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (CONDUCTORSEGMENT::ε) | (CABLESEGMENT::ε) ;
IfcProfileProperties ::= ProfileDefinition::α ProfileName::α ;
IfcElementCompositionEnum ::= (PARTIAL::ε) | (ELEMENT::ε) | (COMPLEX::ε) ;
IfcThermalLoadSourceEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (INFILTRATION::ε) | (RELATIVEHUMIDITY::ε) | (DRYBULBTEMPERATURE::ε) | (AIREXCHANGERATE::ε) | (EXHAUSTAIR::ε) | (RECIRCULATEDAIR::ε) | (VENTILATIONOUTSIDEAIR::ε) | (VENTILATIONINDOORAIR::ε) | (EQUIPMENT::ε) | (LIGHTING::ε) | (PEOPLE::ε) ;
IfcRelAssignsToGroup ::= RelatingGroup::α ;
IfcReinforcementDefinitionProperties ::= (ReinforcementSectionDefinitions::α)+ DefinitionType::α ;
IfcParameterizedProfileDef ::= Position::α ;
IfcLoadGroupTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (LOAD_COMBINATION::ε) | (LOAD_COMBINATION_GROUP::ε) | (LOAD_CASE::ε) | (LOAD_GROUP::ε) ;
IfcFireSuppressionTerminalTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SPRINKLERDEFLECTOR::ε) | (SPRINKLER::ε) | (HOSEREEL::ε) | (FIREHYDRANT::ε) | (BREECHINGINLET::ε) ;
IfcDistributionElementType ::= ε ;
IfcBuildingElementProxy ::= CompositionType::α ;
IfcUnitEnum ::= (USERDEFINED::ε) | (VOLUMEUNIT::ε) | (TIMEUNIT::ε) | (THERMODYNAMICTEMPERATUREUNIT::ε) | (SOLIDANGLEUNIT::ε) | (RADIOACTIVITYUNIT::ε) | (PRESSUREUNIT::ε) | (POWERUNIT::ε) | (PLANEANGLEUNIT::ε) | (MASSUNIT::ε) | (MAGNETICFLUXUNIT::ε) | (MAGNETICFLUXDENSITYUNIT::ε) | (LUMINOUSINTENSITYUNIT::ε) | (LUMINOUSFLUXUNIT::ε) | (LENGTHUNIT::ε) | (INDUCTANCEUNIT::ε) | (ILLUMINANCEUNIT::ε) | (FREQUENCYUNIT::ε) | (FORCEUNIT::ε) | (ENERGYUNIT::ε) | (ELECTRICVOLTAGEUNIT::ε) | (ELECTRICRESISTANCEUNIT::ε) | (ELECTRICCURRENTUNIT::ε) | (ELECTRICCONDUCTANCEUNIT::ε) | (ELECTRICCHARGEUNIT::ε) | (ELECTRICCAPACITANCEUNIT::ε) | (DOSEEQUIVALENTUNIT::ε) | (AREAUNIT::ε) | (AMOUNTOFSUBSTANCEUNIT::ε) | (ABSORBEDDOSEUNIT::ε) ;
IfcThermalMaterialProperties ::= SpecificHeatCapacity::α BoilingPoint::α FreezingPoint::α ThermalConductivity::α ;
IfcCondenserTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (EVAPORATIVECOOLED::ε) | (AIRCOOLED::ε) | (WATERCOOLEDBRAZEDPLATE::ε) | (WATERCOOLEDTUBEINTUBE::ε) | (WATERCOOLEDSHELLCOIL::ε) | (WATERCOOLEDSHELLTUBE::ε) ;
IfcSpatialStructureElement ::= LongName::α CompositionType::α ReferencesElements::α ServicedBySystems::α ContainsElements::α ;
IfcSoundScaleEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (NR::ε) | (NC::ε) | (DBC::ε) | (DBB::ε) | (DBA::ε) ;
IfcClassificationItem ::= IsClassifiedItemIn::α IsClassifyingItemIn::α Notation::α ItemOf::α Title::α ;
IfcCostValue ::= CostType::α Condition::α ;
IfcClosedShell ::= ε ;
IfcSensorType ::= PredefinedType::α ;
IfcStackTerminalTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (RAINWATERHOPPER::ε) | (COWL::ε) | (BIRDCAGE::ε) ;
IfcTextureVertex ::= Coordinates::α ;
IfcSpaceHeaterType ::= PredefinedType::α ;
IfcConstraintAggregationRelationship ::= Name::α Description::α LogicalAggregator::α RelatingConstraint::α (RelatedConstraints::α)+ ;
IfcApprovalPropertyRelationship ::= (ApprovedProperties::α)+ Approval::α ;
IfcPolyLoop ::= Polygon::α ;
IfcRelCoversBldgElements ::= RelatingBuildingElement::α (RelatedCoverings::α)+ ;
IfcProject ::= LongName::α Phase::α (RepresentationContexts::α)+ UnitsInContext::α ;
IfcDerivedProfileDef ::= ParentProfile::α Operator::α Label::α ;
IfcCircleProfileDef ::= Radius::α ;
IfcPersonAndOrganization ::= ThePerson::α TheOrganization::α (Roles::α)+ ;
IfcTextStyleForDefinedFont ::= Colour::α BackgroundColour::α ;
IfcTask ::= TaskId::α Status::α WorkMethod::α IsMilestone::α Priority::α ;
IfcStructuralCurveMemberVarying ::= ε ;
IfcRailing ::= PredefinedType::α ;
IfcStructuralSurfaceConnection ::= ε ;
IfcRelAssociates ::= (RelatedObjects::α)+ ;
IfcPhysicalQuantity ::= Name::α Description::α PartOfComplex::α ;
IfcCurveStyle ::= CurveFont::α CurveWidth::α CurveColour::α ;
IfcBlock ::= XLength::α YLength::α ZLength::α ;
IfcOrientedEdge ::= EdgeElement::α Orientation::α ;
IfcCostItem ::= ε ;
IfcRelAssociatesConstraint ::= RelatingConstraint::α Intent::α ;
IfcSpatialStructureElementType ::= ε ;
IfcSurfaceStyleShading ::= SurfaceColour::α ;
IfcWallStandardCase ::= ε ;
IfcTextStyleFontModel ::= (FontFamily::α)+ FontStyle::α FontVariant::α FontWeight::α FontSize::α ;
IfcControllerType ::= PredefinedType::α ;
IfcElementAssembly ::= AssemblyPlace::α PredefinedType::α ;
IfcSpaceTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) ;
IfcReinforcementBarProperties ::= TotalCrossSectionArea::α SteelGrade::α BarSurface::α EffectiveDepth::α NominalBarDiameter::α BarCount::α ;
IfcConnectionSurfaceGeometry ::= SurfaceOnRelatingElement::α SurfaceOnRelatedElement::α ;
IfcExtrudedAreaSolid ::= ExtrudedDirection::α Depth::α ;
IfcFailureConnectionCondition ::= TensionFailureX::α TensionFailureY::α TensionFailureZ::α CompressionFailureX::α CompressionFailureY::α CompressionFailureZ::α ;
IfcRectangularPyramid ::= XLength::α YLength::α Height::α ;
IfcClassificationItemRelationship ::= RelatingItem::α (RelatedItems::α)+ ;
IfcElement ::= FillsVoids::α ConnectedTo::α HasCoverings::α HasProjections::α HasStructuralMember::α HasPorts::α HasOpenings::α IsConnectionRealization::α ProvidesBoundaries::α ConnectedFrom::α Tag::α ;
IfcPermeableCoveringOperationEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SCREEN::ε) | (LOUVER::ε) | (GRILL::ε) ;
IfcStructuralSteelProfileProperties ::= ShearAreaZ::α ShearAreaY::α PlasticShapeFactorY::α PlasticShapeFactorZ::α ;
IfcTransportElementType ::= PredefinedType::α ;
IfcFlowMeterTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (WATERMETER::ε) | (OILMETER::ε) | (GASMETER::ε) | (FLOWMETER::ε) | (ENERGYMETER::ε) | (ELECTRICMETER::ε) ;
IfcPropertyConstraintRelationship ::= Name::α Description::α RelatingConstraint::α (RelatedProperties::α)+ ;
IfcTimeSeriesDataTypeEnum ::= (NOTDEFINED::ε) | (PIECEWISECONTINUOUS::ε) | (PIECEWISECONSTANT::ε) | (PIECEWISEBINARY::ε) | (DISCRETEBINARY::ε) | (DISCRETE::ε) | (CONTINUOUS::ε) ;
IfcSIPrefix ::= (ATTO::ε) | (FEMTO::ε) | (PICO::ε) | (NANO::ε) | (MICRO::ε) | (MILLI::ε) | (CENTI::ε) | (DECI::ε) | (DECA::ε) | (HECTO::ε) | (KILO::ε) | (MEGA::ε) | (GIGA::ε) | (TERA::ε) | (PETA::ε) | (EXA::ε) ;
IfcRadiusDimension ::= ε ;
IfcPreDefinedTerminatorSymbol ::= ε ;
IfcTransitionCode ::= (CONTSAMEGRADIENTSAMECURVATURE::ε) | (CONTSAMEGRADIENT::ε) | (CONTINUOUS::ε) | (DISCONTINUOUS::ε) ;
IfcFeatureElementSubtraction ::= VoidsElements::α ;
IfcConditionCriterionSelect ::= IfcLabelvalue::α IfcMeasureWithUnitvalue::α ;
IfcProjectOrderRecordTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (WORK::ε) | (PURCHASE::ε) | (MOVE::ε) | (MAINTENANCE::ε) | (CHANGE::ε) ;
IfcBooleanOperator ::= (DIFFERENCE::ε) | (INTERSECTION::ε) | (UNION::ε) ;
IfcCoordinatedUniversalTimeOffset ::= HourOffset::α MinuteOffset::α Sense::α ;
IfcElectricApplianceType ::= PredefinedType::α ;
IfcConstraint ::= Name::α Description::α ConstraintGrade::α ConstraintSource::α UserDefinedGrade::α ClassifiedAs::α RelatesConstraints::α IsRelatedWith::α PropertiesForConstraint::α Aggregates::α IsAggregatedIn::α CreatingActor::α CreationTime::α ;
IfcElectricDistributionPointFunctionEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SWITCHBOARD::ε) | (MOTORCONTROLCENTRE::ε) | (MIMICPANEL::ε) | (INDICATORPANEL::ε) | (GASDETECTORPANEL::ε) | (DISTRIBUTIONBOARD::ε) | (CONTROLPANEL::ε) | (CONSUMERUNIT::ε) | (ALARMPANEL::ε) ;
IfcBooleanResult ::= FirstOperand::α SecondOperand::α Operator::α ;
IfcAssemblyPlaceEnum ::= (NOTDEFINED::ε) | (FACTORY::ε) | (SITE::ε) ;
IfcSpaceType ::= PredefinedType::α ;
IfcFlowTreatmentDevice ::= ε ;
IfcSystemFurnitureElementType ::= ε ;
IfcDimensionCurveDirectedCallout ::= ε ;
IfcColumnTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (COLUMN::ε) ;
IfcInventory ::= Jurisdiction::α (ResponsiblePersons::α)+ LastUpdateDate::α CurrentValue::α OriginalValue::α InventoryType::α ;
IfcRepresentation ::= RepresentationIdentifier::α RepresentationType::α RepresentationMap::α OfProductRepresentation::α ContextOfItems::α (Items::α)+ ;
IfcDiameterDimension ::= ε ;
IfcDuctFittingTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TRANSITION::ε) | (OBSTRUCTION::ε) | (JUNCTION::ε) | (EXIT::ε) | (ENTRY::ε) | (CONNECTOR::ε) | (BEND::ε) ;
IfcCurtainWallType ::= PredefinedType::α ;
IfcConditionCriterion ::= Criterion::α CriterionDateTime::α ;
IfcWallTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (PLUMBINGWALL::ε) | (ELEMENTEDWALL::ε) | (SHEAR::ε) | (POLYGONAL::ε) | (STANDARD::ε) ;
IfcMaterialClassificationRelationship ::= (MaterialClassifications::α)+ ClassifiedMaterial::α ;
IfcProcedureTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (STARTUP::ε) | (SHUTDOWN::ε) | (DIAGNOSTIC::ε) | (CALIBRATION::ε) | (ADVICE_WARNING::ε) | (ADVICE_NOTE::ε) | (ADVICE_CAUTION::ε) ;
IfcDimensionCalloutRelationship ::= ε ;
IfcSurfaceOfRevolution ::= AxisPosition::α ;
IfcServiceLifeTypeEnum ::= (REFERENCESERVICELIFE::ε) | (PESSIMISTICREFERENCESERVICELIFE::ε) | (OPTIMISTICREFERENCESERVICELIFE::ε) | (EXPECTEDSERVICELIFE::ε) | (ACTUALSERVICELIFE::ε) ;
IfcImageTexture ::= UrlReference::α ;
IfcFurnitureType ::= AssemblyPlace::α ;
IfcWindowPanelProperties ::= OperationType::α PanelPosition::α FrameDepth::α FrameThickness::α ShapeAspectStyle::α ;
IfcRelFillsElement ::= RelatingOpeningElement::α RelatedBuildingElement::α ;
IfcHatchLineDistanceSelect ::= IfcPositiveLengthMeasurevalue::α IfcOneDirectionRepeatFactorvalue::α ;
IfcStructuralPlanarActionVarying ::= VaryingAppliedLoadLocation::α SubsequentAppliedLoads::α ;
IfcBuildingElementComponent ::= ε ;
IfcGridPlacement ::= PlacementLocation::α PlacementRefDirection::α ;
IfcTrimmingPreference ::= (UNSPECIFIED::ε) | (PARAMETER::ε) | (CARTESIAN::ε) ;
IfcPile ::= PredefinedType::α ConstructionType::α ;
IfcBuildingElementPart ::= ε ;
IfcObjective ::= ObjectiveQualifier::α UserDefinedQualifier::α BenchmarkValues::α ResultValues::α ;
IfcMechanicalSteelMaterialProperties ::= YieldStress::α UltimateStress::α UltimateStrain::α HardeningModule::α ProportionalStress::α PlasticStrain::α (Relaxations::α)+ ;
IfcCartesianTransformationOperator ::= Axis1::α Axis2::α LocalOrigin::α Scale::α ;
IfcStateEnum ::= (READONLYLOCKED::ε) | (READWRITELOCKED::ε) | (LOCKED::ε) | (READONLY::ε) | (READWRITE::ε) ;
IfcEdgeCurve ::= EdgeGeometry::α SameSense::α ;
IfcWallType ::= PredefinedType::α ;
IfcRelAssignsToActor ::= RelatingActor::α ActingRole::α ;
IfcReflectanceMethodEnum ::= (NOTDEFINED::ε) | (STRAUSS::ε) | (PLASTIC::ε) | (PHONG::ε) | (MIRROR::ε) | (METAL::ε) | (MATT::ε) | (GLASS::ε) | (FLAT::ε) | (BLINN::ε) ;
IfcSoundValue ::= SoundLevelSingleValue::α SoundLevelTimeSeries::α Frequency::α ;
IfcBuildingElementProxyTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) ;
IfcChillerType ::= PredefinedType::α ;
IfcAlarmType ::= PredefinedType::α ;
IfcAnalysisModelTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (LOADING_3D::ε) | (OUT_PLANE_LOADING_2D::ε) | (IN_PLANE_LOADING_2D::ε) ;
IfcProfileDef ::= ProfileType::α ProfileName::α ;
IfcMember ::= ε ;
IfcSurfaceSide ::= (BOTH::ε) | (NEGATIVE::ε) | (POSITIVE::ε) ;
IfcRepresentationContext ::= ContextIdentifier::α ContextType::α RepresentationsInContext::α ;
IfcWindowStyle ::= ConstructionType::α OperationType::α ParameterTakesPrecedence::α Sizeable::α ;
IfcFaceBound ::= Bound::α Orientation::α ;
IfcGeometricRepresentationItem ::= ε ;
IfcSubContractResource ::= SubContractor::α JobDescription::α ;
IfcDataOriginEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SIMULATED::ε) | (PREDICTED::ε) | (MEASURED::ε) ;
IfcLShapeProfileDef ::= Depth::α Width::α Thickness::α FilletRadius::α EdgeRadius::α LegSlope::α CentreOfGravityInX::α CentreOfGravityInY::α ;
IfcRelDecomposes ::= RelatingObject::α (RelatedObjects::α)+ ;
IfcCondition ::= ε ;
IfcTransportElementTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (MOVINGWALKWAY::ε) | (ESCALATOR::ε) | (ELEVATOR::ε) ;
IfcDocumentStatusEnum ::= (NOTDEFINED::ε) | (REVISION::ε) | (FINAL::ε) | (FINALDRAFT::ε) | (DRAFT::ε) ;
IfcResource ::= ResourceOf::α ;
IfcStructuralLinearActionVarying ::= VaryingAppliedLoadLocation::α (SubsequentAppliedLoads::α)+ ;
IfcCoilTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (GASHEATINGCOIL::ε) | (ELECTRICHEATINGCOIL::ε) | (WATERHEATINGCOIL::ε) | (STEAMHEATINGCOIL::ε) | (WATERCOOLINGCOIL::ε) | (DXCOOLINGCOIL::ε) ;
IfcGridAxis ::= AxisTag::α SameSense::α PartOfW::α PartOfV::α PartOfU::α HasIntersections::α AxisCurve::α ;
IfcPresentationStyleSelect ::= IfcNullStylevalue::α IfcSurfaceStylevalue::α IfcTextStylevalue::α IfcFillAreaStylevalue::α IfcSymbolStylevalue::α IfcCurveStylevalue::α ;
IfcGeometricProjectionEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (ELEVATION_VIEW::ε) | (SECTION_VIEW::ε) | (REFLECTED_PLAN_VIEW::ε) | (PLAN_VIEW::ε) | (MODEL_VIEW::ε) | (SKETCH_VIEW::ε) | (GRAPH_VIEW::ε) ;
IfcVertexBasedTextureMap ::= TextureVertices::α TexturePoints::α ;
IfcFaceSurface ::= FaceSurface::α SameSense::α ;
IfcCondenserType ::= PredefinedType::α ;
IfcFanTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (PROPELLORAXIAL::ε) | (VANEAXIAL::ε) | (TUBEAXIAL::ε) | (CENTRIFUGALAIRFOIL::ε) | (CENTRIFUGALBACKWARDINCLINEDCURVED::ε) | (CENTRIFUGALRADIAL::ε) | (CENTRIFUGALFORWARDCURVED::ε) ;
IfcSlippageConnectionCondition ::= SlippageX::α SlippageY::α SlippageZ::α ;
IfcRelNests ::= ε ;
IfcTubeBundleType ::= PredefinedType::α ;
IfcCostScheduleTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SCHEDULEOFRATES::ε) | (UNPRICEDBILLOFQUANTITIES::ε) | (PRICEDBILLOFQUANTITIES::ε) | (TENDER::ε) | (ESTIMATE::ε) | (COSTPLAN::ε) | (BUDGET::ε) ;
IfcStructuralLoadSingleDisplacementDistortion ::= Distortion::α ;
IfcSectionedSpine ::= SpineCurve::α CrossSections::α CrossSectionPositions::α ;
IfcConstraintEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (ADVISORY::ε) | (SOFT::ε) | (HARD::ε) ;
IfcRelConnectsStructuralElement ::= RelatingElement::α RelatedStructuralMember::α ;
IfcConstraintClassificationRelationship ::= ClassifiedConstraint::α (RelatedClassifications::α)+ ;
IfcAppliedValue ::= Name::α Description::α AppliedValue::α ValuesReferenced::α ValueOfComponents::α IsComponentIn::α UnitBasis::α ApplicableDate::α FixedUntilDate::α ;
IfcSwitchingDeviceType ::= PredefinedType::α ;
IfcObjectDefinition ::= HasAssignments::α IsDecomposedBy::α Decomposes::α ;
IfcPropertySourceEnum ::= (NOTKNOWN::ε) | (USERDEFINED::ε) | (MEASURED::ε) | (COMMISSIONING::ε) | (ASBUILT::ε) | (SIMULATED::ε) | (DESIGNMINIMUM::ε) | (DESIGNMAXIMUM::ε) | (DESIGN::ε) ;
IfcElementAssemblyTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TRUSS::ε) | (SLAB_FIELD::ε) | (RIGID_FRAME::ε) | (REINFORCEMENT_UNIT::ε) | (GIRDER::ε) | (BRACED_FRAME::ε) | (BEAM_GRID::ε) | (ARCH::ε) | (ACCESSORY_ASSEMBLY::ε) ;
IfcMonetaryUnit ::= Currency::α ;
IfcFlowStorageDeviceType ::= ε ;
IfcCurtainWall ::= ε ;
IfcRelSequence ::= TimeLag::α SequenceType::α RelatingProcess::α RelatedProcess::α ;
IfcLightFixtureType ::= PredefinedType::α ;
IfcAnnotationTextOccurrence ::= ε ;
IfcCoolingTowerType ::= PredefinedType::α ;
IfcCurrencyRelationship ::= RelatingMonetaryUnit::α RelatedMonetaryUnit::α RateDateTime::α RateSource::α ExchangeRate::α ;
IfcTextLiteralWithExtent ::= Extent::α BoxAlignment::α ;
IfcAnnotationCurveOccurrence ::= AnnotatedBySymbols::α ;
IfcRelConnectsWithEccentricity ::= ConnectionConstraint::α ;
IfcDerivedMeasureValue ::= IfcIonConcentrationMeasurevalue::α IfcPHMeasurevalue::α IfcHeatingValueMeasurevalue::α IfcSoundPressureMeasurevalue::α IfcSoundPowerMeasurevalue::α IfcWarpingMomentMeasurevalue::α IfcWarpingConstantMeasurevalue::α IfcThermalExpansionCoefficientMeasurevalue::α IfcTemperatureGradientMeasurevalue::α IfcSectionModulusMeasurevalue::α IfcSectionalAreaIntegralMeasurevalue::α IfcRotationalMassMeasurevalue::α IfcModulusOfRotationalSubgradeReactionMeasurevalue::α IfcModulusOfLinearSubgradeReactionMeasurevalue::α IfcMassPerLengthMeasurevalue::α IfcCurvatureMeasurevalue::α IfcLuminousIntensityDistributionMeasurevalue::α IfcLinearMomentMeasurevalue::α IfcShearModulusMeasurevalue::α IfcRotationalStiffnessMeasurevalue::α IfcPlanarForceMeasurevalue::α IfcMomentOfInertiaMeasurevalue::α IfcModulusOfElasticityMeasurevalue::α IfcModulusOfSubgradeReactionMeasurevalue::α IfcLinearStiffnessMeasurevalue::α IfcLinearForceMeasurevalue::α IfcAccelerationMeasurevalue::α IfcTorqueMeasurevalue::α IfcRotationalFrequencyMeasurevalue::α IfcRadioActivityMeasurevalue::α IfcAbsorbedDoseMeasurevalue::α IfcElectricCapacitanceMeasurevalue::α IfcDoseEquivalentMeasurevalue::α IfcElectricChargeMeasurevalue::α IfcElectricConductanceMeasurevalue::α IfcElectricResistanceMeasurevalue::α IfcIlluminanceMeasurevalue::α IfcInductanceMeasurevalue::α IfcForceMeasurevalue::α IfcLuminousFluxMeasurevalue::α IfcMagneticFluxMeasurevalue::α IfcMagneticFluxDensityMeasurevalue::α IfcMonetaryMeasurevalue::α IfcSpecificHeatCapacityMeasurevalue::α IfcIsothermalMoistureCapacityMeasurevalue::α IfcMoistureDiffusivityMeasurevalue::α IfcVaporPermeabilityMeasurevalue::α IfcMolecularWeightMeasurevalue::α IfcThermalConductivityMeasurevalue::α IfcAngularVelocityMeasurevalue::α IfcDynamicViscosityMeasurevalue::α IfcElectricVoltageMeasurevalue::α IfcEnergyMeasurevalue::α IfcFrequencyMeasurevalue::α IfcHeatFluxDensityMeasurevalue::α IfcIntegerCountRateMeasurevalue::α IfcKinematicViscosityMeasurevalue::α IfcLinearVelocityMeasurevalue::α IfcMassDensityMeasurevalue::α IfcMassFlowRateMeasurevalue::α IfcPowerMeasurevalue::α IfcPressureMeasurevalue::α IfcThermalAdmittanceMeasurevalue::α IfcThermalResistanceMeasurevalue::α IfcThermalTransmittanceMeasurevalue::α IfcTimeStampvalue::α IfcVolumetricFlowRateMeasurevalue::α ;
IfcProcess ::= OperatesOn::α IsSuccessorFrom::α IsPredecessorTo::α ;
IfcRoot ::= GlobalId::α Name::α Description::α OwnerHistory::α HasAssociations::α ;
IfcOrientationSelect ::= IfcPlaneAngleMeasurevalue::α IfcDirectionvalue::α ;
IfcFluidFlowProperties ::= PropertySource::α UserDefinedPropertySource::α TemperatureSingleValue::α WetBulbTemperatureSingleValue::α FlowConditionSingleValue::α VelocitySingleValue::α PressureSingleValue::α FlowrateSingleValue::α FlowConditionTimeSeries::α VelocityTimeSeries::α FlowrateTimeSeries::α Fluid::α PressureTimeSeries::α WetBulbTemperatureTimeSeries::α TemperatureTimeSeries::α ;
IfcValveType ::= PredefinedType::α ;
IfcDistributionControlElementType ::= ε ;
IfcEnergyProperties ::= EnergySequence::α UserDefinedEnergySequence::α ;
IfcReinforcingBarRoleEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (RING::ε) | (EDGE::ε) | (PUNCHING::ε) | (STUD::ε) | (LIGATURE::ε) | (SHEAR::ε) | (MAIN::ε) ;
IfcProtectiveDeviceTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (VARISTOR::ε) | (RESIDUALCURRENTSWITCH::ε) | (RESIDUALCURRENTCIRCUITBREAKER::ε) | (EARTHFAILUREDEVICE::ε) | (CIRCUITBREAKER::ε) | (FUSEDISCONNECTOR::ε) ;
IfcLightSourceDirectional ::= Orientation::α ;
IfcStructuralMember ::= ReferencesElement::α ConnectedBy::α ;
IfcDoorPanelPositionEnum ::= (NOTDEFINED::ε) | (RIGHT::ε) | (MIDDLE::ε) | (LEFT::ε) ;
IfcRoof ::= ShapeType::α ;
IfcAheadOrBehind ::= (BEHIND::ε) | (AHEAD::ε) ;
IfcObjectiveEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TRIGGERCONDITION::ε) | (SPECIFICATION::ε) | (REQUIREMENT::ε) | (HEALTHANDSAFETY::ε) | (DESIGNINTENT::ε) | (CODECOMPLIANCE::ε) ;
IfcShapeAspect ::= Name::α Description::α ProductDefinitional::α (ShapeRepresentations::α)+ PartOfProductDefinitionShape::α ;
IfcLocalTime ::= HourComponent::α MinuteComponent::α SecondComponent::α DaylightSavingOffset::α Zone::α ;
IfcSweptDiskSolid ::= Radius::α InnerRadius::α StartParam::α EndParam::α Directrix::α ;
IfcRelProjectsElement ::= RelatingElement::α RelatedFeatureElement::α ;
IfcMechanicalMaterialProperties ::= DynamicViscosity::α YoungModulus::α ShearModulus::α PoissonRatio::α ThermalExpansionCoefficient::α ;
IfcBoundaryEdgeCondition ::= LinearStiffnessByLengthX::α LinearStiffnessByLengthY::α LinearStiffnessByLengthZ::α RotationalStiffnessByLengthX::α RotationalStiffnessByLengthY::α RotationalStiffnessByLengthZ::α ;
IfcServiceLife ::= ServiceLifeType::α ServiceLifeDuration::α ;
IfcTable ::= (Rows::α)+ Name::α ;
IfcElectricTimeControlType ::= PredefinedType::α ;
IfcCompressorTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TWINSCREW::ε) | (SINGLESCREW::ε) | (ROTARYVANE::ε) | (ROLLINGPISTON::ε) | (WELDEDSHELLHERMETIC::ε) | (SEMIHERMETIC::ε) | (HERMETIC::ε) | (OPENTYPE::ε) | (BOOSTER::ε) | (SINGLESTAGE::ε) | (TROCHOIDAL::ε) | (SCROLL::ε) | (ROTARY::ε) | (RECIPROCATING::ε) | (DYNAMIC::ε) ;
IfcFlowFittingType ::= ε ;
IfcApprovalActorRelationship ::= Actor::α Approval::α Role::α ;
IfcStairTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TWO_CURVED_RUN_STAIR::ε) | (CURVED_RUN_STAIR::ε) | (DOUBLE_RETURN_STAIR::ε) | (SPIRAL_STAIR::ε) | (THREE_QUARTER_TURN_STAIR::ε) | (THREE_QUARTER_WINDING_STAIR::ε) | (TWO_QUARTER_TURN_STAIR::ε) | (TWO_QUARTER_WINDING_STAIR::ε) | (HALF_TURN_STAIR::ε) | (HALF_WINDING_STAIR::ε) | (QUARTER_TURN_STAIR::ε) | (QUARTER_WINDING_STAIR::ε) | (TWO_STRAIGHT_RUN_STAIR::ε) | (STRAIGHT_RUN_STAIR::ε) ;
IfcGeneralMaterialProperties ::= MolecularWeight::α Porosity::α MassDensity::α ;
IfcGeneralProfileProperties ::= PhysicalWeight::α Perimeter::α MinimumPlateThickness::α MaximumPlateThickness::α CrossSectionArea::α ;
IfcMeasureValue ::= IfcNormalisedRatioMeasurevalue::α IfcLuminousIntensityMeasurevalue::α IfcAmountOfSubstanceMeasurevalue::α IfcAreaMeasurevalue::α IfcContextDependentMeasurevalue::α IfcCountMeasurevalue::α IfcDescriptiveMeasurevalue::α IfcElectricCurrentMeasurevalue::α IfcLengthMeasurevalue::α IfcPositiveLengthMeasurevalue::α IfcMassMeasurevalue::α IfcNumericMeasurevalue::α IfcParameterValuevalue::α IfcPlaneAngleMeasurevalue::α IfcPositivePlaneAngleMeasurevalue::α IfcRatioMeasurevalue::α IfcPositiveRatioMeasurevalue::α IfcSolidAngleMeasurevalue::α IfcThermodynamicTemperatureMeasurevalue::α IfcTimeMeasurevalue::α IfcVolumeMeasurevalue::α ;
IfcFlowInstrumentTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (VOLTMETER_RMS::ε) | (VOLTMETER_PEAK::ε) | (PHASEANGLEMETER::ε) | (POWERFACTORMETER::ε) | (FREQUENCYMETER::ε) | (AMMETER::ε) | (THERMOMETER::ε) | (PRESSUREGAUGE::ε) ;
IfcSystem ::= ServicesBuildings::α ;
IfcPileTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SUPPORT::ε) | (FRICTION::ε) | (COHESION::ε) ;
IfcDuctFittingType ::= PredefinedType::α ;
IfcPresentationStyle ::= Name::α ;
IfcArbitraryProfileDefWithVoids ::= (InnerCurves::α)+ ;
IfcWindowStyleConstructionEnum ::= (NOTDEFINED::ε) | (OTHER_CONSTRUCTION::ε) | (PLASTIC::ε) | (ALUMINIUM_WOOD::ε) | (WOOD::ε) | (STEEL::ε) | (HIGH_GRADE_STEEL::ε) | (ALUMINIUM::ε) ;
IfcPropertyEnumeration ::= (EnumerationValues::α)+ Unit::α Name::α ;
IfcCoveringType ::= PredefinedType::α ;
IfcAngularDimension ::= ε ;
IfcFootingTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (STRIP_FOOTING::ε) | (PILE_CAP::ε) | (PAD_FOOTING::ε) | (FOOTING_BEAM::ε) ;
IfcPreDefinedTextFont ::= ε ;
IfcDistributionChamberElement ::= ε ;
IfcTimeSeriesValue ::= (ListValues::α)+ ;
IfcDocumentConfidentialityEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (PERSONAL::ε) | (CONFIDENTIAL::ε) | (RESTRICTED::ε) | (PUBLIC::ε) ;
IfcPointOnCurve ::= BasisCurve::α PointParameter::α ;
IfcReinforcingBarSurfaceEnum ::= (TEXTURED::ε) | (PLAIN::ε) ;
IfcSpaceProgram ::= SpaceProgramIdentifier::α MaxRequiredArea::α MinRequiredArea::α StandardRequiredArea::α HasInteractionReqsFrom::α HasInteractionReqsTo::α RequestedLocation::α ;
IfcRelAssignsToProcess ::= RelatingProcess::α QuantityInProcess::α ;
IfcPropertyReferenceValue ::= PropertyReference::α UsageName::α ;
IfcProfileTypeEnum ::= (AREA::ε) | (CURVE::ε) ;
IfcOrderAction ::= ActionID::α ;
IfcDistributionFlowElementType ::= ε ;
IfcControllerTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TWOPOSITION::ε) | (TIMEDTWOPOSITION::ε) | (PROPORTIONALINTEGRALDERIVATIVE::ε) | (PROPORTIONALINTEGRAL::ε) | (PROPORTIONAL::ε) | (FLOATING::ε) ;
IfcRelAssociatesAppliedValue ::= RelatingAppliedValue::α ;
IfcMemberTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (STUD::ε) | (STRUT::ε) | (STRINGER::ε) | (RAFTER::ε) | (PURLIN::ε) | (POST::ε) | (PLATE::ε) | (MULLION::ε) | (MEMBER::ε) | (COLLAR::ε) | (CHORD::ε) | (BRACE::ε) ;
IfcRelAssignsToResource ::= RelatingResource::α ;
IfcRightCircularCone ::= Height::α BottomRadius::α ;
IfcConnectionPortGeometry ::= LocationAtRelatingElement::α LocationAtRelatedElement::α ProfileOfPort::α ;
IfcProductRepresentation ::= Name::α Description::α ShapeOfProduct::α (Representations::α)+ ;
IfcLightFixtureTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (DIRECTIONSOURCE::ε) | (POINTSOURCE::ε) ;
IfcVirtualGridIntersection ::= IntersectingAxes::α OffsetDistances::α ;
IfcEquipmentElement ::= ε ;
IfcStructuralActivity ::= AssignedToStructuralItem::α AppliedLoad::α GlobalOrLocal::α ;
IfcArbitraryOpenProfileDef ::= Curve::α ;
IfcEnergySequenceEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (AUXILIARY::ε) | (TERTIARY::ε) | (SECONDARY::ε) | (PRIMARY::ε) ;
IfcBoxedHalfSpace ::= Enclosure::α ;
IfcBeamType ::= PredefinedType::α ;
IfcFacetedBrepWithVoids ::= (Voids::α)+ ;
IfcClassificationNotation ::= (NotationFacets::α)+ ;
IfcFlowDirectionEnum ::= (NOTDEFINED::ε) | (SOURCEANDSINK::ε) | (SINK::ε) | (SOURCE::ε) ;
IfcCableCarrierSegmentType ::= PredefinedType::α ;
IfcDocumentInformation ::= DocumentId::α Name::α Description::α Purpose::α IntendedUse::α Scope::α Revision::α Confidentiality::α Status::α IsPointedTo::α IsPointer::α (DocumentReferences::α)+ DocumentOwner::α (Editors::α)+ CreationTime::α LastRevisionTime::α ElectronicFormat::α ValidFrom::α ValidUntil::α ;
IfcPort ::= ContainedIn::α ConnectedFrom::α ConnectedTo::α ;
IfcStyledRepresentation ::= ε ;
IfcFaceOuterBound ::= ε ;
IfcStructuralSurfaceTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SHELL::ε) | (MEMBRANE_ELEMENT::ε) | (BENDING_ELEMENT::ε) ;
IfcElectricApplianceTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (WATERCOOLER::ε) | (WATERHEATER::ε) | (WASHINGMACHINE::ε) | (VENDINGMACHINE::ε) | (TV::ε) | (TUMBLEDRYER::ε) | (TELEPHONE::ε) | (SCANNER::ε) | (RADIANTHEATER::ε) | (REFRIGERATOR::ε) | (PRINTER::ε) | (PHOTOCOPIER::ε) | (MICROWAVE::ε) | (INDIRECTWATERHEATER::ε) | (HANDDRYER::ε) | (FRIDGE_FREEZER::ε) | (FREEZER::ε) | (FREESTANDINGFAN::ε) | (FACSIMILE::ε) | (ELECTRICHEATER::ε) | (ELECTRICCOOKER::ε) | (DISHWASHER::ε) | (DIRECTWATERHEATER::ε) | (COMPUTER::ε) ;
IfcConnectedFaceSet ::= (CfsFaces::α)+ ;
IfcClassificationReference ::= ReferencedSource::α ;
IfcTextStyle ::= TextCharacterAppearance::α TextStyle::α TextFontStyle::α ;
IfcLightDistributionCurveEnum ::= (NOTDEFINED::ε) | (TYPE_C::ε) | (TYPE_B::ε) | (TYPE_A::ε) ;
IfcBuildingElementType ::= ε ;
IfcWindowPanelOperationEnum ::= (NOTDEFINED::ε) | (OTHEROPERATION::ε) | (FIXEDCASEMENT::ε) | (REMOVABLECASEMENT::ε) | (SLIDINGVERTICAL::ε) | (SLIDINGHORIZONTAL::ε) | (PIVOTVERTICAL::ε) | (PIVOTHORIZONTAL::ε) | (BOTTOMHUNG::ε) | (TOPHUNG::ε) | (TILTANDTURNLEFTHAND::ε) | (TILTANDTURNRIGHTHAND::ε) | (SIDEHUNGLEFTHAND::ε) | (SIDEHUNGRIGHTHAND::ε) ;
IfcPropertySetDefinition ::= PropertyDefinitionOf::α DefinesType::α ;
IfcMemberType ::= PredefinedType::α ;
IfcStructuralAction ::= CausedBy::α DestabilizingLoad::α ;
IfcStackTerminalType ::= PredefinedType::α ;
IfcAnnotationSurface ::= Item::α TextureCoordinates::α ;
IfcStructuralPointReaction ::= ε ;
IfcDimensionCurveTerminator ::= Role::α ;
IfcSymbolStyle ::= StyleOfSymbol::α ;
IfcEnvironmentalImpactValue ::= ImpactType::α Category::α UserDefinedCategory::α ;
IfcHeatExchangerType ::= PredefinedType::α ;
IfcActionSourceTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (BRAKES::ε) | (RAIN::ε) | (WAVE::ε) | (CURRENT::ε) | (ICE::ε) | (BUOYANCY::ε) | (LACK_OF_FIT::ε) | (CREEP::ε) | (SHRINKAGE::ε) | (SYSTEM_IMPERFECTION::ε) | (PROPPING::ε) | (ERECTION::ε) | (TRANSPORT::ε) | (IMPACT::ε) | (IMPULSE::ε) | (FIRE::ε) | (EARTHQUAKE_E::ε) | (TEMPERATURE_T::ε) | (SETTLEMENT_U::ε) | (PRESTRESSING_P::ε) | (WIND_W::ε) | (SNOW_S::ε) | (LIVE_LOAD_Q::ε) | (COMPLETION_G1::ε) | (DEAD_LOAD_G::ε) ;
IfcPropertySingleValue ::= NominalValue::α Unit::α ;
IfcTransformerType ::= PredefinedType::α ;
IfcStairFlightType ::= PredefinedType::α ;
IfcOutletType ::= PredefinedType::α ;
IfcClassification ::= Source::α Edition::α Name::α Contains::α EditionDate::α ;
IfcTankTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (PRESSUREVESSEL::ε) | (EXPANSION::ε) | (SECTIONAL::ε) | (PREFORMED::ε) ;
IfcCenterLineProfileDef ::= Thickness::α ;
IfcMaterialList ::= (Materials::α)+ ;
IfcAnnotationSurfaceOccurrence ::= ε ;
IfcOwnerHistory ::= State::α ChangeAction::α LastModifiedDate::α CreationDate::α OwningUser::α OwningApplication::α LastModifyingUser::α LastModifyingApplication::α ;
IfcElementComponent ::= ε ;
IfcEquipmentStandard ::= ε ;
IfcCompositeCurveSegment ::= Transition::α SameSense::α UsingCurves::α ParentCurve::α ;
IfcAirTerminalBoxType ::= PredefinedType::α ;
IfcNullStyle ::= NULL::ε ;
IfcTendonAnchor ::= ε ;
IfcProjectionCurve ::= ε ;
IfcDimensionPair ::= ε ;
IfcTimeSeriesReferenceRelationship ::= ReferencedTimeSeries::α (TimeSeriesReferences::α)+ ;
IfcSimpleValue ::= IfcLogicalvalue::α IfcLabelvalue::α IfcTextvalue::α IfcIdentifiervalue::α IfcBooleanvalue::α IfcRealvalue::α IfcIntegervalue::α ;
IfcRelConnectsPathElements ::= (RelatingPriorities::α)+ (RelatedPriorities::α)+ RelatedConnectionType::α RelatingConnectionType::α ;
IfcNamedUnit ::= Dimensions::α UnitType::α ;
IfcStructuralLoadGroup ::= PredefinedType::α ActionType::α ActionSource::α Coefficient::α Purpose::α SourceOfResultGroup::α LoadGroupFor::α ;
IfcPreDefinedPointMarkerSymbol ::= ε ;
IfcAppliedValueRelationship ::= ArithmeticOperator::α Name::α Description::α ComponentOfTotal::α (Components::α)+ ;
IfcSpaceThermalLoadProperties ::= ApplicableValueRatio::α ThermalLoadSource::α PropertySource::α SourceDescription::α MaximumValue::α MinimumValue::α UserDefinedThermalLoadSource::α UserDefinedPropertySource::α ThermalLoadType::α ThermalLoadTimeSeriesValues::α ;
IfcRelVoidsElement ::= RelatingBuildingElement::α RelatedOpeningElement::α ;
IfcRelDefinesByProperties ::= RelatingPropertyDefinition::α ;
IfcMaterialDefinitionRepresentation ::= RepresentedMaterial::α ;
IfcCoveringTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (WRAPPING::ε) | (SLEEVING::ε) | (MEMBRANE::ε) | (INSULATION::ε) | (ROOFING::ε) | (CLADDING::ε) | (FLOORING::ε) | (CEILING::ε) ;
IfcTankType ::= PredefinedType::α ;
IfcLayerSetDirectionEnum ::= (AXIS3::ε) | (AXIS2::ε) | (AXIS1::ε) ;
IfcFurnishingElement ::= ε ;
IfcStructuralCurveMember ::= PredefinedType::α ;
IfcPipeFittingType ::= PredefinedType::α ;
IfcStair ::= ShapeType::α ;
IfcDoorPanelProperties ::= PanelDepth::α PanelOperation::α PanelWidth::α PanelPosition::α ShapeAspectStyle::α ;
IfcElementComponentType ::= ε ;
IfcObjectTypeEnum ::= (NOTDEFINED::ε) | (PROJECT::ε) | (GROUP::ε) | (ACTOR::ε) | (RESOURCE::ε) | (CONTROL::ε) | (PROCESS::ε) | (PRODUCT::ε) ;
IfcSlab ::= PredefinedType::α ;
IfcLocalPlacement ::= PlacementRelTo::α RelativePlacement::α ;
IfcCShapeProfileDef ::= Depth::α Width::α WallThickness::α Girth::α InternalFilletRadius::α CentreOfGravityInX::α ;
IfcStructuralResultGroup ::= TheoryType::α IsLinear::α ResultGroupFor::α ResultForLoadGroup::α ;
IfcRelationship ::= ε ;
IfcHumidifierType ::= PredefinedType::α ;
IfcRelAssignsTasks ::= TimeForTask::α ;
IfcTextLiteral ::= Literal::α Path::α Placement::α ;
IfcLinearDimension ::= ε ;
IfcEnergyConversionDevice ::= ε ;
IfcBlobTexture ::= RasterFormat::α RasterCode::α ;
IfcElectricCurrentEnum ::= (NOTDEFINED::ε) | (DIRECT::ε) | (ALTERNATING::ε) ;
IfcActionTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (EXTRAORDINARY_A::ε) | (VARIABLE_Q::ε) | (PERMANENT_G::ε) ;
IfcSurfaceStyleLighting ::= DiffuseTransmissionColour::α DiffuseReflectionColour::α TransmissionColour::α ReflectanceColour::α ;
IfcSurfaceOfLinearExtrusion ::= ExtrudedDirection::α Depth::α ;
IfcMetric ::= Benchmark::α ValueSource::α DataValue::α ;
IfcSurfaceTexture ::= RepeatS::α RepeatT::α TextureType::α TextureTransform::α ;
IfcTableRow ::= (RowCells::α)+ OfTable::α IsHeading::α ;
IfcBoundaryFaceCondition ::= LinearStiffnessByAreaX::α LinearStiffnessByAreaY::α LinearStiffnessByAreaZ::α ;
IfcRelOccupiesSpaces ::= ε ;
IfcPath ::= (EdgeList::α)+ ;
IfcFacetedBrep ::= ε ;
IfcDistributionPort ::= FlowDirection::α ;
IfcVertex ::= ε ;
IfcMotorConnectionTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (DIRECTDRIVE::ε) | (COUPLING::ε) | (BELTDRIVE::ε) ;
IfcRelConnectsPortToElement ::= RelatingPort::α RelatedElement::α ;
IfcDistributionChamberElementTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (VALVECHAMBER::ε) | (TRENCH::ε) | (SUMP::ε) | (METERCHAMBER::ε) | (MANHOLE::ε) | (INSPECTIONPIT::ε) | (INSPECTIONCHAMBER::ε) | (FORMEDDUCT::ε) ;
IfcFurnishingElementType ::= ε ;
IfcElementQuantity ::= (Quantities::α)+ MethodOfMeasurement::α ;
IfcApprovalRelationship ::= Description::α Name::α RelatedApproval::α RelatingApproval::α ;
IfcRelReferencedInSpatialStructure ::= (RelatedElements::α)+ RelatingStructure::α ;
--------------------metamodels::mlhim2.bgf--------------------
DvCount ::= count::α ;
DvNumeric ::= DvByte ;
 DvNumeric ::= DvDecimal ;
 DvNumeric ::= DvInt ;
 DvNumeric ::= DvInteger ;
 DvNumeric ::= DvLong ;
 DvNumeric ::= DvNegativeInteger ;
 DvNumeric ::= DvNonNegativeInteger ;
 DvNumeric ::= DvNonPositiveInteger ;
 DvNumeric ::= DvPositiveInteger ;
 DvNumeric ::= DvShort ;
 DvNumeric ::= DvUnsignedByte ;
 DvNumeric ::= DvUnsignedInt ;
 DvNumeric ::= DvUnsignedLong ;
 DvNumeric ::= DvUnsignedShort ;
DvIdentifier ::= issuer::α assigner::α name::α ;
Event ::= IntervalEvent ;
 Event ::= PointEvent ;
DvQuantified ::= DvCount ;
 DvQuantified ::= DvQuantity ;
 DvQuantified ::= DvRatio ;
DvMediaMultipart ::= dv::α ;
DvRatio ::= DvProportion ;
 DvRatio ::= DvRate ;
ExceptionalValue ::= NI ;
DvMediaModel ::= dv::α ;
Device ::= details::ItemStructure ;
DvCodedString ::= codeString::α terminologyName::α terminologyAbbrev::α ;
Person ::= details::ItemStructure ;
DvUnsignedShort ::= dv::α ;
History ::= origin::DvTemporal (events::Event)+ period::DvDuration duration::DvDuration summary::ItemStructure ;
DvTemporal ::= DvDate ;
 DvTemporal ::= DvDateTime ;
 DvTemporal ::= DvDuration ;
 DvTemporal ::= DvTime ;
MetaDataSet ::= name::string() (entries::MetaDataEntry)+ ;
DvPositiveInteger ::= dv::α ;
FeederAuditDetails ::= systemId::DvIdentifier versionId::DvNormalizedString provider::PartyIdentified location::Location time::DvTemporal (subject::PartyProxy)+ ;
PINF ::= ε ;
ItemTree ::= (items::Item)+ ;
ItemList ::= (items::Item)+ ;
DER ::= ε ;
Ontology ::= (names::string())+ (internalVocabularies::string())+ (lookupTables::string())+ (terminologies::string())+ (generalEntries::OntologyEntry)+ ;
DvMediaApp ::= dv::α ;
DvUnsignedByte ::= dv::α ;
Instruction ::= expiryTime::DvTemporal narrative::DvString wfDefinition::DvParsable (activities::Activity)+ ;
DvDateTime ::= dv::α ;
DvProportion ::= proportionType::α ;
DvShort ::= dv::α ;
DvToken ::= dv::α ;
DvDuration ::= dv::α ;
MSK ::= ε ;
CCD ::= definition::Locatable (metaData::MetaDataSet)+ ontology::Ontology ;
DvUnsignedLong ::= dv::α ;
DvString ::= DvCodedString ;
 DvString ::= DvIdentifier ;
 DvString ::= uuid::α language::α dv::string() ;
Group ::= (members::Party)+ ;
DvOrdinal ::= dv::α symbol::string() ;
DvQuantity ::= units::α ;
DvInt ::= dv::integer() ;
Evaluation ::= data::ItemStructure ;
Element ::= dv::DvAny ;
DvParagraph ::= (items::DvString)+ ;
ItemTable ::= (rows::Cluster)+ ;
ItemSingle ::= item::Item ;
DvOrdered ::= DvOrdinal ;
 DvOrdered ::= DvQuantified ;
DvURI ::= dv::α ;
DvAny ::= DvBoolean ;
 DvAny ::= DvChar ;
 DvAny ::= DvEncapsulated ;
 DvAny ::= DvInterval ;
 DvAny ::= DvNumeric ;
 DvAny ::= DvOrdered ;
 DvAny ::= DvParagraph ;
 DvAny ::= DvURI ;
 DvAny ::= PartyProxy ;
 DvAny ::= ReferenceRange ;
DvByte ::= dv::α ;
Cluster ::= (items::Item)+ ;
Relationship ::= (targets::DvToken)+ ;
Action ::= time::DvTemporal description::ItemStructure ismTransition::DvCodedString instructionDetails::DvCodedString ;
Location ::= details::ItemStructure description::DvString isPrimary::DvBoolean ;
EventContext ::= healthcareFacility::Organization startTime::DvTemporal endTime::DvTemporal participation::Participation location::Location setting::DvCodedString ;
Organization ::= details::ItemStructure ;
UNK ::= ASKR ;
 UNK ::= ASKU ;
 UNK ::= NASK ;
 UNK ::= QS ;
 UNK ::= TRC ;
 UNK ::= ASKR | ASKU | NASK | QS | TRC ;
ReferenceRange ::= definition::DvString dataRange::DvInterval ;
Entry ::= AdminEntry ;
 Entry ::= CareEntry ;
DvMedia ::= DvMediaApp ;
 DvMedia ::= DvMediaAudio ;
 DvMedia ::= DvMediaImage ;
 DvMedia ::= DvMediaModel ;
 DvMedia ::= DvMediaMsg ;
 DvMedia ::= DvMediaMultipart ;
 DvMedia ::= DvMediaText ;
 DvMedia ::= DvMediaVideo ;
INV ::= DER ;
 INV ::= OTH ;
 INV ::= UNC ;
 INV ::= DER | OTH | UNC ;
DvMediaMsg ::= dv::α ;
DvLong ::= dv::α ;
NASK ::= ε ;
UNC ::= ε ;
DvNonPositiveInteger ::= dv::α ;
DvMediaVideo ::= dv::α ;
DataStructure ::= History ;
 DataStructure ::= ItemStructure ;
PartyProxy ::= PartyIdentified ;
 PartyProxy ::= PartySelf ;
Party ::= Device ;
 Party ::= Group ;
 Party ::= NonHuman ;
 Party ::= Organization ;
 Party ::= Person ;
Section ::= (items::ContentItem)+ ;
OntologyEntry ::= (contents::string())+ ;
MetaDataEntry ::= title::string() contents::string() ;
CareEntry ::= Action ;
 CareEntry ::= Evaluation ;
 CareEntry ::= Instruction ;
 CareEntry ::= Observation ;
DvDecimal ::= dv::α ;
NI ::= INV ;
 NI ::= MSK ;
 NI ::= NA ;
 NI ::= UNK ;
 NI ::= INV | MSK | NA | UNK ;
DvNormalizedString ::= uuid::α language::α dv::α ;
DvNegativeInteger ::= dv::α ;
IntervalEvent ::= width::DvDuration mathFunction::DvCodedString sampleCount::DvCount ;
ObjectRef ::= EntityRef ;
 ObjectRef ::= uuid::α namespace::α objType::α ;
NINF ::= ε ;
NA ::= ε ;
Item ::= Cluster ;
 Item ::= Element ;
 Item ::= Slot ;
PartySelf ::= externalRef::EntityRef ;
DvRate ::= rateType::α ;
FeederAudit ::= originatingSystemAudit::FeederAuditDetails (originatingSystemItemIds::DvIdentifier)+ feederSystemAudit::FeederAuditDetails (feederSystemIds::DvIdentifier)+ originalContent::DvEncapsulated ;
Attestation ::= attestedView::DvMedia proof::DvParsable reason::DvCodedString commiter::PartyProxy timeCommited::DvTemporal isPending::DvBoolean ;
Activity ::= description::ItemStructure timing::DvParsable (actions::DvToken)+ ;
Locatable ::= Activity ;
 Locatable ::= Attestation ;
 Locatable ::= Composition ;
 Locatable ::= ContentItem ;
 Locatable ::= DataStructure ;
 Locatable ::= Event ;
 Locatable ::= EventContext ;
 Locatable ::= Folder ;
 Locatable ::= Item ;
 Locatable ::= Location ;
 Locatable ::= Party ;
 Locatable ::= Relationship ;
 Locatable ::= Role ;
DvInteger ::= dv::α ;
DvLanguage ::= dv::α ;
DvMediaImage ::= dv::α ;
DvUnsignedInt ::= dv::α ;
DvChar ::= DvLanguage ;
 DvChar ::= DvNormalizedString ;
 DvChar ::= DvString ;
 DvChar ::= DvToken ;
DvMediaAudio ::= dv::α ;
QS ::= ε ;
Participation ::= performer::PartyProxy function::DvCodedString mode::DvCodedString time::DvTemporal ;
DvTime ::= dv::α ;
DvMediaText ::= dv::string() ;
Slot ::= ccd::DvToken (allowedCcds::DvToken)+ ;
DvParsable ::= dv::α formalism::α ;
ASKU ::= NAV ;
 ASKU ::= NAV ;
Link ::= relation::Relationship target::DvToken ;
ASKR ::= ε ;
DvInterval ::= lower::DvOrdered upper::DvOrdered lowerIncluded::α upperIncluded::α lowerUnbounded::α upperUnbounded::α ;
Role ::= details::ItemStructure description::DvString isPrimary::DvBoolean ;
DvBoolean ::= dv::α ;
EntityRef ::= uuid::α namespace::α objType::α ;
Folder ::= (items::Composition)+ ;
DvNonNegativeInteger ::= dv::α ;
Observation ::= data::History state::History ;
ContentItem ::= Entry ;
 ContentItem ::= Section ;
PointEvent ::= time::DvTemporal data::DvAny state::ItemStructure ;
Composition ::= attestation::Attestation (links::Link)+ original::DvToken predecessor::DvToken created::DvTemporal composer::PartyProxy territory::Location category::DvCodedString language::DvLanguage context::EventContext content::Locatable ;
TRC ::= ε ;
PartyRelated ::= relationship::Relationship ;
DvEncapsulated ::= DvMedia ;
 DvEncapsulated ::= DvParsable ;
OTH ::= NINF ;
 OTH ::= PINF ;
 OTH ::= NINF | PINF ;
NAV ::= ε ;
AdminEntry ::= data::ItemStructure ;
PartyIdentified ::= PartyRelated ;
 PartyIdentified ::= name::DvString (identifiers::DvIdentifier)+ ;
NonHuman ::= details::ItemStructure ;
ItemStructure ::= ItemList ;
 ItemStructure ::= ItemSingle ;
 ItemStructure ::= ItemTable ;
 ItemStructure ::= ItemTree ;
DvDate ::= dv::α ;
--------------------metamodels::paperdyne.owl.bgf--------------------
Decision ::= Acceptance ;
 Decision ::= Rejection ;
 Decision ::= Acceptance | Rejection ;
TraditionalLecture ::= hasAcronym::String ;
RadioCommunicationsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
AccommodationPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
TwoLevelConference ::= is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country isOrganizedBy::OrganizingCommittee annualOrder::Integer takesPlace::Location hasAcronym::String finishedBy::Program_Comitee_Chair focusesOn::Topic startedBy::Program_Comitee_Chair takesPlace::Location hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
SignalProcessingTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
SessionChair ::= hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person ;
SteeringCommittee ::= organizes::Conference ;
User ::= Committee ;
 User ::= Administrator ;
 User ::= recieve::Document (create::Thing)+ submit::Document ;
Rejection ::= ε ;
Renting ::= ε ;
GovernmentOrganization ::= isProviderOf::Sponsorship ;
CallForManuscripts ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
MealMenu ::= isMenuOf::MealEvent ;
Speaker ::= hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person ;
IndexOfAuthors ::= isProducedBy::Chair ;
Publisher ::= issues::Conference_Proceedings ;
Description ::= ε ;
OutsideReferee ::= hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person ;
OperatingTopicsystems ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
Location ::= locationOf::Event ;
GeneralCoChair ::= organizes::Conference ;
ComputerNetworksEnterpriseTopic ::= ε ;
PaperSubmissionChair ::= organizes::Conference ;
SatelliteAndSpaceCommunicationsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
High ::= ε ;
MobileComputingTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
Research ::= Simulating ;
 Research ::= Modelling ;
 Research ::= Simulating | Modelling ;
ConferenceSession ::= ε ;
SubjectArea ::= ε ;
NGO ::= isProviderOf::Sponsorship ;
Car ::= ε ;
CommunicationTheoryTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
AcademicEvent ::= TalkEvent ;
 AcademicEvent ::= OrganizationalMeeting ;
 AcademicEvent ::= PaperPresentation ;
 AcademicEvent ::= hasCall::Call ;
CallForPapers ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
CommunicationsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
SecurityTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
DiningPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
PaperAbstract ::= isAbstractOf::Paper abstractIsSubmittedBy::ContactAuthor ;
Author ::= AuthorNotReviewer ;
 Author ::= Co-Author ;
 Author ::= Corresponding_Author ;
 Author ::= Author_cd_proceedings_included ;
 Author ::= Lecturer ;
 Author ::= Plenary_lecture_speaker ;
 Author ::= Tutorial_speaker ;
 Author ::= Author_book_proceedings_included ;
 Author ::= ContactAuthor ;
 Author ::= Contact_Author ;
 Author ::= MainAuthor ;
 Author ::= Presenter ;
 Author ::= submitPaper::Paper writes::Contribution writes_article::Article assigns_article_to_conference::Article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution ;
PostScript ::= ε ;
HTML ::= ε ;
ContactAuthor ::= submitsAbstract::PaperAbstract ;
ConferenceProgram ::= isProgramOf::Conference consistsOf::Slot ;
Preview ::= ε ;
Workshop ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Delegate ::= One_day_presenter ;
 Delegate ::= Technical_commitee ;
 Delegate ::= Listener ;
 Delegate ::= Session_chair ;
 Delegate ::= Hotel_presenter ;
 Delegate ::= Non_speaker ;
 Delegate ::= IASTED_non_member ;
 Delegate ::= Conference_Hiker ;
 Delegate ::= IASTED_member ;
 Delegate ::= Speaker ;
 Delegate ::= One_day_presenter | Technical_commitee | Listener | Session_chair | Hotel_presenter | Non_speaker | IASTED_non_member | Conference_Hiker | IASTED_member ;
Inforamtion ::= ε ;
ComputerArchitectureTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
WorkshopTutorialChair ::= organizes::Conference ;
OrganizingCommittee ::= ProgramCoChair ;
 OrganizingCommittee ::= PublicationsChair ;
 OrganizingCommittee ::= WorkshopTutorialChair ;
 OrganizingCommittee ::= RegistrationChair ;
 OrganizingCommittee ::= StudentAdvocate ;
 OrganizingCommittee ::= FinanceChair ;
 OrganizingCommittee ::= PaperSubmissionChair ;
 OrganizingCommittee ::= PublicityWebChair ;
 OrganizingCommittee ::= SteeringCommittee ;
 OrganizingCommittee ::= GeneralCoChair ;
 OrganizingCommittee ::= organizes::Conference ;
OrganizationalMeeting ::= hasCall::Call ;
PersonalReviewHistory ::= isReviewHistoryOf::Reviewer ;
AccpetIfRoomRating ::= ε ;
RejectedPaper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum hasCo-Author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
ParallelAndDistributedComputingTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
Advocate ::= will_advocate::Advocated_Paper ;
Tax ::= Value_added_tax ;
 Tax ::= Departure_tax ;
 Tax ::= Value_added_tax | Departure_tax ;
City ::= Presenter_city ;
 City ::= Conference_city ;
 City ::= Sponsor_city ;
 City ::= Trip_city ;
 City ::= Presenter_city | Conference_city | Sponsor_city | Trip_city ;
MultimediaTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
CryptographyTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
ReviewQuestion ::= TextualReviewQuestion ;
 ReviewQuestion ::= NumericalReviewQuestion ;
 ReviewQuestion ::= TextualReviewQuestion | NumericalReviewQuestion ;
Tutorial ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Regular ::= earlyRegistration::Boolean ;
Email ::= Notification_Email ;
 Email ::= Group_Email ;
 Email ::= Approval_Email ;
 Email ::= Rejection_Email ;
 Email ::= Notification_Email | Group_Email | Approval_Email | Rejection_Email ;
ProgramCommittee ::= hasProgramCommitteeMember::ProgramCommitteeMember hasMember::ProgramCommitteeMember ;
Transparency ::= (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document recieved_by::User used_by::Person submited__by::User ;
Review ::= Meta-Review ;
 Review ::= Positive_Review ;
 Review ::= Negative_Review ;
 Review ::= Neutral_Review ;
 Review ::= reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer containsEvaluation::Evaluation rates::Paper isWritenBy::Reviewer writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::Activity review_written_by::Reviewer ;
Country ::= ε ;
Person ::= ConferenceMember ;
 Person ::= ExternalReviewer ;
 Person ::= User ;
 Person ::= Conference_participant ;
 Person ::= Conference_contributor ;
 Person ::= Committee_member ;
 Person ::= Conference_applicant ;
 Person ::= Track-workshop_chair ;
 Person ::= Scholar ;
 Person ::= Participant ;
 Person ::= Member_PC ;
 Person ::= Chair_PC ;
 Person ::= Science_Worker ;
 Person ::= Assistant ;
 Person ::= Volunteer ;
 Person ::= participant ;
 Person ::= ConferenceChair ;
 Person ::= Attendee ;
 Person ::= SessionChair ;
 Person ::= TPCMember ;
 Person ::= Paper_Author ;
 Person ::= Conference_Participant ;
 Person ::= Agency_Staff_Member ;
 Person ::= Possible_Reviewer ;
 Person ::= Student ;
 Person ::= Delegate ;
 Person ::= Sponsor ;
 Person ::= OutsideReferee ;
 Person ::= ConferenceAttendant ;
 Person ::= Program_Comitee_Chair ;
 Person ::= ProgramCommitteeMember ;
 Person ::= Chairman ;
 Person ::= Organizer ;
 Person ::= Speaker ;
 Person ::= hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person ;
ProgramCommitteeMember ::= ProgramCommitteeChair ;
 ProgramCommitteeMember ::= Chair ;
 ProgramCommitteeMember ::= memberOfProgramCommittee::ProgramCommittee maxPapers::Integer addedBy::Administrator isMemberOf::ProgramCommittee hasPassword::String ;
PaperQuestion ::= ε ;
Poster ::= is_submitted_at::Conference_volume ;
 Poster ::= changedBy::Author hasContributionStatus::EEnum writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
 Poster ::= hasContributionFileStatus::EEnum ;
RegistrationChair ::= organizes::Conference ;
Submission ::= Final_manuscript ;
 Submission ::= Initial_manuscipt ;
 Submission ::= Final_manuscript | Initial_manuscipt ;
Paper ::= PaperFullVersion ;
 Paper ::= Invited_Paper ;
 Paper ::= Short_Paper ;
 Paper ::= Full_Paper ;
 Paper ::= Undecided_Paper ;
 Paper ::= ActivePaper ;
 Paper ::= PendingPaper ;
 Paper ::= WithdrawnPaper ;
 Paper ::= RejectedPaper ;
 Paper ::= PublishedPaper ;
 Paper ::= Camera_Ready_Paper ;
 Paper ::= Workshop_Paper ;
 Paper ::= Industrial_Paper ;
 Paper ::= Conference_Paper ;
 Paper ::= Poster_Paper ;
 Paper ::= Regular_Paper ;
 Paper ::= Demo_Paper ;
 Paper ::= AcceptedPaper ;
 Paper ::= Submitted_Paper ;
 Paper ::= Abstract ;
 Paper ::= Accepted_Paper ;
 Paper ::= Rejected_Paper ;
 Paper ::= PaperAbstract ;
 Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum hasCo-Author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
Volunteer ::= hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person ;
WithdrawnPaper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum hasCo-Author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
Fee ::= Registration_fee ;
 Fee ::= Hotel_fee ;
 Fee ::= Fee_for_extra_trip ;
 Fee ::= Registration_fee | Hotel_fee | Fee_for_extra_trip ;
PCMembersList ::= isProducedBy::Chair ;
Lecture ::= Plenary_lecture ;
 Lecture ::= QualitatvieLecture ;
 Lecture ::= TraditionalLecture ;
 Lecture ::= hasAcronym::String ;
Committee ::= Program_committee ;
 Committee ::= Organizing_committee ;
 Committee ::= Steering_committee ;
 Committee ::= has_members::Committee_member was_a_committee_of::Conference_volume has_a_committee_co-chair::Co-chair has_a_committee_chair::Chair ;
OutputDocument ::= CD-ROM ;
 OutputDocument ::= IndexOfAuthors ;
 OutputDocument ::= ExternalReviewersList ;
 OutputDocument ::= Program ;
 OutputDocument ::= PCMembersList ;
 OutputDocument ::= ListOfAbstracts ;
 OutputDocument ::= BookletOfAbstracts ;
 OutputDocument ::= Proceedings ;
 OutputDocument ::= isProducedBy::Chair ;
Evaluation ::= isContainedIn::Review ;
QualitatvieLecture ::= hasAcronym::String ;
Assistance ::= ε ;
NumericalReviewQuestion ::= ε ;
Symposium ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location ;
Organization ::= Company ;
 Organization ::= AcademiaOrganization ;
 Organization ::= IndustryOrganization ;
 Organization ::= NGO ;
 Organization ::= GovernmentOrganization ;
 Organization ::= University ;
 Organization ::= isProviderOf::Sponsorship ;
ComputerNetworksSecurityTopic ::= ε ;
URL ::= Event_URL ;
 URL ::= Senior_Reviewer_URL ;
 URL ::= Chair_URL ;
 URL ::= Contact_Person_URL ;
 URL ::= Regular_Reviewer_URL ;
 URL ::= Event_URL | Senior_Reviewer_URL | Chair_URL | Contact_Person_URL | Regular_Reviewer_URL ;
Text ::= ε ;
AuthorNotReviewer ::= submitPaper::Paper writes::Contribution writes_article::Article assigns_article_to_conference::Article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution ;
PersonalPublicationHistory ::= ε ;
Topics ::= RFC ;
 Topics ::= Classic_Papers ;
 Topics ::= Networking ;
 Topics ::= Humour ;
 Topics ::= Programming ;
 Topics ::= Computer_Science ;
 Topics ::= RFC | Classic_Papers | Networking | Humour | Programming | Computer_Science ;
ActivitySubmissionForm ::= TutorialProposal ;
 ActivitySubmissionForm ::= WorksopProposal ;
 ActivitySubmissionForm ::= isSubmittedBy::Author hasAuthor::Author submissionDeadline::dateTime ;
AssociatedChair ::= memberOfConference::Conference ;
Conference ::= Conference_volume ;
 Conference ::= TwoLevelConference ;
 Conference ::= SingleLevelConference ;
 Conference ::= is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country isOrganizedBy::OrganizingCommittee annualOrder::Integer takesPlace::Location hasAcronym::String finishedBy::Program_Comitee_Chair focusesOn::Topic startedBy::Program_Comitee_Chair takesPlace::Location hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
Computer ::= ε ;
Document ::= Email ;
 Document ::= Template ;
 Document ::= Article ;
 Document ::= SlideSet ;
 Document ::= Programme ;
 Document ::= MealMenu ;
 Document ::= Programme_Brochure ;
 Document ::= Flyer ;
 Document ::= Web_Site ;
 Document ::= Multi-author_Volume ;
 Document ::= Form ;
 Document ::= Mailing_list ;
 Document ::= Record_of_attendance ;
 Document ::= Brief_introduction_for_Session_chair ;
 Document ::= Invitation_letter ;
 Document ::= Viza ;
 Document ::= Transparency ;
 Document ::= Submission ;
 Document ::= Payment_document ;
 Document ::= Evaluation ;
 Document ::= PaperAbstract ;
 Document ::= (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document recieved_by::User used_by::Person submited__by::User ;
Viza ::= (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document recieved_by::User used_by::Person submited__by::User ;
Presentation ::= Invited_talk ;
 Presentation ::= PowerPoint_presentation ;
 Presentation ::= Video_presentation ;
 Presentation ::= is_given_by::Active_conference_participant ;
ReviewRating ::= WeekRejectRating ;
 ReviewRating ::= AcceptRating ;
 ReviewRating ::= AccpetIfRoomRating ;
 ReviewRating ::= RejectRating ;
 ReviewRating ::= WeekRejectRating | AcceptRating | AccpetIfRoomRating | RejectRating ;
Low ::= ε ;
WirelessCommunicationsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
Item ::= Transport_vehicle ;
 Item ::= Card ;
 Item ::= Audiovisual_equipment ;
 Item ::= Publication ;
 Item ::= Document ;
 Item ::= go_through::Activity (is_used_for::Thing)+ is_signed_by::Person is_made_from::Item is_sent_after::Time is_needed_for::Person is_sent_before::Time is_prepared_by::Person is_used_by::Person is_given_to::Person is_sent_by::Person is_writen_by::Person ;
ConferenceAttendant ::= mustPay::Fee hasAdress::String paid::Boolean hasPhone::String ;
TextualReviewQuestion ::= ε ;
Card ::= Credit_card ;
Activity ::= Event_Creation ;
 Activity ::= Request ;
 Activity ::= Event_Approval ;
 Activity ::= Registration ;
 Activity ::= paper_assignment ;
 Activity ::= bidding_of_reviewer ;
 Activity ::= managing_of_conference_process ;
 Activity ::= reviewing_proces ;
 Activity ::= notification ;
 Activity ::= submission_process ;
 Activity ::= Activity_before_conference ;
 Activity ::= Conference_activity ;
 Activity ::= Activity_after_conference ;
 Activity ::= Lecture ;
 Activity ::= hasTopic::Topic expectedAttendance::Integer isPartOf::Conference is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime has_result::Article sent_by::Person is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::Article is_performed_by::human is_supervised_by::human ;
TalkEvent ::= ClosingTalk ;
 TalkEvent ::= WelcomeTalk ;
 TalkEvent ::= ClosingTalk | WelcomeTalk ;
FinanceChair ::= organizes::Conference ;
Track ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
CADTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
Moderate ::= ε ;
Integer ::= integer() ;
PublicationsChair ::= organizes::Conference ;
ComputerNetworksSensorTopic ::= ε ;
Networking ::= ε ;
Participant ::= Student ;
 Participant ::= Regular ;
 Participant ::= Member ;
 Participant ::= earlyRegistration::Boolean ;
MeetingRoomPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
SlideSet ::= (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document recieved_by::User used_by::Person submited__by::User ;
ExternalReviewer ::= cooperatesReviewer::Reviewer assignedByReviewer::Reviewer ;
Topic ::= ParallelAndDistributedComputingTopic ;
 Topic ::= WirelessCommunicationsTopic ;
 Topic ::= OperatingTopicsystems ;
 Topic ::= ComputerNetworksTopic ;
 Topic ::= SatelliteAndSpaceCommunicationsTopic ;
 Topic ::= CADTopic ;
 Topic ::= MultimediaTopic ;
 Topic ::= CommunicationsTopic ;
 Topic ::= PowerlineTransmissionTopic ;
 Topic ::= AntennasTopic ;
 Topic ::= PerformanceTopic ;
 Topic ::= SignalProcessingTopic ;
 Topic ::= MicroelectronicsTopic ;
 Topic ::= TestOnlyTopic ;
 Topic ::= RadioCommunicationsTopic ;
 Topic ::= ComputerArchitectureTopic ;
 Topic ::= MedicineTopic ;
 Topic ::= SecurityTopic ;
 Topic ::= MobileComputingTopic ;
 Topic ::= CryptographyTopic ;
 Topic ::= CommunicationTheoryTopic ;
 Topic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
Organizer ::= CommitteeMember ;
WelcomeTalk ::= ε ;
SocialEvent ::= Excursion ;
 SocialEvent ::= Reception ;
 SocialEvent ::= Excursion | Reception ;
ContactInformation ::= hasCity::String hasStreet::String hasPostalCode::String hasPhone::String ;
Misc ::= ε ;
FreeTimeBreak ::= ε ;
Van ::= ε ;
Slides ::= hasContributionFileStatus::EEnum ;
PerformanceTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
Sponzorship ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
Programme ::= belongsToEvent::ConferenceEvent ;
BreakEvent ::= CoffeeBreak ;
 BreakEvent ::= FreeTimeBreak ;
 BreakEvent ::= MealBreak ;
 BreakEvent ::= CoffeeBreak | FreeTimeBreak | MealBreak ;
Preference ::= ε ;
Sponsor ::= hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person ;
Organisation ::= Organising_Agency ;
 Organisation ::= Academic_Institution ;
 Organisation ::= Proceedings_Publisher ;
 Organisation ::= (publisherOf::Thing)+ technicallyOrganises::Thing ;
AcademiaOrganization ::= isProviderOf::Sponsorship ;
ConferenceMember ::= Reviewer ;
 ConferenceMember ::= ConferenceChair ;
 ConferenceMember ::= AssociatedChair ;
 ConferenceMember ::= ProgramCommitteeMember ;
 ConferenceMember ::= Chairman ;
 ConferenceMember ::= memberOfConference::Conference ;
MedicineTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
Other ::= ε ;
Time ::= Deadline ;
 Time ::= Trip_day ;
 Time ::= Conference_days ;
 Time ::= Deadline | Trip_day | Conference_days ;
RatedPapers ::= hasRating::ReviewRating ;
ConferenceChair ::= memberOfConference::Conference ;
 ConferenceChair ::= hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person ;
Place ::= DiningPlace ;
 Place ::= ConferenceVenuePlace ;
 Place ::= MeetingRoomPlace ;
 Place ::= AccommodationPlace ;
 Place ::= Building ;
 Place ::= Session_room ;
 Place ::= Hotel_room ;
 Place ::= Conference_hall ;
 Place ::= Main_office ;
 Place ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
EEnum ::= (male::ε) | (female::ε) | (high::ε) | (medium::ε) | (low::ε) | (very high::ε) | (submitted::ε) | (missing::ε) | (notStarted::ε) | (active::ε) | (finished::ε) | (accepted::ε) | (rejected::ε) | (regular::ε) | (invited::ε) | (lowBid::ε) | (-::ε) | (CONFLICT::ε) | (wantNot::ε) | (highBid::ε) | (Yes::ε) | (No::ε) | (Compilers::ε) | (Microarchitecture::ε) | (Systems::ε) | (ForwardLookingIdea::ε) | (Accept::ε) | (Reject::ε) | (Unsure::ε) ;
AcceptRating ::= ε ;
Form ::= Hotel_registration_form ;
 Form ::= Registration_form ;
 Form ::= Author_information_form ;
 Form ::= Hotel_registration_form | Registration_form | Author_information_form ;
ClosingTalk ::= ε ;
Bid ::= adjustedBy::Reviewer ;
MealBreak ::= ε ;
ListOfAbstracts ::= isProducedBy::Chair ;
Attendee ::= hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person ;
Registration ::= hasTopic::Topic expectedAttendance::Integer isPartOf::Conference is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime has_result::Article sent_by::Person is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::Article is_performed_by::human is_supervised_by::human ;
 Registration ::= ε ;
Article ::= group_email ;
 Article ::= notification_email ;
 Article ::= abstract_of_paper ;
 Article ::= review_form ;
 Article ::= summary_of_reviews ;
 Article ::= Review ;
 Article ::= article_written_by::Author has_reviewer::Reviewer has_abstract::Abstract goes_through::Activity is_sent_to::human is_created_in::Activity structure_created_by::human has_author::human gives_classification::classification ;
WorksopProposal ::= isSubmittedBy::Author hasAuthor::Author submissionDeadline::dateTime ;
Lecturer ::= Worker_lecturer ;
 Lecturer ::= Student_lecturer ;
 Lecturer ::= Worker_lecturer | Student_lecturer ;
Departure ::= ε ;
Listener ::= ε ;
Building ::= Presenter_house ;
 Building ::= Conference_restaurant ;
 Building ::= Conference_building ;
 Building ::= Conference_airport ;
 Building ::= Conference_hotel ;
 Building ::= Sponsor_company_house ;
 Building ::= Presenter_university ;
 Building ::= Presenter_house | Conference_restaurant | Conference_building | Conference_airport | Conference_hotel | Sponsor_company_house | Presenter_university ;
ConferenceDinner ::= hasMenu::MealMenu ;
Thing ::= Role ;
 Thing ::= Person ;
 Thing ::= Detail ;
 Thing ::= Review_expertise ;
 Thing ::= Review_preference ;
 Thing ::= date ;
 Thing ::= URL ;
 Thing ::= conference_setup ;
 Thing ::= Contribution ;
 Thing ::= Event ;
 Thing ::= Place ;
 Thing ::= City ;
 Thing ::= Activity ;
 Thing ::= OrganizingCommittee ;
 Thing ::= ActivitySubmissionForm ;
 Thing ::= DoubleBlindReview ;
 Thing ::= ConferenceProgram ;
 Thing ::= Slot ;
 Thing ::= ResearchTopic ;
 Thing ::= OutputDocument ;
 Thing ::= ProgramCommittee ;
 Thing ::= Criterion ;
 Thing ::= Program_Comitee ;
 Thing ::= Conflict_Of_Interest ;
 Thing ::= Conflict_Rules ;
 Thing ::= Topic ;
 Thing ::= Program_Comitee_Meeting ;
 Thing ::= Document ;
 Thing ::= Organizer ;
 Thing ::= Role | Person | Detail | Review_expertise | Review_preference | date | URL | conference_setup | Contribution | Event | Place | City | Activity | OrganizingCommittee | ActivitySubmissionForm | DoubleBlindReview | ConferenceProgram | Slot | ResearchTopic | OutputDocument | ProgramCommittee | Criterion | Program_Comitee | Conflict_Of_Interest | Conflict_Rules | Topic | Program_Comitee_Meeting ;
ProgramCommitteeChair ::= endReview::Review ;
Scholar ::= studyAt::University ;
MainAuthor ::= submitPaper::Paper writes::Contribution writes_article::Article assigns_article_to_conference::Article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution ;
Excursion ::= ε ;
TPCMember ::= hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person ;
Assistant ::= hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person ;
ConferenceEvent ::= NonAcademicEvent ;
 ConferenceEvent ::= AcademicEvent ;
 ConferenceEvent ::= hasAttendee::Person hasLocation::Place hasProgramme::Programme hasEndDateTime::dateTime hasStartDateTime::dateTime ;
Member ::= Program_chair ;
 Member ::= Advocate ;
 Member ::= Web_address::String ;
Programming ::= ε ;
ComputerNetworksMeasurementsTopic ::= ε ;
Committees ::= Program_Committee ;
 Committees ::= Review_Committee ;
 Committees ::= Program_Committee | Review_Committee ;
ProgramCoChair ::= organizes::Conference ;
People ::= Member ;
 People ::= Author ;
 People ::= Surname::String Name::String Country::String E-mail::String Organisation::String ;
ComputerNetworksTopic ::= ComputerNetworksEnterpriseTopic ;
 ComputerNetworksTopic ::= ComputerNetworksSwitchingTopic ;
 ComputerNetworksTopic ::= ComputerNetworksSensorTopic ;
 ComputerNetworksTopic ::= ComputerNetworksSecurityTopic ;
 ComputerNetworksTopic ::= ComputerNetworksOpticalTopic ;
 ComputerNetworksTopic ::= ComputerNetworksMeasurementsTopic ;
 ComputerNetworksTopic ::= ComputerNetworksManagementTopic ;
 ComputerNetworksTopic ::= ComputerNetworksAapplicationsTopic ;
 ComputerNetworksTopic ::= ComputerNetworksEnterpriseTopic | ComputerNetworksSwitchingTopic | ComputerNetworksSensorTopic | ComputerNetworksSecurityTopic | ComputerNetworksOpticalTopic | ComputerNetworksMeasurementsTopic | ComputerNetworksManagementTopic | ComputerNetworksAapplicationsTopic ;
Reception ::= ε ;
University ::= isProviderOf::Sponsorship scientificallyOrganises::Academic_Institution ;
Administrator ::= approve::Event assign::Role assigns::Thing finalizePaperAssignment::Conference runPaperAssignmentTools::Conference enableVirtualMeeting::Conference startReviewerBidding::Conference assignReviewer::Reviewer rejectPaper::Paper enterConferenceDetails::Conference printHardcopyMailingManifests::Conference setMaxPapers::ProgramCommitteeMember enterReviewCriteria::Conference acceptPaper::Paper addProgramCommitteeMember::ProgramCommitteeMember ;
PaymentMode ::= ε ;
BookletOfAbstracts ::= isProducedBy::Chair ;
StudentAdvocate ::= organizes::Conference ;
PaperPresentation ::= relatedToPaper::AcceptedPaper ;
Chair ::= was_a_committee_chair_of::Committee assigns_reviewers_to_article::Reviewer creates_program::program produces::OutputDocument sets::Thing accepts::Paper rejects::Paper asksForPreference::Reviewer isChairOf::Session ;
ExternalReviewersList ::= isProducedBy::Chair ;
Money ::= Tax ;
 Money ::= Fee ;
 Money ::= Sponzorship ;
 Money ::= Tip ;
 Money ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
AntennasTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
MicroelectronicsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
Template ::= (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document recieved_by::User used_by::Person submited__by::User ;
ComputerNetworksOpticalTopic ::= ε ;
Role ::= Admin_Role ;
 Role ::= Author_Role ;
 Role ::= Committe_Role ;
 Role ::= Head_Role ;
 Role ::= Reviewer_Role ;
 Role ::= assigned_by::Administrator ;
Chairman ::= ConferenceChair ;
 Chairman ::= AssociatedChair ;
 Chairman ::= ProgramCommitteeChair ;
 Chairman ::= hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person memberOfConference::Conference ;
TutorialProposal ::= isSubmittedBy::Author hasAuthor::Author submissionDeadline::dateTime ;
RFC ::= ε ;
Presenter ::= Invited_Speaker ;
Criterion ::= hasWeight::double ;
Modelling ::= ε ;
Call ::= CallForPapers ;
 Call ::= CallForReviews ;
 Call ::= CallForManuscripts ;
 Call ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
PaperStatus ::= isStatusOf::Paper ;
Tip ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
Event ::= Symposium ;
 Event ::= Social_event ;
 Event ::= Administrative_event ;
 Event ::= Working_event ;
 Event ::= pc_meeting ;
 Event ::= Social_Event ;
 Event ::= Scientific_Event ;
 Event ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location ;
Deadline ::= Deadline_hotel_reservation ;
 Deadline ::= Submissions_deadline ;
 Deadline ::= Deadline_for_notification_of_acceptance ;
 Deadline ::= Registation_deadline ;
 Deadline ::= Camera_ready_manuscript_deadline ;
 Deadline ::= done_till::date ;
MealEvent ::= ConferenceDinner ;
 MealEvent ::= hasMenu::MealMenu ;
Acceptance ::= ε ;
Session ::= Conference_Session ;
 Session ::= Regular_Session ;
 Session ::= Poster_Session ;
 Session ::= Demo_Session ;
 Session ::= Workshop_Session ;
 Session ::= Speaker_lecture ;
 Session ::= hasAssignedPaper::AcceptedPaper room::String isAssociatedTo::Slot hasChair::Chair ;
PublicityWebChair ::= organizes::Conference ;
Reccommendation ::= Marginal_Tend_to_Reject ;
 Reccommendation ::= Marginal_Tend_to_Accept ;
 Reccommendation ::= Portable_Reject ;
 Reccommendation ::= Must_Accept ;
 Reccommendation ::= Clear_Reject ;
 Reccommendation ::= Clear_Accept ;
 Reccommendation ::= Marginal_Tend_to_Reject | Marginal_Tend_to_Accept | Portable_Reject | Must_Accept | Clear_Reject | Clear_Accept ;
CoffeeBreak ::= ε ;
State ::= Presenter_state ;
 State ::= Conference_state ;
 State ::= Sponsor_state ;
 State ::= Presenter_state | Conference_state | Sponsor_state ;
Detail ::= ε ;
Request ::= Help_Request ;
Humour ::= ε ;
PhaseOfConferencePreparation ::= Setup_Phase ;
 PhaseOfConferencePreparation ::= Camera_Ready_Copy_Phase ;
 PhaseOfConferencePreparation ::= Assignment_Phase ;
 PhaseOfConferencePreparation ::= Blocked_Phase ;
 PhaseOfConferencePreparation ::= Abstract_And_Paper_Submission_Phase ;
 PhaseOfConferencePreparation ::= Invitation_Of_Reviewers_Phase ;
 PhaseOfConferencePreparation ::= Review_Phase ;
 PhaseOfConferencePreparation ::= Closed_Phase ;
 PhaseOfConferencePreparation ::= Bidding_Phase ;
 PhaseOfConferencePreparation ::= hasPhaseStatus::EEnum ;
Program ::= isProducedBy::Chair ;
Proceedings ::= Conference_Proceedings ;
 Proceedings ::= (includes::Thing)+ ;
PublishedPaper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum hasCo-Author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
Company ::= isProviderOf::Sponsorship ;
DoubleBlindReview ::= isExecutedBy::Reviewer ;
ReviewForm ::= ε ;
CommitteeMember ::= isMemberOf::Conference ;
PendingPaper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum hasCo-Author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
PowerlineTransmissionTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
IndustryOrganization ::= isProviderOf::Sponsorship ;
TestOnlyTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
WeekRejectRating ::= ε ;
Discussion ::= ε ;
Trip ::= ε ;
RTF ::= ε ;
Banquet ::= ε ;
Abstract ::= Tutorial_Abstract ;
 Abstract ::= Invited_Talk_Abstract ;
 Abstract ::= (is_the_1th_part_of::Thing)+ part_of_article::Article ;
Cheque ::= ε ;
Flyer ::= (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document recieved_by::User used_by::Person submited__by::User ;
Taxi ::= ε ;
PaperFullVersion ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum hasCo-Author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
RejectRating ::= ε ;
Introduction ::= Introduction_of_speaker ;
SingleLevelConference ::= is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country isOrganizedBy::OrganizingCommittee annualOrder::Integer takesPlace::Location hasAcronym::String finishedBy::Program_Comitee_Chair focusesOn::Topic startedBy::Program_Comitee_Chair takesPlace::Location hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
Sponsorship ::= TravelGrant ;
 Sponsorship ::= providedBy::Organization hasCostCurrency::String hasCostAmount::Integer ;
ConferenceVenuePlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
ResearchTopic ::= ε ;
String ::= string() ;
Currency ::= ε ;
CallForReviews ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
Contribution ::= Poster ;
 Contribution ::= Short_paper ;
 Contribution ::= Contribution_File ;
 Contribution ::= Paper ;
 Contribution ::= changedBy::Author hasContributionStatus::EEnum writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
ComputerNetworksManagementTopic ::= ε ;
NonAcademicEvent ::= MealEvent ;
 NonAcademicEvent ::= BreakEvent ;
 NonAcademicEvent ::= SocialEvent ;
 NonAcademicEvent ::= MealEvent | BreakEvent | SocialEvent ;
Reviewer ::= Meta-Reviewer ;
 Reviewer ::= invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ writes_review::Review hasReviewHistory::PersonalReviewHistory executes::DoubleBlindReview cooperates::ExternalReviewer IsAssignedTo::Paper hasConflictedPaper::Paper hasPreferredPaper::Paper hasPreferredTopic::ResearchTopic writeReview::Review has_made_review::Paper_Review UserName::String Comments_to_Chair::String Other_Areas::String refuses::Pending_Proposed_Conflict reviews::Paper bidsFor::Paper confirmes::Pending_Proposed_Conflict assignedPaperBy::Program_Comitee_Chair assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper assignExternalReviewer::ExternalReviewer ;
ComputerNetworksSwitchingTopic ::= ε ;
Slot ::= date::date endsAt::time beginsAt::time forms::ConferenceProgram hosts::Session ;
Student ::= earlyRegistration::Boolean ;
 Student ::= hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person ;
Format ::= Adobe_PDF ;
 Format ::= MS_Word ;
 Format ::= Corel_Word_Perfect ;
 Format ::= HTML ;
 Format ::= PostScript ;
 Format ::= RTF ;
 Format ::= Text ;
 Format ::= Adobe_PDF | MS_Word | Corel_Word_Perfect | HTML | PostScript | RTF | Text ;
PersonalHistory ::= PersonalPublicationHistory ;
 PersonalHistory ::= PersonalReviewHistory ;
 PersonalHistory ::= PersonalPublicationHistory | PersonalReviewHistory ;
Account ::= registred_by::Person ;
Publication ::= Cd_proceening ;
 Publication ::= Book_proceeding ;
 Publication ::= Cd_proceening | Book_proceeding ;
ComputerNetworksAapplicationsTopic ::= ε ;
Boolean ::= "true" | "false" ;
Question ::= ReviewQuestion ;
 Question ::= PaperQuestion ;
 Question ::= ReviewQuestion | PaperQuestion ;
ActivePaper ::= RatedPapers ;
 ActivePaper ::= hasRating::ReviewRating ;
AcceptedPaper ::= relatedToEvent::PaperPresentation isAssignedToSession::Session ;
TravelGrant ::= providedBy::Organization hasCostCurrency::String hasCostAmount::Integer ;
Simulating ::= ε ;
--------------------metamodels::sbvrEclipse.bgf--------------------
ReferenceSchemeSimplyUsesFactTypeRole ::= referenceScheme::ReferenceScheme factTypeRole::FactTypeRole ;
FactModel ::= (name::Name)+ ;
RepresentationFormality ::= ε ;
VocabularyNamespaceIsDerivedFromVocabulary ::= vocabularyNamespace::VocabularyNamespace vocabulary::Vocabulary ;
PropositionNominalizationConsidersLogicalFormulation ::= propositionNominalization::PropositionNominalization logicalFormulation::LogicalFormulation ;
SpeechCommunityDeterminesRulebook ::= speechCommunity::SpeechCommunity rulebook::Rulebook ;
SpeechCommunityUsesLanguage ::= speechCommunity::SpeechCommunity language::Language ;
Viewpoint ::= (name::Name)+ ;
ProjectingFormulationBindsToBindableTarget ::= projectingFormulation::ProjectingFormulation bindableTarget::BindableTarget ;
ConceptHasInstance ::= concept::Concept instance::Thing ;
PossibilityFormulation ::= ε ;
FactType ::= Characteristic ;
 FactType ::= AssociativeFactType ;
 FactType ::= AssortmentFactType ;
 FactType ::= BinaryFactType ;
 FactType ::= SpecializationFactType ;
 FactType ::= IsroleofFactType ;
 FactType ::= (factTypeForm::FactTypeForm)+ (role::FactTypeRole)+ ;
RestrictedPermissionStatement ::= ε ;
SpeechCommunityOwnsOwnedDefinition ::= speechCommunity::SpeechCommunity ownedDefinition::OwnedDefinition ;
CommunicationContent ::= meaning::Meaning expression::Expression ;
OptionalityStatement ::= ε ;
AtomicFormulationIsBasedOnFactType ::= atomicFormulation::AtomicFormulation factType::FactType ;
Objectification ::= ε ;
Situation ::= (name::Name)+ ;
StatementOfAdviceOfPossibility ::= ContingencyStatement ;
 StatementOfAdviceOfPossibility ::= NonnecessityStatement ;
 StatementOfAdviceOfPossibility ::= PossibilityStatement ;
 StatementOfAdviceOfPossibility ::= ContingencyStatement | NonnecessityStatement | PossibilityStatement ;
BodyOfSharedMeaningsUnitesSemanticCommunity ::= bodyOfSharedMeanings::BodyOfSharedMeanings semanticCommunity::SemanticCommunity ;
Meaning ::= Proposition ;
 Meaning ::= Concept ;
 Meaning ::= Question ;
 Meaning ::= (representation::Representation)+ ;
LogicalOperationHasLogicalOperand ::= logicalOperation::LogicalOperation logicalOperand::LogicalFormulation ;
Description ::= meaning::Meaning expression::Expression ;
Implication ::= (consequent::LogicalFormulation)+ (antecedent::LogicalFormulation)+ ;
ConceptualSchema ::= (name::Name)+ ;
ModalFormulationEmbedsLogicalFormulation ::= modalFormulation::ModalFormulation logicalFormulation::LogicalFormulation ;
Designation ::= Name ;
 Designation ::= Placeholder ;
 Designation ::= FactSymbol ;
 Designation ::= FactTypeRoleDesignation ;
 Designation ::= NonverbalDesignation ;
 Designation ::= PreferredDesignation ;
 Designation ::= ProhibitedDesignation ;
 Designation ::= Term ;
 Designation ::= implicitlyIsUnderstood::Boolean signifier::Expression ;
StructuralRuleStatement ::= ImpossibilityStatement ;
 StructuralRuleStatement ::= NecessityStatement ;
 StructuralRuleStatement ::= RestrictedPossibilityStatement ;
 StructuralRuleStatement ::= ImpossibilityStatement | NecessityStatement | RestrictedPossibilityStatement ;
AtmostnQuantificationHasMaximumCardinality ::= atmostnQuantification::AtmostnQuantification maximumCardinality::NonnegativeInteger ;
RoleBindingOccursInAtomicFormulation ::= roleBinding::RoleBinding atomicFormulation::AtomicFormulation ;
AtleastnQuantification ::= ExistentialQuantification ;
 AtleastnQuantification ::= minimumCardinality::NonnegativeInteger ;
ConceptOfThingExistingDependently ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
LogicalFormulation ::= ProjectingFormulation ;
 LogicalFormulation ::= Quantification ;
 LogicalFormulation ::= AtomicFormulation ;
 LogicalFormulation ::= LogicalOperation ;
 LogicalFormulation ::= InstantiationFormulation ;
 LogicalFormulation ::= ModalFormulation ;
 LogicalFormulation ::= Objectification ;
 LogicalFormulation ::= PropositionNominalization ;
 LogicalFormulation ::= ClosedLogicalFormulation ;
 LogicalFormulation ::= ProjectingFormulation | Quantification | AtomicFormulation | LogicalOperation | InstantiationFormulation | ModalFormulation | Objectification | PropositionNominalization ;
ObjectificationConsidersLogicalFormulation ::= objectification::Objectification logicalFormulation::LogicalFormulation ;
VocabularyIsDesignedForSpeechCommunity ::= vocabulary::Vocabulary speechCommunity::SpeechCommunity ;
QuantificationIntroducesVariable ::= quantification::Quantification variable::Variable ;
IntensionalDefinition ::= DefiniteDescription ;
RepresentationIsInSubjectField ::= representation::Representation subjectField::SubjectField ;
FactTypeForm ::= NounForm ;
 FactTypeForm ::= SententialForm ;
 FactTypeForm ::= (placeholder::Placeholder)+ ;
Community ::= SemanticCommunity ;
 Community ::= SpeechCommunity ;
 Community ::= (uri::Uri)+ (subcommunity::Community)+ ;
StatementExpressesProposition ::= statement::Statement proposition::Proposition ;
FactTypeFormDemonstratesDesignation ::= factTypeForm::FactTypeForm designation::Designation ;
ProhibitionStatement ::= ε ;
RepresentationRepresentsMeaning ::= representation::Representation meaning::Meaning ;
NonobligationStatement ::= ε ;
Segmentation ::= ContextOfThing ;
 Segmentation ::= RepresentationFormality ;
 Segmentation ::= ThingInContext ;
 Segmentation ::= ContextOfThing | RepresentationFormality | ThingInContext ;
Disjunction ::= (logicalOperand2::LogicalFormulation)+ (logicalOperand1::LogicalFormulation)+ ;
AdviceOfContingency ::= ε ;
ConceptHasSharedUnderstandingBySemanticCommunity ::= concept::Concept semanticCommunity::SemanticCommunity ;
Characteristic ::= (factTypeForm::FactTypeForm)+ (role::FactTypeRole)+ ;
ExistentialQuantification ::= minimumCardinality::NonnegativeInteger ;
OwnedDefinition ::= ε ;
SemanticFormulation ::= LogicalFormulation ;
 SemanticFormulation ::= Projection ;
 SemanticFormulation ::= ClosedSemanticFormulation ;
 SemanticFormulation ::= LogicalFormulation | Projection | ClosedSemanticFormulation ;
BusinessRuleIsDerivedFromBusinessPolicy ::= businessRule::BusinessRule businessPolicy::BusinessPolicy ;
RuleStatement ::= StructuralRuleStatement ;
 RuleStatement ::= OperativeBusinessRuleStatement ;
 RuleStatement ::= StructuralRuleStatement | OperativeBusinessRuleStatement ;
StateOfAffairsInvolvesThingInRole ::= stateOfAffairs::StateOfAffairs thing::Thing role::Role ;
QuestionNominalization ::= projection::Projection ;
VariableMapsToFactTypeRole ::= variable::Variable factTypeRole::FactTypeRole ;
BindableTarget ::= Expression ;
 BindableTarget ::= Variable ;
 BindableTarget ::= IndividualConcept ;
 BindableTarget ::= Expression | Variable ;
SententialForm ::= (placeholder::Placeholder)+ ;
ConceptOfThingAsOccurrent ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
ConceptType ::= CharacteristicType ;
BusinessPolicyIsBasisForAdvice ::= businessPolicy::BusinessPolicy advice::Advice ;
BinaryLogicalOperation ::= Conjunction ;
 BinaryLogicalOperation ::= Disjunction ;
 BinaryLogicalOperation ::= Equivalence ;
 BinaryLogicalOperation ::= ExclusiveDisjunction ;
 BinaryLogicalOperation ::= Implication ;
 BinaryLogicalOperation ::= NandFormulation ;
 BinaryLogicalOperation ::= NorFormulation ;
 BinaryLogicalOperation ::= WhetherornotFormulation ;
 BinaryLogicalOperation ::= (logicalOperand2::LogicalFormulation)+ (logicalOperand1::LogicalFormulation)+ ;
ThingInContext ::= ε ;
ClosedProjectionFormalizesDefinition ::= closedProjection::ClosedProjection definition::Definition ;
CommunityHasUri ::= community::Community uri::Uri ;
StructuralRule ::= StructuralBusinessRule ;
 StructuralRule ::= ε ;
ClosedSemanticFormulationFormulatesMeaning ::= closedSemanticFormulation::ClosedSemanticFormulation meaning::Meaning ;
NoteCommentsOnMeaning ::= note::Note meaning::Meaning ;
DescriptionPortraysMeaning ::= description::Description meaning::Meaning ;
Facet ::= ε ;
VariableHasProjectionPosition ::= variable::Variable projectionPosition::PositiveInteger ;
DesignationIsInNamespace ::= designation::Designation namespace::Namespace ;
CharacteristicType ::= ε ;
ImplicationHasConsequent ::= implication::Implication consequent::LogicalFormulation ;
FactTypeNominalization ::= projection::Projection ;
NamespaceHasUri ::= namespace::Namespace uri::Uri ;
KindOfGuidanceStatement ::= ε ;
SpeechCommunityRegulatesItsUsageOfSignifier ::= speechCommunity::SpeechCommunity signifier::Expression ;
UniversalQuantification ::= scopeFormulation::LogicalFormulation ;
AnswerNominalization ::= projection::Projection ;
ClosedProjectionDefinesFactType ::= closedProjection::ClosedProjection factType::FactType ;
FundamentalConcept ::= (categorizationScheme::CategorizationScheme)+ (categorizationType::CategorizationType)+ ;
StateOfAffairs ::= Actuality ;
FactTypeFormIncorporatesFactSymbol ::= factTypeForm::FactTypeForm factSymbol::FactSymbol ;
PartitiveFactType ::= ε ;
LogicalOperation ::= BinaryLogicalOperation ;
 LogicalOperation ::= LogicalNegation ;
 LogicalOperation ::= logicalOperand::LogicalFormulation ;
IsroleofFactType ::= (factTypeForm::FactTypeForm)+ (role::FactTypeRole)+ ;
ExtensionalDefinition ::= ε ;
VocabularyIsUsedToExpressBodyOfSharedMeanings ::= vocabulary::Vocabulary bodyOfSharedMeanings::BodyOfSharedMeanings ;
FactTypeRole ::= (roleBinding::RoleBinding)+ ;
NecessityStatement ::= ε ;
Language ::= (name::Name)+ ;
SetHasCardinality ::= set::Set cardinality::NonnegativeInteger ;
AtmostnQuantification ::= AtmostoneQuantification ;
 AtmostnQuantification ::= maximumCardinality::NonnegativeInteger ;
Definition ::= AdoptedDefinition ;
 Definition ::= IntensionalDefinition ;
 Definition ::= ExtensionalDefinition ;
 Definition ::= OwnedDefinition ;
 Definition ::= AdoptedDefinition | IntensionalDefinition | ExtensionalDefinition | OwnedDefinition ;
ObligationStatement ::= ε ;
ProjectingFormulation ::= AggregationFormulation ;
 ProjectingFormulation ::= AnswerNominalization ;
 ProjectingFormulation ::= FactTypeNominalization ;
 ProjectingFormulation ::= NounConceptNominalization ;
 ProjectingFormulation ::= QuestionNominalization ;
 ProjectingFormulation ::= projection::Projection ;
IndividualConcept ::= ε ;
Number ::= Integer ;
ConceptOfThingAsPrimitive ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
ConceptHasDesignation ::= concept::Concept designation::Designation ;
ClosedLogicalFormulationFormalizesStatement ::= closedLogicalFormulation::ClosedLogicalFormulation statement::Statement ;
TerminologicalDictionary ::= (uri::Uri)+ ;
InformalRepresentation ::= meaning::Meaning expression::Expression ;
TerminologicalDictionaryPresentsVocabulary ::= terminologicalDictionary::TerminologicalDictionary vocabulary::Vocabulary ;
QuantificationScopesOverLogicalFormulation ::= quantification::Quantification logicalFormulation::LogicalFormulation ;
NumericRangeQuantificationHasMaximumCardinality ::= numericRangeQuantification::NumericRangeQuantification maximumCardinality::NonnegativeInteger ;
InstantiationFormulationConsidersConcept ::= instantiationFormulation::InstantiationFormulation concept::Concept ;
SpeechCommunityOwnsVocabulary ::= speechCommunity::SpeechCommunity vocabulary::Vocabulary ;
ExpressionRepresentsMeaning ::= expression::Expression meaning::Meaning ;
AggregationFormulation ::= projection::Projection ;
ReferenceSchemeUsesCharacteristic ::= referenceScheme::ReferenceScheme characteristic::Characteristic ;
ExactlyoneQuantification ::= cardinality::NonnegativeInteger ;
RepresentationIsInDesignationContext ::= representation::Representation designationContext::Concept ;
Placeholder ::= startingCharacterPosition::PositiveInteger ;
ExplicitnessOfRepresentation ::= ε ;
Statement ::= GuidanceStatement ;
SubjectField ::= (name::Name)+ ;
Text ::= Uri ;
 Text ::= value::String ;
MeaningCorrespondsToThing ::= meaning::Meaning thing::Thing ;
DefiniteDescription ::= ε ;
Uri ::= value::String ;
ThingIsInSet ::= thing::Thing set::Set ;
FactSymbol ::= implicitlyIsUnderstood::Boolean signifier::Expression ;
CommunicationContentIsComposedOfRepresentation ::= communicationContent::CommunicationContent representation::Representation ;
AuxiliaryVariable ::= restrictingFormulation::LogicalFormulation projectionPosition::PositiveInteger rangedoverConcept::Concept isUnitary::Boolean ;
FactTypeTemplating ::= ε ;
ConceptIsClosedInConceptualSchema ::= concept::Concept conceptualSchema::ConceptualSchema ;
Namespace ::= AttributiveNamespace ;
 Namespace ::= VocabularyNamespace ;
 Namespace ::= (uri::Uri)+ ;
RoleRangesOverObjectType ::= role::Role objectType::ObjectType ;
ObjectType ::= ConceptType ;
 ObjectType ::= FundamentalConcept ;
 ObjectType ::= LogicalFormulationKind ;
 ObjectType ::= SituationalRole ;
 ObjectType ::= (categorizationScheme::CategorizationScheme)+ (categorizationType::CategorizationType)+ ;
ConceptHasNecessaryCharacteristic ::= concept::Concept necessaryCharacteristic::Characteristic ;
AdviceStatement ::= StatementOfAdviceOfPossibility ;
 AdviceStatement ::= StatementOfAdviceOfPermission ;
 AdviceStatement ::= StatementOfAdviceOfPossibility | StatementOfAdviceOfPermission ;
BodyOfSharedMeanings ::= (elementaryFactType::FactType)+ ;
TerminologicalDictionaryHasUri ::= terminologicalDictionary::TerminologicalDictionary uri::Uri ;
BusinessPolicy ::= isDirectlyEnforceable::Boolean ;
SemanticCommunityHasSpeechCommunity ::= semanticCommunity::SemanticCommunity speechCommunity::SpeechCommunity ;
ElementOfGuidanceObligatesStateOfAffairs ::= elementOfGuidance::ElementOfGuidance stateOfAffairs::StateOfAffairs ;
ConceptHasExtension ::= concept::Concept extension::Set ;
ElementOfGuidanceIsIncludedInBodyOfSharedGuidance ::= elementOfGuidance::ElementOfGuidance bodyOfSharedGuidance::BodyOfSharedGuidance ;
Reference ::= meaning::Meaning expression::Expression ;
IsfacetofFactType ::= ε ;
ClosedLogicalFormulationMeansProposition ::= closedLogicalFormulation::ClosedLogicalFormulation proposition::Proposition ;
AdviceOfPossibility ::= AdviceOfContingency ;
DescriptiveExample ::= meaning::Meaning expression::Expression ;
Integer ::= NonnegativeInteger ;
 Integer ::= value::integer ;
PossibilityStatement ::= ε ;
IspropertyofFactType ::= ε ;
Rule ::= StructuralRule ;
 Rule ::= BusinessRule ;
PropositionNominalizationBindsToBindableTarget ::= propositionNominalization::PropositionNominalization bindableTarget::BindableTarget ;
NameReferencesThing ::= name::Name thing::Thing ;
Advice ::= AdviceOfPossibility ;
 Advice ::= AdviceOfPermission ;
 Advice ::= AdviceOfPossibility | AdviceOfPermission ;
ElementOfGuidanceAuthorizesStateOfAffairs ::= elementOfGuidance::ElementOfGuidance stateOfAffairs::StateOfAffairs ;
BodyOfSharedMeaningsIncludesBodyOfSharedGuidance ::= bodyOfSharedMeanings::BodyOfSharedMeanings bodyOfSharedGuidance::BodyOfSharedGuidance ;
WhetherornotFormulationHasInconsequent ::= whetherornotFormulation::WhetherornotFormulation inconsequent::LogicalFormulation ;
RoleBinding ::= (name::Name)+ ;
DefinitionServesAsDesignation ::= definition::Definition designation::Designation ;
Equivalence ::= (logicalOperand2::LogicalFormulation)+ (logicalOperand1::LogicalFormulation)+ ;
RoleBindingBindsToBindableTarget ::= roleBinding::RoleBinding bindableTarget::BindableTarget ;
ConceptOfThingAsContinuant ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
SpeechCommunity ::= (uri::Uri)+ (subcommunity::Community)+ ;
BinaryFactType ::= PartitiveFactType ;
Vocabulary ::= BusinessVocabulary ;
ConceptOfThingAsComposite ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
LogicalFormulationKind ::= (categorizationScheme::CategorizationScheme)+ (categorizationType::CategorizationType)+ ;
VariableRangesOverConcept ::= variable::Variable concept::Concept ;
LogicalFormulationRestrictsVariable ::= logicalFormulation::LogicalFormulation variable::Variable ;
NonverbalDesignation ::= Icon ;
WhetherornotFormulation ::= (inconsequent::LogicalFormulation)+ (consequent::LogicalFormulation)+ ;
ObligationFormulation ::= ε ;
BusinessRule ::= StructuralBusinessRule ;
 BusinessRule ::= OperativeBusinessRule ;
 BusinessRule ::= isPracticable::Boolean ;
NonnegativeInteger ::= PositiveInteger ;
ClosedProjection ::= constrainingFormulation::LogicalFormulation (projectionVariable::Variable)+ (auxiliaryVariable::AuxiliaryVariable)+ ;
VocabularyNamespaceIsSpecificToSubjectField ::= vocabularyNamespace::VocabularyNamespace subjectField::SubjectField ;
ReferenceSchemeIsForConcept ::= referenceScheme::ReferenceScheme concept::Concept ;
DesignationHasSignifier ::= designation::Designation signifier::Expression ;
FactTypeHasFactInFactModel ::= factType::FactType fact::Fact factModel::FactModel ;
ProjectionHasAuxiliaryVariable ::= projection::Projection auxiliaryVariable::AuxiliaryVariable ;
VocabularyNamespace ::= (uri::Uri)+ ;
NandFormulation ::= (logicalOperand2::LogicalFormulation)+ (logicalOperand1::LogicalFormulation)+ ;
WhetherornotFormulationHasConsequent ::= whetherornotFormulation::WhetherornotFormulation consequent::LogicalFormulation ;
Representation ::= Designation ;
 Representation ::= Definition ;
 Representation ::= Statement ;
 Representation ::= FactTypeForm ;
 Representation ::= CommunicationContent ;
 Representation ::= Description ;
 Representation ::= DescriptiveExample ;
 Representation ::= FormalRepresentation ;
 Representation ::= InformalRepresentation ;
 Representation ::= Note ;
 Representation ::= Reference ;
 Representation ::= meaning::Meaning expression::Expression ;
AttributiveNamespace ::= (uri::Uri)+ ;
NumericRangeQuantification ::= maximumCardinality::NonnegativeInteger minimumCardinality::NonnegativeInteger ;
AtmostoneQuantification ::= maximumCardinality::NonnegativeInteger ;
BusinessVocabulary ::= ε ;
RepresentationHasExpression ::= representation::Representation expression::Expression ;
LevelOfEnforcement ::= (name::Name)+ ;
PositiveInteger ::= ε ;
AdoptedDefinition ::= ε ;
RulebookIncludesRepresentation ::= rulebook::Rulebook representation::Representation ;
ConceptIsIncludedInBodyOfSharedConcepts ::= concept::Concept bodyOfSharedConcepts::BodyOfSharedConcepts ;
FactTypeRoleDesignation ::= implicitlyIsUnderstood::Boolean signifier::Expression ;
IntensionalDefinitionUsesDelimitingCharacteristic ::= intensionalDefinition::IntensionalDefinition delimitingCharacteristic::Characteristic ;
GuidanceStatement ::= AdviceStatement ;
 GuidanceStatement ::= BusinessPolicyStatement ;
 GuidanceStatement ::= RuleStatement ;
 GuidanceStatement ::= AdviceStatement | BusinessPolicyStatement | RuleStatement ;
PreferredDesignation ::= implicitlyIsUnderstood::Boolean signifier::Expression ;
ResIsSensoryManifestationOfSignifier ::= res::Res signifier::Expression ;
FactTypeRoleHasRoleBinding ::= factTypeRole::FactTypeRole roleBinding::RoleBinding ;
NounConcept ::= Quantity ;
 NounConcept ::= Role ;
 NounConcept ::= ContextualizedConcept ;
 NounConcept ::= IndividualConcept ;
 NounConcept ::= Quantity | Role | ContextualizedConcept ;
Thing ::= StateOfAffairs ;
 Thing ::= Meaning ;
 Thing ::= BindableTarget ;
 Thing ::= SemanticFormulation ;
 Thing ::= Namespace ;
 Thing ::= RoleBinding ;
 Thing ::= ReferenceScheme ;
 Thing ::= Set ;
 Thing ::= BodyOfSharedConcepts ;
 Thing ::= BodyOfSharedGuidance ;
 Thing ::= CategorizationScheme ;
 Thing ::= Community ;
 Thing ::= ConceptualSchema ;
 Thing ::= FactModel ;
 Thing ::= Language ;
 Thing ::= LevelOfEnforcement ;
 Thing ::= Res ;
 Thing ::= Situation ;
 Thing ::= SubjectField ;
 Thing ::= TerminologicalDictionary ;
 Thing ::= Viewpoint ;
 Thing ::= (name::Name)+ ;
InstantiationFormulationBindsToBindableTarget ::= instantiationFormulation::InstantiationFormulation bindableTarget::BindableTarget ;
BodyOfSharedMeaningsIncludesBodyOfSharedConcepts ::= bodyOfSharedMeanings::BodyOfSharedMeanings bodyOfSharedConcepts::BodyOfSharedConcepts ;
ContextOfThing ::= ε ;
AtleastnQuantificationHasMinimumCardinality ::= atleastnQuantification::AtleastnQuantification minimumCardinality::NonnegativeInteger ;
NonnecessityStatement ::= ε ;
NecessityFormulation ::= ε ;
FactModelIsBasedOnConceptualSchema ::= factModel::FactModel conceptualSchema::ConceptualSchema ;
VocabularyNamespaceIsForLanguage ::= vocabularyNamespace::VocabularyNamespace language::Language ;
SpeechCommunityAdoptsAdoptedDefinitionCitingReference ::= speechCommunity::SpeechCommunity adoptedDefinition::AdoptedDefinition reference::Reference ;
AdviceOfOptionality ::= ε ;
LogicalFormulationConstrainsProjection ::= logicalFormulation::LogicalFormulation projection::Projection ;
FormalRepresentation ::= meaning::Meaning expression::Expression ;
SpeechCommunityUsesVocabulary ::= speechCommunity::SpeechCommunity vocabulary::Vocabulary ;
ContextualizationFactType ::= IsfacetofFactType ;
PlaceholderUsesDesignation ::= placeholder::Placeholder designation::Designation ;
Expression ::= Text ;
Conjunction ::= (logicalOperand2::LogicalFormulation)+ (logicalOperand1::LogicalFormulation)+ ;
Proposition ::= ElementOfGuidance ;
 Proposition ::= Rule ;
 Proposition ::= Fact ;
 Proposition ::= isFalse::Boolean isTrue::Boolean (statement::Statement)+ isPossiblyTrue::Boolean isObligatedToBeTrue::Boolean isPermittedToBeTrue::Boolean isNecessarilyTrue::Boolean ;
FactTypeIsElementaryInBodyOfSharedMeanings ::= factType::FactType bodyOfSharedMeanings::BodyOfSharedMeanings ;
ReferenceScheme ::= (simplyUsedRole::FactTypeRole)+ (identifyingCharacteristic::Characteristic)+ (extensionallyUsedRole::FactTypeRole)+ ;
NumericRangeQuantificationHasMinimumCardinality ::= numericRangeQuantification::NumericRangeQuantification minimumCardinality::NonnegativeInteger ;
ModalFormulation ::= NecessityFormulation ;
 ModalFormulation ::= ObligationFormulation ;
 ModalFormulation ::= PermissibilityFormulation ;
 ModalFormulation ::= PossibilityFormulation ;
 ModalFormulation ::= NecessityFormulation | ObligationFormulation | PermissibilityFormulation | PossibilityFormulation ;
PlaceholderIsInFactTypeForm ::= placeholder::Placeholder factTypeForm::FactTypeForm ;
CategorizationSchemeContainsCategory ::= categorizationScheme::CategorizationScheme category::Concept ;
Quantity ::= Number ;
Name ::= implicitlyIsUnderstood::Boolean signifier::Expression ;
ClosedSemanticFormulation ::= ClosedLogicalFormulation ;
 ClosedSemanticFormulation ::= ε ;
ContextualizedConcept ::= Facet ;
SemanticCommunity ::= (speechCommunity::SpeechCommunity)+ ;
ConceptOfThingAsUnitary ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
SituationalRole ::= (categorizationScheme::CategorizationScheme)+ (categorizationType::CategorizationType)+ ;
FactTypeHasFactTypeForm ::= factType::FactType factTypeForm::FactTypeForm ;
Variable ::= AuxiliaryVariable ;
 Variable ::= restrictingFormulation::LogicalFormulation projectionPosition::PositiveInteger rangedoverConcept::Concept isUnitary::Boolean ;
Quantification ::= AtleastnQuantification ;
 Quantification ::= AtmostnQuantification ;
 Quantification ::= ExactlynQuantification ;
 Quantification ::= NumericRangeQuantification ;
 Quantification ::= UniversalQuantification ;
 Quantification ::= scopeFormulation::LogicalFormulation ;
TermDenotesThing ::= term::Term thing::Thing ;
Icon ::= ε ;
ProjectingFormulationHasProjection ::= projectingFormulation::ProjectingFormulation projection::Projection ;
Role ::= FactTypeRole ;
 Role ::= SituationalRole ;
OperativeBusinessRule ::= (levelOfEnforcement::LevelOfEnforcement)+ ;
SpecializationFactType ::= CategorizationFactType ;
 SpecializationFactType ::= ContextualizationFactType ;
 SpecializationFactType ::= CategorizationFactType | ContextualizationFactType ;
Term ::= implicitlyIsUnderstood::Boolean signifier::Expression ;
Fact ::= isFalse::Boolean isTrue::Boolean (statement::Statement)+ isPossiblyTrue::Boolean isObligatedToBeTrue::Boolean isPermittedToBeTrue::Boolean isNecessarilyTrue::Boolean ;
VocabularyNamespaceIsSpecificToDesignationContext ::= vocabularyNamespace::VocabularyNamespace designationContext::Concept ;
FactTypeInternallyIsClosedInConceptualSchema ::= factType::FactType conceptualSchema::ConceptualSchema ;
ExclusiveDisjunction ::= (logicalOperand2::LogicalFormulation)+ (logicalOperand1::LogicalFormulation)+ ;
FactTypeFormIsInNamespace ::= factTypeForm::FactTypeForm namespace::Namespace ;
Res ::= (name::Name)+ ;
RealworldNumericalCorrespondence ::= ε ;
StructuralBusinessRule ::= ε ;
ConceptIncorporatesCharacteristic ::= concept::Concept characteristic::Characteristic ;
NounConceptNominalization ::= projection::Projection ;
BodyOfSharedGuidance ::= (name::Name)+ ;
DescriptiveExampleIllustratesMeaning ::= descriptiveExample::DescriptiveExample meaning::Meaning ;
FactModelIncludesFact ::= factModel::FactModel fact::Fact ;
TerminologicalDictionaryExpressesBodyOfSharedMeanings ::= terminologicalDictionary::TerminologicalDictionary bodyOfSharedMeanings::BodyOfSharedMeanings ;
FactTypeRoleIsInFactType ::= factTypeRole::FactTypeRole factType::FactType ;
Projection ::= BagProjection ;
 Projection ::= ClosedProjection ;
 Projection ::= SetProjection ;
 Projection ::= constrainingFormulation::LogicalFormulation (projectionVariable::Variable)+ (auxiliaryVariable::AuxiliaryVariable)+ ;
LogicalNegation ::= logicalOperand::LogicalFormulation ;
ImplicationHasAntecedent ::= implication::Implication antecedent::LogicalFormulation ;
ReferencePointsToInformationSource ::= reference::Reference informationSource::CommunicationContent ;
PropositionNominalization ::= ε ;
BusinessPolicyStatement ::= ε ;
ClosedLogicalFormulation ::= ε ;
ExactlynQuantification ::= ExactlyoneQuantification ;
 ExactlynQuantification ::= cardinality::NonnegativeInteger ;
CategorizationTypeIsForGeneralConcept ::= categorizationType::CategorizationType generalConcept::ObjectType ;
CommunityHasSubcommunity ::= community::Community subcommunity::Community ;
BagProjection ::= constrainingFormulation::LogicalFormulation (projectionVariable::Variable)+ (auxiliaryVariable::AuxiliaryVariable)+ ;
ProjectionIsOnVariable ::= projection::Projection variable::Variable ;
ExactlynQuantificationHasCardinality ::= exactlynQuantification::ExactlynQuantification cardinality::NonnegativeInteger ;
ConceptHasImpliedCharacteristic ::= concept::Concept impliedCharacteristic::Characteristic ;
CategorizationSchemeIsForGeneralConcept ::= categorizationScheme::CategorizationScheme generalConcept::ObjectType ;
ConceptualSchemaIncludesFact ::= conceptualSchema::ConceptualSchema fact::Fact ;
ReferenceSchemeExtensionallyUsesFactTypeRole ::= referenceScheme::ReferenceScheme factTypeRole::FactTypeRole ;
CategorizationScheme ::= Segmentation ;
 CategorizationScheme ::= ExplicitnessOfRepresentation ;
 CategorizationScheme ::= FactTypeTemplating ;
 CategorizationScheme ::= KindOfGuidanceStatement ;
 CategorizationScheme ::= RealworldNumericalCorrespondence ;
 CategorizationScheme ::= Segmentation | ExplicitnessOfRepresentation | FactTypeTemplating | KindOfGuidanceStatement | RealworldNumericalCorrespondence ;
ElementOfGuidance ::= Advice ;
 ElementOfGuidance ::= ElementOfGovernance ;
 ElementOfGuidance ::= BusinessRule ;
 ElementOfGuidance ::= isPracticable::Boolean ;
Concept ::= NounConcept ;
 Concept ::= FactType ;
 Concept ::= CategorizationType ;
 Concept ::= ObjectType ;
 Concept ::= ConceptOfThingAsComposite ;
 Concept ::= ConceptOfThingAsContinuant ;
 Concept ::= ConceptOfThingAsDeveloped ;
 Concept ::= ConceptOfThingAsOccurrent ;
 Concept ::= ConceptOfThingAsPrimitive ;
 Concept ::= ConceptOfThingAsUnitary ;
 Concept ::= ConceptOfThingExistingDependently ;
 Concept ::= ConceptOfThingExistingIndependently ;
 Concept ::= DerivableConcept ;
 Concept ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
StatementOfAdviceOfPermission ::= NonobligationStatement ;
 StatementOfAdviceOfPermission ::= OptionalityStatement ;
 StatementOfAdviceOfPermission ::= PermissionStatement ;
 StatementOfAdviceOfPermission ::= NonobligationStatement | OptionalityStatement | PermissionStatement ;
Set ::= BodyOfSharedMeanings ;
 Set ::= Vocabulary ;
 Set ::= Rulebook ;
 Set ::= cardinality::NonnegativeInteger (element::Thing)+ ;
PermissionStatement ::= ε ;
ImpossibilityStatement ::= ε ;
Actuality ::= Representation ;
AdviceOfPermission ::= AdviceOfOptionality ;
ConceptOfThingAsDeveloped ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
ObjectificationBindsToBindableTarget ::= objectification::Objectification bindableTarget::BindableTarget ;
ProhibitedDesignation ::= implicitlyIsUnderstood::Boolean signifier::Expression ;
PropositionIsBasedOnFactType ::= proposition::Proposition factType::FactType ;
AssortmentFactType ::= (factTypeForm::FactTypeForm)+ (role::FactTypeRole)+ ;
String ::= string() ;
SetProjection ::= constrainingFormulation::LogicalFormulation (projectionVariable::Variable)+ (auxiliaryVariable::AuxiliaryVariable)+ ;
AttributiveNamespaceIsForSubjectConcept ::= attributiveNamespace::AttributiveNamespace subjectConcept::Concept ;
CategorizationFactType ::= ε ;
AtomicFormulation ::= (roleBinding::RoleBinding)+ ;
ReferenceSupportsMeaning ::= reference::Reference meaning::Meaning ;
OperativeBusinessRuleHasLevelOfEnforcement ::= operativeBusinessRule::OperativeBusinessRule levelOfEnforcement::LevelOfEnforcement ;
ElementOfGuidanceProhibitsStateOfAffairs ::= elementOfGuidance::ElementOfGuidance stateOfAffairs::StateOfAffairs ;
BodyOfSharedConcepts ::= (name::Name)+ ;
VariableIsFreesWithinSemanticFormulation ::= variable::Variable semanticFormulation::SemanticFormulation ;
ConceptHasDefinition ::= concept::Concept definition::Definition ;
CategorizationType ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
PermissibilityFormulation ::= ε ;
RepresentationUsesVocabulary ::= representation::Representation vocabulary::Vocabulary ;
NounForm ::= (placeholder::Placeholder)+ ;
VocabularyIsExpressedInLanguage ::= vocabulary::Vocabulary language::Language ;
OperativeBusinessRuleStatement ::= ObligationStatement ;
 OperativeBusinessRuleStatement ::= ProhibitionStatement ;
 OperativeBusinessRuleStatement ::= RestrictedPermissionStatement ;
 OperativeBusinessRuleStatement ::= ObligationStatement | ProhibitionStatement | RestrictedPermissionStatement ;
ClosedProjectionMeansQuestion ::= closedProjection::ClosedProjection question::Question ;
RestrictedPossibilityStatement ::= ε ;
AssociativeFactType ::= IspropertyofFactType ;
ElementOfGovernance ::= BusinessPolicy ;
 ElementOfGovernance ::= OperativeBusinessRule ;
 ElementOfGovernance ::= isDirectlyEnforceable::Boolean ;
AttributiveNamespaceIsWithinVocabularyNamespace ::= attributiveNamespace::AttributiveNamespace vocabularyNamespace::VocabularyNamespace ;
Note ::= meaning::Meaning expression::Expression ;
ClosedProjectionDefinesNounConcept ::= closedProjection::ClosedProjection nounConcept::NounConcept ;
DerivableConcept ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
InstantiationFormulation ::= ε ;
ConceptOfThingExistingIndependently ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
NorFormulation ::= (logicalOperand2::LogicalFormulation)+ (logicalOperand1::LogicalFormulation)+ ;
Boolean ::= "true" | "false" ;
Question ::= (representation::Representation)+ ;
Rulebook ::= cardinality::NonnegativeInteger (element::Thing)+ ;
ConceptualSchemaIncludesConcept ::= conceptualSchema::ConceptualSchema concept::Concept ;
PlaceholderIsAtStartingCharacterPosition ::= placeholder::Placeholder startingCharacterPosition::PositiveInteger ;
ContingencyStatement ::= ε ;
--------------------metamodels::sbvrOMG.bgf--------------------
WhetherornotFormulation ::= (inconsequent::LogicalFormulation)+ (consequent::LogicalFormulation)+ ;
FactModel ::= (name::Name)+ ;
ObligationFormulation ::= ε ;
BusinessRule ::= StructuralBusinessRule ;
 BusinessRule ::= OperativeBusinessRule ;
 BusinessRule ::= isPracticable::Boolean ;
NonnegativeInteger ::= PositiveInteger ;
ClosedProjection ::= constrainingFormulation::LogicalFormulation (projectionVariable::Variable)+ (auxiliaryVariable::AuxiliaryVariable)+ ;
FactTypeHasFactInFactModel ::= factType::FactType fact::Fact factModel::FactModel ;
VocabularyNamespace ::= (uri::Uri)+ ;
RepresentationFormality ::= ε ;
NandFormulation ::= (logicalOperand2::LogicalFormulation)+ (logicalOperand1::LogicalFormulation)+ ;
Representation ::= Designation ;
 Representation ::= Definition ;
 Representation ::= Statement ;
 Representation ::= FactTypeForm ;
 Representation ::= CommunicationContent ;
 Representation ::= Description ;
 Representation ::= DescriptiveExample ;
 Representation ::= FormalRepresentation ;
 Representation ::= InformalRepresentation ;
 Representation ::= Note ;
 Representation ::= Reference ;
 Representation ::= meaning::Meaning expression::Expression ;
AttributiveNamespace ::= (uri::Uri)+ ;
Viewpoint ::= (name::Name)+ ;
NumericRangeQuantification ::= maximumCardinality::NonnegativeInteger minimumCardinality::NonnegativeInteger ;
AtmostoneQuantification ::= maximumCardinality::NonnegativeInteger ;
PossibilityFormulation ::= ε ;
BusinessVocabulary ::= ε ;
FactType ::= Characteristic ;
 FactType ::= AssociativeFactType ;
 FactType ::= AssortmentFactType ;
 FactType ::= BinaryFactType ;
 FactType ::= SpecializationFactType ;
 FactType ::= IsroleofFactType ;
 FactType ::= (factTypeForm::FactTypeForm)+ (role::FactTypeRole)+ ;
RestrictedPermissionStatement ::= ε ;
LevelOfEnforcement ::= (name::Name)+ ;
PositiveInteger ::= ε ;
CommunicationContent ::= meaning::Meaning expression::Expression ;
AdoptedDefinition ::= ε ;
OptionalityStatement ::= ε ;
Objectification ::= ε ;
Situation ::= (name::Name)+ ;
StatementOfAdviceOfPossibility ::= ContingencyStatement ;
 StatementOfAdviceOfPossibility ::= NonnecessityStatement ;
 StatementOfAdviceOfPossibility ::= PossibilityStatement ;
 StatementOfAdviceOfPossibility ::= ContingencyStatement | NonnecessityStatement | PossibilityStatement ;
Meaning ::= Proposition ;
 Meaning ::= Concept ;
 Meaning ::= Question ;
 Meaning ::= (representation::Representation)+ ;
Description ::= meaning::Meaning expression::Expression ;
Implication ::= (consequent::LogicalFormulation)+ (antecedent::LogicalFormulation)+ ;
FactTypeRoleDesignation ::= implicitlyIsUnderstood::Boolean signifier::Expression ;
ConceptualSchema ::= (name::Name)+ ;
GuidanceStatement ::= AdviceStatement ;
 GuidanceStatement ::= BusinessPolicyStatement ;
 GuidanceStatement ::= RuleStatement ;
 GuidanceStatement ::= AdviceStatement | BusinessPolicyStatement | RuleStatement ;
Designation ::= Name ;
 Designation ::= Placeholder ;
 Designation ::= FactSymbol ;
 Designation ::= FactTypeRoleDesignation ;
 Designation ::= NonverbalDesignation ;
 Designation ::= PreferredDesignation ;
 Designation ::= ProhibitedDesignation ;
 Designation ::= Term ;
 Designation ::= implicitlyIsUnderstood::Boolean signifier::Expression ;
PreferredDesignation ::= implicitlyIsUnderstood::Boolean signifier::Expression ;
StructuralRuleStatement ::= ImpossibilityStatement ;
 StructuralRuleStatement ::= NecessityStatement ;
 StructuralRuleStatement ::= RestrictedPossibilityStatement ;
 StructuralRuleStatement ::= ImpossibilityStatement | NecessityStatement | RestrictedPossibilityStatement ;
AtleastnQuantification ::= ExistentialQuantification ;
 AtleastnQuantification ::= minimumCardinality::NonnegativeInteger ;
ConceptOfThingExistingDependently ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
LogicalFormulation ::= ProjectingFormulation ;
 LogicalFormulation ::= Quantification ;
 LogicalFormulation ::= AtomicFormulation ;
 LogicalFormulation ::= LogicalOperation ;
 LogicalFormulation ::= InstantiationFormulation ;
 LogicalFormulation ::= ModalFormulation ;
 LogicalFormulation ::= Objectification ;
 LogicalFormulation ::= PropositionNominalization ;
 LogicalFormulation ::= ClosedLogicalFormulation ;
 LogicalFormulation ::= ProjectingFormulation | Quantification | AtomicFormulation | LogicalOperation | InstantiationFormulation | ModalFormulation | Objectification | PropositionNominalization ;
NounConcept ::= Quantity ;
 NounConcept ::= Role ;
 NounConcept ::= ContextualizedConcept ;
 NounConcept ::= IndividualConcept ;
 NounConcept ::= Quantity | Role | ContextualizedConcept ;
Thing ::= StateOfAffairs ;
 Thing ::= Meaning ;
 Thing ::= BindableTarget ;
 Thing ::= SemanticFormulation ;
 Thing ::= Namespace ;
 Thing ::= RoleBinding ;
 Thing ::= ReferenceScheme ;
 Thing ::= Set ;
 Thing ::= BodyOfSharedConcepts ;
 Thing ::= BodyOfSharedGuidance ;
 Thing ::= CategorizationScheme ;
 Thing ::= Community ;
 Thing ::= ConceptualSchema ;
 Thing ::= FactModel ;
 Thing ::= Language ;
 Thing ::= LevelOfEnforcement ;
 Thing ::= Res ;
 Thing ::= Situation ;
 Thing ::= SubjectField ;
 Thing ::= TerminologicalDictionary ;
 Thing ::= Viewpoint ;
 Thing ::= (name::Name)+ ;
IntensionalDefinition ::= DefiniteDescription ;
FactTypeForm ::= NounForm ;
 FactTypeForm ::= SententialForm ;
 FactTypeForm ::= (placeholder::Placeholder)+ ;
Community ::= SemanticCommunity ;
 Community ::= SpeechCommunity ;
 Community ::= (uri::Uri)+ (subcommunity::Community)+ ;
ContextOfThing ::= ε ;
NonnecessityStatement ::= ε ;
ProhibitionStatement ::= ε ;
NecessityFormulation ::= ε ;
NonobligationStatement ::= ε ;
Segmentation ::= ContextOfThing ;
 Segmentation ::= RepresentationFormality ;
 Segmentation ::= ThingInContext ;
 Segmentation ::= ContextOfThing | RepresentationFormality | ThingInContext ;
Disjunction ::= (logicalOperand2::LogicalFormulation)+ (logicalOperand1::LogicalFormulation)+ ;
AdviceOfContingency ::= ε ;
SpeechCommunityAdoptsAdoptedDefinitionCitingReference ::= speechCommunity::SpeechCommunity adoptedDefinition::AdoptedDefinition reference::Reference ;
AdviceOfOptionality ::= ε ;
FormalRepresentation ::= meaning::Meaning expression::Expression ;
Characteristic ::= (factTypeForm::FactTypeForm)+ (role::FactTypeRole)+ ;
ExistentialQuantification ::= minimumCardinality::NonnegativeInteger ;
ContextualizationFactType ::= IsfacetofFactType ;
OwnedDefinition ::= ε ;
Expression ::= Text ;
Conjunction ::= (logicalOperand2::LogicalFormulation)+ (logicalOperand1::LogicalFormulation)+ ;
Proposition ::= ElementOfGuidance ;
 Proposition ::= Rule ;
 Proposition ::= Fact ;
 Proposition ::= isFalse::Boolean isTrue::Boolean (statement::Statement)+ isPossiblyTrue::Boolean isObligatedToBeTrue::Boolean isPermittedToBeTrue::Boolean isNecessarilyTrue::Boolean ;
SemanticFormulation ::= LogicalFormulation ;
 SemanticFormulation ::= Projection ;
 SemanticFormulation ::= ClosedSemanticFormulation ;
 SemanticFormulation ::= LogicalFormulation | Projection | ClosedSemanticFormulation ;
RuleStatement ::= StructuralRuleStatement ;
 RuleStatement ::= OperativeBusinessRuleStatement ;
 RuleStatement ::= StructuralRuleStatement | OperativeBusinessRuleStatement ;
StateOfAffairsInvolvesThingInRole ::= stateOfAffairs::StateOfAffairs thing::Thing role::Role ;
ReferenceScheme ::= (simplyUsedRole::FactTypeRole)+ (identifyingCharacteristic::Characteristic)+ (extensionallyUsedRole::FactTypeRole)+ ;
QuestionNominalization ::= projection::Projection ;
ModalFormulation ::= NecessityFormulation ;
 ModalFormulation ::= ObligationFormulation ;
 ModalFormulation ::= PermissibilityFormulation ;
 ModalFormulation ::= PossibilityFormulation ;
 ModalFormulation ::= NecessityFormulation | ObligationFormulation | PermissibilityFormulation | PossibilityFormulation ;
Quantity ::= Number ;
Name ::= implicitlyIsUnderstood::Boolean signifier::Expression ;
ClosedSemanticFormulation ::= ClosedLogicalFormulation ;
 ClosedSemanticFormulation ::= ε ;
BindableTarget ::= Expression ;
 BindableTarget ::= Variable ;
 BindableTarget ::= IndividualConcept ;
 BindableTarget ::= Expression | Variable ;
ContextualizedConcept ::= Facet ;
SententialForm ::= (placeholder::Placeholder)+ ;
ConceptOfThingAsOccurrent ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
SemanticCommunity ::= (speechCommunity::SpeechCommunity)+ ;
ConceptOfThingAsUnitary ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
ConceptType ::= CharacteristicType ;
SituationalRole ::= (categorizationScheme::CategorizationScheme)+ (categorizationType::CategorizationType)+ ;
BinaryLogicalOperation ::= Conjunction ;
 BinaryLogicalOperation ::= Disjunction ;
 BinaryLogicalOperation ::= Equivalence ;
 BinaryLogicalOperation ::= ExclusiveDisjunction ;
 BinaryLogicalOperation ::= Implication ;
 BinaryLogicalOperation ::= NandFormulation ;
 BinaryLogicalOperation ::= NorFormulation ;
 BinaryLogicalOperation ::= WhetherornotFormulation ;
 BinaryLogicalOperation ::= (logicalOperand2::LogicalFormulation)+ (logicalOperand1::LogicalFormulation)+ ;
ThingInContext ::= ε ;
Variable ::= AuxiliaryVariable ;
 Variable ::= restrictingFormulation::LogicalFormulation projectionPosition::PositiveInteger rangedoverConcept::Concept isUnitary::Boolean ;
Quantification ::= AtleastnQuantification ;
 Quantification ::= AtmostnQuantification ;
 Quantification ::= ExactlynQuantification ;
 Quantification ::= NumericRangeQuantification ;
 Quantification ::= UniversalQuantification ;
 Quantification ::= scopeFormulation::LogicalFormulation ;
StructuralRule ::= StructuralBusinessRule ;
 StructuralRule ::= ε ;
Icon ::= ε ;
Facet ::= ε ;
Role ::= FactTypeRole ;
 Role ::= SituationalRole ;
CharacteristicType ::= ε ;
OperativeBusinessRule ::= (levelOfEnforcement::LevelOfEnforcement)+ ;
SpecializationFactType ::= CategorizationFactType ;
 SpecializationFactType ::= ContextualizationFactType ;
 SpecializationFactType ::= CategorizationFactType | ContextualizationFactType ;
FactTypeNominalization ::= projection::Projection ;
Term ::= implicitlyIsUnderstood::Boolean signifier::Expression ;
KindOfGuidanceStatement ::= ε ;
Fact ::= isFalse::Boolean isTrue::Boolean (statement::Statement)+ isPossiblyTrue::Boolean isObligatedToBeTrue::Boolean isPermittedToBeTrue::Boolean isNecessarilyTrue::Boolean ;
UniversalQuantification ::= scopeFormulation::LogicalFormulation ;
AnswerNominalization ::= projection::Projection ;
ExclusiveDisjunction ::= (logicalOperand2::LogicalFormulation)+ (logicalOperand1::LogicalFormulation)+ ;
FundamentalConcept ::= (categorizationScheme::CategorizationScheme)+ (categorizationType::CategorizationType)+ ;
StateOfAffairs ::= Actuality ;
Res ::= (name::Name)+ ;
PartitiveFactType ::= ε ;
RealworldNumericalCorrespondence ::= ε ;
LogicalOperation ::= BinaryLogicalOperation ;
 LogicalOperation ::= LogicalNegation ;
 LogicalOperation ::= logicalOperand::LogicalFormulation ;
IsroleofFactType ::= (factTypeForm::FactTypeForm)+ (role::FactTypeRole)+ ;
ExtensionalDefinition ::= ε ;
FactTypeRole ::= (roleBinding::RoleBinding)+ ;
NecessityStatement ::= ε ;
StructuralBusinessRule ::= ε ;
Language ::= (name::Name)+ ;
NounConceptNominalization ::= projection::Projection ;
BodyOfSharedGuidance ::= (name::Name)+ ;
AtmostnQuantification ::= AtmostoneQuantification ;
 AtmostnQuantification ::= maximumCardinality::NonnegativeInteger ;
Definition ::= AdoptedDefinition ;
 Definition ::= IntensionalDefinition ;
 Definition ::= ExtensionalDefinition ;
 Definition ::= OwnedDefinition ;
 Definition ::= AdoptedDefinition | IntensionalDefinition | ExtensionalDefinition | OwnedDefinition ;
ObligationStatement ::= ε ;
ProjectingFormulation ::= AggregationFormulation ;
 ProjectingFormulation ::= AnswerNominalization ;
 ProjectingFormulation ::= FactTypeNominalization ;
 ProjectingFormulation ::= NounConceptNominalization ;
 ProjectingFormulation ::= QuestionNominalization ;
 ProjectingFormulation ::= projection::Projection ;
IndividualConcept ::= ε ;
Projection ::= BagProjection ;
 Projection ::= ClosedProjection ;
 Projection ::= SetProjection ;
 Projection ::= constrainingFormulation::LogicalFormulation (projectionVariable::Variable)+ (auxiliaryVariable::AuxiliaryVariable)+ ;
LogicalNegation ::= logicalOperand::LogicalFormulation ;
Number ::= Integer ;
ConceptOfThingAsPrimitive ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
TerminologicalDictionary ::= (uri::Uri)+ ;
InformalRepresentation ::= meaning::Meaning expression::Expression ;
PropositionNominalization ::= ε ;
BusinessPolicyStatement ::= ε ;
ClosedLogicalFormulation ::= ε ;
ExactlynQuantification ::= ExactlyoneQuantification ;
 ExactlynQuantification ::= cardinality::NonnegativeInteger ;
AggregationFormulation ::= projection::Projection ;
BagProjection ::= constrainingFormulation::LogicalFormulation (projectionVariable::Variable)+ (auxiliaryVariable::AuxiliaryVariable)+ ;
ExactlyoneQuantification ::= cardinality::NonnegativeInteger ;
Placeholder ::= startingCharacterPosition::PositiveInteger ;
ExplicitnessOfRepresentation ::= ε ;
Statement ::= GuidanceStatement ;
SubjectField ::= (name::Name)+ ;
CategorizationScheme ::= Segmentation ;
 CategorizationScheme ::= ExplicitnessOfRepresentation ;
 CategorizationScheme ::= FactTypeTemplating ;
 CategorizationScheme ::= KindOfGuidanceStatement ;
 CategorizationScheme ::= RealworldNumericalCorrespondence ;
 CategorizationScheme ::= Segmentation | ExplicitnessOfRepresentation | FactTypeTemplating | KindOfGuidanceStatement | RealworldNumericalCorrespondence ;
Text ::= Uri ;
 Text ::= value::String ;
DefiniteDescription ::= ε ;
Uri ::= value::String ;
ElementOfGuidance ::= Advice ;
 ElementOfGuidance ::= ElementOfGovernance ;
 ElementOfGuidance ::= BusinessRule ;
 ElementOfGuidance ::= isPracticable::Boolean ;
Concept ::= NounConcept ;
 Concept ::= FactType ;
 Concept ::= CategorizationType ;
 Concept ::= ObjectType ;
 Concept ::= ConceptOfThingAsComposite ;
 Concept ::= ConceptOfThingAsContinuant ;
 Concept ::= ConceptOfThingAsDeveloped ;
 Concept ::= ConceptOfThingAsOccurrent ;
 Concept ::= ConceptOfThingAsPrimitive ;
 Concept ::= ConceptOfThingAsUnitary ;
 Concept ::= ConceptOfThingExistingDependently ;
 Concept ::= ConceptOfThingExistingIndependently ;
 Concept ::= DerivableConcept ;
 Concept ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
StatementOfAdviceOfPermission ::= NonobligationStatement ;
 StatementOfAdviceOfPermission ::= OptionalityStatement ;
 StatementOfAdviceOfPermission ::= PermissionStatement ;
 StatementOfAdviceOfPermission ::= NonobligationStatement | OptionalityStatement | PermissionStatement ;
FactSymbol ::= implicitlyIsUnderstood::Boolean signifier::Expression ;
Set ::= BodyOfSharedMeanings ;
 Set ::= Vocabulary ;
 Set ::= Rulebook ;
 Set ::= cardinality::NonnegativeInteger (element::Thing)+ ;
AuxiliaryVariable ::= restrictingFormulation::LogicalFormulation projectionPosition::PositiveInteger rangedoverConcept::Concept isUnitary::Boolean ;
PermissionStatement ::= ε ;
ImpossibilityStatement ::= ε ;
Actuality ::= Representation ;
AdviceOfPermission ::= AdviceOfOptionality ;
FactTypeTemplating ::= ε ;
ConceptOfThingAsDeveloped ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
Namespace ::= AttributiveNamespace ;
 Namespace ::= VocabularyNamespace ;
 Namespace ::= (uri::Uri)+ ;
ProhibitedDesignation ::= implicitlyIsUnderstood::Boolean signifier::Expression ;
ObjectType ::= ConceptType ;
 ObjectType ::= FundamentalConcept ;
 ObjectType ::= LogicalFormulationKind ;
 ObjectType ::= SituationalRole ;
 ObjectType ::= (categorizationScheme::CategorizationScheme)+ (categorizationType::CategorizationType)+ ;
AdviceStatement ::= StatementOfAdviceOfPossibility ;
 AdviceStatement ::= StatementOfAdviceOfPermission ;
 AdviceStatement ::= StatementOfAdviceOfPossibility | StatementOfAdviceOfPermission ;
AssortmentFactType ::= (factTypeForm::FactTypeForm)+ (role::FactTypeRole)+ ;
BodyOfSharedMeanings ::= (elementaryFactType::FactType)+ ;
BusinessPolicy ::= isDirectlyEnforceable::Boolean ;
String ::= string() ;
SetProjection ::= constrainingFormulation::LogicalFormulation (projectionVariable::Variable)+ (auxiliaryVariable::AuxiliaryVariable)+ ;
CategorizationFactType ::= ε ;
AtomicFormulation ::= (roleBinding::RoleBinding)+ ;
Reference ::= meaning::Meaning expression::Expression ;
IsfacetofFactType ::= ε ;
BodyOfSharedConcepts ::= (name::Name)+ ;
AdviceOfPossibility ::= AdviceOfContingency ;
CategorizationType ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
PermissibilityFormulation ::= ε ;
NounForm ::= (placeholder::Placeholder)+ ;
DescriptiveExample ::= meaning::Meaning expression::Expression ;
Integer ::= NonnegativeInteger ;
 Integer ::= value::integer ;
PossibilityStatement ::= ε ;
OperativeBusinessRuleStatement ::= ObligationStatement ;
 OperativeBusinessRuleStatement ::= ProhibitionStatement ;
 OperativeBusinessRuleStatement ::= RestrictedPermissionStatement ;
 OperativeBusinessRuleStatement ::= ObligationStatement | ProhibitionStatement | RestrictedPermissionStatement ;
IspropertyofFactType ::= ε ;
Rule ::= StructuralRule ;
 Rule ::= BusinessRule ;
Advice ::= AdviceOfPossibility ;
 Advice ::= AdviceOfPermission ;
 Advice ::= AdviceOfPossibility | AdviceOfPermission ;
RestrictedPossibilityStatement ::= ε ;
AssociativeFactType ::= IspropertyofFactType ;
ElementOfGovernance ::= BusinessPolicy ;
 ElementOfGovernance ::= OperativeBusinessRule ;
 ElementOfGovernance ::= isDirectlyEnforceable::Boolean ;
Note ::= meaning::Meaning expression::Expression ;
DerivableConcept ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
RoleBinding ::= (name::Name)+ ;
InstantiationFormulation ::= ε ;
ConceptOfThingExistingIndependently ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
Equivalence ::= (logicalOperand2::LogicalFormulation)+ (logicalOperand1::LogicalFormulation)+ ;
ConceptOfThingAsContinuant ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
NorFormulation ::= (logicalOperand2::LogicalFormulation)+ (logicalOperand1::LogicalFormulation)+ ;
Boolean ::= "true" | "false" ;
SpeechCommunity ::= (uri::Uri)+ (subcommunity::Community)+ ;
BinaryFactType ::= PartitiveFactType ;
Question ::= (representation::Representation)+ ;
Vocabulary ::= BusinessVocabulary ;
ConceptOfThingAsComposite ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
Rulebook ::= cardinality::NonnegativeInteger (element::Thing)+ ;
LogicalFormulationKind ::= (categorizationScheme::CategorizationScheme)+ (categorizationType::CategorizationType)+ ;
NonverbalDesignation ::= Icon ;
ContingencyStatement ::= ε ;
--------------------metamodels::sigkdd.owl.bgf--------------------
Decision ::= Acceptance ;
 Decision ::= Rejection ;
 Decision ::= Acceptance | Rejection ;
TraditionalLecture ::= hasAcronym::String ;
RadioCommunicationsTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
AccommodationPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
TwoLevelConference ::= has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country isOrganizedBy::OrganizingCommittee annualOrder::Integer takesPlace::Location hasAcronym::String finishedBy::Program_Comitee_Chair focusesOn::Topic startedBy::Program_Comitee_Chair takesPlace::Location has_conference_member::ConferenceMember WebSite::anyURI Topic_of_conference::String Date::date holded_by::ACM_SIGKDD Name_of_conference::String Start_of_conference::dateTime City_of_conference::String End_of_conference::dateTime hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
SignalProcessingTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
SessionChair ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person pay::Registration_fee can_stay_in::Place Nation::String Name::String hasEmail::String hasName::String hasAffiliation::String hasFirstName::String hasLastName::String hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ sign::Item is_present::Time (give::Thing)+ need::Item loggin_in::System submit::Document get::Email E-mail::String hasConflictOfInterest::Document email::String ;
SteeringCommittee ::= organizes::Conference ;
User ::= Committee ;
 User ::= Administrator ;
 User ::= recieve::Document (create::Thing)+ submit::Document ;
Rejection ::= ε ;
Renting ::= ε ;
GovernmentOrganization ::= isProviderOf::Sponsorship ;
CallForManuscripts ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
MealMenu ::= isMenuOf::MealEvent ;
Speaker ::= Invited_Speaker ;
 Speaker ::= presentation::Document ;
IndexOfAuthors ::= isProducedBy::Chair ;
Publisher ::= issues::Conference_proceedings ;
Description ::= ε ;
OutsideReferee ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person pay::Registration_fee can_stay_in::Place Nation::String Name::String hasEmail::String hasName::String hasAffiliation::String hasFirstName::String hasLastName::String hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ sign::Item is_present::Time (give::Thing)+ need::Item loggin_in::System submit::Document get::Email E-mail::String hasConflictOfInterest::Document email::String ;
OperatingTopicsystems ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
Location ::= locationOf::Event ;
GeneralCoChair ::= organizes::Conference ;
ComputerNetworksEnterpriseTopic ::= ε ;
PaperSubmissionChair ::= organizes::Conference ;
SatelliteAndSpaceCommunicationsTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
High ::= ε ;
MobileComputingTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
Research ::= Simulating ;
 Research ::= Modelling ;
 Research ::= Simulating | Modelling ;
ConferenceSession ::= ε ;
Invitation ::= sended_by::Administrator Receiver_of_email::String Message_of_email::String Subject_of_email::String ;
SubjectArea ::= ε ;
NGO ::= isProviderOf::Sponsorship ;
Car ::= ε ;
CommunicationTheoryTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
AcademicEvent ::= TalkEvent ;
 AcademicEvent ::= OrganizationalMeeting ;
 AcademicEvent ::= PaperPresentation ;
 AcademicEvent ::= hasCall::Call ;
CallForPapers ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
CommunicationsTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
SecurityTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
PaperAbstract ::= isAbstractOf::Paper abstractIsSubmittedBy::ContactAuthor ;
DiningPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
PostScript ::= ε ;
HTML ::= ε ;
ContactAuthor ::= submitsAbstract::PaperAbstract ;
Author ::= AuthorNotReviewer ;
 Author ::= Co-author ;
 Author ::= Corresponding_Author ;
 Author ::= Author_cd_proceedings_included ;
 Author ::= Lecturer ;
 Author ::= Plenary_lecture_speaker ;
 Author ::= Tutorial_speaker ;
 Author ::= Author_book_proceedings_included ;
 Author ::= ContactAuthor ;
 Author ::= Contact_Author ;
 Author ::= Co-Author ;
 Author ::= MainAuthor ;
 Author ::= Author_of_paper_student ;
 Author ::= Author_of_paper ;
 Author ::= Presenter ;
 Author ::= writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution write_paper::Paper obtain::Award submit::Paper notification_until::Deadline_Author_notification submitPaper::Paper ;
ConferenceProgram ::= isProgramOf::Conference consistsOf::Slot ;
Preview ::= ε ;
Workshop ::= ε ;
Delegate ::= One_day_presenter ;
 Delegate ::= Technical_commitee ;
 Delegate ::= Listener ;
 Delegate ::= Session_chair ;
 Delegate ::= Hotel_presenter ;
 Delegate ::= Non_speaker ;
 Delegate ::= IASTED_non_member ;
 Delegate ::= Conference_Hiker ;
 Delegate ::= IASTED_member ;
 Delegate ::= Speaker ;
 Delegate ::= One_day_presenter | Technical_commitee | Listener | Session_chair | Hotel_presenter | Non_speaker | IASTED_non_member | Conference_Hiker | IASTED_member ;
Inforamtion ::= ε ;
ComputerArchitectureTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
WorkshopTutorialChair ::= organizes::Conference ;
OrganizingCommittee ::= ProgramCoChair ;
 OrganizingCommittee ::= PublicationsChair ;
 OrganizingCommittee ::= WorkshopTutorialChair ;
 OrganizingCommittee ::= RegistrationChair ;
 OrganizingCommittee ::= StudentAdvocate ;
 OrganizingCommittee ::= FinanceChair ;
 OrganizingCommittee ::= PaperSubmissionChair ;
 OrganizingCommittee ::= PublicityWebChair ;
 OrganizingCommittee ::= SteeringCommittee ;
 OrganizingCommittee ::= GeneralCoChair ;
 OrganizingCommittee ::= organizes::Conference ;
OrganizationalMeeting ::= hasCall::Call ;
PersonalReviewHistory ::= isReviewHistoryOf::Reviewer ;
Hotel ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
AccpetIfRoomRating ::= ε ;
RejectedPaper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Title::String Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
ParallelAndDistributedComputingTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
Advocate ::= will_advocate::Advocated_Paper ;
Tax ::= Value_added_tax ;
 Tax ::= Departure_tax ;
 Tax ::= Value_added_tax | Departure_tax ;
City ::= Presenter_city ;
 City ::= Conference_city ;
 City ::= Sponsor_city ;
 City ::= Trip_city ;
 City ::= Presenter_city | Conference_city | Sponsor_city | Trip_city ;
MultimediaTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
CryptographyTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
Tutorial ::= (presentationOfPaper::Document)+ ;
ReviewQuestion ::= TextualReviewQuestion ;
 ReviewQuestion ::= NumericalReviewQuestion ;
 ReviewQuestion ::= TextualReviewQuestion | NumericalReviewQuestion ;
Regular ::= earlyRegistration::Boolean ;
Email ::= Notification_Email ;
 Email ::= Group_Email ;
 Email ::= Approval_Email ;
 Email ::= Rejection_Email ;
 Email ::= Information ;
 Email ::= Invitation ;
 Email ::= sended_by::Administrator Receiver_of_email::String Message_of_email::String Subject_of_email::String ;
ProgramCommittee ::= hasMember::ProgramCommitteeMember hasProgramCommitteeMember::ProgramCommitteeMember ;
Transparency ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String presentationed_by::Speaker submit_until::Deadline recieved_by::User used_by::Person submited__by::User ;
Review ::= Meta-Review ;
 Review ::= Positive_Review ;
 Review ::= Negative_Review ;
 Review ::= Neutral_Review ;
 Review ::= assigned_review_by::Primary_Reviewer written_review_by::Reviewer writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::Activity reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer review_written_by::Reviewer containsEvaluation::Evaluation rates::Paper isWritenBy::Reviewer ;
Country ::= ε ;
Person ::= ConferenceMember ;
 Person ::= User ;
 Person ::= Conference_participant ;
 Person ::= Conference_contributor ;
 Person ::= Committee_member ;
 Person ::= Conference_applicant ;
 Person ::= Track-workshop_chair ;
 Person ::= Scholar ;
 Person ::= Participant ;
 Person ::= Member_PC ;
 Person ::= Chair_PC ;
 Person ::= Science_Worker ;
 Person ::= Assistant ;
 Person ::= Volunteer ;
 Person ::= chair ;
 Person ::= participant ;
 Person ::= ConferenceChair ;
 Person ::= Attendee ;
 Person ::= SessionChair ;
 Person ::= TPCMember ;
 Person ::= Paper_Author ;
 Person ::= Conference_Participant ;
 Person ::= Agency_Staff_Member ;
 Person ::= Possible_Reviewer ;
 Person ::= Student ;
 Person ::= Delegate ;
 Person ::= Sponsor ;
 Person ::= OutsideReferee ;
 Person ::= ExternalReviewer ;
 Person ::= ConferenceAttendant ;
 Person ::= Program_Comitee_Chair ;
 Person ::= External_Reviewer ;
 Person ::= Organizator ;
 Person ::= Listener ;
 Person ::= ProgramCommitteeMember ;
 Person ::= Chairman ;
 Person ::= Organizer ;
 Person ::= Speaker ;
 Person ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person pay::Registration_fee can_stay_in::Place Nation::String Name::String hasEmail::String hasName::String hasAffiliation::String hasFirstName::String hasLastName::String hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ sign::Item is_present::Time (give::Thing)+ need::Item loggin_in::System submit::Document get::Email E-mail::String hasConflictOfInterest::Document email::String ;
ProgramCommitteeMember ::= ProgramCommitteeChair ;
 ProgramCommitteeMember ::= Chair ;
 ProgramCommitteeMember ::= memberOfProgramCommittee::ProgramCommittee maxPapers::Integer addedBy::Administrator isMemberOf::ProgramCommittee hasPassword::String ;
PaperQuestion ::= ε ;
Poster ::= is_submitted_at::Conference_volume ;
 Poster ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String changedBy::Author hasContributionStatus::EEnum ;
 Poster ::= hasContributionFileStatus::EEnum ;
RegistrationChair ::= organizes::Conference ;
Submission ::= Final_manuscript ;
 Submission ::= Initial_manuscipt ;
 Submission ::= Final_manuscript | Initial_manuscipt ;
Paper ::= PaperFullVersion ;
 Paper ::= Invited_Paper ;
 Paper ::= Short_Paper ;
 Paper ::= Full_Paper ;
 Paper ::= Accepted_Paper ;
 Paper ::= Rejected_Paper ;
 Paper ::= Undecided_Paper ;
 Paper ::= ActivePaper ;
 Paper ::= PendingPaper ;
 Paper ::= WithdrawnPaper ;
 Paper ::= RejectedPaper ;
 Paper ::= PublishedPaper ;
 Paper ::= Camera_Ready_Paper ;
 Paper ::= Workshop_Paper ;
 Paper ::= Industrial_Paper ;
 Paper ::= Conference_Paper ;
 Paper ::= Poster_Paper ;
 Paper ::= Regular_Paper ;
 Paper ::= Demo_Paper ;
 Paper ::= AcceptedPaper ;
 Paper ::= Submitted_Paper ;
 Paper ::= Accepted_paper ;
 Paper ::= Rejected_paper ;
 Paper ::= PaperAbstract ;
 Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Title::String Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
Volunteer ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person pay::Registration_fee can_stay_in::Place Nation::String Name::String hasEmail::String hasName::String hasAffiliation::String hasFirstName::String hasLastName::String hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ sign::Item is_present::Time (give::Thing)+ need::Item loggin_in::System submit::Document get::Email E-mail::String hasConflictOfInterest::Document email::String ;
WithdrawnPaper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Title::String Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
Fee ::= Hotel_fee ;
 Fee ::= Fee_for_extra_trip ;
 Fee ::= Registration_fee ;
 Fee ::= Sponzor_fee ;
 Fee ::= Hotel_fee | Fee_for_extra_trip | Registration_fee | Sponzor_fee ;
PCMembersList ::= isProducedBy::Chair ;
Lecture ::= Plenary_lecture ;
 Lecture ::= QualitatvieLecture ;
 Lecture ::= TraditionalLecture ;
 Lecture ::= hasAcronym::String ;
Committee ::= Program_committee ;
 Committee ::= Organizing_committee ;
 Committee ::= Steering_committee ;
 Committee ::= Best_Paper_Awards_Committee ;
 Committee ::= Program_Committee ;
 Committee ::= Organizing_Committee ;
 Committee ::= has_members::Committee_member was_a_committee_of::Conference_volume has_a_committee_co-chair::Co-chair has_a_committee_chair::Chair ;
OutputDocument ::= CD-ROM ;
 OutputDocument ::= IndexOfAuthors ;
 OutputDocument ::= ExternalReviewersList ;
 OutputDocument ::= Program ;
 OutputDocument ::= PCMembersList ;
 OutputDocument ::= ListOfAbstracts ;
 OutputDocument ::= BookletOfAbstracts ;
 OutputDocument ::= Proceedings ;
 OutputDocument ::= isProducedBy::Chair ;
Evaluation ::= isContainedIn::Review ;
QualitatvieLecture ::= hasAcronym::String ;
Assistance ::= ε ;
NumericalReviewQuestion ::= ε ;
Report ::= ε ;
Symposium ::= starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator ;
Organization ::= Company ;
 Organization ::= AcademiaOrganization ;
 Organization ::= IndustryOrganization ;
 Organization ::= NGO ;
 Organization ::= GovernmentOrganization ;
 Organization ::= University ;
 Organization ::= isProviderOf::Sponsorship ;
ComputerNetworksSecurityTopic ::= ε ;
URL ::= Event_URL ;
 URL ::= Senior_Reviewer_URL ;
 URL ::= Chair_URL ;
 URL ::= Contact_Person_URL ;
 URL ::= Regular_Reviewer_URL ;
 URL ::= Event_URL | Senior_Reviewer_URL | Chair_URL | Contact_Person_URL | Regular_Reviewer_URL ;
Text ::= ε ;
AuthorNotReviewer ::= writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution write_paper::Paper obtain::Award submit::Paper notification_until::Deadline_Author_notification submitPaper::Paper ;
PersonalPublicationHistory ::= ε ;
Topics ::= RFC ;
 Topics ::= Classic_Papers ;
 Topics ::= Networking ;
 Topics ::= Humour ;
 Topics ::= Programming ;
 Topics ::= Computer_Science ;
 Topics ::= RFC | Classic_Papers | Networking | Humour | Programming | Computer_Science ;
Sponzor ::= Exhibitor ;
 Sponzor ::= Bronze_Supporter ;
 Sponzor ::= Platinum_Supporter ;
 Sponzor ::= Gold_Supporter ;
 Sponzor ::= Best_Student_Paper_Supporter ;
 Sponzor ::= Silver_Supporter ;
 Sponzor ::= searched_by::ACM_SIGKDD Name_of_sponsor::String ;
ActivitySubmissionForm ::= TutorialProposal ;
 ActivitySubmissionForm ::= WorksopProposal ;
 ActivitySubmissionForm ::= isSubmittedBy::Author hasAuthor::Author submissionDeadline::dateTime ;
AssociatedChair ::= memberOfConference::Conference member_of_conference::Conference ;
Conference ::= Conference_volume ;
 Conference ::= TwoLevelConference ;
 Conference ::= SingleLevelConference ;
 Conference ::= has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country isOrganizedBy::OrganizingCommittee annualOrder::Integer takesPlace::Location hasAcronym::String finishedBy::Program_Comitee_Chair focusesOn::Topic startedBy::Program_Comitee_Chair takesPlace::Location has_conference_member::ConferenceMember WebSite::anyURI Topic_of_conference::String Date::date holded_by::ACM_SIGKDD Name_of_conference::String Start_of_conference::dateTime City_of_conference::String End_of_conference::dateTime hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
Computer ::= ε ;
Document ::= Email ;
 Document ::= Template ;
 Document ::= article ;
 Document ::= SlideSet ;
 Document ::= MealMenu ;
 Document ::= Programme_Brochure ;
 Document ::= Flyer ;
 Document ::= Web_Site ;
 Document ::= Multi-author_Volume ;
 Document ::= Form ;
 Document ::= Mailing_list ;
 Document ::= Record_of_attendance ;
 Document ::= Brief_introduction_for_Session_chair ;
 Document ::= Invitation_letter ;
 Document ::= Viza ;
 Document ::= Transparency ;
 Document ::= Submission ;
 Document ::= Payment_document ;
 Document ::= Evaluation ;
 Document ::= Programme ;
 Document ::= Review ;
 Document ::= PaperAbstract ;
 Document ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String presentationed_by::Speaker submit_until::Deadline recieved_by::User used_by::Person submited__by::User ;
Viza ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String presentationed_by::Speaker submit_until::Deadline recieved_by::User used_by::Person submited__by::User ;
Presentation ::= Invited_talk ;
 Presentation ::= PowerPoint_presentation ;
 Presentation ::= Video_presentation ;
 Presentation ::= is_given_by::Active_conference_participant ;
Organizator ::= Webmaster ;
 Organizator ::= Program_Chair ;
 Organizator ::= General_Chair ;
 Organizator ::= Organizing_Committee_member ;
 Organizator ::= Program_Committee_member ;
 Organizator ::= Webmaster | Program_Chair | General_Chair | Organizing_Committee_member ;
ReviewRating ::= WeekRejectRating ;
 ReviewRating ::= AcceptRating ;
 ReviewRating ::= AccpetIfRoomRating ;
 ReviewRating ::= RejectRating ;
 ReviewRating ::= WeekRejectRating | AcceptRating | AccpetIfRoomRating | RejectRating ;
Low ::= ε ;
WirelessCommunicationsTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
Item ::= Transport_vehicle ;
 Item ::= Card ;
 Item ::= Audiovisual_equipment ;
 Item ::= Publication ;
 Item ::= Document ;
 Item ::= go_through::Activity (is_used_for::Thing)+ is_signed_by::Person is_made_from::Item is_sent_after::Time is_needed_for::Person is_sent_before::Time is_prepared_by::Person is_used_by::Person is_given_to::Person is_sent_by::Person is_writen_by::Person ;
ConferenceAttendant ::= mustPay::Fee hasAdress::String paid::Boolean hasPhone::String ;
TextualReviewQuestion ::= ε ;
Card ::= Credit_card ;
Activity ::= Event_Creation ;
 Activity ::= Request ;
 Activity ::= Event_Approval ;
 Activity ::= Registration ;
 Activity ::= paper_assignment ;
 Activity ::= bidding_of_reviewer ;
 Activity ::= managing_of_conference_process ;
 Activity ::= reviewing_proces ;
 Activity ::= notification ;
 Activity ::= submission_process ;
 Activity ::= Activity_before_conference ;
 Activity ::= Conference_activity ;
 Activity ::= Activity_after_conference ;
 Activity ::= Lecture ;
 Activity ::= is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human hasTopic::Topic expectedAttendance::Integer isPartOf::Conference (has_result::Thing)+ sent_by::Person ;
TalkEvent ::= ClosingTalk ;
 TalkEvent ::= WelcomeTalk ;
 TalkEvent ::= ClosingTalk | WelcomeTalk ;
FinanceChair ::= organizes::Conference ;
Track ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
CADTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
Moderate ::= ε ;
Integer ::= integer() ;
PublicationsChair ::= organizes::Conference ;
Exhibitor ::= searched_by::ACM_SIGKDD Name_of_sponsor::String ;
ComputerNetworksSensorTopic ::= ε ;
Networking ::= ε ;
Participant ::= Student ;
 Participant ::= Regular ;
 Participant ::= Member ;
 Participant ::= earlyRegistration::Boolean ;
MeetingRoomPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
SlideSet ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String presentationed_by::Speaker submit_until::Deadline recieved_by::User used_by::Person submited__by::User ;
ExternalReviewer ::= assignedByReviewer::Reviewer cooperatesReviewer::Reviewer ;
Organizer ::= CommitteeMember ;
 Organizer ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person pay::Registration_fee can_stay_in::Place Nation::String Name::String hasEmail::String hasName::String hasAffiliation::String hasFirstName::String hasLastName::String hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ sign::Item is_present::Time (give::Thing)+ need::Item loggin_in::System submit::Document get::Email E-mail::String hasConflictOfInterest::Document email::String ;
Topic ::= ParallelAndDistributedComputingTopic ;
 Topic ::= WirelessCommunicationsTopic ;
 Topic ::= OperatingTopicsystems ;
 Topic ::= ComputerNetworksTopic ;
 Topic ::= SatelliteAndSpaceCommunicationsTopic ;
 Topic ::= CADTopic ;
 Topic ::= MultimediaTopic ;
 Topic ::= CommunicationsTopic ;
 Topic ::= PowerlineTransmissionTopic ;
 Topic ::= AntennasTopic ;
 Topic ::= PerformanceTopic ;
 Topic ::= SignalProcessingTopic ;
 Topic ::= MicroelectronicsTopic ;
 Topic ::= TestOnlyTopic ;
 Topic ::= RadioCommunicationsTopic ;
 Topic ::= ComputerArchitectureTopic ;
 Topic ::= MedicineTopic ;
 Topic ::= SecurityTopic ;
 Topic ::= MobileComputingTopic ;
 Topic ::= CryptographyTopic ;
 Topic ::= CommunicationTheoryTopic ;
 Topic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
WelcomeTalk ::= ε ;
SocialEvent ::= Excursion ;
 SocialEvent ::= Reception ;
 SocialEvent ::= Excursion | Reception ;
Information ::= sended_by::Administrator Receiver_of_email::String Message_of_email::String Subject_of_email::String ;
ContactInformation ::= hasCity::String hasStreet::String hasPostalCode::String hasPhone::String ;
Misc ::= ε ;
FreeTimeBreak ::= ε ;
Van ::= ε ;
Slides ::= hasContributionFileStatus::EEnum ;
PerformanceTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
Sponzorship ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
Programme ::= belongsToEvent::ConferenceEvent ;
BreakEvent ::= CoffeeBreak ;
 BreakEvent ::= FreeTimeBreak ;
 BreakEvent ::= MealBreak ;
 BreakEvent ::= CoffeeBreak | FreeTimeBreak | MealBreak ;
Preference ::= ε ;
Sponsor ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person pay::Registration_fee can_stay_in::Place Nation::String Name::String hasEmail::String hasName::String hasAffiliation::String hasFirstName::String hasLastName::String hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ sign::Item is_present::Time (give::Thing)+ need::Item loggin_in::System submit::Document get::Email E-mail::String hasConflictOfInterest::Document email::String ;
Organisation ::= Organising_Agency ;
 Organisation ::= Academic_Institution ;
 Organisation ::= Proceedings_Publisher ;
 Organisation ::= (publisherOf::Thing)+ technicallyOrganises::Thing ;
AcademiaOrganization ::= isProviderOf::Sponsorship ;
ConferenceMember ::= Reviewer ;
 ConferenceMember ::= ConferenceChair ;
 ConferenceMember ::= AssociatedChair ;
 ConferenceMember ::= Author ;
 ConferenceMember ::= CommitteeMember ;
 ConferenceMember ::= ProgramCommitteeMember ;
 ConferenceMember ::= Chairman ;
 ConferenceMember ::= memberOfConference::Conference member_of_conference::Conference ;
MedicineTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
Other ::= ε ;
Time ::= Deadline ;
 Time ::= Trip_day ;
 Time ::= Conference_days ;
 Time ::= Deadline | Trip_day | Conference_days ;
RatedPapers ::= hasRating::ReviewRating ;
ConferenceChair ::= memberOfConference::Conference member_of_conference::Conference ;
 ConferenceChair ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person pay::Registration_fee can_stay_in::Place Nation::String Name::String hasEmail::String hasName::String hasAffiliation::String hasFirstName::String hasLastName::String hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ sign::Item is_present::Time (give::Thing)+ need::Item loggin_in::System submit::Document get::Email E-mail::String hasConflictOfInterest::Document email::String ;
Place ::= DiningPlace ;
 Place ::= ConferenceVenuePlace ;
 Place ::= MeetingRoomPlace ;
 Place ::= AccommodationPlace ;
 Place ::= Building ;
 Place ::= Session_room ;
 Place ::= Hotel_room ;
 Place ::= Conference_hall ;
 Place ::= Main_office ;
 Place ::= Hotel ;
 Place ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
EEnum ::= (male::ε) | (female::ε) | (high::ε) | (medium::ε) | (low::ε) | (very high::ε) | (1::ε) | (2::ε) | (3::ε) | (4::ε) | (5::ε) | (6::ε) | (7::ε) | (submitted::ε) | (missing::ε) | (notStarted::ε) | (active::ε) | (finished::ε) | (accepted::ε) | (rejected::ε) | (regular::ε) | (invited::ε) | (lowBid::ε) | (-::ε) | (CONFLICT::ε) | (wantNot::ε) | (highBid::ε) | (Yes::ε) | (No::ε) | (Accept::ε) | (Reject::ε) | (Unsure::ε) | (ForwardLookingIdea::ε) | (Compilers::ε) | (Microarchitecture::ε) | (Systems::ε) ;
AcceptRating ::= ε ;
Form ::= Hotel_registration_form ;
 Form ::= Registration_form ;
 Form ::= Author_information_form ;
 Form ::= Hotel_registration_form | Registration_form | Author_information_form ;
ClosingTalk ::= ε ;
Bid ::= adjustedBy::Reviewer ;
MealBreak ::= ε ;
ListOfAbstracts ::= isProducedBy::Chair ;
Attendee ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person pay::Registration_fee can_stay_in::Place Nation::String Name::String hasEmail::String hasName::String hasAffiliation::String hasFirstName::String hasLastName::String hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ sign::Item is_present::Time (give::Thing)+ need::Item loggin_in::System submit::Document get::Email E-mail::String hasConflictOfInterest::Document email::String ;
Registration ::= is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human hasTopic::Topic expectedAttendance::Integer isPartOf::Conference (has_result::Thing)+ sent_by::Person ;
 Registration ::= ε ;
WorksopProposal ::= isSubmittedBy::Author hasAuthor::Author submissionDeadline::dateTime ;
Lecturer ::= Worker_lecturer ;
 Lecturer ::= Student_lecturer ;
 Lecturer ::= Worker_lecturer | Student_lecturer ;
Departure ::= ε ;
Listener ::= ε ;
 Listener ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person pay::Registration_fee can_stay_in::Place Nation::String Name::String hasEmail::String hasName::String hasAffiliation::String hasFirstName::String hasLastName::String hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ sign::Item is_present::Time (give::Thing)+ need::Item loggin_in::System submit::Document get::Email E-mail::String hasConflictOfInterest::Document email::String ;
Building ::= Presenter_house ;
 Building ::= Conference_restaurant ;
 Building ::= Conference_building ;
 Building ::= Conference_airport ;
 Building ::= Conference_hotel ;
 Building ::= Sponsor_company_house ;
 Building ::= Presenter_university ;
 Building ::= Presenter_house | Conference_restaurant | Conference_building | Conference_airport | Conference_hotel | Sponsor_company_house | Presenter_university ;
ConferenceDinner ::= hasMenu::MealMenu ;
Thing ::= Person ;
 Thing ::= ProgramCommittee ;
 Thing ::= Event ;
 Thing ::= Role ;
 Thing ::= Activity ;
 Thing ::= Detail ;
 Thing ::= Review_expertise ;
 Thing ::= Topic ;
 Thing ::= Review_preference ;
 Thing ::= date ;
 Thing ::= conference ;
 Thing ::= URL ;
 Thing ::= conference_setup ;
 Thing ::= Place ;
 Thing ::= City ;
 Thing ::= OrganizingCommittee ;
 Thing ::= ActivitySubmissionForm ;
 Thing ::= DoubleBlindReview ;
 Thing ::= ConferenceProgram ;
 Thing ::= Slot ;
 Thing ::= ResearchTopic ;
 Thing ::= OutputDocument ;
 Thing ::= Criterion ;
 Thing ::= Program_Comitee ;
 Thing ::= Contribution ;
 Thing ::= Conflict_Of_Interest ;
 Thing ::= Conflict_Rules ;
 Thing ::= Program_Comitee_Meeting ;
 Thing ::= ACM_SIGKDD ;
 Thing ::= Document ;
 Thing ::= Organizer ;
 Thing ::= Session ;
 Thing ::= Person | ProgramCommittee | Event | Role | Activity | Detail | Review_expertise | Topic | Review_preference | date | conference | URL | conference_setup | Place | City | OrganizingCommittee | ActivitySubmissionForm | DoubleBlindReview | ConferenceProgram | Slot | ResearchTopic | OutputDocument | Criterion | Program_Comitee | Contribution | Conflict_Of_Interest | Conflict_Rules | Program_Comitee_Meeting | ACM_SIGKDD ;
ProgramCommitteeChair ::= endReview::Review ;
Scholar ::= studyAt::University ;
MainAuthor ::= writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution write_paper::Paper obtain::Award submit::Paper notification_until::Deadline_Author_notification submitPaper::Paper ;
Excursion ::= ε ;
TPCMember ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person pay::Registration_fee can_stay_in::Place Nation::String Name::String hasEmail::String hasName::String hasAffiliation::String hasFirstName::String hasLastName::String hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ sign::Item is_present::Time (give::Thing)+ need::Item loggin_in::System submit::Document get::Email E-mail::String hasConflictOfInterest::Document email::String ;
ConferenceEvent ::= NonAcademicEvent ;
 ConferenceEvent ::= AcademicEvent ;
 ConferenceEvent ::= hasAttendee::Person hasLocation::Place hasProgramme::Programme hasEndDateTime::dateTime hasStartDateTime::dateTime ;
Assistant ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person pay::Registration_fee can_stay_in::Place Nation::String Name::String hasEmail::String hasName::String hasAffiliation::String hasFirstName::String hasLastName::String hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ sign::Item is_present::Time (give::Thing)+ need::Item loggin_in::System submit::Document get::Email E-mail::String hasConflictOfInterest::Document email::String ;
Member ::= Program_chair ;
 Member ::= Advocate ;
 Member ::= Web_address::String ;
Programming ::= ε ;
ComputerNetworksMeasurementsTopic ::= ε ;
Committees ::= Program_Committee ;
 Committees ::= Review_Committee ;
 Committees ::= Program_Committee | Review_Committee ;
ProgramCoChair ::= organizes::Conference ;
ComputerNetworksTopic ::= ComputerNetworksEnterpriseTopic ;
 ComputerNetworksTopic ::= ComputerNetworksSwitchingTopic ;
 ComputerNetworksTopic ::= ComputerNetworksSensorTopic ;
 ComputerNetworksTopic ::= ComputerNetworksSecurityTopic ;
 ComputerNetworksTopic ::= ComputerNetworksOpticalTopic ;
 ComputerNetworksTopic ::= ComputerNetworksMeasurementsTopic ;
 ComputerNetworksTopic ::= ComputerNetworksManagementTopic ;
 ComputerNetworksTopic ::= ComputerNetworksAapplicationsTopic ;
 ComputerNetworksTopic ::= ComputerNetworksEnterpriseTopic | ComputerNetworksSwitchingTopic | ComputerNetworksSensorTopic | ComputerNetworksSecurityTopic | ComputerNetworksOpticalTopic | ComputerNetworksMeasurementsTopic | ComputerNetworksManagementTopic | ComputerNetworksAapplicationsTopic ;
People ::= Member ;
 People ::= Surname::String Name::String Country::String E-mail::String Organisation::String ;
Reception ::= ε ;
University ::= scientificallyOrganises::Academic_Institution isProviderOf::Sponsorship ;
Administrator ::= approve::Event assign::Role assigns::Thing send::Email generate::Thing finalizePaperAssignment::Conference runPaperAssignmentTools::Conference enableVirtualMeeting::Conference startReviewerBidding::Conference assignReviewer::Reviewer rejectPaper::Paper enterConferenceDetails::Conference printHardcopyMailingManifests::Conference setMaxPapers::ProgramCommitteeMember enterReviewCriteria::Conference acceptPaper::Paper addProgramCommitteeMember::ProgramCommitteeMember ;
PaymentMode ::= ε ;
BookletOfAbstracts ::= isProducedBy::Chair ;
StudentAdvocate ::= organizes::Conference ;
PaperPresentation ::= relatedToPaper::AcceptedPaper ;
Chair ::= produces::OutputDocument sets::Thing accepts::Paper rejects::Paper asksForPreference::Reviewer isChairOf::Session was_a_committee_chair_of::Committee ;
ExternalReviewersList ::= isProducedBy::Chair ;
Money ::= Tax ;
 Money ::= Fee ;
 Money ::= Sponzorship ;
 Money ::= Tip ;
 Money ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
AntennasTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
MicroelectronicsTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
Template ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String presentationed_by::Speaker submit_until::Deadline recieved_by::User used_by::Person submited__by::User ;
ComputerNetworksOpticalTopic ::= ε ;
Webmaster ::= ε ;
Role ::= Admin_Role ;
 Role ::= Author_Role ;
 Role ::= Committe_Role ;
 Role ::= Head_Role ;
 Role ::= Reviewer_Role ;
 Role ::= assigned_by::Administrator ;
Chairman ::= ConferenceChair ;
 Chairman ::= AssociatedChair ;
 Chairman ::= ProgramCommitteeChair ;
 Chairman ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person pay::Registration_fee can_stay_in::Place Nation::String Name::String hasEmail::String hasName::String hasAffiliation::String hasFirstName::String hasLastName::String hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ sign::Item is_present::Time (give::Thing)+ need::Item loggin_in::System submit::Document get::Email E-mail::String hasConflictOfInterest::Document email::String memberOfConference::Conference member_of_conference::Conference ;
TutorialProposal ::= isSubmittedBy::Author hasAuthor::Author submissionDeadline::dateTime ;
RFC ::= ε ;
Presenter ::= Invited_Speaker ;
Criterion ::= hasWeight::double ;
Modelling ::= ε ;
PaperStatus ::= isStatusOf::Paper ;
Call ::= CallForPapers ;
 Call ::= CallForReviews ;
 Call ::= CallForManuscripts ;
 Call ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
Tip ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
Event ::= Symposium ;
 Event ::= Social_event ;
 Event ::= Administrative_event ;
 Event ::= Working_event ;
 Event ::= pc_meeting ;
 Event ::= session ;
 Event ::= Social_Event ;
 Event ::= Scientific_Event ;
 Event ::= starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator ;
Deadline ::= Deadline_hotel_reservation ;
 Deadline ::= Submissions_deadline ;
 Deadline ::= Deadline_for_notification_of_acceptance ;
 Deadline ::= Registation_deadline ;
 Deadline ::= Camera_ready_manuscript_deadline ;
 Deadline ::= Deadline_Abstract_Submission ;
 Deadline ::= Deadline_Paper_Submission ;
 Deadline ::= Deadline_Author_notification ;
 Deadline ::= designed_by::ACM_SIGKDD Date::dateTime done_till::date ;
MealEvent ::= ConferenceDinner ;
 MealEvent ::= hasMenu::MealMenu ;
Acceptance ::= ε ;
PublicityWebChair ::= organizes::Conference ;
Session ::= Conference_Session ;
 Session ::= Regular_Session ;
 Session ::= Poster_Session ;
 Session ::= Demo_Session ;
 Session ::= Workshop_Session ;
 Session ::= Speaker_lecture ;
 Session ::= hasAssignedPaper::AcceptedPaper room::String isAssociatedTo::Slot hasChair::Chair ;
Reccommendation ::= Marginal_Tend_to_Reject ;
 Reccommendation ::= Marginal_Tend_to_Accept ;
 Reccommendation ::= Portable_Reject ;
 Reccommendation ::= Must_Accept ;
 Reccommendation ::= Clear_Reject ;
 Reccommendation ::= Clear_Accept ;
 Reccommendation ::= Marginal_Tend_to_Reject | Marginal_Tend_to_Accept | Portable_Reject | Must_Accept | Clear_Reject | Clear_Accept ;
CoffeeBreak ::= ε ;
State ::= Presenter_state ;
 State ::= Conference_state ;
 State ::= Sponsor_state ;
 State ::= Presenter_state | Conference_state | Sponsor_state ;
Detail ::= ε ;
Request ::= Help_Request ;
Humour ::= ε ;
PhaseOfConferencePreparation ::= Setup_Phase ;
 PhaseOfConferencePreparation ::= Camera_Ready_Copy_Phase ;
 PhaseOfConferencePreparation ::= Assignment_Phase ;
 PhaseOfConferencePreparation ::= Blocked_Phase ;
 PhaseOfConferencePreparation ::= Abstract_And_Paper_Submission_Phase ;
 PhaseOfConferencePreparation ::= Invitation_Of_Reviewers_Phase ;
 PhaseOfConferencePreparation ::= Review_Phase ;
 PhaseOfConferencePreparation ::= Closed_Phase ;
 PhaseOfConferencePreparation ::= Bidding_Phase ;
 PhaseOfConferencePreparation ::= hasPhaseStatus::EEnum ;
Program ::= isProducedBy::Chair ;
CD ::= ε ;
Proceedings ::= Conference_proceedings ;
 Proceedings ::= (includes::Thing)+ ;
PublishedPaper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Title::String Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
Company ::= isProviderOf::Sponsorship ;
DoubleBlindReview ::= isExecutedBy::Reviewer ;
ReviewForm ::= ε ;
CommitteeMember ::= Secondary_Reviewer ;
 CommitteeMember ::= Primary_Reviewer ;
 CommitteeMember ::= isMemberOf::Conference reject_paper::Paper accept::Paper ;
PendingPaper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Title::String Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
PowerlineTransmissionTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
IndustryOrganization ::= isProviderOf::Sponsorship ;
TestOnlyTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
WeekRejectRating ::= ε ;
System ::= ε ;
Discussion ::= ε ;
Trip ::= ε ;
RTF ::= ε ;
Banquet ::= ε ;
Abstract ::= Tutorial_Abstract ;
 Abstract ::= Invited_Talk_Abstract ;
 Abstract ::= (is_the_1th_part_of::Thing)+ part_of_article::article ;
Cheque ::= ε ;
Flyer ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String presentationed_by::Speaker submit_until::Deadline recieved_by::User used_by::Person submited__by::User ;
Taxi ::= ε ;
Award ::= Best_Applications_Paper_Award ;
 Award ::= Best_Student_Paper_Award ;
 Award ::= Best_Research_Paper_Award ;
 Award ::= (awarded_by::Organizator)+ ;
PaperFullVersion ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Title::String Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
RejectRating ::= ε ;
Introduction ::= Introduction_of_speaker ;
SingleLevelConference ::= has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country isOrganizedBy::OrganizingCommittee annualOrder::Integer takesPlace::Location hasAcronym::String finishedBy::Program_Comitee_Chair focusesOn::Topic startedBy::Program_Comitee_Chair takesPlace::Location has_conference_member::ConferenceMember WebSite::anyURI Topic_of_conference::String Date::date holded_by::ACM_SIGKDD Name_of_conference::String Start_of_conference::dateTime City_of_conference::String End_of_conference::dateTime hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
Sponsorship ::= TravelGrant ;
 Sponsorship ::= providedBy::Organization hasCostCurrency::String hasCostAmount::Integer ;
ConferenceVenuePlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
ResearchTopic ::= ε ;
String ::= string() ;
Currency ::= ε ;
Contribution ::= Poster ;
 Contribution ::= Short_paper ;
 Contribution ::= Contribution_File ;
 Contribution ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String changedBy::Author hasContributionStatus::EEnum ;
CallForReviews ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
ComputerNetworksManagementTopic ::= ε ;
NonAcademicEvent ::= MealEvent ;
 NonAcademicEvent ::= BreakEvent ;
 NonAcademicEvent ::= SocialEvent ;
 NonAcademicEvent ::= MealEvent | BreakEvent | SocialEvent ;
Reviewer ::= Meta-Reviewer ;
 Reviewer ::= invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ writes_review::Review hasReviewHistory::PersonalReviewHistory executes::DoubleBlindReview cooperates::ExternalReviewer IsAssignedTo::Paper hasConflictedPaper::Paper hasPreferredPaper::Paper hasPreferredTopic::ResearchTopic writeReview::Review has_made_review::Paper_Review UserName::String Comments_to_Chair::String Other_Areas::String refuses::Pending_Proposed_Conflict reviews::Paper bidsFor::Paper confirmes::Pending_Proposed_Conflict assignedPaperBy::Program_Comitee_Chair assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper assignExternalReviewer::ExternalReviewer ;
ComputerNetworksSwitchingTopic ::= ε ;
Slot ::= date::date endsAt::time beginsAt::time forms::ConferenceProgram hosts::Session ;
Student ::= earlyRegistration::Boolean ;
 Student ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person pay::Registration_fee can_stay_in::Place Nation::String Name::String hasEmail::String hasName::String hasAffiliation::String hasFirstName::String hasLastName::String hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ sign::Item is_present::Time (give::Thing)+ need::Item loggin_in::System submit::Document get::Email E-mail::String hasConflictOfInterest::Document email::String ;
Format ::= Adobe_PDF ;
 Format ::= MS_Word ;
 Format ::= Corel_Word_Perfect ;
 Format ::= HTML ;
 Format ::= PostScript ;
 Format ::= RTF ;
 Format ::= Text ;
 Format ::= Adobe_PDF | MS_Word | Corel_Word_Perfect | HTML | PostScript | RTF | Text ;
PersonalHistory ::= PersonalPublicationHistory ;
 PersonalHistory ::= PersonalReviewHistory ;
 PersonalHistory ::= PersonalPublicationHistory | PersonalReviewHistory ;
Account ::= registred_by::Person ;
Publication ::= Cd_proceening ;
 Publication ::= Book_proceeding ;
 Publication ::= Cd_proceening | Book_proceeding ;
ComputerNetworksAapplicationsTopic ::= ε ;
Boolean ::= "true" | "false" ;
Question ::= ReviewQuestion ;
 Question ::= PaperQuestion ;
 Question ::= ReviewQuestion | PaperQuestion ;
ActivePaper ::= RatedPapers ;
 ActivePaper ::= hasRating::ReviewRating ;
AcceptedPaper ::= relatedToEvent::PaperPresentation isAssignedToSession::Session ;
TravelGrant ::= providedBy::Organization hasCostCurrency::String hasCostAmount::Integer ;
Simulating ::= ε ;
--------------------metamodels::useCase.bgf--------------------
UseCaseContainer ::= (ownedElement::NamedElement)+ ;
Extend ::= (extension::UseCase)+ ;
Include ::= (includingCase::UseCase)+ ;
UseCase ::= (include::Include)+ (extend::Extend)+ ;
Actor ::= name::String ;
NamedElement ::= Actor ;
 NamedElement ::= UseCase ;
 NamedElement ::= Association ;
BehavioredClassifier ::= ε ;
String ::= string() ;
Association ::= actor::Actor useCase::UseCase ;
--------------------metamodels::MiningMart.bgf--------------------
Key ::= isUsedForIndex::Boolean (hasColumn::DataRepresentation/Column)+ isAssociatedToColumnSet::DataRepresentation/ColumnSet ;
Nominal ::= ε ;
Attribute ::= class::SimplfiedMiningMart/Class has::SimplfiedMiningMart/DataType ;
SQLQuery ::= (select::DataRepresentation/Column)+ (from::DataRepresentation/ColumnSet)+ (where::String)+ ;
Categorial ::= ε ;
StructuralFeature ::= ε ;
ColumnStatistics ::= unique::Integer missing::Integer min::Integer max::Integer average::Integer standarDeviation::Integer distributionValue::String distributionCount::Integer distributionMin::Integer distributionMax::Integer forColumn::DataRepresentation/Column ;
Function ::= nameOf::String signature::String ;
RelationShip ::= subRelationShipRestriction::String defined::String isA::DataRepresentation/RelationShip (correspondsToForeignKey::DataRepresentation/ForeignKey)+ correspondsToColumnSet::DataRepresentation/ColumnSet FromConcept::DataRepresentation/Concept ToConcept::DataRepresentation/Concept ;
Column ::= name::String dataType::SimplfiedMiningMart/DataType (keys::DataRepresentation/Key)+ belongsToColumnSet::DataRepresentation/ColumnSet corespondsToBaseAttribute::DataRepresentation/BaseAttribute linkPackage::LinkPackage ;
ModelElement ::= ε ;
RowSelection ::= ε ;
TimeOperator ::= ε ;
String ::= string() ;
LoopStep ::= (iterationSet::DataRepresentation/FeatureAttribute)+ (outputSet::DataRepresentation/FeatureAttribute)+ ;
Table ::= ε ;
Time ::= ε ;
Step ::= name::String description::String belongsToCase::CaseRepresentation/Case embedsOperator::CaseRepresentation/Operator (predecessors::CaseRepresentation/Step)+ (successors::CaseRepresentation/Step)+ ;
BaseAttribute ::= isPartMultiColumnFeature::DataRepresentation/MultiColumnFeature domainDataType::DataRepresentation/DomainDataType ;
Transformation ::= transformationGroup::CaseRepresentation/TransformationGroup ;
DataObject ::= source::CaseRepresentation/ExecutionElement target::CaseRepresentation/ExecutionElement linkPackageCaseRepresentation::LinkPackage ;
Scaling ::= ε ;
Agregation ::= ε ;
MultiColumnFeature ::= (consitsOfBaseAttributes::DataRepresentation/BaseAttribute)+ ;
FeatureAttribute ::= name::String relevanceForMining::Boolean attributeType::SimplfiedMiningMart/DataType belongsToConcept::DataRepresentation/Concept (correspondsToColumns::DataRepresentation/Column)+ ;
MultiRelFeatureConstr ::= ε ;
ExecutionElement ::= source::CaseRepresentation/DataObject target::CaseRepresentation/DataObject ;
Spatial ::= ε ;
Snapshot ::= ε ;
DataType ::= attribute::SimplfiedMiningMart/Attribute ;
ParameterType ::= (Value::ε) | (Concept::ε) | (RelationShip::ε) | (FeatureAttribute::ε) ;
Binary ::= ε ;
UserInput ::= (containsValues::DataRepresentation/Value)+ ;
Integer ::= integer() ;
KeyAttribute ::= ε ;
PrimaryKey ::= ε ;
Discretization ::= ε ;
Class ::= name::String (attributes::SimplfiedMiningMart/Attribute)+ ;
TransformationGroup ::= (transformation::CaseRepresentation/Transformation)+ ;
FeatureSelection ::= ε ;
RoleRestriction ::= name::String restrictionForRelationShip::DataRepresentation/RelationShip restrictionForConcept::DataRepresentation/Concept restrictionToConcept::DataRepresentation/Concept min::Integer max::Integer belongsToConcept::DataRepresentation/Concept ;
DataMinStep ::= ε ;
TimeGroup ::= ε ;
Value ::= domainDataType::DataRepresentation/DomainDataType (belongsToUserInput::DataRepresentation/UserInput)+ linkPackage::LinkPackage ;
Ordinal ::= ε ;
StoredProcedure ::= nameOf::String signature::String ;
Case ::= name::String caseMode::Boolean caseInput::CaseRepresentation/Parameter caseOutput::DataRepresentation/Concept documentation::String (listOfStep::CaseRepresentation/Step)+ population::DataRepresentation/Concept targetAttributes::DataRepresentation/FeatureAttribute ;
ColumnSetStatistics ::= allNumber::Integer ordinalNumber::Integer nominalNumber::Integer timeNumber::Integer forColumnSet::DataRepresentation/ColumnSet ;
Scalar ::= ε ;
ColumnSet ::= number::Integer file::String dbConnectString::String user::String (hasColumn::DataRepresentation/Column)+ (hasKey::DataRepresentation/Key)+ correspondsToConcept::DataRepresentation/Concept correspondsToRelationShip::DataRepresentation/RelationShip linkPackage::LinkPackage ;
LinkPackage ::= type::InOut dataObject::CaseRepresentation/DataObject value::DataRepresentation/Value column::DataRepresentation/Column columnSet::DataRepresentation/ColumnSet ;
ForeignKey ::= isConnectionTo::DataRepresentation/Table correspondsToRelationShip::DataRepresentation/RelationShip ;
Parameter ::= name::String place::String parameterType::CaseRepresentation/ParameterType belongsToOperator::CaseRepresentation/Operator ;
InOut ::= (Input::ε) | (OutPut::ε) ;
DomainDataType ::= baseAttributeD::DataRepresentation/BaseAttribute ;
Concept ::= subConceptRestriction::String isA::DataRepresentation/Concept FromConcept::DataRepresentation/RelationShip ToConcept::DataRepresentation/RelationShip correspondsToColumnSet::DataRepresentation/ColumnSet ;
Boolean ::= "true" | "false" ;
Sampling ::= ε ;
FeatureConstruction ::= scalingFactor::Integer ;
MultiStep ::= iterationCondition::String ;
View ::= ε ;
Constant ::= ε ;
Segmentation ::= ε ;
Classifier ::= ε ;
--------------------metamodels::logic-abstract.bgf--------------------
Formula ::= (true::ε) | (false::ε) | (not::(arg::Formula)) | (and::(lhs::Formula rhs::Formula)) | (and::(args::(Formula*))) | (or::(lhs::Formula rhs::Formula)) | (or::(args::(Formula*))) | (if::(lhs::Formula rhs::Formula)) | (fi::(lhs::Formula rhs::Formula)) | (iff::(lhs::Formula rhs::Formula)) ;
 Formula ::= id::(x::string()) ;
--------------------metamodels::logic-concrete.bgf--------------------
True ::= "(" True ")" ;
 True ::= "true" ;
 True ::= "not" f::False ;
 True ::= lt::True "and" rt::True ;
 True ::= lt::True "or" rt::True ;
 True ::= lt::True "or" rf::False ;
 True ::= lf::False "or" rt::True ;
Formula ::= [not] "!" arg::Formula ;
 Formula ::= [true] "true" ;
 Formula ::= [false] "false" ;
 Formula ::= [and] lhs::Formula "&" rhs::Formula ;
 Formula ::= [or] lhs::Formula "|" rhs::Formula ;
 Formula ::= [fi] lhs::Formula "<=" rhs::Formula ;
 Formula ::= [if] lhs::Formula "=>" rhs::Formula ;
 Formula ::= [iff] lhs::Formula "<=>" rhs::Formula ;
 Formula ::= [id] ε ;
False ::= "false" ;
 False ::= "not" t::True ;
 False ::= "(" False ")" ;
 False ::= lf::False "and" rt::True ;
 False ::= lf::False "and" rf::False ;
 False ::= lt::True "and" rf::False ;
 False ::= lf::False "or" rf::False ;
--------------------ocl::expressions.bgf--------------------
Integer ::= integer() ;
RejectExp ::= ε ;
VariableDeclaration ::= var::String varType::Type (oclExpression::OclExpression)+ (queryExp::QueryExp)+ (varInit::VariableInitialisation)+ ;
Boolean ::= "true" | "false" ;
ForAllExp ::= ε ;
IterateExp ::= varInit::VariableInitialisation ;
CollectExp ::= ε ;
VariableInitialisation ::= initExpression::OclExpression varDec::VariableDeclaration iterateExp::IterateExp ;
String ::= string() ;
SelectExp ::= ε ;
ExistsExp ::= ε ;
VariableExp ::= var::String ;
SelfExp ::= (queryArg::QueryExp)+ (querySrc::QueryExp)+ resultType::Type (varDec::VariableDeclaration)+ (varInit::VariableInitialisation)+ ;
ResultExp ::= (queryArg::QueryExp)+ (querySrc::QueryExp)+ resultType::Type (varDec::VariableDeclaration)+ (varInit::VariableInitialisation)+ ;
OclExpression ::= SelfExp ;
 OclExpression ::= ResultExp ;
 OclExpression ::= VariableExp ;
 OclExpression ::= OperationExp ;
 OclExpression ::= QueryExp ;
--------------------ocl::operations.bgf--------------------
OclOperation ::= arguments::OclExpression ;
Integer ::= integer() ;
NaviguationExp ::= assEnd::AssocationEnd qualifierValues::OclExpression ;
Attribute ::= (attrExp::AttributeExp)+ ;
AssocationEnd ::= (navExp::NaviguationExp)+ ;
StringConstExp ::= value::String ;
ConstExp ::= IntegerConstExp ;
 ConstExp ::= StringConstExp ;
 ConstExp ::= RealConstExp ;
 ConstExp ::= IntegerConstExp | StringConstExp | RealConstExp ;
Boolean ::= "true" | "false" ;
RealConstExp ::= value::Double ;
IntegerConstExp ::= value::Integer ;
Operation ::= (classOp::ClassifierOperation)+ ;
ClassifierOperation ::= op::Operation arguments::OclExpression ;
OperationExp ::= PropertyOperation ;
 OperationExp ::= OclOperation ;
 OperationExp ::= ConstExp ;
PropertyOperation ::= AttributeExp ;
 PropertyOperation ::= NaviguationExp ;
 PropertyOperation ::= ClassifierOperation ;
 PropertyOperation ::= isMarkedPre::Boolean source::OclExpression ;
String ::= string() ;
AttributeExp ::= attr::Attribute ;
--------------------ocl::types.bgf--------------------
Integer ::= integer() ;
SetType ::= elementType::Type ;
SequenceType ::= elementType::Type ;
EnumType ::= (enumLiteral::EnumLiteral)+ ;
Type ::= BasicType ;
 Type ::= InstanceType ;
 Type ::= EnumType ;
 Type ::= OclAnyType ;
 Type ::= OclTypeType ;
 Type ::= CollectionType ;
CollectionType ::= SetType ;
 CollectionType ::= SequenceType ;
 CollectionType ::= BagType ;
IntegerType ::= ε ;
RealType ::= ε ;
String ::= string() ;
InstanceType ::= classifier::Classifier ;
EnumLiteral ::= enumType::EnumType ;
OclAnyType ::= (supertype::Type)+ (subtype::Type)+ (collectionType::CollectionType)+ ;
OclTypeType ::= (supertype::Type)+ (subtype::Type)+ (collectionType::CollectionType)+ ;
StringType ::= ε ;
Boolean ::= "true" | "false" ;
BasicType ::= IntegerType ;
 BasicType ::= RealType ;
 BasicType ::= StringType ;
 BasicType ::= BooleanType ;
BagType ::= elementType::Type ;
BooleanType ::= ε ;
Classifier ::= instanceType::InstanceType ;
--------------------ocl::uml.bgf--------------------
Integer ::= integer() ;
PortCondition ::= ε ;
Boolean ::= "true" | "false" ;
PreCondition ::= ε ;
Guard ::= ε ;
String ::= string() ;
Invariant ::= ε ;
--------------------ocl::values.bgf--------------------
Object ::= objectValue::ObjectValue ;
Integer ::= integer() ;
IntegerValue ::= val::Integer ;
RealValue ::= val::Double ;
ObjectValue ::= object::Object ;
String ::= string() ;
Value ::= BasicValue ;
 Value ::= ObjectValue ;
 Value ::= EnumValue ;
 Value ::= UndefinedValue ;
 Value ::= CollectionValue ;
EnumValue ::= enumLiteral::EnumLiteral ;
SequenceValue ::= (elements::Value)+ ;
SetValue ::= (elements::Value)+ ;
Count ::= num::Integer ;
EnumLiteral ::= enumValue::EnumValue ;
BagValue ::= (elements::Value)+ ;
BooleanValue ::= val::Boolean ;
Boolean ::= "true" | "false" ;
BasicValue ::= IntegerValue ;
 BasicValue ::= RealValue ;
 BasicValue ::= StringValue ;
 BasicValue ::= BooleanValue ;
UndefinedValue ::= type::Type (bagValue::BagValue)+ (sequenceValue::SequenceValue)+ (setValue::SetValue)+ ;
StringValue ::= val::String ;
--------------------slps::bgf-4.1-adt.bgf--------------------
BGFExpression ::= (epsilon::ε) | (empty::ε) | (val::(v::BGFValue)) | (anything::ε) | (terminal::(t::string())) | (nonterminal::(t::string())) | (selectable::(selector::string() expr::BGFExpression)) | (sequence::(exprs::(BGFExpression*))) | (choice::(exprs::(BGFExpression*))) | (marked::(expr::BGFExpression)) | (optional::(expr::BGFExpression)) | (plus::(expr::BGFExpression)) | (star::(expr::BGFExpression)) | (starsepplus::(expr::BGFExpression sep::BGFExpression)) | (starsepstar::(expr::BGFExpression sep::BGFExpression)) ;
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::bgf-4.2-adt.bgf--------------------
BGFProduction ::= production::(label::string() lhs::string() rhs::BGFExpression) ;
BGFExpression ::= (epsilon::ε) | (empty::ε) | (val::(v::BGFValue)) | (anything::ε) | (terminal::(t::string())) | (nonterminal::(t::string())) | (selectable::(selector::string() expr::BGFExpression)) | (sequence::(exprs::(BGFExpression*))) | (choice::(exprs::(BGFExpression*))) | (marked::(expr::BGFExpression)) | (optional::(expr::BGFExpression)) | (plus::(expr::BGFExpression)) | (star::(expr::BGFExpression)) | (starsepplus::(expr::BGFExpression sep::BGFExpression)) | (starsepstar::(expr::BGFExpression sep::BGFExpression)) ;
BGFGrammar ::= grammar::(roots::(string()*) prods::(BGFProduction*)) ;
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::bgf-4.3-adt.bgf--------------------
BGFProduction ::= production::(label::string() lhs::string() rhs::BGFExpression) ;
BGFExpression ::= (epsilon::ε) | (empty::ε) | (val::(v::BGFValue)) | (anything::ε) | (terminal::(t::string())) | (nonterminal::(t::string())) | (selectable::(selector::string() expr::BGFExpression)) | (sequence::(exprs::BGFExprList)) | (choice::(exprs::BGFExprList)) | (marked::(expr::BGFExpression)) | (optional::(expr::BGFExpression)) | (plus::(expr::BGFExpression)) | (star::(expr::BGFExpression)) | (seplistplus::(expr::BGFExpression sep::BGFExpression)) | (sepliststar::(expr::BGFExpression sep::BGFExpression)) ;
BGFProdList ::= BGFProduction* ;
BGFGrammar ::= grammar::(roots::(string()*) prods::BGFProdList) ;
BGFExprList ::= BGFExpression* ;
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::bgf-5.0-adt.bgf--------------------
BGFProduction ::= production::(label::string() lhs::string() rhs::BGFExpression) ;
BGFExpression ::= (epsilon::ε) | (empty::ε) | (val::(v::BGFValue)) | (anything::ε) | (terminal::(t::string())) | (nonterminal::(t::string())) | (selectable::(selector::string() expr::BGFExpression)) | (sequence::(exprs::BGFExprList)) | (choice::(exprs::BGFExprList)) | (all::(exprs::BGFExprList)) | (marked::(expr::BGFExpression)) | (optional::(expr::BGFExpression)) | (not::(expr::BGFExpression)) | (plus::(expr::BGFExpression)) | (star::(expr::BGFExpression)) | (seplistplus::(expr::BGFExpression sep::BGFExpression)) | (sepliststar::(expr::BGFExpression sep::BGFExpression)) ;
BGFGrammar ::= grammar::(roots::(string()*) prods::BGFProdList) ;
BGFProdList ::= BGFProduction* ;
BGFExprList ::= BGFExpression* ;
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::bgf-5.1-adt.bgf--------------------
BGFProduction ::= production::(label::string() lhs::string() rhs::BGFExpression) ;
BGFExpression ::= (epsilon::ε) | (empty::ε) | (val::(v::BGFValue)) | (anything::ε) | (terminal::(t::string())) | (nonterminal::(t::string())) | (selectable::(selector::string() expr::BGFExpression)) | (sequence::(exprs::BGFExprList)) | (choice::(exprs::BGFExprList)) | (allof::(exprs::BGFExprList)) | (marked::(expr::BGFExpression)) | (optional::(expr::BGFExpression)) | (not::(expr::BGFExpression)) | (plus::(expr::BGFExpression)) | (star::(expr::BGFExpression)) | (seplistplus::(expr::BGFExpression sep::BGFExpression)) | (sepliststar::(expr::BGFExpression sep::BGFExpression)) ;
BGFGrammar ::= grammar::(roots::(string()*) prods::BGFProdList) ;
BGFProdList ::= BGFProduction* ;
BGFExprList ::= BGFExpression* ;
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::bgf-5.3-adt.bgf--------------------
BGFProduction ::= production::(label::string() lhs::string() rhs::BGFExpression) ;
BGFProdSet ::= BGFProduction* ;
BGFExpression ::= (epsilon::ε) | (empty::ε) | (val::(v::BGFValue)) | (anything::ε) | (terminal::(t::string())) | (nonterminal::(t::string())) | (selectable::(selector::string() expr::BGFExpression)) | (sequence::(exprs::BGFExprList)) | (choice::(exprs::BGFExprList)) | (allof::(exprs::BGFExprList)) | (marked::(expr::BGFExpression)) | (optional::(expr::BGFExpression)) | (not::(expr::BGFExpression)) | (plus::(expr::BGFExpression)) | (star::(expr::BGFExpression)) | (seplistplus::(expr::BGFExpression sep::BGFExpression)) | (sepliststar::(expr::BGFExpression sep::BGFExpression)) ;
BGFGrammar ::= grammar::(roots::(string()*) prods::BGFProdList) ;
BGFProdList ::= BGFProduction* ;
BGFExprList ::= BGFExpression* ;
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::bgf-v4.2-adt.bgf--------------------
BGFProduction ::= production::(label::string() lhs::string() rhs::BGFExpression) ;
BGFExpression ::= (epsilon::ε) | (empty::ε) | (val::(v::BGFValue)) | (anything::ε) | (terminal::(t::string())) | (nonterminal::(t::string())) | (selectable::(selector::string() expr::BGFExpression)) | (sequence::(exprs::(BGFExpression*))) | (choice::(exprs::(BGFExpression*))) | (marked::(expr::BGFExpression)) | (optional::(expr::BGFExpression)) | (plus::(expr::BGFExpression)) | (star::(expr::BGFExpression)) | (starsepplus::(expr::BGFExpression sep::BGFExpression)) | (starsepstar::(expr::BGFExpression sep::BGFExpression)) ;
BGFGrammar ::= grammar::(roots::(string()*) prods::(BGFProduction*)) ;
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::bgf-v5.0-adt.bgf--------------------
BGFProduction ::= production::(label::string() lhs::string() rhs::BGFExpression) ;
BGFExpression ::= (epsilon::ε) | (empty::ε) | (val::(v::BGFValue)) | (anything::ε) | (terminal::(t::string())) | (nonterminal::(t::string())) | (selectable::(selector::string() expr::BGFExpression)) | (sequence::(exprs::BGFExprList)) | (choice::(exprs::BGFExprList)) | (all::(exprs::BGFExprList)) | (marked::(expr::BGFExpression)) | (optional::(expr::BGFExpression)) | (not::(expr::BGFExpression)) | (plus::(expr::BGFExpression)) | (star::(expr::BGFExpression)) | (seplistplus::(expr::BGFExpression sep::BGFExpression)) | (sepliststar::(expr::BGFExpression sep::BGFExpression)) ;
BGFGrammar ::= grammar::(roots::(string()*) prods::BGFProdList) ;
BGFProdList ::= BGFProduction* ;
BGFExprList ::= BGFExpression* ;
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::bgf-v5.1-adt.bgf--------------------
BGFProduction ::= production::(label::string() lhs::string() rhs::BGFExpression) ;
BGFExpression ::= (epsilon::ε) | (empty::ε) | (val::(v::BGFValue)) | (anything::ε) | (terminal::(t::string())) | (nonterminal::(t::string())) | (selectable::(selector::string() expr::BGFExpression)) | (sequence::(exprs::BGFExprList)) | (choice::(exprs::BGFExprList)) | (allof::(exprs::BGFExprList)) | (marked::(expr::BGFExpression)) | (optional::(expr::BGFExpression)) | (not::(expr::BGFExpression)) | (plus::(expr::BGFExpression)) | (star::(expr::BGFExpression)) | (seplistplus::(expr::BGFExpression sep::BGFExpression)) | (sepliststar::(expr::BGFExpression sep::BGFExpression)) ;
BGFGrammar ::= grammar::(roots::(string()*) prods::BGFProdList) ;
BGFProdList ::= BGFProduction* ;
BGFExprList ::= BGFExpression* ;
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::cbgf-adt.bgf--------------------
CBGFSequence ::= CBGFCommand* ;
CBGFCommand ::= (abridge_detour::(p::BGFProduction)) | (abstractize_concretize::(p::BGFProduction)) | (addH_removeH::(p::BGFProduction)) | (addV_removeV::(p::BGFProduction)) | (anonymize_deanonymize::(p::BGFProduction)) | (appear_disapper::(p::BGFProduction)) | (chain_unchain::(p::BGFProduction)) | (clone_equate::(x::string() y::string() w::XBGFScope)) | (concatT_splitT::(y::string() xs::(string()*) w::XBGFScope)) | (concretize_abstractize::(p::BGFProduction)) | (deanonymize_anonymize::(p::BGFProduction)) | (define_undefine::(ps::(BGFProduction*))) | (designate_unlabel::(p::BGFProduction)) | (detour_abridge::(p::BGFProduction)) | (deyaccify_yaccify::(ps::(BGFProduction*))) | (disappear_appear::(p::BGFProduction)) | (downgrade_upgrade::(p1::BGFProduction p2::BGFProduction)) | (eliminate_introduce::(ps::(BGFProduction*))) | (equate_clone::(x::string() y::string() w::XBGFScope)) | (extract_inline::(p::BGFProduction w::XBGFScope)) | (factor_factor::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (fold_unfold::(x::string() w::XBGFScope)) | (horizontal_vertical::(w::XBGFScope)) | (inject_project::(p::BGFProduction)) | (inline_extract::(p::BGFProduction w::XBGFScope)) | (introduce_eliminate::(ps::(BGFProduction*))) | (iterate_assoc::(p::BGFProduction)) | (assoc_iterate::(p::BGFProduction)) | (massage_massage::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (narrow_widen::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (permute_permute::(p1::BGFProduction p2::BGFProduction)) | (project_inject::(p::BGFProduction)) | (redefine_redefine::(ps1::(BGFProduction*) ps2::(BGFProduction*))) | (removeH_addH::(p::BGFProduction)) | (removeV_addV::(p::BGFProduction)) | (renameL_renameL::(x::string() y::string())) | (renameN_renameN::(x::string() y::string())) | (renameS_renameS::(x::string() y::string() w::XBGFScope)) | (renameT_renameT::(x::string() y::string())) | (replace_replace::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (reroot_reroot::(xs1::(string()*) xs2::(string()*))) | (splitN_unite::(x::string() ps::(BGFProduction*) w::XBGFScope)) | (splitT_concatT::(x::string() ys::(string()*) w::XBGFScope)) | (unchain_chain::(p::BGFProduction)) | (undefine_define::(ps::(BGFProduction*))) | (unfold_fold::(x::string() w::XBGFScope)) | (unite_splitN::(x::string() ps::(BGFProduction*) w::XBGFScope)) | (unlabel_designate::(p::BGFProduction)) | (upgrade_downgrade::(p1::BGFProduction p2::BGFProduction)) | (vertical_horizontal::(w::XBGFScope)) | (widen_narrow::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (yaccify_deyaccify::(ps::(BGFProduction*))) ;
--------------------slps::ldf-v10.0-xsd.bgf--------------------
SimpleText ::= SimpleTextElement+ ;
SimpleTextElement ::= (empty::ε) | (text::mixedType) | (table::SimpleTable) | (list::SimpleList) | (formula::string()) | (sample::string()) | production ;
SimpleTable ::= (header::TableRow)* (row::TableRow)+ ;
TableRow ::= (cell::SimpleText)+ ;
StructuredSectionElement ::= (placeholder::generated) | normative | informative | production | (relationship::ListOfInternalLinks) | (subtopic::StructuredSection) ;
ListOfInternalLinks ::= (link::(text::string() (linktext::string())? reference::string()))+ ;
StructuredSection ::= title::string() (author::string())* StructuredSectionElement+ (id::string())? ;
SimpleSection ::= (title::string())? (author::string())* content::SimpleText (id::string())? ;
ListOfTerms ::= (title::string())? (author::string())* (term::(name::string() definition::SimpleText))+ (id::string())? ;
LexicalSection ::= (lineContinuations::SimpleSection) | (whitespace::SimpleSection) | (tokens::SimpleSection) | (preprocessor::SimpleSection) | (literals::SimpleSection) | (lexical::SimpleSection) ;
SimpleList ::= (item::mixedType)+ ;
--------------------slps::ldf-v11.0-xsd.bgf--------------------
SimpleText ::= SimpleTextElement+ ;
SimpleTextElement ::= (empty::ε) | (text::mixedType) | (figure::SimpleFigure) | (table::SimpleTable) | (list::SimpleList) | (formula::string()) | (sample::string()) | production ;
SimpleTable ::= (header::TableRow)* (row::TableRow)+ ;
TableRow ::= (cell::SimpleText)+ ;
StructuredSectionElement ::= (placeholder::generated) | normative | informative | production | (relationship::ListOfInternalLinks) | (subtopic::StructuredSection) ;
ListOfInternalLinks ::= (link::(text::string() (linktext::string())? reference::string()))+ ;
SimpleFigure ::= caption::string() type::string() file::string() (id::string())? ;
StructuredSection ::= title::string() (author::string())* StructuredSectionElement+ (id::string())? ;
SimpleSection ::= (title::string())? (author::string())* content::SimpleText (id::string())? ;
ListOfTerms ::= (title::string())? (author::string())* (term::(name::string() definition::SimpleText))+ (id::string())? ;
LexicalSection ::= (lineContinuations::SimpleSection) | (whitespace::SimpleSection) | (tokens::SimpleSection) | (preprocessor::SimpleSection) | (literals::SimpleSection) | (lexical::SimpleSection) ;
SimpleList ::= (item::mixedType)+ ;
--------------------slps::ldf-v3.0-xsd.bgf--------------------
SimpleText ::= ((p::string()) | (list::SimpleList))+ ;
ListOfInternalLinks ::= (link::(text::string() reference::string()))+ ;
SimpleSection ::= (id::string())? (title::string())? ((author::string())+)? content::SimpleText ;
ListOfTerms ::= (term::(name::string() definition::SimpleText))+ ;
LexicalSection ::= id::string() type::lexical title::string() ((author::string())+)? ((placeholder::generated) | normative | informative | production | (relationship::ListOfInternalLinks) | (subtopic::TopSection))+ ;
TopSection ::= id::string() title::string() ((author::string())+)? ((placeholder::generated) | normative | informative | production | (relationship::ListOfInternalLinks) | (subtopic::TopSection))+ ;
SimpleList ::= (item::string())+ ;
--------------------slps::ldf-v4.0-xsd.bgf--------------------
SimpleText ::= ((p::string()) | (list::SimpleList))+ ;
ListOfInternalLinks ::= (link::(text::string() reference::string()))+ ;
StructuredSection ::= id::string() title::string() ((author::string())+)? ((placeholder::generated) | normative | informative | lexical | production | (relationship::ListOfInternalLinks) | (subtopic::StructuredSection))+ ;
SimpleSection ::= (id::string())? (title::string())? ((author::string())+)? content::SimpleText ;
ListOfTerms ::= (term::(name::string() definition::SimpleText))+ ;
SimpleList ::= (item::string())+ ;
--------------------slps::ldf-v5.0-xsd.bgf--------------------
SimpleText ::= ((p::string()) | (list::SimpleList))+ ;
ListOfInternalLinks ::= (link::(text::string() reference::string()))+ ;
StructuredSection ::= id::string() title::string() ((author::string())+)? ((placeholder::generated) | normative | informative | lexicals | production | (relationship::ListOfInternalLinks) | (subtopic::StructuredSection))+ ;
SimpleSection ::= (id::string())? (title::string())? ((author::string())+)? content::SimpleText ;
ListOfTerms ::= (id::string())? (title::string())? ((author::string())+)? (term::(name::string() definition::SimpleText))+ ;
SimpleList ::= (item::string())+ ;
--------------------slps::ldf-v6.0-xsd.bgf--------------------
SimpleText ::= ((p::string()) | (list::SimpleList))+ ;
ListOfInternalLinks ::= (link::(text::string() (linktext::string())? reference::string()))+ ;
StructuredSection ::= (id::string())? title::string() ((author::string())+)? ((placeholder::generated) | normative | informative | production | (relationship::ListOfInternalLinks) | (subtopic::StructuredSection))+ ;
SimpleSection ::= (id::string())? (title::string())? ((author::string())+)? content::SimpleText ;
ListOfTerms ::= (id::string())? (title::string())? ((author::string())+)? (term::(name::string() definition::SimpleText))+ ;
SimpleList ::= (item::string())+ ;
--------------------slps::ldf-v7.0-xsd.bgf--------------------
SimpleText ::= insideSimpleText+ ;
ListOfInternalLinks ::= (link::(text::string() (linktext::string())? reference::string()))+ ;
StructuredSection ::= (id::string())? title::string() ((author::string())+)? ((placeholder::generated) | normative | informative | production | (relationship::ListOfInternalLinks) | (subtopic::StructuredSection))+ ;
SimpleSection ::= (id::string())? (title::string())? ((author::string())+)? content::SimpleText ;
ListOfTerms ::= (id::string())? (title::string())? ((author::string())+)? (term::(name::string() definition::SimpleText))+ ;
SimpleList ::= (item::string())+ ;
--------------------slps::ldf-v7.1-xsd.bgf--------------------
SimpleText ::= insideSimpleText+ ;
ListOfInternalLinks ::= (link::(text::string() (linktext::string())? reference::string()))+ ;
StructuredSection ::= (id::string())? title::string() ((author::string())+)? ((placeholder::generated) | normative | informative | production | (relationship::ListOfInternalLinks) | (subtopic::StructuredSection))+ ;
SimpleSection ::= (id::string())? (title::string())? ((author::string())+)? content::SimpleText ;
ListOfTerms ::= (id::string())? (title::string())? ((author::string())+)? (term::(name::string() definition::SimpleText))+ ;
SimpleList ::= (item::string())+ ;
--------------------slps::ldf-v8.0-xsd.bgf--------------------
SimpleText ::= insideSimpleText+ ;
ListOfInternalLinks ::= (link::(text::string() (linktext::string())? reference::string()))+ ;
StructuredSection ::= (id::string())? title::string() ((author::string())+)? ((placeholder::generated) | normative | informative | production | (relationship::ListOfInternalLinks) | (subtopic::StructuredSection))+ ;
SimpleSection ::= (id::string())? (title::string())? ((author::string())+)? content::SimpleText ;
ListOfTerms ::= (id::string())? (title::string())? ((author::string())+)? (term::(name::string() definition::SimpleText))+ ;
SimpleList ::= (item::string())+ ;
--------------------slps::ldf-v8.1-xsd.bgf--------------------
SimpleText ::= insideSimpleText+ ;
ListOfInternalLinks ::= (link::(text::string() (linktext::string())? reference::string()))+ ;
StructuredSection ::= (id::string())? title::string() ((author::string())+)? ((placeholder::generated) | normative | informative | production | (relationship::ListOfInternalLinks) | (subtopic::StructuredSection))+ ;
SimpleSection ::= (id::string())? (title::string())? ((author::string())+)? content::SimpleText ;
ListOfTerms ::= (id::string())? (title::string())? ((author::string())+)? (term::(name::string() definition::SimpleText))+ ;
SimpleList ::= (item::string())+ ;
--------------------slps::ldf-v9.0-xsd.bgf--------------------
SimpleText ::= insideSimpleText+ ;
SimpleTable ::= (header::TableRow)* (row::TableRow)+ ;
TableRow ::= (cell::SimpleText)+ ;
ListOfInternalLinks ::= (link::(text::string() (linktext::string())? reference::string()))+ ;
StructuredSection ::= (id::string())? title::string() ((author::string())+)? ((placeholder::generated) | normative | informative | production | (relationship::ListOfInternalLinks) | (subtopic::StructuredSection))+ ;
SimpleSection ::= (id::string())? (title::string())? ((author::string())+)? content::SimpleText ;
ListOfTerms ::= (id::string())? (title::string())? ((author::string())+)? (term::(name::string() definition::SimpleText))+ ;
SimpleList ::= (item::string())+ ;
--------------------slps::ldf-v9.1-xsd.bgf--------------------
SimpleText ::= insideSimpleText+ ;
SimpleTable ::= (header::TableRow)* (row::TableRow)+ ;
TableRow ::= (cell::SimpleText)+ ;
ListOfInternalLinks ::= (link::(text::string() (linktext::string())? reference::string()))+ ;
StructuredSection ::= (id::string())? title::string() ((author::string())+)? ((placeholder::generated) | normative | informative | production | (relationship::ListOfInternalLinks) | (subtopic::StructuredSection))+ ;
SimpleSection ::= (id::string())? (title::string())? ((author::string())+)? content::SimpleText ;
ListOfTerms ::= (id::string())? (title::string())? ((author::string())+)? (term::(name::string() definition::SimpleText))+ ;
SimpleList ::= (item::mixedType)+ ;
--------------------slps::slps-cbgf-adt.bgf--------------------
CBGFSequence ::= CBGFCommand* ;
CBGFCommand ::= (abridge_detour::(p::BGFProduction)) | (abstractize_concretize::(p::BGFProduction)) | (addH_removeH::(p::BGFProduction)) | (addV_removeV::(p::BGFProduction)) | (anonymize_deanonymize::(p::BGFProduction)) | (appear_disapper::(p::BGFProduction)) | (chain_unchain::(p::BGFProduction)) | (clone_equate::(x::string() y::string() w::XBGFScope)) | (concatT_splitT::(y::string() xs::(string()*) w::XBGFScope)) | (concretize_abstractize::(p::BGFProduction)) | (deanonymize_anonymize::(p::BGFProduction)) | (define_undefine::(ps::(BGFProduction*))) | (designate_unlabel::(p::BGFProduction)) | (detour_abridge::(p::BGFProduction)) | (deyaccify_yaccify::(ps::(BGFProduction*))) | (disappear_appear::(p::BGFProduction)) | (downgrade_upgrade::(p1::BGFProduction p2::BGFProduction)) | (eliminate_introduce::(ps::(BGFProduction*))) | (equate_clone::(x::string() y::string() w::XBGFScope)) | (extract_inline::(p::BGFProduction w::XBGFScope)) | (factor_factor::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (fold_unfold::(x::string() w::XBGFScope)) | (horizontal_vertical::(w::XBGFScope)) | (inject_project::(p::BGFProduction)) | (inline_extract::(p::BGFProduction w::XBGFScope)) | (introduce_eliminate::(ps::(BGFProduction*))) | (iterate_assoc::(p::BGFProduction)) | (assoc_iterate::(p::BGFProduction)) | (massage_massage::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (narrow_widen::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (permute_permute::(p1::BGFProduction p2::BGFProduction)) | (project_inject::(p::BGFProduction)) | (redefine_redefine::(ps1::(BGFProduction*) ps2::(BGFProduction*))) | (removeH_addH::(p::BGFProduction)) | (removeV_addV::(p::BGFProduction)) | (renameL_renameL::(x::string() y::string())) | (renameN_renameN::(x::string() y::string())) | (renameS_renameS::(x::string() y::string() w::XBGFScope)) | (renameT_renameT::(x::string() y::string())) | (replace_replace::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (reroot_reroot::(xs1::(string()*) xs2::(string()*))) | (splitN_unite::(x::string() ps::(BGFProduction*) w::XBGFScope)) | (splitT_concatT::(x::string() ys::(string()*) w::XBGFScope)) | (unchain_chain::(p::BGFProduction)) | (undefine_define::(ps::(BGFProduction*))) | (unfold_fold::(x::string() w::XBGFScope)) | (unite_splitN::(x::string() ps::(BGFProduction*) w::XBGFScope)) | (unlabel_designate::(p::BGFProduction)) | (upgrade_downgrade::(p1::BGFProduction p2::BGFProduction)) | (vertical_horizontal::(w::XBGFScope)) | (widen_narrow::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (yaccify_deyaccify::(ps::(BGFProduction*))) ;
--------------------slps::slps-xbgf-adt.bgf--------------------
XBGFScope ::= (globally::ε) | (nowhere::ε) | (inlabel::(l::string())) | (notinlabel::(l::string())) | (innt::(x::string())) | (notinnt::(x::string())) | (comboscope::(w1::XBGFScope w2::XBGFScope)) ;
XBGFSequence ::= XBGFCommand* ;
XBGFCommand ::= (abridge::(p::BGFProduction)) | (abstractize::(p::BGFProduction)) | (addH::(p::BGFProduction)) | (addV::(p::BGFProduction)) | (addC::(p::BGFProduction)) | (anonymize::(p::BGFProduction)) | (appear::(p::BGFProduction)) | (bypass::ε) | (chain::(p::BGFProduction)) | (clone::(x::string() y::string() w::XBGFScope)) | (concatT::(xs::(string()*) y::string() w::XBGFScope)) | (concretize::(p::BGFProduction)) | (deanonymize::(p::BGFProduction)) | (define::(ps::(BGFProduction*))) | (designate::(p::BGFProduction)) | (detour::(p::BGFProduction)) | (deyaccify::(x::string())) | (disappear::(p::BGFProduction)) | (distribute::(w::XBGFScope)) | (downgrade::(p1::BGFProduction p2::BGFProduction)) | (eliminate::(x::string())) | (equate::(x::string() y::string())) | (extract::(p::BGFProduction w::XBGFScope)) | (factor::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (fold::(x::string() w::XBGFScope)) | (horizontal::(w::XBGFScope)) | (importG::(ps::(BGFProduction*))) | (inject::(p::BGFProduction)) | (inline::(x::string())) | (introduce::(ps::(BGFProduction*))) | (iterate::(p::BGFProduction)) | (lassoc::(p::BGFProduction)) | (massage::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (narrow::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (permute::(p::BGFProduction)) | (project::(p::BGFProduction)) | (rassoc::(p::BGFProduction)) | (redefine::(ps::(BGFProduction*))) | (removeH::(p::BGFProduction)) | (removeV::(p::BGFProduction)) | (renameL::(x::string() y::string())) | (renameN::(x::string() y::string())) | (renameS::(x::string() y::string() w::XBGFScope)) | (renameT::(x::string() y::string())) | (replace::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (reroot::(xs::(string()*))) | (splitN::(x::string() ps::(BGFProduction*) w::XBGFScope)) | (splitT::(x::string() ys::(string()*) w::XBGFScope)) | (unchain::(p::BGFProduction)) | (undefine::(xs::(string()*))) | (unfold::(x::string() w::XBGFScope)) | (unite::(x::string() y::string())) | (unlabel::(x::string())) | (upgrade::(p1::BGFProduction p2::BGFProduction)) | (vertical::(w::XBGFScope)) | (widen::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (yaccify::(ps::(BGFProduction*))) | (atomic::(steps::(XBGFCommand*))) | (strip::(a::string())) ;
--------------------slps::slps-xoutcome.bgf--------------------
XBGFOutcome ::= (ok::ε) | (problem::(msg::string())) | (problemXBGF::(msg::string() xbgf::XBGFCommand)) | (problemProd::(msg::string() p::BGFProduction)) | (problemProd2::(msg::string() p1::BGFProduction p2::BGFProduction)) | (problemPinProds::(msg::string() p::BGFProduction ps::(BGFProduction*))) | (problemProds::(msg::string() ps::(BGFProduction*))) | (problemProds2::(msg::string() ps1::(BGFProduction*) ps2::(BGFProduction*))) | (problemExpr::(msg::string() e::BGFExpression)) | (problemExpr2::(msg::string() e1::BGFExpression e2::BGFExpression)) | (problemStr::(msg::string() x::string())) | (problemStr2::(msg::string() x::string() y::string())) | (problemStrs::(msg::string() xs::(string()*))) | (problemScope::(msg::string() w::XBGFScope)) ;
XBGFResult ::= r::XBGFOutcome g::BGFGrammar ;
--------------------slps::xbgf-adt.bgf--------------------
XBGFScope ::= (globally::ε) | (nowhere::ε) | (inlabel::(l::string())) | (notinlabel::(l::string())) | (innt::(x::string())) | (notinnt::(x::string())) | (comboscope::(w1::XBGFScope w2::XBGFScope)) ;
XBGFSequence ::= XBGFCommand* ;
XBGFCommand ::= (abridge::(p::BGFProduction)) | (abstractize::(p::BGFProduction)) | (addH::(p::BGFProduction)) | (addV::(p::BGFProduction)) | (addC::(p::BGFProduction)) | (anonymize::(p::BGFProduction)) | (appear::(p::BGFProduction)) | (bypass::ε) | (chain::(p::BGFProduction)) | (clone::(x::string() y::string() w::XBGFScope)) | (concatT::(xs::(string()*) y::string() w::XBGFScope)) | (concretize::(p::BGFProduction)) | (deanonymize::(p::BGFProduction)) | (define::(ps::(BGFProduction*))) | (designate::(p::BGFProduction)) | (detour::(p::BGFProduction)) | (deyaccify::(x::string())) | (disappear::(p::BGFProduction)) | (distribute::(w::XBGFScope)) | (downgrade::(p1::BGFProduction p2::BGFProduction)) | (eliminate::(x::string())) | (equate::(x::string() y::string())) | (extract::(p::BGFProduction w::XBGFScope)) | (factor::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (fold::(x::string() w::XBGFScope)) | (horizontal::(w::XBGFScope)) | (importG::(ps::(BGFProduction*))) | (inject::(p::BGFProduction)) | (inline::(x::string())) | (introduce::(ps::(BGFProduction*))) | (iterate::(p::BGFProduction)) | (lassoc::(p::BGFProduction)) | (massage::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (narrow::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (permute::(p::BGFProduction)) | (project::(p::BGFProduction)) | (rassoc::(p::BGFProduction)) | (redefine::(ps::(BGFProduction*))) | (removeH::(p::BGFProduction)) | (removeV::(p::BGFProduction)) | (renameL::(x::string() y::string())) | (renameN::(x::string() y::string())) | (renameS::(x::string() y::string() w::XBGFScope)) | (renameT::(x::string() y::string())) | (replace::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (reroot::(xs::(string()*))) | (splitN::(x::string() ps::(BGFProduction*) w::XBGFScope)) | (splitT::(x::string() ys::(string()*) w::XBGFScope)) | (unchain::(p::BGFProduction)) | (undefine::(xs::(string()*))) | (unfold::(x::string() w::XBGFScope)) | (unite::(x::string() y::string())) | (unlabel::(x::string())) | (upgrade::(p1::BGFProduction p2::BGFProduction)) | (vertical::(w::XBGFScope)) | (widen::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (yaccify::(ps::(BGFProduction*))) | (atomic::(steps::(XBGFCommand*))) | (strip::(a::string())) ;
--------------------slps::bgf-v4.1-adt.bgf--------------------
BGFProduction ::= production::(label::string() lhs::string() rhs::BGFExpression) ;
BGFExpression ::= (epsilon::ε) | (empty::ε) | (val::(v::BGFValue)) | (anything::ε) | (terminal::(t::string())) | (nonterminal::(t::string())) | (selectable::(selector::string() expr::BGFExpression)) | (sequence::(exprs::(BGFExpression*))) | (choice::(exprs::(BGFExpression*))) | (marked::(expr::BGFExpression)) | (optional::(expr::BGFExpression)) | (plus::(expr::BGFExpression)) | (star::(expr::BGFExpression)) | (starsepplus::(expr::BGFExpression sep::BGFExpression)) | (starsepstar::(expr::BGFExpression sep::BGFExpression)) ;
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::bgf-v4.3-adt.bgf--------------------
BGFProduction ::= production::(label::string() lhs::string() rhs::BGFExpression) ;
BGFExpression ::= (epsilon::ε) | (empty::ε) | (val::(v::BGFValue)) | (anything::ε) | (terminal::(t::string())) | (nonterminal::(t::string())) | (selectable::(selector::string() expr::BGFExpression)) | (sequence::(exprs::BGFExprList)) | (choice::(exprs::BGFExprList)) | (marked::(expr::BGFExpression)) | (optional::(expr::BGFExpression)) | (plus::(expr::BGFExpression)) | (star::(expr::BGFExpression)) | (seplistplus::(expr::BGFExpression sep::BGFExpression)) | (sepliststar::(expr::BGFExpression sep::BGFExpression)) ;
BGFGrammar ::= grammar::(roots::(string()*) prods::BGFProdList) ;
BGFProdList ::= BGFProduction* ;
BGFExprList ::= BGFExpression* ;
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::bgf-v5.3-adt.bgf--------------------
BGFProduction ::= production::(label::string() lhs::string() rhs::BGFExpression) ;
BGFProdSet ::= BGFProduction* ;
BGFExpression ::= (epsilon::ε) | (empty::ε) | (val::(v::BGFValue)) | (anything::ε) | (terminal::(t::string())) | (nonterminal::(t::string())) | (selectable::(selector::string() expr::BGFExpression)) | (sequence::(exprs::BGFExprList)) | (choice::(exprs::BGFExprList)) | (allof::(exprs::BGFExprList)) | (marked::(expr::BGFExpression)) | (optional::(expr::BGFExpression)) | (not::(expr::BGFExpression)) | (plus::(expr::BGFExpression)) | (star::(expr::BGFExpression)) | (seplistplus::(expr::BGFExpression sep::BGFExpression)) | (sepliststar::(expr::BGFExpression sep::BGFExpression)) ;
BGFGrammar ::= grammar::(roots::(string()*) prods::BGFProdList) ;
BGFProdList ::= BGFProduction* ;
BGFExprList ::= BGFExpression* ;
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::bgf-v5.4-adt.bgf--------------------
BGFExprSet ::= BGFExpression* ;
BGFProduction ::= production::(label::string() lhs::string() rhs::BGFExpression) ;
BGFProdSet ::= BGFProduction* ;
BGFExpression ::= (epsilon::ε) | (empty::ε) | (val::(v::BGFValue)) | (anything::ε) | (terminal::(t::string())) | (nonterminal::(t::string())) | (selectable::(selector::string() expr::BGFExpression)) | (sequence::(exprs::BGFExprList)) | (choice::(exprs::BGFExprList)) | (allof::(exprs::BGFExprList)) | (marked::(expr::BGFExpression)) | (optional::(expr::BGFExpression)) | (not::(expr::BGFExpression)) | (plus::(expr::BGFExpression)) | (star::(expr::BGFExpression)) | (seplistplus::(expr::BGFExpression sep::BGFExpression)) | (sepliststar::(expr::BGFExpression sep::BGFExpression)) ;
BGFGrammar ::= grammar::(roots::(string()*) prods::BGFProdList) ;
BGFProdList ::= BGFProduction* ;
BGFExprList ::= BGFExpression* ;
SGrammar ::= roots::(string()*) prods::((string() BGFProdSet)*) ;
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::xbgf-xoutcome.bgf--------------------
XBGFOutcome ::= (ok::ε) | (problem::(msg::string())) | (problemXBGF::(msg::string() xbgf::XBGFCommand)) | (problemProd::(msg::string() p::BGFProduction)) | (problemProd2::(msg::string() p1::BGFProduction p2::BGFProduction)) | (problemPinProds::(msg::string() p::BGFProduction ps::(BGFProduction*))) | (problemProds::(msg::string() ps::(BGFProduction*))) | (problemProds2::(msg::string() ps1::(BGFProduction*) ps2::(BGFProduction*))) | (problemExpr::(msg::string() e::BGFExpression)) | (problemExpr2::(msg::string() e1::BGFExpression e2::BGFExpression)) | (problemStr::(msg::string() x::string())) | (problemStr2::(msg::string() x::string() y::string())) | (problemStrs::(msg::string() xs::(string()*))) | (problemScope::(msg::string() w::XBGFScope)) ;
XBGFResult ::= r::XBGFOutcome g::BGFGrammar ;
--------------------develop::ant.bgf--------------------
DocumentationTask ::= Javadoc ;
InExcludes ::= Includes ;
 InExcludes ::= Excludes ;
 InExcludes ::= IncludesFile ;
 InExcludes ::= ExcludesFile ;
PropertyValue ::= value::String ;
Jar ::= jarfile::String basedir::String compress::String encoding::String manifest::String ;
Excludes ::= name::String ifCondition::String unless::String ;
Project ::= name::String basedir::String description::String default::Target path::Path (properties::Property)+ (taskdef::TaskDef)+ (targets::Target)+ ;
CompileTask ::= Javac ;
PropertyEnv ::= environment::String ;
PathElement ::= path::String location::String ;
FiltersFile ::= file::String ;
Javadoc ::= sourcepath::String destdir::String packagenames::String defaultexcludes::String author::String version::String use::String windowtitle::String ;
Property ::= PropertyName ;
 Property ::= PropertyFile ;
 Property ::= PropertyEnv ;
MiscellaneousTask ::= Echo ;
 MiscellaneousTask ::= Tstamp ;
String ::= string() ;
Target ::= name::String description::String unless::String ifCondition::String (depends::Target)+ (tasks::Task)+ ;
Exec ::= executable::String dir::String ;
Pattern ::= Basic ;
 Pattern ::= Set ;
Tstamp ::= (format::FormatTstamp)+ ;
PreDefinedTask ::= ExecutionTask ;
 PreDefinedTask ::= MiscellaneousTask ;
 PreDefinedTask ::= CompileTask ;
 PreDefinedTask ::= DocumentationTask ;
 PreDefinedTask ::= ArchiveTask ;
 PreDefinedTask ::= FileTask ;
Includes ::= name::String ifCondition::String unless::String ;
FilterSet ::= starttoken::String endtoken::String (filter::Filter)+ (filtersfile::FiltersFile)+ ;
FileSet ::= dir::String (patternset::PatternSet)+ (include::Includes)+ (exclude::Excludes)+ ;
Task ::= NewTask ;
 Task ::= PreDefinedTask ;
NewTask ::= taskName::TaskDef (attributes::Attribut)+ ;
Javac ::= srcdir::String destdir::String debug::String fork::String optimize::String deprecation::String (inExcludes::InExcludes)+ classPath::ClassPath ;
Mapper ::= type::String classname::String classpath::String classpathref::String from::String to::String ;
TaskDef ::= name::String classname::String ;
PropertyName ::= PropertyValue ;
 PropertyName ::= PropertyLocation ;
ExecutionTask ::= Exec ;
 ExecutionTask ::= Java ;
ClassPath ::= refid::String (pathElement::PathElement)+ (fileset::FileSet)+ ;
FileList ::= dir::String files::String ;
Filter ::= token::String value::String ;
Copy ::= file::String presservelastmodified::String tofile::String todir::String overwrite::String filtering::String flatten::String includeEmptyDirs::String fileset::FileSet filterset::FilterSet mapper::Mapper ;
ExcludesFile ::= name::String ifCondition::String unless::String ;
PatternSet ::= (inexcludes::InExcludes)+ ;
PropertyFile ::= file::String ;
Mkdir ::= dir::String ;
Basic ::= Mapper ;
 Basic ::= InExcludes ;
 Basic ::= FileList ;
 Basic ::= Filter ;
 Basic ::= FiltersFile ;
 Basic ::= PathElement ;
Delete ::= file::String dir::String verbose::String quiet::String failonerror::String includeEmptyDirs::String includes::String includesfile::String excludes::String excludesfile::String defaultexcludes::String ;
PropertyLocation ::= location::String ;
Attribut ::= name::String value::String ;
ArchiveTask ::= Jar ;
IncludesFile ::= name::String ifCondition::String unless::String ;
FormatTstamp ::= property::String pattern::String offset::String unit::String locale::String ;
Echo ::= message::String file::String append::String ;
Path ::= id::String refid::String path::Path (pathElement::PathElement)+ (fileset::FileSet)+ ;
Java ::= classname::String jar::String fork::String classPath::ClassPath ;
Set ::= PatternSet ;
 Set ::= FileSet ;
 Set ::= FilterSet ;
 Set ::= Path ;
 Set ::= ClassPath ;
FileTask ::= Mkdir ;
 FileTask ::= Copy ;
 FileTask ::= Delete ;
--------------------develop::java-project.bgf--------------------
JavaElement ::= Type ;
 JavaElement ::= Field ;
 JavaElement ::= Method ;
Field ::= ε ;
Type ::= (nestedType::Type)+ (ownedSuperType::Type)+ elementName::String member_kind::MEMBER_KIND (methods::Method)+ (fields::Field)+ ;
CompilationUnit ::= (importDeclaration::ImportDeclaration)+ (ownedType::Type)+ declaration::PackageDeclaration ;
JavaProject ::= (ownedPackageFragment::PackageFragment)+ ;
PackageFragment ::= (ownedCompilationUnit::CompilationUnit)+ ;
ImportDeclaration ::= name::String ;
PackageDeclaration ::= name::String ;
NamedElement ::= JavaProject ;
 NamedElement ::= PackageFragment ;
 NamedElement ::= CompilationUnit ;
 NamedElement ::= ImportDeclaration ;
 NamedElement ::= JavaElement ;
 NamedElement ::= PackageDeclaration ;
String ::= string() ;
Method ::= returnType::String (parametersName::String)+ (parametersType::String)+ ;
--------------------develop::make.bgf--------------------
Comment ::= text::String ;
Macro ::= value::String ;
Rule ::= (dependencies::Dependency)+ (shellLines::ShellLine)+ ;
Element ::= Rule ;
 Element ::= Macro ;
Dependency ::= RuleDep ;
 Dependency ::= FileDep ;
Makefile ::= name::String comment::Comment (elements::Element)+ ;
Boolean ::= "true" | "false" ;
ShellLine ::= command::String display::Boolean ruleShellLine::Rule ;
FileDep ::= name::String ;
RuleDep ::= ruledep::Rule ;
String ::= string() ;
--------------------develop::bugzilla.bgf--------------------
PriorityType ::= (pt_null::ε) | (pt_P1::ε) | (pt_P2::ε) | (pt_P3::ε) | (pt_P4::ε) | (pt_P5::ε) ;
Integer ::= integer() ;
StringElt ::= Keywords ;
 StringElt ::= Dependson ;
 StringElt ::= Blocks ;
 StringElt ::= Cc ;
SeverityType ::= (st_null::ε) | (st_blocker::ε) | (st_critical::ε) | (st_major::ε) | (st_normal::ε) | (st_minor::ε) | (st_trivial::ε) | (st_enhancement::ε) ;
Bug ::= bug_bugzillaRoot::BugzillaRoot error::ErrorType bug_id::String exporter::String urlbase::String bug_status::StatusType resolution::ResolutionType product::String priority::PriorityType version::String rep_platform::ReportedPlatformType assigned_to::String delta_ts::String component::String reporter::String target_milestone::String bug_severity::SeverityType creation_ts::String qa_contact::String status_whiteboard::String op_sys::OperatingSystemType bug_file_loc::String short_desc::String (keywords::Keywords)+ (dependson::Dependson)+ (blocks::Blocks)+ (cc::Cc)+ (long_desc::LongDesc)+ (attachment::Attachment)+ ;
String ::= string() ;
LongDesc ::= isPrivate::Boolean who::String bug_when::String thetext::String ;
StatusType ::= (st_null::ε) | (st_UNCONFIRMED::ε) | (st_NEW::ε) | (st_ASSIGNED::ε) | (st_REOPENED::ε) | (st_RESOLVED::ε) | (st_VERIFIED::ε) | (st_CLOSED::ε) ;
Keywords ::= value::String ;
OperatingSystemType ::= (ost_null::ε) | (ost_all::ε) | (ost_Windows 3.1::ε) | (ost_Windows 95::ε) | (ost_Windows 98::ε) | (ost_Windows ME::ε) | (ost_Windows 2000::ε) | (ost_Windows NT::ε) | (ost_Windows XP::ε) | (ost_Windows Vista::ε) | (ost_Windows Server 2003::ε) | (ost_MacSystem 7::ε) | (ost_MacSystem 7.5::ε) | (ost_MacSystem 7.6.1::ε) | (ost_MacSystem 8.0::ε) | (ost_MacSystem 8.5::ε) | (ost_MacSystem 8.6::ε) | (ost_MacSystem 9.x::ε) | (ost_Mac OS X 10.0::ε) | (ost_Mac OS X 10.1::ε) | (ost_Mac OS X 10.2::ε) | (ost_Mac OS X 10.3::ε) | (ost_Linux::ε) | (ost_BDS/OS::ε) | (ost_FreeBSD::ε) | (ost_NetBSD::ε) | (ost_OpenBSD::ε) | (ost_AIX::ε) | (ost_BeOS::ε) | (ost_HP-UX::ε) | (ost_IRIX::ε) | (ost_Neutrino::ε) | (ost_OpenVMS::ε) | (ost_OS/2::ε) | (ost_OSF/1::ε) | (ost_Solaris::ε) | (ost_SunOS::ε) | (ost_other::ε) ;
Boolean ::= "true" | "false" ;
Blocks ::= value::String ;
Dependson ::= value::String ;
ResolutionType ::= (rt_null::ε) | (rt_FIXED::ε) | (rt_INVALID::ε) | (rt_WONTFIX::ε) | (rt_LATER::ε) | (rt_REMIND::ε) | (rt_DUPLICATE::ε) | (rt_WORKSFORME::ε) | (rt_MOVED::ε) ;
Attachment ::= isObsolete::Boolean isPatch::Boolean isPrivate::Boolean id::String date::String desc::String type::String data::String ;
ErrorType ::= (et_null::ε) | (et_NotFound::ε) | (et_NotPermitted::ε) | (et_InvalidBugId::ε) ;
Cc ::= value::String ;
BugzillaRoot ::= version::String urlbase::String maintainer::String exporter::String (bugs::Bug)+ ;
ReportedPlatformType ::= (rpt_null::ε) | (rpt_all::ε) | (rpt_DEC::ε) | (rpt_HP::ε) | (rpt_Macintosh::ε) | (rpt_PC::ε) | (rpt_SGI::ε) | (rpt_Sun::ε) | (rpt_other::ε) ;
--------------------pico::rascal.bgf--------------------
Statement ::= [cond] "if" cond::Expression "then" thenPart::({Statement ";"}*) "else" elsePart::({Statement ";"}*) "fi" ;
 Statement ::= [assign] var::Id ":=" val::Expression ;
 Statement ::= [cond] "if" cond::Expression "then" thenPart::({Statement ";"}*) "fi" ;
 Statement ::= [loop] "while" cond::Expression "do" body::({Statement ";"}*) "od" ;
Type ::= [string] "string" ;
 Type ::= [natural] "natural" ;
 Type ::= [nil] "nil-type" ;
Declarations ::= "declare" decls::({IdType ","}*) ";" ;
Expression ::= "(" e::Expression ")" ;
 Expression ::= [natcon] natcon::Natural ;
 Expression ::= [id] name::Id ;
 Expression ::= [strcon] string::String ;
 Expression ::= [concat] lhs::Expression "||" rhs::Expression ;
 Expression ::= [add] lhs::Expression "+" rhs::Expression ;
 Expression ::= [min] lhs::Expression "-" rhs::Expression ;
IdType ::= [idtype] id::Id ":" t::Type ;
Program ::= [program] "begin" decls::Declarations body::({Statement ";"}*) "end" ;
--------------------pico::sdf.bgf--------------------
STATEMENT ::= (PICO-ID ":=" EXP) | ("if" EXP "then" (STATEMENT (";" STATEMENT)*)? "else" (STATEMENT (";" STATEMENT)*)? "fi") | ("while" EXP "do" (STATEMENT (";" STATEMENT)*)? "od") ;
EXP ::= PICO-ID | NatCon | StrCon | (EXP "+" EXP) | (EXP "-" EXP) | (EXP "||" EXP) | ("(" EXP ")") ;
TYPE ::= "natural" | "string" | "nil-type" ;
DECLS ::= "declare" (ID-TYPE ("," ID-TYPE)*)? ";" ;
PROGRAM ::= "begin" DECLS (STATEMENT (";" STATEMENT)*)? "end" ;
--------------------saf::abstract.bgf--------------------
Fighter ::= fighter::(name::string() specs::(Spec*)) ;
Spec ::= (attribute::(name::string() strength::integer())) | (behavior::(cond::Cond move::Action fight::Action)) ;
Action ::= (action::(name::string())) | (choose::(actions::(string()*))) ;
Cond ::= (const::(name::string())) | (and::(lhs::Cond rhs::Cond)) | (or::(lhs::Cond rhs::Cond)) ;
--------------------saf::concrete.bgf--------------------
Fighter ::= [fighter] name::Id "{" specs::(Spec*) "}" ;
Spec ::= [behavior] cond::Cond "[" move::Action fight::Action "]" ;
 Spec ::= [attribute] name::Id "=" strength::Number ;
Action ::= [action] Id ;
 Action ::= [choose] "choose" "(" actions::(Id*) ")" ;
Cond ::= [and] lhs::Cond "and" rhs::Cond ;
 Cond ::= [const] Id ;
 Cond ::= [or] lhs::Cond "or" rhs::Cond ;
