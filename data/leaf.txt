--------------------ada::kellogg.bgf--------------------
GT_GT ::= ">>" ;
SELECT ::= "select" ;
REM ::= "rem" ;
LIMITED ::= "limited" ;
LE ::= "<=" ;
DIV ::= "/" ;
ASSIGN ::= ":=" ;
TIC ::= "'" ;
SEMI ::= ";" ;
GT ::= ">" ;
TAGGED ::= "tagged" ;
USE ::= "use" ;
DIGITS ::= "digits" ;
ACCESS ::= "access" ;
PRIVATE ::= "private" ;
OTHERS ::= "others" ;
OR ::= "or" ;
GOTO ::= "goto" ;
DELAY ::= "delay" ;
empty_discrim_opt ::= ε ;
MOD ::= "mod" ;
GE ::= ">=" ;
SUBTYPE ::= "subtype" ;
CHARACTER_LITERAL ::= "'" α "'" ;
RPAREN ::= ")" ;
FUNCTION ::= "function" ;
LT_ ::= "<" ;
RIGHT_SHAFT ::= "=>" ;
OF ::= "of" ;
RENAMES ::= "renames" ;
STAR ::= "*" ;
ENTRY ::= "entry" ;
ABS ::= "abs" ;
RECORD ::= "record" ;
MINUS ::= "-" ;
ALIASED ::= "aliased" ;
COMMENT_INTRO ::= "--" ;
RAISE ::= "raise" ;
DECLARE ::= "declare" ;
WITH ::= "with" ;
REVERSE ::= "reverse" ;
TERMINATE ::= "terminate" ;
COLON ::= ":" ;
UNTIL ::= "until" ;
PRAGMA ::= "pragma" ;
XOR ::= "xor" ;
END ::= "end" ;
WHEN ::= "when" ;
TYPE ::= "type" ;
ELSE ::= "else" ;
ARRAY ::= "array" ;
NE ::= "/=" ;
GENERIC ::= "generic" ;
AND ::= "and" ;
COMMA ::= "," ;
PROCEDURE ::= "procedure" ;
NOT ::= "not" ;
AT ::= "at" ;
RETURN ::= "return" ;
CASE ::= "case" ;
EXCEPTION ::= "exception" ;
PIPE ::= "|" ;
OUT ::= "out" ;
EQ ::= "=" ;
BOX ::= "<>" ;
IS ::= "is" ;
IDENTIFIER ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" ("_"? "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* ;
DOT ::= "." ;
ELSIF ::= "elsif" ;
FOR ::= "for" ;
NuLL ::= "null" ;
PACKAGE ::= "package" ;
IN ::= "in" ;
CONSTANT ::= "constant" ;
LOOP ::= "loop" ;
SEPARATE ::= "separate" ;
ABSTRACT ::= "abstract" ;
BODY ::= "body" ;
LT_LT ::= "<<" ;
LPAREN ::= "(" ;
REQUEUE ::= "requeue" ;
EXIT ::= "exit" ;
THEN ::= "then" ;
RANGE ::= "range" ;
IF ::= "if" ;
EXPON ::= "**" ;
CHAR_STRING ::= """ α* """ ;
PLUS ::= "+" ;
DELTA ::= "delta" ;
CONCAT ::= "&" ;
DOT_DOT ::= ".." ;
WHILE ::= "while" ;
ABORT ::= "abort" ;
PROTECTED ::= "protected" ;
DIGIT ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;
empty_component_items ::= ε ;
DO ::= "do" ;
BEGIN ::= "begin" ;
ACCEPT ::= "accept" ;
TASK ::= "task" ;
WS_ ::= " " | "\t" | "\f" | "\r\n" | "\r" | "\n" ;
ALL ::= "all" ;
NEW ::= "new" ;
--------------------ada::kempe.bgf--------------------
highest_precedence_operator ::= "**" | "abs" | "not" ;
relational_operator ::= "=" | "/=" | "<" | "<=" | ">" | ">=" ;
unknown_discriminant_part ::= "(<>)" ;
general_access_modifier ::= "all" | "constant" ;
formal_ordinary_fixed_point_definition ::= "delta" "<>" ;
logical_operator ::= "and" | "or" | "xor" ;
null_statement ::= "null" ";" ;
formal_modular_type_definition ::= "mod" "<>" ;
unary_adding_operator ::= "+" | "-" ;
terminate_alternative ::= "terminate" ";" ;
formal_private_type_definition ::= ("abstract"? "tagged")? "limited"? "private" ;
formal_decimal_fixed_point_definition ::= "delta" "<>" "digits" "<>" ;
formal_floating_point_definition ::= "digits" "<>" ;
multiplying_operator ::= "*" | "/" | "mod" | "rem" ;
formal_signed_integer_type_definition ::= "range" "<>" ;
binary_adding_operator ::= "+" | "-" | "&" ;
mode ::= ("in"?) | ("in" "out") | "out" ;
formal_discrete_type_definition ::= "(<>)" ;
--------------------ada::laemmel-verhoef.bgf--------------------
highest_precedence_operator ::= "**" | "abs" | "not" ;
relational_operator ::= "=" | "/=" | "<" | "<=" | ">" | ">=" ;
unknown_discriminant_part ::= "(" "<>" ")" ;
general_access_modifier ::= "all" | "constant" ;
formal_ordinary_fixed_point_definition ::= "delta" "<>" ;
logical_operator ::= "and" | "or" | "xor" ;
null_statement ::= "null" ";" ;
formal_modular_type_definition ::= "mod" "<>" ;
unary_adding_operator ::= "+" | "-" ;
terminate_alternative ::= "terminate" ";" ;
formal_private_type_definition ::= ("abstract"? "tagged")? "limited"? "private" ;
formal_decimal_fixed_point_definition ::= "delta" "<>" "digits" "<>" ;
formal_floating_point_definition ::= "digits" "<>" ;
multiplying_operator ::= "*" | "/" | "mod" | "rem" ;
formal_signed_integer_type_definition ::= "range" "<>" ;
binary_adding_operator ::= "+" | "-" | "&" ;
mode ::= ("in"?) | ("in" "out") | "out" ;
formal_discrete_type_definition ::= "(" "<>" ")" ;
--------------------ada::lncs-2219.bgf--------------------
highest_precedence_operator ::= "**" | "abs" | "not" ;
relational_operator ::= "=" | "/=" | "<" | "<=" | ">" | ">=" ;
unknown_discriminant_part ::= "(<>)" ;
general_access_modifier ::= "all" | "constant" ;
formal_ordinary_fixed_point_definition ::= "delta" "<>" ;
logical_operator ::= "and" | "or" | "xor" ;
null_statement ::= "null" ";" ;
formal_modular_type_definition ::= "mod" "<>" ;
unary_adding_operator ::= "+" | "-" ;
terminate_alternative ::= "terminate" ";" ;
formal_private_type_definition ::= ("abstract"? "tagged")? "limited"? "private" ;
formal_decimal_fixed_point_definition ::= "delta" "<>" "digits" "<>" ;
formal_floating_point_definition ::= "digits" "<>" ;
multiplying_operator ::= "*" | "/" | "mod" | "rem" ;
formal_signed_integer_type_definition ::= "range" "<>" ;
binary_adding_operator ::= "+" | "-" | "&" ;
mode ::= ("in"?) | ("in" "out") | "out" ;
formal_discrete_type_definition ::= "(<>)" ;
--------------------ada::lncs-4348.bgf--------------------
highest_precedence_operator ::= "**" | "abs" | "not" ;
relational_operator ::= "=" | "/=" | "<" | "<=" | ">" | ">=" ;
unknown_discriminant_part ::= "(<>)" ;
general_access_modifier ::= "all" | "constant" ;
formal_ordinary_fixed_point_definition ::= "delta" "<>" ;
logical_operator ::= "and" | "or" | "xor" ;
overriding_indicator ::= "not"? "overriding" ;
null_statement ::= "null" ";" ;
null_exclusion ::= "not" "null" ;
formal_modular_type_definition ::= "mod" "<>" ;
unary_adding_operator ::= "+" | "-" ;
non_end_of_line_character ::= "character" ;
terminate_alternative ::= "terminate" ";" ;
digit ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;
formal_private_type_definition ::= ("abstract"? "tagged")? "limited"? "private" ;
formal_decimal_fixed_point_definition ::= "delta" "<>" "digits" "<>" ;
formal_floating_point_definition ::= "digits" "<>" ;
multiplying_operator ::= "*" | "/" | "mod" | "rem" ;
formal_signed_integer_type_definition ::= "range" "<>" ;
binary_adding_operator ::= "+" | "-" | "&" ;
mode ::= ("in"?) | ("in" "out") | "out" ;
formal_discrete_type_definition ::= "(<>)" ;
--------------------ada::cordy-hyaric.bgf--------------------
formal_private_type_definition_tagged ::= "abstract"? "tagged" ;
colon_equals ::= ":=" ;
colon ::= ":" ;
highest_precedence_operator ::= "**" | "abs" | "not" ;
explicit_dereference_component ::= "." "all" ;
relational_operator ::= "=" | "/=" | "<" | "<=" | ">" | ">=" ;
unknown_discriminant_part ::= "(" "<>" ")" ;
general_access_modifier ::= "all" | "constant" ;
formal_ordinary_fixed_point_definition ::= "delta" "<>" ;
private_type_declaration_tagged ::= "abstract"? "tagged" ;
logical_operator ::= "and" | "or" | "xor" ;
overriding_indicator ::= "not"? "overriding" ;
private_extension_declaration_modifier ::= "limited" | "synchronized" ;
null_exclusion ::= "not" "null" ;
formal_modular_type_definition ::= "mod" "<>" ;
unary_adding_operator ::= "+" | "-" ;
formal_derived_type_definition_modifier ::= "limited" | "synchronized" ;
orbar ::= "|" | "!" ;
formal_decimal_fixed_point_definition ::= "delta" "<>" "digits" "<>" ;
formal_floating_point_definition ::= "digits" "<>" ;
arrow ::= "=>" ;
requeue_statement_with_abort ::= "with" "abort" ;
and_or_xor ::= ("and" "then"?) | ("or" "else"?) | "xor" ;
multiplying_operator ::= "*" | "/" | "mod" | "rem" ;
formal_signed_integer_type_definition ::= "range" "<>" ;
interface_type_definition_modifier ::= "limited" | "task" | "protected" | "synchronized" ;
mode ::= ("in"?) | ("in" "out") | "out" ;
formal_discrete_type_definition ::= "(" "<>" ")" ;
record_type_definition_tagged ::= "abstract"? "tagged" ;
incomplete_type_declaration_modifier ::= "is" "tagged" ;
--------------------c::iso-9899-1999.bgf--------------------
struct-or-union ::= "struct" | "union" ;
function-specifier ::= "inline" ;
type-qualifier ::= "const" | "restrict" | "volatile" ;
storage-class-specifier ::= "typedef" | "extern" | "static" | "auto" | "register" ;
assignment-operator ::= "=" | "*=" | "/=" | "%=" | "+=" | "-=" | "<<=" | ">>=" | "&=" | "^=" | "|=" ;
unary-operator ::= "&" | "*" | "+" | "-" | "~" | "!" ;
--------------------c::iso-9899-tc2.bgf--------------------
struct-or-union ::= "struct" | "union" ;
function-specifier ::= "inline" ;
type-qualifier ::= "const" | "restrict" | "volatile" ;
storage-class-specifier ::= "typedef" | "extern" | "static" | "auto" | "register" ;
assignment-operator ::= "=" | "*=" | "/=" | "%=" | "+=" | "-=" | "<<=" | ">>=" | "&=" | "^=" | "|=" ;
unary-operator ::= "&" | "*" | "+" | "-" | "~" | "!" ;
--------------------c::iso-9899-tc3.bgf--------------------
struct-or-union ::= "struct" | "union" ;
function-specifier ::= "inline" ;
type-qualifier ::= "const" | "restrict" | "volatile" ;
storage-class-specifier ::= "typedef" | "extern" | "static" | "auto" | "register" ;
assignment-operator ::= "=" | "*=" | "/=" | "%=" | "+=" | "-=" | "<<=" | ">>=" | "&=" | "^=" | "|=" ;
unary-operator ::= "&" | "*" | "+" | "-" | "~" | "!" ;
--------------------c::malton-dahn.bgf--------------------
slash ::= "/" | "\" | "." | ":" ;
attribute_destructor ::= "destructor" | "__destructor__" | "__destructor" | "destructor__" ;
attribute_packed ::= "__packed__" | "__packed" | "packed__" | "packed" ;
attribute_format ::= "__format__" | "__format" | "format__" | "format" ;
bit_qualifier ::= "long" | "short" | "signed" | "unsigned" | "__signed__" | "__signed" ;
attribute_far ::= "__far__" | "__far" | "far__" | "far" ;
attribute_noreturn ::= "__noreturn__" | "__noreturn" | "noreturn__" | "noreturn" ;
attribute_sp_switch ::= "sp_switch" | "__sp_switch__" | "__sp_switch" | "sp_switch__" ;
attribute_alias ::= "alias" | "__alias__" | "__alias" | "alias__" ;
attribute_exception ::= "exception" | "__exception__" | "__exception" | "exception__" ;
attribute_malloc ::= "malloc" | "__malloc__" | "__malloc" | "malloc__" ;
attribute_near ::= "__near__" | "__near" | "near__" | "near" ;
attribute_shared ::= "shared" | "__shared__" | "__shared" | "shared__" ;
restrict_qualifier ::= "__restrict" | "restrict__" | "restrict" | "__restrict__" ;
attribute_mode ::= "__mode__" | "__mode" | "mode__" | "mode" ;
attribute_always_inline ::= "__always_inline__" | "__always_inline" | "always_inline__" | "always_inline" ;
attribute_model_name ::= "small" | "__small__" | "__small" | "small__" | "medium" | "__medium__" | "__medium" | "medium__" | "large" | "__large__" | "__large" | "large__" ;
attribute_no_check_mem ::= "no_check_memory_usage" | "__no_check_memory_usage__" | "__no_check_memory_usage" | "no_check_memory_usage__" ;
attribute_eightbit ::= "eightbit_data" | "__eightbit_data__" | "__eightbit_data" | "eightbit_data__" ;
attribute_long_call ::= "long_call" | "__long_call__" | "__long_call" | "long_call__" ;
attribute_stdcall ::= "stdcall" | "__stdcall__" | "__stdcall" | "stdcall__" ;
cv_qualifier ::= "const" | "volatile" ;
 cv_qualifier ::= "const" | "volatile" | "__const" | "__const__" | "const__" | "__volatile__" | "__volatile" | "volatile__" ;
attribute_noinline ::= "__noinline__" | "__noinline" | "noinline__" | "noinline" ;
attribute_regparm ::= "regparm" | "__regparm__" | "__regparm" | "regparm__" ;
attribute_vector_size ::= "__vector_size__" | "__vector_size" | "vector_size__" | "vector_size" ;
attribute_unused ::= "__unused__" | "__unused" | "unused__" | "unused" ;
designator_assignment ::= ":" | "=" ;
attribute_constructor ::= "constructor" | "__constructor__" | "__constructor" | "constructor__" ;
assignment_operator ::= "=" | "*=" | "/=" | "%=" | "+=" | "-=" | ">>=" | "<<=" | "&=" | "^=" | "|=" ;
attribute_trans_union ::= "__transparent_union__" | "__transparent_union" | "transparent_union__" | "transparent_union" ;
attribute_naked ::= "naked" | "__naked__" | "__naked" | "naked__" ;
tls_model_type ::= "global-dynamic" | "local-dynamic" | "initial-exec" | "local-exec" ;
visibility_type ::= "default" | "hidden" | "protected" | "internal" ;
attribute_model ::= "model" | "__model__" | "__model" | "model__" ;
attribute_short_call ::= "short_call" | "__short_call__" | "__short_call" | "short_call__" ;
attribute_tiny ::= "tiny_data" | "__tiny_data__" | "__tiny_data" | "tiny_data__" ;
attribute_section ::= "section" | "__section__" | "__section" | "section__" ;
attribute_no_instrument ::= "no_instrument_function" | "__no_instrument_function__" | "__no_instrument_function" | "no_instrument_function__" ;
attribute_aligned ::= "__aligned__" | "__aligned" | "aligned__" | "aligned" ;
format_archetype ::= "printf" | "__printf__" | "__printf" | "printf__" | "scanf" | "__scanf__" | "__scanf" | "scanf__" | "strftime" | "__strftime__" | "__strftime" | "strftime__" | "strfmon" | "__strfmon__" | "__strfmon" | "strfmon__" ;
extension_specifier ::= "__extension__" ;
attribute_pure ::= "__pure__" | "__pure" | "pure__" | "pure" ;
attribute_weak ::= "weak" | "__weak__" | "__weak" | "weak__" ;
attribute_deprecated ::= "__deprecated__" | "__deprecated" | "deprecated__" | "deprecated" ;
attribute_dllexport ::= "__dllexport__" | "__dllexport" | "dllexport__" | "dllexport" ;
unary_operator ::= "*" | "&" | "+" | "-" | "!" | "~" | "++" | "--" ;
 unary_operator ::= "&&" ;
attribute_nonnull ::= "__nonnull__" | "__nonnull" | "nonnull__" | "nonnull" ;
attribute_nocommon ::= "nocommon" | "__nocommon__" | "nocommon__" | "__nocommon" ;
attribute_signal ::= "signal" | "__signal__" | "__signal" | "signal__" ;
attribute_cdecl ::= "cdecl" | "__cdecl__" | "__cdecl" | "cdecl__" ;
attribute_dllimport ::= "dllimport" | "__dllimport__" | "__dllimport" | "dllimport__" ;
attribute_nothrow ::= "__nothrow__" | "__nothrow" | "nothrow__" | "nothrow" ;
binary_operator ::= "+" | "-" | "*" | "/" | "%" | "==" | "!=" | "<" | ">" | "<=" | ">=" | "||" | "&&" | "|" | "^" | "&" | "<<" | ">>" ;
local_label ::= "__label__" ;
attribute_funvector ::= "function_vector" | "__function_vector__" | "__function_vector" | "function_vector__" ;
attribute_longcall ::= "longcall" | "__longcall__" | "__longcall" | "longcall__" ;
struct_or_union ::= "struct" | "union" ;
attribute_visibility ::= "__visibility__" | "__visibility" | "visibility__" | "visibility" ;
attribute_may_alias ::= "__may_alias__" | "__may_alias" | "may_alias__" | "may_alias" ;
attribute_format_arg ::= "__format_arg__" | "__format_arg" | "format_arg__" | "format_arg" ;
typeof_specifier ::= "__typeof" | "typeof" | "__typeof__" | "typeof__" ;
sc_specifier ::= "auto" | "register" | "static" | "extern" | "typedef" ;
attribute_trap_exit ::= "trap_exit" | "__trap_exit__" | "__trap_exit" | "trap_exit__" ;
attribute_interrupt_handler ::= "interrupt_handler" | "__interrupt_handler__" | "__interrupt_handler" | "interrupt_handler__" ;
inline_qualifier ::= "__inline" | "__inline__" | "inline__" | "inline" ;
attribute_tls_model ::= "__tls_model__" | "__tls_model" | "tls_model__" | "tls_model" ;
attribute_cleanup ::= "__cleanup__" | "__cleanup" | "cleanup__" | "cleanup" ;
attribute_const ::= "__const__" | "__const" | "const__" | "const" ;
attribute_interrupt ::= "interrupt" | "__interrupt__" | "__interrupt" | "interrupt__" ;
attribute_used ::= "__used__" | "__used" | "used__" | "used" ;
--------------------c::bruneliere.bgf--------------------
CLong ::= ε ;
Integer ::= integer() ;
Derived ::= ε ;
CLongLong ::= ε ;
CShort ::= ε ;
CFloat ::= ε ;
CField ::= ε ;
CVoid ::= ε ;
CSignedChar ::= ε ;
CDouble ::= ε ;
UnsignedLong ::= ε ;
String ::= string() ;
CLongDouble ::= ε ;
CBitField ::= ε ;
CUnsignedChar ::= ε ;
UnsignedLongLong ::= ε ;
CWChar ::= ε ;
Boolean ::= "true" | "false" ;
UnsignedShort ::= ε ;
CEnumeration ::= ε ;
--------------------c::cordy-malton-dahn.bgf--------------------
extension_specifier ::= "__extension__" | "__extension" ;
relational_operator ::= "<" | ">" | "<=" | ">=" ;
init_qualifier ::= "__init" | "init__" | "init" | "__init__" ;
colon_equals_or_equals ::= ":" | "=" | "|=" ;
asm ::= "__asm__" | "asm" | "asm__" | "__asm" ;
device_attr ::= "DEVICE_ATTR" | "SYSDEV_ATTR" | "DEFINE_TIMER" | "DECLARE_TASKLET" ;
initdata ::= "__initdata" | "__devinitdata" | "__cpuinitdata" | "__read_mostly" | "__initmv" | "__initdata_or_module" | "__pminitdata" | "__cpuinit" | "__devinit" | "BDATA" | "compat_init_data" | "in2000__INITDATA" ;
bit_qualifier ::= "long" | "short" | "signed" | "unsigned" | "__signed__" | "__signed" ;
additive_operator ::= "+" | "-" ;
null_statement ::= ε ;
weak_specifier ::= "__weak__" | "__weak" ;
user_qualifier ::= "__user" | "user__" | "user" | "__user__" ;
unary_operator ::= "&" | "*" | "+" | "-" | "~" | "!" | "&&" | "NOT" | "not" ;
complex ::= "__complex" | "__complex__" | "__Complex" ;
acquires_releases ::= "__acquires" | "__releases" ;
multiplicative_operator ::= "*" | "/" | "%" | "DIV" | "MOD" ;
restrict_qualifier ::= "__restrict" | "restrict__" | "restrict" | "__restrict__" ;
nf_qualifier ::= "near" | "far" | "NEAR" | "FAR" ;
logical_AND_operator ::= "&&" | "AND" | "and" | "ANDP" ;
local_label ::= "__label__" ;
bit_AND_operator ::= "&" | "BIT_AND" | "bit_and" ;
struct_or_union ::= "struct" | "union" ;
alignof_specifier ::= "__alignof__" | "__alignof" ;
attribute_specifier ::= "__attribute__" | "__attribute" ;
bit_XOR_operator ::= "^" | "BIT_XOR" | "bit_xor" ;
zexport_qualifier ::= "ZEXPORT" ;
force_qualifier ::= "__force" | "force__" | "force" | "__force__" ;
assignment_operator ::= "=" | "*=" | "/=" | "%=" | "+=" | "-=" | ">>=" | "<<=" | "&=" | "^=" | "|=" ;
asmlinkage_qualifier ::= "asmlinkage" ;
typeof_specifier ::= "__typeof" | "typeof" | "__typeof__" | "typeof__" ;
sc_specifier ::= "auto" | "register" | "static" | "extern" | "far" | "near" | "typedef" | "local" | "vector" | "const_debug" | "INIT" | "STATIC" | "NEAR" | "FAR" ;
bit_OR_operator ::= "|" | "BIT_OR" | "bit_or" ;
logical_OR_operator ::= "||" | "OR" | "or" ;
equality_operator ::= "==" | "!=" ;
exit_qualifier ::= "__exit" | "exit__" | "exit" | "__exit__" ;
inline_qualifier ::= "__inline" | "__inline__" | "inline__" | "inline" | "SBA_INLINE" ;
shift_operator ::= "<<" | ">>" ;
--------------------c::cordy-malton.bgf--------------------
sc_specifier ::= "auto" | "register" | "static" | "extern" | "typedef" ;
cv_qualifier ::= "const" | "volatile" ;
slash ::= "/" | "\" | "." | ":" ;
struct_or_union ::= "struct" | "union" ;
assignment_operator ::= "=" | "*=" | "/=" | "%=" | "+=" | "-=" | ">>=" | "<<=" | "&=" | "^=" | "|=" ;
type_qualifier ::= "long" | "short" | "signed" | "unsigned" ;
unary_operator ::= "*" | "&" | "+" | "-" | "!" | "~" | "++" | "--" ;
binary_operator ::= "+" | "-" | "*" | "/" | "%" | "==" | "!=" | "<" | ">" | "<=" | ">=" | "||" | "&&" | "|" | "^" | "&" | "<<" | ">>" ;
--------------------c::lankamp.bgf--------------------
MoreParameters ::= "," "..." ;
StorageClass ::= "register" ;
 StorageClass ::= "static" ;
 StorageClass ::= "extern" ;
 StorageClass ::= "auto" ;
 StorageClass ::= [TypeDef] "typedef" ;
AnonymousIdentifier ::= ε ;
TypeQualifier ::= "const" ;
 TypeQualifier ::= "volatile" ;
--------------------cpp::iso-n2723.bgf--------------------
class-key ::= "class" | "struct" | "union" ;
capture-default ::= "&" | "=" ;
function-specifier ::= "inline" | "virtual" | "explicit" ;
pure-specifier ::= "=" "0" ;
storage-class-specifier ::= "register" | "static" | "thread_local" | "extern" | "mutable" ;
access-specifier ::= "private" | "protected" | "public" ;
operator ::= "new" | "delete" | ("new" "[" "]") | ("delete" "[" "]") | "+" | "-" | "*" | "/" | "%" | "^" | "&" | "|" | "~" | "!" | "=" | "<" | ">" | "+=" | "-=" | "*=" | "/=" | "%=" | "^=" | "&=" | "|=" | "<<" | ">>" | ">>=" | "<<=" | "==" | "!=" | "<=" | ">=" | "&&" | "||" | "++" | "--" | "," | "->*" | "->" | "(" | ")" | "[" | "]" ;
assignment-operator ::= "=" | "*=" | "/=" | "%=" | "+=" | "-=" | ">>=" | "<<=" | "&=" | "^=" | "|=" ;
enum-key ::= "enum" | ("enum" "class") | ("enum" "struct") ;
unary-operator ::= "*" | "&" | "+" | "-" | "!" | "~" ;
ref-qualifier ::= "&" | "&&" ;
cv-qualifier ::= "const" | "volatile" ;
--------------------cpp::bruneliere.bgf--------------------
CDerivableType ::= ε ;
Integer ::= integer() ;
CPPReference ::= ε ;
Boolean ::= "true" | "false" ;
CField ::= ε ;
VisibilityKind ::= (vk_public::ε) | (vk_private::ε) | (vk_protected::ε) ;
String ::= string() ;
CPPConst ::= ε ;
--------------------cpp::elges-cordy.bgf--------------------
comma_dotdotdot ::= ","? "..." ;
class_key ::= "class" | "struct" | "union" ;
function_specifier ::= "inline" | "virtual" ;
assignment_operator ::= "=" | "*=" | "/=" | "%=" | "+=" | "-=" | ">>=" | "<<=" | "&=" | "^=" | "|=" ;
unary_operator ::= "**" | "*" | "&" | "+" | "-" | "!" | "~" ;
const_volatile_qualifier ::= "const" | "volatile" ;
access_specifier ::= "private" | "protected" | "public" ;
storage_class_specifier ::= "auto" | "register" | "static" | "extern" ;
binary_operator ::= "||" | "&&" | "|" | "^" | "&" | "==" | "!=" | "<" | ">" | "<=" | ">=" | "<<" | ">>" | "+" | "-" | "*" | "/" | "%" | ".*" | "->*" ;
non_gt_binary_operator ::= "||" | "&&" | "|" | "^" | "&" | "==" | "!=" | "<" | "<=" | ">=" | "<<" | ">>" | "+" | "-" | "*" | "/" | "%" | ".*" | "->*" ;
stars ::= "*" | "**" ;
--------------------cpp::iso-14882-1998.bgf--------------------
class-key ::= "class" | "struct" | "union" ;
function-specifier ::= "inline" | "virtual" | "explicit" ;
pure-specifier ::= "=" "0" ;
storage-class-specifier ::= "auto" | "register" | "static" | "extern" | "mutable" ;
access-specifier ::= "private" | "protected" | "public" ;
assignment-operator ::= "=" | "*=" | "/=" | "%=" | "+=" | "-=" | ">>=" | "<<=" | "&=" | "^=" | "|=" ;
operator ::= "new" | "delete" | ("new" "[" "]") | ("delete" "[" "]") | "+" | "-" | "*" | "/" | "%" | "^" | "&" | "|" | "~" | "!" | "=" | "<" | ">" | "+=" | "-=" | "*=" | "/=" | "%=" | "^=" | "&=" | "|=" | "<<" | ">>" | ">>=" | "<<=" | "==" | "!=" | "<=" | ">=" | "&&" | "||" | "++" | "--" | "," | "->*" | "->" | ("(" ")") | ("[" "]") ;
unary-operator ::= "*" | "&" | "+" | "-" | "!" | "~" ;
cv-qualifier ::= "const" | "volatile" ;
--------------------cs::csharp-ecma-334-2.bgf--------------------
delegate-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
floating-point-type ::= "float" | "double" ;
overloadable-unary-operator ::= "+" | "-" | "!" | "~" | "++" | "--" | "true" | "false" ;
parameter-modifier ::= "ref" | "out" ;
integral-type ::= "sbyte" | "byte" | "short" | "ushort" | "int" | "uint" | "long" | "ulong" | "char" ;
overloadable-binary-operator ::= "+" | "-" | "*" | "/" | "%" | "&" | "|" | "^" | "<<" | ">>" | "==" | "!=" | ">" | "<" | ">=" | "<=" ;
this-access ::= "this" ;
struct-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
property-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
empty-statement ::= ";" ;
global-attribute-target ::= "assembly" ;
class-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "abstract" | "sealed" ;
interface-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
static-constructor-modifiers ::= ("extern"? "static") | ("static" "extern"?) ;
constructor-modifier ::= "public" | "protected" | "internal" | "private" | "extern" ;
event-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
field-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "readonly" | "volatile" ;
keyword ::= "abstract" | "as" | "base" | "bool" | "break" | "byte" | "case" | "catch" | "char" | "checked" | "class" | "const" | "continue" | "decimal" | "default" | "delegate" | "do" | "double" | "else" | "enum" | "event" | "explicit" | "extern" | "false" | "finally" | "fixed" | "float" | "for" | "foreach" | "goto" | "if" | "implicit" | "in" | "int" | "interface" | "internal" | "is" | "lock" | "long" | "namespace" | "new" | "null" | "object" | "operator" | "out" | "override" | "params" | "private" | "protected" | "public" | "readonly" | "ref" | "return" | "sbyte" | "sealed" | "short" | "sizeof" | "stackalloc" | "static" | "string" | "struct" | "switch" | "this" | "throw" | "true" | "try" | "typeof" | "uint" | "ulong" | "unchecked" | "unsafe" | "ushort" | "using" | "virtual" | "void" | "while" | "assembly" | "remove" | "get" | "set" | "field" | "method" | "module" | "param" | "property" | "add" | "volatile" ;
continue-statement ::= "continue" ";" ;
indexer-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
assignment-operator ::= "=" | "+=" | "-=" | "*=" | "/=" | "%=" | "&=" | "|=" | "^=" | "<<=" | ">>=" ;
enum-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
method-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
break-statement ::= "break" ";" ;
predefined-type ::= "bool" | "byte" | "char" | "decimal" | "double" | "float" | "int" | "long" | "object" | "sbyte" | "short" | "string" | "uint" | "ulong" | "ushort" ;
operator-modifier ::= "public" | "static" | "extern" ;
constant-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
--------------------cs::csharp-ecma-334-3.bgf--------------------
delegate-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
floating-point-type ::= "float" | "double" ;
accessor-modifier ::= "protected" | "internal" | "private" | ("protected" "internal") | ("internal" "protected") ;
overloadable-unary-operator ::= "+" | "-" | "!" | "~" | "++" | "--" | "true" | "false" ;
parameter-modifier ::= "ref" | "out" ;
integral-type ::= "sbyte" | "byte" | "short" | "ushort" | "int" | "uint" | "long" | "ulong" | "char" ;
this-access ::= "this" ;
constructor-constraint ::= "new" "(" ")" ;
struct-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
property-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
empty-statement ::= ";" ;
class-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "abstract" | "sealed" | "static" ;
interface-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
static-constructor-modifiers ::= ("extern"? "static") | ("static" "extern"?) ;
constructor-modifier ::= "public" | "protected" | "internal" | "private" | "extern" ;
event-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
field-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "readonly" | "volatile" ;
keyword ::= "abstract" | "as" | "base" | "bool" | "break" | "byte" | "case" | "catch" | "char" | "checked" | "class" | "const" | "continue" | "decimal" | "default" | "delegate" | "do" | "double" | "else" | "enum" | "event" | "explicit" | "extern" | "false" | "finally" | "fixed" | "float" | "for" | "foreach" | "goto" | "if" | "implicit" | "in" | "int" | "interface" | "internal" | "is" | "lock" | "long" | "namespace" | "new" | "null" | "object" | "operator" | "out" | "override" | "params" | "private" | "protected" | "public" | "readonly" | "ref" | "return" | "sbyte" | "sealed" | "short" | "sizeof" | "stackalloc" | "static" | "string" | "struct" | "switch" | "this" | "throw" | "true" | "try" | "typeof" | "uint" | "ulong" | "unchecked" | "unsafe" | "ushort" | "using" | "virtual" | "void" | "volatile" | "while" | "get" | "set" | "yield" | "add" | "remove" | "alias" | "partial" | "where" ;
continue-statement ::= "continue" ";" ;
indexer-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
enum-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
method-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
break-statement ::= "break" ";" ;
predefined-type ::= "bool" | "byte" | "char" | "decimal" | "double" | "float" | "int" | "long" | "object" | "sbyte" | "short" | "string" | "uint" | "ulong" | "ushort" ;
operator-modifier ::= "public" | "static" | "extern" ;
constant-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
--------------------cs::csharp-ecma-334-4.bgf--------------------
delegate-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
floating-point-type ::= "float" | "double" ;
accessor-modifier ::= "protected" | "internal" | "private" | ("protected" "internal") | ("internal" "protected") ;
overloadable-unary-operator ::= "+" | "-" | "!" | "~" | "++" | "--" | "true" | "false" ;
parameter-modifier ::= "ref" | "out" ;
integral-type ::= "sbyte" | "byte" | "short" | "ushort" | "int" | "uint" | "long" | "ulong" | "char" ;
this-access ::= "this" ;
right-shift ::= ">>" ;
constructor-constraint ::= "new" "(" ")" ;
struct-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
property-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
empty-statement ::= ";" ;
class-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "abstract" | "sealed" | "static" ;
interface-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
static-constructor-modifiers ::= ("extern"? "static") | ("static" "extern"?) ;
constructor-modifier ::= "public" | "protected" | "internal" | "private" | "extern" ;
event-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
field-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "readonly" | "volatile" ;
continue-statement ::= "continue" ";" ;
right-shift-assignment ::= ">>=" ;
keyword ::= "abstract" | "as" | "base" | "bool" | "break" | "byte" | "case" | "catch" | "char" | "checked" | "class" | "const" | "continue" | "decimal" | "default" | "delegate" | "do" | "double" | "else" | "enum" | "event" | "explicit" | "extern" | "false" | "finally" | "fixed" | "float" | "for" | "foreach" | "goto" | "if" | "implicit" | "in" | "int" | "interface" | "internal" | "is" | "lock" | "long" | "namespace" | "new" | "null" | "object" | "operator" | "out" | "override" | "params" | "private" | "protected" | "public" | "readonly" | "ref" | "return" | "sbyte" | "sealed" | "short" | "sizeof" | "stackalloc" | "static" | "string" | "struct" | "switch" | "this" | "throw" | "true" | "try" | "typeof" | "uint" | "ulong" | "unchecked" | "unsafe" | "ushort" | "using" | "virtual" | "void" | "volatile" | "while" | "get" | "set" | "yield" | "add" | "remove" | "alias" | "partial" | "where" ;
indexer-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
enum-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
method-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
break-statement ::= "break" ";" ;
predefined-type ::= "bool" | "byte" | "char" | "decimal" | "double" | "float" | "int" | "long" | "object" | "sbyte" | "short" | "string" | "uint" | "ulong" | "ushort" ;
operator-modifier ::= "public" | "static" | "extern" ;
constant-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
--------------------cs::csharp-iso-23270-2003.bgf--------------------
delegate-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
floating-point-type ::= "float" | "double" ;
overloadable-unary-operator ::= "+" | "-" | "!" | "~" | "++" | "--" | "true" | "false" ;
parameter-modifier ::= "ref" | "out" ;
integral-type ::= "sbyte" | "byte" | "short" | "ushort" | "int" | "uint" | "long" | "ulong" | "char" ;
overloadable-binary-operator ::= "+" | "-" | "*" | "/" | "%" | "&" | "|" | "^" | "<<" | ">>" | "==" | "!=" | ">" | "<" | ">=" | "<=" ;
this-access ::= "this" ;
struct-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
property-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
empty-statement ::= ";" ;
global-attribute-target ::= "assembly" ;
class-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "abstract" | "sealed" ;
interface-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
static-constructor-modifiers ::= ("extern"? "static") | ("static" "extern"?) ;
constructor-modifier ::= "public" | "protected" | "internal" | "private" | "extern" ;
event-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
field-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "readonly" | "volatile" ;
continue-statement ::= "continue" ";" ;
indexer-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
assignment-operator ::= "=" | "+=" | "-=" | "*=" | "/=" | "%=" | "&=" | "|=" | "^=" | "<<=" | ">>=" ;
enum-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
method-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
attribute-target ::= "field" | "event" | "method" | "module" | "param" | "property" | "return" | "type" ;
break-statement ::= "break" ";" ;
predefined-type ::= "bool" | "byte" | "char" | "decimal" | "double" | "float" | "int" | "long" | "object" | "sbyte" | "short" | "string" | "uint" | "ulong" | "ushort" ;
operator-modifier ::= "public" | "static" | "extern" ;
constant-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
--------------------cs::csharp-iso-23270-2006.bgf--------------------
delegate-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
floating-point-type ::= "float" | "double" ;
accessor-modifier ::= "protected" | "internal" | "private" | ("protected" "internal") | ("internal" "protected") ;
overloadable-unary-operator ::= "+" | "-" | "!" | "~" | "++" | "--" | "true" | "false" ;
parameter-modifier ::= "ref" | "out" ;
integral-type ::= "sbyte" | "byte" | "short" | "ushort" | "int" | "uint" | "long" | "ulong" | "char" ;
this-access ::= "this" ;
constructor-constraint ::= "new" "(" ")" ;
struct-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
property-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
empty-statement ::= ";" ;
class-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "abstract" | "sealed" | "static" ;
interface-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
static-constructor-modifiers ::= ("extern"? "static") | ("static" "extern"?) ;
constructor-modifier ::= "public" | "protected" | "internal" | "private" | "extern" ;
event-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
field-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "readonly" | "volatile" ;
keyword ::= "abstract" | "as" | "base" | "bool" | "break" | "byte" | "case" | "catch" | "char" | "checked" | "class" | "const" | "continue" | "decimal" | "default" | "delegate" | "do" | "double" | "else" | "enum" | "event" | "explicit" | "extern" | "false" | "finally" | "fixed" | "float" | "for" | "foreach" | "goto" | "if" | "implicit" | "in" | "int" | "interface" | "internal" | "is" | "lock" | "long" | "namespace" | "new" | "null" | "object" | "operator" | "out" | "override" | "params" | "private" | "protected" | "public" | "readonly" | "ref" | "return" | "sbyte" | "sealed" | "short" | "sizeof" | "stackalloc" | "static" | "string" | "struct" | "switch" | "this" | "throw" | "true" | "try" | "typeof" | "uint" | "ulong" | "unchecked" | "unsafe" | "ushort" | "using" | "virtual" | "void" | "volatile" | "while" | "yield" | "partial" | "add" | "remove" | "get" | "set" | "where" | "alias" ;
continue-statement ::= "continue" ";" ;
indexer-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
enum-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
method-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
break-statement ::= "break" ";" ;
predefined-type ::= "bool" | "byte" | "char" | "decimal" | "double" | "float" | "int" | "long" | "object" | "sbyte" | "short" | "string" | "uint" | "ulong" | "ushort" ;
operator-modifier ::= "public" | "static" | "extern" ;
constant-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
--------------------cs::csharp-msft-ls-1.0.bgf--------------------
delegate-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
floating-point-type ::= "float" | "double" ;
overloadable-unary-operator ::= "+" | "-" | "!" | "~" | "++" | "--" | "true" | "false" ;
parameter-modifier ::= "ref" | "out" ;
integral-type ::= "sbyte" | "byte" | "short" | "ushort" | "int" | "uint" | "long" | "ulong" | "char" ;
overloadable-binary-operator ::= "+" | "-" | "*" | "/" | "%" | "&" | "|" | "^" | "<<" | ">>" | "==" | "!=" | ">" | "<" | ">=" | "<=" ;
this-access ::= "this" ;
struct-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
property-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
empty-statement ::= ";" ;
class-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "abstract" | "sealed" ;
global-attribute-target ::= "assembly" | "module" ;
interface-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
static-constructor-modifiers ::= ("extern"? "static") | ("static" "extern"?) ;
constructor-modifier ::= "public" | "protected" | "internal" | "private" | "extern" ;
event-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
field-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "readonly" | "volatile" ;
continue-statement ::= "continue" ";" ;
indexer-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
assignment-operator ::= "=" | "+=" | "-=" | "*=" | "/=" | "%=" | "&=" | "|=" | "^=" | "<<=" | ">>=" ;
enum-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
method-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
break-statement ::= "break" ";" ;
predefined-type ::= "bool" | "byte" | "char" | "decimal" | "double" | "float" | "int" | "long" | "object" | "sbyte" | "short" | "string" | "uint" | "ulong" | "ushort" ;
operator-modifier ::= "public" | "static" | "extern" ;
constant-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
--------------------cs::csharp-msft-ls-1.2.bgf--------------------
delegate-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
floating-point-type ::= "float" | "double" ;
overloadable-unary-operator ::= "+" | "-" | "!" | "~" | "++" | "--" | "true" | "false" ;
parameter-modifier ::= "ref" | "out" ;
integral-type ::= "sbyte" | "byte" | "short" | "ushort" | "int" | "uint" | "long" | "ulong" | "char" ;
overloadable-binary-operator ::= "+" | "-" | "*" | "/" | "%" | "&" | "|" | "^" | "<<" | ">>" | "==" | "!=" | ">" | "<" | ">=" | "<=" ;
this-access ::= "this" ;
struct-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
property-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
empty-statement ::= ";" ;
class-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "abstract" | "sealed" ;
global-attribute-target ::= "assembly" | "module" ;
interface-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
static-constructor-modifiers ::= ("extern"? "static") | ("static" "extern"?) ;
constructor-modifier ::= "public" | "protected" | "internal" | "private" | "extern" ;
event-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
field-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "readonly" | "volatile" ;
continue-statement ::= "continue" ";" ;
indexer-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
assignment-operator ::= "=" | "+=" | "-=" | "*=" | "/=" | "%=" | "&=" | "|=" | "^=" | "<<=" | ">>=" ;
enum-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
method-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
break-statement ::= "break" ";" ;
predefined-type ::= "bool" | "byte" | "char" | "decimal" | "double" | "float" | "int" | "long" | "object" | "sbyte" | "short" | "string" | "uint" | "ulong" | "ushort" ;
operator-modifier ::= "public" | "static" | "extern" ;
constant-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
--------------------cs::csharp-msft-ls-3.0.bgf--------------------
delegate-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
floating-point-type ::= "float" | "double" ;
accessor-modifier ::= "protected" | "internal" | "private" | ("protected" "internal") | ("internal" "protected") ;
overloadable-unary-operator ::= "+" | "-" | "!" | "~" | "++" | "--" | "true" | "false" ;
parameter-modifier ::= "ref" | "out" | "this" ;
integral-type ::= "sbyte" | "byte" | "short" | "ushort" | "int" | "uint" | "long" | "ulong" | "char" ;
this-access ::= "this" ;
right-shift ::= ">>" ;
constructor-constraint ::= "new" "(" ")" ;
anonymous-function-parameter-modifier ::= "ref" | "out" ;
struct-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
property-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
empty-statement ::= ";" ;
class-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "abstract" | "sealed" | "static" ;
global-attribute-target ::= "assembly" | "module" ;
interface-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
static-constructor-modifiers ::= ("extern"? "static") | ("static" "extern"?) ;
constructor-modifier ::= "public" | "protected" | "internal" | "private" | "extern" ;
event-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
field-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "readonly" | "volatile" ;
continue-statement ::= "continue" ";" ;
right-shift-assignment ::= ">>=" ;
ordering-direction ::= "ascending" | "descending" ;
indexer-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
enum-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
method-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
break-statement ::= "break" ";" ;
predefined-type ::= "bool" | "byte" | "char" | "decimal" | "double" | "float" | "int" | "long" | "object" | "sbyte" | "short" | "string" | "uint" | "ulong" | "ushort" ;
operator-modifier ::= "public" | "static" | "extern" ;
constant-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
--------------------cs::csharp-msft-ls-4.0.bgf--------------------
delegate-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
floating-point-type ::= "float" | "double" ;
accessor-modifier ::= "protected" | "internal" | "private" | ("protected" "internal") | ("internal" "protected") ;
overloadable-unary-operator ::= "+" | "-" | "!" | "~" | "++" | "--" | "true" | "false" ;
parameter-modifier ::= "ref" | "out" | "this" ;
integral-type ::= "sbyte" | "byte" | "short" | "ushort" | "int" | "uint" | "long" | "ulong" | "char" ;
this-access ::= "this" ;
right-shift ::= ">>" ;
constructor-constraint ::= "new" "(" ")" ;
anonymous-function-parameter-modifier ::= "ref" | "out" ;
struct-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
property-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
empty-statement ::= ";" ;
class-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "abstract" | "sealed" | "static" ;
global-attribute-target ::= "assembly" | "module" ;
variance-annotation ::= "in" | "out" ;
interface-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
static-constructor-modifiers ::= ("extern"? "static") | ("static" "extern"?) ;
constructor-modifier ::= "public" | "protected" | "internal" | "private" | "extern" ;
event-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
field-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "readonly" | "volatile" ;
continue-statement ::= "continue" ";" ;
right-shift-assignment ::= ">>=" ;
ordering-direction ::= "ascending" | "descending" ;
indexer-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
enum-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
method-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
break-statement ::= "break" ";" ;
predefined-type ::= "bool" | "byte" | "char" | "decimal" | "double" | "float" | "int" | "long" | "object" | "sbyte" | "short" | "string" | "uint" | "ulong" | "ushort" ;
operator-modifier ::= "public" | "static" | "extern" ;
constant-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
--------------------cs::csharp-zaytsev.bgf--------------------
delegate-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
ref-or-out ::= "ref" | "out" ;
rank-specifier ::= "[" ","* "]" ;
integral-type ::= "sbyte" | "byte" | "short" | "ushort" | "int" | "uint" | "long" | "ulong" | "char" ;
parameter-modifier ::= "ref" | "out" ;
increment-decrement ::= "++" | "--" ;
struct-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
property-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
class-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "abstract" | "sealed" ;
interface-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
conversion-kind ::= "implicit" | "explicit" ;
static-constructor-modifiers ::= ("extern"? "static") | ("static" "extern") ;
constructor-modifier ::= "public" | "protected" | "internal" | "private" | "extern" ;
event-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
field-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "readonly" | "volatile" ;
continue-statement ::= "continue" ";" ;
built-in-class-type ::= "object" | "string" ;
indexer-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
assignment-operator ::= "=" | "+=" | "-=" | "*=" | "/=" | "%=" | "&=" | "|=" | "^=" | "<<=" | ">>=" ;
expression-shift-operator ::= "<<" | ">>" ;
enum-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
method-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
attribute-target ::= "field" | "event" | "method" | "module" | "param" | "property" | "return" | "type" ;
expression-equality-operator ::= "==" | "!=" ;
break-statement ::= "break" ";" ;
predefined-type ::= "bool" | "byte" | "char" | "decimal" | "double" | "float" | "int" | "long" | "object" | "sbyte" | "short" | "string" | "uint" | "ulong" | "ushort" ;
operator-modifier ::= "public" | "static" | "extern" ;
constant-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
--------------------cs::csharp-bruneliere.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------cs::csharp-cordy.bgf--------------------
overloadable_unary_operator ::= "+" | "-" | "!" | "~" | "++" | "--" | "true" | "false" ;
ascending_descending ::= "ascending" | "descending" ;
class_modifier ::= "new" | "public" | "protected" | "internal" | "private" | "abstract" | "sealed" | "static" ;
 class_modifier ::= "unsafe" ;
interface_modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
 interface_modifier ::= "unsafe" ;
generic_dimension_specifier ::= "<" ","* ">" ;
empty_statement ::= ";" ;
constructor_modifier ::= "public" | "protected" | "internal" | "private" | "extern" ;
 constructor_modifier ::= "unsafe" ;
event_modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
 event_modifier ::= "unsafe" ;
field_modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "readonly" | "volatile" ;
 field_modifier ::= "unsafe" ;
boolean_literal ::= "true" | "false" ;
overloadable_binary_operator ::= "+" | "-" | "*" | "/" | "%" | "&" | "|" | "^" | "<<" | ">>" | "==" | "!=" | ">" | "<" | ">=" | "<=" ;
indexer_modifier ::= "new" | "public" | "protected" | "internal" | "private" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
 indexer_modifier ::= "unsafe" ;
null_literal ::= "null" ;
assignment_operator ::= "=" | "+=" | "-=" | "*=" | "/=" | "%=" | "&=" | "|=" | "^=" | "<<=" | ">>=" ;
enum_modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
method_modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" | "partial" ;
 method_modifier ::= "unsafe" ;
post_increment_operator ::= "++" ;
predefined_type ::= "bool" | "byte" | "char" | "decimal" | "double" | "float" | "int" | "long" | "object" | "sbyte" | "short" | "string" | "uint" | "ulong" | "ushort" ;
operator_modifier ::= "public" | "static" | "extern" ;
 operator_modifier ::= "unsafe" ;
constant_modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
delegate_modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
 delegate_modifier ::= "unsafe" ;
accessor_modifier ::= "protected" | "internal" | "private" | ("protected" "internal") | ("internal" "protected") ;
post_decrement_operator ::= "--" ;
parameter_modifier ::= "ref" | "out" ;
integral_type ::= "sbyte" | "byte" | "short" | "ushort" | "int" | "uint" | "long" | "ulong" | "char" ;
rank_specifier ::= "[" ","* "]" ;
static_constructor_modifiers ::= ("extern"? "static") | ("static" "extern"?) ;
 static_constructor_modifiers ::= ("extern"? "unsafe"? "static") | ("unsafe"? "extern"? "static") | ("extern"? "static" "unsafe"?) | ("unsafe"? "static" "extern"?) | ("static" "extern"? "unsafe"?) | ("static" "unsafe"? "extern"?) ;
this_access ::= "this" ;
constructor_constraint ::= "new" "(" ")" ;
floating_point_type ::= "float" | "double" ;
struct_modifier ::= "new" | "public" | "proctected" | "internal" | "private" ;
 struct_modifier ::= "unsafe" ;
property_modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
 property_modifier ::= "unsafe" ;
--------------------cs::csharp-ecma-334-1.bgf--------------------
delegate-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
floating-point-type ::= "float" | "double" ;
overloadable-unary-operator ::= "+" | "-" | "!" | "~" | "++" | "--" | "true" | "false" ;
parameter-modifier ::= "ref" | "out" ;
integral-type ::= "sbyte" | "byte" | "short" | "ushort" | "int" | "uint" | "long" | "ulong" | "char" ;
overloadable-binary-operator ::= "+" | "-" | "*" | "/" | "%" | "&" | "|" | "^" | "<<" | ">>" | "==" | "!=" | ">" | "<" | ">=" | "<=" ;
this-access ::= "this" ;
struct-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
property-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
empty-statement ::= ";" ;
global-attribute-target ::= "assembly" ;
class-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "abstract" | "sealed" ;
interface-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
static-constructor-modifiers ::= ("extern"? "static") | ("static" "extern"?) ;
constructor-modifier ::= "public" | "protected" | "internal" | "private" | "extern" ;
event-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
field-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "readonly" | "volatile" ;
continue-statement ::= "continue" ";" ;
indexer-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
assignment-operator ::= "=" | "+=" | "-=" | "*=" | "/=" | "%=" | "&=" | "|=" | "^=" | "<<=" | ">>=" ;
enum-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
method-modifier ::= "new" | "public" | "protected" | "internal" | "private" | "static" | "virtual" | "sealed" | "override" | "abstract" | "extern" ;
break-statement ::= "break" ";" ;
predefined-type ::= "bool" | "byte" | "char" | "decimal" | "double" | "float" | "int" | "long" | "object" | "sbyte" | "short" | "string" | "uint" | "ulong" | "ushort" ;
operator-modifier ::= "public" | "static" | "extern" ;
constant-modifier ::= "new" | "public" | "protected" | "internal" | "private" ;
--------------------dart::spec-0.01.bgf--------------------
equalityOperator ::= "==" | "!=" | "===" | "!==" ;
compoundAssignmentOperator ::= "*=" | "/=" | "~/=" | "%=" | "+=" | "-=" | "<<=" | (">" ">" ">" "="?) | ("<" "<" "="?) | "&=" | "^=" | "|=" ;
MULTI_LINE_COMMENT ::= "/*" α* ;
multiplicativeOperator ::= "*" | "/" | "%" | "~/" ;
MULTI_LINE_STRING ::= (""""" α* """"") | ("'''" α* "'''") ;
thisExpression ::= "this" ;
bitwiseOperator ::= "&" | "^" | "|" ;
NEWLINE ::= "\n" | "\r" ;
incrementOperator ::= "++" | "--" ;
additiveOperator ::= "+" | "-" ;
isOperator ::= "is" "!"? ;
DIGIT ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;
relationalOperator ::= ">=" | ">" | "<=" | "<" ;
getOrSet ::= "get" | "set" ;
nullLiteral ::= "null" ;
booleanLiteral ::= "true" | "false" ;
LETTER ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ;
shiftOperator ::= "<<" | ">>>" | ">>" ;
negateOperator ::= "!" | "~" ;
BUILT_IN_IDENTIFIER ::= "abstract" | "assert" | "class" | "extends" | "factory" | "get" | "implements" | "import" | "interface" | "is" | "library" | "negate" | "operator" | "set" | "source" | "static" | "typedef" ;
--------------------dart::google.bgf--------------------
equalityOperator ::= "==" | "!=" | "===" | "!==" ;
ELSE ::= "else" ;
EXTENDS ::= "extends" ;
GET ::= "get" ;
bitwiseOperator ::= "&" | "^" | "|" ;
SWITCH ::= "switch" ;
NEWLINE ::= "\n" | "\r" ;
incrementOperator ::= "++" | "--" ;
STRING_CONTENT_SQ ::= α | ("\\" α) ;
RETURN ::= "return" ;
CASE ::= "case" ;
NUMBER_OPT_ILLEGAL_END ::= ε ;
IMPLEMENTS ::= "implements" ;
STATIC ::= "static" ;
relationalOperator ::= ">=" | ">" | "<=" | "<" ;
TYPEDEF ::= "typedef" ;
IS ::= "is" ;
FACTORY ::= "factory" ;
FOR ::= "for" ;
CONTINUE ::= "continue" ;
LETTER ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ;
IN ::= "in" ;
IMPORT ::= "import" ;
OPERATOR ::= "operator" ;
FINALLY ::= "finally" ;
ABSTRACT ::= "abstract" ;
DEFAULT ::= "default" ;
STRING_CONTENT_DQ ::= α | ("\\" α) ;
BREAK ::= "break" ;
THIS ::= "this" ;
IF ::= "if" ;
CATCH ::= "catch" ;
TRY ::= "try" ;
SUPER ::= "super" ;
SOURCE ::= "source" ;
LIBRARY ::= "library" ;
multiplicativeOperator ::= "*" | "/" | "%" | "~/" ;
INTERFACE ::= "interface" ;
CLASS ::= "class" ;
NATIVE ::= "native" ;
FINAL ::= "final" ;
MULTI_LINE_STRING ::= (""""" α* """"") | ("\'\'\'" α* "\'\'\'") ;
VOID ::= "void" ;
assignmentOperator ::= "=" | "*=" | "/=" | "~/=" | "%=" | "+=" | "-=" | "<<=" | ">>>=" | ">>=" | "&=" | "^=" | "|=" ;
WHILE ::= "while" ;
additiveOperator ::= "+" | "-" ;
TRUE ::= "true" ;
DIGIT ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;
DO ::= "do" ;
VAR ::= "var" ;
NULL ::= "null" ;
shiftOperator ::= "<<" | ">>>" | ">>" ;
negateOperator ::= "!" | "~" ;
THROW ::= "throw" ;
ASSERT ::= "assert" ;
CONST ::= "const" ;
FALSE ::= "false" ;
NEGATE ::= "negate" ;
SET ::= "set" ;
NEW ::= "new" ;
--------------------dart::spec-0.05.bgf--------------------
equalityOperator ::= "==" | "!=" | "===" | "!==" ;
compoundAssignmentOperator ::= "*=" | "/=" | "~/=" | "%=" | "+=" | "-=" | "<<=" | ">>>=" | ">>=" | "&=" | "^=" | "|=" ;
multiplicativeOperator ::= "*" | "/" | "%" | "~/" ;
MULTI_LINE_STRING ::= (""""" ("~" """"")* """"") | ("'''" ("~" "'''")* "'''") ;
thisExpression ::= "this" ;
bitwiseOperator ::= "&" | "^" | "|" ;
NEWLINE ::= "\n" | "\r" ;
incrementOperator ::= "++" | "--" ;
additiveOperator ::= "+" | "-" ;
isOperator ::= "is" "!"? ;
DIGIT ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;
relationalOperator ::= ">=" | ">" | "<=" | "<" ;
getOrSet ::= "get" | "set" ;
nullLiteral ::= "null" ;
IDENTIFIER_START_NO_DOLLAR ::= "LETTER" | "_" ;
booleanLiteral ::= "true" | "false" ;
shiftOperator ::= "<<" | ">>>" | ">>" ;
negateOperator ::= "!" | "~" ;
--------------------eiffel::bezault.bgf--------------------
Deferred ::= "deferred" ;
Unary ::= "not" | "+" | "-" ;
Header_mark ::= "deferred" | "expanded" | "separate" ;
Sign ::= "+" | "-" ;
Boolean_constant ::= "True" | "False" ;
Comparison ::= "=" | "/=" ;
Retry ::= "retry" ;
Routine_mark ::= "do" | "once" ;
Null_instruction ::= ε ;
Binary ::= "+" | "-" | "*" | "/" | "<" | ">" | "<=" | ">=" | "//" | "\\" | "^" | "and" | "or" | "xor" | ("and" "then") | ("or" "else") | "implies" ;
Unique ::= "Unique" ;
--------------------eiffel::cordy.bgf--------------------
Unary ::= "not" | "+" | "-" ;
Header_mark ::= "deferred" | "expanded" ;
Sign ::= "+" | "-" ;
Boolean_constant ::= "true" | "false" ;
Comparison ::= "=" | "/=" ;
Retry ::= "retry" ;
Routine_mark ::= "do" | "once" ;
Unique ::= "unique" ;
Binary ::= "+" | "-" | "*" | "/" | "<" | ">" | "<=" | ">=" | "//" | "\\" | "^" | "and" | "or" | "xor" | ("and" "then") | ("or" "else") | "implies" ;
--------------------eiffel::iso-25436-2006.bgf--------------------
Deferred ::= "deferred" ;
Header_mark ::= "deferred" | "expanded" | "frozen" ;
Digit ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "a" | "b" | "c" | "d" | "e" | "f" | "A" | "B" | "C" | "D" | "E" | "F" | "_" ;
Sign ::= "+" | "-" ;
Boolean_constant ::= "True" | "False" ;
Comparison ::= "=" | "/=" | "~" | "/~" ;
Attachment_mark ::= "?" | "!" ;
Retry ::= "retry" ;
Bracket ::= "[]" ;
Integer_base_letter ::= "b" | "c" | "x" | "B" | "C" | "X" ;
Open_bracket ::= "[" | "{" ;
Non_conformance ::= "{" "NONE" "}" ;
Close_bracket ::= "]" | "}" ;
--------------------fortran::derricks.bgf--------------------
GoToKw ::= "go" "to" ;
AccessSpec ::= "public" | "private" ;
BlankInterpEditDescr ::= "BN" | "BZ" ;
DeferredShapeSpec ::= ":" ;
Sign ::= "+" | "-" ;
SignEditDescr ::= "S" | "SP" | "SS" ;
RelOp ::= "==" | "/=" | "<" | "<=" | ">" | ">=" | ".eq." | ".ne." | ".lt." | ".le." | ".gt." | ".ge." ;
AndOp ::= ".and." ;
IntentSpec ::= "in" | "out" | ("in" "out") ;
EquivOp ::= ".eqv." | ".neqv." ;
PowerOp ::= "**" ;
ConcatOp ::= "//" ;
NotOp ::= ".not." ;
OrOp ::= ".or." ;
AddOp ::= "+" | "-" ;
MultOp ::= "*" | "/" ;
--------------------fortran::waite-cordy.bgf--------------------
AccessSpec ::= "public" | "private" ;
GoToKw ::= "goto" ;
 GoToKw ::= "go" "to" ;
DeferredShapeSpec ::= ":" ;
Sign ::= "+" | "-" ;
IntentSpec ::= "in" | "out" | "inout" ;
Formatsep ::= "/" | ":" ;
PlusMinus ::= "+" | "-" ;
PowerOp ::= "**" ;
AddOp ::= "+" | "-" ;
MultOp ::= "*" | "/" ;
ColonColon ::= "::" ;
--------------------java::java-1-jls-impl.bgf--------------------
Modifier ::= "public" ;
 Modifier ::= "protected" ;
 Modifier ::= "private" ;
 Modifier ::= "static" ;
 Modifier ::= "abstract" ;
 Modifier ::= "final" ;
 Modifier ::= "native" ;
 Modifier ::= "synchronized" ;
 Modifier ::= "transient" ;
 Modifier ::= "volatile" ;
IntegralType ::= "byte" ;
 IntegralType ::= "short" ;
 IntegralType ::= "int" ;
 IntegralType ::= "long" ;
 IntegralType ::= "char" ;
FloatingPointType ::= "float" ;
 FloatingPointType ::= "double" ;
EmptyStatement ::= ";" ;
AssignmentOperator ::= "=" ;
 AssignmentOperator ::= "*=" ;
 AssignmentOperator ::= "/=" ;
 AssignmentOperator ::= "%=" ;
 AssignmentOperator ::= "+=" ;
 AssignmentOperator ::= "-=" ;
 AssignmentOperator ::= "<<=" ;
 AssignmentOperator ::= ">>=" ;
 AssignmentOperator ::= ">>>=" ;
 AssignmentOperator ::= "&=" ;
 AssignmentOperator ::= "^=" ;
 AssignmentOperator ::= "|=" ;
--------------------java::java-1-jls-read.bgf--------------------
ClassModifier ::= "public" ;
 ClassModifier ::= "abstract" ;
 ClassModifier ::= "final" ;
ConstantModifier ::= "public" ;
 ConstantModifier ::= "static" ;
 ConstantModifier ::= "final" ;
AbstractMethodModifier ::= "public" ;
 AbstractMethodModifier ::= "abstract" ;
MethodModifier ::= "public" ;
 MethodModifier ::= "protected" ;
 MethodModifier ::= "private" ;
 MethodModifier ::= "abstract" ;
 MethodModifier ::= "static" ;
 MethodModifier ::= "final" ;
 MethodModifier ::= "synchronized" ;
 MethodModifier ::= "native" ;
IntegralType ::= "byte" ;
 IntegralType ::= "short" ;
 IntegralType ::= "int" ;
 IntegralType ::= "long" ;
 IntegralType ::= "char" ;
FloatingPointType ::= "float" ;
 FloatingPointType ::= "double" ;
EmptyStatement ::= ";" ;
FieldModifier ::= "public" ;
 FieldModifier ::= "protected" ;
 FieldModifier ::= "private" ;
 FieldModifier ::= "final" ;
 FieldModifier ::= "static" ;
 FieldModifier ::= "transient" ;
 FieldModifier ::= "volatile" ;
ConstructorModifier ::= "public" ;
 ConstructorModifier ::= "protected" ;
 ConstructorModifier ::= "private" ;
AssignmentOperator ::= "=" ;
 AssignmentOperator ::= "*=" ;
 AssignmentOperator ::= "/=" ;
 AssignmentOperator ::= "%=" ;
 AssignmentOperator ::= "+=" ;
 AssignmentOperator ::= "-=" ;
 AssignmentOperator ::= "<<=" ;
 AssignmentOperator ::= ">>=" ;
 AssignmentOperator ::= ">>>=" ;
 AssignmentOperator ::= "&=" ;
 AssignmentOperator ::= "^=" ;
 AssignmentOperator ::= "|=" ;
InterfaceModifier ::= "public" ;
 InterfaceModifier ::= "abstract" ;
--------------------java::java-2-jls-impl.bgf--------------------
BracketsOpt ::= ("[" "]")* ;
BasicType ::= "byte" ;
 BasicType ::= "short" ;
 BasicType ::= "char" ;
 BasicType ::= "int" ;
 BasicType ::= "long" ;
 BasicType ::= "float" ;
 BasicType ::= "double" ;
 BasicType ::= "boolean" ;
Modifier ::= "public" ;
 Modifier ::= "protected" ;
 Modifier ::= "private" ;
 Modifier ::= "static" ;
 Modifier ::= "abstract" ;
 Modifier ::= "final" ;
 Modifier ::= "native" ;
 Modifier ::= "synchronized" ;
 Modifier ::= "transient" ;
 Modifier ::= "volatile" ;
 Modifier ::= "strictfp" ;
PostfixOp ::= "++" ;
 PostfixOp ::= "--" ;
PrefixOp ::= "++" ;
 PrefixOp ::= "--" ;
 PrefixOp ::= "!" ;
 PrefixOp ::= "~" ;
 PrefixOp ::= "+" ;
 PrefixOp ::= "-" ;
AssignmentOperator ::= "=" ;
 AssignmentOperator ::= "+=" ;
 AssignmentOperator ::= "-=" ;
 AssignmentOperator ::= "*=" ;
 AssignmentOperator ::= "/=" ;
 AssignmentOperator ::= "&=" ;
 AssignmentOperator ::= "|=" ;
 AssignmentOperator ::= "^=" ;
 AssignmentOperator ::= "%=" ;
 AssignmentOperator ::= "<<=" ;
 AssignmentOperator ::= ">>=" ;
 AssignmentOperator ::= ">>>=" ;
Infixop ::= "||" ;
 Infixop ::= "&&" ;
 Infixop ::= "|" ;
 Infixop ::= "^" ;
 Infixop ::= "&" ;
 Infixop ::= "==" ;
 Infixop ::= "!=" ;
 Infixop ::= "<" ;
 Infixop ::= ">" ;
 Infixop ::= "<=" ;
 Infixop ::= ">=" ;
 Infixop ::= "<<" ;
 Infixop ::= ">>" ;
 Infixop ::= ">>>" ;
 Infixop ::= "+" ;
 Infixop ::= "-" ;
 Infixop ::= "*" ;
 Infixop ::= "/" ;
 Infixop ::= "%" ;
--------------------java::jdt.bgf--------------------
ReturnStatement ::= expression::α ;
SimpleName ::= identifier::α declaration::α ;
ArrayAccess ::= array::α index::α ;
SwitchStatement ::= expression::α (statements::α)+ ;
MemberRef ::= name::α qualifier::α ;
MethodRefParameter ::= name::α type::α varargs::α ;
Modifier ::= abstract::α final::α native::α none::α private::α protected::α public::α static::α strictfp::α synchronized::α transient::α volatile::α ;
ThisExpression ::= qualifier::α ;
VariableDeclarationExpression ::= (fragments::α)+ (modifiers::α)+ type::α ;
TypeLiteral ::= type::α ;
ImportDeclaration ::= onDemand::α static::α name::α ;
PackageDeclaration ::= (annotations::α)+ javadoc::α name::α ;
ParameterizedType ::= type::α (typeArguments::α)+ ;
SingleMemberAnnotation ::= value::α ;
MethodInvocation ::= (arguments::α)+ expression::α name::α (typeArguments::α)+ ;
TextElement ::= text::α ;
TypeParameter ::= name::α (typeBounds::α)+ ;
Block ::= (statements::α)+ ;
Assignment ::= leftHandSide::α operator::α rightHandSide::α ;
PrefixExpression ::= operand::α operator::α ;
CatchClause ::= body::α exception::α ;
ArrayInitializer ::= (expressions::α)+ ;
ContinueStatement ::= label::α ;
InfixExpression ::= (extendedOperands::α)+ leftOperand::α operator::α rightOperand::α ;
CharacterLiteral ::= charValue::α escapedValue::α ;
AST ::= root::α ;
InfixExpressionOperatorKind ::= (GREATER_EQUALS::ε) | (OR::ε) | (RIGHT_SHIFT_SIGNED::ε) | (MINUS::ε) | (XOR::ε) | (LESS_EQUALS::ε) | (EQUALS::ε) | (NOT_EQUALS::ε) | (AND::ε) | (PLUS::ε) | (GREATER::ε) | (CONDITIONAL_OR::ε) | (REMAINDER::ε) | (LESS::ε) | (LEFT_SHIFT::ε) | (RIGHT_SHIFT_UNSIGNED::ε) | (CONDITIONAL_AND::ε) | (TIMES::ε) | (DIVIDE::ε) ;
WhileStatement ::= body::α expression::α ;
FieldAccess ::= expression::α name::α ;
EnhancedForStatement ::= body::α expression::α parameter::α ;
CastExpression ::= expression::α type::α ;
AnnotationTypeMemberDeclaration ::= default::α name::α type::α ;
SingleVariableDeclaration ::= type::α varargs::α (modifiers::α)+ ;
QualifiedType ::= name::α qualifier::α ;
EnumConstantDeclaration ::= (arguments::α)+ anonymousClassDeclaration::α name::α ;
WildcardType ::= bound::α upperBound::α ;
ParenthesizedExpression ::= expression::α ;
MethodRef ::= name::α qualifier::α (parameters::α)+ ;
VariableDeclarationStatement ::= (fragments::α)+ (modifiers::α)+ type::α ;
MemberValuePair ::= name::α value::α ;
BreakStatement ::= label::α ;
AnonymousClassDeclaration ::= (bodyDeclarations::α)+ ;
PostfixExpression ::= operand::α operator::α ;
SuperMethodInvocation ::= (arguments::α)+ name::α qualifier::α (typeArguments::α)+ ;
ThrowStatement ::= expression::α ;
CompilationUnit ::= (comments::α)+ package::α (imports::α)+ (types::α)+ ;
ForStatement ::= body::α expression::α (initializers::α)+ (updaters::α)+ ;
EmptyStatement ::= ε ;
Initializer ::= body::α ;
TypeDeclaration ::= superclassType::α interface::α (superInterfaceTypes::α)+ (typeParameters::α)+ ;
FieldDeclaration ::= (fragments::α)+ type::α ;
StringLiteral ::= escapedValue::α literalValue::α ;
LabeledStatement ::= body::α label::α ;
MethodDeclaration ::= body::α extraDimensions::α name::α returnType::α constructor::α varargs::α (parameters::α)+ (thrownExceptions::α)+ (typeParameters::α)+ ;
ArrayCreation ::= (dimensions::α)+ initializer::α type::α ;
Javadoc ::= (tags::α)+ ;
IfStatement ::= elseStatement::α expression::α thenStatement::α ;
BlockComment ::= alternateRoot::α ;
String ::= string() ;
VariableDeclarationFragment ::= extraDimensions::α initializer::α name::α ;
SimpleType ::= name::α ;
LineComment ::= alternateRoot::α ;
MarkerAnnotation ::= typeName::α ;
AssertStatement ::= expression::α message::α ;
QualifiedName ::= name::α qualifier::α ;
SwitchCase ::= expression::α default::α ;
SuperFieldAccess ::= name::α qualifier::α ;
TagElement ::= (fragments::α)+ tagName::α nested::α ;
PrimitiveType ::= code::α ;
ConditionalExpression ::= elseExpression::α expression::α thenExpression::α ;
Integer ::= integer() ;
SynchronizedStatement ::= body::α expression::α ;
EnumDeclaration ::= (superInterfaceTypes::α)+ (enumConstants::α)+ ;
ExpressionStatement ::= expression::α ;
NormalAnnotation ::= (values::α)+ ;
TryStatement ::= (catchClauses::α)+ body::α finally::α ;
ArrayType ::= componentType::α dimensions::α elementType::α ;
AnnotationTypeDeclaration ::= (bodyDeclarations::α)+ name::α localTypeDeclaration::α memberTypeDeclaration::α packageMemberTypeDeclaration::α ;
TypeDeclarationStatement ::= declaration::α ;
SuperConstructorInvocation ::= (arguments::α)+ expression::α (typeArguments::α)+ ;
ClassInstanceCreation ::= (arguments::α)+ anonymousClassDeclaration::α expression::α type::α (typeArguments::α)+ ;
AssignementOperatorKind ::= (RIGHT_SHIFT_SIGNED_ASSIGN::ε) | (BIT_XOR_ASSIGN::ε) | (TIMES_ASSIGN::ε) | (LEFT_SHIFT_ASSIGN::ε) | (MINUS_ASSIGN::ε) | (BIT_OR_ASSIGN::ε) | (PLUS_ASSIGN::ε) | (ASSIGN::ε) | (RIGHT_SHIFT_UNSIGNED_ASSIGN::ε) | (REMAINDER_ASSIGN::ε) | (DIVIDE_ASSIGN::ε) | (BIT_AND_ASSIGN::ε) ;
PrefixExpresssionOperatorKind ::= (MINUS::ε) | (NOT::ε) | (DECREMENT::ε) | (COMPLEMENT::ε) | (INCREMENT::ε) | (PLUS::ε) ;
ConstructorInvocation ::= (arguments::α)+ (typeArguments::α)+ ;
PostfixExpresssionOperatorKind ::= (INCREMENT::ε) | (DECREMENT::ε) ;
NullLiteral ::= resolveBoxing::α resolveUnboxing::α ;
Boolean ::= "true" | "false" ;
BooleanLiteral ::= booleanValue::α ;
NumberLiteral ::= token::α ;
DoStatement ::= body::α expression::α ;
InstanceofExpression ::= leftOperand::α rightOperand::α ;
--------------------java::java-2-jls-read.bgf--------------------
ClassModifier ::= "public" ;
 ClassModifier ::= "protected" ;
 ClassModifier ::= "private" ;
 ClassModifier ::= "abstract" ;
 ClassModifier ::= "static" ;
 ClassModifier ::= "final" ;
 ClassModifier ::= "strictfp" ;
ConstantModifier ::= "public" ;
 ConstantModifier ::= "static" ;
 ConstantModifier ::= "final" ;
AbstractMethodModifier ::= "public" ;
 AbstractMethodModifier ::= "abstract" ;
MethodModifier ::= "public" ;
 MethodModifier ::= "protected" ;
 MethodModifier ::= "private" ;
 MethodModifier ::= "abstract" ;
 MethodModifier ::= "static" ;
 MethodModifier ::= "final" ;
 MethodModifier ::= "synchronized" ;
 MethodModifier ::= "native" ;
 MethodModifier ::= "strictfp" ;
IntegralType ::= "byte" ;
 IntegralType ::= "short" ;
 IntegralType ::= "int" ;
 IntegralType ::= "long" ;
 IntegralType ::= "char" ;
FloatingPointType ::= "float" ;
 FloatingPointType ::= "double" ;
EmptyStatement ::= ";" ;
FieldModifier ::= "public" ;
 FieldModifier ::= "protected" ;
 FieldModifier ::= "private" ;
 FieldModifier ::= "static" ;
 FieldModifier ::= "final" ;
 FieldModifier ::= "transient" ;
 FieldModifier ::= "volatile" ;
ConstructorModifier ::= "public" ;
 ConstructorModifier ::= "protected" ;
 ConstructorModifier ::= "private" ;
AssignmentOperator ::= "=" ;
 AssignmentOperator ::= "*=" ;
 AssignmentOperator ::= "/=" ;
 AssignmentOperator ::= "%=" ;
 AssignmentOperator ::= "+=" ;
 AssignmentOperator ::= "-=" ;
 AssignmentOperator ::= "<<=" ;
 AssignmentOperator ::= ">>=" ;
 AssignmentOperator ::= ">>>=" ;
 AssignmentOperator ::= "&=" ;
 AssignmentOperator ::= "^=" ;
 AssignmentOperator ::= "|=" ;
InterfaceModifier ::= "public" ;
 InterfaceModifier ::= "protected" ;
 InterfaceModifier ::= "private" ;
 InterfaceModifier ::= "abstract" ;
 InterfaceModifier ::= "static" ;
 InterfaceModifier ::= "strictfp" ;
--------------------java::java-5-habelitz.bgf--------------------
GREATER_OR_EQUAL ::= ">=" ;
DIV_ASSIGN ::= "/=" ;
LONG ::= "long" ;
STAR_ASSIGN ::= "*=" ;
DOTSTAR ::= ".*" ;
LOGICAL_OR ::= "||" ;
EXTENDS ::= "extends" ;
AND_ASSIGN ::= "&=" ;
XOR_ASSIGN ::= "^=" ;
FLOAT_TYPE_SUFFIX ::= "f" | "F" | "d" | "D" ;
DIV ::= "/" ;
ASSIGN ::= "=" ;
STATIC ::= "static" ;
SEMI ::= ";" ;
MOD_ASSIGN ::= "%=" ;
TRANSIENT ::= "transient" ;
PUBLIC ::= "public" ;
GREATER_THAN ::= ">" ;
QUESTION ::= "?" ;
OR ::= "|" ;
FINALLY ::= "finally" ;
PRIVATE ::= "private" ;
MOD ::= "%" ;
DEC ::= "--" ;
LOGICAL_AND ::= "&&" ;
LCURLY ::= "{" ;
BIT_SHIFT_RIGHT_ASSIGN ::= ">>>=" ;
BREAK ::= "break" ;
SHIFT_RIGHT ::= ">>" ;
LOGICAL_NOT ::= "!" ;
SHORT ::= "short" ;
SUPER ::= "super" ;
CLASS ::= "class" ;
RPAREN ::= ")" ;
FINAL ::= "final" ;
CHAR ::= "char" ;
INTEGER_TYPE_SUFFIX ::= "l" | "L" ;
STRICTFP ::= "strictfp" ;
STAR ::= "*" ;
ELLIPSIS ::= "..." ;
DOUBLE ::= "double" ;
MINUS ::= "-" ;
INT ::= "int" ;
SHIFT_RIGHT_ASSIGN ::= ">>=" ;
THROWS ::= "throws" ;
LBRACK ::= "[" ;
OR_ASSIGN ::= "|=" ;
SHIFT_LEFT_ASSIGN ::= "<<=" ;
HEX_DIGIT ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "a" | "b" | "c" | "d" | "e" | "f" | "A" | "B" | "C" | "D" | "E" | "F" ;
THROW ::= "throw" ;
ASSERT ::= "assert" ;
SHIFT_LEFT ::= "<<" ;
COLON ::= ":" ;
INC ::= "++" ;
MINUS_ASSIGN ::= "-=" ;
FLOAT ::= "float" ;
XOR ::= "^" ;
ELSE ::= "else" ;
AND ::= "&" ;
COMMA ::= "," ;
SWITCH ::= "switch" ;
PLUS_ASSIGN ::= "+=" ;
NOT ::= "~" ;
AT ::= "@" ;
RETURN ::= "return" ;
CASE ::= "case" ;
IMPLEMENTS ::= "implements" ;
EXPONENT ::= "e" | "E" ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
INSTANCEOF ::= "instanceof" ;
FOR ::= "for" ;
DOT ::= "." ;
CONTINUE ::= "continue" ;
PACKAGE ::= "package" ;
IMPORT ::= "import" ;
ABSTRACT ::= "abstract" ;
DEFAULT ::= "default" ;
LESS_OR_EQUAL ::= "<=" ;
THIS ::= "this" ;
LPAREN ::= "(" ;
IF ::= "if" ;
VOLATILE ::= "volatile" ;
CATCH ::= "catch" ;
TRY ::= "try" ;
RCURLY ::= "}" ;
JAVA_ID_START ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ;
PLUS ::= "+" ;
INTERFACE ::= "interface" ;
NATIVE ::= "native" ;
OCTAL_ESCAPE ::= ("0" | "1" | "2" | "3" "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7") | ("\\" "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7") | ("\\" "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7") ;
EQUAL ::= "==" ;
VOID ::= "void" ;
SYNCHRONIZED ::= "synchronized" ;
WHILE ::= "while" ;
PROTECTED ::= "protected" ;
TRUE ::= "true" ;
BIT_SHIFT_RIGHT ::= ">>>" ;
DO ::= "do" ;
NOT_EQUAL ::= "!=" ;
BYTE ::= "byte" ;
BOOLEAN ::= "boolean" ;
LESS_THAN ::= "<" ;
RBRACK ::= "]" ;
NULL ::= "null" ;
FALSE ::= "false" ;
ENUM ::= "enum" ;
NEW ::= "new" ;
--------------------java::java-5-jls-impl.bgf--------------------
BasicType ::= "byte" ;
 BasicType ::= "short" ;
 BasicType ::= "char" ;
 BasicType ::= "int" ;
 BasicType ::= "long" ;
 BasicType ::= "float" ;
 BasicType ::= "double" ;
 BasicType ::= "boolean" ;
PostfixOp ::= "++" ;
 PostfixOp ::= "--" ;
PrefixOp ::= "++" ;
 PrefixOp ::= "--" ;
 PrefixOp ::= "!" ;
 PrefixOp ::= "~" ;
 PrefixOp ::= "+" ;
 PrefixOp ::= "-" ;
InfixOp ::= "||" ;
 InfixOp ::= "&&" ;
 InfixOp ::= "|" ;
 InfixOp ::= "^" ;
 InfixOp ::= "&" ;
 InfixOp ::= "==" ;
 InfixOp ::= "!=" ;
 InfixOp ::= "<" ;
 InfixOp ::= ">" ;
 InfixOp ::= "<=" ;
 InfixOp ::= ">=" ;
 InfixOp ::= "<<" ;
 InfixOp ::= ">>" ;
 InfixOp ::= ">>>" ;
 InfixOp ::= "+" ;
 InfixOp ::= "-" ;
 InfixOp ::= "*" ;
 InfixOp ::= "/" ;
 InfixOp ::= "%" ;
AssignmentOperator ::= "=" ;
 AssignmentOperator ::= "+=" ;
 AssignmentOperator ::= "-=" ;
 AssignmentOperator ::= "*=" ;
 AssignmentOperator ::= "/=" ;
 AssignmentOperator ::= "&=" ;
 AssignmentOperator ::= "|=" ;
 AssignmentOperator ::= "^=" ;
 AssignmentOperator ::= "%=" ;
 AssignmentOperator ::= "<<=" ;
 AssignmentOperator ::= ">>=" ;
 AssignmentOperator ::= ">>>=" ;
--------------------java::java-5-jls-read.bgf--------------------
IntegralType ::= "byte" ;
 IntegralType ::= "short" ;
 IntegralType ::= "int" ;
 IntegralType ::= "long" ;
 IntegralType ::= "char" ;
FloatingPointType ::= "float" ;
 FloatingPointType ::= "double" ;
EmptyStatement ::= ";" ;
AssignmentOperator ::= "=" ;
 AssignmentOperator ::= "*=" ;
 AssignmentOperator ::= "/=" ;
 AssignmentOperator ::= "%=" ;
 AssignmentOperator ::= "+=" ;
 AssignmentOperator ::= "-=" ;
 AssignmentOperator ::= "<<=" ;
 AssignmentOperator ::= ">>=" ;
 AssignmentOperator ::= ">>>=" ;
 AssignmentOperator ::= "&=" ;
 AssignmentOperator ::= "^=" ;
 AssignmentOperator ::= "|=" ;
--------------------java::jvm-level0.bgf--------------------
Instruction ::= (fieldRef::(opcode::integer() owner::string() name::string() description::string())) | (increment::(index::integer() amount::integer())) | (instruction::(opcode::integer())) | (integer::(opcode::integer() operand::integer())) | (jump::(opcode::integer() labelIndex::integer())) | (label::(index::integer())) | (lineNumber::(line::integer() labelIndex::integer())) | (localVariable::(opcode::integer() index::integer())) | (loadConstantString::(stringValue::string())) | (loadConstantInteger::(integerValue::integer())) | (loadConstantLong::(longValue::integer())) | (loadConstantFloat::(floatValue::integer())) | (loadConstantDouble::(doubleValue::integer())) | (lookupSwitch::(defaultLabelIndex::integer() keys::(integer()*) cases::(integer()*))) | (method::(opcode::integer() owner::string() name::string() description::string())) | (multiANewArray::(description::string() dimensions::integer())) | (tableSwitch::(minIndex::integer() maxIndex::integer() defaultLabelIndex::integer() cases::(integer()*))) | (type::(opcode::integer() description::string())) ;
TryCatchBlock ::= (tryCatchBlock::(startLabelIndex::integer() endLabelIndex::integer() handlerLabelIndex::integer() type::string())) | (finallyBlock::(startLabelIndex::integer() endLabelIndex::integer() handlerLabelIndex::integer())) ;
Field ::= (field::(access::integer() name::string() description::string() signature::string() value::α)) | (field::(access::integer() name::string() description::string() signature::string())) ;
LocalVariable ::= localVariable::(name::string() description::string() signature::string() startLabelIndex::integer() endLabelIndex::integer() index::integer()) ;
InnerClass ::= (innerClass::(name::string() outerName::string() innerName::string() access::integer())) | (innerClass::(name::string() access::integer())) ;
--------------------java::java-5-parr.bgf--------------------
Exponent ::= "e" | "E" ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
OctalEscape ::= ("\\" "0" | "1" | "2" | "3" "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7") | ("\\" "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7") | ("\\" "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7") ;
IntegerTypeSuffix ::= "l" | "L" ;
relationalOp ::= (t1::"<" t2::("="?)) | (t1::">" t2::("="?)) | "<" | ">" ;
booleanLiteral ::= "true" | "false" ;
FloatTypeSuffix ::= "f" | "F" | "d" | "D" ;
ASSERT ::= "assert" ;
Letter ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ;
shiftOp ::= (t1::"<" t2::("<"?)) | (t1::">" t2::">" t3::">") | (t1::">" t2::(">"?)) ;
HexDigit ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "a" | "b" | "c" | "d" | "e" | "f" | "A" | "B" | "C" | "D" | "E" | "F" ;
ENUM ::= "enum" ;
assignmentOperator ::= "=" | "+=" | "-=" | "*=" | "/=" | "&=" | "|=" | "^=" | "%=" | (t1::"<" t2::"<" t3::"=") | (t1::">" t2::">" t3::">" t4::("="?)) | (t1::">" t2::">" t3::"=") ;
primitiveType ::= "boolean" | "char" | "byte" | "short" | "int" | "long" | "float" | "double" ;
JavaIDDigit ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ;
--------------------java::java-5-stahl.bgf--------------------
COLON ::= ":" ;
INC ::= "++" ;
MINUS_ASSIGN ::= "-=" ;
DIV_ASSIGN ::= "/=" ;
STAR_ASSIGN ::= "*=" ;
BXOR ::= "^" ;
LE ::= "<=" ;
BAND_ASSIGN ::= "&=" ;
BAND ::= "&" ;
NUM_LONG ::= ("1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* "l" | "L" ;
BXOR_ASSIGN ::= "^=" ;
COMMA ::= "," ;
FLOAT_SUFFIX ::= "f" | "F" | "d" | "D" ;
PLUS_ASSIGN ::= "+=" ;
AT ::= "@" ;
DIV ::= "/" ;
BNOT ::= "~" ;
LOR ::= "||" ;
EXPONENT ::= "e" | "E" ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
ASSIGN ::= "=" ;
SEMI ::= ";" ;
GT ::= ">" ;
MOD_ASSIGN ::= "%=" ;
LAND ::= "&&" ;
DOT ::= "." ;
LNOT ::= "!" ;
QUESTION ::= "?" ;
BOR ::= "|" ;
MOD ::= "%" ;
DEC ::= "--" ;
LCURLY ::= "{" ;
BSR ::= ">>>" ;
SR ::= ">>" ;
GE ::= ">=" ;
LPAREN ::= "(" ;
builtInType ::= "void" | "boolean" | "byte" | "char" | "short" | "int" | "float" | "long" | "double" ;
RCURLY ::= "}" ;
PLUS ::= "+" ;
SL ::= "<<" ;
RPAREN ::= ")" ;
modifier ::= "private" | "public" | "protected" | "static" | "transient" | "final" | "abstract" | "native" | "threadsafe" | "synchronized" | "volatile" | "strictfp" ;
SL_ASSIGN ::= "<<=" ;
EQUAL ::= "==" ;
STAR ::= "*" ;
ELLIPSIS ::= "..." ;
MINUS ::= "-" ;
IDENT ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "_" | "$" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "_" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "$")* ;
SR_ASSIGN ::= ">>=" ;
BSR_ASSIGN ::= ">>>=" ;
LBRACK ::= "[" ;
HEX_DIGIT ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "A" | "B" | "C" | "D" | "E" | "F" | "a" | "b" | "c" | "d" | "e" | "f" ;
BOR_ASSIGN ::= "|=" ;
NOT_EQUAL ::= "!=" ;
LT ::= "<" ;
RBRACK ::= "]" ;
ASSERT ::= "assert" ;
ENUM ::= "enum" ;
--------------------java::java-5-studman.bgf--------------------
COLON ::= ":" ;
INC ::= "++" ;
MINUS_ASSIGN ::= "-=" ;
DIV_ASSIGN ::= "/=" ;
STAR_ASSIGN ::= "*=" ;
BXOR ::= "^" ;
LE ::= "<=" ;
BAND_ASSIGN ::= "&=" ;
BAND ::= "&" ;
NUM_LONG ::= ("1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* "l" | "L" ;
BXOR_ASSIGN ::= "^=" ;
COMMA ::= "," ;
FLOAT_SUFFIX ::= "f" | "F" | "d" | "D" ;
PLUS_ASSIGN ::= "+=" ;
AT ::= "@" ;
DIV ::= "/" ;
BNOT ::= "~" ;
LOR ::= "||" ;
EXPONENT ::= "e" | "E" ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
ASSIGN ::= "=" ;
SEMI ::= ";" ;
GT ::= ">" ;
MOD_ASSIGN ::= "%=" ;
LAND ::= "&&" ;
DOT ::= "." ;
LNOT ::= "!" ;
QUESTION ::= "?" ;
BOR ::= "|" ;
MOD ::= "%" ;
DEC ::= "--" ;
LCURLY ::= "{" ;
BSR ::= ">>>" ;
SR ::= ">>" ;
GE ::= ">=" ;
LPAREN ::= "(" ;
builtInType ::= "void" | "boolean" | "byte" | "char" | "short" | "int" | "float" | "long" | "double" ;
RCURLY ::= "}" ;
PLUS ::= "+" ;
SL ::= "<<" ;
RPAREN ::= ")" ;
modifier ::= "private" | "public" | "protected" | "static" | "transient" | "final" | "abstract" | "native" | "threadsafe" | "synchronized" | "volatile" | "strictfp" ;
SL_ASSIGN ::= "<<=" ;
EQUAL ::= "==" ;
STAR ::= "*" ;
MINUS ::= "-" ;
IDENT ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "_" | "$" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "_" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "$")* ;
SR_ASSIGN ::= ">>=" ;
BSR_ASSIGN ::= ">>>=" ;
LBRACK ::= "[" ;
HEX_DIGIT ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "A" | "B" | "C" | "D" | "E" | "F" | "a" | "b" | "c" | "d" | "e" | "f" ;
BOR_ASSIGN ::= "|=" ;
NOT_EQUAL ::= "!=" ;
TRIPLE_DOT ::= "..." ;
LT ::= "<" ;
RBRACK ::= "]" ;
--------------------java::java-1-cordy-guo.bgf--------------------
add_op ::= "+" | "-" ;
shift_op ::= "<<" | ">>" | ">>>" ;
relational_op ::= "<" | ">" | "<=" | ">=" ;
boolean_literal ::= "true" | "false" ;
dot_star ::= "." "*" ;
null_literal ::= "null" ;
modifier ::= "abstract" | "final" | "public" | "protected" | "private" | "static" | "transient" | "volatile" | "native" | "synchronized" | "strictfp" ;
equality_op ::= "==" | "!=" ;
assignment_operator ::= "=" | "*=" | "/=" | "%=" | "+=" | "-=" | "<<=" | ">>=" | ">>>=" | "&=" | "^=" | "|=" ;
pre_inc_dec ::= "++" | "--" ;
post_inc_dec ::= "++" | "--" ;
primitive_type ::= "boolean" | "char" | "byte" | "short" | "int" | "long" | "float" | "double" | "void" ;
unary_op ::= "+" | "-" | "~" | "!" ;
mult_op ::= "*" | "/" | "%" ;
--------------------java::java-1-jouault.bgf--------------------
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------java::java-1-touzet.bgf--------------------
String ::= string() ;
--------------------java::java-3-bruneliere.bgf--------------------
Int ::= ε ;
Boolean ::= "true" | "false" ;
String ::= string() ;
Value ::= ε ;
--------------------java::java-4-sdf.bgf--------------------
Dim ::= "[" "]" ;
Modifier ::= "public" ;
 Modifier ::= "protected" ;
 Modifier ::= "private" ;
 Modifier ::= "static" ;
 Modifier ::= "abstract" ;
 Modifier ::= "final" ;
 Modifier ::= "native" ;
 Modifier ::= "synchronized" ;
 Modifier ::= "transient" ;
 Modifier ::= "volatile" ;
IntegralType ::= "byte" ;
 IntegralType ::= "short" ;
 IntegralType ::= "int" ;
 IntegralType ::= "long" ;
 IntegralType ::= "char" ;
FloatingPointType ::= "float" ;
 FloatingPointType ::= "double" ;
EmptyStatement ::= ";" ;
AssignmentOperator ::= "=" ;
 AssignmentOperator ::= "*=" ;
 AssignmentOperator ::= "/=" ;
 AssignmentOperator ::= "%=" ;
 AssignmentOperator ::= "+=" ;
 AssignmentOperator ::= "-=" ;
 AssignmentOperator ::= "<<=" ;
 AssignmentOperator ::= ">>=" ;
 AssignmentOperator ::= ">>>=" ;
 AssignmentOperator ::= "&=" ;
 AssignmentOperator ::= "^=" ;
 AssignmentOperator ::= "|=" ;
--------------------java::java-5-cordy-guo-dean.bgf--------------------
add_op ::= "+" | "-" ;
var_arg_specifier ::= "..." ;
relational_op ::= "<" | ">" | "<=" | ">=" ;
boolean_literal ::= "true" | "false" ;
dot_star ::= "." "*" ;
null_literal ::= "null" ;
equality_op ::= "==" | "!=" ;
pre_inc_dec ::= "++" | "--" ;
annot_marker ::= "@" ;
post_inc_dec ::= "++" | "--" ;
primitive_type ::= "boolean" | "char" | "byte" | "short" | "int" | "long" | "float" | "double" | "void" ;
unary_op ::= "+" | "-" | "~" | "!" ;
mult_op ::= "*" | "/" | "%" ;
--------------------java::java-5-giquel.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
EmptyStatement ::= ε ;
String ::= string() ;
--------------------java::java-5-landman.bgf--------------------
AbstractMethodMod ::= "abstract" ;
 AbstractMethodMod ::= "public" ;
StringLiteral ::= ε ;
ConstantMod ::= "static" ;
 ConstantMod ::= "public" ;
 ConstantMod ::= "final" ;
VarMod ::= "final" ;
Id ::= [id] ε ;
CharLiteral ::= ε ;
Modifier ::= "protected" ;
 Modifier ::= "private" ;
 Modifier ::= "volatile" ;
 Modifier ::= "synchronized" ;
 Modifier ::= "final" ;
 Modifier ::= "strictfp" ;
 Modifier ::= "transient" ;
 Modifier ::= "abstract" ;
 Modifier ::= "native" ;
 Modifier ::= "static" ;
 Modifier ::= "public" ;
FloatType ::= [double] "double" ;
 FloatType ::= [float] "float" ;
ConstrMod ::= "protected" ;
 ConstrMod ::= "private" ;
 ConstrMod ::= "public" ;
FloatLiteral ::= [float] ε ;
ClassMod ::= "abstract" ;
 ClassMod ::= "static" ;
 ClassMod ::= "public" ;
 ClassMod ::= "strictfp" ;
 ClassMod ::= "final" ;
 ClassMod ::= "private" ;
 ClassMod ::= "protected" ;
InterfaceMod ::= "public" ;
 InterfaceMod ::= "static" ;
 InterfaceMod ::= "abstract" ;
 InterfaceMod ::= "strictfp" ;
 InterfaceMod ::= "protected" ;
 InterfaceMod ::= "private" ;
IntType ::= [int] "int" ;
 IntType ::= [byte] "byte" ;
 IntType ::= [long] "long" ;
 IntType ::= [short] "short" ;
 IntType ::= [char] "char" ;
Dim ::= [dim] "[" "]" ;
NullLiteral ::= [null] "null" ;
FieldMod ::= "public" ;
 FieldMod ::= "static" ;
 FieldMod ::= "transient" ;
 FieldMod ::= "final" ;
 FieldMod ::= "volatile" ;
 FieldMod ::= "private" ;
 FieldMod ::= "protected" ;
BoolLiteral ::= [false] "false" ;
 BoolLiteral ::= [true] "true" ;
MethodMod ::= "final" ;
 MethodMod ::= "strictfp" ;
 MethodMod ::= "synchronized" ;
 MethodMod ::= "protected" ;
 MethodMod ::= "private" ;
 MethodMod ::= "static" ;
 MethodMod ::= "public" ;
 MethodMod ::= "abstract" ;
 MethodMod ::= "native" ;
DefaultVal ::= [defaultVal] "default" ;
IntLiteral ::= [octa] ε ;
 IntLiteral ::= [hexa] ε ;
 IntLiteral ::= [deci] ε ;
--------------------java::jvm-level1.bgf--------------------
Instruction ::= (getStatic::(owner::string() name::string() description::string())) | (putStatic::(owner::string() name::string() description::string())) | (getField::(owner::string() name::string() description::string())) | (putField::(owner::string() name::string() description::string())) | (increment::(index::integer() amount::integer())) | (nop::ε) | (aConstNull::ε) | (iConstM1::ε) | (iConst0::ε) | (iConst1::ε) | (iConst2::ε) | (iConst3::ε) | (iConst4::ε) | (iConst5::ε) | (lConst0::ε) | (lConst1::ε) | (fConst0::ε) | (fConst1::ε) | (fConst2::ε) | (dConst0::ε) | (dConst1::ε) | (iaLoad::ε) | (laLoad::ε) | (faLoad::ε) | (daLoad::ε) | (aaLoad::ε) | (baLoad::ε) | (caLoad::ε) | (saLoad::ε) | (iaStore::ε) | (laStore::ε) | (faStore::ε) | (daStore::ε) | (aaStore::ε) | (baStore::ε) | (caStore::ε) | (saStore::ε) | (pop::ε) | (pop2::ε) | (dup::ε) | (dupX1::ε) | (dupX2::ε) | (dup2::ε) | (dup2X1::ε) | (dup2X2::ε) | (swap::ε) | (iAdd::ε) | (lAdd::ε) | (fAdd::ε) | (dAdd::ε) | (iSub::ε) | (lSub::ε) | (fSub::ε) | (dSub::ε) | (iMul::ε) | (lMul::ε) | (fMul::ε) | (dMul::ε) | (iDiv::ε) | (lDiv::ε) | (fDiv::ε) | (dDiv::ε) | (iRem::ε) | (lRem::ε) | (fRem::ε) | (dRem::ε) | (iNeg::ε) | (lNeg::ε) | (fNeg::ε) | (dNeg::ε) | (iShl::ε) | (lShl::ε) | (iShr::ε) | (lShr::ε) | (iuShr::ε) | (luShr::ε) | (iAnd::ε) | (lAnd::ε) | (iOr::ε) | (lOr::ε) | (iXor::ε) | (lXor::ε) | (i2l::ε) | (i2f::ε) | (i2d::ε) | (l2i::ε) | (l2f::ε) | (l2d::ε) | (f2i::ε) | (f2l::ε) | (f2d::ε) | (d2i::ε) | (d2l::ε) | (d2f::ε) | (i2b::ε) | (i2c::ε) | (i2s::ε) | (lCmp::ε) | (fCmpL::ε) | (fCmpG::ε) | (dCmpL::ε) | (dCmpH::ε) | (iReturn::ε) | (lReturn::ε) | (fReturn::ε) | (dReturn::ε) | (aReturn::ε) | (return::ε) | (arrayLength::ε) | (aThrow::ε) | (monitorEnter::ε) | (monitorExit::ε) | (biPush::(operand::integer())) | (siPush::(operand::integer())) | (newArray::(operand::integer())) | (ifEq::(label::integer())) | (ifNe::(label::integer())) | (ifLt::(label::integer())) | (ifGe::(label::integer())) | (ifGt::(label::integer())) | (ifLe::(label::integer())) | (ifICmpEq::(label::integer())) | (ifICmpNe::(label::integer())) | (ifICmpLt::(label::integer())) | (ifICmpGe::(label::integer())) | (ifICmpGt::(label::integer())) | (ifICmpLe::(label::integer())) | (ifACmpEq::(label::integer())) | (ifACmpNe::(label::integer())) | (goto::(label::integer())) | (jsr::(label::integer())) | (ifNull::(label::integer())) | (ifNonNull::(label::integer())) | (label::(index::integer())) | (lineNumber::(line::integer() labelIndex::integer())) | (localVariable::(opcode::integer() index::integer())) | (iLoad::(index::integer())) | (lLoad::(index::integer())) | (fLoad::(index::integer())) | (dLoad::(index::integer())) | (aLoad::(index::integer())) | (iStore::(index::integer())) | (lStore::(index::integer())) | (fStore::(index::integer())) | (dStore::(index::integer())) | (aStore::(index::integer())) | (ret::(index::integer())) | (ldcString::(string::string())) | (ldcInt::(int::integer())) | (ldcLong::(long::integer())) | (ldcFloat::(float::integer())) | (ldcDouble::(double::integer())) | (lookupSwitch::(defaultLabel::integer() keys::(integer()*) cases::(integer()*))) | (invokeVirtual::(owner::string() name::string() description::string())) | (invokeSpecial::(owner::string() name::string() description::string())) | (invokeStatic::(owner::string() name::string() description::string())) | (invokeInterface::(owner::string() name::string() description::string())) | (invokeDynamic::(owner::string() name::string() description::string())) | (multiANewArray::(description::string() dimensions::integer())) | (tableSwitch::(min::integer() max::integer() defaultLabel::integer() cases::(integer()*))) | (new::(internalName::string())) | (aNewArray::(internalName::string())) | (checkCast::(internalName::string())) | (instanceOf::(internalName::string())) ;
TryCatchBlock ::= (tryCatchBlock::(startLabelIndex::integer() endLabelIndex::integer() handlerLabelIndex::integer() type::string())) | (finallyBlock::(startLabelIndex::integer() endLabelIndex::integer() handlerLabelIndex::integer())) ;
AccessModifier ::= (public::ε) | (private::ε) | (protected::ε) ;
LocalVariable ::= localVariable::(name::string() description::string() signature::string() startLabelIndex::integer() endLabelIndex::integer() index::integer()) ;
PrimitiveTypeDescriptor ::= (boolean::ε) | (char::ε) | (byte::ε) | (short::ε) | (int::ε) | (float::ε) | (long::ε) | (double::ε) ;
--------------------modula::sdf.bgf--------------------
Id ::= "NOT" | "ROOT" ;
Relop ::= "=" | "#" | "<" | "<=" | ">" | ">=" | "IN" ;
ExitStmt ::= "EXIT" ;
TypeName ::= "ROOT" | ("UNTRACED" "ROOT") ;
Mulop ::= "*" | "/" | "DIV" | "MOD" ;
Mode ::= "VALUE" | "VAR" | "READONLY" ;
Addop ::= "+" | "-" | "&" ;
--------------------modula::src-052.bgf--------------------
ExtendedChar ::= " " | "¡" | "¢" | "£" | "¤" | "¥" | "¦" | "§" | "¨" | "©" | "ª" | "«" | "¬" | "­" | "®" | "¯" | "°" | "±" | "²" | "³" | "´" | "µ" | "¶" | "·" | "¸" | "¹" | "º" | "»" | "¼" | "½" | "¾" | "¿" | "À" | "Á" | "Â" | "Ã" | "Ä" | "Å" | "Æ" | "Ç" | "È" | "É" | "Ê" | "Ë" | "Ì" | "Í" | "Î" | "Ï" | "Ð" | "Ñ" | "Ò" | "Ó" | "Ô" | "Õ" | "Ö" | "×" | "Ø" | "Ù" | "Ú" | "Û" | "Ü" | "Ý" | "Þ" | "ß" | "à" | "á" | "â" | "ã" | "ä" | "å" | "æ" | "ç" | "è" | "é" | "ê" | "ë" | "ì" | "í" | "î" | "ï" | "ð" | "ñ" | "ò" | "ó" | "ô" | "õ" | "ö" | "÷" | "ø" | "ù" | "ú" | "û" | "ü" | "ý" | "þ" | "ÿ" ;
Digit ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;
Relop ::= "=" | "#" | "<" | "<=" | ">" | ">=" | "IN" ;
Letter ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" ;
ExitStmt ::= "EXIT" ;
Mulop ::= "*" | "/" | "DIV" | "MOD" ;
Operator ::= "+" | "-" | "*" | "/" | "." | "^" | (":" "=") | "=" | "$" | "<" | ("<" "=") | (">" "=") | ">" | "&" | ("<" ":") | ("=" ">") | "," | ";" | "|" | ":" | ("." ".") | "(" | ")" | "{" | "}" | "[" | "]" ;
OctalDigit ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" ;
Addop ::= "+" | "-" | "&" ;
--------------------modula::dagenais-cordy.bgf--------------------
SignOp ::= "+" | "-" ;
RelOp ::= "=" | "#" | "<" | "<=" | ">" | ">=" | "IN" ;
ExitStmt ::= "EXIT" ;
MulOp ::= "*" | "/" | "DIV" | "MOD" ;
Mode ::= "VALUE" | "VAR" | "READONLY" ;
AddOp ::= "+" | "-" | "&" ;
ComaDotDot ::= "," ".." ;
--------------------xpath::w3c-xpath1.bgf--------------------
OperatorName ::= [NT-OperatorName] "and" | "or" | "mod" | "div" ;
NodeType ::= [NT-NodeType] "comment" | "text" | "processing-instruction" | "node" ;
AxisName ::= [NT-AxisName] "ancestor" | "ancestor-or-self" | "attribute" | "child" | "descendant" | "descendant-or-self" | "following" | "following-sibling" | "namespace" | "parent" | "preceding" | "preceding-sibling" | "self" ;
MultiplyOperator ::= [NT-MultiplyOperator] "*" ;
Digits ::= [NT-Digits] ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
AbbreviatedStep ::= [NT-AbbreviatedStep] "." | ".." ;
AbbreviatedAxisSpecifier ::= [NT-AbbreviatedAxisSpecifier] "@"? ;
--------------------assembly::delphi.bgf--------------------
asm_infixop ::= "." | "+" | "-" | "*" | "/" | "ptr" | "mod" | "xor" | "and" | "or" | "shr" | "shl" ;
asm_directive ::= "DB" | "DW" | "DD" | "DQ" ;
asm_opcode ::= "adc" | "add" | "and" | "bswap" | "bt" | "btr" | "bts" | "call" | "cdq" | "cld" | "cmp" | "dec" | "div" | "f2xm1" | "fabs" | "fadd" | "faddp" | "fbstp" | "fchs" | "fclex" | "fcom" | "fcomp" | "fcos" | "fdiv" | "fdivp" | "fdivrp" | "ffree" | "fiadd" | "fidiv" | "fild" | "fimul" | "fistp" | "fld" | "fld1" | "fldcw" | "fldl2e" | "fldlg2" | "fldln2" | "fldz" | "fmul" | "fmulp" | "fnclex" | "fninit" | "fnstcw" | "fnstsw" | "fpatan" | "fprem" | "fptan" | "frndint" | "fscale" | "fsin" | "fsincos" | "fsqrt" | "fstcw" | "fstp" | "fstsw" | "fsub" | "fsubp" | "fsubr" | "fwait" | "fxch" | "fxtract" | "fyl2x" | "fyl2xp1" | "imul" | "inc" | "int" | "ja" | "jae" | "jb" | "jbe" | "jc" | "je" | "jecxz" | "jg" | "jge" | "jl" | "jle" | "jmp" | "jnc" | "jne" | "jnl" | "jns" | "jnz" | "jo" | "jp" | "js" | "jz" | "lea" | "leave" | "lodsb" | "lodsw" | "loop" | "mov" | "movsb" | "movsx" | "movzx" | "mul" | "neg" | "not" | "or" | "pop" | "popfd" | "push" | "pushfd" | "rcl" | "rcr" | "rep" | "repe" | "repne" | "ret" | "rol" | "ror" | "sahf" | "sar" | "sbb" | "seto" | "shl" | "shld" | "shr" | "shrd" | "std" | "stosb" | "stosd" | "stosw" | "sub" | "test" | "wait" | "xadd" | "xchg" | "xor" ;
--------------------basic::vb6-cordy.bgf--------------------
reset_statement ::= "reset" ;
beep_statement ::= "beep" ;
access_mode ::= "read" | "write" | ("read" "write") ;
compare_mode ::= "binary" | "text" | "database" ;
get_let_set ::= "get" | "let" | "set" ;
exit_what_indicator ::= "do" | "for" | "function" | "property" | "sub" ;
to_or_downto ::= "to" | "downto" ;
sub_or_function ::= "sub" | "function" ;
stop_statement ::= "stop" ;
access_modifier ::= "public" | "private" | "friend" | "static" ;
byref_or_byval ::= "byref" | "byval" ;
def_keyword ::= "defbool" | "defbyte" | "defcur" | "defdate" | "defdbl" | "defdec" | "defint" | "deflng" | "defobj" | "defsng" | "defstr" | "defvar" ;
prefix_op ::= "+" | "-" | "not" | "typeof" | "addressof" ;
end_statement ::= "end" ;
lock ::= "shared" | ("lock" "read") | ("lock" "write") | ("lock" "read" "write") ;
parens ::= "(" ")" ;
mode ::= "append" | "binary" | "input" | "output" | "random" ;
op ::= "^" | "*" | "/" | "\" | "mod" | "+" | "-" | "&" | "=" | "<>" | "<=" | ">=" | ":=" | ">" | "<" | "!" | "is" | "not" | "and" | "or" | "xor" | "eqv" | "imp" | "like" ;
return_statement ::= "return" ;
--------------------basic::vb-glineur.bgf--------------------
Integer ::= integer() ;
obeo/psm/vb/projects/VB_1/enumerations/VisibilityEnum ::= (private::ε) | (protected::ε) | (public::ε) ;
obeo/psm/vb/projects/VB_1/enumerations/EnablementEnum ::= (Off::ε) | (On::ε) ;
obeo/psm/vb/projects/VB_1/statements/VB_CallEmptyArgument ::= ε ;
obeo/psm/vb/projects/VB_1/expressions/VB_Literal_Value ::= ε ;
Boolean ::= "true" | "false" ;
obeo/psm/vb/projects/VB_1/expressions/VB_Literal_Literal ::= ε ;
obeo/psm/vb/projects/VB_1/enumerations/NameEnum ::= (trueLit::ε) | (falseLit::ε) | (nothing::ε) ;
obeo/psm/vb/projects/VB_1/enumerations/Qualifier_2Enum ::= (static::ε) | (const::ε) | (dim::ε) ;
String ::= string() ;
obeo/psm/vb/projects/VB_1/enumerations/QualifierEnum ::= (byRef::ε) | (byVal::ε) ;
obeo/psm/vb/projects/VB_1/expressions/VB_Literal_Number ::= ε ;
--------------------bibtex::bibtex-1.1.bgf--------------------
Integer ::= integer() ;
InProceedings ::= ε ;
String ::= string() ;
--------------------bibtex::bibtex-1.2.bgf--------------------
String ::= string() ;
--------------------bibtex::bibtex-1.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------bibtex::bql.bgf--------------------
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------dot::doux.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------dot::palies.bgf--------------------
PointNodeShape ::= ε ;
RecordNodeShape ::= ε ;
Integer ::= integer() ;
SimpleNodeShape ::= ε ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------dot::rascal-abstract.bgf--------------------
Id ::= string() ;
CompassPt ::= (N::ε) | (NE::ε) | (E::ε) | (SE::ε) | (S::ε) | (SW::ε) | (W::ε) | (NW::ε) | (C::ε) | (_::ε) ;
Outline ::= (key::integer() args::(string()*))* ;
--------------------dot::rascal-concrete.bgf--------------------
EdgeOp ::= "->" ;
 EdgeOp ::= "--" ;
AttrTag ::= "node" ;
 AttrTag ::= "graph" ;
 AttrTag ::= "edge" ;
--------------------html::allilaire.bgf--------------------
Integer ::= integer() ;
NOFRAME ::= ε ;
DL ::= ε ;
Boolean ::= "true" | "false" ;
String ::= string() ;
DD ::= ε ;
DT ::= ε ;
--------------------html::clark-basic.bgf--------------------
ContentType.datatype ::= string() ;
MediaDesc.datatype ::= string() ;
IDREF.datatype ::= string() ;
CellHAlign.attrib ::= (align::("left" | "center" | "right"))? ;
NMTOKENS.datatype ::= string() ;
NMTOKEN.datatype ::= string() ;
IDREFS.datatype ::= string() ;
ID.datatype ::= string() ;
Datetime.datatype ::= string() ;
FPI.datatype ::= string() ;
MultiLength.datatype ::= string() ;
ContentTypes.datatype ::= string() ;
InputType.class ::= "text" | "password" | "checkbox" | "radio" | "submit" | "reset" | "hidden" ;
LanguageCode.datatype ::= string() ;
Length.datatype ::= string() ;
URIs.datatype ::= string() ;
Charsets.datatype ::= string() ;
Character.datatype ::= string() ;
Number.datatype ::= string() ;
CellVAlign.attrib ::= (valign::("top" | "middle" | "bottom"))? ;
Script.datatype ::= string() ;
URI.datatype ::= string() ;
Charset.datatype ::= string() ;
Text.datatype ::= string() ;
Pixels.datatype ::= string() ;
scope.attrib ::= (scope::("row" | "col"))? ;
--------------------html::clark.bgf--------------------
ContentType.datatype ::= string() ;
MediaDesc.datatype ::= string() ;
name.attlist ::= (name::string())? ;
IDREF.datatype ::= string() ;
coords.attrib ::= (coords::string())? ;
NMTOKENS.datatype ::= string() ;
NMTOKEN.datatype ::= string() ;
IDREFS.datatype ::= string() ;
ID.datatype ::= string() ;
Datetime.datatype ::= string() ;
shape.attrib ::= (shape::("rect" | "circle" | "poly" | "default"))? ;
align.attrib ::= (align::("left" | "all" | "right" | "none"))? ;
FPI.datatype ::= string() ;
MultiLength.datatype ::= string() ;
ContentTypes.datatype ::= string() ;
Color.datatype ::= string() ;
InputType.class ::= "image" | "button" ;
 InputType.class ::= "text" | "password" | "checkbox" | "radio" | "submit" | "reset" | "hidden" ;
LanguageCode.datatype ::= string() ;
Length.datatype ::= string() ;
URIs.datatype ::= string() ;
Charsets.datatype ::= string() ;
dir.attrib ::= dir::("ltr" | "rtl") ;
Character.datatype ::= string() ;
Number.datatype ::= string() ;
target.attrib ::= (target::string())? ;
CellVAlign.attrib ::= (valign::("top" | "middle" | "bottom" | "baseline"))? ;
 CellVAlign.attrib ::= (valign::("top" | "middle" | "bottom"))? ;
Script.datatype ::= string() ;
URI.datatype ::= string() ;
Charset.datatype ::= string() ;
Text.datatype ::= string() ;
Pixels.datatype ::= string() ;
scope.attrib ::= (scope::("row" | "col" | "rowgroup" | "colgroup"))? ;
 scope.attrib ::= (scope::("row" | "col"))? ;
rules.attrib ::= (rules::("none" | "groups" | "rows" | "cols" | "all"))? ;
--------------------html::guyard.bgf--------------------
CellHAlign ::= (left::ε) | (center::ε) | (right::ε) | (justify::ε) | (char::ε) ;
Direction ::= (ltr::ε) | (rtl::ε) ;
MultiLength ::= ε ;
LinkTypes ::= ε ;
Integer ::= integer() ;
Datetime ::= ε ;
TFrame ::= (void::ε) | (above::ε) | (below::ε) | (hsides::ε) | (lhs::ε) | (rhs::ε) | (vsides::ε) | (box::ε) | (border::ε) ;
MediaDesc ::= ε ;
Scope ::= (row::ε) | (col::ε) | (rowgroup::ε) | (colgroup::ε) ;
ContentType ::= ε ;
String ::= string() ;
CellVAlign ::= (top::ε) | (middle::ε) | (bottom::ε) | (baseline::ε) ;
Br ::= ε ;
StyleSheet ::= ε ;
Pixels ::= ε ;
Text ::= ε ;
ButtonType ::= (button::ε) | (submit::ε) | (reset::ε) ;
URI ::= ε ;
Charset ::= ε ;
ValueType ::= (data::ε) | (ref::ε) | (object::ε) ;
Hr ::= ε ;
Number ::= ε ;
Character ::= ε ;
Boolean ::= "true" | "false" ;
Length ::= ε ;
LanguageCode ::= ε ;
InputType ::= (text::ε) | (password::ε) | (checkbox::ε) | (radio::ε) | (submit::ε) | (reset::ε) | (file::ε) | (hidden::ε) | (image::ε) | (button::ε) ;
TRules ::= (none::ε) | (groups::ε) | (rows::ε) | (cols::ε) | (all::ε) ;
ScriptExpression ::= ε ;
FomeMethod ::= (get::ε) | (post::ε) ;
Shape ::= (rect::ε) | (circle::ε) | (poly::ε) | (default::ε) ;
--------------------html::clark-strict.bgf--------------------
ContentType.datatype ::= string() ;
MediaDesc.datatype ::= string() ;
name.attlist ::= (name::string())? ;
IDREF.datatype ::= string() ;
coords.attrib ::= (coords::string())? ;
NMTOKENS.datatype ::= string() ;
NMTOKEN.datatype ::= string() ;
IDREFS.datatype ::= string() ;
ID.datatype ::= string() ;
Datetime.datatype ::= string() ;
shape.attrib ::= (shape::("rect" | "circle" | "poly" | "default"))? ;
FPI.datatype ::= string() ;
MultiLength.datatype ::= string() ;
ContentTypes.datatype ::= string() ;
InputType.class ::= "image" | "button" ;
 InputType.class ::= "text" | "password" | "checkbox" | "radio" | "submit" | "reset" | "hidden" ;
LanguageCode.datatype ::= string() ;
Length.datatype ::= string() ;
URIs.datatype ::= string() ;
Charsets.datatype ::= string() ;
dir.attrib ::= dir::("ltr" | "rtl") ;
Character.datatype ::= string() ;
Number.datatype ::= string() ;
target.attrib ::= (target::string())? ;
CellVAlign.attrib ::= (valign::("top" | "middle" | "bottom" | "baseline"))? ;
 CellVAlign.attrib ::= (valign::("top" | "middle" | "bottom"))? ;
Script.datatype ::= string() ;
URI.datatype ::= string() ;
Charset.datatype ::= string() ;
Text.datatype ::= string() ;
Pixels.datatype ::= string() ;
scope.attrib ::= (scope::("row" | "col" | "rowgroup" | "colgroup"))? ;
 scope.attrib ::= (scope::("row" | "col"))? ;
rules.attrib ::= (rules::("none" | "groups" | "rows" | "cols" | "all"))? ;
--------------------javascript::synytskyy-cordy.bgf--------------------
js_additive_op ::= "+" | "-" ;
js_debugger_statement ::= "debugger" ;
js_empty_statement ::= ";" ;
js_unary_op ::= "delete" | "void" | "typeof" | "++" | "--" | "+" | "-" | "~" | "!" ;
js_multiplicative_op ::= "*" | "/" | "%" ;
js_shift_op ::= "<<" | ">>" | ">>>" ;
js_relational_op ::= "<" | ">" | "<=" | ">=" ;
js_postfix_op ::= "++" | "--" ;
js_equality_op ::= "==" | "!=" | "===" | "!==" | "in" | "instanceof" ;
--------------------occam::mu-mitchell.bgf--------------------
class-key ::= "class" "struct" "union" ;
pure-specifier ::= "=" "0" ;
function-specifier ::= "inline" "virtual" "explicit" ;
storage-class-specifier ::= "auto" "register" "static" "extern" "mutable" ;
access-specifier ::= "private" "protected" "public" ;
operator ::= "new" | "delete" | ("new" "[]") | ("delete" "[]") | "+" | "-" | "*" | "/" | "%" | "^" | "&" | "|" | "~" | "!" | "=" | "<" | ">" | "+=" | "-=" | "*=" | "/=" | "%=" | "^=" | "&=" | "|=" | "<<" | ">>" | ">>=" | "<<=" | "==" | "!=" | "<=" | ">=" | "&&" | "||" | "++" | "--" | "," | "->*" | "->" | "()" | "[]" ;
assignment-operator ::= "=" | "*=" | "/=" | "%=" | "+=" | "-=" | ">>=" | "<<=" | "&=" | "^=" | "|=" ;
unary-operator ::= "*" | "&" | "+" | "-" | "!" | "~" ;
cv-qualifier ::= "const" "volatile" ;
--------------------occam::mu-srour.bgf--------------------
Integer ::= integer() ;
StopProcess ::= ε ;
Boolean ::= "true" | "false" ;
String ::= string() ;
SkipProcess ::= ε ;
--------------------occam::srour.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------odf::opendoc-1.0-manifest.bgf--------------------
key-derivation-attlist ::= manifest:key-derivation-name::string() ;
 key-derivation-attlist ::= manifest:salt::string() ;
 key-derivation-attlist ::= manifest:iteration-count::integer() ;
encryption-data-attlist ::= manifest:checksum-type::string() ;
 encryption-data-attlist ::= manifest:checksum::string() ;
file-entry-attlist ::= manifest:full-path::string() ;
 file-entry-attlist ::= (manifest:size::integer())? ;
 file-entry-attlist ::= manifest:media-type::string() ;
algorithm-attlist ::= manifest:algorithm-name::string() ;
 algorithm-attlist ::= manifest:initialisation-vector::string() ;
--------------------odf::opendoc-1.0-strict.bgf--------------------
presentationEffectDirections ::= "none" | "from-left" | "from-top" | "from-right" | "from-bottom" | "from-center" | "from-upper-left" | "from-upper-right" | "from-lower-left" | "from-lower-right" | "to-left" | "to-top" | "to-right" | "to-bottom" | "to-upper-left" | "to-upper-right" | "to-lower-right" | "to-lower-left" | "path" | "spiral-inward-left" | "spiral-inward-right" | "spiral-outward-left" | "spiral-outward-right" | "vertical" | "horizontal" | "to-center" | "clockwise" | "counter-clockwise" ;
office-chart-attlist ::= ε ;
office-drawing-attlist ::= ε ;
number-hours-attlist ::= (number:style::("short" | "long"))? ;
list-source-type ::= (form:list-source-type::("table" | "query" | "sql" | "sql-pass-through" | "value-list" | "table-fields"))? ;
text-note-class ::= text:note-class::("footnote" | "endnote") ;
office-presentation-attlist ::= ε ;
vertBackPos ::= "top" | "center" | "bottom" ;
office-image-attlist ::= ε ;
style-ruby-properties-elements ::= ε ;
cellRangeAddress ::= string() ;
types ::= "submit" | "reset" | "push" | "url" ;
IDREF ::= string() ;
common-anim-spline-mode-attlist ::= (smil:calcMode::("discrete" | "linear" | "paced" | "spline"))? ;
vector3D ::= string() ;
common-style-direction-attlist ::= (style:direction::("ltr" | "ttb"))? ;
presentation-classes ::= "title" | "outline" | "subtitle" | "text" | "graphic" | "object" | "chart" | "table" | "orgchart" | "page" | "notes" | "handout" | "header" | "footer" | "date-time" | "page-number" ;
pathData ::= string() ;
text-bibliography-types ::= "article" | "book" | "booklet" | "conference" | "custom1" | "custom2" | "custom3" | "custom4" | "custom5" | "email" | "inbook" | "incollection" | "inproceedings" | "journal" | "manual" | "mastersthesis" | "misc" | "phdthesis" | "proceedings" | "techreport" | "unpublished" | "www" ;
dateOrDateTime ::= string() ;
text-index-entry-chapter-attrs ::= (text:display::("name" | "number" | "number-and-name"))? ;
common-title-attlist ::= (form:title::string())? ;
number-day-of-week-attlist ::= (number:style::("short" | "long"))? ;
formula ::= string() ;
length ::= string() ;
common-keep-with-next-attlist ::= (fo:keep-with-next::("auto" | "always"))? ;
languageCode ::= string() ;
common-fill-timing-attlist ::= (smil:fill::("remove" | "freeze" | "hold" | "auto" | "default" | "transition"))? ;
draw-glue-points-attlist ::= draw:escape-direction::("auto" | "left" | "right" | "up" | "down" | "horizontal" | "vertical") ;
points ::= string() ;
color ::= string() ;
rowOrCol ::= "row" | "column" ;
anyURI ::= string() ;
number-text-content ::= number:text-content::ε ;
styleName ::= string() ;
style-ruby-properties-attlist ::= (style:ruby-position::("above" | "below"))? ;
 style-ruby-properties-attlist ::= (style:ruby-align::("left" | "center" | "right" | "distribute-letter" | "distribute-space"))? ;
common-restart-timing-attlist ::= (smil:restart::("never" | "always" | "whenNotActive" | "default"))? ;
svg-desc ::= svg:desc::string() ;
language ::= string() ;
common-vertical-rel-attlist ::= (style:vertical-rel::("page" | "page-content" | "frame" | "frame-content" | "paragraph" | "paragraph-content" | "char" | "line" | "baseline" | "text"))? ;
office-image-content-prelude ::= ε ;
style-table-column-properties-elements ::= ε ;
gradient-style ::= "linear" | "axial" | "radial" | "ellipsoid" | "square" | "rectangular" ;
text-sequence-ref-content ::= (text:reference-format::("page" | "chapter" | "direction" | "text" | "category-and-value" | "caption" | "value"))? ;
relativeLength ::= string() ;
common-dr3d-transform-attlist ::= (dr3d:transform::string())? ;
double ::= string() ;
text-template-name-attlist ::= (text:display::("full" | "path" | "name" | "name-and-extension" | "area" | "title"))? ;
lineType ::= "none" | "single" | "double" ;
draw-plugin-attlist ::= (draw:mime-type::string())? ;
time ::= string() ;
style-text-properties-elements ::= ε ;
number-minutes-attlist ::= (number:style::("short" | "long"))? ;
common-field-display-value-formula-none-attlist ::= (text:display::("value" | "formula" | "none"))? ;
valueType ::= "float" | "time" | "date" | "percentage" | "currency" | "boolean" | "string" ;
timeOrDateTime ::= string() ;
style-chart-properties-elements ::= ε ;
presentationSpeeds ::= "slow" | "medium" | "fast" ;
common-field-display-value-none-attlist ::= (text:display::("value" | "none"))? ;
percent ::= string() ;
text-index-scope-attr ::= (text:index-scope::("document" | "chapter"))? ;
fontFamilyGeneric ::= "roman" | "swiss" | "modern" | "decorative" | "script" | "system" ;
number-era-attlist ::= (number:style::("short" | "long"))? ;
common-format-source-attlist ::= (number:format-source::("fixed" | "language"))? ;
common-draw-layer-name-attlist ::= (draw:layer::string())? ;
positiveLength ::= string() ;
integer ::= integer() ;
styleNameRefs ::= string()* ;
nonNegativeInteger ::= integer() ;
common-field-display-value-formula-attlist ::= (text:display::("value" | "formula"))? ;
number-am-pm ::= number:am-pm::ε ;
common-field-description-attlist ::= (text:description::string())? ;
lineMode ::= "continuous" | "skip-white-space" ;
cellRangeAddressList ::= string() ;
fontVariant ::= "normal" | "small-caps" ;
anim-animate-transform-attlist ::= svg:type::("translate" | "scale" | "rotate" | "skewX" | "skewY") ;
draw-param-attlist ::= (draw:name::string())? ;
 draw-param-attlist ::= (draw:value::string())? ;
style-list-level-properties-elements ::= ε ;
draw-object-ole-attlist ::= (draw:class-id::string())? ;
number-year-attlist ::= (number:style::("short" | "long"))? ;
svg-font-face-format ::= svg:font-face-format::((svg:string::string())?) ;
cellAddress ::= string() ;
fontPitch ::= "fixed" | "variable" ;
number-text ::= number:text::string() ;
base64Binary ::= string() ;
date ::= string() ;
anim-animate-color-attlist ::= (anim:color-interpolation::("rgb" | "hsl"))? ;
 anim-animate-color-attlist ::= (anim:color-interpolation-direction::("clockwise" | "counter-clockwise"))? ;
office-image-content-epilogue ::= ε ;
character ::= string() ;
nonNegativeLength ::= string() ;
boolean ::= "true" | "false" ;
variableName ::= string() ;
fontWeight ::= "normal" | "bold" | "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" | "900" ;
number-boolean ::= number:boolean::ε ;
countryCode ::= string() ;
fontStyle ::= "normal" | "italic" | "oblique" ;
textEncoding ::= string() ;
text-ref-content ::= (text:reference-format::("page" | "chapter" | "direction" | "text"))? ;
lineStyle ::= "none" | "solid" | "dotted" | "dash" | "long-dash" | "dot-dash" | "dot-dot-dash" | "wave" ;
ID ::= string() ;
dateTime ::= string() ;
number-quarter-attlist ::= (number:style::("short" | "long"))? ;
styleNameRef ::= string() | ε ;
common-endsync-timing-attlist ::= (smil:endsync::("first" | "last" | "all" | "media"))? ;
table-visibility-value ::= "visible" | "collapse" | "filter" ;
duration ::= string() ;
navigation ::= "none" | "current" | "parent" ;
common-restart-default-attlist ::= (smil:restartDefault::("never" | "always" | "whenNotActive" | "inherit"))? ;
string ::= string() ;
namespacedToken ::= string() ;
horiBackPos ::= "left" | "center" | "right" ;
common-break-attlist ::= (fo:break-before::("auto" | "column" | "page"))? (fo:break-after::("auto" | "column" | "page"))? ;
common-fill-default-attlist ::= (smil:fillDefault::("remove" | "freeze" | "hold" | "transition" | "auto" | "inherit"))? ;
nonNegativePixelLength ::= string() ;
number-day-attlist ::= (number:style::("short" | "long"))? ;
common-form-visual-effect-attlist ::= (form:visual-effect::("flat" | "3d"))? ;
horizontal-mirror ::= "horizontal" | "horizontal-on-odd" | "horizontal-on-even" ;
common-writing-mode-attlist ::= (style:writing-mode::("lr-tb" | "rl-tb" | "tb-rl" | "tb-lr" | "lr" | "rl" | "tb" | "page"))? ;
presentationEffects ::= "none" | "fade" | "move" | "stripes" | "open" | "close" | "dissolve" | "wavyline" | "random" | "lines" | "laser" | "appear" | "hide" | "move-short" | "checkerboard" | "rotate" | "stretch" ;
common-text-align ::= (fo:text-align::("start" | "end" | "left" | "right" | "center" | "justify"))? ;
common-form-relative-image-position-attlist ::= ((form:image-position::"center")?) | (form:image-position::("start" | "end" | "top" | "bottom") (form:image-align::("start" | "center" | "end"))?) ;
svg-font-face-name ::= svg:font-face-name::((name::string())?) ;
positiveInteger ::= integer() ;
tab-cycles ::= "records" | "current" | "page" ;
common-anim-add-accum-attlist ::= (smil:accumulate::("none" | "sum"))? ;
 common-anim-add-accum-attlist ::= (smil:additive::("replace" | "sum"))? ;
states ::= "unchecked" | "checked" | "unknown" ;
point3D ::= string() ;
--------------------odf::opendoc-1.0.bgf--------------------
presentationEffectDirections ::= "none" | "from-left" | "from-top" | "from-right" | "from-bottom" | "from-center" | "from-upper-left" | "from-upper-right" | "from-lower-left" | "from-lower-right" | "to-left" | "to-top" | "to-right" | "to-bottom" | "to-upper-left" | "to-upper-right" | "to-lower-right" | "to-lower-left" | "path" | "spiral-inward-left" | "spiral-inward-right" | "spiral-outward-left" | "spiral-outward-right" | "vertical" | "horizontal" | "to-center" | "clockwise" | "counter-clockwise" ;
office-chart-attlist ::= ε ;
office-drawing-attlist ::= ε ;
number-hours-attlist ::= (number:style::("short" | "long"))? ;
list-source-type ::= (form:list-source-type::("table" | "query" | "sql" | "sql-pass-through" | "value-list" | "table-fields"))? ;
text-note-class ::= text:note-class::("footnote" | "endnote") ;
office-presentation-attlist ::= ε ;
vertBackPos ::= "top" | "center" | "bottom" ;
office-image-attlist ::= ε ;
style-ruby-properties-elements ::= ε ;
cellRangeAddress ::= string() ;
types ::= "submit" | "reset" | "push" | "url" ;
IDREF ::= string() ;
common-anim-spline-mode-attlist ::= (smil:calcMode::("discrete" | "linear" | "paced" | "spline"))? ;
vector3D ::= string() ;
common-style-direction-attlist ::= (style:direction::("ltr" | "ttb"))? ;
presentation-classes ::= "title" | "outline" | "subtitle" | "text" | "graphic" | "object" | "chart" | "table" | "orgchart" | "page" | "notes" | "handout" | "header" | "footer" | "date-time" | "page-number" ;
pathData ::= string() ;
text-bibliography-types ::= "article" | "book" | "booklet" | "conference" | "custom1" | "custom2" | "custom3" | "custom4" | "custom5" | "email" | "inbook" | "incollection" | "inproceedings" | "journal" | "manual" | "mastersthesis" | "misc" | "phdthesis" | "proceedings" | "techreport" | "unpublished" | "www" ;
dateOrDateTime ::= string() ;
text-index-entry-chapter-attrs ::= (text:display::("name" | "number" | "number-and-name"))? ;
common-title-attlist ::= (form:title::string())? ;
number-day-of-week-attlist ::= (number:style::("short" | "long"))? ;
formula ::= string() ;
length ::= string() ;
common-keep-with-next-attlist ::= (fo:keep-with-next::("auto" | "always"))? ;
languageCode ::= string() ;
common-fill-timing-attlist ::= (smil:fill::("remove" | "freeze" | "hold" | "auto" | "default" | "transition"))? ;
draw-glue-points-attlist ::= draw:escape-direction::("auto" | "left" | "right" | "up" | "down" | "horizontal" | "vertical") ;
points ::= string() ;
color ::= string() ;
rowOrCol ::= "row" | "column" ;
anyURI ::= string() ;
number-text-content ::= number:text-content::ε ;
styleName ::= string() ;
style-ruby-properties-attlist ::= (style:ruby-position::("above" | "below"))? ;
 style-ruby-properties-attlist ::= (style:ruby-align::("left" | "center" | "right" | "distribute-letter" | "distribute-space"))? ;
common-restart-timing-attlist ::= (smil:restart::("never" | "always" | "whenNotActive" | "default"))? ;
svg-desc ::= svg:desc::string() ;
language ::= string() ;
common-vertical-rel-attlist ::= (style:vertical-rel::("page" | "page-content" | "frame" | "frame-content" | "paragraph" | "paragraph-content" | "char" | "line" | "baseline" | "text"))? ;
office-image-content-prelude ::= ε ;
style-table-column-properties-elements ::= ε ;
gradient-style ::= "linear" | "axial" | "radial" | "ellipsoid" | "square" | "rectangular" ;
text-sequence-ref-content ::= (text:reference-format::("page" | "chapter" | "direction" | "text" | "category-and-value" | "caption" | "value"))? ;
relativeLength ::= string() ;
common-dr3d-transform-attlist ::= (dr3d:transform::string())? ;
double ::= string() ;
text-template-name-attlist ::= (text:display::("full" | "path" | "name" | "name-and-extension" | "area" | "title"))? ;
lineType ::= "none" | "single" | "double" ;
draw-plugin-attlist ::= (draw:mime-type::string())? ;
time ::= string() ;
style-text-properties-elements ::= ε ;
number-minutes-attlist ::= (number:style::("short" | "long"))? ;
common-field-display-value-formula-none-attlist ::= (text:display::("value" | "formula" | "none"))? ;
valueType ::= "float" | "time" | "date" | "percentage" | "currency" | "boolean" | "string" ;
timeOrDateTime ::= string() ;
style-chart-properties-elements ::= ε ;
presentationSpeeds ::= "slow" | "medium" | "fast" ;
common-field-display-value-none-attlist ::= (text:display::("value" | "none"))? ;
percent ::= string() ;
text-index-scope-attr ::= (text:index-scope::("document" | "chapter"))? ;
fontFamilyGeneric ::= "roman" | "swiss" | "modern" | "decorative" | "script" | "system" ;
number-era-attlist ::= (number:style::("short" | "long"))? ;
common-format-source-attlist ::= (number:format-source::("fixed" | "language"))? ;
common-draw-layer-name-attlist ::= (draw:layer::string())? ;
positiveLength ::= string() ;
integer ::= integer() ;
styleNameRefs ::= string()* ;
nonNegativeInteger ::= integer() ;
common-field-display-value-formula-attlist ::= (text:display::("value" | "formula"))? ;
number-am-pm ::= number:am-pm::ε ;
common-field-description-attlist ::= (text:description::string())? ;
lineMode ::= "continuous" | "skip-white-space" ;
cellRangeAddressList ::= string() ;
fontVariant ::= "normal" | "small-caps" ;
anim-animate-transform-attlist ::= svg:type::("translate" | "scale" | "rotate" | "skewX" | "skewY") ;
draw-param-attlist ::= (draw:name::string())? ;
 draw-param-attlist ::= (draw:value::string())? ;
style-list-level-properties-elements ::= ε ;
draw-object-ole-attlist ::= (draw:class-id::string())? ;
number-year-attlist ::= (number:style::("short" | "long"))? ;
svg-font-face-format ::= svg:font-face-format::((svg:string::string())?) ;
cellAddress ::= string() ;
fontPitch ::= "fixed" | "variable" ;
number-text ::= number:text::string() ;
base64Binary ::= string() ;
date ::= string() ;
anim-animate-color-attlist ::= (anim:color-interpolation::("rgb" | "hsl"))? ;
 anim-animate-color-attlist ::= (anim:color-interpolation-direction::("clockwise" | "counter-clockwise"))? ;
office-image-content-epilogue ::= ε ;
character ::= string() ;
nonNegativeLength ::= string() ;
boolean ::= "true" | "false" ;
variableName ::= string() ;
fontWeight ::= "normal" | "bold" | "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" | "900" ;
number-boolean ::= number:boolean::ε ;
countryCode ::= string() ;
fontStyle ::= "normal" | "italic" | "oblique" ;
textEncoding ::= string() ;
text-ref-content ::= (text:reference-format::("page" | "chapter" | "direction" | "text"))? ;
lineStyle ::= "none" | "solid" | "dotted" | "dash" | "long-dash" | "dot-dash" | "dot-dot-dash" | "wave" ;
ID ::= string() ;
dateTime ::= string() ;
number-quarter-attlist ::= (number:style::("short" | "long"))? ;
styleNameRef ::= string() | ε ;
common-endsync-timing-attlist ::= (smil:endsync::("first" | "last" | "all" | "media"))? ;
table-visibility-value ::= "visible" | "collapse" | "filter" ;
duration ::= string() ;
navigation ::= "none" | "current" | "parent" ;
common-restart-default-attlist ::= (smil:restartDefault::("never" | "always" | "whenNotActive" | "inherit"))? ;
string ::= string() ;
namespacedToken ::= string() ;
horiBackPos ::= "left" | "center" | "right" ;
common-break-attlist ::= (fo:break-before::("auto" | "column" | "page"))? (fo:break-after::("auto" | "column" | "page"))? ;
common-fill-default-attlist ::= (smil:fillDefault::("remove" | "freeze" | "hold" | "transition" | "auto" | "inherit"))? ;
nonNegativePixelLength ::= string() ;
number-day-attlist ::= (number:style::("short" | "long"))? ;
common-form-visual-effect-attlist ::= (form:visual-effect::("flat" | "3d"))? ;
horizontal-mirror ::= "horizontal" | "horizontal-on-odd" | "horizontal-on-even" ;
common-writing-mode-attlist ::= (style:writing-mode::("lr-tb" | "rl-tb" | "tb-rl" | "tb-lr" | "lr" | "rl" | "tb" | "page"))? ;
presentationEffects ::= "none" | "fade" | "move" | "stripes" | "open" | "close" | "dissolve" | "wavyline" | "random" | "lines" | "laser" | "appear" | "hide" | "move-short" | "checkerboard" | "rotate" | "stretch" ;
common-text-align ::= (fo:text-align::("start" | "end" | "left" | "right" | "center" | "justify"))? ;
common-form-relative-image-position-attlist ::= ((form:image-position::"center")?) | (form:image-position::("start" | "end" | "top" | "bottom") (form:image-align::("start" | "center" | "end"))?) ;
svg-font-face-name ::= svg:font-face-name::((name::string())?) ;
positiveInteger ::= integer() ;
tab-cycles ::= "records" | "current" | "page" ;
common-anim-add-accum-attlist ::= (smil:accumulate::("none" | "sum"))? ;
 common-anim-add-accum-attlist ::= (smil:additive::("replace" | "sum"))? ;
states ::= "unchecked" | "checked" | "unknown" ;
point3D ::= string() ;
--------------------odf::opendoc-1.1-manifest.bgf--------------------
key-derivation-attlist ::= manifest:key-derivation-name::string() ;
 key-derivation-attlist ::= manifest:salt::string() ;
 key-derivation-attlist ::= manifest:iteration-count::integer() ;
encryption-data-attlist ::= manifest:checksum-type::string() ;
 encryption-data-attlist ::= manifest:checksum::string() ;
file-entry-attlist ::= manifest:full-path::string() ;
 file-entry-attlist ::= (manifest:size::integer())? ;
 file-entry-attlist ::= manifest:media-type::string() ;
algorithm-attlist ::= manifest:algorithm-name::string() ;
 algorithm-attlist ::= manifest:initialisation-vector::string() ;
--------------------odf::opendoc-1.1-strict.bgf--------------------
office-drawing-attlist ::= ε ;
list-source-type ::= (form:list-source-type::("table" | "query" | "sql" | "sql-pass-through" | "value-list" | "table-fields"))? ;
office-image-attlist ::= ε ;
common-anim-spline-mode-attlist ::= (smil:calcMode::("discrete" | "linear" | "paced" | "spline"))? ;
vector3D ::= string() ;
text-bibliography-types ::= "article" | "book" | "booklet" | "conference" | "custom1" | "custom2" | "custom3" | "custom4" | "custom5" | "email" | "inbook" | "incollection" | "inproceedings" | "journal" | "manual" | "mastersthesis" | "misc" | "phdthesis" | "proceedings" | "techreport" | "unpublished" | "www" ;
dateOrDateTime ::= string() ;
text-index-entry-chapter-attrs ::= (text:display::("name" | "number" | "number-and-name"))? ;
common-title-attlist ::= (form:title::string())? ;
length ::= string() ;
common-fill-timing-attlist ::= (smil:fill::("remove" | "freeze" | "hold" | "auto" | "default" | "transition"))? ;
points ::= string() ;
rowOrCol ::= "row" | "column" ;
anyURI ::= string() ;
number-text-content ::= number:text-content::ε ;
styleName ::= string() ;
style-ruby-properties-attlist ::= (style:ruby-position::("above" | "below"))? ;
 style-ruby-properties-attlist ::= (style:ruby-align::("left" | "center" | "right" | "distribute-letter" | "distribute-space"))? ;
common-restart-timing-attlist ::= (smil:restart::("never" | "always" | "whenNotActive" | "default"))? ;
IDREFS ::= string() ;
office-image-content-prelude ::= ε ;
gradient-style ::= "linear" | "axial" | "radial" | "ellipsoid" | "square" | "rectangular" ;
text-sequence-ref-content ::= (text:reference-format::("page" | "chapter" | "direction" | "text" | "category-and-value" | "caption" | "value"))? ;
relativeLength ::= string() ;
common-dr3d-transform-attlist ::= (dr3d:transform::string())? ;
double ::= string() ;
draw-plugin-attlist ::= (draw:mime-type::string())? ;
time ::= string() ;
presentationSpeeds ::= "slow" | "medium" | "fast" ;
style-chart-properties-elements ::= ε ;
fontFamilyGeneric ::= "roman" | "swiss" | "modern" | "decorative" | "script" | "system" ;
number-era-attlist ::= (number:style::("short" | "long"))? ;
common-draw-layer-name-attlist ::= (draw:layer::string())? ;
nonNegativeInteger ::= integer() ;
common-field-display-value-formula-attlist ::= (text:display::("value" | "formula"))? ;
number-am-pm ::= number:am-pm::ε ;
lineMode ::= "continuous" | "skip-white-space" ;
cellRangeAddressList ::= string() ;
anim-animate-transform-attlist ::= svg:type::("translate" | "scale" | "rotate" | "skewX" | "skewY") ;
draw-param-attlist ::= (draw:name::string())? ;
 draw-param-attlist ::= (draw:value::string())? ;
style-list-level-properties-elements ::= ε ;
draw-object-ole-attlist ::= (draw:class-id::string())? ;
svg-title ::= svg:title::string() ;
date ::= string() ;
anim-animate-color-attlist ::= (anim:color-interpolation::("rgb" | "hsl"))? ;
 anim-animate-color-attlist ::= (anim:color-interpolation-direction::("clockwise" | "counter-clockwise"))? ;
office-image-content-epilogue ::= ε ;
nonNegativeLength ::= string() ;
fontWeight ::= "normal" | "bold" | "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" | "900" ;
number-boolean ::= number:boolean::ε ;
countryCode ::= string() ;
fontStyle ::= "normal" | "italic" | "oblique" ;
textEncoding ::= string() ;
text-ref-content ::= (text:reference-format::("page" | "chapter" | "direction" | "text"))? ;
dateTime ::= string() ;
duration ::= string() ;
common-restart-default-attlist ::= (smil:restartDefault::("never" | "always" | "whenNotActive" | "inherit"))? ;
horiBackPos ::= "left" | "center" | "right" ;
common-break-attlist ::= (fo:break-before::("auto" | "column" | "page"))? (fo:break-after::("auto" | "column" | "page"))? ;
common-fill-default-attlist ::= (smil:fillDefault::("remove" | "freeze" | "hold" | "transition" | "auto" | "inherit"))? ;
nonNegativePixelLength ::= string() ;
common-form-visual-effect-attlist ::= (form:visual-effect::("flat" | "3d"))? ;
horizontal-mirror ::= "horizontal" | "horizontal-on-odd" | "horizontal-on-even" ;
common-writing-mode-attlist ::= (style:writing-mode::("lr-tb" | "rl-tb" | "tb-rl" | "tb-lr" | "lr" | "rl" | "tb" | "page"))? ;
presentationEffects ::= "none" | "fade" | "move" | "stripes" | "open" | "close" | "dissolve" | "wavyline" | "random" | "lines" | "laser" | "appear" | "hide" | "move-short" | "checkerboard" | "rotate" | "stretch" ;
common-text-align ::= (fo:text-align::("start" | "end" | "left" | "right" | "center" | "justify"))? ;
svg-font-face-name ::= svg:font-face-name::((svg:name::string())?) ;
tab-cycles ::= "records" | "current" | "page" ;
office-chart-attlist ::= ε ;
presentationEffectDirections ::= "none" | "from-left" | "from-top" | "from-right" | "from-bottom" | "from-center" | "from-upper-left" | "from-upper-right" | "from-lower-left" | "from-lower-right" | "to-left" | "to-top" | "to-right" | "to-bottom" | "to-upper-left" | "to-upper-right" | "to-lower-right" | "to-lower-left" | "path" | "spiral-inward-left" | "spiral-inward-right" | "spiral-outward-left" | "spiral-outward-right" | "vertical" | "horizontal" | "to-center" | "clockwise" | "counter-clockwise" ;
number-hours-attlist ::= (number:style::("short" | "long"))? ;
text-note-class ::= text:note-class::("footnote" | "endnote") ;
office-presentation-attlist ::= ε ;
vertBackPos ::= "top" | "center" | "bottom" ;
style-ruby-properties-elements ::= ε ;
cellRangeAddress ::= string() ;
types ::= "submit" | "reset" | "push" | "url" ;
IDREF ::= string() ;
common-style-direction-attlist ::= (style:direction::("ltr" | "ttb"))? ;
presentation-classes ::= "title" | "outline" | "subtitle" | "text" | "graphic" | "object" | "chart" | "table" | "orgchart" | "page" | "notes" | "handout" | "header" | "footer" | "date-time" | "page-number" ;
pathData ::= string() ;
number-day-of-week-attlist ::= (number:style::("short" | "long"))? ;
formula ::= string() ;
common-keep-with-next-attlist ::= (fo:keep-with-next::("auto" | "always"))? ;
languageCode ::= string() ;
draw-glue-points-attlist ::= draw:escape-direction::("auto" | "left" | "right" | "up" | "down" | "horizontal" | "vertical") ;
color ::= string() ;
svg-desc ::= svg:desc::string() ;
language ::= string() ;
common-vertical-rel-attlist ::= (style:vertical-rel::("page" | "page-content" | "frame" | "frame-content" | "paragraph" | "paragraph-content" | "char" | "line" | "baseline" | "text"))? ;
style-table-column-properties-elements ::= ε ;
text-template-name-attlist ::= (text:display::("full" | "path" | "name" | "name-and-extension" | "area" | "title"))? ;
lineType ::= "none" | "single" | "double" ;
style-text-properties-elements ::= ε ;
number-minutes-attlist ::= (number:style::("short" | "long"))? ;
common-field-display-value-formula-none-attlist ::= (text:display::("value" | "formula" | "none"))? ;
valueType ::= "float" | "time" | "date" | "percentage" | "currency" | "boolean" | "string" ;
timeOrDateTime ::= string() ;
common-field-display-value-none-attlist ::= (text:display::("value" | "none"))? ;
percent ::= string() ;
text-index-scope-attr ::= (text:index-scope::("document" | "chapter"))? ;
common-format-source-attlist ::= (number:format-source::("fixed" | "language"))? ;
positiveLength ::= string() ;
integer ::= integer() ;
styleNameRefs ::= string()* ;
common-field-description-attlist ::= (text:description::string())? ;
fontVariant ::= "normal" | "small-caps" ;
number-year-attlist ::= (number:style::("short" | "long"))? ;
svg-font-face-format ::= svg:font-face-format::((svg:string::string())?) ;
cellAddress ::= string() ;
fontPitch ::= "fixed" | "variable" ;
number-text ::= number:text::string() ;
base64Binary ::= string() ;
character ::= string() ;
boolean ::= "true" | "false" ;
variableName ::= string() ;
text-soft-page-break ::= text:soft-page-break::ε ;
lineStyle ::= "none" | "solid" | "dotted" | "dash" | "long-dash" | "dot-dash" | "dot-dot-dash" | "wave" ;
ID ::= string() ;
number-quarter-attlist ::= (number:style::("short" | "long"))? ;
styleNameRef ::= string() | ε ;
common-endsync-timing-attlist ::= (smil:endsync::("first" | "last" | "all" | "media"))? ;
table-visibility-value ::= "visible" | "collapse" | "filter" ;
navigation ::= "none" | "current" | "parent" ;
string ::= string() ;
namespacedToken ::= string() ;
number-day-attlist ::= (number:style::("short" | "long"))? ;
common-form-relative-image-position-attlist ::= ((form:image-position::"center")?) | (form:image-position::("start" | "end" | "top" | "bottom") (form:image-align::("start" | "center" | "end"))?) ;
positiveInteger ::= integer() ;
common-anim-add-accum-attlist ::= (smil:accumulate::("none" | "sum"))? ;
 common-anim-add-accum-attlist ::= (smil:additive::("replace" | "sum"))? ;
states ::= "unchecked" | "checked" | "unknown" ;
point3D ::= string() ;
--------------------odf::opendoc-1.1.bgf--------------------
office-drawing-attlist ::= ε ;
list-source-type ::= (form:list-source-type::("table" | "query" | "sql" | "sql-pass-through" | "value-list" | "table-fields"))? ;
office-image-attlist ::= ε ;
common-anim-spline-mode-attlist ::= (smil:calcMode::("discrete" | "linear" | "paced" | "spline"))? ;
vector3D ::= string() ;
text-bibliography-types ::= "article" | "book" | "booklet" | "conference" | "custom1" | "custom2" | "custom3" | "custom4" | "custom5" | "email" | "inbook" | "incollection" | "inproceedings" | "journal" | "manual" | "mastersthesis" | "misc" | "phdthesis" | "proceedings" | "techreport" | "unpublished" | "www" ;
dateOrDateTime ::= string() ;
text-index-entry-chapter-attrs ::= (text:display::("name" | "number" | "number-and-name"))? ;
common-title-attlist ::= (form:title::string())? ;
length ::= string() ;
common-fill-timing-attlist ::= (smil:fill::("remove" | "freeze" | "hold" | "auto" | "default" | "transition"))? ;
points ::= string() ;
rowOrCol ::= "row" | "column" ;
anyURI ::= string() ;
number-text-content ::= number:text-content::ε ;
styleName ::= string() ;
style-ruby-properties-attlist ::= (style:ruby-position::("above" | "below"))? ;
 style-ruby-properties-attlist ::= (style:ruby-align::("left" | "center" | "right" | "distribute-letter" | "distribute-space"))? ;
common-restart-timing-attlist ::= (smil:restart::("never" | "always" | "whenNotActive" | "default"))? ;
IDREFS ::= string() ;
office-image-content-prelude ::= ε ;
gradient-style ::= "linear" | "axial" | "radial" | "ellipsoid" | "square" | "rectangular" ;
text-sequence-ref-content ::= (text:reference-format::("page" | "chapter" | "direction" | "text" | "category-and-value" | "caption" | "value"))? ;
relativeLength ::= string() ;
common-dr3d-transform-attlist ::= (dr3d:transform::string())? ;
double ::= string() ;
draw-plugin-attlist ::= (draw:mime-type::string())? ;
time ::= string() ;
presentationSpeeds ::= "slow" | "medium" | "fast" ;
style-chart-properties-elements ::= ε ;
fontFamilyGeneric ::= "roman" | "swiss" | "modern" | "decorative" | "script" | "system" ;
number-era-attlist ::= (number:style::("short" | "long"))? ;
common-draw-layer-name-attlist ::= (draw:layer::string())? ;
nonNegativeInteger ::= integer() ;
common-field-display-value-formula-attlist ::= (text:display::("value" | "formula"))? ;
number-am-pm ::= number:am-pm::ε ;
lineMode ::= "continuous" | "skip-white-space" ;
cellRangeAddressList ::= string() ;
anim-animate-transform-attlist ::= svg:type::("translate" | "scale" | "rotate" | "skewX" | "skewY") ;
draw-param-attlist ::= (draw:name::string())? ;
 draw-param-attlist ::= (draw:value::string())? ;
style-list-level-properties-elements ::= ε ;
draw-object-ole-attlist ::= (draw:class-id::string())? ;
svg-title ::= svg:title::string() ;
date ::= string() ;
anim-animate-color-attlist ::= (anim:color-interpolation::("rgb" | "hsl"))? ;
 anim-animate-color-attlist ::= (anim:color-interpolation-direction::("clockwise" | "counter-clockwise"))? ;
office-image-content-epilogue ::= ε ;
nonNegativeLength ::= string() ;
fontWeight ::= "normal" | "bold" | "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" | "900" ;
number-boolean ::= number:boolean::ε ;
countryCode ::= string() ;
fontStyle ::= "normal" | "italic" | "oblique" ;
textEncoding ::= string() ;
text-ref-content ::= (text:reference-format::("page" | "chapter" | "direction" | "text"))? ;
dateTime ::= string() ;
duration ::= string() ;
common-restart-default-attlist ::= (smil:restartDefault::("never" | "always" | "whenNotActive" | "inherit"))? ;
horiBackPos ::= "left" | "center" | "right" ;
common-break-attlist ::= (fo:break-before::("auto" | "column" | "page"))? (fo:break-after::("auto" | "column" | "page"))? ;
common-fill-default-attlist ::= (smil:fillDefault::("remove" | "freeze" | "hold" | "transition" | "auto" | "inherit"))? ;
nonNegativePixelLength ::= string() ;
common-form-visual-effect-attlist ::= (form:visual-effect::("flat" | "3d"))? ;
horizontal-mirror ::= "horizontal" | "horizontal-on-odd" | "horizontal-on-even" ;
common-writing-mode-attlist ::= (style:writing-mode::("lr-tb" | "rl-tb" | "tb-rl" | "tb-lr" | "lr" | "rl" | "tb" | "page"))? ;
presentationEffects ::= "none" | "fade" | "move" | "stripes" | "open" | "close" | "dissolve" | "wavyline" | "random" | "lines" | "laser" | "appear" | "hide" | "move-short" | "checkerboard" | "rotate" | "stretch" ;
common-text-align ::= (fo:text-align::("start" | "end" | "left" | "right" | "center" | "justify"))? ;
svg-font-face-name ::= svg:font-face-name::((svg:name::string())?) ;
tab-cycles ::= "records" | "current" | "page" ;
office-chart-attlist ::= ε ;
presentationEffectDirections ::= "none" | "from-left" | "from-top" | "from-right" | "from-bottom" | "from-center" | "from-upper-left" | "from-upper-right" | "from-lower-left" | "from-lower-right" | "to-left" | "to-top" | "to-right" | "to-bottom" | "to-upper-left" | "to-upper-right" | "to-lower-right" | "to-lower-left" | "path" | "spiral-inward-left" | "spiral-inward-right" | "spiral-outward-left" | "spiral-outward-right" | "vertical" | "horizontal" | "to-center" | "clockwise" | "counter-clockwise" ;
number-hours-attlist ::= (number:style::("short" | "long"))? ;
text-note-class ::= text:note-class::("footnote" | "endnote") ;
office-presentation-attlist ::= ε ;
vertBackPos ::= "top" | "center" | "bottom" ;
style-ruby-properties-elements ::= ε ;
cellRangeAddress ::= string() ;
types ::= "submit" | "reset" | "push" | "url" ;
IDREF ::= string() ;
common-style-direction-attlist ::= (style:direction::("ltr" | "ttb"))? ;
presentation-classes ::= "title" | "outline" | "subtitle" | "text" | "graphic" | "object" | "chart" | "table" | "orgchart" | "page" | "notes" | "handout" | "header" | "footer" | "date-time" | "page-number" ;
pathData ::= string() ;
number-day-of-week-attlist ::= (number:style::("short" | "long"))? ;
formula ::= string() ;
common-keep-with-next-attlist ::= (fo:keep-with-next::("auto" | "always"))? ;
languageCode ::= string() ;
draw-glue-points-attlist ::= draw:escape-direction::("auto" | "left" | "right" | "up" | "down" | "horizontal" | "vertical") ;
color ::= string() ;
svg-desc ::= svg:desc::string() ;
language ::= string() ;
common-vertical-rel-attlist ::= (style:vertical-rel::("page" | "page-content" | "frame" | "frame-content" | "paragraph" | "paragraph-content" | "char" | "line" | "baseline" | "text"))? ;
style-table-column-properties-elements ::= ε ;
text-template-name-attlist ::= (text:display::("full" | "path" | "name" | "name-and-extension" | "area" | "title"))? ;
lineType ::= "none" | "single" | "double" ;
style-text-properties-elements ::= ε ;
number-minutes-attlist ::= (number:style::("short" | "long"))? ;
common-field-display-value-formula-none-attlist ::= (text:display::("value" | "formula" | "none"))? ;
valueType ::= "float" | "time" | "date" | "percentage" | "currency" | "boolean" | "string" ;
timeOrDateTime ::= string() ;
common-field-display-value-none-attlist ::= (text:display::("value" | "none"))? ;
percent ::= string() ;
text-index-scope-attr ::= (text:index-scope::("document" | "chapter"))? ;
common-format-source-attlist ::= (number:format-source::("fixed" | "language"))? ;
positiveLength ::= string() ;
integer ::= integer() ;
styleNameRefs ::= string()* ;
common-field-description-attlist ::= (text:description::string())? ;
fontVariant ::= "normal" | "small-caps" ;
number-year-attlist ::= (number:style::("short" | "long"))? ;
svg-font-face-format ::= svg:font-face-format::((svg:string::string())?) ;
cellAddress ::= string() ;
fontPitch ::= "fixed" | "variable" ;
number-text ::= number:text::string() ;
base64Binary ::= string() ;
character ::= string() ;
boolean ::= "true" | "false" ;
variableName ::= string() ;
text-soft-page-break ::= text:soft-page-break::ε ;
lineStyle ::= "none" | "solid" | "dotted" | "dash" | "long-dash" | "dot-dash" | "dot-dot-dash" | "wave" ;
ID ::= string() ;
number-quarter-attlist ::= (number:style::("short" | "long"))? ;
styleNameRef ::= string() | ε ;
common-endsync-timing-attlist ::= (smil:endsync::("first" | "last" | "all" | "media"))? ;
table-visibility-value ::= "visible" | "collapse" | "filter" ;
navigation ::= "none" | "current" | "parent" ;
string ::= string() ;
namespacedToken ::= string() ;
number-day-attlist ::= (number:style::("short" | "long"))? ;
common-form-relative-image-position-attlist ::= ((form:image-position::"center")?) | (form:image-position::("start" | "end" | "top" | "bottom") (form:image-align::("start" | "center" | "end"))?) ;
positiveInteger ::= integer() ;
common-anim-add-accum-attlist ::= (smil:accumulate::("none" | "sum"))? ;
 common-anim-add-accum-attlist ::= (smil:additive::("replace" | "sum"))? ;
states ::= "unchecked" | "checked" | "unknown" ;
point3D ::= string() ;
--------------------odf::opendoc-1.2-dsig.bgf--------------------
dsig-document-signatures-attlist ::= dsig:version::"1.2" ;
--------------------odf::opendoc-1.2-manifest.bgf--------------------
nonNegativeInteger ::= integer() ;
string ::= string() ;
manifest-attlist ::= manifest:version::"1.2" ;
anyURI ::= string() ;
namespacedToken ::= string() ;
base64Binary ::= string() ;
--------------------odf::opendoc-1.2.bgf--------------------
office-drawing-attlist ::= ε ;
db-table-include-filter-attlist ::= ε ;
db-table-presentations-attlist ::= ε ;
list-source-type ::= (form:list-source-type::("table" | "query" | "sql" | "sql-pass-through" | "value-list" | "table-fields"))? ;
office-image-attlist ::= ε ;
db-table-filter-pattern-attlist ::= ε ;
common-anim-spline-mode-attlist ::= (smil:calcMode::("discrete" | "linear" | "paced" | "spline"))? ;
vector3D ::= string() ;
text-bibliography-types ::= "article" | "book" | "booklet" | "conference" | "custom1" | "custom2" | "custom3" | "custom4" | "custom5" | "email" | "inbook" | "incollection" | "inproceedings" | "journal" | "manual" | "mastersthesis" | "misc" | "phdthesis" | "proceedings" | "techreport" | "unpublished" | "www" ;
dateOrDateTime ::= string() ;
length ::= string() ;
common-fill-timing-attlist ::= (smil:fill::("remove" | "freeze" | "hold" | "auto" | "default" | "transition"))? ;
points ::= string() ;
rowOrCol ::= "row" | "column" ;
NCName ::= string() ;
anyURI ::= string() ;
number-text-content ::= number:text-content::ε ;
styleName ::= string() ;
style-ruby-properties-attlist ::= (style:ruby-position::("above" | "below"))? (style:ruby-align::("left" | "center" | "right" | "distribute-letter" | "distribute-space"))? ;
common-restart-timing-attlist ::= (smil:restart::("never" | "always" | "whenNotActive" | "default"))? ;
db-connection-data-attlist ::= ε ;
IDREFS ::= string() ;
labelPositions ::= "avoid-overlap" | "center" | "top" | "top-right" | "right" | "bottom-right" | "bottom" | "bottom-left" | "left" | "top-left" | "inside" | "outside" | "near-origin" ;
office-image-content-prelude ::= ε ;
db-keys-attlist ::= ε ;
anyIRI ::= string() ;
gradient-style ::= "linear" | "axial" | "radial" | "ellipsoid" | "square" | "rectangular" ;
angle ::= string() ;
relativeLength ::= string() ;
double ::= string() ;
nonNegativeDecimal ::= integer() ;
time ::= string() ;
presentationSpeeds ::= "slow" | "medium" | "fast" ;
style-chart-properties-elements ::= ε ;
fontFamilyGeneric ::= "roman" | "swiss" | "modern" | "decorative" | "script" | "system" ;
number-era-attlist ::= (number:style::("short" | "long"))? ;
db-data-source-attlist ::= ε ;
nonNegativeInteger ::= integer() ;
common-field-display-value-formula-attlist ::= (text:display::("value" | "formula"))? ;
number-am-pm ::= number:am-pm::ε ;
lineMode ::= "continuous" | "skip-white-space" ;
cellRangeAddressList ::= string() ;
anim-animate-transform-attlist ::= svg:type::("translate" | "scale" | "rotate" | "skewX" | "skewY") ;
SafeCURIE ::= string() ;
svg-title ::= svg:title::string() ;
date ::= string() ;
zeroToOneDecimal ::= integer() ;
anim-animate-color-attlist ::= (anim:color-interpolation::("rgb" | "hsl"))? (anim:color-interpolation-direction::("clockwise" | "counter-clockwise"))? ;
office-image-content-epilogue ::= ε ;
nonNegativeLength ::= string() ;
fontWeight ::= "normal" | "bold" | "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" | "900" ;
number-boolean ::= number:boolean::ε ;
countryCode ::= string() ;
fontStyle ::= "normal" | "italic" | "oblique" ;
textEncoding ::= string() ;
common-ref-format-values ::= "page" | "chapter" | "direction" | "text" ;
dateTime ::= string() ;
table-title ::= table:title::string() ;
signedZeroToHundredPercent ::= string() ;
duration ::= string() ;
common-restart-default-attlist ::= (smil:restartDefault::("never" | "always" | "whenNotActive" | "inherit"))? ;
db-key-columns-attlist ::= ε ;
horiBackPos ::= "left" | "center" | "right" ;
common-break-attlist ::= (fo:break-before::("auto" | "column" | "page"))? (fo:break-after::("auto" | "column" | "page"))? ;
common-fill-default-attlist ::= (smil:fillDefault::("remove" | "freeze" | "hold" | "transition" | "auto" | "inherit"))? ;
db-table-exclude-filter-attlist ::= ε ;
db-database-description-attlist ::= ε ;
nonNegativePixelLength ::= string() ;
common-form-visual-effect-attlist ::= (form:visual-effect::("flat" | "3d"))? ;
horizontal-mirror ::= "horizontal" | "horizontal-on-odd" | "horizontal-on-even" ;
common-writing-mode-attlist ::= (style:writing-mode::("lr-tb" | "rl-tb" | "tb-rl" | "tb-lr" | "lr" | "rl" | "tb" | "page"))? ;
presentationEffects ::= "none" | "fade" | "move" | "stripes" | "open" | "close" | "dissolve" | "wavyline" | "random" | "lines" | "laser" | "appear" | "hide" | "move-short" | "checkerboard" | "rotate" | "stretch" ;
common-text-align ::= (fo:text-align::("start" | "end" | "left" | "right" | "center" | "justify"))? ;
tab-cycles ::= "records" | "current" | "page" ;
db-columns-attlist ::= ε ;
office-chart-attlist ::= ε ;
presentationEffectDirections ::= "none" | "from-left" | "from-top" | "from-right" | "from-bottom" | "from-center" | "from-upper-left" | "from-upper-right" | "from-lower-left" | "from-lower-right" | "to-left" | "to-top" | "to-right" | "to-bottom" | "to-upper-left" | "to-upper-right" | "to-lower-right" | "to-lower-left" | "path" | "spiral-inward-left" | "spiral-inward-right" | "spiral-outward-left" | "spiral-outward-right" | "vertical" | "horizontal" | "to-center" | "clockwise" | "counter-clockwise" ;
number-hours-attlist ::= (number:style::("short" | "long"))? ;
text-note-class ::= text:note-class::("footnote" | "endnote") ;
office-presentation-attlist ::= ε ;
vertBackPos ::= "top" | "center" | "bottom" ;
style-ruby-properties-elements ::= ε ;
db-table-type-attlist ::= ε ;
types ::= "submit" | "reset" | "push" | "url" ;
cellRangeAddress ::= string() ;
IDREF ::= string() ;
common-style-direction-attlist ::= (style:direction::("ltr" | "ttb"))? ;
presentation-classes ::= "title" | "outline" | "subtitle" | "text" | "graphic" | "object" | "chart" | "table" | "orgchart" | "page" | "notes" | "handout" | "header" | "footer" | "date-time" | "page-number" ;
pathData ::= string() ;
number-day-of-week-attlist ::= (number:style::("short" | "long"))? ;
common-keep-with-next-attlist ::= (fo:keep-with-next::("auto" | "always"))? ;
languageCode ::= string() ;
db-table-definitions-attlist ::= ε ;
color ::= string() ;
db-schema-definition-attlist ::= ε ;
db-reports-attlist ::= ε ;
extrusionOrigin ::= string() ;
zeroToHundredPercent ::= string() ;
db-table-presentation-attlist ::= ε ;
svg-desc ::= svg:desc::string() ;
scriptCode ::= string() ;
language ::= string() ;
common-vertical-rel-attlist ::= (style:vertical-rel::("page" | "page-content" | "frame" | "frame-content" | "paragraph" | "paragraph-content" | "char" | "line" | "baseline" | "text"))? ;
style-table-column-properties-elements ::= ε ;
db-data-source-settings-attlist ::= ε ;
text-template-name-attlist ::= (text:display::("full" | "path" | "name" | "name-and-extension" | "area" | "title"))? ;
db-component-collection-attlist ::= ε ;
db-table-type-filter-attlist ::= ε ;
lineType ::= "none" | "single" | "double" ;
style-text-properties-elements ::= ε ;
number-minutes-attlist ::= (number:style::("short" | "long"))? ;
common-field-display-value-formula-none-attlist ::= (text:display::("value" | "formula" | "none"))? ;
valueType ::= "float" | "time" | "date" | "percentage" | "currency" | "boolean" | "string" ;
timeOrDateTime ::= string() ;
db-indices-attlist ::= ε ;
common-field-display-value-none-attlist ::= (text:display::("value" | "none"))? ;
percent ::= string() ;
db-data-types ::= "bit" | "boolean" | "tinyint" | "smallint" | "integer" | "bigint" | "float" | "real" | "double" | "numeric" | "decimal" | "char" | "varchar" | "longvarchar" | "date" | "time" | "timestmp" | "binary" | "varbinary" | "longvarbinary" | "sqlnull" | "other" | "object" | "distinct" | "struct" | "array" | "blob" | "clob" | "ref" ;
text-index-scope-attr ::= (text:index-scope::("document" | "chapter"))? ;
common-format-source-attlist ::= (number:format-source::("fixed" | "language"))? ;
positiveLength ::= string() ;
integer ::= integer() ;
db-data-source-setting-types ::= "boolean" | "short" | "int" | "long" | "double" | "string" ;
styleNameRefs ::= string()* ;
CURIE ::= string() ;
db-table-filter-attlist ::= ε ;
chart-dimension ::= "x" | "y" | "z" ;
fontVariant ::= "normal" | "small-caps" ;
number-year-attlist ::= (number:style::("short" | "long"))? ;
cellAddress ::= string() ;
clipShape ::= string() ;
fontPitch ::= "fixed" | "variable" ;
number-text ::= number:text::string() ;
base64Binary ::= string() ;
table-desc ::= table:desc::string() ;
db-column-definitions-attlist ::= ε ;
character ::= string() ;
boolean ::= "true" | "false" ;
db-data-source-setting-value-attlist ::= ε ;
variableName ::= string() ;
db-query-collection-attlist ::= ε ;
text-soft-page-break ::= text:soft-page-break::ε ;
lineStyle ::= "none" | "solid" | "dotted" | "dash" | "long-dash" | "dot-dash" | "dot-dot-dash" | "wave" ;
ID ::= string() ;
number-quarter-attlist ::= (number:style::("short" | "long"))? ;
styleNameRef ::= string() | ε ;
table-visibility-value ::= "visible" | "collapse" | "filter" ;
navigation ::= "none" | "current" | "parent" ;
db-forms-attlist ::= ε ;
string ::= string() ;
list-linkage-type ::= (form:list-linkage-type::("selection" | "selection-indices"))? ;
namespacedToken ::= string() ;
number-day-attlist ::= (number:style::("short" | "long"))? ;
db-queries-attlist ::= ε ;
common-form-relative-image-position-attlist ::= ((form:image-position::"center")?) | (form:image-position::("start" | "end" | "top" | "bottom") (form:image-align::("start" | "center" | "end"))?) ;
common-anim-add-accum-attlist ::= (smil:accumulate::("none" | "sum"))? (smil:additive::("replace" | "sum"))? ;
positiveInteger ::= integer() ;
states ::= "unchecked" | "checked" | "unknown" ;
point3D ::= string() ;
--------------------pascal::bruneliere.bgf--------------------
String ::= string() ;
--------------------pascal::delphi.bgf--------------------
builtinid ::= "string" | "file" | "set" ;
sign ::= "+" | "-" ;
procedure_keyword ::= "function" | "procedure" | "constructor" | "destructor" ;
finalization_kw ::= "finalization" ;
real_type ::= "real" | "real48" | "single" | "double" | "extended" | "comp" | "currency" ;
integer_type ::= "shortint" | "smallint" | "longint" | "int64" | "word" | "byte" | "longword" | "integer" | "cardinal" ;
of_const ::= "of" "const" ;
end_struct ::= "end" ;
file_end ::= "." ;
accessor_verb ::= "read" | "write" ;
hint_directive ::= "platform" | "deprecated" | "library" ;
calling_spec ::= "pascal" | "safecall" | "stdcall" | "cdecl" | "register" | "local" ;
to_or_downto ::= "to" | "downto" ;
variant_type ::= "variant" | "olevariant" ;
equal ::= "=" ;
visibility ::= "public" | "protected" | ("strict"? "private") | "published" | "automated" ;
var_keyword ::= "var" | "threadvar" ;
boolean_type ::= "boolean" | "bytebool" | "wordbool" | "longbool" ;
initialization_kw ::= "initialization" | "begin" ;
of_object ::= "of" "object" ;
interface_keyword ::= "interface" | "dispinterface" ;
char_type ::= "char" | "ansichar" | "widechar" ;
infix_opr ::= ">" | "<" | "<=" | ">=" | "<>" | "=" | "in" | "is" | "as" | "+" | "-" | "or" | "xor" | "*" | "/" | "div" | "mod" | "and" | "shl" | "shr" | "^" ;
defaultarray_spec ::= ";" "default" ;
class_keyword ::= "class" | "record" | "object" ;
parm_qual ::= "var" | "const" | "out" ;
ctrlchar ::= "^'A" | "^'B" | "^'C" | "^'D" | "^'E" | "^'F" | "^'G" | "^'H" | "^'I" | "^'J" | "^'K" | "^'L" | "^'M" | "^'N" | "^'O" | "^'P" | "^'Q" | "^'R" | "^'S" | "^'T" | "^'U" | "^'V" | "^'W" | "^'X" | "^'Y" | "^'Z" ;
prop_index_modifier ::= "const" | "var" ;
--------------------pascal::delphipp.bgf--------------------
booleanlit ::= "FALSE" | "TRUE" ;
boolfunc ::= "DEFINED" | "DECLARED" | "OPTION" ;
pp_compareopr ::= ">" | "<" | "=" | ">=" | "<=" | "<>" ;
pp_boolopr ::= "AND" | "OR" | "XOR" ;
pp_align ::= "A1" | "A2" | "A4" | "A8" ;
pp_minenumsize ::= "Z1" | "Z2" | "Z4" ;
endif_alt ::= "ENDIF" | "IFEND" ;
pp_switchopt ::= "+" | "-" | "ON" | "OFF" ;
--------------------pascal::object.bgf--------------------
add_op ::= "+" | "-" | "or" | "xor" ;
variantType ::= "variant" | "olevariant" ;
if ::= "if" | "If" ;
semicolon_virtual ::= ";" "virtual" ;
mul_op ::= "*" | "/" | "div" | "mod" | "and" | "shl" | "shr" | "DIV" | "AND" ;
bool_value ::= "true" | "false" | "True" | "False" ;
except ::= "except" | "Except" ;
class_visibility ::= "public" | "protected" | "Protected" | "private" | "published" ;
realType ::= "real48" | "real" | "single" | "double" | "extended" | "currency" | "comp" ;
ordinal_identifier ::= "shortint" | "smallint" | "integer" | "byte" | "longint" | "int64" | "word" | "boolean" | "char" | "widechar" | "longchar" | "pchar" ;
not_word ::= "not" | "Not" | "NOT" ;
to_or_downto ::= "to" | "downto" ;
property_word ::= "property" | "Property" ;
procedure ::= "procedure" | "Procedure" ;
as ::= "As" | "as" ;
function_word ::= "function" | "Function" ;
array_word ::= "array" | "Array" ;
do ::= "do" | "Do" | "DO" ;
begin ::= "begin" | "Begin" ;
for ::= "for" | "For" ;
rel_op ::= ">" | "<" | "<=" | ">=" | "<>" | "=" | "in" | "is" ;
of_object ::= "of" "object" ;
var ::= "var" | "Var" ;
op ::= ">" | "<" | "<=" | ">=" | "<>" | "=" | "in" | "is" | "+" | "-" | "or" | "xor" | "*" | "/" | "div" | "mod" | "and" | "shl" | "shr" | "DIV" | "AND" ;
predefinedType ::= "integer" | "real" | "boolean" | "char" | "byte" ;
--------------------pl1::bruneliere.bgf--------------------
PLIAttribute ::= ε ;
Integer ::= integer() ;
String ::= string() ;
--------------------uml::collab.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------uml::extended.bgf--------------------
Multiplicity ::= ε ;
Integer ::= integer() ;
ChangeableKind ::= ε ;
Name ::= ε ;
RfIntegretyKind ::= ε ;
Boolean ::= "true" | "false" ;
Expression ::= ε ;
ScopeKind ::= ε ;
AggregationKind ::= ε ;
RlIntegretyKind ::= ε ;
String ::= string() ;
--------------------uml::fragment.bgf--------------------
Integer ::= integer() ;
Generalization ::= ε ;
Event ::= ε ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------uml::oocm.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
ScopeKind ::= (sk_instance_level::ε) | (sk_classifier_level::ε) ;
VisibilityKind ::= (vk_public_vis::ε) | (vk_private_vis::ε) | (vk_protected_vis::ε) ;
String ::= string() ;
--------------------uml::reuse.bgf--------------------
BasicProvider ::= ε ;
Integer ::= integer() ;
BasicReuser ::= ε ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------uml::simple.bgf--------------------
String ::= string() ;
--------------------uml::statecharts.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------uml::stereo.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------uml::uml-uc.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------uml::uml2.bgf--------------------
Integer ::= integer() ;
MessageKind ::= (found::ε) | (lost::ε) | (unknown::ε) | (complete::ε) ;
MergeNode ::= ε ;
DataStoreNode ::= ε ;
InteractionOperator ::= (consider::ε) | (par::ε) | (opt::ε) | (loop::ε) | (alt::ε) | (break::ε) | (assert::ε) | (strict::ε) | (seq::ε) | (ignore::ε) | (neg::ε) | (critical::ε) ;
LiteralNull ::= ε ;
AggregationKind ::= (composite::ε) | (none::ε) | (shared::ε) ;
OutputPin ::= ε ;
ExpansionKind ::= (parallel::ε) | (iterative::ε) | (stream::ε) ;
DurationConstraint ::= ε ;
String ::= string() ;
ParameterEffectKind ::= (update::ε) | (read::ε) | (delete::ε) | (create::ε) ;
AnyTrigger ::= ε ;
TimeConstraint ::= ε ;
DestroyLinkAction ::= ε ;
FlowFinalNode ::= ε ;
ParameterDirectionKind ::= (in::ε) | (inout::ε) | (out::ε) | (return::ε) ;
ObjectNodeOrderingKind ::= (FIFO::ε) | (unordered::ε) | (ordered::ε) | (LIFO::ε) ;
TransitionKind ::= (internal::ε) | (local::ε) | (external::ε) ;
CallConcurrencyKind ::= (guarded::ε) | (concurrent::ε) | (sequential::ε) ;
ActivityFinalNode ::= ε ;
Boolean ::= "true" | "false" ;
PseudostateKind ::= (deepHistory::ε) | (shallowHistory::ε) | (choice::ε) | (join::ε) | (exitPoint::ε) | (terminate::ε) | (fork::ε) | (junction::ε) | (initial::ε) | (entryPoint::ε) ;
InitialNode ::= ε ;
VisibilityKind ::= (package::ε) | (private::ε) | (protected::ε) | (public::ε) ;
MessageSort ::= (synchSignal::ε) | (synchCall::ε) | (asynchCall::ε) | (asynchSignal::ε) ;
ForkNode ::= ε ;
ConnectorKind ::= (delegation::ε) | (assembly::ε) ;
--------------------uml::umldi-2.0.bgf--------------------
Exception ::= ε ;
ChangeableKind ::= (ck_changeable::ε) | (ck_frozen::ε) | (ck_addOnly::ε) ;
Integer ::= integer() ;
ParameterDirectionKind ::= (pdk_in::ε) | (pdk_inout::ε) | (pdk_out::ε) | (pdk_return::ε) ;
CallConcurrencyKind ::= (cck_sequential::ε) | (cck_guarded::ε) | (cck_concurrent::ε) ;
ScopeKind ::= (sk_instance::ε) | (sk_classifier::ε) ;
OrderingKind ::= (ok_unordered::ε) | (ok_ordered::ε) ;
Boolean ::= "true" | "false" ;
Primitive ::= ε ;
PseudostateKind ::= (pk_choice::ε) | (pk_deepHistory::ε) | (pk_fork::ε) | (pk_initial::ε) | (pk_join::ε) | (pk_junction::ε) | (pk_shallowHistory::ε) ;
VisibilityKind ::= (vk_public::ε) | (vk_protected::ε) | (vk_private::ε) | (vk_package::ε) ;
AggregationKind ::= (ak_none::ε) | (ak_aggregate::ε) | (ak_composite::ε) ;
String ::= string() ;
--------------------uml::umldi-ag.bgf--------------------
Exception ::= ε ;
Integer ::= integer() ;
ChangeableKind ::= (ck_changeable::ε) | (ck_frozen::ε) | (ck_addOnly::ε) ;
ParameterDirectionKind ::= (pdk_in::ε) | (pdk_inout::ε) | (pdk_out::ε) | (pdk_return::ε) ;
CallConcurrencyKind ::= (cck_sequential::ε) | (cck_guarded::ε) | (cck_concurrent::ε) ;
Boolean ::= "true" | "false" ;
ScopeKind ::= (sk_instance::ε) | (sk_classifier::ε) ;
OrderingKind ::= (ok_unordered::ε) | (ok_ordered::ε) ;
PseudostateKind ::= (pk_choice::ε) | (pk_deepHistory::ε) | (pk_fork::ε) | (pk_initial::ε) | (pk_join::ε) | (pk_junction::ε) | (pk_shallowHistory::ε) ;
VisibilityKind ::= (vk_public::ε) | (vk_protected::ε) | (vk_private::ε) | (vk_package::ε) ;
AggregationKind ::= (ak_none::ε) | (ak_aggregate::ε) | (ak_composite::ε) ;
String ::= string() ;
--------------------uml::umldi-c.bgf--------------------
Exception ::= ε ;
ChangeableKind ::= (ck_changeable::ε) | (ck_frozen::ε) | (ck_addOnly::ε) ;
Integer ::= integer() ;
ParameterDirectionKind ::= (pdk_in::ε) | (pdk_inout::ε) | (pdk_out::ε) | (pdk_return::ε) ;
CallConcurrencyKind ::= (cck_sequential::ε) | (cck_guarded::ε) | (cck_concurrent::ε) ;
ScopeKind ::= (sk_instance::ε) | (sk_classifier::ε) ;
OrderingKind ::= (ok_unordered::ε) | (ok_ordered::ε) ;
Boolean ::= "true" | "false" ;
VisibilityKind ::= (vk_public::ε) | (vk_protected::ε) | (vk_private::ε) | (vk_package::ε) ;
AggregationKind ::= (ak_none::ε) | (ak_aggregate::ε) | (ak_composite::ε) ;
String ::= string() ;
--------------------uml::umldi-mm.bgf--------------------
Integer ::= integer() ;
ScopeKind ::= (sk_instance::ε) | (sk_classifier::ε) ;
Boolean ::= "true" | "false" ;
VisibilityKind ::= (vk_public::ε) | (vk_protected::ε) | (vk_private::ε) | (vk_package::ε) ;
String ::= string() ;
--------------------uml::umldi-sm.bgf--------------------
Exception ::= ε ;
Integer ::= integer() ;
ParameterDirectionKind ::= (pdk_in::ε) | (pdk_inout::ε) | (pdk_out::ε) | (pdk_return::ε) ;
CallConcurrencyKind ::= (cck_sequential::ε) | (cck_guarded::ε) | (cck_concurrent::ε) ;
Boolean ::= "true" | "false" ;
ScopeKind ::= (sk_instance::ε) | (sk_classifier::ε) ;
PseudostateKind ::= (pk_choice::ε) | (pk_deepHistory::ε) | (pk_fork::ε) | (pk_initial::ε) | (pk_join::ε) | (pk_junction::ε) | (pk_shallowHistory::ε) ;
VisibilityKind ::= (vk_public::ε) | (vk_protected::ε) | (vk_private::ε) | (vk_package::ε) ;
String ::= string() ;
--------------------uml::umldi-uc.bgf--------------------
Integer ::= integer() ;
ChangeableKind ::= (ck_changeable::ε) | (ck_frozen::ε) | (ck_addOnly::ε) ;
Boolean ::= "true" | "false" ;
ScopeKind ::= (sk_instance::ε) | (sk_classifier::ε) ;
OrderingKind ::= (ok_unordered::ε) | (ok_ordered::ε) ;
VisibilityKind ::= (vk_public::ε) | (vk_protected::ε) | (vk_private::ε) | (vk_package::ε) ;
AggregationKind ::= (ak_none::ε) | (ak_aggregate::ε) | (ak_composite::ε) ;
String ::= string() ;
--------------------uml::yuml.bgf--------------------
Integer ::= integer() ;
AssociationType ::= (simpleAssociation::ε) | (aggregation::ε) | (composition::ε) ;
Boolean ::= "true" | "false" ;
Visibility ::= (unspecified::ε) | (public::ε) | (private::ε) | (protected::ε) | (package::ε) ;
String ::= string() ;
--------------------xml::rosendal.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------xml::rascal.bgf--------------------
Namespace ::= (namespace::(prefix::string() uri::string())) | (none::ε) ;
--------------------xml::zhang-cordy.bgf--------------------
stringtype ::= "CDATA" ;
cdend ::= "]]>" ;
tokenizedtype ::= "ID" | "IDREF" | "IDREFS" | "ENTITY" | "ENTITIES" | "NMTOKEN" | "NMTOKENS" ;
repetition ::= "?" | "*" | "+" ;
--------------------xquery::rosendal.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------xslt::clark.bgf--------------------
brace-avt.datatype ::= string() ;
char.datatype ::= string() ;
expr-avt.datatype ::= string() ;
qname-but-not-ncname.datatype ::= string() ;
qnames.datatype ::= string()* ;
expression.datatype ::= string() ;
number.datatype ::= integer() ;
wildcards.datatype ::= string()* ;
version ::= "1.0" ;
qname.datatype ::= string() ;
avt.datatype ::= string() ;
pattern.datatype ::= string() ;
prefixes.datatype ::= (string() | "#default")* ;
extension.atts ::= α* ;
prefix.datatype ::= string() | "#default" ;
--------------------xslt::rosendal.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
Otherwise ::= ε ;
String ::= string() ;
--------------------logo::sdf.bgf--------------------
Id ::= "xcor" | "ycor" | "heading" | "towards" | "pendown?" | "sum" | "difference" | "product" | "quotient" | "remainder" | "minus" | "less?" | "greater?" | "equal?" | "notequal?" | "to" | "if" | "ifelse" | "repeat" | "forward" | "back" | "left" | "right" | "setxy" | "setx" | "sety" | "home" | "showturtle" | "hideturtle" | "clean" | "clearscreen" | "pendown" | "penup" | "local" | "make" ;
--------------------php::cordy.bgf--------------------
VarModifier ::= "public" | "protected" | "private" | "static" | "final" ;
BooleanConstant ::= "true" | "false" ;
EqualityOp ::= "==" | "!=" | "===" | "!==" ;
CastType ::= "int" | "integer" | "bool" | "boolean" | "real" | "double" | "float" | "string" | "array" | "object" | "unset" ;
xml_colon ::= "xml:" ;
PlusMinus ::= "+" | "-" ;
CaseSeparator ::= ";" | ":" ;
IncDec ::= "++" | "--" ;
ShiftOp ::= "<<" | ">>" ;
AddOp ::= "+" | "-" ;
ClassType ::= "class" | ("abstract" "class") | ("final" "class") ;
MultOp ::= "*" | "/" | "%" ;
InequalityOp ::= "<>" | "<" | "<=" | ">" | ">=" ;
AssignOp ::= ".=" | "=" | "+=" | "-=" | "*=" | "/=" | "%=" | "&=" | "|=" | "^=" | "<<=" | ">>=" | "=&" ;
bigtag_id ::= "html" | "body" | "head" | "form" | "table" | "tr" | "td" | "script" | "select" | "label" | "div" ;
--------------------python::sorochan-cordy.bgf--------------------
shift_op ::= "<<" | ">>" ;
break_stmt ::= "break" ;
pass_stmt ::= "pass" ;
term_op ::= "*" | "/" | "%" | "//" ;
arith_op ::= "+" | "-" ;
stringprefix ::= "r" | "u" | "ur" | "R" | "U" | "UR" | "Ur" | "uR" | "b" ;
augassign ::= "+=" | "-=" | "*=" | "/=" | "%=" | "&=" | "|=" | "^=" | "<<=" | ">>=" | "**=" | "//=" ;
unary_op ::= "+" | "-" | "~" ;
comp_op ::= "<" | ">" | "==" | ">=" | "<=" | "<>" | "!=" | "in" | ("not" "in") | "is" | ("is" "not") ;
continue_stmt ::= "continue" ;
--------------------markup::atom.bgf--------------------
Integer ::= integer() ;
String ::= string() ;
--------------------markup::cml.bgf--------------------
_Integer ::= ε ;
_FloatMatrix ::= ε ;
Integer ::= integer() ;
_Float ::= ε ;
_Coordinate3 ::= ε ;
_FloatArray ::= ε ;
AngleUnits ::= (degrees::ε) | (radians::ε) ;
_Coordinate2 ::= ε ;
_IntegerArray ::= ε ;
_Link ::= ε ;
_Angle ::= ε ;
StringBuiltin ::= (id::ε) | (elementType::ε) | (atomId::ε) | (residueType::ε) | (residueId::ε) | (atomRef::ε) | (order::ε) | (stereo::ε) | (spaceground::ε) ;
String ::= string() ;
_String ::= ε ;
_Torsion ::= ε ;
Coordinate2Builtin ::= xy2::ε ;
Coordinate3Builtin ::= (xyz3::ε) | (xyzFract::ε) ;
Boolean ::= "true" | "false" ;
FloatBuiltin ::= (x2::ε) | (y2::ε) | (x3::ε) | (y3::ε) | (z3::ε) | (xFract::ε) | (yFract::ε) | (zFract::ε) | (occupancy::ε) | (isotope::ε) | (formalCharge::ε) | (hydrogenCount::ε) | (nonHydrogenCount::ε) | (atomParity::ε) | (length::ε) | (acell::ε) | (bcell::ε) | (ccell::ε) | (alpha::ε) | (beta::ε) | (gamma::ε) | (z::ε) ;
IntegerBuiltin ::= (isotope::ε) | (formalCharge::ε) | (hydrogenCount::ε) | (nonHydrogenCount::ε) | (atomParity::ε) | (z::ε) ;
--------------------markup::csv-rascal-abstract.bgf--------------------
Field ::= (unquoted::(text::string())) | (quoted::(text::string())) ;
--------------------markup::ebxml.bgf--------------------
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------markup::docbook-touzet.bgf--------------------
String ::= string() ;
--------------------markup::docbook-walsh.bgf--------------------
local.firstterm.attrib ::= ε ;
ebnf.inline.hook ::= φ ;
local.informalfigure.attrib ::= ε ;
local.refname.attrib ::= ε ;
local.type.attrib ::= ε ;
local.refsect1.attrib ::= ε ;
local.structfield.attrib ::= ε ;
local.pubsnumber.attrib ::= ε ;
local.appendix.class ::= φ ;
local.glosslist.attrib ::= ε ;
local.admon.attrib ::= ε ;
local.msglevel.attrib ::= ε ;
width.attrib ::= (width::string())? ;
local.synop.class ::= φ ;
local.colophon.attrib ::= ε ;
local.seeseealso.attrib ::= ε ;
local.foreignphrase.attrib ::= ε ;
local.prefaceinfo.attrib ::= ε ;
local.citebiblioid.attrib ::= ε ;
local.section.class ::= φ ;
local.refsect2info.attrib ::= ε ;
local.legalnotice.attrib ::= ε ;
local.refinline.char.mix ::= φ ;
local.refentryinfo.attrib ::= ε ;
local.bibliographyinfo.attrib ::= ε ;
local.mousebutton.attrib ::= ε ;
local.synopsis.attrib ::= ε ;
local.bibliodiv.attrib ::= ε ;
local.qandadiv.attrib ::= ε ;
local.edition.attrib ::= ε ;
local.sect3info.attrib ::= ε ;
local.preface.attrib ::= ε ;
local.glossdef.attrib ::= ε ;
local.msgorig.attrib ::= ε ;
local.example.mix ::= φ ;
local.indexentry.attrib ::= ε ;
local.bibliography.attrib ::= ε ;
local.street.attrib ::= ε ;
local.constant.attrib ::= ε ;
local.figure.attrib ::= ε ;
local.issn.attrib ::= ε ;
local.guibutton.attrib ::= ε ;
local.glossdiv.attrib ::= ε ;
local.literal.attrib ::= ε ;
local.glosssee.attrib ::= ε ;
local.sect3.attrib ::= ε ;
local.revdescription.mix ::= φ ;
local.co.attrib ::= ε ;
local.method.synop.class ::= φ ;
local.errortext.attrib ::= ε ;
local.blockquote.attrib ::= ε ;
local.arg.attrib ::= ε ;
local.tocpart.attrib ::= ε ;
userlevel.attrib ::= (userlevel::string())? ;
local.textdata.attrib ::= ε ;
local.synopfragmentref.attrib ::= ε ;
local.revision.attrib ::= ε ;
local.pagenums.attrib ::= ε ;
local.refsect3.attrib ::= ε ;
local.answer.attrib ::= ε ;
local.remark.attrib ::= ε ;
local.sgmltag.attrib ::= ε ;
local.partinfo.attrib ::= ε ;
local.inlineobj.char.class ::= φ ;
local.othercredit.attrib ::= ε ;
local.command.attrib ::= ε ;
local.inlineequation.attrib ::= ε ;
local.bridgehead.attrib ::= ε ;
local.authorblurb.attrib ::= ε ;
local.objectinfo.attrib ::= ε ;
local.audioobject.attrib ::= ε ;
local.keyaction.attrib ::= ε ;
local.confsponsor.attrib ::= ε ;
local.article.attrib ::= ε ;
local.titleabbrev.attrib ::= ε ;
local.primsecter.attrib ::= ε ;
xreflabel.attrib ::= (xreflabel::string())? ;
local.appendixinfo.attrib ::= ε ;
local.collabname.attrib ::= ε ;
local.confdates.attrib ::= ε ;
local.base.char.class ::= φ ;
local.year.attrib ::= ε ;
local.highlights.attrib ::= ε ;
moreinfo.attrib ::= (moreinfo::("refentry" | "none"))? ;
local.refsectioninfo.attrib ::= ε ;
local.coref.attrib ::= ε ;
local.contractsponsor.attrib ::= ε ;
local.abstract.attrib ::= ε ;
local.simplemsgentry.attrib ::= ε ;
local.refclass.attrib ::= ε ;
local.mediaobject.mix ::= φ ;
local.constructorsynopsis.attrib ::= ε ;
local.programlistingco.attrib ::= ε ;
local.sect5.attrib ::= ε ;
local.indexdivcomponent.mix ::= φ ;
local.varlistentry.attrib ::= ε ;
local.authorgroup.attrib ::= ε ;
local.formalpara.attrib ::= ε ;
local.refsection.attrib ::= ε ;
forms.hook ::= φ ;
local.blockinfo.attrib ::= ε ;
local.title.char.mix ::= φ ;
linkendreq.attrib ::= linkend::string() ;
local.funcdef.attrib ::= ε ;
local.sbr.attrib ::= ε ;
local.imagedata.attrib ::= ε ;
idreq.attrib ::= id::string() ;
local.graphic.attrib ::= ε ;
local.segtitle.attrib ::= ε ;
local.revnumber.attrib ::= ε ;
local.notation.class ::= φ ;
local.msgtext.attrib ::= ε ;
local.book.attrib ::= ε ;
local.refentry.class ::= φ ;
local.orgdiv.attrib ::= ε ;
local.itermset.attrib ::= ε ;
local.sectioninfo.attrib ::= ε ;
local.simplelist.attrib ::= ε ;
local.toclevel2.attrib ::= ε ;
local.cptr.char.mix ::= φ ;
arch.attrib ::= (arch::string())? ;
local.msgmain.attrib ::= ε ;
local.corpauthor.attrib ::= ε ;
local.member.attrib ::= ε ;
local.index.class ::= φ ;
local.revremark.attrib ::= ε ;
local.interfacename.attrib ::= ε ;
local.setindexinfo.attrib ::= ε ;
local.refentry.attrib ::= ε ;
local.personname.attrib ::= ε ;
local.chapter.class ::= φ ;
local.keyword.attrib ::= ε ;
local.prompt.attrib ::= ε ;
local.admon.class ::= φ ;
local.question.attrib ::= ε ;
local.cmdsynopsis.attrib ::= ε ;
local.calloutlist.attrib ::= ε ;
local.ulink.attrib ::= ε ;
local.glossdef.mix ::= φ ;
local.setinfo.attrib ::= ε ;
local.docinfo.char.class ::= φ ;
local.trademark.attrib ::= ε ;
local.author.attrib ::= ε ;
local.refsect3info.attrib ::= ε ;
local.screen.attrib ::= ε ;
local.footnoteref.attrib ::= ε ;
local.issuenum.attrib ::= ε ;
local.area.attrib ::= ε ;
local.msgentry.attrib ::= ε ;
local.subjectterm.attrib ::= ε ;
conformance.attrib ::= (conformance::string())? ;
local.refmeta.attrib ::= ε ;
local.primsecterie.attrib ::= ε ;
local.interface.attrib ::= ε ;
role.attrib ::= (role::string())? ;
local.informal.class ::= φ ;
local.tocchap.attrib ::= ε ;
local.modifier.attrib ::= ε ;
local.article.class ::= φ ;
local.guilabel.attrib ::= ε ;
local.legalnotice.mix ::= φ ;
local.sect4info.attrib ::= ε ;
local.link.attrib ::= ε ;
local.confnum.attrib ::= ε ;
local.classname.attrib ::= ε ;
local.pob.attrib ::= ε ;
security.attrib ::= (security::string())? ;
local.msgsub.attrib ::= ε ;
local.ndxterm.class ::= φ ;
local.funcsynopsisinfo.attrib ::= ε ;
local.citation.attrib ::= ε ;
local.substeps.attrib ::= ε ;
local.areaspec.attrib ::= ε ;
local.objectdata.attrib ::= ε ;
local.callout.attrib ::= ε ;
local.refpurpose.attrib ::= ε ;
local.equation.attrib ::= ε ;
local.editor.attrib ::= ε ;
local.medialabel.attrib ::= ε ;
local.productnumber.attrib ::= ε ;
local.toclevel4.attrib ::= ε ;
local.refnamediv.attrib ::= ε ;
local.part.attrib ::= ε ;
local.videoobject.attrib ::= ε ;
local.gen.char.class ::= φ ;
local.option.attrib ::= ε ;
local.corpname.attrib ::= ε ;
local.methodsynopsis.attrib ::= ε ;
local.publisher.attrib ::= ε ;
local.sect1info.attrib ::= ε ;
local.fax.attrib ::= ε ;
local.function.attrib ::= ε ;
local.screenco.attrib ::= ε ;
local.divcomponent.mix ::= φ ;
local.variablelist.attrib ::= ε ;
local.honorific.attrib ::= ε ;
local.errortype.attrib ::= ε ;
local.seglistitem.attrib ::= ε ;
local.lotentry.attrib ::= ε ;
local.olink.attrib ::= ε ;
local.alt.attrib ::= ε ;
local.partcontent.mix ::= φ ;
local.xref.char.class ::= φ ;
local.highlights.mix ::= φ ;
local.keycode.attrib ::= ε ;
local.hardware.attrib ::= ε ;
local.descobj.class ::= φ ;
local.glossentry.attrib ::= ε ;
local.orgname.attrib ::= ε ;
local.graphics.attrib ::= ε ;
local.refclass.char.mix ::= φ ;
local.mark.attrib ::= ε ;
local.date.attrib ::= ε ;
local.errorcode.attrib ::= ε ;
local.releaseinfo.attrib ::= ε ;
local.areaset.attrib ::= ε ;
local.country.attrib ::= ε ;
local.epigraph.attrib ::= ε ;
local.revhistory.attrib ::= ε ;
label.attrib ::= (label::string())? ;
local.status.attrib ::= ε ;
local.refentrytitle.attrib ::= ε ;
local.synopfragment.attrib ::= ε ;
local.guimenu.attrib ::= ε ;
local.firstname.attrib ::= ε ;
local.chapterinfo.attrib ::= ε ;
local.email.attrib ::= ε ;
local.bookinfo.attrib ::= ε ;
local.textobject.mix ::= φ ;
condition.attrib ::= (condition::string())? ;
id.attrib ::= (id::string())? ;
local.dedication.attrib ::= ε ;
local.refsynopsisdivinfo.attrib ::= ε ;
local.xref.attrib ::= ε ;
local.emphasis.attrib ::= ε ;
local.menuchoice.attrib ::= ε ;
local.copyright.attrib ::= ε ;
local.tocfront.attrib ::= ε ;
local.biblioset.attrib ::= ε ;
local.orderedlist.attrib ::= ε ;
yesorno.attvals ::= string() ;
local.reference.attrib ::= ε ;
local.shortcut.attrib ::= ε ;
local.volumenum.attrib ::= ε ;
local.docinfo.char.mix ::= φ ;
local.qandaset.attrib ::= ε ;
tbl.tgroup.att ::= (tgroupstyle::string())? ;
local.shortaffil.attrib ::= ε ;
local.phone.attrib ::= ε ;
local.sect2.attrib ::= ε ;
local.affiliation.attrib ::= ε ;
local.refsynopsisdiv.attrib ::= ε ;
local.common.attrib ::= ε ;
local.varname.attrib ::= ε ;
local.address.attrib ::= ε ;
local.ndxterm.char.mix ::= φ ;
local.seg.attrib ::= ε ;
local.word.char.mix ::= φ ;
local.beginpage.attrib ::= ε ;
local.informaltable.attrib ::= ε ;
local.anchor.attrib ::= ε ;
local.qandaentry.attrib ::= ε ;
local.msgexplan.attrib ::= ε ;
local.subtitle.attrib ::= ε ;
local.userinput.attrib ::= ε ;
local.artpagenums.attrib ::= ε ;
local.jobtitle.attrib ::= ε ;
local.computeroutput.attrib ::= ε ;
local.refsect2.attrib ::= ε ;
biblio.class.attrib ::= (class::("uri" | "doi" | "isbn" | "issn" | "libraryofcongress" | "pubnumber" | "other"))? (otherclass::string())? ;
local.section.attrib ::= ε ;
local.structname.attrib ::= ε ;
local.msgset.attrib ::= ε ;
local.parameter.attrib ::= ε ;
local.ackno.attrib ::= ε ;
revisionflag.attrib ::= (revisionflag::("changed" | "added" | "deleted" | "off"))? ;
local.link.char.class ::= φ ;
local.pubdate.attrib ::= ε ;
local.para.char.mix ::= φ ;
local.invpartnumber.attrib ::= ε ;
local.fieldsynopsis.attrib ::= ε ;
local.msginfo.attrib ::= ε ;
lang.attrib ::= (lang::string())? ;
local.postcode.attrib ::= ε ;
local.graphicco.attrib ::= ε ;
local.sidebar.mix ::= φ ;
local.msgaud.attrib ::= ε ;
local.ooclass.attrib ::= ε ;
local.title.attrib ::= ε ;
local.keycap.attrib ::= ε ;
local.isbn.attrib ::= ε ;
local.msgrel.attrib ::= ε ;
local.group.attrib ::= ε ;
local.keywordset.attrib ::= ε ;
local.authorinitials.attrib ::= ε ;
local.initializer.attrib ::= ε ;
local.qandaset.mix ::= φ ;
local.articleinfo.attrib ::= ε ;
local.bibliomixed.attrib ::= ε ;
linkend.attrib ::= (linkend::string())? ;
local.bibliocoverage.attrib ::= ε ;
local.caption.attrib ::= ε ;
local.programlisting.attrib ::= ε ;
local.tech.char.class ::= φ ;
local.figure.mix ::= φ ;
local.publishername.attrib ::= ε ;
local.systemitem.attrib ::= ε ;
local.lineannotation.attrib ::= ε ;
local.example.attrib ::= ε ;
local.subject.attrib ::= ε ;
local.city.attrib ::= ε ;
local.sect4.attrib ::= ε ;
local.errorname.attrib ::= ε ;
local.component.mix ::= φ ;
local.guiicon.attrib ::= ε ;
local.label.attrib ::= ε ;
local.seealsoie.attrib ::= ε ;
local.bibliosource.attrib ::= ε ;
local.biblioid.attrib ::= ε ;
local.contrib.attrib ::= ε ;
local.productname.attrib ::= ε ;
local.classsynopsisinfo.attrib ::= ε ;
local.other.char.class ::= φ ;
local.othername.attrib ::= ε ;
local.citerefentry.attrib ::= ε ;
local.indexterm.attrib ::= ε ;
local.symbol.attrib ::= ε ;
local.paramdef.attrib ::= ε ;
local.revdescription.attrib ::= ε ;
local.info.class ::= φ ;
local.sect5info.attrib ::= ε ;
local.refdescriptor.attrib ::= ε ;
local.indexdiv.attrib ::= ε ;
local.book.class ::= φ ;
local.optional.attrib ::= ε ;
local.footnote.attrib ::= ε ;
local.para.attrib ::= ε ;
local.toc.attrib ::= ε ;
linespecific.attrib ::= (format::"linespecific")? (linenumbering::("numbered" | "unnumbered"))? ;
local.sidebarinfo.attrib ::= ε ;
local.bibliocomponent.mix ::= φ ;
local.classsynopsis.attrib ::= ε ;
local.screenshot.attrib ::= ε ;
local.tabentry.mix ::= φ ;
local.ooexception.attrib ::= ε ;
local.seeie.attrib ::= ε ;
local.refsect1info.attrib ::= ε ;
local.application.attrib ::= ε ;
local.list.class ::= φ ;
local.tocentry.attrib ::= ε ;
local.textobject.attrib ::= ε ;
local.term.attrib ::= ε ;
local.collab.attrib ::= ε ;
local.destructorsynopsis.attrib ::= ε ;
local.keycombo.attrib ::= ε ;
local.toclevel1.attrib ::= ε ;
local.referenceinfo.attrib ::= ε ;
local.exceptionname.attrib ::= ε ;
local.property.attrib ::= ε ;
local.sidebar.attrib ::= ε ;
local.sect2info.attrib ::= ε ;
local.envar.attrib ::= ε ;
local.funcprototype.attrib ::= ε ;
local.attribution.attrib ::= ε ;
local.returnvalue.attrib ::= ε ;
local.otheraddr.attrib ::= ε ;
local.personblurb.attrib ::= ε ;
local.inlinemediaobject.attrib ::= ε ;
local.para.mix ::= φ ;
local.footnote.mix ::= φ ;
local.lineage.attrib ::= ε ;
local.chapter.attrib ::= ε ;
local.mediaobjectco.attrib ::= ε ;
local.segmentedlist.attrib ::= ε ;
local.effectivity.attrib ::= ε ;
local.ssscript.attrib ::= ε ;
local.state.attrib ::= ε ;
local.lot.attrib ::= ε ;
local.procedure.attrib ::= ε ;
local.conftitle.attrib ::= ε ;
local.glossterm.attrib ::= ε ;
local.smallcptr.char.mix ::= φ ;
local.oointerface.attrib ::= ε ;
local.literallayout.attrib ::= ε ;
local.void.attrib ::= ε ;
local.confgroup.attrib ::= ε ;
local.biblioentry.attrib ::= ε ;
ebnf.block.hook ::= φ ;
local.phrase.attrib ::= ε ;
local.formal.class ::= φ ;
local.screeninfo.attrib ::= ε ;
forminlines.hook ::= φ ;
local.indexes.attrib ::= ε ;
local.refcomponent.mix ::= φ ;
local.mediaobject.attrib ::= ε ;
local.compound.class ::= φ ;
local.modespec.attrib ::= ε ;
local.varargs.attrib ::= ε ;
local.videodata.attrib ::= ε ;
local.informalequation.attrib ::= ε ;
local.abbrev.attrib ::= ε ;
local.seriesvolnums.attrib ::= ε ;
local.manvolnum.attrib ::= ε ;
local.printhistory.attrib ::= ε ;
local.para.class ::= φ ;
local.tocback.attrib ::= ε ;
yesorno ::= string() ;
local.methodname.attrib ::= ε ;
linkends.attrib ::= (linkends::string())? ;
local.simpara.attrib ::= ε ;
local.toclevel3.attrib ::= ε ;
local.imageobject.attrib ::= ε ;
local.action.attrib ::= ε ;
local.subjectset.attrib ::= ε ;
revision.attrib ::= (revision::string())? ;
local.msg.attrib ::= ε ;
local.set.attrib ::= ε ;
local.acronym.attrib ::= ε ;
local.refname.char.mix ::= φ ;
local.admon.mix ::= φ ;
local.accel.attrib ::= ε ;
local.bibliomisc.attrib ::= ε ;
local.guisubmenu.attrib ::= ε ;
vendor.attrib ::= (vendor::string())? ;
local.wordasword.attrib ::= ε ;
local.keysym.attrib ::= ε ;
local.funcparams.attrib ::= ε ;
local.nav.class ::= φ ;
local.step.attrib ::= ε ;
local.bibliomset.attrib ::= ε ;
local.glossaryinfo.attrib ::= ε ;
local.person.ident.mix ::= φ ;
local.contractnum.attrib ::= ε ;
local.glossseealso.attrib ::= ε ;
local.listitem.attrib ::= ε ;
local.bibliorelation.attrib ::= ε ;
local.partintro.attrib ::= ε ;
local.bibliorelation.types ::= φ ;
local.surname.attrib ::= ε ;
local.simplesect.attrib ::= ε ;
local.quote.attrib ::= ε ;
local.funcsynopsis.attrib ::= ε ;
local.audiodata.attrib ::= ε ;
local.listpreamble.mix ::= φ ;
local.indexinfo.attrib ::= ε ;
local.citetitle.attrib ::= ε ;
local.database.attrib ::= ε ;
local.glossary.attrib ::= ε ;
local.imageobjectco.attrib ::= ε ;
local.genobj.class ::= φ ;
os.attrib ::= (os::string())? ;
local.itemizedlist.attrib ::= ε ;
local.linespecific.class ::= φ ;
local.methodparam.attrib ::= ε ;
remap.attrib ::= (remap::string())? ;
local.guimenuitem.attrib ::= ε ;
local.filename.attrib ::= ε ;
local.refmiscinfo.attrib ::= ε ;
local.replaceable.attrib ::= ε ;
local.markup.attrib ::= ε ;
local.sect1.attrib ::= ε ;
local.inlinegraphic.attrib ::= ε ;
local.appendix.attrib ::= ε ;
local.holder.attrib ::= ε ;
local.informalexample.attrib ::= ε ;
local.token.attrib ::= ε ;
local.toclevel5.attrib ::= ε ;
pagenum.attrib ::= (pagenum::string())? ;
--------------------markup::kml.bgf--------------------
Snippet ::= ε ;
LabelStyle ::= ε ;
Document ::= ε ;
Pair ::= ε ;
Placemark ::= ε ;
String ::= string() ;
Point ::= ε ;
OuterBoundaryIs ::= ε ;
AltitudeModeValue ::= (clampedToGround::ε) | (relativeToGround::ε) | (absolute::ε) ;
MultiGeometry ::= ε ;
GroundOverlay ::= ε ;
NetworkLink ::= ε ;
Message ::= ε ;
PolyStyle ::= ε ;
ObjField ::= ε ;
BalloonStyle ::= ε ;
LatLonBox ::= ε ;
Integer ::= integer() ;
Coordinates ::= ε ;
Polygon ::= ε ;
Icon ::= ε ;
ObjArrayField ::= ε ;
Coordinate ::= ε ;
IconStyle ::= ε ;
NetworkLinkControl ::= ε ;
LinearRing ::= ε ;
SimpleArrayField ::= ε ;
LookAt ::= ε ;
Url ::= ε ;
KMLRootNode ::= ε ;
Folder ::= ε ;
Text ::= ε ;
StyleMap ::= ε ;
ColorModeValue ::= (normal::ε) | (random::ε) ;
InnerBoundaryIs ::= ε ;
SimpleField ::= ε ;
Boolean ::= "true" | "false" ;
LineString ::= ε ;
Schema ::= ε ;
--------------------markup::graphml-doux.bgf--------------------
Integer ::= integer() ;
AttrType ::= (double::ε) | (string::ε) | (integer::ε) | (boolean::ε) ;
ElemType ::= (edge::ε) | (node::ε) | (graph::ε) ;
Boolean ::= "true" | "false" ;
EdgeType ::= (directed::ε) | (undirected::ε) ;
String ::= string() ;
--------------------markup::json-zaytsev-concrete.bgf--------------------
JSONNull ::= "null" ;
JSONBoolean ::= "false" ;
 JSONBoolean ::= "true" ;
--------------------markup::mathml-furubayashi.bgf--------------------
mml.att-equalrows ::= (equalrows::("true" | "false"))? ;
mml.alignmentscope.datatype ::= ("true" | "false")+ ;
mml.att-displaystyle ::= (displaystyle::("true" | "false"))? ;
mml.att-linebreak ::= (linebreak::("auto" | "newline" | "indentingnewline" | "nobreak" | "goodbreak" | "badbreak"))? ;
mml.att-separators ::= (separators::string())? ;
mml.framespacing.datatype ::= string() | (string() | "veryverythinmathspace" | "verythinmathspace" | "thinmathspace" | "mediummathspace" | "thickmathspace" | "verythickmathspace" | "veryverythickmathspace") string() | (string() | "veryverythinmathspace" | "verythinmathspace" | "thinmathspace" | "mediummathspace" | "thickmathspace" | "verythickmathspace" | "veryverythickmathspace") ;
mml.att-movablelimits ::= (movablelimits::("true" | "false"))? ;
mml.att-equalcolumns ::= (equalcolumns::("true" | "false"))? ;
mml.att-macros ::= (macros::string())? ;
mml.id.datatype ::= string() ;
mml.att-fontstyle ::= (fontstyle::("normal" | "italic"))? ;
mml.att-display ::= (display::string())? ;
mml.att-mode ::= (mode::string())? ;
mml.color.datatype ::= string() | string() | "transparent" ;
mml.att-mathvariant ::= (mathvariant::("normal" | "bold" | "italic" | "bold-italic" | "double-struck" | "bold-fraktur" | "script" | "bold-script" | "fraktur" | "sans-serif" | "bold-sans-serif" | "sans-serif-italic" | "sans-serif-bold-italic" | "monospace"))? ;
mml.positiveinteger.datatype ::= integer() ;
mml.att-closure ::= (closure::("open" | "closed" | "open-closed" | "closed-open"))? ;
mml.att-close ::= (close::string())? ;
mml.att-symmetric ::= (symmetric::("true" | "false"))? ;
mml.none.qname ::= none::ε ;
mml.rowspacing.datatype ::= string()+ ;
mml.columnspacing.datatype ::= (string() string() | "veryverythinmathspace" | "verythinmathspace" | "thinmathspace" | "mediummathspace" | "thickmathspace" | "verythickmathspace" | "veryverythickmathspace")+ ;
mml.columnalign.datatype ::= ("left" | "center" | "right")+ ;
mml.rowalign.datatype ::= ("top" | "bottom" | "center" | "baseline" | "axis")+ ;
mml.att-fence ::= (fence::("true" | "false"))? ;
mml.namedspace.datatype ::= string() | "veryverythinmathspace" | "verythinmathspace" | "thinmathspace" | "mediummathspace" | "thickmathspace" | "verythickmathspace" | "veryverythickmathspace" ;
mml.att-stretchy ::= (stretchy::("true" | "false"))? ;
mml.att-encoding ::= (encoding::string())? ;
mml.att-bevelled ::= (bevelled::("true" | "false"))? ;
mml.att-frame ::= (frame::("none" | "solid" | "dashed"))? ;
mml.att-occurrence ::= (occurrence::("prefix" | "infix" | "function-model"))? ;
mml.mprescripts.qname ::= mprescripts::ε ;
mml.att-lquote ::= (lquote::string())? ;
mml.idref.datatype ::= string() ;
mml.att-alt ::= (alt::string())? ;
mml.att-name ::= (name::string())? ;
mml.att-open ::= (open::string())? ;
mml.att-rquote ::= (rquote::string())? ;
mml.att-accent ::= (accent::("true" | "false"))? ;
mml.att-separator ::= (separator::("true" | "false"))? ;
mml.att-rowspan ::= (rowspan::("top" | "bottom" | "center" | "baseline" | "axis"))? ;
mml.nonnegativefloat.datatype ::= string() ;
mml.att-fontweight ::= (fontweight::("normal" | "bold"))? ;
mml.lines.datatype ::= ("none" | "solid" | "dashed")+ ;
mml.att-baseline ::= (baseline::string())? ;
mml.att-form ::= (form::("prefix" | "infix" | "postfix"))? ;
mml.att-overflow ::= (overflow::("scroll" | "elide" | "truncate" | "scale"))? ;
mml.align.datatype ::= "top" | "bottom" | "center" | "baseline" | "axis" integer()? ;
mml.att-largeop ::= (largeop::("true" | "false"))? ;
mml.att-edge ::= (edge::("left" | "right"))? ;
mml.groupalign.datatype ::= string() ;
mml.length.datatype ::= string() ;
mml.sep.qname ::= sep::ε ;
mml.att-alttext ::= (alttext::string())? ;
mml.uri.datatype ::= string() ;
mml.att-type ::= (type::("e-notation" | "integer" | "rational" | "real" | "float" | "complex-polar" | "complex-cartesian" | "constant"))? ;
mml.number.datatype ::= integer() ;
mml.att-scope ::= (scope::("local" | "global"))? ;
mml.columnwidth.datatype ::= ("auto" | string() | (string() | "veryverythinmathspace" | "verythinmathspace" | "thinmathspace" | "mediummathspace" | "thickmathspace" | "verythickmathspace" | "veryverythickmathspace") | "fit")+ ;
mml.att-fontfamily ::= (fontfamily::string())? ;
mml.Annotation.datatype ::= string() ;
mml.att-accentunder ::= (accentunder::("true" | "false"))? ;
mml.att-order ::= (order::("lexicographic" | "numeric"))? ;
--------------------markup::pnml-booleans.bgf--------------------
Bool ::= bool::ε ;
--------------------markup::pnml-dots.bgf--------------------
DotConstant ::= dotconstant::ε ;
Dot ::= dot::ε ;
--------------------markup::r2ml.bgf--------------------
Integer ::= integer() ;
CollectionTypes ::= (individual::ε) | (set::ε) | (orderedSet::ε) | (bag::ε) | (sequence::ε) ;
ExternalVocabularyLanguage ::= (RDFS::ε) | (UML::ε) | (OWL::ε) ;
Boolean ::= "true" | "false" ;
PredicateCategory ::= (closed::ε) | (open::ε) | (partial::ε) ;
String ::= string() ;
PredicateType ::= (ObjectClassificationPredicate::ε) | (AttributionPredicate::ε) | (AssociationPredicate::ε) | (ReferencePropertyPredicate::ε) | (EqualityPredicate::ε) | (InequalityPredicate::ε) | (DatatypePredicate::ε) | (DataClassificationPredicate::ε) ;
--------------------markup::pnml-ext-inhibitor.bgf--------------------
page.labels ::= ε ;
font.element ::= font::((family::string())? (style::string())? (weight::string())? (size::string())? (decoration::("underline" | "overline" | "line-through"))? (align::("left" | "center" | "right"))? (rotation::integer())?) ;
coordinate.attributes ::= x::integer() y::integer() ;
specialarc.value ::= "normal" | "inhibitor" | "read" | "reset" ;
reference ::= ref::string() ;
simpletext.content ::= (text::string())? ;
transition.labels ::= ε ;
color.type ::= string() ;
nettype.uri ::= type::"http://www.pnml.org/version-2009/grammar/ptnet" ;
 nettype.uri ::= type::"http://www.pnml.org/version-2009/grammar/pnmlcoremodel" ;
identifier.content ::= id::string() ;
positiveDecimal.content ::= integer() ;
net.labels ::= ε ;
--------------------markup::pnml-ext-reset.bgf--------------------
page.labels ::= ε ;
font.element ::= font::((family::string())? (style::string())? (weight::string())? (size::string())? (decoration::("underline" | "overline" | "line-through"))? (align::("left" | "center" | "right"))? (rotation::integer())?) ;
coordinate.attributes ::= x::integer() y::integer() ;
specialarc.value ::= "normal" | "inhibitor" | "read" | "reset" ;
reference ::= ref::string() ;
simpletext.content ::= (text::string())? ;
transition.labels ::= ε ;
color.type ::= string() ;
nettype.uri ::= type::"http://www.pnml.org/version-2009/grammar/ptnet" ;
 nettype.uri ::= type::"http://www.pnml.org/version-2009/grammar/pnmlcoremodel" ;
identifier.content ::= id::string() ;
positiveDecimal.content ::= integer() ;
net.labels ::= ε ;
--------------------markup::pnml-ext-resetinhibitor.bgf--------------------
page.labels ::= ε ;
font.element ::= font::((family::string())? (style::string())? (weight::string())? (size::string())? (decoration::("underline" | "overline" | "line-through"))? (align::("left" | "center" | "right"))? (rotation::integer())?) ;
coordinate.attributes ::= x::integer() y::integer() ;
specialarc.value ::= "normal" | "inhibitor" | "read" | "reset" ;
reference ::= ref::string() ;
simpletext.content ::= (text::string())? ;
transition.labels ::= ε ;
color.type ::= string() ;
nettype.uri ::= type::"http://www.pnml.org/version-2009/grammar/ptnet" ;
 nettype.uri ::= type::"http://www.pnml.org/version-2009/grammar/pnmlcoremodel" ;
identifier.content ::= id::string() ;
positiveDecimal.content ::= integer() ;
net.labels ::= ε ;
--------------------markup::pnml-ext-specialarcs.bgf--------------------
specialarc.value ::= "normal" | "inhibitor" | "read" | "reset" ;
--------------------markup::pnml-finiteintranges.bgf--------------------
FiniteIntRange ::= finiteintrange::(start::integer() end::integer()) ;
--------------------markup::pnml-guyard-basic.bgf--------------------
AlignType ::= (atleft::ε) | (atcenter::ε) | (atright::ε) ;
Integer ::= integer() ;
StyleType ::= (sttsolid::ε) | (sttdash::ε) | (sttdot::ε) ;
ShapeType ::= (shtline::ε) | (shtcurve::ε) ;
DecorationType ::= (dtunderligne::ε) | (dtoverligne::ε) | (dtlinethrough::ε) ;
RotationType ::= (rtvertical::ε) | (rthorizontal::ε) | (rtdiagonal::ε) ;
Color ::= ε ;
String ::= string() ;
--------------------markup::pnml-guyard-modular.bgf--------------------
AlignType ::= (atleft::ε) | (atcenter::ε) | (atright::ε) ;
Integer ::= integer() ;
StyleType ::= (sttsolid::ε) | (sttdash::ε) | (sttdot::ε) ;
ShapeType ::= (shtline::ε) | (shtcurve::ε) ;
DecorationType ::= (dtunderligne::ε) | (dtoverligne::ε) | (dtlinethrough::ε) ;
RotationType ::= (rtvertical::ε) | (rthorizontal::ε) | (rtdiagonal::ε) ;
Color ::= ε ;
String ::= string() ;
--------------------markup::pnml-guyard-simplified.bgf--------------------
Integer ::= integer() ;
Place ::= ε ;
Transition ::= ε ;
String ::= string() ;
--------------------markup::pnml-guyard-structured.bgf--------------------
AlignType ::= (atleft::ε) | (atcenter::ε) | (atright::ε) ;
Integer ::= integer() ;
StyleType ::= (sttsolid::ε) | (sttdash::ε) | (sttdot::ε) ;
ShapeType ::= (shtline::ε) | (shtcurve::ε) ;
DecorationType ::= (dtunderligne::ε) | (dtoverligne::ε) | (dtlinethrough::ε) ;
RotationType ::= (rtvertical::ε) | (rthorizontal::ε) | (rtdiagonal::ε) ;
Color ::= ε ;
String ::= string() ;
--------------------markup::pnml-highlevelnet.bgf--------------------
Integer ::= integer::ε ;
font.element ::= font::((family::string())? (style::string())? (weight::string())? (size::string())? (decoration::("underline" | "overline" | "line-through"))? (align::("left" | "center" | "right"))? (rotation::integer())?) ;
FiniteIntRange ::= finiteintrange::(start::integer() end::integer()) ;
Variable ::= variable::(refvariable::string()) ;
Positive ::= positive::ε ;
Term.content ::= ε ;
nettype.uri ::= type::"http://www.pnml.org/version-2009/grammar/highlevelnet" ;
 nettype.uri ::= type::"http://www.pnml.org/version-2009/grammar/symmetricnet" ;
 nettype.uri ::= type::"http://www.pnml.org/version-2009/grammar/pnmlcoremodel" ;
identifier.content ::= id::string() ;
String ::= string::ε ;
coordinate.attributes ::= x::integer() y::integer() ;
DotConstant ::= dotconstant::ε ;
reference ::= ref::string() ;
simpletext.content ::= (text::string())? ;
Bool ::= bool::ε ;
Sort.content ::= ε ;
UserSort ::= usersort::(declaration::string()) ;
Natural ::= natural::ε ;
Dot ::= dot::ε ;
color.type ::= string() ;
Declaration.content ::= id::string() name::string() ;
positiveDecimal.content ::= integer() ;
StringConstant.content ::= value::string() ;
--------------------markup::pnml-hlpng.bgf--------------------
font.element ::= font::((family::string())? (style::string())? (weight::string())? (size::string())? (decoration::("underline" | "overline" | "line-through"))? (align::("left" | "center" | "right"))? (rotation::integer())?) ;
coordinate.attributes ::= x::integer() y::integer() ;
DotConstant ::= dotconstant::ε ;
Variable ::= variable::(refvariable::string()) ;
reference ::= ref::string() ;
simpletext.content ::= (text::string())? ;
Bool ::= bool::ε ;
UserSort ::= usersort::(declaration::string()) ;
Sort.content ::= ε ;
Dot ::= dot::ε ;
Term.content ::= ε ;
color.type ::= string() ;
Declaration.content ::= id::string() name::string() ;
nettype.uri ::= type::"http://www.pnml.org/version-2009/grammar/pt-hlpng" ;
 nettype.uri ::= type::"http://www.pnml.org/version-2009/grammar/pnmlcoremodel" ;
identifier.content ::= id::string() ;
positiveDecimal.content ::= integer() ;
--------------------markup::pnml-integers.bgf--------------------
Integer ::= integer::ε ;
Positive ::= positive::ε ;
Natural ::= natural::ε ;
--------------------markup::rss.bgf--------------------
Integer ::= integer() ;
String ::= string() ;
DayKind ::= (Monday::ε) | (Tuesday::ε) | (Wednesday::ε) | (Thursday::ε) | (Friday::ε) | (Saturday::ε) | (Sunday::ε) ;
--------------------markup::pnml-pnmlcoremodel.bgf--------------------
page.labels ::= ε ;
font.element ::= font::((family::string())? (style::string())? (weight::string())? (size::string())? (decoration::("underline" | "overline" | "line-through"))? (align::("left" | "center" | "right"))? (rotation::integer())?) ;
coordinate.attributes ::= x::integer() y::integer() ;
arc.labels ::= ε ;
reference ::= ref::string() ;
simpletext.content ::= (text::string())? ;
transition.labels ::= ε ;
place.labels ::= ε ;
color.type ::= string() ;
nettype.uri ::= type::"http://www.pnml.org/version-2009/grammar/pnmlcoremodel" ;
identifier.content ::= id::string() ;
positiveDecimal.content ::= integer() ;
net.labels ::= ε ;
--------------------markup::pnml-ptnet.bgf--------------------
page.labels ::= ε ;
font.element ::= font::((family::string())? (style::string())? (weight::string())? (size::string())? (decoration::("underline" | "overline" | "line-through"))? (align::("left" | "center" | "right"))? (rotation::integer())?) ;
coordinate.attributes ::= x::integer() y::integer() ;
reference ::= ref::string() ;
simpletext.content ::= (text::string())? ;
transition.labels ::= ε ;
color.type ::= string() ;
nettype.uri ::= type::"http://www.pnml.org/version-2009/grammar/ptnet" ;
 nettype.uri ::= type::"http://www.pnml.org/version-2009/grammar/pnmlcoremodel" ;
identifier.content ::= id::string() ;
positiveDecimal.content ::= integer() ;
net.labels ::= ε ;
--------------------markup::pnml-strings.bgf--------------------
String ::= string::ε ;
StringConstant.content ::= value::string() ;
--------------------markup::pnml-symmetricnet.bgf--------------------
Integer ::= integer::ε ;
font.element ::= font::((family::string())? (style::string())? (weight::string())? (size::string())? (decoration::("underline" | "overline" | "line-through"))? (align::("left" | "center" | "right"))? (rotation::integer())?) ;
FiniteIntRange ::= finiteintrange::(start::integer() end::integer()) ;
Variable ::= variable::(refvariable::string()) ;
Positive ::= positive::ε ;
Term.content ::= ε ;
nettype.uri ::= type::"http://www.pnml.org/version-2009/grammar/symmetricnet" ;
 nettype.uri ::= type::"http://www.pnml.org/version-2009/grammar/pnmlcoremodel" ;
identifier.content ::= id::string() ;
DotConstant ::= dotconstant::ε ;
coordinate.attributes ::= x::integer() y::integer() ;
reference ::= ref::string() ;
simpletext.content ::= (text::string())? ;
Bool ::= bool::ε ;
Sort.content ::= ε ;
UserSort ::= usersort::(declaration::string()) ;
Natural ::= natural::ε ;
Dot ::= dot::ε ;
color.type ::= string() ;
Declaration.content ::= id::string() name::string() ;
positiveDecimal.content ::= integer() ;
--------------------markup::pnml-terms.bgf--------------------
MultisetOperator ::= ε ;
Variable ::= variable::(refvariable::string()) ;
UserSort ::= usersort::(declaration::string()) ;
Sort.content ::= ε ;
BuiltInConstant ::= ε ;
BuiltInOperator ::= ε ;
Term.content ::= ε ;
Declaration.content ::= id::string() name::string() ;
BuiltInSort ::= ε ;
--------------------markup::pnml-touzet.bgf--------------------
Integer ::= integer() ;
String ::= string() ;
--------------------markup::svg-furubayashi-basic.bgf--------------------
SVG.Paint.datatype ::= string() ;
SVG.LinkTarget.datatype ::= string() ;
SVG.visibility.attrib ::= (visibility::("visible" | "hidden" | "inherit"))? ;
SVG.Clip.extra.attrib ::= ε ;
SVG.ViewBoxSpec.datatype ::= string() ;
SVG.StrokeMiterLimitValue.datatype ::= string() ;
SVG.Opacity.extra.attrib ::= ε ;
SVG.Boolean.datatype ::= string() ;
SVG.Pattern.extra.class ::= ε ;
SVG.Presentation.extra.attrib ::= ε ;
SVG.AnimationTiming.extra.attrib ::= ε ;
SVG.XLinkRequired.extra.attrib ::= ε ;
SVG.stroke-linejoin.attrib ::= (stroke-linejoin::("miter" | "round" | "bevel" | "inherit"))? ;
SVG.Lengths.datatype ::= string() ;
SVG.TextContent.extra.class ::= ε ;
SVG.Cursor.class ::= ε ;
SVG.Use.extra.class ::= ε ;
SVG.TextDecorationValue.datatype ::= string() ;
SVG.color-interpolation.attrib ::= (color-interpolation::("auto" | "sRGB" | "linearRGB" | "inherit"))? ;
SVG.Conditional.extra.class ::= ε ;
SVG.FeatureList.datatype ::= string() ;
SVG.Viewport.extra.attrib ::= ε ;
SVG.StrokeDashArrayValue.datatype ::= string() ;
SVG.Gradient.extra.class ::= ε ;
SVG.Animation.extra.class ::= ε ;
SVG.stroke-linecap.attrib ::= (stroke-linecap::("butt" | "round" | "square" | "inherit"))? ;
SVG.Text.extra.class ::= ε ;
SVG.FilterValue.datatype ::= string() ;
SVG.text-rendering.attrib ::= (text-rendering::("auto" | "optimizeSpeed" | "optimizeLegibility" | "geometricPrecision" | "inherit"))? ;
SVG.OpacityValue.datatype ::= string() ;
SVG.External.extra.attrib ::= ε ;
SVG.Container.attrib ::= ε ;
SVG.Mask.extra.attrib ::= ε ;
SVG.display.attrib ::= (display::("inline" | "block" | "list-item" | "run-in" | "compact" | "marker" | "table" | "inline-table" | "table-row-group" | "table-header-group" | "table-footer-group" | "table-row" | "table-column-group" | "table-column" | "table-cell" | "table-caption" | "none" | "inherit"))? ;
SVG.Description.extra.class ::= ε ;
SVG.Font.extra.attrib ::= ε ;
SVG.Script.datatype ::= string() ;
SVG.View.extra.class ::= ε ;
SVG.FontSizeValue.datatype ::= string() ;
SVG.StyleSheet.datatype ::= string() ;
SVG.PreserveAspectRatioSpec.datatype ::= string() ;
SVG.Conditional.extra.attrib ::= ε ;
SVG.MaskValue.datatype ::= string() ;
SVG.Structure.extra.class ::= ε ;
SVG.Filter.extra.attrib ::= ε ;
SVG.AnimationAttribute.extra.attrib ::= ε ;
SVG.foreignObject.class ::= string() ;
SVG.Coordinate.datatype ::= string() ;
SVG.XLink.extra.attrib ::= ε ;
SVG.Marker.class ::= ε ;
SVG.Extensibility.extra.class ::= ε ;
SVG.XLinkReplace.extra.attrib ::= ε ;
SVG.FontSizeAdjustValue.datatype ::= string() ;
SVG.SVGColor.datatype ::= string() ;
SVG.StrokeDashOffsetValue.datatype ::= string() ;
SVG.Hyperlink.extra.class ::= ε ;
SVG.XLinkEmbed.extra.attrib ::= ε ;
SVG.Points.datatype ::= string() ;
SVG.NumberOrPercentage.datatype ::= string() ;
SVG.ClipPathValue.datatype ::= string() ;
SVG.Text.extra.attrib ::= ε ;
SVG.ExtensionList.datatype ::= string() ;
SVG.FontFamilyValue.datatype ::= string() ;
SVG.Image.extra.class ::= ε ;
SVG.ClipValue.datatype ::= string() ;
SVG.Text.datatype ::= string() ;
SVG.PathData.datatype ::= string() ;
SVG.DocumentEvents.extra.attrib ::= ε ;
SVG.FilterColor.extra.attrib ::= ε ;
SVG.Marker.attrib ::= ε ;
SVG.GlyphOrientationHorizontalValue.datatype ::= string() ;
SVG.TransformList.datatype ::= string() ;
SVG.FilterPrimitive.extra.attrib ::= ε ;
SVG.FilterPrimitive.extra.class ::= ε ;
SVG.URI.datatype ::= string() ;
SVG.LanguageCodes.datatype ::= string() ;
SVG.Filter.extra.class ::= ε ;
SVG.ID.datatype ::= string() ;
SVG.ContentType.datatype ::= string() ;
SVG.MediaDesc.datatype ::= string() ;
XLinkRequired.attrib ::= ε ;
SVG.ClassList.datatype ::= string() ;
SVG.FilterPrimitiveWithIn.extra.attrib ::= ε ;
SVG.KerningValue.datatype ::= string() ;
SVG.Mask.extra.class ::= ε ;
SVG.Length.datatype ::= string() ;
SVG.Graphics.extra.attrib ::= ε ;
SVG.Number.datatype ::= integer() ;
SVG.AnimationValue.extra.attrib ::= ε ;
SVG.Integer.datatype ::= integer() ;
SVG.Color.extra.attrib ::= ε ;
SVG.Gradient.extra.attrib ::= ε ;
SVG.space.attrib ::= (xml:space::("default" | "preserve"))? ;
SVG.Animation.extra.attrib ::= ε ;
SVG.SpacingValue.datatype ::= string() ;
SVG.ClipFillRule.datatype ::= string() ;
SVG.Color.datatype ::= string() ;
SVG.Cursor.attrib ::= ε ;
SVG.Profile.extra.attrib ::= ε ;
SVG.NumberOptionalNumber.datatype ::= string() ;
SVG.TextContent.extra.attrib ::= ε ;
SVG.BaselineShiftValue.datatype ::= string() ;
SVG.GraphicalEvents.extra.attrib ::= ε ;
SVG.Style.extra.class ::= ε ;
SVG.Numbers.datatype ::= string() ;
XLinkEmbed.attrib ::= ε ;
SVG.Style.extra.attrib ::= ε ;
SVG.Core.extra.attrib ::= ε ;
SVG.overflow.attrib ::= (overflow::("visible" | "hidden" | "scroll" | "auto" | "inherit"))? ;
SVG.Profile.extra.class ::= ε ;
SVG.image-rendering.attrib ::= (image-rendering::("auto" | "optimizeSpeed" | "optimizeQuality" | "inherit"))? ;
SVG.Clip.extra.class ::= ε ;
SVG.GlyphOrientationVerticalValue.datatype ::= string() ;
SVG.StrokeWidthValue.datatype ::= string() ;
SVG.pointer-events.attrib ::= (pointer-events::("visiblePainted" | "visibleFill" | "visibleStroke" | "visible" | "painted" | "fill" | "stroke" | "all" | "none" | "inherit"))? ;
SVG.Font.extra.class ::= ε ;
SVG.Shape.extra.class ::= ε ;
SVG.LanguageCode.datatype ::= string() ;
SVG.AnimationEvents.extra.attrib ::= ε ;
SVG.Paint.extra.attrib ::= ε ;
SVG.shape-rendering.attrib ::= (shape-rendering::("auto" | "optimizeSpeed" | "crispEdges" | "geometricPrecision" | "inherit"))? ;
SVG.Script.extra.class ::= ε ;
SVG.Coordinates.datatype ::= string() ;
SVG.color-rendering.attrib ::= (color-rendering::("auto" | "optimizeSpeed" | "optimizeQuality" | "inherit"))? ;
SVG.AnimationAddition.extra.attrib ::= ε ;
--------------------markup::svg-furubayashi-tiny.bgf--------------------
SVG.Gradient.attrib ::= ε ;
SVG.Paint.datatype ::= string() ;
SVG.LinkTarget.datatype ::= string() ;
SVG.visibility.attrib ::= (visibility::("visible" | "hidden" | "inherit"))? ;
SVG.ViewBoxSpec.datatype ::= string() ;
SVG.StrokeMiterLimitValue.datatype ::= string() ;
SVG.GraphicalEvents.attrib ::= ε ;
SVG.Boolean.datatype ::= string() ;
SVG.Presentation.extra.attrib ::= ε ;
SVG.AnimationTiming.extra.attrib ::= ε ;
SVG.XLinkRequired.extra.attrib ::= ε ;
SVG.Lengths.datatype ::= string() ;
SVG.stroke-linejoin.attrib ::= (stroke-linejoin::("miter" | "round" | "bevel" | "inherit"))? ;
SVG.Cursor.class ::= ε ;
SVG.Use.extra.class ::= ε ;
SVG.FeatureList.datatype ::= string() ;
SVG.Conditional.extra.class ::= ε ;
SVG.StrokeDashArrayValue.datatype ::= string() ;
SVG.Animation.extra.class ::= ε ;
SVG.stroke-linecap.attrib ::= (stroke-linecap::("butt" | "round" | "square" | "inherit"))? ;
SVG.Clip.class ::= ε ;
SVG.Text.extra.class ::= ε ;
SVG.OpacityValue.datatype ::= string() ;
SVG.External.extra.attrib ::= ε ;
SVG.Text.attrib ::= ε ;
SVG.Container.attrib ::= ε ;
SVG.display.attrib ::= (display::("inline" | "block" | "list-item" | "run-in" | "compact" | "marker" | "table" | "inline-table" | "table-row-group" | "table-header-group" | "table-footer-group" | "table-row" | "table-column-group" | "table-column" | "table-cell" | "table-caption" | "none" | "inherit"))? ;
SVG.Clip.attrib ::= ε ;
SVG.Description.extra.class ::= ε ;
SVG.Font.extra.attrib ::= ε ;
SVG.Script.datatype ::= string() ;
SVG.View.extra.class ::= ε ;
SVG.FontSizeValue.datatype ::= string() ;
SVG.StyleSheet.datatype ::= string() ;
SVG.PreserveAspectRatioSpec.datatype ::= string() ;
SVG.Conditional.extra.attrib ::= ε ;
SVG.FilterColor.attrib ::= ε ;
SVG.Structure.extra.class ::= ε ;
SVG.AnimationAttribute.extra.attrib ::= ε ;
SVG.foreignObject.class ::= string() ;
SVG.Pattern.class ::= ε ;
SVG.Coordinate.datatype ::= string() ;
SVG.XLink.extra.attrib ::= ε ;
SVG.Marker.class ::= ε ;
SVG.Extensibility.extra.class ::= ε ;
SVG.XLinkReplace.extra.attrib ::= ε ;
SVG.SVGColor.datatype ::= string() ;
SVG.Hyperlink.extra.class ::= ε ;
SVG.Viewport.attrib ::= ε ;
SVG.StrokeDashOffsetValue.datatype ::= string() ;
SVG.XLinkEmbed.extra.attrib ::= ε ;
SVG.Points.datatype ::= string() ;
SVG.Gradient.class ::= ε ;
SVG.Mask.attrib ::= ε ;
SVG.ExtensionList.datatype ::= string() ;
SVG.FontFamilyValue.datatype ::= string() ;
SVG.Image.extra.class ::= ε ;
SVG.Text.datatype ::= string() ;
SVG.Profile.attrib ::= ε ;
SVG.PathData.datatype ::= string() ;
SVG.Filter.attrib ::= ε ;
SVG.Marker.attrib ::= ε ;
SVG.TransformList.datatype ::= string() ;
SVG.URI.datatype ::= string() ;
SVG.LanguageCodes.datatype ::= string() ;
SVG.ID.datatype ::= string() ;
SVG.Profile.class ::= ε ;
SVG.ContentType.datatype ::= string() ;
SVG.MediaDesc.datatype ::= string() ;
XLinkRequired.attrib ::= ε ;
SVG.ClassList.datatype ::= string() ;
SVG.AnimationEvents.attrib ::= ε ;
SVG.Length.datatype ::= string() ;
SVG.Graphics.extra.attrib ::= ε ;
SVG.Number.datatype ::= integer() ;
SVG.AnimationValue.extra.attrib ::= ε ;
SVG.Integer.datatype ::= integer() ;
SVG.Color.extra.attrib ::= ε ;
SVG.space.attrib ::= (xml:space::("default" | "preserve"))? ;
SVG.Animation.extra.attrib ::= ε ;
SVG.DocumentEvents.attrib ::= ε ;
SVG.ClipFillRule.datatype ::= string() ;
SVG.Color.datatype ::= string() ;
SVG.Cursor.attrib ::= ε ;
SVG.Opacity.attrib ::= ε ;
SVG.TextContent.extra.attrib ::= ε ;
SVG.Style.extra.class ::= ε ;
SVG.Numbers.datatype ::= string() ;
XLinkEmbed.attrib ::= ε ;
SVG.Style.extra.attrib ::= ε ;
SVG.Core.extra.attrib ::= ε ;
SVG.Filter.class ::= ε ;
SVG.StrokeWidthValue.datatype ::= string() ;
SVG.Font.extra.class ::= ε ;
SVG.Shape.extra.class ::= ε ;
SVG.LanguageCode.datatype ::= string() ;
SVG.Paint.extra.attrib ::= ε ;
SVG.Script.extra.class ::= ε ;
SVG.Coordinates.datatype ::= string() ;
SVG.Mask.class ::= ε ;
SVG.color-rendering.attrib ::= (color-rendering::("auto" | "optimizeSpeed" | "optimizeQuality" | "inherit"))? ;
SVG.AnimationAddition.extra.attrib ::= ε ;
--------------------markup::svg-furubayashi.bgf--------------------
SVG.Paint.datatype ::= string() ;
SVG.LinkTarget.datatype ::= string() ;
SVG.visibility.attrib ::= (visibility::("visible" | "hidden" | "inherit"))? ;
SVG.Clip.extra.attrib ::= ε ;
SVG.ViewBoxSpec.datatype ::= string() ;
SVG.StrokeMiterLimitValue.datatype ::= string() ;
SVG.Opacity.extra.attrib ::= ε ;
SVG.Boolean.datatype ::= string() ;
SVG.Pattern.extra.class ::= ε ;
SVG.Presentation.extra.attrib ::= ε ;
SVG.AnimationTiming.extra.attrib ::= ε ;
SVG.Marker.extra.class ::= ε ;
SVG.XLinkRequired.extra.attrib ::= ε ;
SVG.stroke-linejoin.attrib ::= (stroke-linejoin::("miter" | "round" | "bevel" | "inherit"))? ;
SVG.Lengths.datatype ::= string() ;
SVG.TextContent.extra.class ::= ε ;
SVG.Use.extra.class ::= ε ;
SVG.TextDecorationValue.datatype ::= string() ;
SVG.color-interpolation.attrib ::= (color-interpolation::("auto" | "sRGB" | "linearRGB" | "inherit"))? ;
SVG.Conditional.extra.class ::= ε ;
SVG.FeatureList.datatype ::= string() ;
SVG.Viewport.extra.attrib ::= ε ;
SVG.StrokeDashArrayValue.datatype ::= string() ;
SVG.Gradient.extra.class ::= ε ;
SVG.Animation.extra.class ::= ε ;
SVG.stroke-linecap.attrib ::= (stroke-linecap::("butt" | "round" | "square" | "inherit"))? ;
SVG.Text.extra.class ::= ε ;
SVG.FilterValue.datatype ::= string() ;
SVG.text-rendering.attrib ::= (text-rendering::("auto" | "optimizeSpeed" | "optimizeLegibility" | "geometricPrecision" | "inherit"))? ;
SVG.OpacityValue.datatype ::= string() ;
SVG.External.extra.attrib ::= ε ;
SVG.Container.attrib ::= ε ;
SVG.Mask.extra.attrib ::= ε ;
SVG.display.attrib ::= (display::("inline" | "block" | "list-item" | "run-in" | "compact" | "marker" | "table" | "inline-table" | "table-row-group" | "table-header-group" | "table-footer-group" | "table-row" | "table-column-group" | "table-column" | "table-cell" | "table-caption" | "none" | "inherit"))? ;
SVG.Description.extra.class ::= ε ;
SVG.Font.extra.attrib ::= ε ;
SVG.Script.datatype ::= string() ;
SVG.View.extra.class ::= ε ;
SVG.FontSizeValue.datatype ::= string() ;
SVG.StyleSheet.datatype ::= string() ;
SVG.PreserveAspectRatioSpec.datatype ::= string() ;
SVG.Conditional.extra.attrib ::= ε ;
SVG.MaskValue.datatype ::= string() ;
SVG.Structure.extra.class ::= ε ;
SVG.Filter.extra.attrib ::= ε ;
SVG.AnimationAttribute.extra.attrib ::= ε ;
SVG.foreignObject.class ::= string() ;
SVG.Marker.extra.attrib ::= ε ;
SVG.Coordinate.datatype ::= string() ;
SVG.XLink.extra.attrib ::= ε ;
SVG.Extensibility.extra.class ::= ε ;
SVG.XLinkReplace.extra.attrib ::= ε ;
SVG.FontSizeAdjustValue.datatype ::= string() ;
SVG.SVGColor.datatype ::= string() ;
SVG.StrokeDashOffsetValue.datatype ::= string() ;
SVG.Hyperlink.extra.class ::= ε ;
SVG.XLinkEmbed.extra.attrib ::= ε ;
SVG.Points.datatype ::= string() ;
SVG.NumberOrPercentage.datatype ::= string() ;
SVG.CursorValue.datatype ::= string() ;
SVG.ClipPathValue.datatype ::= string() ;
SVG.Text.extra.attrib ::= ε ;
SVG.ExtensionList.datatype ::= string() ;
SVG.FontFamilyValue.datatype ::= string() ;
SVG.Image.extra.class ::= ε ;
SVG.ClipValue.datatype ::= string() ;
SVG.Text.datatype ::= string() ;
SVG.PathData.datatype ::= string() ;
SVG.DocumentEvents.extra.attrib ::= ε ;
SVG.FilterColor.extra.attrib ::= ε ;
SVG.GlyphOrientationHorizontalValue.datatype ::= string() ;
SVG.TransformList.datatype ::= string() ;
SVG.FilterPrimitive.extra.attrib ::= ε ;
SVG.FilterPrimitive.extra.class ::= ε ;
SVG.URI.datatype ::= string() ;
SVG.Filter.extra.class ::= ε ;
SVG.LanguageCodes.datatype ::= string() ;
SVG.ID.datatype ::= string() ;
SVG.ContentType.datatype ::= string() ;
SVG.MediaDesc.datatype ::= string() ;
XLinkRequired.attrib ::= ε ;
SVG.ClassList.datatype ::= string() ;
SVG.FilterPrimitiveWithIn.extra.attrib ::= ε ;
SVG.MarkerValue.datatype ::= string() ;
SVG.KerningValue.datatype ::= string() ;
SVG.Mask.extra.class ::= ε ;
SVG.Length.datatype ::= string() ;
SVG.Graphics.extra.attrib ::= ε ;
SVG.Number.datatype ::= integer() ;
SVG.AnimationValue.extra.attrib ::= ε ;
SVG.Integer.datatype ::= integer() ;
SVG.Color.extra.attrib ::= ε ;
SVG.Gradient.extra.attrib ::= ε ;
SVG.space.attrib ::= (xml:space::("default" | "preserve"))? ;
SVG.Animation.extra.attrib ::= ε ;
SVG.SpacingValue.datatype ::= string() ;
SVG.ClipFillRule.datatype ::= string() ;
SVG.Color.datatype ::= string() ;
SVG.Cursor.attrib ::= ε ;
SVG.Profile.extra.attrib ::= ε ;
SVG.NumberOptionalNumber.datatype ::= string() ;
SVG.TextContent.extra.attrib ::= ε ;
SVG.BaselineShiftValue.datatype ::= string() ;
SVG.GraphicalEvents.extra.attrib ::= ε ;
SVG.Style.extra.class ::= ε ;
SVG.Numbers.datatype ::= string() ;
XLinkEmbed.attrib ::= ε ;
SVG.Style.extra.attrib ::= ε ;
SVG.Core.extra.attrib ::= ε ;
SVG.overflow.attrib ::= (overflow::("visible" | "hidden" | "scroll" | "auto" | "inherit"))? ;
SVG.Cursor.extra.class ::= ε ;
SVG.Profile.extra.class ::= ε ;
SVG.image-rendering.attrib ::= (image-rendering::("auto" | "optimizeSpeed" | "optimizeQuality" | "inherit"))? ;
SVG.Clip.extra.class ::= ε ;
SVG.GlyphOrientationVerticalValue.datatype ::= string() ;
SVG.StrokeWidthValue.datatype ::= string() ;
SVG.pointer-events.attrib ::= (pointer-events::("visiblePainted" | "visibleFill" | "visibleStroke" | "visible" | "painted" | "fill" | "stroke" | "all" | "none" | "inherit"))? ;
SVG.Font.extra.class ::= ε ;
SVG.Shape.extra.class ::= ε ;
SVG.LanguageCode.datatype ::= string() ;
SVG.AnimationEvents.extra.attrib ::= ε ;
SVG.Paint.extra.attrib ::= ε ;
SVG.shape-rendering.attrib ::= (shape-rendering::("auto" | "optimizeSpeed" | "crispEdges" | "geometricPrecision" | "inherit"))? ;
SVG.Script.extra.class ::= ε ;
SVG.Coordinates.datatype ::= string() ;
SVG.color-rendering.attrib ::= (color-rendering::("auto" | "optimizeSpeed" | "optimizeQuality" | "inherit"))? ;
SVG.AnimationAddition.extra.attrib ::= ε ;
--------------------markup::svg-palies.bgf--------------------
Integer ::= integer() ;
Ellipse ::= ε ;
Boolean ::= "true" | "false" ;
String ::= string() ;
Point ::= ε ;
Circle ::= ε ;
--------------------markup::uiml.bgf--------------------
Integer ::= integer() ;
UsedInTagKind ::= (event::ε) | (listener::ε) | (part::ε) ;
WhereKind ::= (first::ε) | (last::ε) | (before::ε) | (after::ε) ;
ExportKind ::= (hidden::ε) | (optional::ε) | (required::ε) ;
MapsTypeKind ::= (attribute::ε) | (getMethod::ε) | (setMethod::ε) | (method::ε) ;
HowKind ::= (append::ε) | (cascade::ε) | (replace::ε) | (union::ε) | (delete::ε) ;
String ::= string() ;
--------------------markup::wiki-mediawiki-bnf.bgf--------------------
image-valign-text-bottom ::= "text-bottom" ;
underscore ::= "_" ;
LF ::= "\n" ;
any-supported-unicode-character ::= α ;
image-valign-bottom ::= "bottom" ;
unescaped-greater-than ::= ">" ;
lcase-letter ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" ;
image-mode-frame ::= "framed" | "enframed" | "frame" ;
TAB ::= "\t" ;
image-valign-sub ::= "sub" ;
image-align-none ::= "none" ;
unescaped-ampersand ::= "&" ;
decimal-digit ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;
image-mode-auto-thumb ::= "thumbnail" | "thumb" ;
image-valign-super ::= "super" | "sup" ;
CR ::= "\r" ;
pipe ::= "|" ;
behaviourswitch-toc ::= "__TOC__" ;
harmless-character ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;
redirect-tag ::= "#redirect" ;
image-align-right ::= "right" ;
image-valign-middle ::= "middle" ;
random-character ::= α ;
internal-link-start ::= "[[" ;
behaviourswitch-noeditsection ::= "__NOEDITSECTION__" ;
image-param-border ::= "border" ;
bold-toggle ::= "'''" ;
namespace ::= string() ;
behaviourswitch-forcetoc ::= "__FORCETOC__" ;
protocol ::= "http://" | "https://" | "ftp://" | "ftps://" | "mailto:" ;
internal-link-end ::= "]]" ;
media-extension ::= "ogg" | "wav" ;
behaviourswitch-nogallery ::= "__NOGALLERY__" ;
sub-page-separator ::= "/" ;
wiki-markup-characters ::= "|" | "[" | "]" | "*" | "#" | ":" | ";" | "<" | ">" | "=" | "'" | "{" | "}" ;
unescaped-less-than ::= "<" ;
italic-toggle ::= "''" ;
image-valign-baseline ::= "baseline" ;
external-link-start ::= "[" ;
image-align-center ::= "center" | "centre" ;
image-mode-frameless ::= "frameless" ;
ucase-letter ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ;
image-extension ::= "jpg" | "jpeg" | "png" | "svg" | "gif" | "bmp" ;
category-namespace ::= "Category" ;
interwiki ::= "Wikipedia" ;
behaviourswitch-notoc ::= "__NOTOC__" ;
external-link-end ::= "]" ;
bold-italic-toggle ::= "'''''" ;
image-valign-top ::= "top" ;
bad-title-characters ::= "[" | "]" | "{" | "}" | "<" | ">" | "_" | "|" | "#" ;
space ::= " " ;
image-param-page ::= "page=$1" | "page $1" ;
image-valign-text-top ::= "text-top" ;
image-align-left ::= "left" ;
dashes ::= "-"+ ;
--------------------markup::wiki-mediawiki-ebnf.bgf--------------------
end_link ::= "]]" ;
digit ::= "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "0" ;
user_signature_with_date ::= "~~~~" ;
table_end ::= "|}" ;
Unicode_char ::= α ;
horizontal_rule ::= "----" "-"* ;
start_link ::= "[[" ;
current_date ::= "~~~~~" ;
user_signature ::= "~~~" ;
ASCII_letter ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ;
--------------------markup::wiki-table.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------fl::antlr.bgf--------------------
ops ::= "==" | "+" | "-" ;
--------------------fl::dcg.bgf--------------------
ops ::= [equal] "==" ;
 ops ::= [plus] "+" ;
 ops ::= [minus] "-" ;
--------------------fl::ecore.bgf--------------------
LiteralExp ::= value::integer() ;
Argument ::= name::string() ;
--------------------fl::emf.bgf--------------------
Literal ::= info::integer() ;
Argument ::= name::string() ;
Ops ::= (Equal::ε) | (Plus::ε) | (Minus::ε) ;
--------------------fl::jaxb.bgf--------------------
Literal ::= Info::integer() ;
Argument ::= Name::string() ;
ObjectFactory ::= ε ;
package-info ::= φ ;
Ops ::= (EQUAL::ε) | (PLUS::ε) | (MINUS::ε) ;
--------------------fl::om.bgf--------------------
Literal ::= info::integer() ;
Visitor ::= φ ;
Argument ::= name::string() ;
Ops ::= (Equal::ε) | (Plus::ε) | (Minus::ε) ;
--------------------fl::python.bgf--------------------
operators ::= "==" | "+" | "-" ;
literal ::= "-"? integer() ;
_THEN ::= "then" ;
_IF ::= "if" ;
name ::= string() ;
_ELSE ::= "else" ;
--------------------fl::rascal-a.bgf--------------------
FLOp ::= (minus::ε) | (plus::ε) | (equal::ε) ;
--------------------fl::rascal-c.bgf--------------------
Ops ::= [plus] "+" ;
 Ops ::= [equal] "==" ;
 Ops ::= [minus] "-" ;
--------------------fl::rascal.bgf--------------------
Ops ::= [minus] "-" ;
 Ops ::= [plus] "+" ;
 Ops ::= [equal] "==" ;
--------------------fl::sdf.bgf--------------------
Ops ::= [minus] "-" ;
 Ops ::= [plus] "+" ;
 Ops ::= [equal] "==" ;
--------------------fl::txl.bgf--------------------
op ::= "+" | "-" | "==" ;
--------------------fl::xsd.bgf--------------------
Literal ::= info::integer() ;
Argument ::= name::string() ;
Ops ::= (Equal::ε) | (Plus::ε) | (Minus::ε) ;
--------------------metasyntax::bnf-sdf.bgf--------------------
Terminal ::= string() ;
NonTerminal ::= "<" string() ">" ;
--------------------metasyntax::txl.bgf--------------------
redefineOrDefine ::= "redefine" | "define" ;
typeRepeater ::= "+" | "*" | "?" | "," | ",+" ;
typeModifier ::= "opt" | "repeat" | "list" | "attr" | "see" | "not" | "push" | "pop" | ":" | "~" | ">" | "<" ;
--------------------metasyntax::ebnf-bgf.bgf--------------------
definition-separator-metasymbol ::= "\n" " " ;
end-group-metasymbol ::= ")" ;
empty ::= "EMPTY" ;
start-nonterminal-metasymbol ::= ε ;
end-terminal-metasymbol ::= """ ;
optionality-metasymbol ::= "?" ;
any ::= "ANY" ;
epsilon ::= "EPSILON" ;
repetition-metasymbol ::= "+" | "*" ;
start-group-metasymbol ::= "(" ;
label ::= "[" string() "]" ;
end-nonterminal-metasymbol ::= ε ;
start-terminal-metasymbol ::= """ ;
terminator-metasymbol ::= "\n" ;
defining-metasymbol ::= ":" ;
value ::= "INT" | "STR" ;
--------------------metasyntax::ebnf-iso-1.bgf--------------------
start_repeat_symbol ::= "{" | "(:" ;
defining_symbol ::= "=" ;
decimal_digit ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;
except_symbol ::= "-" ;
end_option_symbol ::= "]" | "/)" ;
definition_separator_symbol ::= "|" | "/" | "!" ;
vertical_tabulation_character ::= "\v" ;
end_group_symbol ::= ")" ;
end_comment_symbol ::= "*)" ;
other_character ::= " " | ":" | "+" | "_" | "%" | "@" | "&" | "#" | "$" | "<" | ">" | "\" | "^" | "‘" | "~" ;
form_feed ::= "\f" ;
end_repeat_symbol ::= "}" | ":)" ;
start_group_symbol ::= "(" ;
start_comment_symbol ::= "(*" ;
empty_sequence ::= ε ;
new_line ::= "\r"* "\n" "\r"* ;
space_character ::= " " ;
terminator_symbol ::= ";" | "." ;
special_sequence_symbol ::= "?" ;
horizontal_tabulation_character ::= "\t" ;
first_quote_symbol ::= "’" ;
second_quote_symbol ::= """ ;
repetition_symbol ::= "*" ;
letter ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ;
start_option_symbol ::= "[" | "(/" ;
concatenate_symbol ::= "," ;
--------------------metasyntax::ebnf-iso-2.bgf--------------------
empty ::= ε ;
--------------------metasyntax::ebnf-iso-3.bgf--------------------
EMPTY ::= ε ;
--------------------metasyntax::relaxng.bgf--------------------
common-atts ::= (ns::string())? (datatypeLibrary::string())? α* ;
combine-att ::= (combine::("choice" | "interleave"))? ;
--------------------metasyntax::ebnf-sdf.bgf--------------------
IdCon ::= string() ;
String ::= """ string() """ ;
--------------------metasyntax::lll-kort.bgf--------------------
repetition ::= "+" | "*" | "?" ;
--------------------metasyntax::lll-ldta.bgf--------------------
repetition ::= "*" | "+" | "?" ;
--------------------metasyntax::xsd-guyard.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
AttributeUseType ::= (null::ε) | (optional::ε) | (prohibited::ε) | (required::ε) ;
String ::= string() ;
--------------------metasyntax::yacc-txl.bgf--------------------
plusOrStar ::= "+" | "*" ;
--------------------metasyntax::xsd-tennison.bgf--------------------
fixedOrDefault ::= ε | (fixed::string()) | (default::string()) ;
simpleDerivationSet ::= "#all" | (("list" | "union" | "restriction")*) ;
allNNI ::= integer() | "unbounded" ;
reducedDerivationControl ::= ("extension" | "restriction")* ;
openAttrs ::= string()* ;
blockSet ::= "#all" | (("extension" | "restriction" | "substitution")*) ;
formChoice ::= "qualified" | "unqualified" ;
--------------------metasyntax::box-rascal.bgf--------------------
Context ::= "H" ;
 Context ::= "V" ;
SpaceSymbol ::= "vs" ;
 SpaceSymbol ::= "ts" ;
 SpaceSymbol ::= "hs" ;
 SpaceSymbol ::= "is" ;
FontOperator ::= "VAR" ;
 FontOperator ::= "MATH" ;
 FontOperator ::= "COMM" ;
 FontOperator ::= "KW" ;
 FontOperator ::= "NUM" ;
 FontOperator ::= "ESC" ;
 FontOperator ::= "STRING" ;
--------------------metasyntax::sdf-rascal.bgf--------------------
ATermAttribute ::= [Default] ε ;
Assoc ::= [NonAssoc] "non-assoc" ;
 Assoc ::= [Assoc] "assoc" ;
 Assoc ::= [Left] "left" ;
 Assoc ::= [Right] "right" ;
--------------------tescol::00000.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
COLON ::= ":" ;
EQUALS ::= "==" ;
SKIP ::= "skip" ;
LTE ::= "<=" ;
ELSE ::= "else" ;
GTE ::= ">=" ;
LPAR ::= "(" ;
COMMA ::= "," ;
DOUWORD ::= "double" ;
CONJUNCT ::= "/\\" ;
EXPO ::= "**" ;
DIV ::= "/" ;
RPAR ::= ")" ;
SEMI ::= ";" ;
GT ::= ">" ;
DISJUNCT ::= "\\/" ;
SUB ::= "-" ;
CONTAINS ::= "contains" ;
NOTEQ ::= "!=" ;
CONSTID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
QMARK ::= "?" ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
INTWORD ::= "int" ;
MULTI ::= "*" ;
PROC ::= "proc" ;
WHILE ::= "while" ;
INT ::= ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
DO ::= "do" ;
LT ::= "<" ;
LBRACE ::= "{" ;
VAR ::= "var" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
ADD ::= "+" ;
RBRACE ::= "}" ;
--------------------tescol::00001.bgf--------------------
SKIP ::= "skip" ;
COMMENT ::= "/*" α* "*/" ;
COLON ::= ":" ;
LTE ::= "<=" ;
EXP ::= "**" ;
NEQ ::= "!=" ;
MIXFIX ::= "?" ;
ELSE ::= "else" ;
GTE ::= ">=" ;
DIV ::= "/" ;
SEMI ::= ";" ;
OCB ::= "{" ;
GT ::= ">" ;
EQ ::= "==" ;
CONJ ::= "/\\" ;
CCB ::= "}" ;
COM ::= "," ;
CONTAINS ::= "contains" ;
CID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
CPAR ::= ")" ;
IF ::= "if" ;
THEN ::= "then" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
DISJ ::= "\\/" ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
PLUS ::= "+" ;
MULTI ::= "*" ;
INTG ::= ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
PROC ::= "proc" ;
OPAR ::= "(" ;
WHILE ::= "while" ;
MINUS ::= "-" ;
TYPEI ::= "int" ;
DO ::= "do" ;
TYPED ::= "double" ;
LT ::= "<" ;
ASSI ::= ":=" ;
VAR ::= "var" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
--------------------tescol::00010.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
SKIP ::= "skip" ;
COLON ::= ":" ;
CONDITION ::= "?" ;
DIVIDE ::= "/" ;
ELSE ::= "else" ;
EXPONENTIATE ::= "**" ;
AND ::= "/\\" ;
LPAR ::= "(" ;
COMMA ::= "," ;
GREATER_EQUAL ::= ">=" ;
RPAR ::= ")" ;
EXPONENT ::= "e" | "E" ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
LESS_EQUAL ::= "<=" ;
SEMI ::= ";" ;
INT_TYPE ::= "int" ;
DOUBLE_TYPE ::= "double" ;
MULTIPLY ::= "*" ;
OR ::= "\\/" ;
CONTAINS ::= "contains" ;
IF ::= "if" ;
THEN ::= "then" ;
WS ::= (" " | "\t" | "\r" | "\n" | "\u000C")+ ;
GREATER ::= ">" ;
PLUS ::= "+" ;
LESS ::= "<" ;
PROC ::= "proc" ;
EQUAL ::= "==" ;
WHILE ::= "while" ;
MINUS ::= "-" ;
DIGIT ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;
DO ::= "do" ;
NOT_EQUAL ::= "!=" ;
DEFINED_AS ::= ":=" ;
VAR ::= "var" ;
CHECKOUT ::= "checkout" ;
RCURLYPAR ::= "}" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
LCURLYPAR ::= "{" ;
--------------------tescol::00011.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
SKIP ::= "skip" ;
OPARAN ::= "(" ;
COLON ::= ":" ;
EXP ::= "**" ;
ADDITION ::= "+" ;
ELSE ::= "else" ;
MIXFIX ::= "?" ;
CONJUNCTION ::= "/\\" ;
COMMA ::= "," ;
CBRACE ::= "}" ;
ASSIGN ::= ":=" ;
SEMI ::= ";" ;
DIVISION ::= "/" ;
MULTIPLY ::= "*" ;
OBRACE ::= "{" ;
MOREEQUAL ::= ">=" ;
CONTAINS ::= "contains" ;
CONSTID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
LESSEQUAL ::= "<=" ;
LESS ::= "<" ;
PROC ::= "proc" ;
MORE ::= ">" ;
SUBTRACT ::= "-" ;
EQUAL ::= "==" ;
WHILE ::= "while" ;
INT ::= ("+" | "-")? "0" | ("1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")*) ;
DOUBLETYPE ::= "double" ;
DO ::= "do" ;
CPARAN ::= ")" ;
INTTYPE ::= "int" ;
VAR ::= "var" ;
NONEQUAL ::= "!=" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
DISJUNCTION ::= "\\/" ;
--------------------tescol::00100.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
SKIP ::= "skip" ;
COLON_EQUALS ::= ":=" ;
COLON ::= ":" ;
ADDITION ::= "+" ;
EQUALITY ::= "==" ;
INT_NUMBER ::= ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
ELSE ::= "else" ;
CONJUNCTION ::= "/\\" ;
COMMA ::= "," ;
GREATER_EQUAL ::= ">=" ;
LESS_EQUAL ::= "<=" ;
SEMI ::= ";" ;
DIVISION ::= "/" ;
QUESTION ::= "?" ;
negation ::= "-" ;
CONTAINS ::= "contains" ;
CID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
LPAREN ::= "(" ;
THEN ::= "then" ;
IF ::= "if" ;
EOF ::= ε ;
WS ::= (" " | "\t" | "\r" | "\n" | "\f")+ ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
EXPONENTIATION ::= "**" ;
GREATER ::= ">" ;
LESS ::= "<" ;
RPAREN ::= ")" ;
PROC ::= "proc" ;
SUBTRACTION ::= "-" ;
DOUBLE ::= "double" ;
WHILE ::= "while" ;
INT ::= "int" ;
NON_EQUALITY ::= "!=" ;
DO ::= "do" ;
LBRACE ::= "{" ;
VAR ::= "var" ;
MULTIPLICATION ::= "*" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
DISJUNCTION ::= "\\/" ;
RBRACE ::= "}" ;
--------------------tescol::00101.bgf--------------------
SKIP ::= "skip" ;
COLON ::= ":" ;
ADDITION ::= "+" ;
EQUALITY ::= "==" ;
ELSE ::= "else" ;
MIXFIX ::= "?" ;
AND ::= "/\\" ;
OPENPAR ::= "(" ;
OPENCURL ::= "{" ;
COMMA ::= "," ;
L_THAN ::= "<" ;
COMMENT_BLOCK ::= "/*" α* "*/" ;
DIVISION ::= "/" ;
CLOSEPAR ::= ")" ;
LE_THAN ::= "<=" ;
EXPONENTIAL ::= "**" ;
OR ::= "\\/" ;
GE_THAN ::= ">=" ;
CONTAINS ::= "contains" ;
CONSTID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
INTEGER ::= "int" ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
DEFINEDAS ::= ":=" ;
G_THAN ::= ">" ;
PROC ::= "proc" ;
SUBTRACTION ::= "-" ;
INT_VAL ::= ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
DOUBLE ::= "double" ;
WHILE ::= "while" ;
SEMICOLON ::= ";" ;
NON_EQUALITY ::= "!=" ;
DO ::= "do" ;
VAR ::= "var" ;
CHECKOUT ::= "checkout" ;
MULTIPLICATION ::= "*" ;
TROLLEY ::= "trolley" ;
CLOSECURL ::= "}" ;
CONST ::= "const" ;
DONE ::= "done" ;
--------------------tescol::00110.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
SKIP ::= "skip" ;
COLON ::= ":" ;
Q_MARK ::= "?" ;
EQUALITY ::= "==" ;
TYPE ::= "int" | "double" ;
ELSE ::= "else" ;
DEFINE_AS ::= ":=" ;
EXPR ::= "expr" ;
COMMA ::= "," ;
LEFT_PAREN ::= "(" ;
GREATER_THAN_OR_EQUAL ::= ">=" ;
VARDECL ::= "vardecl" ;
DIV ::= "/" ;
LESS_THAN_OR_EQUAL ::= "<=" ;
MULT ::= "*" ;
TESCO ::= "tesco" ;
SEMI ::= ";" ;
CONSTDECL ::= "constdecl" ;
PARAM ::= "param" ;
PROCAPP ::= "procApp" ;
CONJ ::= "/\\" ;
RIGHT_PAREN ::= ")" ;
DISJUNCT ::= "\\/" ;
GREATER_THAN ::= ">" ;
COND ::= "cond" ;
BODY ::= "body" ;
CONTAINS ::= "contains" ;
INTEGER ::= ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= " " | "\t" | "\f" | "\r\n" | "\r" | "\n" ;
EXPON ::= "**" ;
PLUS ::= "+" ;
CONST_ID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
PROC ::= "proc" ;
IFELSE ::= "ifelse" ;
EQUAL ::= "=" ;
VAR_ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
WHILE ::= "while" ;
LEFT_BRACKET ::= "{" ;
MINUS ::= "-" ;
DO ::= "do" ;
NOT_EQUAL ::= "!=" ;
LESS_THAN ::= "<" ;
VAR ::= "var" ;
CHECKOUT ::= "checkout" ;
RIGHT_BRACKET ::= "}" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
PROCDECL ::= "procdecl" ;
--------------------tescol::00111.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
SKIP ::= "skip" ;
COLON_EQUALS ::= ":=" ;
COLON ::= ":" ;
ADDITION ::= "+" ;
EQUALITY ::= "==" ;
INT_NUMBER ::= ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
ELSE ::= "else" ;
CONJUNCTION ::= "/\\" ;
COMMA ::= "," ;
NEWLINE ::= "\r"? "\n" ;
GREATER_EQUAL ::= ">=" ;
LESS_EQUAL ::= "<=" ;
SEMI ::= ";" ;
DIVISION ::= "/" ;
QUESTION ::= "?" ;
CONTAINS ::= "contains" ;
CID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
LPAREN ::= "(" ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= " " | "\r" | "\t" | "\u000C" ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
EXPONENTIATION ::= "**" ;
GREATER ::= ">" ;
LESS ::= "<" ;
RPAREN ::= ")" ;
PROC ::= "proc" ;
SUBTRACTION ::= "-" ;
DOUBLE ::= "double" ;
WHILE ::= "while" ;
INT ::= "int" ;
NON_EQUALITY ::= "!=" ;
DO ::= "do" ;
LBRACE ::= "{" ;
VAR ::= "var" ;
MULTIPLICATION ::= "*" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
DISJUNCTION ::= "\\/" ;
RBRACE ::= "}" ;
--------------------tescol::01000.bgf--------------------
SKIP ::= "skip" ;
COMMENT ::= "/*" α* "*/" ;
LTE ::= "<=" ;
EXP ::= "**" ;
NEQ ::= "!=" ;
ELSE ::= "else" ;
GTE ::= ">=" ;
INTNUM ::= ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
COMMA ::= "," ;
DIV ::= "/" ;
MULT ::= "*" ;
SEMI ::= ";" ;
GT ::= ">" ;
EQ ::= "==" ;
CONJ ::= "/\\" ;
DEF ::= ":=" ;
VARID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
COL ::= ":" ;
SUB ::= "-" ;
CONTAINS ::= "contains" ;
CONSTID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
THEN ::= "then" ;
IF ::= "if" ;
DISJ ::= "\\/" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
PROC ::= "proc" ;
QUES ::= "?" ;
WHILE ::= "while" ;
DOUBLE ::= "double" ;
INT ::= "int" ;
LBRACK ::= "(" ;
DO ::= "do" ;
LT ::= "<" ;
RCBRACK ::= "}" ;
RBRACK ::= ")" ;
VAR ::= "var" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
LCBRACK ::= "{" ;
DONE ::= "done" ;
ADD ::= "+" ;
--------------------tescol::01001.bgf--------------------
SKIP ::= "skip" ;
COLON ::= ":" ;
EXP ::= "**" ;
NEQ ::= "!=" ;
ELSE ::= "else" ;
GRTEQ ::= ">=" ;
COMMA ::= "," ;
DIV ::= "/" ;
MULT ::= "*" ;
SEMI ::= ";" ;
EQ ::= "==" ;
CONJ ::= "/\\" ;
DEF ::= ":=" ;
INT_T ::= ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
COM ::= "/*" α* "*/" ;
CONTAINS ::= "contains" ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
DISJ ::= "\\/" ;
PLUS ::= "+" ;
LESS ::= "<" ;
CLOSE ::= ")" ;
CONST_ID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
PROC ::= "proc" ;
VAR_ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
DOUBLE ::= "double" ;
WHILE ::= "while" ;
MINUS ::= "-" ;
INT ::= "int" ;
DO ::= "do" ;
OPEN ::= "(" ;
GRT ::= ">" ;
VAR ::= "var" ;
CHECKOUT ::= "checkout" ;
LESSEQ ::= "<=" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
QUEST ::= "?" ;
STST ::= "{" ;
DONE ::= "done" ;
STED ::= "}" ;
--------------------tescol::01010.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
SKIP ::= "skip" ;
COLON ::= ":" ;
RCURL ::= "}" ;
INUM ::= ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
EXP ::= "**" ;
ELSE ::= "else" ;
POSITIVE ::= "+" ;
LCURL ::= "{" ;
LSTE ::= "<=" ;
AND ::= "/\\" ;
NEGATIVE ::= "-" ;
COMMA ::= "," ;
RPARA ::= ")" ;
DIV ::= "/" ;
ASSIGN ::= ":=" ;
SEMI ::= ";" ;
LST ::= "<" ;
LPARA ::= "(" ;
MUL ::= "*" ;
OR ::= "\\/" ;
EQL ::= "==" ;
CONTAINS ::= "contains" ;
CONSTID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
IF ::= "if" ;
THEN ::= "then" ;
EOF ::= ε ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
GRTE ::= ">=" ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
PROC ::= "proc" ;
NEQL ::= "!=" ;
DOUBLE ::= "double" ;
WHILE ::= "while" ;
INT ::= "int" ;
DO ::= "do" ;
GRT ::= ">" ;
VAR ::= "var" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
QUEST ::= "?" ;
--------------------tescol::01011.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
SKIP ::= "skip" ;
COLON ::= ":" ;
VARIABLE ::= "var" ;
EQUALITY ::= "==" ;
ELSE ::= "else" ;
COMMA ::= "," ;
PROCEDURE ::= "proc" ;
EXPO ::= "**" ;
ASSIGN ::= ":=" ;
MTHAN ::= ">" ;
SEMI ::= ";" ;
LTHAN ::= "<" ;
CONJ ::= "/\\" ;
MEQUAL ::= ">=" ;
INUMB ::= ("+" | "-")? "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* ;
negation ::= "-" ;
CONSTANT ::= "const" ;
DNUMB ::= ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* "." "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* ("e" "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")*)? ;
CONTAINS ::= "contains" ;
THEN ::= "then" ;
IF ::= "if" ;
EOF ::= ε ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
DISJ ::= "\\/" ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
DIVIS ::= "/" ;
PLUS ::= "+" ;
MULTI ::= "*" ;
WHILE ::= "while" ;
DOUBLE ::= "double" ;
MINUS ::= "-" ;
INT ::= "int" ;
LBRACK ::= "(" ;
DO ::= "do" ;
LEQUAL ::= "<=" ;
LBRACE ::= "{" ;
RBRACK ::= ")" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
DONE ::= "done" ;
NOTEQUAL ::= "!=" ;
RBRACE ::= "}" ;
--------------------tescol::01100.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
COLON ::= ":" ;
ADDITION ::= "+" ;
DEFINE ::= ":=" ;
SKIPTOKEN ::= "skip" ;
EQUALITY ::= "==" ;
RIGHTPARENTHESIS ::= ")" ;
ELSE ::= "else" ;
CONJUNCTION ::= "/\\" ;
PROCEDURE ::= "proc" ;
QUESTIONMARK ::= "?" ;
RIGHTCURLY ::= "}" ;
EXPONENT ::= "**" ;
DIVISION ::= "/" ;
NONEQUALITY ::= "!=" ;
SUBSTRACTION ::= "-" ;
CONTAINS ::= "contains" ;
CONSTID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
DIFFERENTOREQUAL ::= "<=" | ">=" ;
TYPEINT ::= "int" ;
WHILE ::= "while" ;
SEMICOLON ::= ";" ;
INT ::= ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
LEFTPARENTHESIS ::= "(" ;
TYPEDOUBLE ::= "double" ;
DO ::= "do" ;
VAR ::= "var" ;
CHECKOUT ::= "checkout" ;
LEFTCURLY ::= "{" ;
MULTIPLICATION ::= "*" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
STRICTLYDIFFERENT ::= "<" | ">" ;
DONE ::= "done" ;
DISJUNCTION ::= "\\/" ;
COMA ::= "," ;
--------------------tescol::01101.bgf--------------------
SKIP ::= "skip" ;
COLON ::= ":" ;
OPENBRACKET ::= "{" ;
EXP ::= "**" ;
EQUALITY ::= "==" ;
TYPE ::= "int" | "double" ;
ELSE ::= "else" ;
CONJUNCTION ::= "/\\" ;
LESSTHEN ::= "<" ;
COMMA ::= "," ;
PROCEDURE ::= "proc" ;
MORETHEN ::= ">" ;
MIX_FIX ::= "?" ;
DIV ::= "/" ;
SEMI ::= ";" ;
OPENPARENTHESIS ::= "(" ;
BECOMES ::= ":=" ;
TROLLY ::= "trolly" ;
NONEQUALITY ::= "!=" ;
ENDCOMMENT ::= "*/" ;
MUL ::= "*" ;
CONSTANT ::= "const" ;
SUB ::= "-" ;
CONTAINS ::= "contains" ;
CID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
CLOSEDBRACKET ::= "}" ;
MOREOREQUAL ::= ">=" ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
LESSOREQUAL ::= "<=" ;
BEGINCOMMENT ::= "/*" ;
WHILE ::= "while" ;
INT ::= ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
DO ::= "do" ;
CLOSEDPARENTHESIS ::= ")" ;
VAR ::= "var" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
DISJUNCTION ::= "\\/" ;
DONE ::= "done" ;
ADD ::= "+" ;
--------------------tescol::01110.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
SKIP ::= "skip" ;
COLON_EQUALS ::= ":=" ;
COLON ::= ":" ;
ADDITION ::= "+" ;
EQUALITY ::= "==" ;
INT_NUMBER ::= ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
ELSE ::= "else" ;
CONJUNCTION ::= "/\\" ;
COMMA ::= "," ;
GREATER_EQUAL ::= ">=" ;
LESS_EQUAL ::= "<=" ;
SEMI ::= ";" ;
DIVISION ::= "/" ;
QUESTION ::= "?" ;
negation ::= "-" ;
CONTAINS ::= "contains" ;
CID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
LPAREN ::= "(" ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
EXPONENTIATION ::= "**" ;
GREATER ::= ">" ;
LESS ::= "<" ;
RPAREN ::= ")" ;
PROC ::= "proc" ;
SUBTRACTION ::= "-" ;
DOUBLE ::= "double" ;
WHILE ::= "while" ;
INT ::= "int" ;
NON_EQUALITY ::= "!=" ;
DO ::= "do" ;
LBRACE ::= "{" ;
VAR ::= "var" ;
MULTIPLICATION ::= "*" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
DISJUNCTION ::= "\\/" ;
RBRACE ::= "}" ;
--------------------tescol::01111.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
SKIP ::= "skip" ;
COLON ::= ":" ;
ADDITION ::= "+" ;
GREATERTHAN ::= ">" ;
LESSTHAN ::= "<" ;
EQUALITY ::= "==" ;
ELSE ::= "else" ;
UNDER ::= "_" ;
CONJUNCTION ::= "/\\" ;
GREATERTHANOREQUAL ::= ">=" ;
LPAR ::= "{" ;
COMMA ::= "," ;
RPAR ::= "}" ;
SEMI ::= ";" ;
DIVISION ::= "/" ;
NONEQUALITY ::= "!=" ;
QUESTION ::= "?" ;
INTVALUE ::= ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
CONTAINS ::= "contains" ;
CONSTID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
CPAR ::= ")" ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= ("\t" | "|" | "\n" | "\r" | " " | "\f")+ ;
DEFINEDAS ::= ":=" ;
INTKEYWORD ::= "int" ;
EXPONENTION ::= "**" ;
DOUBLEKEYWORD ::= "double" ;
LESSTHANOREQUAL ::= "<=" ;
PROC ::= "proc" ;
SUBTRACTION ::= "-" ;
OPAR ::= "(" ;
WHILE ::= "while" ;
DO ::= "do" ;
VAR ::= "var" ;
MULTIPLICATION ::= "*" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DISJUNCTION ::= "\\/" ;
DONE ::= "done" ;
VARANDPROCID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
--------------------tescol::10000.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
SKIP ::= "skip" ;
COLON_EQUALS ::= ":=" ;
COLON ::= ":" ;
ADDITION ::= "+" ;
EQUALITY ::= "==" ;
INT_NUMBER ::= ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
ELSE ::= "else" ;
CONJUNCTION ::= "/\\" ;
COMMA ::= "," ;
NEWLINE ::= "\r"? "\n" ;
GREATER_EQUAL ::= ">=" ;
LESS_EQUAL ::= "<=" ;
SEMI ::= ";" ;
DIVISION ::= "/" ;
QUESTION ::= "?" ;
CONTAINS ::= "contains" ;
CID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
LPAREN ::= "(" ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
EXPONENTIATION ::= "**" ;
GREATER ::= ">" ;
LESS ::= "<" ;
RPAREN ::= ")" ;
PROC ::= "proc" ;
SUBTRACTION ::= "-" ;
DOUBLE ::= "double" ;
WHILE ::= "while" ;
INT ::= "int" ;
NON_EQUALITY ::= "!=" ;
DO ::= "do" ;
LBRACE ::= "{" ;
VAR ::= "var" ;
MULTIPLICATION ::= "*" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
DISJUNCTION ::= "\\/" ;
RBRACE ::= "}" ;
--------------------tescol::10001.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
SKIP ::= "skip" ;
COLON_EQUALS ::= ":=" ;
COLON ::= ":" ;
ADDITION ::= "+" ;
EQUALITY ::= "==" ;
INT_NUMBER ::= ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
ELSE ::= "else" ;
PROCBODY ::= "procbody" ;
CONJUNCTION ::= "/\\" ;
COMMA ::= "," ;
GREATER_EQUAL ::= ">=" ;
SEMI ::= ";" ;
LESS_EQUAL ::= "<=" ;
CIDENT ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
DIVISION ::= "/" ;
QUESTION ::= "?" ;
CONTAINS ::= "contains" ;
LPAREN ::= "(" ;
CALL ::= "call" ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
EXPONENTIATION ::= "**" ;
ID ::= "id" ;
GREATER ::= ">" ;
LESS ::= "<" ;
RPAREN ::= ")" ;
PROC ::= "proc" ;
SUBTRACTION ::= "-" ;
ARGLIST ::= "arglist" ;
DOUBLE ::= "double" ;
WHILE ::= "while" ;
IDENT ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
INT ::= "int" ;
NON_EQUALITY ::= "!=" ;
DO ::= "do" ;
LBRACE ::= "{" ;
VAR ::= "var" ;
MULTIPLICATION ::= "*" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
DISJUNCTION ::= "\\/" ;
RBRACE ::= "}" ;
--------------------tescol::10010.bgf--------------------
COLON ::= ":" ;
SKIP ::= "skip" ;
LESSTHAN ::= "<" ;
DIVIDE ::= "/" ;
ELSE ::= "else" ;
MORETHAN ::= ">" ;
COMMA ::= "," ;
DISJUNC ::= "\\/" ;
SEMI ::= ";" ;
CMT ::= "/*" α* "*/" ;
QUESTION ::= "?" ;
DEF ::= ":=" ;
MULTIPLY ::= "*" ;
CONJUNC ::= "/\\" ;
CLPAREN ::= "{" ;
CONTAINS ::= "contains" ;
MORETHANEQUAL ::= ">=" ;
LPAREN ::= "(" ;
THEN ::= "then" ;
IF ::= "if" ;
EXPON ::= "**" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
CRPAREN ::= "}" ;
LESSTHANEQUAL ::= "<=" ;
INTKEYWORD ::= "int" ;
RPAREN ::= ")" ;
DOUBLEKEYWORD ::= "double" ;
PROC ::= "proc" ;
EQUAL ::= "==" ;
SUBTRACT ::= "-" ;
WHILE ::= "while" ;
INT ::= ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
DO ::= "do" ;
VAR ::= "var" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
NOTEQUAL ::= "!=" ;
ADD ::= "+" ;
--------------------tescol::10011.bgf--------------------
COLON ::= ":" ;
SKIP ::= "skip" ;
VARIABLE ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
NEQ ::= "!=" ;
ELSE ::= "else" ;
DISJUN ::= "\\/" ;
COMMA ::= "," ;
LPAR ::= "(" ;
DIV ::= "/" ;
RCPAR ::= "}" ;
MULT ::= "*" ;
RPAR ::= ")" ;
SEMI ::= ";" ;
EQ ::= "==" ;
LCPAR ::= "{" ;
CONSTANT ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
CONTAINS ::= "contains" ;
INTEGER ::= "int" ;
THEN ::= "then" ;
IF ::= "if" ;
EXPON ::= "**" ;
QM ::= "?" ;
PLUS ::= "+" ;
LESS ::= "<" ;
DEFAS ::= ":=" ;
PROC ::= "proc" ;
MORE ::= ">" ;
WHILE ::= "while" ;
DOUBLE ::= "double" ;
MINUS ::= "-" ;
INT ::= "0" | ("1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")*) ;
DO ::= "do" ;
VAR ::= "var" ;
CHECKOUT ::= "checkout" ;
LESSEQ ::= "<=" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
CONJUN ::= "/\\" ;
MOREEQ ::= ">=" ;
--------------------tescol::10100.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
SKIP ::= "skip" ;
COLON_EQUALS ::= ":=" ;
COLON ::= ":" ;
ADDITION ::= "+" ;
EQUALITY ::= "==" ;
INT_NUMBER ::= ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
ELSE ::= "else" ;
CONJUNCTION ::= "/\\" ;
COMMA ::= "," ;
NEWLINE ::= "\r"? "\n" ;
GREATER_EQUAL ::= ">=" ;
LESS_EQUAL ::= "<=" ;
SEMI ::= ";" ;
DIVISION ::= "/" ;
QUESTION ::= "?" ;
CONTAINS ::= "contains" ;
CID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
LPAREN ::= "(" ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
EXPONENTIATION ::= "**" ;
GREATER ::= ">" ;
LESS ::= "<" ;
RPAREN ::= ")" ;
PROC ::= "proc" ;
SUBTRACTION ::= "-" ;
DOUBLE ::= "double" ;
WHILE ::= "while" ;
INT ::= "int" ;
NON_EQUALITY ::= "!=" ;
DO ::= "do" ;
LBRACE ::= "{" ;
VAR ::= "var" ;
MULTIPLICATION ::= "*" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
DISJUNCTION ::= "\\/" ;
RBRACE ::= "}" ;
--------------------tescol::10101.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
CONSTANTID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
SKIP ::= "skip" ;
COLON ::= ":" ;
VARIABLE ::= "var" ;
FLOAT ::= "double" ;
ADDITION ::= "+" ;
GREATEREQUAL ::= ">=" ;
EQUALITY ::= "==" ;
ELSE ::= "else" ;
MIXFIX ::= "?" ;
CONJUNCTION ::= "/\\" ;
COMMA ::= "," ;
PARENOPEN ::= "(" ;
PROCEDURE ::= "proc" ;
DECIMAL ::= "." ;
ASSIGN ::= ":=" ;
PARENCLOSE ::= ")" ;
SEMI ::= ";" ;
DIVISION ::= "/" ;
STATEMENTCLOSE ::= "}" ;
NONEQUALITY ::= "!=" ;
CONSTANT ::= "const" ;
CONTAINS ::= "contains" ;
INTEGER ::= ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "_" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
LESSEQUAL ::= "<=" ;
EXPONENTIATION ::= "**" ;
GREATER ::= ">" ;
LESS ::= "<" ;
STATEMENTOPEN ::= "{" ;
SUBTRACTION ::= "-" ;
WHILE ::= "while" ;
INT ::= "int" ;
DO ::= "do" ;
CHECKOUT ::= "checkout" ;
MULTIPLICATION ::= "*" ;
TROLLEY ::= "trolley" ;
DONE ::= "done" ;
DISJUNCTION ::= "\\/" ;
--------------------tescol::10110.bgf--------------------
COLON ::= ":" ;
SKIP ::= "skip" ;
COMMENT ::= "/*" α* "*/" ;
type ::= "int" | "double" ;
CURLY_L ::= "{" ;
EQUALITY ::= "==" ;
ELSE ::= "else" ;
DIVIDE ::= "/" ;
LPAR ::= "(" ;
COMMA ::= "," ;
RPAR ::= ")" ;
EXPONENT ::= "e" | "E" ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
SEMI ::= ";" ;
CONJ ::= "/\\" ;
QUESTION ::= "?" ;
GREATER_THAN ::= ">" ;
negation ::= "-" ;
GREATER_THAN_EQ ::= ">=" ;
MULTIPLY ::= "*" ;
LESS_THAN_EQ ::= "<=" ;
CONTAINS ::= "contains" ;
CID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
THEN ::= "then" ;
IF ::= "if" ;
EOF ::= ε ;
WS ::= (" " | "\t" | "\r" | "\n" | "\f")+ ;
DISJ ::= "\\/" ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
PROC ::= "proc" ;
EQUAL ::= "=" ;
SUBTRACT ::= "-" ;
KEY_DOUBLE ::= "double" ;
WHILE ::= "while" ;
KEY_INT ::= "int" ;
INT ::= ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
NON_EQUALITY ::= "!=" ;
DO ::= "do" ;
DEFINED_AS ::= ":=" ;
VAR ::= "var" ;
LESS_THAN ::= "<" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
ADD ::= "+" ;
CURLY_R ::= "}" ;
--------------------tescol::10111.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
KW_DO ::= "do" ;
KW_WHILE ::= "while" ;
KW_TYPE_INT ::= "int" ;
SYM_OR ::= "\\/" ;
ID_VARPROC ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "_" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
KW_CHECKOUT ::= "checkout" ;
SYM_OPEN_BRACE ::= "{" ;
KW_DONE ::= "done" ;
SYM_QM ::= "?" ;
KW_VAR ::= "var" ;
KW_TROLLEY ::= "trolley" ;
KW_SKIP ::= "skip" ;
KW_CONST ::= "const" ;
KW_ELSE ::= "else" ;
SYM_CLOSE_PAREN ::= ")" ;
SYM_NS_LT ::= "<=" ;
SYM_INEQ ::= "!=" ;
SYM_ADD ::= "+" ;
SYM_COLON ::= ":" ;
SYM_EXP ::= "**" ;
ID_GENERAL ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "_" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
KW_TYPE_DOUBLE ::= "double" ;
SYM_LT ::= "<" ;
SYM_AND ::= "/\\" ;
SYM_COMMA ::= "," ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
SYM_DIV ::= "/" ;
SYM_CLOSE_BRACE ::= "}" ;
KW_CONTAINS ::= "contains" ;
KW_THEN ::= "then" ;
KW_IF ::= "if" ;
SYM_NS_GT ::= ">=" ;
INT ::= ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
SYM_OPEN_PAREN ::= "(" ;
SYM_ASS ::= ":=" ;
KW_PROC ::= "proc" ;
SYM_MULT ::= "*" ;
SYM_SUB ::= "-" ;
SYM_SEMI ::= ";" ;
SYM_GT ::= ">" ;
SYM_EQ ::= "==" ;
--------------------tescol::11000.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
SKIP ::= "skip" ;
COLON ::= ":" ;
ADDITION ::= "+" ;
VARIABLE ::= "var" ;
GREATERTHAN ::= ">" ;
DEFINE ::= ":=" ;
LESSTHAN ::= "<" ;
EQUALITY ::= "==" ;
ELSE ::= "else" ;
GREATEROREQUAL ::= ">=" ;
AND ::= "/\\" ;
COMMA ::= "," ;
CURLYLEFT ::= "{" ;
PROCEDURE ::= "proc" ;
CURLYRIGHT ::= "}" ;
SEMI ::= ";" ;
DIVISION ::= "\\" ;
NONEQUALITY ::= "!=" ;
QUESTION ::= "?" ;
CONSTANT ::= "const" ;
OR ::= "\\/" ;
LEFTBRACKET ::= "(" ;
CONTAINS ::= "contains" ;
CID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "_" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
INTEGER ::= "int" ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "_" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
EXPONENTIATION ::= "**" ;
LESSOREQUAL ::= "<=" ;
SUBTRACTION ::= "-" ;
WHILE ::= "while" ;
DOUBLE ::= "double" ;
INT ::= ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
RIGHTBRACKET ::= ")" ;
DO ::= "do" ;
MULTIPLICATION ::= "*" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
DONE ::= "done" ;
--------------------tescol::11001.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
SKIP ::= "skip" ;
EQUALS ::= "=" ;
COLON ::= ":" ;
EXP ::= "**" ;
TINT ::= "int" ;
ELSE ::= "else" ;
BANG ::= "!" ;
AND ::= "/\\" ;
COMMA ::= "," ;
SEMI ::= ";" ;
LANGLE ::= "<" ;
QUESTION ::= "?" ;
TDOUBLE ::= "double" ;
MUL ::= "*" ;
OR ::= "\\/" ;
VARID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
RANGLE ::= ">" ;
CONTAINS ::= "contains" ;
CONSTID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
LPAREN ::= "(" ;
IF ::= "if" ;
THEN ::= "then" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
UINT ::= ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
PLUS ::= "+" ;
RPAREN ::= ")" ;
FSLASH ::= "/" ;
PROC ::= "proc" ;
WHILE ::= "while" ;
MINUS ::= "-" ;
DO ::= "do" ;
VAR ::= "var" ;
LBRACE ::= "{" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
RBRACE ::= "}" ;
--------------------tescol::11010.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
SKIP ::= "skip" ;
COLON ::= ":" ;
EQUALITY ::= "==" ;
LESSTHAN ::= "<" ;
ELSE ::= "else" ;
DIVIDE ::= "/" ;
CONJUNCTION ::= "/\\" ;
MORETHAN ::= ">" ;
COMMA ::= "," ;
EXPONENT ::= "e" | "E" ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
SEMI ::= ";" ;
LEFTBRACE ::= "{" ;
QUESTION ::= "?" ;
MULTIPLY ::= "*" ;
CONTAINS ::= "contains" ;
CONSTID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
MORETHANEQUAL ::= ">=" ;
INTEGER ::= "int" ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
EXPONENTIATION ::= "**" ;
DEFINEDAS ::= ":=" ;
LESSTHANEQUAL ::= "<=" ;
PLUS ::= "+" ;
LEFTPAR ::= "(" ;
RIGHTBRACE ::= "}" ;
PROC ::= "proc" ;
WHILE ::= "while" ;
MINUS ::= "-" ;
INT ::= ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
FLOATDOUBLE ::= "double" ;
DO ::= "do" ;
VAR ::= "var" ;
CHECKOUT ::= "checkout" ;
RIGHTPAR ::= ")" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DISJUNCTION ::= "\\/" ;
DONE ::= "done" ;
NOTEQUAL ::= "!=" ;
--------------------tescol::11011.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
COLON ::= ":" ;
SKIP ::= "skip" ;
COND_COMP_GREAT ::= "<" ;
ELSE ::= "else" ;
COND_EQUAL ::= "==" ;
TYPE_DOUBLE ::= "double" ;
LPAR ::= "(" ;
COMMA ::= "," ;
RCB ::= "}" ;
RPAR ::= ")" ;
ARITH_ADD ::= "+" ;
SEMI ::= ";" ;
COND_COMP_LESS ::= ">" ;
LCB ::= "{" ;
ARITH_EXP ::= "**" ;
CONJ ::= "/\\" ;
CONTAINS ::= "contains" ;
ARITH_DIV ::= "/" ;
QMARK ::= "?" ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
DISJ ::= "\\/" ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
COND_COMP_LESSE ::= ">=" ;
CONST_ID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "_" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* ;
DEFAS ::= ":=" ;
PROC ::= "proc" ;
ARITH_MUL ::= "*" ;
DOUBLE ::= ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* "." ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* ("e" ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+)? ;
WHILE ::= "while" ;
INT ::= ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
ARITH_SUB ::= "-" ;
COND_COMP_GREATE ::= "<=" ;
DO ::= "do" ;
TYPE_INT ::= "int" ;
VAR ::= "var" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
COND_NONEQUAL ::= "!=" ;
CONST ::= "const" ;
DONE ::= "done" ;
--------------------tescol::11100.bgf--------------------
SKIP ::= "skip" ;
COLON ::= ":" ;
COMMENT ::= "/*" α* "*/" ;
ELSE ::= "else" ;
COMMA ::= "," ;
SEMI ::= ";" ;
LEFTBRACE ::= "{" ;
LEFTBRACKET ::= "(" ;
CONTAINS ::= "contains" ;
CONSTID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
QMARK ::= "?" ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
PLUS ::= "+" ;
RIGHTBRACE ::= "}" ;
PROC ::= "proc" ;
WHILE ::= "while" ;
MINUS ::= "-" ;
INT ::= ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
BOOLOPERATOR ::= "/\\" | "\\/" ;
TRUE ::= "true" ;
ASSIGNMENT ::= ":=" ;
RIGHTBRACKET ::= ")" ;
DOUBLETYPE ::= "double" ;
DO ::= "do" ;
COMPARISON ::= "==" | "!=" | "<=" | ">=" | "<" | ">" ;
INTTYPE ::= "int" ;
VAR ::= "var" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
FALSE ::= "false" ;
CONST ::= "const" ;
DONE ::= "done" ;
MULTIPLIER ::= "**" | "/" | "*" ;
--------------------tescol::11101.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
SKIP ::= "skip" ;
COLON ::= ":" ;
ADDITION ::= "+" ;
ELSE ::= "else" ;
VARPROCID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
DBLE ::= "double" ;
CONJUNCTION ::= "/\\" ;
COMMA ::= "," ;
ROP ::= "==" | "!=" | "<" | "<=" | ">=" | ">" ;
SEMI ::= ";" ;
DIVISION ::= "/" ;
DEFINED ::= ":=" ;
QUESTION ::= "?" ;
CONTAINS ::= "contains" ;
CONSTID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
INTEGER ::= ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
PARENTHESISR ::= ")" ;
EXPONENTIATION ::= "**" ;
PARENTHESISL ::= "(" ;
PROC ::= "proc" ;
SUBTRACTION ::= "-" ;
WHILE ::= "while" ;
INT ::= "int" ;
DO ::= "do" ;
BRACKETR ::= "}" ;
VAR ::= "var" ;
MULTIPLICATION ::= "*" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
BRACKETL ::= "{" ;
CONST ::= "const" ;
DONE ::= "done" ;
DISJUNCTION ::= "\\/" ;
--------------------tescol::11110.bgf--------------------
SKIP ::= "skip" ;
COLON_EQUALS ::= ":=" ;
COLON ::= ":" ;
FLOAT ::= ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* "." ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* ("e" | "E" ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+)? ;
ADDITION ::= "+" ;
EQUALITY ::= "==" ;
ELSE ::= "else" ;
CONJUNCTION ::= "/\\" ;
COMMA ::= "," ;
COMMENTS ::= "/*" α* "*/" ;
GREATER_EQUAL ::= ">=" ;
LESS_EQUAL ::= "<=" ;
SEMI ::= ";" ;
DIVISION ::= "/" ;
QUESTION ::= "?" ;
CONTAINS ::= "contains" ;
INTEGER ::= ("+" | "-")? "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* ;
CONSTID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
LPAREN ::= "(" ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= (" " | "\t" | "\n" | "\r")+ ;
ID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
EXPONENTIATION ::= "**" ;
GREATER ::= ">" ;
LESS ::= "<" ;
RPAREN ::= ")" ;
PROC ::= "proc" ;
SUBTRACTION ::= "-" ;
DOUBLE ::= "double" ;
WHILE ::= "while" ;
INT ::= "int" ;
NON_EQUALITY ::= "!=" ;
DO ::= "do" ;
LBRACE ::= "{" ;
VAR ::= "var" ;
MULTIPLICATION ::= "*" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
DISJUNCTION ::= "\\/" ;
RBRACE ::= "}" ;
--------------------tescol::11111.bgf--------------------
COMMENT ::= "/*" α* "*/" ;
SKIP ::= "skip" ;
COLON ::= ":" ;
ADDITION ::= "+" ;
INT_NUMBER ::= ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ ;
ELSE ::= "else" ;
MIXFIX ::= "?" ;
DOUBLE_NUMBER ::= (("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+)? "." (("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+)? ("e" | "E" ("+" | "-")? ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+)? ;
CONJUNCTION ::= "/\\" ;
COMMA ::= "," ;
NEWLINE ::= "\r"? "\n" ;
ASSIGN ::= ":=" ;
GREATER_EQUAL ::= ">=" ;
LESS_EQUAL ::= "<=" ;
SEMI ::= ";" ;
DIVISION ::= "/" ;
VARID ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
CONTAINS ::= "contains" ;
CONSTID ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ("A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "_")* ;
LPAREN ::= "(" ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
EXPONENTIATION ::= "**" ;
GREATER ::= ">" ;
LESS ::= "<" ;
RPAREN ::= ")" ;
PROC ::= "proc" ;
EQUAL ::= "==" ;
SUBTRACTION ::= "-" ;
WHILE ::= "while" ;
DOUBLE ::= "double" ;
INT ::= "int" ;
DO ::= "do" ;
VAR ::= "var" ;
NONEQUAL ::= "!=" ;
LBRACE ::= "{" ;
CHECKOUT ::= "checkout" ;
MULTIPLICATION ::= "*" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
DONE ::= "done" ;
DISJUNCTION ::= "\\/" ;
RBRACE ::= "}" ;
--------------------tescol::reference.bgf--------------------
COLON ::= ":" ;
SKIP ::= "skip" ;
LTE ::= "<=" ;
EXP ::= "**" ;
NET ::= "!=" ;
ELSE ::= "else" ;
GTE ::= ">=" ;
LPAR ::= "(" ;
COMMA ::= "," ;
TE ::= "?" ;
DIV ::= "/" ;
MULT ::= "*" ;
RPAR ::= ")" ;
ET ::= "==" ;
DISJUNC ::= "/\\" ;
SEMI ::= ";" ;
GT ::= ">" ;
CONJUNC ::= "\\/" ;
LOWER ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" ;
SUB ::= "-" ;
CONTAINS ::= "contains" ;
THEN ::= "then" ;
IF ::= "if" ;
WS ::= (" " | "\t" | "\r" | "\n")+ ;
DOUB ::= "double" ;
DEFAS ::= ":=" ;
PROC ::= "proc" ;
WHILE ::= "while" ;
INT ::= "int" ;
DIGIT ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;
DO ::= "do" ;
LT ::= "<" ;
LBRACE ::= "{" ;
VAR ::= "var" ;
CHECKOUT ::= "checkout" ;
TROLLEY ::= "trolley" ;
CONST ::= "const" ;
UPPER ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" ;
DONE ::= "done" ;
ADD ::= "+" ;
RBRACE ::= "}" ;
--------------------hats::abs.bgf--------------------
IDENTIFIER ::= ε ;
INTLITERAL ::= ε ;
--------------------metamodels::ACG.bgf--------------------
Integer ::= integer() ;
Severity ::= (critic::ε) | (error::ε) | (warning::ε) ;
GetAsmStat ::= ε ;
OnceStat ::= ε ;
NewStat ::= ε ;
EndIterateStat ::= ε ;
DupStat ::= ε ;
String ::= string() ;
SelfExp ::= ε ;
PushTStat ::= ε ;
IterateStat ::= ε ;
DupX1Stat ::= ε ;
Boolean ::= "true" | "false" ;
LastExp ::= ε ;
SwapStat ::= ε ;
PopStat ::= ε ;
FindMEStat ::= ε ;
OclUndefinedExp ::= ε ;
PushFStat ::= ε ;
--------------------metamodels::ACME.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::ADELFE.bgf--------------------
AIP ::= ε ;
--------------------metamodels::ASM.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
AccessUpdateType ::= (access::ε) | (update::ε) ;
AsmType ::= (function::ε) | (subasm::ε) ;
String ::= string() ;
UndefConstant ::= ε ;
--------------------metamodels::ATL.bgf--------------------
Integer ::= integer() ;
StringType ::= ε ;
Boolean ::= "true" | "false" ;
RealType ::= ε ;
IntegerType ::= ε ;
BooleanType ::= ε ;
String ::= string() ;
--------------------metamodels::AWKPrograms.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::Agate.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
HierarchicalRelation ::= ε ;
String ::= string() ;
--------------------metamodels::Amble.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::AntScripts.bgf--------------------
String ::= string() ;
--------------------metamodels::AnyLogic.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::Architectural_Description.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
ModelElement ::= ε ;
String ::= string() ;
--------------------metamodels::AsmL.bgf--------------------
Integer ::= integer() ;
NullConstant ::= ε ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::Automaton.bgf--------------------
Integer ::= integer() ;
String ::= string() ;
--------------------metamodels::BMM.bgf--------------------
Integer ::= integer() ;
Resource ::= ε ;
Regulation ::= ε ;
Boolean ::= "true" | "false" ;
Vision ::= ε ;
String ::= string() ;
--------------------metamodels::BPEL.bgf--------------------
XSDVariety ::= (union::ε) | (list::ε) | (atomic::ε) ;
XSDSubstitutionGroupExclusions ::= (restriction::ε) | (extension::ε) ;
XSDSimpleFinal ::= (list::ε) | (restriction::ε) | (all::ε) | (union::ε) ;
XSDXPathVariety ::= (field::ε) | (selector::ε) ;
XSDDisallowedSubstitutions ::= (extension::ε) | (substitution::ε) | (all::ε) | (restriction::ε) ;
XSDAttributeUseCategory ::= (prohibited::ε) | (optional::ε) | (required::ε) ;
XSDProhibitedSubstitutions ::= (extension::ε) | (restriction::ε) | (all::ε) ;
XSDComplexFinal ::= (all::ε) | (restriction::ε) | (extension::ε) ;
CorrelationPattern ::= (outin::ε) | (in::ε) | (out::ε) ;
XSDNamespaceConstraintCategory ::= (set::ε) | (not::ε) | (any::ε) ;
XSDForm ::= (unqualified::ε) | (qualified::ε) ;
XSDDiagnosticSeverity ::= (fatal::ε) | (warning::ε) | (error::ε) | (information::ε) ;
EndpointReferenceRole ::= (partnerRole::ε) | (myRole::ε) ;
XSDCompositor ::= (all::ε) | (choice::ε) | (sequence::ε) ;
XSDContentTypeCategory ::= (elementOnly::ε) | (mixed::ε) | (simple::ε) | (empty::ε) ;
XSDWhiteSpace ::= (replace::ε) | (collapse::ε) | (preserve::ε) ;
XSDConstraint ::= (fixed::ε) | (default::ε) ;
XSDCardinality ::= (countablyInfinite::ε) | (finite::ε) ;
EObject ::= ε ;
XSDOrdered ::= (total::ε) | (partial::ε) ;
XSDIdentityConstraintCategory ::= (keyref::ε) | (unique::ε) | (key::ε) ;
XSDDerivationMethod ::= (extension::ε) | (restriction::ε) ;
XSDProcessContents ::= (skip::ε) | (lax::ε) | (strict::ε) ;
--------------------metamodels::BPMN.bgf--------------------
Integer ::= integer() ;
DirectionType ::= (Both::ε) | (From::ε) | (To::ε) | (None::ε) ;
ActivityType ::= (SubProcess::ε) | (EventEndMultiple::ε) | (EventEndMessage::ε) | (EventIntermediateMessage::ε) | (EventStartMultiple::ε) | (EventIntermediateMultiple::ε) | (GatewayParallel::ε) | (EventStartTimer::ε) | (EventStartEmpty::ε) | (EventIntermediateCancel::ε) | (EventEndError::ε) | (EventStartRule::ε) | (EventEndTerminate::ε) | (EventStartLink::ε) | (EventIntermediateLink::ε) | (EventEndCancel::ε) | (EventEndLink::ε) | (EventIntermediateEmpty::ε) | (EventIntermediateCompensation::ε) | (Task::ε) | (GatewayDataBasedExclusive::ε) | (GatewayComplex::ε) | (EventEndEmpty::ε) | (EventIntermediateError::ε) | (EventIntermediateTimer::ε) | (EventEndCompensation::ε) | (EventStartMessage::ε) | (GatewayDataBasedInclusive::ε) | (GatewayEventBasedExclusive::ε) | (EventIntermediateRule::ε) ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::Book.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::Bossa.bgf--------------------
Integer ::= integer() ;
SatateName_MoveExpr ::= ε ;
Process_Storage ::= ε ;
Select_Expression ::= ε ;
Select_MoveExpr ::= ε ;
True_Expression ::= ε ;
Boolean ::= "true" | "false" ;
Fifo_QueueType ::= ε ;
BreakStmt ::= ε ;
False_Expression ::= ε ;
Normal_QueueType ::= ε ;
SRCOnSched_Expression ::= ε ;
Lifo_QueueType ::= ε ;
String ::= string() ;
--------------------metamodels::BusinessEntityModel.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::BusinessProcessModel.bgf--------------------
BusinessProcess ::= ε ;
Exception ::= ε ;
Integer ::= integer() ;
SendCommunication ::= ε ;
Clock ::= ε ;
Decision ::= ε ;
ControlFlow ::= ε ;
Boolean ::= "true" | "false" ;
DataFlow ::= ε ;
ReceiveCommunication ::= ε ;
String ::= string() ;
--------------------metamodels::CADM.bgf--------------------
String ::= string() ;
--------------------metamodels::CDE.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
ICdeMember ::= ε ;
ICdeComponent ::= ε ;
String ::= string() ;
--------------------metamodels::CFG.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::COBOL.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
COBOLInitialValueKind ::= (civk_string_value::ε) | (civk_low_value::ε) | (civk_high_value::ε) | (civk_zero_value::ε) | (civk_quotes::ε) | (civk_null::ε) | (civk_all_literal::ε) ;
COBOLUsageValue ::= (cuv_binary::ε) | (cuv_dbcs::ε) | (cuv_double::ε) | (cuv_display::ε) | (cuv_float::ε) | (cuv_index::ε) | (cuv_objectReference::ε) | (cuv_packedDecimal::ε) | (cuv_pointer::ε) | (cuv_procedurePointer::ε) ;
String ::= string() ;
--------------------metamodels::CORBAComponent.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
ValueDef ::= ε ;
String ::= string() ;
--------------------metamodels::CPL.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::CPR.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::CSM.bgf--------------------
Integer ::= integer() ;
Component ::= ε ;
Boolean ::= "true" | "false" ;
Message ::= ε ;
String ::= string() ;
--------------------metamodels::CWMCore.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
VisibilityKind ::= (vk_public_vis::ε) | (vk_private_vis::ε) | (vk_protected_vis::ε) ;
String ::= string() ;
--------------------metamodels::CWMRelationalData.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::Class.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
DataType ::= ε ;
String ::= string() ;
--------------------metamodels::ChocoModel.bgf--------------------
Integer ::= integer() ;
OpConstraint ::= (eq::ε) | (and2::ε) | (or2::ε) | (gt::ε) | (ge::ε) | (lt::ε) | (le::ε) | (plus::ε) ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::ClassicModels.bgf--------------------
Integer ::= integer() ;
String ::= string() ;
--------------------metamodels::Cocus.owl.bgf--------------------
Integer ::= integer() ;
Description ::= ε ;
Group_Email ::= ε ;
Preference ::= ε ;
SubjectArea ::= ε ;
Assistance ::= ε ;
Acceptance ::= ε ;
String ::= string() ;
Detail ::= ε ;
Misc ::= ε ;
Rejection ::= ε ;
Review_Form_Setup ::= ε ;
Boolean ::= "true" | "false" ;
Preview ::= ε ;
Notification_Email ::= ε ;
Feature_Request ::= ε ;
Rejection_Email ::= ε ;
Inforamtion ::= ε ;
--------------------metamodels::DSL.bgf--------------------
Integer ::= integer() ;
SimpleType ::= ε ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::CompanyStructure.bgf--------------------
Integer ::= integer() ;
Employee ::= ε ;
Boolean ::= "true" | "false" ;
CashRegister ::= ε ;
StoreBackOffice ::= ε ;
String ::= string() ;
CorporateHQBackOffice ::= ε ;
--------------------metamodels::ComponentUML.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::Conference.owl.bgf--------------------
Integer ::= integer() ;
Contribution_co-author ::= ε ;
Description ::= ε ;
Group_Email ::= ε ;
Invited_speaker ::= ε ;
Preference ::= ε ;
SubjectArea ::= ε ;
Assistance ::= ε ;
Acceptance ::= ε ;
Organization ::= ε ;
String ::= string() ;
Detail ::= ε ;
Conference_fees ::= ε ;
Organizer ::= ε ;
Misc ::= ε ;
Early_paid_applicant ::= ε ;
Rejection ::= ε ;
Review_Form_Setup ::= ε ;
Boolean ::= "true" | "false" ;
Late_paid_applicant ::= ε ;
Passive_conference_participant ::= ε ;
Preview ::= ε ;
Notification_Email ::= ε ;
EEnum ::= (high::ε) | (medium::ε) | (low::ε) | (very high::ε) | (male::ε) | (female::ε) ;
Camera_ready_contribution ::= ε ;
Feature_Request ::= ε ;
Rejection_Email ::= ε ;
Inforamtion ::= ε ;
Contribution_1th-author ::= ε ;
--------------------metamodels::Contact.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::ControllerUML.bgf--------------------
Integer ::= integer() ;
StateMachineAction ::= ε ;
Event ::= ε ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::Cristal.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::DSLModel.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::DSLtools.bgf--------------------
Integer ::= integer() ;
SimpleType ::= ε ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::DTD.bgf--------------------
Boolean ::= "true" | "false" ;
OtherAttributeTypeEnum ::= (cdata::ε) | (id::ε) | (idref::ε) | (entityType::ε) | (entities::ε) | (nmtoken::ε) | (nmtakens::ε) ;
Occurence ::= (zeroOrOne::ε) | (zeroOrMore::ε) | (oneOrMore::ε) | (one::ε) ;
String ::= string() ;
AnyElement ::= ε ;
--------------------metamodels::DTMP.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::DXF.bgf--------------------
Integer ::= integer() ;
String ::= string() ;
--------------------metamodels::DeploymentReport.bgf--------------------
Integer ::= integer() ;
ProcessorArchitectures ::= (x86::ε) | (ia64::ε) | (amd64::ε) | (wow64::ε) | (msil::ε) | (shx::ε) | (arm::ε) | (data::ε) ;
Boolean ::= "true" | "false" ;
Platform ::= (x86::ε) | (ia64::ε) | (amd64::ε) | (wow64::ε) | (msil::ε) | (shx::ε) | (arm::ε) | (data::ε) | (*::ε) | (neutral::ε) ;
String ::= string() ;
SettingState ::= (Set::ε) | (NotSet::ε) | (Error::ε) ;
--------------------metamodels::DiagramInterchange.bgf--------------------
Integer ::= integer() ;
CoreElement ::= ε ;
Boolean ::= "true" | "false" ;
ElementsElement ::= ε ;
String ::= string() ;
--------------------metamodels::DoDAF-OV5.bgf--------------------
String ::= string() ;
--------------------metamodels::DoDAF-SV4.bgf--------------------
String ::= string() ;
--------------------metamodels::DoDAF-SV5.bgf--------------------
SupportStatusCode ::= (red::ε) | (yellow::ε) | (green::ε) ;
String ::= string() ;
--------------------metamodels::DoDAF.bgf--------------------
Integer ::= integer() ;
ServiceBroker ::= ε ;
Constraint ::= ε ;
Data ::= ε ;
Material ::= ε ;
QualityRequirement ::= ε ;
ServiceRegistry ::= ε ;
String ::= string() ;
ServiceLocator ::= ε ;
--------------------metamodels::DotNET_SystemReflection.bgf--------------------
MemberTypes ::= (Constructor::ε) | (Event::ε) | (Field::ε) | (Method::ε) | (Property::ε) | (TypeInfo::ε) | (Custom::ε) | (NestedType::ε) | (All::ε) ;
Integer ::= integer() ;
PropertyAttributes ::= (NotSupported::ε) | (Optional::ε) | (Read::ε) | (Required::ε) | (Write::ε) ;
GenericParameterAttributes ::= (HasElementType::ε) | (Abstract::ε) | (AnsiClass::ε) | (AutoClass::ε) | (AutoLayout::ε) | (ByRef::ε) | (Class::ε) | (COMObject::ε) | (Contextful::ε) | (Enum::ε) | (ExplicitLayout::ε) | (Import::ε) | (Interface::ε) | (LayoutSequential::ε) | (MarshalByRef::ε) | (NestedAssembly::ε) | (NestedFamADNAssem::ε) | (NestedFamily::ε) | (NestedFamORAssem::ε) | (NestedPrivate::ε) | (NestedPublic::ε) | (NotPublic::ε) | (Pointer::ε) | (Primitive::ε) | (Public::ε) | (Sealed::ε) | (Serializable::ε) | (SpecialName::ε) | (UnicodeClass::ε) | (ValueType::ε) ;
MethodAttributes ::= (Abstract::ε) | (Assembly::ε) | (ChekedAccessOnOverride::ε) | (FamADNAssem::ε) | (Family::ε) | (FamORAssem::ε) | (Final::ε) | (HasSecurity::ε) | (HideBySig::ε) | (MemberAccessMask::ε) | (NewSlot::ε) | (PInvokeImpl::ε) | (Private::ε) | (PrivateScope::ε) | (Public::ε) | (RequiredSecObject::ε) | (ReservedMask::ε) | (ReuseSlot::ε) | (RTSpecialName::ε) | (SpecialName::ε) | (Static::ε) | (UnmanagedExport::ε) | (Virtual::ε) | (VtableLayoutMask::ε) ;
Boolean ::= "true" | "false" ;
TypeAttributes ::= (Abstract::ε) | (AnsiClass::ε) | (AutoClass::ε) | (AutoLayout::ε) | (BeforFieldInit::ε) | (Class::ε) | (ClassSemanticsMask::ε) | (ExplicitLayout::ε) | (HasSecutity::ε) | (Import::ε) | (Interface::ε) | (LayoutMask::ε) | (NestedAssembly::ε) | (NestedFamADNAssem::ε) | (NestedFamily::ε) | (NestedFamORAssem::ε) | (NestedPrivate::ε) | (NestedPublic::ε) | (NotPublic::ε) | (Public::ε) | (ReservedMask::ε) | (RTSpecialName::ε) | (Sealed::ε) | (SequentialLayout::ε) | (Serializable::ε) | (SpecialName::ε) | (StringFormatMask::ε) | (UnicodeClass::ε) | (VisibilityMask::ε) ;
FieldAttributes ::= (FieldAccessMask::ε) | (PrivateScope::ε) | (Private::ε) | (Assembly::ε) | (Family::ε) | (FamANDAssem::ε) | (FamORAssem::ε) | (Public::ε) | (Shared::ε) | (InitOnly::ε) | (Literal::ε) | (NotSerialized::ε) | (SpecialName::ε) | (PinvokeImpl::ε) | (ReservedMask::ε) | (RTSpecialName::ε) | (HasFieldMarshal::ε) | (HasDefault::ε) | (HasFieldRVA::ε) | (Static::ε) ;
EventAttributes ::= (None::ε) | (ReservedMask::ε) | (RTSpecialName::ε) | (SpecialName::ε) ;
String ::= string() ;
ParameterAttributes ::= (HasDefault::ε) | (HasDefaultMArshal::ε) | (In::ε) | (Lcid::ε) | (None::ε) | (Optional::ε) | (Out::ε) | (Reserved3::ε) | (Reserved4::ε) | (ReservedMask::ε) | (RetVal::ε) ;
--------------------metamodels::EAI.bgf--------------------
Integer ::= integer() ;
String ::= string() ;
--------------------metamodels::EG.bgf--------------------
Integer ::= integer() ;
Split ::= ε ;
Join ::= ε ;
Boolean ::= "true" | "false" ;
Release ::= ε ;
Acquire ::= ε ;
Loop ::= ε ;
Fork ::= ε ;
Branch ::= ε ;
String ::= string() ;
--------------------metamodels::EQN.bgf--------------------
Integer ::= integer() ;
Allocate ::= ε ;
Source ::= ε ;
Split ::= ε ;
Join ::= ε ;
Boolean ::= "true" | "false" ;
Release ::= ε ;
Sink ::= ε ;
Fork ::= ε ;
String ::= string() ;
--------------------metamodels::EXPRESS.bgf--------------------
Express_metamodel::Instances::NumberValue ::= ε ;
Express_metamodel::Algorithms::ActualLISTType ::= ε ;
Express_metamodel::Algorithms::VARParameter ::= ε ;
Express_metamodel::Algorithms::Procedure ::= ε ;
Express_metamodel::java::lang::void ::= ε ;
Express_metamodel::Rules::ONEOFConstraint ::= ε ;
Express_metamodel::Instances::StringValue ::= ε ;
Express_metamodel::Algorithms::ActualSETType ::= ε ;
Express_metamodel::Core::NumericType ::= ε ;
Express_metamodel::Instances::BooleanValue ::= ε ;
Express_metamodel::Instances::GenericAggregate ::= ε ;
Express_metamodel::Instances::LogicalValue ::= ε ;
String ::= string() ;
Express_metamodel::Core::BAGType ::= ε ;
Express_metamodel::Rules::TOTAL_OVERConstraint ::= ε ;
Express_metamodel::Core::GeneralLISTType ::= ε ;
Express_metamodel::Algorithms::ActualStructure ::= ε ;
Express_metamodel::Algorithms::ActualDataType ::= ε ;
Express_metamodel::java::lang::int ::= ε ;
Express_metamodel::Core::GeneralSETType ::= ε ;
Express_metamodel::Expressions::SELFRef ::= ε ;
Integer ::= integer() ;
Express_metamodel::Instances::IntegerValue ::= ε ;
Express_metamodel::Algorithms::ActualBAGType ::= ε ;
Express_metamodel::Instances::Indeterminate ::= ε ;
Express_metamodel::Rules::ANDConstraint ::= ε ;
Express_metamodel::Statements::NullStatement ::= ε ;
Express_metamodel::Core::GeneralBAGType ::= ε ;
Express_metamodel::Core::LISTType ::= ε ;
Express_metamodel::Instances::RealValue ::= ε ;
Boolean ::= "true" | "false" ;
Express_metamodel::Core::SETType ::= ε ;
Express_metamodel::Instances::BinaryValue ::= ε ;
Express_metamodel::Core::LogicType ::= ε ;
Express_metamodel::Instances::MultiLeafInstance ::= ε ;
--------------------metamodels::EXPRESSb.bgf--------------------
GeneralBAGType ::= ε ;
LISTType ::= ε ;
FunctionResult ::= ε ;
ANDConstraint ::= ε ;
IntegerValue ::= ε ;
Procedure ::= ε ;
String ::= string() ;
ActualSETType ::= ε ;
SELFRef ::= ε ;
ActualLISTType ::= ε ;
ActualStructure ::= ε ;
VARParameter ::= ε ;
Integer ::= integer() ;
SETType ::= ε ;
Indeterminate ::= ε ;
ONEOFConstraint ::= ε ;
LogicType ::= ε ;
GeneralSETType ::= ε ;
ActualBAGType ::= ε ;
RealValue ::= ε ;
ActualDataType ::= ε ;
BinaryValue ::= ε ;
SkipStatement ::= ε ;
EscapeStatement ::= ε ;
MultiLeafInstance ::= ε ;
TOTAL_OVERConstraint ::= ε ;
BooleanValue ::= ε ;
NumberValue ::= ε ;
GenericAggregate ::= ε ;
LogicalValue ::= ε ;
Boolean ::= "true" | "false" ;
NullStatement ::= ε ;
NumericType ::= ε ;
QueryVariable ::= ε ;
BAGType ::= ε ;
StringValue ::= ε ;
GeneralLISTType ::= ε ;
--------------------metamodels::EclipseLaunchConfigurations.bgf--------------------
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::EclipsePlugIn.bgf--------------------
Integer ::= integer() ;
String ::= string() ;
--------------------metamodels::Family.bgf--------------------
Integer ::= integer() ;
String ::= string() ;
--------------------metamodels::FeatureDiagrams.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::GAIA.bgf--------------------
Activity ::= ε ;
LivenessRule ::= ε ;
SafetyRule ::= ε ;
LivenessProperty ::= ε ;
SafetyProperty ::= ε ;
String ::= string() ;
--------------------metamodels::FiniteStateMachine.bgf--------------------
Integer ::= integer() ;
String ::= string() ;
--------------------metamodels::FlatSignalFlow.bgf--------------------
Integer ::= integer() ;
String ::= string() ;
--------------------metamodels::GUI.bgf--------------------
Integer ::= integer() ;
Layout ::= (default::ε) | (horizontal::ε) | (vertical::ε) ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::GWPNV4.bgf--------------------
Integer ::= integer() ;
PTArc ::= dst::α src::α ;
Net ::= (place::α)+ (transition::α)+ ;
Place ::= net::α (out::α)+ (in::α)+ ;
TPArc ::= src::α dst::α ;
Transition ::= net::α (in::α)+ (out::α)+ ;
--------------------metamodels::GWPNV5.bgf--------------------
Integer ::= integer() ;
PTArc ::= dst::α src::α ;
Net ::= (place::α)+ (transition::α)+ ;
Token ::= place::α ;
Place ::= net::α (out::α)+ (in::α)+ (token::α)+ ;
TPArc ::= src::α dst::α ;
Transition ::= net::α (in::α)+ (out::α)+ ;
--------------------metamodels::Gantt.bgf--------------------
Integer ::= integer() ;
Vacation ::= ε ;
Description ::= ε ;
Boolean ::= "true" | "false" ;
Previous ::= ε ;
String ::= string() ;
--------------------metamodels::GenericEditor.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::GenericOutline.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::GeoTrans.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::Grafcet.bgf--------------------
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::HAL.bgf--------------------
FormatWebEnum ::= (XML::ε) | (HTML::ε) | (HTM::ε) ;
Integer ::= integer() ;
FormatEnum ::= (PDF::ε) | (TEX::ε) | (DOC::ε) | (RTF::ε) | (TXT::ε) | (PS::ε) | (ANNEX::ε) ;
Boolean ::= "true" | "false" ;
DateVisibleEnum ::= (15J::ε) | (1M::ε) | (3M::ε) | (1A::ε) | (2A::ε) | (JAMAIS::ε) ;
Server ::= ε ;
String ::= string() ;
--------------------metamodels::HPROF.bgf--------------------
Integer ::= integer() ;
Day ::= (Monday::ε) | (Tuesday::ε) | (Wednesday::ε) | (Thursday::ε) | (Friday::ε) | (Saturday::ε) | (Sunday::ε) ;
Boolean ::= "true" | "false" ;
String ::= string() ;
Month ::= (January::ε) | (February::ε) | (March::ε) | (April::ε) | (May::ε) | (June::ε) | (July::ε) | (August::ε) | (September::ε) | (October::ε) | (November::ε) | (December::ε) ;
--------------------metamodels::HierarchicalSignalFlow.bgf--------------------
Integer ::= integer() ;
String ::= string() ;
--------------------metamodels::HierarchicalStateMachine.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::HybridAutomata.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::IEEE1471ConceptualModel.bgf--------------------
String ::= string() ;
--------------------metamodels::IRL.bgf--------------------
Integer ::= integer() ;
StringType ::= ε ;
SimpleRuleVariable ::= ε ;
OperatorCallExpression ::= ε ;
Boolean ::= "true" | "false" ;
RealType ::= ε ;
IntegerType ::= ε ;
PropertyDeclaration ::= ε ;
ClassType ::= ε ;
BooleanType ::= ε ;
String ::= string() ;
--------------------metamodels::IEEE1471ViewpointM2.bgf--------------------
ModellingRule ::= ε ;
Language ::= ε ;
Pattern ::= ε ;
ViewpointImport ::= ε ;
Concern ::= ε ;
--------------------metamodels::IMSTransactionMessage.bgf--------------------
TDLangElement ::= ε ;
Integer ::= integer() ;
OIMAPrefixFormats ::= (opp_one::ε) | (opp_two::ε) ;
StateData ::= ε ;
SecurityData ::= ε ;
VariableLengthField ::= ε ;
Boolean ::= "true" | "false" ;
ControlData ::= ε ;
TwoByteField ::= ε ;
UserData ::= ε ;
String ::= string() ;
--------------------metamodels::M.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
DefaultValueExpression ::= ε ;
String ::= string() ;
--------------------metamodels::Jess.bgf--------------------
ExitExp ::= ε ;
Integer ::= integer() ;
EngineExp ::= ε ;
Boolean ::= "true" | "false" ;
Advice ::= (before::ε) | (after::ε) ;
String ::= string() ;
--------------------metamodels::KDM.bgf--------------------
TypeUnit ::= ε ;
TrueFlow ::= ε ;
MarshalledResource ::= ε ;
LockResource ::= ε ;
Project ::= ε ;
Catalog ::= ε ;
ChoiceContent ::= ε ;
DataResource ::= ε ;
IntegerType ::= ε ;
PointerType ::= ε ;
Transition ::= ε ;
TemplateType ::= ε ;
ContentReference ::= ε ;
State ::= ε ;
ResourceDescription ::= ε ;
SymbolicLink ::= ε ;
Supplier ::= ε ;
PlatformElement ::= ε ;
RuntimeResource ::= ε ;
ContentElement ::= ε ;
BooleanType ::= ε ;
MacroKind ::= (external::ε) | (unknown::ε) | (option::ε) | (undefined::ε) | (regular::ε) ;
Component ::= ε ;
OctetstringType ::= ε ;
ExtendedDataElement ::= ε ;
ItemUnit ::= ε ;
SoftwareSystem ::= ε ;
NamingResource ::= ε ;
Configuration ::= ε ;
IndexUnit ::= ε ;
Report ::= ε ;
ScenarioUnit ::= ε ;
ScaledType ::= ε ;
ExceptionUnit ::= ε ;
Value ::= ε ;
FalseFlow ::= ε ;
CharType ::= ε ;
Subsystem ::= ε ;
Process ::= ε ;
BuildComponent ::= ε ;
StreamResource ::= ε ;
BuildElement ::= ε ;
Flow ::= ε ;
InitialState ::= ε ;
RecordType ::= ε ;
ExternalActor ::= ε ;
FileResource ::= ε ;
UIElement ::= ε ;
RelationalTable ::= ε ;
CompilationUnit ::= ε ;
TimeType ::= ε ;
BitType ::= ε ;
UIField ::= ε ;
ConceptualElement ::= ε ;
ContentAttribute ::= ε ;
BuildProduct ::= ε ;
RuleUnit ::= ε ;
CatchUnit ::= ε ;
TryUnit ::= ε ;
BinaryFile ::= ε ;
OnExit ::= ε ;
ParameterKind ::= (byReference::ε) | (unknown::ε) | (exception::ε) | (return::ε) | (byValue::ε) | (catchall::ε) | (byName::ε) | (throws::ε) | (variadic::ε) ;
Image ::= ε ;
SeqContent ::= ε ;
BuildStep ::= ε ;
ArchitectureView ::= ε ;
AllContent ::= ε ;
Tool ::= ε ;
SynonymType ::= ε ;
MethodKind ::= (operator::ε) | (destructor::ε) | (method::ε) | (abstract::ε) | (virtual::ε) | (unknown::ε) | (constructor::ε) ;
ReferenceKey ::= ε ;
OnEntry ::= ε ;
Index ::= ε ;
StorableKind ::= (global::ε) | (external::ε) | (static::ε) | (unknown::ε) | (register::ε) | (local::ε) ;
GuardedFlow ::= ε ;
Layer ::= ε ;
String ::= string() ;
FactUnit ::= ε ;
TermUnit ::= ε ;
CodeElement ::= ε ;
TemplateParameter ::= ε ;
UniqueKey ::= ε ;
OrdinalType ::= ε ;
Thread ::= ε ;
StructureElement ::= ε ;
SharedUnit ::= ε ;
DateType ::= ε ;
IncludeDirective ::= ε ;
ExecutionResource ::= ε ;
Package ::= ε ;
EventElement ::= ε ;
PrimitiveType ::= ε ;
InventoryElement ::= ε ;
MixedContent ::= ε ;
Integer ::= integer() ;
LanguageUnit ::= ε ;
ChoiceType ::= ε ;
Library ::= ε ;
GroupContent ::= ε ;
BitstringType ::= ε ;
BehaviorUnit ::= ε ;
FloatType ::= ε ;
CodeAssembly ::= ε ;
MessagingResource ::= ε ;
BlockUnit ::= ε ;
UIDisplay ::= ε ;
VoidType ::= ε ;
RecordFile ::= ε ;
Screen ::= ε ;
RelationalView ::= ε ;
CallableKind ::= (external::ε) | (regular::ε) | (stored::ε) | (operator::ε) | (unknown::ε) ;
StringType ::= ε ;
DecimalType ::= ε ;
DataSegment ::= ε ;
ConditionalDirective ::= ε ;
OctetType ::= ε ;
Boolean ::= "true" | "false" ;
ExportKind ::= (private::ε) | (unknown::ε) | (public::ε) | (protected::ε) | (final::ε) ;
FinallyUnit ::= ε ;
ExecutableFile ::= ε ;
DataManager ::= ε ;
MacroDirective ::= ε ;
--------------------metamodels::KDMSimplified.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::KM3.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
DataType ::= ε ;
String ::= string() ;
--------------------metamodels::Klaper.bgf--------------------
Integer ::= integer() ;
Join ::= ε ;
Boolean ::= "true" | "false" ;
Fork ::= ε ;
String ::= string() ;
--------------------metamodels::LQN.bgf--------------------
TaskType ::= (a_reference::ε) | (non_reference::ε) ;
SchedulingType ::= (FCFS::ε) | (preemptive_Priority::ε) | (head_of_line::ε) | (random::ε) ;
Integer ::= integer() ;
CallType ::= (synchronous::ε) | (asynchronous::ε) | (forwording::ε) ;
Boolean ::= "true" | "false" ;
PhaseType ::= (stochastic::ε) | (deterministic::ε) ;
LinkType ::= (and_Fork::ε) | (and_join::ε) | (basic::ε) | (or_Fork::ε) | (or_join::ε) ;
String ::= string() ;
--------------------metamodels::LaTeX.bgf--------------------
Integer ::= integer() ;
String ::= string() ;
--------------------metamodels::MAS.bgf--------------------
LivenessRule ::= ε ;
SafetyRule ::= ε ;
LivenessProperty ::= ε ;
SafetyProperty ::= ε ;
Requirement ::= ε ;
Non Functionnal Requirement ::= ε ;
String ::= string() ;
Scenario ::= ε ;
--------------------metamodels::Marte.bgf--------------------
LaxityKind ::= (hard::ε) | (soft::ε) | (other::ε) ;
TimeStandardKind ::= (TAI::ε) | (UT0::ε) | (UT1::ε) | (UTC::ε) | (Local::ε) | (TT::ε) | (TBD::ε) | (TCG::ε) | (TCB::ε) | (Sidereal::ε) | (GPS::ε) ;
HwASIC ::= ε ;
LogicalTimeUnit ::= tick::ε ;
InterruptKind ::= (HardwareInterruption::ε) | (ProcessorDetectedException::ε) | (ProgrammedException::ε) | (Undef::ε) | (Other::ε) ;
VariableDirectionKind ::= (in::ε) | (out::ε) | (inout::ε) ;
AggregationKind ::= (none::ε) | (shared::ε) | (composite::ε) ;
SynchronizationKind ::= (synchronous::ε) | (asynchronous::ε) | (delayedSynchronous::ε) | (rendezVous::ε) | (other::ε) ;
SourceKind ::= (est::ε) | (meas::ε) | (calc::ε) | (req::ε) ;
SynchronizationResource ::= ε ;
NotificationResourceKind ::= (Event::ε) | (Barrier::ε) | (Undef::ε) | (Other::ε) ;
ClockConstraint ::= ε ;
TUK ::= ε ;
SwSynchronizationResource ::= ε ;
CallConcurrencyKind ::= (sequential::ε) | (guarded::ε) | (concurrent::ε) ;
Release ::= ε ;
VisibilityKind ::= (public::ε) | (private::ε) | (protected::ε) | (package::ε) ;
MARTE_DataTypes_Interval ::= ε ;
HwDevice ::= ε ;
ConnectorKind ::= (assembly::ε) | (delegation::ε) ;
LengthUnitKind ::= (m::ε) | (cm::ε) | (mm::ε) ;
SchedPolicyKind ::= (EarliestDeadlineFirst::ε) | (FIFO::ε) | (FixedPriority::ε) | (LeastLaxityFirst::ε) | (RoundRobin::ε) | (TimeTableDriven::ε) | (Undef::ε) | (Other::ε) ;
TransmModeKind ::= (simplex::ε) | (halfDuplex::ε) | (fullDuplex::ε) ;
MutualExclusionResourceKind ::= (BooleanSemaphore::ε) | (CountSemaphore::ε) | (Mutex::ε) | (Undef::ε) | (Other::ε) ;
IdealClock ::= ε ;
TimeLibrary_TimeUnitKind ::= (s::ε) | (ms::ε) | (us::ε) | (ns::ε) | (min::ε) | (hrs::ε) | (dys::ε) ;
ConditionType ::= (Temperature::ε) | (Humidity::ε) | (Altitude::ε) | (Vibration::ε) | (Shock::ε) | (Other::ε) | (Undef::ε) ;
WritePolicy ::= (WriteBack::ε) | (WriteThrough::ε) | (Other::ε) | (Undef::ε) ;
HwBranchPredictor ::= ε ;
HwI_O ::= ε ;
MessageResourceKind ::= (MessageQueue::ε) | (Pipe::ε) | (Blackboard::ε) | (Undef::ε) | (Other::ε) ;
PaRequestedStep ::= ε ;
SecondaryScheduler ::= ε ;
AllocationNature ::= (spatialDistribution::ε) | (timeScheduling::ε) ;
DataTxRateUnitKind ::= (b_per_s::ε) | (Kb_per_s::ε) | (Mb_per_s::ε) ;
TimeUnitKind ::= (s::ε) | (tick::ε) | (ms::ε) | (us::ε) | (min::ε) | (hrs::ε) | (dys::ε) ;
PoolMgtPolicyKind ::= (infiniteWait::ε) | (timedWait::ε) | (dynamic::ε) | (exception::ε) | (other::ε) ;
StatisticalQualifierKind ::= (max::ε) | (min::ε) | (mean::ε) | (range::ε) | (percent::ε) | (distrib::ε) | (determ::ε) | (other::ε) ;
DataSizeUnitKind ::= (bits::ε) | (Bytes::ε) | (KB::ε) | (MB::ε) | (GB::ε) ;
ISA_Type ::= (RISC::ε) | (CISC::ε) | (VLIW::ε) | (SIMD::ε) | (Other::ε) | (Undef::ε) ;
ComputingResource ::= ε ;
NotificationKind ::= (Memorized::ε) | (Bounded::ε) | (Memoryless::ε) | (Undef::ε) | (Other::ε) ;
PowerUnitKind ::= (W::ε) | (mW::ε) | (KW::ε) ;
CacheType ::= (Data::ε) | (Instruction::ε) | (Unified::ε) | (Other::ε) | (Undef::ε) ;
DefaultLink ::= ε ;
Array ::= ε ;
BasicNFP_Types_DirectionKind ::= (incr::ε) | (decr::ε) ;
QueuePolicyKind ::= (FIFO::ε) | (LIFO::ε) | (Priority::ε) | (Undef::ε) | (Other::ε) ;
AllocationKind ::= (structural::ε) | (behavioral::ε) | (hybrid::ε) ;
String ::= string() ;
ConstraintKind ::= (required::ε) | (offered::ε) | (constraint::ε) ;
ParameterEffectKind ::= (create::ε) | (read::ε) | (update::ε) | (delete::ε) ;
EventKind ::= (start::ε) | (finish::ε) | (send::ε) | (receive::ε) | (consume::ε) ;
ExecutionKind ::= (deferred::ε) | (remoteImmediate::ε) | (localImmediate::ε) ;
ParameterDirectionKind ::= (in::ε) | (inout::ε) | (out::ε) | (return::ε) ;
ObjectNodeOrderingKind ::= (unordered::ε) | (ordered::ε) | (LIFO::ε) | (FIFO::ε) ;
TransitionKind ::= (internal::ε) | (local::ε) | (external::ε) ;
PaCommStep ::= ε ;
TimeNatureKind ::= (discrete::ε) | (dense::ε) ;
PseudostateKind ::= (initial::ε) | (deepHistory::ε) | (shallowHistory::ε) | (join::ε) | (fork::ε) | (junction::ε) | (choice::ε) | (entryPoint::ε) | (exitPoint::ε) | (terminate::ε) ;
ConcurrencyKind ::= (reader::ε) | (writer::ε) | (parallel::ε) ;
UtilityType ::= ε ;
MessageSort ::= (synchCall::ε) | (asynchCall::ε) | (asynchSignal::ε) | (createMessage::ε) | (deleteMessage::ε) | (reply::ε) ;
DeviceResource ::= ε ;
PLD_Class ::= (SymetricalArray::ε) | (RowBased::ε) | (SeaOfGates::ε) | (HierarchicalPLD::ε) | (Other::ε) | (Undef::ε) ;
ConcurrencyResource ::= ε ;
HwSupport ::= ε ;
Integer ::= integer() ;
ClockResource ::= ε ;
MessageKind ::= (complete::ε) | (lost::ε) | (found::ε) | (unknown::ε) ;
ProtectProtocolKind ::= (FIFO::ε) | (NoPreemption::ε) | (PriorityCeiling::ε) | (PriorityInheritance::ε) | (StackBased::ε) | (Undef::ε) | (Other::ε) ;
HwResourceService ::= ε ;
TimingResource ::= ε ;
HwCommunicationResource ::= ε ;
TimedObservation ::= ε ;
FrequencyUnitKind ::= (Hz::ε) | (KHz::ε) | (MHz::ε) | (GHz::ε) | (rpm::ε) ;
DirectionKind ::= (in::ε) | (out::ε) | (inout::ε) ;
PeriodicServerKind ::= (Sporadic::ε) | (Deferrable::ε) | (Undef::ε) | (Other::ε) ;
GaCommStep ::= ε ;
ComponentKind ::= (Card::ε) | (Channel::ε) | (Chip::ε) | (Port::ε) | (Unit::ε) | (Other::ε) | (Undef::ε) ;
OptimallityCriterionKind ::= (meetHardDeadlines::ε) | (minimizeMissedDeadlines::ε) | (minimizedMeanTardiness::ε) | (undef::ε) | (other::ε) ;
AccessPolicyKind ::= (Read::ε) | (Write::ε) | (ReadWrite::ε) | (Undef::ε) | (Other::ε) ;
TimeInterpretationKind ::= (duration::ε) | (instant::ε) ;
ROM_Type ::= (MaskedROM::ε) | (EPROM::ε) | (OTP_EPROM::ε) | (EEPROM::ε) | (Flash::ε) | (Other::ε) | (Undef::ε) ;
Boolean ::= "true" | "false" ;
BFeatureKind ::= (in::ε) | (out::ε) | (inout::ε) | (required::ε) | (provided::ε) | (reqpro::ε) ;
HwTimingResource ::= ε ;
ConcurrentAccessProtocolKind ::= (PIP::ε) | (PCP::ε) | (NoPreemption::ε) | (Undef::ε) | (Other::ε) ;
AreaUnitKind ::= (mm2::ε) | (um2::ε) ;
CompnentState ::= (Operating::ε) | (Storage::ε) | (Other::ε) | (Undef::ε) ;
PLD_Technology ::= (SRAM::ε) | (Antifuse::ε) | (Flash::ε) | (Other::ε) | (Undef::ε) ;
Repl_Policy ::= (LRU::ε) | (NFU::ε) | (FIFO::ε) | (Random::ε) | (Other::ε) | (Undef::ε) ;
EnergyUnitKind ::= (J::ε) | (KJ::ε) | (Wh::ε) | (KWh::ε) | (mWh::ε) ;
--------------------metamodels::METAH.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::MICRO.owl.bgf--------------------
start_date_of_camera-ready_submission ::= ε ;
Invited_Speaker ::= ε ;
Preference ::= ε ;
Welcome_address ::= ε ;
Refusing_manuscript ::= ε ;
Conference_hotel ::= ε ;
Coffee_break ::= ε ;
Rejection ::= ε ;
Renting ::= ε ;
Late_paid_applicant ::= ε ;
Nonauthor_registration_fee ::= ε ;
EEnum ::= (Compilers::ε) | (Microarchitecture::ε) | (Systems::ε) | (ForwardLookingIdea::ε) | (male::ε) | (female::ε) | (high::ε) | (medium::ε) | (low::ε) | (very high::ε) ;
classification ::= ε ;
Author_attendee_book_registration_fee ::= ε ;
AcceptRating ::= ε ;
IASTED_member ::= ε ;
ClosingTalk ::= ε ;
Workshop_Session ::= ε ;
Late-Registered_Participant ::= ε ;
Description ::= ε ;
Conference_Proceedings ::= ε ;
MealBreak ::= ε ;
Shuttle_bus ::= ε ;
Technical_commitee ::= ε ;
Conference_Hiker ::= ε ;
Departure ::= ε ;
Listener ::= ε ;
Industrial_Session ::= ε ;
Conference_fees ::= ε ;
Conference_state ::= ε ;
ComputerNetworksEnterpriseTopic ::= ε ;
Early_paid_applicant ::= ε ;
Passive_conference_participant ::= ε ;
Conference_airport ::= ε ;
Receiving_manuscript ::= ε ;
Senior_Reviewer_URL ::= ε ;
Excursion ::= ε ;
Presenter_city ::= ε ;
date_of_notification ::= ε ;
Departure_tax ::= ε ;
Early-Registered_Participant ::= ε ;
phase_of_conference ::= ε ;
Video_cassette_player ::= ε ;
Time_zone ::= ε ;
Single_hotel_room ::= ε ;
Hotel_presenter ::= ε ;
Contribution_co-author ::= ε ;
Session_chair ::= ε ;
Introduction_of_speaker ::= ε ;
ConferenceSession ::= ε ;
SubjectArea ::= ε ;
Nonmember_registration_fee ::= ε ;
ComputerNetworksMeasurementsTopic ::= ε ;
Coctail_reception ::= ε ;
Dinner_banquet ::= ε ;
Chair_URL ::= ε ;
Car ::= ε ;
Regular_Session ::= ε ;
start_date_of_conference ::= ε ;
Reception ::= ε ;
Full_day_tour ::= ε ;
LCD_projector ::= ε ;
Presenter_house ::= ε ;
Cd_proceening ::= ε ;
Preview ::= ε ;
Workshop ::= ε ;
Rejection_Email ::= ε ;
Presenter_university ::= ε ;
Student_registration_fee ::= ε ;
Poster_Session ::= ε ;
Tutorial_Chair ::= ε ;
Inforamtion ::= ε ;
Trip_day ::= ε ;
Hotel_registration_form ::= ε ;
Session_Chair ::= ε ;
Group_Email ::= ε ;
lower_tier_reviewing_process ::= ε ;
Regular_Program_Committee_member ::= ε ;
ComputerNetworksOpticalTopic ::= ε ;
end_date_of_conference ::= ε ;
Double_hotel_room ::= ε ;
AccpetIfRoomRating ::= ε ;
Sponsor_city ::= ε ;
Conference_city ::= ε ;
One_day_presenter ::= ε ;
Accepting_manuscript ::= ε ;
SC_Member ::= ε ;
Modelling ::= ε ;
Value_added_tax ::= ε ;
start_date_of_full_paper_submission ::= ε ;
OC_Chair ::= ε ;
Acceptance ::= ε ;
Credit_card ::= ε ;
Country ::= ε ;
start_date_of_abstract_submission ::= ε ;
end_date_of_camera-ready_submission ::= ε ;
CoffeeBreak ::= ε ;
Detail ::= ε ;
Final_manuscript ::= ε ;
Bank_transfer ::= ε ;
end_date_of_abstract_submission ::= ε ;
Worker_non_speaker ::= ε ;
Book_proceeding ::= ε ;
Registration_form ::= ε ;
Student_non_speaker ::= ε ;
Demo_Chair ::= ε ;
Review_Form_Setup ::= ε ;
Conference_Trip ::= ε ;
Camera_ready_contribution ::= ε ;
Contribution_1th-author ::= ε ;
ReviewForm ::= ε ;
Hotel_fee ::= ε ;
Sponsor_company_house ::= ε ;
PC_Chair ::= ε ;
Student_lecturer ::= ε ;
Assistance ::= ε ;
Conference_building ::= ε ;
NumericalReviewQuestion ::= ε ;
WeekRejectRating ::= ε ;
ComputerNetworksSecurityTopic ::= ε ;
PersonalPublicationHistory ::= ε ;
Notification_Email ::= ε ;
Trip ::= ε ;
Banquet ::= ε ;
Cheque ::= ε ;
Conference_Banquet ::= ε ;
Taxi ::= ε ;
rejection_notification_email ::= ε ;
RejectRating ::= ε ;
Computer ::= ε ;
Demo_Session ::= ε ;
Worker_lecturer ::= ε ;
end_date_of_full_paper_submission ::= ε ;
intensity ::= ε ;
String ::= string() ;
Currency ::= ε ;
TextualReviewQuestion ::= ε ;
acceptance_notification_email ::= ε ;
Author_attendee_cd_registration_fee ::= ε ;
ComputerNetworksManagementTopic ::= ε ;
Trip_city ::= ε ;
Contact_Person_URL ::= ε ;
Fee_for_extra_trip ::= ε ;
ComputerNetworksSwitchingTopic ::= ε ;
Conference_restaurant ::= ε ;
Integer ::= integer() ;
Speaker_lecture ::= ε ;
Technic_activity ::= ε ;
Invited_speaker ::= ε ;
Presenter_state ::= ε ;
Regular_Reviewer_URL ::= ε ;
ComputerNetworksSensorTopic ::= ε ;
institute ::= ε ;
IASTED_non_member ::= ε ;
One_conference_day ::= ε ;
Overhead_projector ::= ε ;
WelcomeTalk ::= ε ;
Workshop_Chair ::= ε ;
Sponsor_state ::= ε ;
Misc ::= ε ;
Author_information_form ::= ε ;
ComputerNetworksAapplicationsTopic ::= ε ;
Boolean ::= "true" | "false" ;
Initial_manuscipt ::= ε ;
FreeTimeBreak ::= ε ;
Feature_Request ::= ε ;
Van ::= ε ;
Simulating ::= ε ;
Memeber_registration_fee ::= ε ;
--------------------metamodels::MSOfficeExcel_SpreadsheetMLBasicDef.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::MSOfficeExcel_SpreadsheetMLPrintingSetup.bgf--------------------
Integer ::= integer() ;
CalculationWorkbookType ::= (cwt_automaticCalculation::ε) | (cwt_manualCalculation::ε) | (cwt_semiAutomaticCalculation::ε) ;
VisibleType ::= (vt_SheetVisible::ε) | (vt_SheetHidden::ε) | (vt_SheetVeryHidden::ε) ;
ExcelWorksheetTypeType ::= (ewt_Worksheet::ε) | (ewt_Chart::ε) | (ewt_Macro::ε) | (ewt_Dialog::ε) ;
OrientationType ::= (ot_Landscape::ε) | (ot_Portrait::ε) ;
Boolean ::= "true" | "false" ;
CommentsLayoutType ::= (clt_InPlace::ε) | (clt_PrintNone::ε) | (clt_SheetEnd::ε) ;
EnableSelectionType ::= (est_UnlockedCells::ε) | (est_NoSelection::ε) ;
DisplayDrawingObjectsType ::= (ddot_displayShapes::ε) | (ddot_placeHolders::ε) | (ddot_hideAll::ε) ;
String ::= string() ;
--------------------metamodels::MSOfficeExcel_SpreadsheetMLSimplified.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::MSOfficeExcel_SpreadsheetMLStyles.bgf--------------------
Integer ::= integer() ;
CalculationWorkbookType ::= (cwt_automaticCalculation::ε) | (cwt_manualCalculation::ε) | (cwt_semiAutomaticCalculation::ε) ;
HorizontalAlignementType ::= (hat_CenterAcrossSelection::ε) | (hat_Fill::ε) | (hat_Left::ε) | (hat_Right::ε) | (hat_Justify::ε) | (hat_Distributed::ε) | (hat_Center::ε) | (hat_Automatic::ε) | (hat_JustifyDistributed::ε) ;
ReadingOrderType ::= (rot_RightToLeft::ε) | (rot_LeftToRight::ε) | (rot_Context::ε) ;
CommentsLayoutType ::= (clt_InPlace::ε) | (clt_PrintNone::ε) | (clt_SheetEnd::ε) ;
LineStyleType ::= (lst_None::ε) | (lst_Continuous::ε) | (lst_Dash::ε) | (lst_Dot::ε) | (lst_DashDot::ε) | (lst_DashDotDot::ε) | (lst_SlantDashDot::ε) | (lst_Double::ε) ;
DisplayDrawingObjectsType ::= (ddot_displayShapes::ε) | (ddot_placeHolders::ε) | (ddot_hideAll::ε) ;
String ::= string() ;
ExcelNumberFormatType ::= (enft_General::ε) | (enft_General_Number::ε) | (enft_General_Date::ε) | (enft_Long_Date::ε) | (enft_Medium_Date::ε) | (enft_Short_Date::ε) | (enft_Long_Time::ε) | (enft_Medium_Time::ε) | (enft_Short_Time::ε) | (enft_Currency::ε) | (enft_Euro_Currency::ε) | (enft_Fixed::ε) | (enft_Standard::ε) | (enft_Percent::ε) | (enft_Scientific::ε) | (enft_Yes_No::ε) | (enft_True_False::ε) | (enft_On_Off::ε) ;
VerticalAlignementType ::= (vat_Top::ε) | (vat_Bottom::ε) | (vat_Justify::ε) | (vat_Distributed::ε) | (vat_Center::ε) | (vat_Automatic::ε) | (vat_JustifyDistributed::ε) ;
VisibleType ::= (vt_SheetVisible::ε) | (vt_SheetHidden::ε) | (vt_SheetVeryHidden::ε) ;
ExcelWorksheetTypeType ::= (ewt_Worksheet::ε) | (ewt_Chart::ε) | (ewt_Macro::ε) | (ewt_Dialog::ε) ;
PatternType ::= (pt_None::ε) | (pt_Solid::ε) | (pt_Gray75::ε) | (pt_Gray50::ε) | (pt_Gray25::ε) | (pt_Gray125::ε) | (pt_Gray0625::ε) | (pt_HorzStripe::ε) | (pt_VertStripe::ε) | (pt_ReverseDiagStripe::ε) | (pt_DiagStripe::ε) | (pt_DiagCross::ε) | (pt_ThickDiagCross::ε) | (pt_ThinHorzStripe::ε) | (pt_ThinVertStripe::ε) | (pt_ThinReverseDiagStripe::ε) | (pt_ThinDiagStripe::ε) | (pt_ThinHorzCross::ε) | (pt_ThinDiagCross::ε) ;
OrientationType ::= (ot_Landscape::ε) | (ot_Portrait::ε) ;
VerticalAlignType ::= (vat_None::ε) | (vat_Subscript::ε) | (vat_Superscript::ε) ;
Boolean ::= "true" | "false" ;
UnderlineType ::= (ut_None::ε) | (ut_Single::ε) | (ut_Double::ε) | (ut_SingleAccounting::ε) | (ut_DoubleAccounting::ε) ;
PositionType ::= (pt_Left::ε) | (pt_Top::ε) | (pt_Right::ε) | (pt_Bottom::ε) | (pt_DiagonalLeft::ε) | (pt_DiagonalRight::ε) ;
EnableSelectionType ::= (est_UnlockedCells::ε) | (est_NoSelection::ε) ;
--------------------metamodels::MSOfficeExcel_SpreadsheetMLWorkbookProp.bgf--------------------
Integer ::= integer() ;
CalculationWorkbookType ::= (cwt_automaticCalculation::ε) | (cwt_manualCalculation::ε) | (cwt_semiAutomaticCalculation::ε) ;
Boolean ::= "true" | "false" ;
DisplayDrawingObjectsType ::= (ddot_displayShapes::ε) | (ddot_placeHolders::ε) | (ddot_hideAll::ε) ;
String ::= string() ;
--------------------metamodels::MSOfficeExcel_SpreadsheetMLWorksheetOpt.bgf--------------------
Integer ::= integer() ;
CalculationWorkbookType ::= (cwt_automaticCalculation::ε) | (cwt_manualCalculation::ε) | (cwt_semiAutomaticCalculation::ε) ;
VisibleType ::= (vt_SheetVisible::ε) | (vt_SheetHidden::ε) | (vt_SheetVeryHidden::ε) ;
ExcelWorksheetTypeType ::= (ewt_Worksheet::ε) | (ewt_Chart::ε) | (ewt_Macro::ε) | (ewt_Dialog::ε) ;
Boolean ::= "true" | "false" ;
EnableSelectionType ::= (est_UnlockedCells::ε) | (est_NoSelection::ε) ;
DisplayDrawingObjectsType ::= (ddot_displayShapes::ε) | (ddot_placeHolders::ε) | (ddot_hideAll::ε) ;
String ::= string() ;
--------------------metamodels::MSOfficeWord_WordprocessingMLBasicDef.bgf--------------------
NoteValue ::= (ftn_normal::ε) | (ftn_separator::ε) | (ftn_continuation_separator::ε) | (ftn_continuation_notice::ε) ;
Integer ::= integer() ;
OnOffType ::= (oot_on::ε) | (oot_off::ε) ;
BreakType ::= (bt_page::ε) | (bt_column::ε) | (bt_text_wrapping::ε) ;
Boolean ::= "true" | "false" ;
RunLevelElt ::= ε ;
FldCharTypeProperty ::= (fctp_begin::ε) | (fctp_separate::ε) | (fctp_end::ε) ;
String ::= string() ;
--------------------metamodels::MSOfficeWord_WordprocessingMLSimplified.bgf--------------------
NoteValue ::= (ftn_normal::ε) | (ftn_separator::ε) | (ftn_continuation_separator::ε) | (ftn_continuation_notice::ε) ;
Integer ::= integer() ;
OnOffType ::= (oot_on::ε) | (oot_off::ε) ;
BreakType ::= (bt_page::ε) | (bt_column::ε) | (bt_text_wrapping::ε) ;
Boolean ::= "true" | "false" ;
FldCharTypeProperty ::= (fctp_begin::ε) | (fctp_separate::ε) | (fctp_end::ε) ;
String ::= string() ;
--------------------metamodels::MSOfficeWord_WordprocessingMLStyles.bgf--------------------
JustificationValue ::= (jv_left::ε) | (jv_center::ε) | (jv_right::ε) | (jv_both::ε) ;
NoteValue ::= (ftn_normal::ε) | (ftn_separator::ε) | (ftn_continuation_separator::ε) | (ftn_continuation_notice::ε) ;
Integer ::= integer() ;
UnderlineValues ::= (uv_single::ε) | (uv_words::ε) | (uv_double::ε) | (uv_thick::ε) | (uv_dotted::ε) | (uv_dotted_heavy::ε) | (uv_dash::ε) | (uv_dashed_heavy::ε) | (uv_dash_long::ε) | (uv_dash_long_heavy::ε) | (uv_dot_dash::ε) | (uv_dash_dot_heavy::ε) | (uv_dot_dot_dash::ε) | (uv_dash_dot_dot_heavy::ε) | (uv_wave::ε) | (uv_wavy_heavy::ε) | (uv_wavy_double::ε) | (uv_none::ε) ;
StyleKindValue ::= (skv_paragraph::ε) | (skv_character::ε) | (skv_table::ε) | (skv_list::ε) ;
OnOffType ::= (oot_on::ε) | (oot_off::ε) ;
BreakType ::= (bt_page::ε) | (bt_column::ε) | (bt_text_wrapping::ε) ;
Boolean ::= "true" | "false" ;
VerticalAlignRunType ::= (vart_baseline::ε) | (vart_superscript::ε) | (vart_subscript::ε) ;
FldCharTypeProperty ::= (fctp_begin::ε) | (fctp_separate::ε) | (fctp_end::ε) ;
String ::= string() ;
HighlightColorValues ::= (hcv_black::ε) | (hcv_blue::ε) | (hcv_cyan::ε) | (hcv_green::ε) | (hcv_magenta::ε) | (hcv_red::ε) | (hcv_yellow::ε) | (hcv_white::ε) | (hcv_dark_blue::ε) | (hcv_dark_cyan::ε) | (hcv_dark_green::ε) | (hcv_dark_magenta::ε) | (hcv_dark_red::ε) | (hcv_dark_yellow::ε) | (hcv_dark_gray::ε) | (hcv_light_gray::ε) | (hcv_none::ε) ;
HintType ::= (ht_default::ε) | (ht_fareast::ε) | (ht_cs::ε) ;
--------------------metamodels::MSOfficeWord_WordprocessingMLTableElts.bgf--------------------
NoteValue ::= (ftn_normal::ε) | (ftn_separator::ε) | (ftn_continuation_separator::ε) | (ftn_continuation_notice::ε) ;
Integer ::= integer() ;
OnOffType ::= (oot_on::ε) | (oot_off::ε) ;
BreakType ::= (bt_page::ε) | (bt_column::ε) | (bt_text_wrapping::ε) ;
Boolean ::= "true" | "false" ;
FldCharTypeProperty ::= (fctp_begin::ε) | (fctp_separate::ε) | (fctp_end::ε) ;
String ::= string() ;
--------------------metamodels::MSProject.bgf--------------------
String ::= string() ;
--------------------metamodels::MSProject2.bgf--------------------
Integer ::= integer() ;
String ::= string() ;
--------------------metamodels::MTRANS.bgf--------------------
Boolean ::= "true" | "false" ;
MetaModel ::= ε ;
MetaClass ::= ε ;
String ::= string() ;
--------------------metamodels::MSVisio_DatadiagramMLBasicDef.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::MSVisio_DatadiagramMLSimplified.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::MSVisio_DatadiagramMLTextFormat.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::MSVisio_DatadiagramMLXForm.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::Mantis.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
RelationshipType ::= (rt_related to::ε) | (rt_parent of::ε) | (rt_child of::ε) | (rt_duplicate of::ε) | (rt_has duplicate::ε) ;
String ::= string() ;
--------------------metamodels::Matlab.bgf--------------------
Integer ::= integer() ;
TrueFalse ::= (True::ε) | (False::ε) ;
String ::= string() ;
--------------------metamodels::Maude.bgf--------------------
BooleanCond ::= ε ;
ImportationMode ::= (protecting::ε) | (including::ε) | (extending::ε) ;
String ::= string() ;
--------------------metamodels::MavenMaven.bgf--------------------
String ::= string() ;
--------------------metamodels::MavenProject.bgf--------------------
String ::= string() ;
--------------------metamodels::Measure.bgf--------------------
Integer ::= integer() ;
ModelKind ::= (KM3::ε) | (UML2::ε) ;
Boolean ::= "true" | "false" ;
String ::= string() ;
ElementKind ::= (metamodel::ε) | (model::ε) | (package::ε) | (interface::ε) | (class::ε) ;
--------------------metamodels::Metrics.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::MoMM.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::MiningMart_ViewCaseRepresentation.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
Sampling ::= ε ;
Agregation ::= ε ;
ParameterType ::= (Value::ε) | (Concept::ε) | (RelationShip::ε) | (FeatureAttribute::ε) ;
Segmentation ::= ε ;
String ::= string() ;
--------------------metamodels::MoDAF-AV.bgf--------------------
String ::= string() ;
--------------------metamodels::MiningMart_ViewDataRepresentation.bgf--------------------
Integer ::= integer() ;
Time ::= ε ;
Categorial ::= ε ;
Boolean ::= "true" | "false" ;
Constant ::= ε ;
Spatial ::= ε ;
TimeGroup ::= ε ;
Binary ::= ε ;
String ::= string() ;
--------------------metamodels::PASSI.bgf--------------------
Ontology ::= ε ;
Concept ::= ε ;
Predicate ::= ε ;
Action ::= ε ;
Service ::= ε ;
Requirement ::= ε ;
String ::= string() ;
Non functionnal Requirement ::= ε ;
Scenario ::= ε ;
--------------------metamodels::MonitorProgram.bgf--------------------
Direction ::= (in::ε) | (out::ε) ;
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::MySQL.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::News.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
DayKind ::= (Monday::ε) | (Tuesday::ε) | (Wednesday::ε) | (Thursday::ε) | (Friday::ε) | (Saturday::ε) | (Sunday::ε) ;
--------------------metamodels::ODP-NV.bgf--------------------
String ::= string() ;
--------------------metamodels::OWL.bgf--------------------
ReificationKind ::= (none::ε) | (reifiedOnly::ε) | (reified::ε) ;
Seq ::= ε ;
Integer ::= integer() ;
ContainerMembershipProperty ::= ε ;
Alt ::= ε ;
Boolean ::= "true" | "false" ;
Bag ::= ε ;
String ::= string() ;
--------------------metamodels::OpenConf.owl.bgf--------------------
Tends_Towards_Practical ::= ε ;
Must_Accept ::= ε ;
start_date_of_camera-ready_submission ::= ε ;
Invited_Speaker ::= ε ;
Preference ::= ε ;
Welcome_address ::= ε ;
New_Perspective_Issue_Problem_Solving ::= ε ;
Classic_Papers ::= ε ;
Refusing_manuscript ::= ε ;
Result_of_Advocate ::= ε ;
Conference_hotel ::= ε ;
Other ::= ε ;
Coffee_break ::= ε ;
Valuable_Confirmation_of_Present_Knowledge ::= ε ;
Rejection ::= ε ;
Renting ::= ε ;
Late_paid_applicant ::= ε ;
Nonauthor_registration_fee ::= ε ;
EEnum ::= (Yes::ε) | (No::ε) | (Accept::ε) | (Reject::ε) | (Unsure::ε) | (male::ε) | (female::ε) | (high::ε) | (medium::ε) | (low::ε) | (very high::ε) | (Compilers::ε) | (Microarchitecture::ε) | (Systems::ε) | (ForwardLookingIdea::ε) ;
classification ::= ε ;
Author_attendee_book_registration_fee ::= ε ;
AcceptRating ::= ε ;
IASTED_member ::= ε ;
ClosingTalk ::= ε ;
Speaker ::= ε ;
Late-Registered_Participant ::= ε ;
Description ::= ε ;
MealBreak ::= ε ;
Shuttle_bus ::= ε ;
Technical_commitee ::= ε ;
Conference_Hiker ::= ε ;
Departure ::= ε ;
Listener ::= ε ;
Industrial_Session ::= ε ;
Conference_fees ::= ε ;
Conference_state ::= ε ;
ComputerNetworksEnterpriseTopic ::= ε ;
New_Information ::= ε ;
Early_paid_applicant ::= ε ;
Passive_conference_participant ::= ε ;
Conference_airport ::= ε ;
Receiving_manuscript ::= ε ;
Senior_Reviewer_URL ::= ε ;
High ::= ε ;
Excursion ::= ε ;
Presenter_city ::= ε ;
date_of_notification ::= ε ;
Departure_tax ::= ε ;
Early-Registered_Participant ::= ε ;
phase_of_conference ::= ε ;
Video_cassette_player ::= ε ;
Time_zone ::= ε ;
Single_hotel_room ::= ε ;
Hotel_presenter ::= ε ;
Contribution_co-author ::= ε ;
Session_chair ::= ε ;
Introduction_of_speaker ::= ε ;
Marginal_Tend_to_Accept ::= ε ;
ConferenceSession ::= ε ;
Programming ::= ε ;
SubjectArea ::= ε ;
Nonmember_registration_fee ::= ε ;
ComputerNetworksMeasurementsTopic ::= ε ;
Coctail_reception ::= ε ;
Dinner_banquet ::= ε ;
Chair_URL ::= ε ;
Car ::= ε ;
start_date_of_conference ::= ε ;
Reception ::= ε ;
Long_bool ::= ε ;
PostScript ::= ε ;
HTML ::= ε ;
Full_day_tour ::= ε ;
LCD_projector ::= ε ;
PaymentMode ::= ε ;
Presenter_house ::= ε ;
Cd_proceening ::= ε ;
Preview ::= ε ;
Workshop ::= ε ;
Rejection_Email ::= ε ;
Presenter_university ::= ε ;
Student_registration_fee ::= ε ;
Tutorial_Chair ::= ε ;
Inforamtion ::= ε ;
Trip_day ::= ε ;
Hotel_registration_form ::= ε ;
Session_Chair ::= ε ;
Group_Email ::= ε ;
lower_tier_reviewing_process ::= ε ;
Regular_Program_Committee_member ::= ε ;
ComputerNetworksOpticalTopic ::= ε ;
end_date_of_conference ::= ε ;
Double_hotel_room ::= ε ;
AccpetIfRoomRating ::= ε ;
Sponsor_city ::= ε ;
RFC ::= ε ;
Conference_city ::= ε ;
One_day_presenter ::= ε ;
Accepting_manuscript ::= ε ;
SC_Member ::= ε ;
Clarity_to_Present_Understanding ::= ε ;
Highly_Practical ::= ε ;
Modelling ::= ε ;
Value_added_tax ::= ε ;
start_date_of_full_paper_submission ::= ε ;
Clear_Accept ::= ε ;
OC_Chair ::= ε ;
Highly_Theoretical ::= ε ;
Acceptance ::= ε ;
Credit_card ::= ε ;
Country ::= ε ;
start_date_of_abstract_submission ::= ε ;
end_date_of_camera-ready_submission ::= ε ;
CoffeeBreak ::= ε ;
Tends_Towards_Theoretical ::= ε ;
PaperQuestion ::= ε ;
Detail ::= ε ;
Final_manuscript ::= ε ;
Bank_transfer ::= ε ;
end_date_of_abstract_submission ::= ε ;
Humour ::= ε ;
Worker_non_speaker ::= ε ;
Book_proceeding ::= ε ;
Registration_form ::= ε ;
Student_non_speaker ::= ε ;
Demo_Chair ::= ε ;
Review_Form_Setup ::= ε ;
Conference_Trip ::= ε ;
Camera_ready_contribution ::= ε ;
Adobe_PDF ::= ε ;
Contribution_1th-author ::= ε ;
ReviewForm ::= ε ;
Hotel_fee ::= ε ;
Sponsor_company_house ::= ε ;
PC_Chair ::= ε ;
Student_lecturer ::= ε ;
Assistance ::= ε ;
Conference_building ::= ε ;
Review_Committee ::= ε ;
NumericalReviewQuestion ::= ε ;
Marginal_Tend_to_Reject ::= ε ;
WeekRejectRating ::= ε ;
ComputerNetworksSecurityTopic ::= ε ;
Text ::= ε ;
Corel_Word_Perfect ::= ε ;
PersonalPublicationHistory ::= ε ;
Extended_abstract ::= ε ;
Notification_Email ::= ε ;
Trip ::= ε ;
RTF ::= ε ;
Program_Committee ::= ε ;
Banquet ::= ε ;
Cheque ::= ε ;
Computer_Science ::= ε ;
Conference_Banquet ::= ε ;
Taxi ::= ε ;
rejection_notification_email ::= ε ;
RejectRating ::= ε ;
Computer ::= ε ;
Not_Much ::= ε ;
Worker_lecturer ::= ε ;
Low ::= ε ;
ResearchTopic ::= ε ;
end_date_of_full_paper_submission ::= ε ;
intensity ::= ε ;
String ::= string() ;
Currency ::= ε ;
TextualReviewQuestion ::= ε ;
acceptance_notification_email ::= ε ;
Author_attendee_cd_registration_fee ::= ε ;
ComputerNetworksManagementTopic ::= ε ;
Balanced_Theory_and_Practice ::= ε ;
Trip_city ::= ε ;
Contact_Person_URL ::= ε ;
Moderate ::= ε ;
MS_Word ::= ε ;
Fee_for_extra_trip ::= ε ;
ComputerNetworksSwitchingTopic ::= ε ;
Conference_restaurant ::= ε ;
Integer ::= integer() ;
Technic_activity ::= ε ;
Invited_speaker ::= ε ;
Presenter_state ::= ε ;
Regular_Reviewer_URL ::= ε ;
ComputerNetworksSensorTopic ::= ε ;
institute ::= ε ;
Networking ::= ε ;
IASTED_non_member ::= ε ;
One_conference_day ::= ε ;
Clear_Reject ::= ε ;
Overhead_projector ::= ε ;
WelcomeTalk ::= ε ;
Workshop_Chair ::= ε ;
Sponsor_state ::= ε ;
Misc ::= ε ;
Author_information_form ::= ε ;
ComputerNetworksAapplicationsTopic ::= ε ;
Boolean ::= "true" | "false" ;
Initial_manuscipt ::= ε ;
FreeTimeBreak ::= ε ;
Feature_Request ::= ε ;
Portable_Reject ::= ε ;
Van ::= ε ;
Simulating ::= ε ;
Memeber_registration_fee ::= ε ;
--------------------metamodels::OpenQVT.bgf--------------------
String ::= string() ;
--------------------metamodels::PCS.owl.bgf--------------------
Tends_Towards_Practical ::= ε ;
Must_Accept ::= ε ;
start_date_of_camera-ready_submission ::= ε ;
Invited_Speaker ::= ε ;
Preference ::= ε ;
Welcome_address ::= ε ;
New_Perspective_Issue_Problem_Solving ::= ε ;
Classic_Papers ::= ε ;
Refusing_manuscript ::= ε ;
Confirmed_Conflict ::= ε ;
Result_of_Advocate ::= ε ;
Conference_hotel ::= ε ;
Other ::= ε ;
Coffee_break ::= ε ;
Valuable_Confirmation_of_Present_Knowledge ::= ε ;
Rejection ::= ε ;
Renting ::= ε ;
Late_paid_applicant ::= ε ;
Nonauthor_registration_fee ::= ε ;
classification ::= ε ;
EEnum ::= (Yes::ε) | (No::ε) | (Accept::ε) | (Reject::ε) | (Unsure::ε) | (submitted::ε) | (missing::ε) | (notStarted::ε) | (active::ε) | (finished::ε) | (accepted::ε) | (rejected::ε) | (regular::ε) | (invited::ε) | (lowBid::ε) | (-::ε) | (CONFLICT::ε) | (wantNot::ε) | (highBid::ε) | (Compilers::ε) | (Microarchitecture::ε) | (Systems::ε) | (ForwardLookingIdea::ε) | (1::ε) | (2::ε) | (3::ε) | (4::ε) | (5::ε) | (6::ε) | (7::ε) | (male::ε) | (female::ε) | (high::ε) | (medium::ε) | (low::ε) | (very high::ε) ;
Author_attendee_book_registration_fee ::= ε ;
AcceptRating ::= ε ;
IASTED_member ::= ε ;
ClosingTalk ::= ε ;
Late-Registered_Participant ::= ε ;
MealBreak ::= ε ;
Description ::= ε ;
Shuttle_bus ::= ε ;
Technical_commitee ::= ε ;
Conference_Hiker ::= ε ;
Departure ::= ε ;
Listener ::= ε ;
Industrial_Session ::= ε ;
Conference_fees ::= ε ;
PC_Meeting ::= ε ;
E-mail_PC_Meeting ::= ε ;
Conference_state ::= ε ;
ComputerNetworksEnterpriseTopic ::= ε ;
New_Information ::= ε ;
Early_paid_applicant ::= ε ;
Conference_airport ::= ε ;
Passive_conference_participant ::= ε ;
Hidden_Conflict ::= ε ;
Receiving_manuscript ::= ε ;
Senior_Reviewer_URL ::= ε ;
High ::= ε ;
Excursion ::= ε ;
Presenter_city ::= ε ;
date_of_notification ::= ε ;
Departure_tax ::= ε ;
Early-Registered_Participant ::= ε ;
phase_of_conference ::= ε ;
Video_cassette_player ::= ε ;
Time_zone ::= ε ;
Single_hotel_room ::= ε ;
Hotel_presenter ::= ε ;
Contribution_co-author ::= ε ;
Session_chair ::= ε ;
Introduction_of_speaker ::= ε ;
Marginal_Tend_to_Accept ::= ε ;
ConferenceSession ::= ε ;
Programming ::= ε ;
SubjectArea ::= ε ;
Nonmember_registration_fee ::= ε ;
ComputerNetworksMeasurementsTopic ::= ε ;
Coctail_reception ::= ε ;
Dinner_banquet ::= ε ;
Chair_URL ::= ε ;
Car ::= ε ;
start_date_of_conference ::= ε ;
Reception ::= ε ;
Long_bool ::= ε ;
PostScript ::= ε ;
HTML ::= ε ;
Full_day_tour ::= ε ;
LCD_projector ::= ε ;
PaymentMode ::= ε ;
Presenter_house ::= ε ;
Cd_proceening ::= ε ;
Preview ::= ε ;
Workshop ::= ε ;
Presenter_university ::= ε ;
Student_registration_fee ::= ε ;
Tutorial_Chair ::= ε ;
Inforamtion ::= ε ;
Trip_day ::= ε ;
Hotel_registration_form ::= ε ;
Session_Chair ::= ε ;
lower_tier_reviewing_process ::= ε ;
Regular_Program_Committee_member ::= ε ;
ComputerNetworksOpticalTopic ::= ε ;
end_date_of_conference ::= ε ;
Double_hotel_room ::= ε ;
AccpetIfRoomRating ::= ε ;
Sponsor_city ::= ε ;
RFC ::= ε ;
Conference_city ::= ε ;
One_day_presenter ::= ε ;
Accepting_manuscript ::= ε ;
SC_Member ::= ε ;
Clarity_to_Present_Understanding ::= ε ;
Highly_Practical ::= ε ;
Modelling ::= ε ;
Value_added_tax ::= ε ;
start_date_of_full_paper_submission ::= ε ;
Clear_Accept ::= ε ;
OC_Chair ::= ε ;
Deleted_Conflict ::= ε ;
Highly_Theoretical ::= ε ;
Acceptance ::= ε ;
Credit_card ::= ε ;
Country ::= ε ;
start_date_of_abstract_submission ::= ε ;
end_date_of_camera-ready_submission ::= ε ;
CoffeeBreak ::= ε ;
Web_site ::= ε ;
Tends_Towards_Theoretical ::= ε ;
PaperQuestion ::= ε ;
Detail ::= ε ;
Bank_transfer ::= ε ;
end_date_of_abstract_submission ::= ε ;
Humour ::= ε ;
Worker_non_speaker ::= ε ;
Book_proceeding ::= ε ;
Registration_form ::= ε ;
Student_non_speaker ::= ε ;
Demo_Chair ::= ε ;
Review_Form_Setup ::= ε ;
Conference_Trip ::= ε ;
Camera_ready_contribution ::= ε ;
Self_Conflict ::= ε ;
Adobe_PDF ::= ε ;
Contribution_1th-author ::= ε ;
CD ::= ε ;
ReviewForm ::= ε ;
Hotel_fee ::= ε ;
Sponsor_company_house ::= ε ;
PC_Chair ::= ε ;
Student_lecturer ::= ε ;
Assistance ::= ε ;
Conference_building ::= ε ;
Review_Committee ::= ε ;
NumericalReviewQuestion ::= ε ;
Report ::= ε ;
Marginal_Tend_to_Reject ::= ε ;
WeekRejectRating ::= ε ;
System ::= ε ;
ComputerNetworksSecurityTopic ::= ε ;
Text ::= ε ;
Conflict_Rules ::= ε ;
Corel_Word_Perfect ::= ε ;
Discussion ::= ε ;
Extended_abstract ::= ε ;
PersonalPublicationHistory ::= ε ;
Trip ::= ε ;
RTF ::= ε ;
Banquet ::= ε ;
Cheque ::= ε ;
Computer_Science ::= ε ;
Conference_Banquet ::= ε ;
Taxi ::= ε ;
rejection_notification_email ::= ε ;
RejectRating ::= ε ;
Computer ::= ε ;
Not_Much ::= ε ;
Worker_lecturer ::= ε ;
Low ::= ε ;
ResearchTopic ::= ε ;
end_date_of_full_paper_submission ::= ε ;
intensity ::= ε ;
String ::= string() ;
Currency ::= ε ;
TextualReviewQuestion ::= ε ;
acceptance_notification_email ::= ε ;
Author_attendee_cd_registration_fee ::= ε ;
ComputerNetworksManagementTopic ::= ε ;
Bidding_And_Paper_Submission_Phase ::= ε ;
Balanced_Theory_and_Practice ::= ε ;
Trip_city ::= ε ;
Contact_Person_URL ::= ε ;
Moderate ::= ε ;
MS_Word ::= ε ;
Fee_for_extra_trip ::= ε ;
ComputerNetworksSwitchingTopic ::= ε ;
Conference_restaurant ::= ε ;
Integer ::= integer() ;
Technic_activity ::= ε ;
Invited_speaker ::= ε ;
Presenter_state ::= ε ;
Regular_Reviewer_URL ::= ε ;
Bidding_Without_Paper_Submission_Phase ::= ε ;
ComputerNetworksSensorTopic ::= ε ;
institute ::= ε ;
Networking ::= ε ;
IASTED_non_member ::= ε ;
One_conference_day ::= ε ;
Clear_Reject ::= ε ;
Overhead_projector ::= ε ;
WelcomeTalk ::= ε ;
Workshop_Chair ::= ε ;
Sponsor_state ::= ε ;
Misc ::= ε ;
Author_information_form ::= ε ;
ComputerNetworksAapplicationsTopic ::= ε ;
Boolean ::= "true" | "false" ;
FreeTimeBreak ::= ε ;
Feature_Request ::= ε ;
Portable_Reject ::= ε ;
Van ::= ε ;
Simulating ::= ε ;
Memeber_registration_fee ::= ε ;
--------------------metamodels::PDG.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::PIF.bgf--------------------
Before ::= ε ;
Uses ::= ε ;
Decision ::= ε ;
Modifies ::= ε ;
Creates ::= ε ;
Agent ::= ε ;
Succesor ::= ε ;
Timepoint ::= ε ;
Performs ::= ε ;
ActivityStatus ::= ε ;
--------------------metamodels::PRR.bgf--------------------
Integer ::= integer() ;
StringType ::= ε ;
OperatorCallExp ::= ε ;
Boolean ::= "true" | "false" ;
IntegerType ::= ε ;
RealType ::= ε ;
CollectionOperationCallExp ::= ε ;
BooleanType ::= ε ;
String ::= string() ;
--------------------metamodels::Parameters.bgf--------------------
String ::= string() ;
--------------------metamodels::PathExp.bgf--------------------
String ::= string() ;
--------------------metamodels::Perceptory.bgf--------------------
Integer ::= integer() ;
ConstrainedRelationSchip ::= ε ;
AssociationEnd ::= ε ;
Composition ::= ε ;
Boolean ::= "true" | "false" ;
Aggregation ::= ε ;
String ::= string() ;
--------------------metamodels::Person.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::PetriNet_extended.bgf--------------------
Integer ::= integer() ;
String ::= string() ;
--------------------metamodels::PluginEclipse.bgf--------------------
Integer ::= integer() ;
Resolution ::= (Mandatory::ε) | (Optional::ε) ;
Boolean ::= "true" | "false" ;
Visibility ::= (Private::ε) | (Reexport::ε) ;
String ::= string() ;
--------------------metamodels::ProMarte.bgf--------------------
Integer ::= integer() ;
BasicResource ::= ε ;
RateUnitKinds ::= (kbs::ε) | (MIPS::ε) ;
Link ::= ε ;
SizeUnitKinds ::= (bits::ε) | (bytes::ε) | (Mb::ε) | (MB::ε) ;
InstantUnitKinds ::= (TAI::ε) | (UT0::ε) | (UT1::ε) | (UTC::ε) | (TT::ε) | (TDB::ε) | (TCG::ε) | (TCB::ε) | (Sideral::ε) | (Local::ε) ;
BasicQuantity ::= ε ;
ClockInterrupt ::= ε ;
MetricTimeValue ::= ε ;
String ::= string() ;
StatisticalQualifierKinds ::= (max::ε) | (min::ε) | (range::ε) | (mean::ε) | (variance::ε) | (standardDeviation::ε) | (percentil::ε) | (frequency::ε) | (moment::ε) | (distribution::ε) | (instantaneous::ε) ;
Quantity ::= ε ;
Boolean ::= "true" | "false" ;
DerivedQuantity ::= ε ;
DurationUnitKinds ::= (ns::ε) | (us::ε) | (ms::ε) | (s::ε) | (min::ε) | (hrs::ε) | (dys::ε) | (wks::ε) | (mos::ε) | (yrs::ε) ;
ProbabilityUnitKinds ::= (us::ε) | (s::ε) ;
SourceKinds ::= (est::ε) | (meas::ε) | (req::ε) | (implicit::ε) | (calc::ε) ;
MetricTimeInterval ::= ε ;
TimeOut ::= ε ;
DirectionKinds ::= (increasing::ε) | (decreasing::ε) | (undefined::ε) ;
--------------------metamodels::Problem.bgf--------------------
Severity ::= (error::ε) | (warning::ε) | (critic::ε) ;
String ::= string() ;
--------------------metamodels::Program.bgf--------------------
Direction ::= (in::ε) | (out::ε) ;
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::Promenade.bgf--------------------
Integer ::= integer() ;
End ::= ε ;
Boolean ::= "true" | "false" ;
Strong ::= ε ;
FeedBack ::= ε ;
Start ::= ε ;
String ::= string() ;
--------------------metamodels::PtolemyII.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::Publication.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::QVT.bgf--------------------
Integer ::= integer() ;
BreakExp ::= ε ;
ImportKind ::= (extension::ε) | (access::ε) ;
Boolean ::= "true" | "false" ;
ContinueExp ::= ε ;
InvalidLiteralExp ::= ε ;
NullLiteralExp ::= ε ;
EnforcementMode ::= (Deletion::ε) | (Creation::ε) ;
DirectionKind ::= (in::ε) | (inout::ε) | (out::ε) ;
CollectionKind ::= (OrderedSet::ε) | (Set::ε) | (Bag::ε) | (Sequence::ε) ;
String ::= string() ;
PrimitiveType ::= ε ;
SeverityKind ::= (error::ε) | (fatal::ε) | (warning::ε) ;
--------------------metamodels::QVT_SimpleRDBMS.bgf--------------------
String ::= string() ;
--------------------metamodels::QoS.bgf--------------------
Integer ::= integer() ;
Parameter ::= ε ;
StatisticalAttributekindKind ::= ε ;
Boolean ::= "true" | "false" ;
Operation ::= ε ;
String ::= string() ;
--------------------metamodels::QoS_Characteristic.bgf--------------------
Integer ::= integer() ;
Parameter ::= ε ;
StatisticalAttributekindKind ::= ε ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::RDFS.bgf--------------------
Seq ::= ε ;
Integer ::= integer() ;
ContainerMembershipProperty ::= ε ;
Alt ::= ε ;
Boolean ::= "true" | "false" ;
Bag ::= ε ;
String ::= string() ;
--------------------metamodels::QoS_Profile.bgf--------------------
Integer ::= integer() ;
QoSStatement ::= ε ;
Boolean ::= "true" | "false" ;
Operation ::= ε ;
String ::= string() ;
--------------------metamodels::QoS_Statement.bgf--------------------
Integer ::= integer() ;
Parameter ::= ε ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::Relational.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::RelationalDBContent.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::RelationalDBSchema.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::Repository.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::Reqtify.bgf--------------------
String ::= string() ;
--------------------metamodels::RequisitePro.bgf--------------------
String ::= string() ;
--------------------metamodels::SBVRvoc.bgf--------------------
EndOperator ::= (given::ε) | (thanone::ε) | (one::ε) | (isobligatorythat::ε) | (ispermittedthat::ε) | (isprohibitedthat::ε) | (isnecessarythat::ε) | (ispossiblethat::ε) | (isimpossiblethat::ε) | (isnotthecasethat::ε) | (least::ε) | (leastone::ε) | (most::ε) | (mostone::ε) | (leastnandatmostm::ε) | (andonlyif::ε) | (ornot::ε) | (not::ε) | (of::ε) ;
Verb ::= (is::ε) | (relevant::ε) | (comprises::ε) | (to::ε) | (work::ε) | (in::ε) | (trades::ε) | (as::ε) | (are::ε) | (accepted::ε) | (generally::ε) | (important::ε) | (across::ε) | (share::ε) | (sets::ε) | (assigned::ε) | (by::ε) | (contains::ε) | (for::ε) | (has::ε) | (specifies::ε) | (specified::ε) ;
Integer ::= integer() ;
Qualif ::= (the::ε) | (The::ε) | (a::ε) | (A::ε) | (an::ε) | (An::ε) | (Each::ε) | (each::ε) | (Some::ε) | (some::ε) | (At::ε) | (at::ε) | (Exactly::ε) | (exactly::ε) ;
ModalVerb ::= (must::ε) | (may::ε) | (never::ε) | (always::ε) ;
Link ::= (of::ε) | (quoteS::ε) ;
Join ::= (that::ε) | (who::ε) ;
Boolean ::= "true" | "false" ;
String ::= string() ;
ConjonctionnalKeyWord ::= (and::ε) | (or::ε) | (if::ε) | (whether::ε) ;
--------------------metamodels::SCADE.bgf--------------------
VariableReference ::= ε ;
Integer ::= integer() ;
RPoint ::= ε ;
Boolean ::= "true" | "false" ;
Error ::= ε ;
OperatorReference ::= ε ;
RSize ::= ε ;
String ::= string() ;
TypeReference ::= ε ;
--------------------metamodels::SDM.bgf--------------------
ProcessorArchitectures ::= (x86::ε) | (ia64::ε) | (amd64::ε) | (wow64::ε) | (msil::ε) | (shx::ε) | (arm::ε) | (data::ε) ;
SettingMemberAccess ::= (ReadWrite::ε) | (ReadOnly::ε) | (WriteOnly::ε) ;
Integer ::= integer() ;
RolesList ::= (Host::ε) | (Guest::ε) | (Parent::ε) | (Member::ε) | (Source::ε) | (Dependent::ε) | (Proxy::ε) | (Delegate::ε) | (Client::ε) | (Server::ε) ;
ConstraintEvaluation ::= (Design::ε) | (Never::ε) ;
Boolean ::= "true" | "false" ;
Platform ::= (x86::ε) | (ia64::ε) | (amd64::ε) | (wow64::ε) | (msil::ε) | (shx::ε) | (arm::ε) | (data::ε) | (*::ε) | (neutral::ε) ;
SettingMemberSecure ::= (Always::ε) | (PerInstance::ε) | (Never::ε) ;
String ::= string() ;
--------------------metamodels::SEE_Design.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::SPEM.bgf--------------------
Boolean ::= "true" | "false" ;
--------------------metamodels::SPL.bgf--------------------
Direction ::= (inout::ε) | (in::ε) | (out::ε) ;
ControlMethod ::= (deploy::ε) | (undeploy::ε) | (uninvite::ε) | (unregister::ε) | (unsubscribe::ε) ;
Integer ::= integer() ;
SIPMethod ::= (ACK::ε) | (BYE::ε) | (CANCEL::ε) | (INVITE::ε) | (NOTIFY::ε) | (OPTIONS::ε) | (REACK::ε) | (REGISTER::ε) | (REINVITE::ε) | (REREGISTER::ε) | (RESUBSCRIBE::ε) | (SUBSCRIBE::ε) ;
BODYExp ::= ε ;
ContinueStat ::= ε ;
ServerErrorKind ::= (BAD_GATEWAY::ε) | (MESSAGE_TOO_LARGE::ε) | (NOT_IMPLEMENTED::ε) | (SERVER_INTERNAL_ERROR::ε) | (SERVER_TIMEOUT::ε) | (SERVICE_UNAVAILABLE::ε) | (VERSION_NOT_SUPPORTED::ε) ;
GlobalErrorKind ::= (BUSY_EVERYWHERE::ε) | (DECLINE::ε) | (DOES_NOT_EXIST_ANYWHERE::ε) | (NOT_ACCEPTABLE::ε) ;
ReasonExp ::= ε ;
SuccessKind ::= (OK::ε) | (ACCEPTED::ε) ;
Modifier ::= (LIFO::ε) | (FIFO::ε) ;
BreakStat ::= ε ;
ClientErrorKind ::= (ADDRESS_INCOMPLETE::ε) | (AMBIGUOUS::ε) | (BAD_EXTENSION::ε) | (BAD_REQUEST::ε) | (BUSY_HERE::ε) | (CALL_OR_TRANSACTION_DOES_NOT_EXIST::ε) | (EXTENSION_REQUIRED::ε) | (FORBIDDEN::ε) | (GONE::ε) | (INTERVAL_TOO_BRIEF::ε) | (LOOP_DETECTED::ε) | (METHOD_NOT_ALLOWED::ε) | (NOT_ACCEPTABLE_HERE::ε) | (NOT_ACCEPTABLE::ε) | (NOT_FOUND::ε) | (PAYMENT_REQUIRED::ε) | (PROXY_AUTHENTICATION_REQUIRED::ε) | (REQUESTURI_TOO_LONG::ε) | (REQUEST_ENTITY_TOO_LARGE::ε) | (REQUEST_PENDING::ε) | (REQUEST_TERMINATED::ε) | (REQUEST_TIMEOUT::ε) | (TEMPORARILY_UNAVAILABLE::ε) | (TOO_MANY_HOPS::ε) | (UNAUTHORIZED::ε) | (UNDECIPHERABLE::ε) | (UNSUPPORTED_MEDIA_TYPE::ε) | (UNSUPPORTED_URI_SCHEME::ε) ;
String ::= string() ;
RedirectionErrorKind ::= (ALTERNATIVE_SERVICE::ε) | (MOVED_PERMANENTLY::ε) | (MOVED_TEMPORARILY::ε) | (MULTIPLE_CHOICES::ε) | (USE_PROXY::ε) ;
FunctionLocation ::= (remote::ε) | (local::ε) ;
Boolean ::= "true" | "false" ;
SIPHeader ::= (CALL_ID::ε) | (CONTACT::ε) | (CSEQ::ε) | (EVENT::ε) | (FROM::ε) | (MAX_FORWARDS::ε) | (SUBSCRIPTION_STATE::ε) | (TO::ε) | (VIA::ε) ;
PrimitiveType ::= (void::ε) | (bool::ε) | (int::ε) | (request::ε) | (response::ε) | (string::ε) | (time::ε) | (uri::ε) ;
RequestURIExp ::= ε ;
--------------------metamodels::SQLDDL.bgf--------------------
Integer ::= integer() ;
NullVal ::= ε ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::SWRC.bgf--------------------
Integer ::= integer() ;
String ::= string() ;
AssociateProfessor ::= ε ;
AssistantProfessor ::= ε ;
FullProfessor ::= ε ;
--------------------metamodels::SQLDML.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::Scilab.bgf--------------------
Integer ::= integer() ;
InOut ::= (in::ε) | (out::ε) ;
PreDef ::= (Preserve::ε) | (Default::ε) ;
String ::= string() ;
--------------------metamodels::SecureUML.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::Sharengo.bgf--------------------
String ::= string() ;
--------------------metamodels::SeminarSchedulingSystem.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::SignalFlow.bgf--------------------
Integer ::= integer() ;
String ::= string() ;
--------------------metamodels::SimpleAirlineDomain.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
Genre ::= (male::ε) | (female::ε) ;
String ::= string() ;
--------------------metamodels::SysML.bgf--------------------
AllocateActivityPartition ::= ε ;
Integer ::= integer() ;
DeriveReqt ::= ε ;
Allocate ::= ε ;
Verify ::= ε ;
Copy ::= ε ;
ValueSpecification ::= ε ;
ConstraintProperty ::= ε ;
String ::= string() ;
FlowDirection ::= (in::ε) | (out::ε) | (inout::ε) ;
InstanceSpecification ::= ε ;
Overwrite ::= ε ;
ControlOperation ::= ε ;
Boolean ::= "true" | "false" ;
Satisfy ::= ε ;
TestCase ::= ε ;
NoBuffer ::= ε ;
Optional ::= ε ;
--------------------metamodels::SimpleSBVR.bgf--------------------
Integer ::= integer() ;
NecessityFormulation ::= ε ;
String ::= string() ;
--------------------metamodels::SimulinkStateFlow.bgf--------------------
Units ::= (alpha::ε) | (beta::ε) ;
Integer ::= integer() ;
BranchPoint ::= ε ;
TriggerEnum ::= (alpha::ε) | (beta::ε) ;
BlockRef ::= ε ;
EnableEnum ::= (alpha::ε) | (beta::ε) ;
String ::= string() ;
--------------------metamodels::SoftwareQualityControl.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
BugStatusType ::= (bst_open::ε) | (bst_closed::ε) | (bst_skipped::ε) ;
--------------------metamodels::SyncCharts.bgf--------------------
Integer ::= integer() ;
TransitionKind ::= ε ;
Boolean ::= "true" | "false" ;
PseudoTransitionKind ::= ε ;
PseudoStateKind ::= ε ;
String ::= string() ;
--------------------metamodels::Table.bgf--------------------
String ::= string() ;
--------------------metamodels::TextualPathExp.bgf--------------------
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::Trace.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::TroposGoalAndPlanConcepts.bgf--------------------
String ::= string() ;
--------------------metamodels::UEML.bgf--------------------
RoleType ::= ε ;
--------------------metamodels::TroposIntegratingActorConcept.bgf--------------------
Role ::= ε ;
--------------------metamodels::UDDI_meta-model_fragment.bgf--------------------
IdentifierBag ::= ε ;
BusinessTemplate ::= ε ;
BusinessService ::= ε ;
OverviewDocument ::= ε ;
BusinessContact ::= ε ;
--------------------metamodels::UEMLExtended.bgf--------------------
MaterialResource ::= ε ;
RoleType ::= ε ;
--------------------metamodels::UEMLExtensionCapturingAgents.bgf--------------------
HumanResource ::= ε ;
Organisation ::= ε ;
Software ::= ε ;
MaterialResource ::= ε ;
Contract ::= ε ;
RoleType ::= ε ;
--------------------metamodels::UEMLExtensionCapturingSocialEffects.bgf--------------------
RoleType ::= ε ;
--------------------metamodels::UEMLExtensionDynamicAspects.bgf--------------------
RoleType ::= ε ;
--------------------metamodels::UEMLExtensionModelingAspects.bgf--------------------
RoleType ::= ε ;
--------------------metamodels::USECASE1.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
Scenario ::= ε ;
--------------------metamodels::USECASE2.bgf--------------------
Resource ::= ε ;
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::WSDL.bgf--------------------
String ::= string() ;
--------------------metamodels::UnifiedOntologyLanguage.bgf--------------------
Literal ::= ε ;
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::UnixFS.bgf--------------------
String ::= string() ;
--------------------metamodels::UsiXML-task.bgf--------------------
Integer ::= integer() ;
BinaryType ::= (Enabling::ε) | (Disabling::ε) | (SuspendResume::ε) | (OrderIndependence::ε) | (IndependentConcurrency::ε) | (ConcurencyWithInformationPassing::ε) | (UnderterministicChoice::ε) | (EnablingWithInformationPassing::ε) ;
UnaryType ::= (Optional::ε) | (Iteration::ε) | (finitIteration::ε) ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::WSLink.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::WTIP_SimpleClass.bgf--------------------
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::WTIP_SimpleRDBMS.bgf--------------------
String ::= string() ;
--------------------metamodels::WebApplications_AbstractModel.bgf--------------------
BusinessLogic ::= ε ;
DesignElement ::= ε ;
Integer ::= integer() ;
LogicInterface ::= ε ;
DesignTemplate ::= ε ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::WfMC.bgf--------------------
String ::= string() ;
--------------------metamodels::WebApplications_ConceptualModel.bgf--------------------
Integer ::= integer() ;
Alternative ::= ε ;
DesignModule ::= ε ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::WorkDefinitions.bgf--------------------
Step ::= ε ;
Boolean ::= "true" | "false" ;
--------------------metamodels::XAML-Perspective.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::XAML-ResourceDictionary.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::XMorphLanguage_abstractSyntax.bgf--------------------
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::XPDL-1.14.bgf--------------------
Integer ::= integer() ;
ProcessTypeKind ::= (None::ε) | (Private::ε) | (Abstract::ε) | (Collaboration::ε) ;
ModeKind ::= (Automatic::ε) | (Manual::ε) ;
AccessLevelKind ::= (Public::ε) | (Private::ε) ;
TriggerResultMessage ::= ε ;
GatewayTypeKind ::= (Xor::ε) | (Or::ε) | (Complex::ε) | (And::ε) ;
AssociationDirectionKind ::= (None::ε) | (To::ε) | (From::ε) | (Both::ε) ;
String ::= string() ;
ResultMultiple ::= ε ;
TriggerKind ::= (None::ε) | (Message::ε) | (Timer::ε) | (Rule::ε) | (Link::ε) | (Error::ε) | (Cancel::ε) | (Compensation::ε) | (Terminate::ε) | (Multiple::ε) ;
ExecutionKind ::= (Asynchr::ε) | (Synchr::ε) ;
TaskManual ::= ε ;
ParametrizedApplication ::= ε ;
TriggerMultiple ::= ε ;
Boolean ::= "true" | "false" ;
ImplementationKind ::= (WebService::ε) | (Other::ε) | (Unspecified::ε) ;
StatusKind ::= (None::ε) | (Ready::ε) | (Active::ε) | (Cancelled::ε) | (Aborting::ε) | (Aborted::ε) | (Completing::ε) | (Completed::ε) ;
OrientationKind ::= (Horizontal::ε) | (Vertical::ε) ;
TriggerIntermediateMultiple ::= ε ;
AdHocOrderingKind ::= (Sequential::ε) | (Parallel::ε) ;
--------------------metamodels::XUL-Interactorl.bgf--------------------
Integer ::= integer() ;
Orients ::= (horizontal::ε) | (vertical::ε) ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------metamodels::bmmOmg.bgf--------------------
String ::= string() ;
--------------------metamodels::cmt.owl.bgf--------------------
Integer ::= integer() ;
Preference ::= ε ;
Rejection ::= ε ;
SubjectArea ::= ε ;
Boolean ::= "true" | "false" ;
Acceptance ::= ε ;
String ::= string() ;
--------------------metamodels::confOf.owl.bgf--------------------
rejection_notification_email ::= ε ;
Contribution_co-author ::= ε ;
start_date_of_camera-ready_submission ::= ε ;
start_date_of_full_paper_submission ::= ε ;
Preference ::= ε ;
SubjectArea ::= ε ;
Acceptance ::= ε ;
Country ::= ε ;
start_date_of_abstract_submission ::= ε ;
Chair_URL ::= ε ;
end_date_of_camera-ready_submission ::= ε ;
end_date_of_full_paper_submission ::= ε ;
intensity ::= ε ;
String ::= string() ;
Detail ::= ε ;
acceptance_notification_email ::= ε ;
start_date_of_conference ::= ε ;
Reception ::= ε ;
topic ::= ε ;
University ::= ε ;
end_date_of_abstract_submission ::= ε ;
Rejection ::= ε ;
Review_Form_Setup ::= ε ;
Preview ::= ε ;
Late_paid_applicant ::= ε ;
classification ::= ε ;
Camera_ready_contribution ::= ε ;
EEnum ::= (high::ε) | (medium::ε) | (low::ε) | (very high::ε) | (male::ε) | (female::ε) ;
Rejection_Email ::= ε ;
Contact_Person_URL ::= ε ;
Inforamtion ::= ε ;
Contribution_1th-author ::= ε ;
Integer ::= integer() ;
Company ::= ε ;
Description ::= ε ;
Group_Email ::= ε ;
Invited_speaker ::= ε ;
lower_tier_reviewing_process ::= ε ;
Regular_Program_Committee_member ::= ε ;
Regular_Reviewer_URL ::= ε ;
Assistance ::= ε ;
end_date_of_conference ::= ε ;
institute ::= ε ;
Conference_fees ::= ε ;
Organizer ::= ε ;
Misc ::= ε ;
City ::= ε ;
Early_paid_applicant ::= ε ;
Boolean ::= "true" | "false" ;
Passive_conference_participant ::= ε ;
Notification_Email ::= ε ;
Feature_Request ::= ε ;
Trip ::= ε ;
Senior_Reviewer_URL ::= ε ;
Banquet ::= ε ;
date_of_notification ::= ε ;
phase_of_conference ::= ε ;
--------------------metamodels::confious.owl.bgf--------------------
rejection_notification_email ::= ε ;
Contribution_co-author ::= ε ;
start_date_of_camera-ready_submission ::= ε ;
start_date_of_full_paper_submission ::= ε ;
Preference ::= ε ;
SubjectArea ::= ε ;
Acceptance ::= ε ;
start_date_of_abstract_submission ::= ε ;
Chair_URL ::= ε ;
end_date_of_camera-ready_submission ::= ε ;
end_date_of_full_paper_submission ::= ε ;
intensity ::= ε ;
String ::= string() ;
Detail ::= ε ;
acceptance_notification_email ::= ε ;
start_date_of_conference ::= ε ;
topic ::= ε ;
end_date_of_abstract_submission ::= ε ;
Rejection ::= ε ;
Review_Form_Setup ::= ε ;
Preview ::= ε ;
Late_paid_applicant ::= ε ;
classification ::= ε ;
Camera_ready_contribution ::= ε ;
EEnum ::= (high::ε) | (medium::ε) | (low::ε) | (very high::ε) | (male::ε) | (female::ε) ;
Rejection_Email ::= ε ;
Contact_Person_URL ::= ε ;
Inforamtion ::= ε ;
Contribution_1th-author ::= ε ;
Integer ::= integer() ;
Description ::= ε ;
Group_Email ::= ε ;
lower_tier_reviewing_process ::= ε ;
Invited_speaker ::= ε ;
Regular_Program_Committee_member ::= ε ;
Regular_Reviewer_URL ::= ε ;
Assistance ::= ε ;
end_date_of_conference ::= ε ;
institute ::= ε ;
Organization ::= ε ;
Conference_fees ::= ε ;
Organizer ::= ε ;
Misc ::= ε ;
Early_paid_applicant ::= ε ;
Boolean ::= "true" | "false" ;
Passive_conference_participant ::= ε ;
Notification_Email ::= ε ;
Feature_Request ::= ε ;
Senior_Reviewer_URL ::= ε ;
date_of_notification ::= ε ;
phase_of_conference ::= ε ;
--------------------metamodels::crs_dr.owl.bgf--------------------
rejection_notification_email ::= ε ;
Contribution_co-author ::= ε ;
start_date_of_camera-ready_submission ::= ε ;
start_date_of_full_paper_submission ::= ε ;
Preference ::= ε ;
SubjectArea ::= ε ;
Acceptance ::= ε ;
Country ::= ε ;
start_date_of_abstract_submission ::= ε ;
Chair_URL ::= ε ;
end_date_of_camera-ready_submission ::= ε ;
end_date_of_full_paper_submission ::= ε ;
intensity ::= ε ;
String ::= string() ;
Detail ::= ε ;
acceptance_notification_email ::= ε ;
start_date_of_conference ::= ε ;
Reception ::= ε ;
topic ::= ε ;
University ::= ε ;
end_date_of_abstract_submission ::= ε ;
Rejection ::= ε ;
Review_Form_Setup ::= ε ;
Preview ::= ε ;
Late_paid_applicant ::= ε ;
classification ::= ε ;
Camera_ready_contribution ::= ε ;
EEnum ::= (high::ε) | (medium::ε) | (low::ε) | (very high::ε) | (male::ε) | (female::ε) ;
Rejection_Email ::= ε ;
Contact_Person_URL ::= ε ;
Inforamtion ::= ε ;
Contribution_1th-author ::= ε ;
Integer ::= integer() ;
Company ::= ε ;
Description ::= ε ;
Group_Email ::= ε ;
Invited_speaker ::= ε ;
lower_tier_reviewing_process ::= ε ;
Regular_Program_Committee_member ::= ε ;
Regular_Reviewer_URL ::= ε ;
Assistance ::= ε ;
end_date_of_conference ::= ε ;
institute ::= ε ;
Conference_fees ::= ε ;
Organizer ::= ε ;
Misc ::= ε ;
City ::= ε ;
Early_paid_applicant ::= ε ;
Boolean ::= "true" | "false" ;
Passive_conference_participant ::= ε ;
Notification_Email ::= ε ;
Feature_Request ::= ε ;
Trip ::= ε ;
Senior_Reviewer_URL ::= ε ;
Banquet ::= ε ;
date_of_notification ::= ε ;
phase_of_conference ::= ε ;
--------------------metamodels::deployment.bgf--------------------
String ::= string() ;
--------------------metamodels::edas.owl.bgf--------------------
start_date_of_camera-ready_submission ::= ε ;
start_date_of_full_paper_submission ::= ε ;
Preference ::= ε ;
Acceptance ::= ε ;
Country ::= ε ;
start_date_of_abstract_submission ::= ε ;
end_date_of_camera-ready_submission ::= ε ;
CoffeeBreak ::= ε ;
Detail ::= ε ;
end_date_of_abstract_submission ::= ε ;
Rejection ::= ε ;
Review_Form_Setup ::= ε ;
Late_paid_applicant ::= ε ;
EEnum ::= (male::ε) | (female::ε) | (high::ε) | (medium::ε) | (low::ε) | (very high::ε) ;
Camera_ready_contribution ::= ε ;
classification ::= ε ;
AcceptRating ::= ε ;
Contribution_1th-author ::= ε ;
ClosingTalk ::= ε ;
MealBreak ::= ε ;
Description ::= ε ;
ReviewForm ::= ε ;
Assistance ::= ε ;
NumericalReviewQuestion ::= ε ;
WeekRejectRating ::= ε ;
Conference_fees ::= ε ;
ComputerNetworksSecurityTopic ::= ε ;
ComputerNetworksEnterpriseTopic ::= ε ;
Early_paid_applicant ::= ε ;
PersonalPublicationHistory ::= ε ;
Passive_conference_participant ::= ε ;
Notification_Email ::= ε ;
Trip ::= ε ;
Senior_Reviewer_URL ::= ε ;
Excursion ::= ε ;
Banquet ::= ε ;
date_of_notification ::= ε ;
phase_of_conference ::= ε ;
rejection_notification_email ::= ε ;
Contribution_co-author ::= ε ;
RejectRating ::= ε ;
ConferenceSession ::= ε ;
SubjectArea ::= ε ;
ComputerNetworksMeasurementsTopic ::= ε ;
Chair_URL ::= ε ;
end_date_of_full_paper_submission ::= ε ;
intensity ::= ε ;
String ::= string() ;
TextualReviewQuestion ::= ε ;
acceptance_notification_email ::= ε ;
start_date_of_conference ::= ε ;
Reception ::= ε ;
topic ::= ε ;
ComputerNetworksManagementTopic ::= ε ;
Preview ::= ε ;
Rejection_Email ::= ε ;
Contact_Person_URL ::= ε ;
Inforamtion ::= ε ;
ComputerNetworksSwitchingTopic ::= ε ;
Integer ::= integer() ;
Group_Email ::= ε ;
Invited_speaker ::= ε ;
lower_tier_reviewing_process ::= ε ;
Regular_Program_Committee_member ::= ε ;
Regular_Reviewer_URL ::= ε ;
ComputerNetworksOpticalTopic ::= ε ;
end_date_of_conference ::= ε ;
ComputerNetworksSensorTopic ::= ε ;
institute ::= ε ;
AccpetIfRoomRating ::= ε ;
Organizer ::= ε ;
WelcomeTalk ::= ε ;
Misc ::= ε ;
ComputerNetworksAapplicationsTopic ::= ε ;
City ::= ε ;
Boolean ::= "true" | "false" ;
FreeTimeBreak ::= ε ;
Feature_Request ::= ε ;
--------------------metamodels::ekaw.owl.bgf--------------------
start_date_of_camera-ready_submission ::= ε ;
Invited_Speaker ::= ε ;
start_date_of_full_paper_submission ::= ε ;
Preference ::= ε ;
OC_Chair ::= ε ;
Acceptance ::= ε ;
Country ::= ε ;
start_date_of_abstract_submission ::= ε ;
end_date_of_camera-ready_submission ::= ε ;
CoffeeBreak ::= ε ;
Detail ::= ε ;
end_date_of_abstract_submission ::= ε ;
Demo_Chair ::= ε ;
Rejection ::= ε ;
Review_Form_Setup ::= ε ;
Conference_Trip ::= ε ;
Late_paid_applicant ::= ε ;
EEnum ::= (male::ε) | (female::ε) | (high::ε) | (medium::ε) | (low::ε) | (very high::ε) ;
Camera_ready_contribution ::= ε ;
classification ::= ε ;
AcceptRating ::= ε ;
Contribution_1th-author ::= ε ;
ClosingTalk ::= ε ;
Workshop_Session ::= ε ;
Late-Registered_Participant ::= ε ;
Conference_Proceedings ::= ε ;
MealBreak ::= ε ;
Description ::= ε ;
ReviewForm ::= ε ;
PC_Chair ::= ε ;
Assistance ::= ε ;
NumericalReviewQuestion ::= ε ;
Industrial_Session ::= ε ;
WeekRejectRating ::= ε ;
Conference_fees ::= ε ;
ComputerNetworksSecurityTopic ::= ε ;
ComputerNetworksEnterpriseTopic ::= ε ;
Early_paid_applicant ::= ε ;
PersonalPublicationHistory ::= ε ;
Passive_conference_participant ::= ε ;
Extended_abstract ::= ε ;
Notification_Email ::= ε ;
Trip ::= ε ;
Senior_Reviewer_URL ::= ε ;
Excursion ::= ε ;
Banquet ::= ε ;
date_of_notification ::= ε ;
Early-Registered_Participant ::= ε ;
phase_of_conference ::= ε ;
Conference_Banquet ::= ε ;
rejection_notification_email ::= ε ;
Contribution_co-author ::= ε ;
RejectRating ::= ε ;
Demo_Session ::= ε ;
ConferenceSession ::= ε ;
SubjectArea ::= ε ;
ComputerNetworksMeasurementsTopic ::= ε ;
Chair_URL ::= ε ;
end_date_of_full_paper_submission ::= ε ;
Regular_Session ::= ε ;
intensity ::= ε ;
String ::= string() ;
TextualReviewQuestion ::= ε ;
acceptance_notification_email ::= ε ;
start_date_of_conference ::= ε ;
Reception ::= ε ;
ComputerNetworksManagementTopic ::= ε ;
Preview ::= ε ;
Rejection_Email ::= ε ;
Tutorial_Chair ::= ε ;
Poster_Session ::= ε ;
Contact_Person_URL ::= ε ;
Inforamtion ::= ε ;
ComputerNetworksSwitchingTopic ::= ε ;
Integer ::= integer() ;
Session_Chair ::= ε ;
Group_Email ::= ε ;
Invited_speaker ::= ε ;
lower_tier_reviewing_process ::= ε ;
Regular_Program_Committee_member ::= ε ;
Regular_Reviewer_URL ::= ε ;
ComputerNetworksOpticalTopic ::= ε ;
end_date_of_conference ::= ε ;
ComputerNetworksSensorTopic ::= ε ;
institute ::= ε ;
AccpetIfRoomRating ::= ε ;
Organizer ::= ε ;
WelcomeTalk ::= ε ;
Workshop_Chair ::= ε ;
Misc ::= ε ;
ComputerNetworksAapplicationsTopic ::= ε ;
City ::= ε ;
SC_Member ::= ε ;
Boolean ::= "true" | "false" ;
FreeTimeBreak ::= ε ;
Feature_Request ::= ε ;
--------------------metamodels::iasted.owl.bgf--------------------
start_date_of_camera-ready_submission ::= ε ;
Invited_Speaker ::= ε ;
Preference ::= ε ;
Welcome_address ::= ε ;
Refusing_manuscript ::= ε ;
Conference_hotel ::= ε ;
Coffee_break ::= ε ;
Rejection ::= ε ;
Renting ::= ε ;
Late_paid_applicant ::= ε ;
Nonauthor_registration_fee ::= ε ;
EEnum ::= (male::ε) | (female::ε) | (high::ε) | (medium::ε) | (low::ε) | (very high::ε) ;
classification ::= ε ;
Author_attendee_book_registration_fee ::= ε ;
AcceptRating ::= ε ;
IASTED_member ::= ε ;
ClosingTalk ::= ε ;
Workshop_Session ::= ε ;
Late-Registered_Participant ::= ε ;
Description ::= ε ;
MealBreak ::= ε ;
Conference_Proceedings ::= ε ;
Shuttle_bus ::= ε ;
Technical_commitee ::= ε ;
Conference_Hiker ::= ε ;
Departure ::= ε ;
Listener ::= ε ;
Industrial_Session ::= ε ;
Conference_fees ::= ε ;
Conference_state ::= ε ;
ComputerNetworksEnterpriseTopic ::= ε ;
Early_paid_applicant ::= ε ;
Passive_conference_participant ::= ε ;
Conference_airport ::= ε ;
Receiving_manuscript ::= ε ;
Senior_Reviewer_URL ::= ε ;
Excursion ::= ε ;
Presenter_city ::= ε ;
Plenary_lecture ::= ε ;
date_of_notification ::= ε ;
Departure_tax ::= ε ;
Early-Registered_Participant ::= ε ;
phase_of_conference ::= ε ;
Video_cassette_player ::= ε ;
Time_zone ::= ε ;
Single_hotel_room ::= ε ;
Hotel_presenter ::= ε ;
Contribution_co-author ::= ε ;
Session_chair ::= ε ;
Introduction_of_speaker ::= ε ;
ConferenceSession ::= ε ;
SubjectArea ::= ε ;
Nonmember_registration_fee ::= ε ;
ComputerNetworksMeasurementsTopic ::= ε ;
Coctail_reception ::= ε ;
Dinner_banquet ::= ε ;
Chair_URL ::= ε ;
Car ::= ε ;
Regular_Session ::= ε ;
start_date_of_conference ::= ε ;
Reception ::= ε ;
Full_day_tour ::= ε ;
LCD_projector ::= ε ;
Presenter_house ::= ε ;
Cd_proceening ::= ε ;
Preview ::= ε ;
Rejection_Email ::= ε ;
Presenter_university ::= ε ;
Student_registration_fee ::= ε ;
Poster_Session ::= ε ;
Tutorial_Chair ::= ε ;
Inforamtion ::= ε ;
Trip_day ::= ε ;
Hotel_registration_form ::= ε ;
Session_Chair ::= ε ;
Group_Email ::= ε ;
lower_tier_reviewing_process ::= ε ;
Regular_Program_Committee_member ::= ε ;
ComputerNetworksOpticalTopic ::= ε ;
end_date_of_conference ::= ε ;
Double_hotel_room ::= ε ;
AccpetIfRoomRating ::= ε ;
Sponsor_city ::= ε ;
Conference_city ::= ε ;
One_day_presenter ::= ε ;
Accepting_manuscript ::= ε ;
SC_Member ::= ε ;
Modelling ::= ε ;
Value_added_tax ::= ε ;
start_date_of_full_paper_submission ::= ε ;
OC_Chair ::= ε ;
Acceptance ::= ε ;
Credit_card ::= ε ;
Country ::= ε ;
start_date_of_abstract_submission ::= ε ;
end_date_of_camera-ready_submission ::= ε ;
CoffeeBreak ::= ε ;
Detail ::= ε ;
Final_manuscript ::= ε ;
Bank_transfer ::= ε ;
end_date_of_abstract_submission ::= ε ;
Worker_non_speaker ::= ε ;
Book_proceeding ::= ε ;
Registration_form ::= ε ;
Student_non_speaker ::= ε ;
Demo_Chair ::= ε ;
Review_Form_Setup ::= ε ;
Conference_Trip ::= ε ;
Camera_ready_contribution ::= ε ;
Contribution_1th-author ::= ε ;
ReviewForm ::= ε ;
Hotel_fee ::= ε ;
Sponsor_company_house ::= ε ;
PC_Chair ::= ε ;
Student_lecturer ::= ε ;
Assistance ::= ε ;
Conference_building ::= ε ;
NumericalReviewQuestion ::= ε ;
WeekRejectRating ::= ε ;
ComputerNetworksSecurityTopic ::= ε ;
PersonalPublicationHistory ::= ε ;
Notification_Email ::= ε ;
Trip ::= ε ;
Banquet ::= ε ;
Cheque ::= ε ;
Conference_Banquet ::= ε ;
Taxi ::= ε ;
rejection_notification_email ::= ε ;
RejectRating ::= ε ;
Computer ::= ε ;
Demo_Session ::= ε ;
Worker_lecturer ::= ε ;
end_date_of_full_paper_submission ::= ε ;
intensity ::= ε ;
String ::= string() ;
Currency ::= ε ;
TextualReviewQuestion ::= ε ;
acceptance_notification_email ::= ε ;
Author_attendee_cd_registration_fee ::= ε ;
ComputerNetworksManagementTopic ::= ε ;
Trip_city ::= ε ;
Contact_Person_URL ::= ε ;
Fee_for_extra_trip ::= ε ;
ComputerNetworksSwitchingTopic ::= ε ;
Conference_restaurant ::= ε ;
Integer ::= integer() ;
Speaker_lecture ::= ε ;
Technic_activity ::= ε ;
Invited_speaker ::= ε ;
Presenter_state ::= ε ;
Regular_Reviewer_URL ::= ε ;
ComputerNetworksSensorTopic ::= ε ;
institute ::= ε ;
IASTED_non_member ::= ε ;
One_conference_day ::= ε ;
Overhead_projector ::= ε ;
Organizer ::= ε ;
WelcomeTalk ::= ε ;
Workshop_Chair ::= ε ;
Sponsor_state ::= ε ;
Misc ::= ε ;
Author_information_form ::= ε ;
ComputerNetworksAapplicationsTopic ::= ε ;
Boolean ::= "true" | "false" ;
Initial_manuscipt ::= ε ;
FreeTimeBreak ::= ε ;
Feature_Request ::= ε ;
Van ::= ε ;
Simulating ::= ε ;
Memeber_registration_fee ::= ε ;
--------------------metamodels::ifc2x3.bgf--------------------
IfcFlowStorageDevice ::= ε ;
IfcSoundProperties ::= IsAttenuating::α SoundScale::α SoundValues::α ;
IfcStructuralLoadSingleForce ::= ForceX::α ForceY::α ForceZ::α MomentX::α MomentY::α MomentZ::α ;
IfcRamp ::= ShapeType::α ;
IfcArithmeticOperatorEnum ::= (SUBTRACT::ε) | (MULTIPLY::ε) | (DIVIDE::ε) | (ADD::ε) ;
IfcHeatExchangerTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SHELLANDTUBE::ε) | (PLATE::ε) ;
IfcBuildingStorey ::= Elevation::α ;
IfcElectricalBaseProperties ::= ElectricCurrentType::α InputVoltage::α InputFrequency::α FullLoadCurrent::α MinimumCircuitCurrent::α MaximumPowerInput::α RatedPowerInput::α InputPhase::α ;
IfcOrganizationRelationship ::= Name::α Description::α RelatingOrganization::α (RelatedOrganizations::α)+ ;
IfcPlate ::= ε ;
IfcAsymmetricIShapeProfileDef ::= TopFlangeWidth::α TopFlangeThickness::α TopFlangeFilletRadius::α CentreOfGravityInY::α ;
IfcTShapeProfileDef ::= Depth::α FlangeWidth::α WebThickness::α FlangeThickness::α FilletRadius::α FlangeEdgeRadius::α WebEdgeRadius::α WebSlope::α FlangeSlope::α CentreOfGravityInY::α ;
IfcFuelProperties ::= CombustionTemperature::α CarbonContent::α LowerHeatingValue::α HigherHeatingValue::α ;
IfcQuantityVolume ::= VolumeValue::α ;
IfcRelSchedulesCostItems ::= ε ;
IfcDraughtingPreDefinedColour ::= ε ;
IfcValveTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (STOPCOCK::ε) | (STEAMTRAP::ε) | (SAFETYCUTOFF::ε) | (REGULATING::ε) | (PRESSURERELIEF::ε) | (PRESSUREREDUCING::ε) | (MIXING::ε) | (ISOLATING::ε) | (GASTAP::ε) | (GASCOCK::ε) | (FLUSHING::ε) | (FAUCET::ε) | (DOUBLEREGULATING::ε) | (DOUBLECHECK::ε) | (DRAWOFFCOCK::ε) | (DIVERTING::ε) | (COMMISSIONING::ε) | (CHECK::ε) | (CHANGEOVER::ε) | (ANTIVACUUM::ε) | (AIRRELEASE::ε) ;
IfcShellBasedSurfaceModel ::= (SbsmBoundary::α)+ ;
IfcConstructionResource ::= ResourceIdentifier::α ResourceGroup::α ResourceConsumption::α BaseQuantity::α ;
IfcActorRole ::= Role::α UserDefinedRole::α Description::α ;
IfcRoundedRectangleProfileDef ::= RoundingRadius::α ;
IfcDistributionChamberElementType ::= PredefinedType::α ;
IfcWorkControlTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (PLANNED::ε) | (BASELINE::ε) | (ACTUAL::ε) ;
IfcDerivedUnitElement ::= Unit::α Exponent::α ;
IfcQuantityTime ::= TimeValue::α ;
IfcChamferEdgeFeature ::= Width::α Height::α ;
IfcDefinedSymbol ::= Definition::α Target::α ;
IfcCsgSolid ::= TreeRootExpression::α ;
IfcLine ::= Pnt::α Dir::α ;
IfcTextPath ::= (DOWN::ε) | (UP::ε) | (RIGHT::ε) | (LEFT::ε) ;
IfcUnitAssignment ::= (Units::α)+ ;
IfcMetricValueSelect ::= IfcDateTimeSelectvalue::α IfcTextvalue::α IfcCostValuevalue::α IfcTimeSeriesvalue::α IfcTablevalue::α IfcMeasureWithUnitvalue::α ;
IfcStructuralPlanarAction ::= ProjectedOrTrue::α ;
IfcRelConnectsStructuralMember ::= RelatingStructuralMember::α RelatedStructuralConnection::α AppliedCondition::α AdditionalConditions::α ConditionCoordinateSystem::α SupportedLength::α ;
IfcEdgeFeature ::= FeatureLength::α ;
IfcSectionProperties ::= StartProfile::α EndProfile::α SectionType::α ;
IfcFlowController ::= ε ;
IfcDiscreteAccessoryType ::= ε ;
IfcDamperType ::= PredefinedType::α ;
IfcRelAssociatesApproval ::= RelatingApproval::α ;
IfcAsset ::= OriginalValue::α CurrentValue::α TotalReplacementCost::α Owner::α User::α ResponsiblePerson::α IncorporationDate::α DepreciatedValue::α AssetID::α ;
IfcPumpTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (VERTICALTURBINE::ε) | (VERTICALINLINE::ε) | (SPLITCASE::ε) | (ENDSUCTION::ε) | (CIRCULATOR::ε) ;
IfcAddressTypeEnum ::= (USERDEFINED::ε) | (DISTRIBUTIONPOINT::ε) | (HOME::ε) | (SITE::ε) | (OFFICE::ε) ;
IfcTopologicalRepresentationItem ::= ε ;
IfcStructuralLoad ::= Name::α ;
IfcRelOverridesProperties ::= (OverridingProperties::α)+ ;
IfcRectangleProfileDef ::= XDim::α YDim::α ;
IfcRailingType ::= PredefinedType::α ;
IfcVibrationIsolatorType ::= PredefinedType::α ;
IfcSizeSelect ::= IfcPositiveRatioMeasurevalue::α IfcNormalisedRatioMeasurevalue::α IfcPositiveLengthMeasurevalue::α IfcDescriptiveMeasurevalue::α IfcLengthMeasurevalue::α IfcRatioMeasurevalue::α ;
IfcAnalysisTheoryTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (FULL_NONLINEAR_THEORY::ε) | (THIRD_ORDER_THEORY::ε) | (SECOND_ORDER_THEORY::ε) | (FIRST_ORDER_THEORY::ε) ;
IfcBSplineCurve ::= Degree::α CurveForm::α ClosedCurve::α SelfIntersect::α ControlPointsList::α ;
IfcTimeSeriesSchedule ::= (ApplicableDates::α)+ TimeSeries::α TimeSeriesScheduleType::α ;
IfcCartesianTransformationOperator3D ::= Axis3::α ;
IfcSweptAreaSolid ::= SweptArea::α Position::α ;
IfcSurfaceStyleRefraction ::= RefractionIndex::α DispersionFactor::α ;
IfcTrimmingSelect ::= IfcParameterValuevalue::α IfcCartesianPointvalue::α ;
IfcMove ::= MoveFrom::α MoveTo::α (PunchList::α)+ ;
IfcQuantityLength ::= LengthValue::α ;
IfcControl ::= Controls::α ;
IfcLibraryReference ::= ReferenceIntoLibrary::α ;
IfcBoundedSurface ::= ε ;
IfcPreDefinedDimensionSymbol ::= ε ;
IfcFlowTerminal ::= ε ;
IfcFlowMeterType ::= PredefinedType::α ;
IfcOpticalMaterialProperties ::= VisibleTransmittance::α SolarTransmittance::α ThermalIrTransmittance::α ThermalIrEmissivityBack::α ThermalIrEmissivityFront::α VisibleReflectanceBack::α VisibleReflectanceFront::α SolarReflectanceFront::α SolarReflectanceBack::α ;
IfcEvaporativeCoolerType ::= PredefinedType::α ;
IfcPerformanceHistory ::= LifeCyclePhase::α ;
IfcVector ::= Orientation::α Magnitude::α ;
IfcResourceConsumptionEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (NOTOCCUPIED::ε) | (PARTIALLYOCCUPIED::ε) | (OCCUPIED::ε) | (NOTCONSUMED::ε) | (PARTIALLYCONSUMED::ε) | (CONSUMED::ε) ;
IfcRelConnectsWithRealizingElements ::= (RealizingElements::α)+ ConnectionType::α ;
IfcPropertySet ::= (HasProperties::α)+ ;
IfcChillerTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (HEATRECOVERY::ε) | (WATERCOOLED::ε) | (AIRCOOLED::ε) ;
IfcBSplineCurveForm ::= (UNSPECIFIED::ε) | (HYPERBOLIC_ARC::ε) | (PARABOLIC_ARC::ε) | (ELLIPTIC_ARC::ε) | (CIRCULAR_ARC::ε) | (POLYLINE_FORM::ε) ;
IfcAlarmTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (WHISTLE::ε) | (SIREN::ε) | (MANUALPULLBOX::ε) | (LIGHT::ε) | (BREAKGLASSBUTTON::ε) | (BELL::ε) ;
IfcVertexPoint ::= VertexGeometry::α ;
IfcStructuralPointAction ::= ε ;
IfcExternallyDefinedSymbol ::= ε ;
IfcSurfaceCurveSweptAreaSolid ::= StartParam::α EndParam::α Directrix::α ReferenceSurface::α ;
IfcCartesianTransformationOperator2D ::= ε ;
IfcLightSourcePositional ::= Radius::α ConstantAttenuation::α DistanceAttenuation::α QuadricAttenuation::α Position::α ;
IfcSlabTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (BASESLAB::ε) | (LANDING::ε) | (ROOF::ε) | (FLOOR::ε) ;
IfcContextDependentUnit ::= Name::α ;
IfcBuilding ::= ElevationOfRefHeight::α ElevationOfTerrain::α BuildingAddress::α ;
IfcStructuralLoadStatic ::= ε ;
IfcRelConnectsPorts ::= RelatingPort::α RelatedPort::α RealizingElement::α ;
IfcBeam ::= ε ;
IfcFlowTreatmentDeviceType ::= ε ;
IfcDoor ::= OverallHeight::α OverallWidth::α ;
IfcDuctSilencerType ::= PredefinedType::α ;
IfcZone ::= ε ;
IfcDimensionCurve ::= ε ;
IfcCableCarrierSegmentTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (CONDUITSEGMENT::ε) | (CABLETRUNKINGSEGMENT::ε) | (CABLETRAYSEGMENT::ε) | (CABLELADDERSEGMENT::ε) ;
IfcStructuralReaction ::= Causes::α ;
IfcFeatureElement ::= ε ;
IfcElectricGeneratorTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) ;
IfcDoorStyleOperationEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (ROLLINGUP::ε) | (REVOLVING::ε) | (DOUBLE_DOOR_FOLDING::ε) | (FOLDING_TO_RIGHT::ε) | (FOLDING_TO_LEFT::ε) | (DOUBLE_DOOR_SLIDING::ε) | (SLIDING_TO_RIGHT::ε) | (SLIDING_TO_LEFT::ε) | (DOUBLE_DOOR_DOUBLE_SWING::ε) | (DOUBLE_SWING_RIGHT::ε) | (DOUBLE_SWING_LEFT::ε) | (DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT::ε) | (DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT::ε) | (DOUBLE_DOOR_SINGLE_SWING::ε) | (SINGLE_SWING_RIGHT::ε) | (SINGLE_SWING_LEFT::ε) ;
IfcFillAreaStyleTileSymbolWithStyle ::= Symbol::α ;
IfcProjectionElement ::= ε ;
IfcCsgPrimitive3D ::= Position::α ;
IfcProductDefinitionShape ::= HasShapeAspects::α ;
IfcPostalAddress ::= InternalLocation::α (AddressLines::α)+ PostalBox::α Town::α Region::α PostalCode::α Country::α ;
IfcTopologyRepresentation ::= ε ;
IfcStructuralConnection ::= ConnectsStructuralMembers::α AppliedCondition::α ;
IfcFlowSegment ::= ε ;
IfcRoleEnum ::= (USERDEFINED::ε) | (RESELLER::ε) | (FIELDCONSTRUCTIONMANAGER::ε) | (CONSTRUCTIONMANAGER::ε) | (CONSULTANT::ε) | (OWNER::ε) | (ENGINEER::ε) | (COMISSIONINGENGINEER::ε) | (CIVILENGINEER::ε) | (FACILITIESMANAGER::ε) | (PROJECTMANAGER::ε) | (ELECTRICALENGINEER::ε) | (MECHANICALENGINEER::ε) | (BUILDINGOPERATOR::ε) | (BUILDINGOWNER::ε) | (CLIENT::ε) | (COSTENGINEER::ε) | (STRUCTURALENGINEER::ε) | (ARCHITECT::ε) | (SUBCONTRACTOR::ε) | (CONTRACTOR::ε) | (MANUFACTURER::ε) | (SUPPLIER::ε) ;
IfcPipeSegmentTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SPOOL::ε) | (GUTTER::ε) | (RIGIDSEGMENT::ε) | (FLEXIBLESEGMENT::ε) ;
IfcSlabType ::= PredefinedType::α ;
IfcPhysicalSimpleQuantity ::= Unit::α ;
IfcFlowMovingDevice ::= ε ;
IfcDoorLiningProperties ::= LiningDepth::α LiningThickness::α ThresholdDepth::α ThresholdThickness::α TransomThickness::α TransomOffset::α LiningOffset::α ThresholdOffset::α CasingThickness::α CasingDepth::α ShapeAspectStyle::α ;
IfcCableSegmentType ::= PredefinedType::α ;
IfcRampTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SPIRAL_RAMP::ε) | (HALF_TURN_RAMP::ε) | (TWO_QUARTER_TURN_RAMP::ε) | (QUARTER_TURN_RAMP::ε) | (TWO_STRAIGHT_RUN_RAMP::ε) | (STRAIGHT_RUN_RAMP::ε) ;
IfcRelFlowControlElements ::= (RelatedControlElements::α)+ RelatingFlowElement::α ;
IfcInternalOrExternalEnum ::= (NOTDEFINED::ε) | (EXTERNAL::ε) | (INTERNAL::ε) ;
IfcRelAssignsToControl ::= RelatingControl::α ;
IfcShapeModel ::= OfShapeAspect::α ;
IfcRelAssociatesClassification ::= RelatingClassification::α ;
IfcPlateTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SHEET::ε) | (CURTAIN_PANEL::ε) ;
IfcProjectedOrTrueLengthEnum ::= (TRUE_LENGTH::ε) | (PROJECTED_LENGTH::ε) ;
IfcElectricGeneratorType ::= PredefinedType::α ;
IfcCostSchedule ::= Status::α ID::α PredefinedType::α SubmittedBy::α PreparedBy::α SubmittedOn::α (TargetUsers::α)+ UpdateDate::α ;
IfcSpecularHighlightSelect ::= IfcSpecularRoughnessvalue::α IfcSpecularExponentvalue::α ;
IfcVibrationIsolatorTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SPRING::ε) | (COMPRESSION::ε) ;
IfcColourOrFactor ::= IfcNormalisedRatioMeasurevalue::α IfcColourRgbvalue::α ;
IfcStyleModel ::= ε ;
IfcPropertyTableValue ::= (DefiningValues::α)+ (DefinedValues::α)+ DefiningUnit::α DefinedUnit::α Expression::α ;
IfcActuatorTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (THERMOSTATICACTUATOR::ε) | (PNEUMATICACTUATOR::ε) | (HYDRAULICACTUATOR::ε) | (HANDOPERATEDACTUATOR::ε) | (ELECTRICACTUATOR::ε) ;
IfcPresentationLayerWithStyle ::= LayerOn::α LayerFrozen::α LayerBlocked::α (LayerStyles::α)+ ;
IfcIShapeProfileDef ::= OverallWidth::α OverallDepth::α WebThickness::α FlangeThickness::α FilletRadius::α ;
IfcFilterTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (WATERFILTER::ε) | (STRAINER::ε) | (OILFILTER::ε) | (ODORFILTER::ε) | (AIRPARTICLEFILTER::ε) ;
IfcFlowSegmentType ::= ε ;
IfcGroup ::= IsGroupedBy::α ;
IfcDirection ::= DirectionRatios::α ;
IfcCooledBeamTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (PASSIVE::ε) | (ACTIVE::ε) ;
IfcServiceLifeFactorTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (G_MAINTENANCELEVEL::ε) | (F_INUSECONDITIONS::ε) | (E_OUTDOORENVIRONMENT::ε) | (D_INDOORENVIRONMENT::ε) | (C_WORKEXECUTIONLEVEL::ε) | (B_DESIGNLEVEL::ε) | (A_QUALITYOFCOMPONENTS::ε) ;
IfcPolygonalBoundedHalfSpace ::= Position::α PolygonalBoundary::α ;
IfcRectangleHollowProfileDef ::= WallThickness::α InnerFilletRadius::α OuterFilletRadius::α ;
IfcCoilType ::= PredefinedType::α ;
IfcMappedItem ::= MappingSource::α MappingTarget::α ;
IfcAirToAirHeatRecoveryTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (THERMOSIPHONCOILTYPEHEATEXCHANGERS::ε) | (THERMOSIPHONSEALEDTUBEHEATEXCHANGERS::ε) | (TWINTOWERENTHALPYRECOVERYLOOPS::ε) | (HEATPIPE::ε) | (RUNAROUNDCOILLOOP::ε) | (ROTARYWHEEL::ε) | (FIXEDPLATEPARALLELFLOWEXCHANGER::ε) | (FIXEDPLATECROSSFLOWEXCHANGER::ε) | (FIXEDPLATECOUNTERFLOWEXCHANGER::ε) ;
IfcPlateType ::= PredefinedType::α ;
IfcQuantityWeight ::= WeightValue::α ;
IfcProduct ::= ReferencedBy::α ObjectPlacement::α Representation::α ReferencedInStructures::α ContainedInStructure::α ;
IfcProxy ::= ProxyType::α Tag::α ;
IfcFanType ::= PredefinedType::α ;
IfcDuctSegmentType ::= PredefinedType::α ;
IfcMaterialLayer ::= LayerThickness::α IsVentilated::α ToMaterialLayerSet::α Material::α ;
IfcMeasureWithUnit ::= ValueComponent::α UnitComponent::α ;
IfcCircleHollowProfileDef ::= WallThickness::α ;
IfcSIUnit ::= Prefix::α Name::α ;
IfcTextStyleTextModel ::= TextAlign::α TextDecoration::α TextTransform::α TextIndent::α LetterSpacing::α WordSpacing::α LineHeight::α ;
IfcStructuralLoadLinearForce ::= LinearForceX::α LinearForceY::α LinearForceZ::α LinearMomentX::α LinearMomentY::α LinearMomentZ::α ;
IfcColourRgb ::= Red::α Green::α Blue::α ;
IfcLampTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TUNGSTENFILAMENT::ε) | (METALHALIDE::ε) | (HIGHPRESSURESODIUM::ε) | (HIGHPRESSUREMERCURY::ε) | (FLUORESCENT::ε) | (COMPACTFLUORESCENT::ε) ;
IfcLaborResource ::= SkillSet::α ;
IfcDimensionExtentUsage ::= (TARGET::ε) | (ORIGIN::ε) ;
IfcGeometricRepresentationSubContext ::= TargetScale::α TargetView::α UserDefinedTargetView::α ParentContext::α ;
IfcPlane ::= ε ;
IfcRelDefinesByType ::= RelatingType::α ;
IfcCircle ::= Radius::α ;
IfcSurfaceTextureEnum ::= (NOTDEFINED::ε) | (TRANSPARENCYMAP::ε) | (TEXTURE::ε) | (SPECULAR::ε) | (SHININESS::ε) | (SELFILLUMINATION::ε) | (REFLECTION::ε) | (OPACITY::ε) | (BUMP::ε) ;
IfcTrapeziumProfileDef ::= BottomXDim::α TopXDim::α YDim::α TopXOffset::α ;
IfcDuctSilencerTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (ROUND::ε) | (RECTANGULAR::ε) | (FLATOVAL::ε) ;
IfcRelAssociatesProfileProperties ::= ProfileOrientation::α RelatingProfileProperties::α ProfileSectionLocation::α ;
IfcDistributionElement ::= ε ;
IfcManifoldSolidBrep ::= Outer::α ;
IfcPropertyBoundedValue ::= UpperBoundValue::α LowerBoundValue::α Unit::α ;
IfcSite ::= RefLatitude::α RefLongitude::α RefElevation::α LandTitleNumber::α SiteAddress::α ;
IfcConstructionMaterialResource ::= (Suppliers::α)+ UsageRatio::α ;
IfcGrid ::= (UAxes::α)+ (VAxes::α)+ (WAxes::α)+ ;
IfcFlowControllerType ::= ε ;
IfcAirToAirHeatRecoveryType ::= PredefinedType::α ;
IfcZShapeProfileDef ::= Depth::α FlangeWidth::α WebThickness::α FlangeThickness::α FilletRadius::α EdgeRadius::α ;
IfcRepresentationMap ::= MapUsage::α MappingOrigin::α MappedRepresentation::α ;
IfcApproval ::= Description::α ApprovalStatus::α ApprovalLevel::α ApprovalQualifier::α Name::α Identifier::α Actors::α IsRelatedWith::α Relates::α ApprovalDateTime::α ;
IfcDistributionFlowElement ::= HasControlElements::α ;
IfcMaterialProperties ::= Material::α ;
IfcProtectiveDeviceType ::= PredefinedType::α ;
IfcOccupantTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TENANT::ε) | (OWNER::ε) | (LETTINGAGENT::ε) | (LESSOR::ε) | (LESSEE::ε) | (ASSIGNOR::ε) | (ASSIGNEE::ε) ;
IfcBoilerType ::= PredefinedType::α ;
IfcConstraintRelationship ::= Name::α Description::α RelatingConstraint::α (RelatedConstraints::α)+ ;
IfcOrganization ::= Id::α Name::α Description::α IsRelatedBy::α Relates::α Engages::α (Roles::α)+ (Addresses::α)+ ;
IfcSpaceHeaterTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (UNITHEATER::ε) | (FINNEDTUBEUNIT::ε) | (BASEBOARDHEATER::ε) | (CONVECTOR::ε) | (TUBULARRADIATOR::ε) | (PANELRADIATOR::ε) | (SECTIONALRADIATOR::ε) ;
IfcColumnType ::= PredefinedType::α ;
IfcMechanicalConcreteMaterialProperties ::= CompressiveStrength::α MaxAggregateSize::α AdmixturesDescription::α Workability::α ProtectivePoreRatio::α WaterImpermeability::α ;
IfcDateAndTime ::= DateComponent::α TimeComponent::α ;
IfcFooting ::= PredefinedType::α ;
IfcCartesianPoint ::= Coordinates::α ;
IfcCompositeCurve ::= (Segments::α)+ SelfIntersect::α ;
IfcChangeActionEnum ::= (MODIFIEDDELETED::ε) | (MODIFIEDADDED::ε) | (DELETED::ε) | (ADDED::ε) | (MODIFIED::ε) | (NOCHANGE::ε) ;
IfcCraneRailFShapeProfileDef ::= OverallHeight::α HeadWidth::α Radius::α HeadDepth2::α HeadDepth3::α WebThickness::α BaseDepth1::α BaseDepth2::α CentreOfGravityInY::α ;
IfcTimeSeries ::= Name::α Description::α TimeSeriesDataType::α DataOrigin::α UserDefinedDataOrigin::α DocumentedBy::α StartTime::α EndTime::α Unit::α ;
IfcFlowTerminalType ::= ε ;
IfcReinforcingBar ::= NominalDiameter::α CrossSectionArea::α BarLength::α BarRole::α BarSurface::α ;
IfcTubeBundleTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (FINNED::ε) ;
IfcSurface ::= ε ;
IfcSectionReinforcementProperties ::= LongitudinalStartPosition::α LongitudinalEndPosition::α TransversePosition::α ReinforcementRole::α SectionDefinition::α (CrossSectionReinforcementDefinitions::α)+ ;
IfcRelAssignsToProduct ::= RelatingProduct::α ;
IfcStructuralLoadSingleForceWarping ::= WarpingMoment::α ;
IfcComplexProperty ::= (HasProperties::α)+ UsageName::α ;
IfcElementarySurface ::= Position::α ;
IfcPropertyListValue ::= (ListValues::α)+ Unit::α ;
IfcConic ::= Position::α ;
IfcRelConnectsElements ::= ConnectionGeometry::α RelatingElement::α RelatedElement::α ;
IfcThermalLoadTypeEnum ::= (NOTDEFINED::ε) | (RADIANT::ε) | (LATENT::ε) | (SENSIBLE::ε) ;
IfcRoundedEdgeFeature ::= Radius::α ;
IfcReinforcingElement ::= SteelGrade::α ;
IfcRibPlateDirectionEnum ::= (DIRECTION_Y::ε) | (DIRECTION_X::ε) ;
IfcTransformerTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (VOLTAGE::ε) | (FREQUENCY::ε) | (CURRENT::ε) ;
IfcStairFlightTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (FREEFORM::ε) | (CURVED::ε) | (SPIRAL::ε) | (WINDER::ε) | (STRAIGHT::ε) ;
IfcOutletTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (POWEROUTLET::ε) | (COMMUNICATIONSOUTLET::ε) | (AUDIOVISUALOUTLET::ε) ;
IfcFireSuppressionTerminalType ::= PredefinedType::α ;
IfcSurfaceStyle ::= Styles::α Side::α ;
IfcOpeningElement ::= HasFillings::α ;
IfcRelAggregates ::= ε ;
IfcCurveStyleFontAndScaling ::= Name::α CurveFontScaling::α CurveFont::α ;
IfcEdgeLoop ::= (EdgeList::α)+ ;
IfcAirTerminalBoxTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (VARIABLEFLOWPRESSUREINDEPENDANT::ε) | (VARIABLEFLOWPRESSUREDEPENDANT::ε) | (CONSTANTFLOW::ε) ;
IfcRepresentationItem ::= StyledByItem::α ;
IfcBuildingElementProxyType ::= PredefinedType::α ;
IfcRailingTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (BALUSTRADE::ε) | (GUARDRAIL::ε) | (HANDRAIL::ε) ;
IfcBoundingBox ::= XDim::α YDim::α ZDim::α Corner::α ;
IfcCompositeProfileDef ::= Profiles::α Label::α ;
IfcCableCarrierFittingTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TEE::ε) | (REDUCER::ε) | (CROSS::ε) | (BEND::ε) ;
IfcPipeSegmentType ::= PredefinedType::α ;
IfcLibraryInformation ::= Name::α Version::α Publisher::α VersionDate::α (LibraryReference::α)+ ;
IfcConnectionGeometry ::= ε ;
IfcFlowMovingDeviceType ::= ε ;
IfcExternallyDefinedSurfaceStyle ::= ε ;
IfcActor ::= IsActingUpon::α TheActor::α ;
IfcEvaporativeCoolerTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (INDIRECTDIRECTCOMBINATION::ε) | (INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER::ε) | (INDIRECTEVAPORATIVEWETCOIL::ε) | (INDIRECTEVAPORATIVEPACKAGEAIRCOOLER::ε) | (DIRECTEVAPORATIVEAIRWASHER::ε) | (DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER::ε) | (DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER::ε) | (DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER::ε) | (DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER::ε) ;
IfcTextureCoordinate ::= AnnotatedSurface::α ;
IfcFlowFitting ::= ε ;
IfcPlanarExtent ::= SizeInX::α SizeInY::α ;
IfcGeometricRepresentationContext ::= CoordinateSpaceDimension::α Precision::α HasSubContexts::α WorldCoordinateSystem::α TrueNorth::α ;
IfcPipeFittingTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TRANSITION::ε) | (OBSTRUCTION::ε) | (JUNCTION::ε) | (EXIT::ε) | (ENTRY::ε) | (CONNECTOR::ε) | (BEND::ε) ;
IfcTerminatorSymbol ::= AnnotatedCurve::α ;
IfcTelecomAddress ::= (TelephoneNumbers::α)+ (FacsimileNumbers::α)+ PagerNumber::α (ElectronicMailAddresses::α)+ WWWHomePageURL::α ;
IfcSurfaceStyleRendering ::= Transparency::α ReflectanceMethod::α DiffuseColour::α TransmissionColour::α DiffuseTransmissionColour::α ReflectionColour::α SpecularColour::α SpecularHighlight::α ;
IfcStructuredDimensionCallout ::= ε ;
IfcWorkPlan ::= ε ;
IfcObjectPlacement ::= PlacesObject::α ReferencedByPlacements::α ;
IfcPlacement ::= Location::α ;
IfcAirTerminalTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (LINEARDIFFUSER::ε) | (LINEARGRILLE::ε) | (IRIS::ε) | (EYEBALL::ε) | (DIFFUSER::ε) | (REGISTER::ε) | (GRILLE::ε) ;
IfcProperty ::= Name::α Description::α PropertyForDependance::α PropertyDependsOn::α PartOfComplex::α ;
IfcConversionBasedUnit ::= ConversionFactor::α Name::α ;
IfcActuatorType ::= PredefinedType::α ;
IfcConnectionPointEccentricity ::= EccentricityInX::α EccentricityInY::α EccentricityInZ::α ;
IfcLightEmissionSourceEnum ::= (NOTDEFINED::ε) | (TUNGSTENFILAMENT::ε) | (METALHALIDE::ε) | (MAINVOLTAGEHALOGEN::ε) | (LOWVOLTAGEHALOGEN::ε) | (LOWPRESSURESODIUM::ε) | (LIGHTEMITTINGDIODE::ε) | (HIGHPRESSURESODIUM::ε) | (HIGHPRESSUREMERCURY::ε) | (FLUORESCENT::ε) | (COMPACTFLUORESCENT::ε) ;
IfcInventoryTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (FURNITUREINVENTORY::ε) | (SPACEINVENTORY::ε) | (ASSETINVENTORY::ε) ;
IfcRelAssociatesMaterial ::= RelatingMaterial::α ;
IfcWorkSchedule ::= ε ;
IfcProcedure ::= ProcedureID::α ProcedureType::α UserDefinedProcedureType::α ;
IfcRightCircularCylinder ::= Height::α Radius::α ;
IfcPileConstructionEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (PREFAB_STEEL::ε) | (PRECAST_CONCRETE::ε) | (COMPOSITE::ε) | (CAST_IN_PLACE::ε) ;
IfcApplication ::= Version::α ApplicationFullName::α ApplicationIdentifier::α ApplicationDeveloper::α ;
IfcBezierCurve ::= ε ;
IfcFurnitureStandard ::= ε ;
IfcPumpType ::= PredefinedType::α ;
IfcFeatureElementAddition ::= ProjectsElements::α ;
IfcMechanicalFastener ::= NominalDiameter::α NominalLength::α ;
IfcPolyline ::= Points::α ;
IfcRelDefines ::= (RelatedObjects::α)+ ;
IfcSolidModel ::= ε ;
IfcRelAssociatesDocument ::= RelatingDocument::α ;
IfcOccupant ::= PredefinedType::α ;
IfcDraughtingPreDefinedCurveFont ::= ε ;
IfcBooleanClippingResult ::= ε ;
IfcGlobalOrLocalEnum ::= (LOCAL_COORDS::ε) | (GLOBAL_COORDS::ε) ;
IfcConnectionCurveGeometry ::= CurveOnRelatingElement::α CurveOnRelatedElement::α ;
IfcRationalBezierCurve ::= WeightsData::α ;
IfcElectricalCircuit ::= ε ;
IfcDerivedUnit ::= UnitType::α UserDefinedType::α (Elements::α)+ ;
IfcStructuralConnectionCondition ::= Name::α ;
IfcAirTerminalType ::= PredefinedType::α ;
IfcCurrencyEnum ::= (NOK::ε) | (ZWD::ε) | (ZAR::ε) | (XEU::ε) | (VND::ε) | (VEB::ε) | (USD::ε) | (TWD::ε) | (TTD::ε) | (TRL::ε) | (THB::ε) | (SKP::ε) | (SGD::ε) | (SEK::ε) | (SCR::ε) | (SAR::ε) | (RUR::ε) | (QAR::ε) | (PTN::ε) | (PLN::ε) | (PKR::ε) | (PHP::ε) | (PGK::ε) | (OMR::ε) | (NZD::ε) | (NLG::ε) | (MYR::ε) | (MXN::ε) | (MUR::ε) | (MTL::ε) | (LUF::ε) | (LKR::ε) | (KYD::ε) | (KWD::ε) | (KRW::ε) | (KES::ε) | (JPY::ε) | (JOD::ε) | (JMD::ε) | (ITL::ε) | (IRP::ε) | (INR::ε) | (ILS::ε) | (IDR::ε) | (ICK::ε) | (HUF::ε) | (HKD::ε) | (GRX::ε) | (GMD::ε) | (GIP::ε) | (GBP::ε) | (FRF::ε) | (FKP::ε) | (FJD::ε) | (FIM::ε) | (FAK::ε) | (EUR::ε) | (EST::ε) | (EGL::ε) | (DKK::ε) | (DEM::ε) | (DDP::ε) | (CZK::ε) | (CYS::ε) | (CNY::ε) | (CLP::ε) | (CHF::ε) | (CBD::ε) | (CAD::ε) | (BZD::ε) | (BWP::ε) | (BSD::ε) | (BRL::ε) | (BND::ε) | (BMD::ε) | (BHD::ε) | (BGL::ε) | (BEG::ε) | (BBD::ε) | (AUD::ε) | (ATS::ε) | (AES::ε) | (AED::ε) ;
IfcPropertyEnumeratedValue ::= (EnumerationValues::α)+ EnumerationReference::α ;
IfcAnnotation ::= ε ;
IfcDraughtingCalloutRelationship ::= Name::α Description::α RelatingDraughtingCallout::α RelatedDraughtingCallout::α ;
IfcSweptSurface ::= SweptCurve::α Position::α ;
IfcElectricMotorType ::= PredefinedType::α ;
IfcTrimmedCurve ::= SenseAgreement::α MasterRepresentation::α Trim1::α Trim2::α BasisCurve::α ;
IfcFillAreaStyleTiles ::= TilingPattern::α (Tiles::α)+ TilingScale::α ;
IfcLoop ::= ε ;
IfcRampFlight ::= ε ;
IfcTextureCoordinateGenerator ::= (Parameter::α)+ Mode::α ;
IfcPointOnSurface ::= PointParameterU::α PointParameterV::α BasisSurface::α ;
IfcPermit ::= PermitID::α ;
IfcMechanicalFastenerType ::= ε ;
IfcTypeObject ::= ObjectTypeOf::α (HasPropertySets::α)+ ApplicableOccurrence::α ;
IfcPreDefinedItem ::= Name::α ;
IfcMaterialLayerSet ::= (MaterialLayers::α)+ LayerSetName::α ;
IfcFillAreaStyleHatching ::= StartOfNextHatchLine::α HatchLineAppearance::α PointOfReferenceHatchLine::α PatternStart::α HatchLineAngle::α ;
IfcDoorStyle ::= OperationType::α ConstructionType::α ParameterTakesPrecedence::α Sizeable::α ;
IfcRelCoversSpaces ::= RelatedSpace::α (RelatedCoverings::α)+ ;
IfcSanitaryTerminalTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (WCSEAT::ε) | (WASHHANDBASIN::ε) | (URINAL::ε) | (TOILETPAN::ε) | (SANITARYFOUNTAIN::ε) | (SINK::ε) | (SHOWER::ε) | (CISTERN::ε) | (BIDET::ε) | (BATH::ε) ;
IfcTransportElement ::= OperationType::α CapacityByWeight::α CapacityByNumber::α ;
IfcDimensionalExponents ::= LengthExponent::α MassExponent::α TimeExponent::α ElectricCurrentExponent::α ThermodynamicTemperatureExponent::α AmountOfSubstanceExponent::α LuminousIntensityExponent::α ;
IfcBenchmarkEnum ::= (NOTEQUALTO::ε) | (EQUALTO::ε) | (LESSTHANOREQUALTO::ε) | (LESSTHAN::ε) | (GREATERTHANOREQUALTO::ε) | (GREATERTHAN::ε) ;
IfcDirectionSenseEnum ::= (NEGATIVE::ε) | (POSITIVE::ε) ;
IfcAppliedValueSelect ::= IfcMonetaryMeasurevalue::α IfcRatioMeasurevalue::α IfcMeasureWithUnitvalue::α ;
IfcCrewResource ::= ε ;
IfcEnergyConversionDeviceType ::= ε ;
IfcStairFlight ::= NumberOfRiser::α NumberOfTreads::α RiserHeight::α TreadLength::α ;
IfcDamperTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (FUMEHOODEXHAUST::ε) | (BALANCINGDAMPER::ε) | (GRAVITYRELIEFDAMPER::ε) | (GRAVITYDAMPER::ε) | (BLASTDAMPER::ε) | (RELIEFDAMPER::ε) | (BACKDRAFTDAMPER::ε) | (FIRESMOKEDAMPER::ε) | (SMOKEDAMPER::ε) | (FIREDAMPER::ε) | (CONTROLDAMPER::ε) ;
IfcPropertyDefinition ::= ε ;
IfcTendon ::= PredefinedType::α NominalDiameter::α CrossSectionArea::α TensionForce::α PreStress::α FrictionCoefficient::α AnchorageSlip::α MinCurvatureRadius::α ;
IfcStructuralCurveConnection ::= ε ;
IfcPoint ::= ε ;
IfcStructuralLoadPlanarForce ::= PlanarForceX::α PlanarForceY::α PlanarForceZ::α ;
IfcPermeableCoveringProperties ::= OperationType::α PanelPosition::α FrameDepth::α FrameThickness::α ShapeAspectStyle::α ;
IfcOffsetCurve3D ::= Distance::α SelfIntersect::α BasisCurve::α RefDirection::α ;
IfcMotorConnectionType ::= PredefinedType::α ;
IfcExternallyDefinedTextFont ::= ε ;
IfcWorkControl ::= Identifier::α Purpose::α Duration::α TotalFloat::α WorkControlType::α UserDefinedControlType::α CreationDate::α (Creators::α)+ StartTime::α FinishTime::α ;
IfcConstructionProductResource ::= ε ;
IfcAnnotationFillArea ::= OuterBoundary::α (InnerBoundaries::α)+ ;
IfcReferencesValueDocument ::= Name::α Description::α ReferencedDocument::α (ReferencingValues::α)+ ;
IfcLightDistributionData ::= MainPlaneAngle::α (SecondaryPlaneAngle::α)+ (LuminousIntensity::α)+ ;
IfcFastener ::= ε ;
IfcSubedge ::= ParentEdge::α ;
IfcWindow ::= OverallHeight::α OverallWidth::α ;
IfcActionRequest ::= RequestID::α ;
IfcCurtainWallTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) ;
IfcTextStyleWithBoxCharacteristics ::= BoxHeight::α BoxWidth::α BoxSlantAngle::α BoxRotateAngle::α CharacterSpacing::α ;
IfcRelInteractionRequirements ::= DailyInteraction::α ImportanceRating::α LocationOfInteraction::α RelatedSpaceProgram::α RelatingSpaceProgram::α ;
IfcAddress ::= Purpose::α Description::α UserDefinedPurpose::α OfPerson::α OfOrganization::α ;
IfcValue ::= IfcAbsorbedDoseMeasurevalue::α IfcAccelerationMeasurevalue::α IfcAmountOfSubstanceMeasurevalue::α IfcAngularVelocityMeasurevalue::α IfcAreaMeasurevalue::α IfcBooleanvalue::α IfcContextDependentMeasurevalue::α IfcCountMeasurevalue::α IfcCurvatureMeasurevalue::α IfcDescriptiveMeasurevalue::α IfcDoseEquivalentMeasurevalue::α IfcDynamicViscosityMeasurevalue::α IfcElectricCapacitanceMeasurevalue::α IfcElectricChargeMeasurevalue::α IfcElectricConductanceMeasurevalue::α IfcElectricCurrentMeasurevalue::α IfcElectricResistanceMeasurevalue::α IfcElectricVoltageMeasurevalue::α IfcEnergyMeasurevalue::α IfcForceMeasurevalue::α IfcFrequencyMeasurevalue::α IfcHeatFluxDensityMeasurevalue::α IfcHeatingValueMeasurevalue::α IfcIdentifiervalue::α IfcIlluminanceMeasurevalue::α IfcInductanceMeasurevalue::α IfcIntegervalue::α IfcIntegerCountRateMeasurevalue::α IfcIonConcentrationMeasurevalue::α IfcIsothermalMoistureCapacityMeasurevalue::α IfcKinematicViscosityMeasurevalue::α IfcLabelvalue::α IfcPositiveLengthMeasurevalue::α IfcLengthMeasurevalue::α IfcLinearForceMeasurevalue::α IfcLinearMomentMeasurevalue::α IfcLinearStiffnessMeasurevalue::α IfcLinearVelocityMeasurevalue::α IfcLogicalvalue::α IfcLuminousFluxMeasurevalue::α IfcLuminousIntensityDistributionMeasurevalue::α IfcLuminousIntensityMeasurevalue::α IfcMagneticFluxDensityMeasurevalue::α IfcMagneticFluxMeasurevalue::α IfcMassDensityMeasurevalue::α IfcMassFlowRateMeasurevalue::α IfcMassMeasurevalue::α IfcMassPerLengthMeasurevalue::α IfcModulusOfElasticityMeasurevalue::α IfcModulusOfLinearSubgradeReactionMeasurevalue::α IfcModulusOfRotationalSubgradeReactionMeasurevalue::α IfcModulusOfSubgradeReactionMeasurevalue::α IfcMoistureDiffusivityMeasurevalue::α IfcMolecularWeightMeasurevalue::α IfcMomentOfInertiaMeasurevalue::α IfcMonetaryMeasurevalue::α IfcNormalisedRatioMeasurevalue::α IfcNumericMeasurevalue::α IfcPHMeasurevalue::α IfcParameterValuevalue::α IfcPlanarForceMeasurevalue::α IfcPositivePlaneAngleMeasurevalue::α IfcPlaneAngleMeasurevalue::α IfcPositiveRatioMeasurevalue::α IfcPowerMeasurevalue::α IfcPressureMeasurevalue::α IfcRadioActivityMeasurevalue::α IfcRatioMeasurevalue::α IfcRealvalue::α IfcRotationalFrequencyMeasurevalue::α IfcRotationalMassMeasurevalue::α IfcRotationalStiffnessMeasurevalue::α IfcSectionModulusMeasurevalue::α IfcSectionalAreaIntegralMeasurevalue::α IfcShearModulusMeasurevalue::α IfcSolidAngleMeasurevalue::α IfcSoundPowerMeasurevalue::α IfcSoundPressureMeasurevalue::α IfcSpecificHeatCapacityMeasurevalue::α IfcTemperatureGradientMeasurevalue::α IfcTextvalue::α IfcThermalAdmittanceMeasurevalue::α IfcThermalConductivityMeasurevalue::α IfcThermalExpansionCoefficientMeasurevalue::α IfcThermalResistanceMeasurevalue::α IfcThermalTransmittanceMeasurevalue::α IfcThermodynamicTemperatureMeasurevalue::α IfcTimeMeasurevalue::α IfcTimeStampvalue::α IfcTorqueMeasurevalue::α IfcVaporPermeabilityMeasurevalue::α IfcVolumeMeasurevalue::α IfcVolumetricFlowRateMeasurevalue::α IfcWarpingConstantMeasurevalue::α IfcWarpingMomentMeasurevalue::α ;
IfcGasTerminalTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (GASBURNER::ε) | (GASBOOSTER::ε) | (GASAPPLIANCE::ε) ;
IfcDocumentReference ::= ReferenceToDocument::α ;
IfcSequenceEnum ::= (NOTDEFINED::ε) | (FINISH_FINISH::ε) | (FINISH_START::ε) | (START_FINISH::ε) | (START_START::ε) ;
IfcElectricTimeControlTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (RELAY::ε) | (TIMEDELAY::ε) | (TIMECLOCK::ε) ;
IfcOffsetCurve2D ::= Distance::α SelfIntersect::α BasisCurve::α ;
IfcGeometricSet ::= (Elements::α)+ ;
IfcLightIntensityDistribution ::= (DistributionData::α)+ LightDistributionCurve::α ;
IfcAnnotationOccurrence ::= ε ;
IfcDocumentInformationRelationship ::= RelatingDocument::α (RelatedDocuments::α)+ RelationshipType::α ;
IfcFace ::= (Bounds::α)+ ;
IfcIrregularTimeSeriesValue ::= (ListValues::α)+ TimeStamp::α ;
IfcHumidifierTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (ASSISTEDSTEAM::ε) | (ASSISTEDBUTANE::ε) | (ASSISTEDPROPANE::ε) | (ASSISTEDNATURALGAS::ε) | (ASSISTEDELECTRIC::ε) | (ADIABATICCOMPRESSEDAIRNOZZLE::ε) | (ADIABATICRIGIDMEDIA::ε) | (ADIABATICULTRASONIC::ε) | (ADIABATICATOMIZING::ε) | (ADIABATICWETTEDELEMENT::ε) | (ADIABATICPAN::ε) | (ADIABATICAIRWASHER::ε) | (STEAMINJECTION::ε) ;
IfcPresentationStyleAssignment ::= (Styles::α)+ ;
IfcHalfSpaceSolid ::= BaseSurface::α AgreementFlag::α ;
IfcConnectionPointGeometry ::= PointOnRelatingElement::α PointOnRelatedElement::α ;
IfcAnnotationSymbolOccurrence ::= ε ;
IfcTimeSeriesScheduleTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (DAILY::ε) | (WEEKLY::ε) | (MONTHLY::ε) | (ANNUAL::ε) ;
IfcDerivedUnitEnum ::= (USERDEFINED::ε) | (WARPINGMOMENTUNIT::ε) | (WARPINGCONSTANTUNIT::ε) | (THERMALEXPANSIONCOEFFICIENTUNIT::ε) | (TEMPERATUREGRADIENTUNIT::ε) | (SOUNDPRESSUREUNIT::ε) | (SOUNDPOWERUNIT::ε) | (SECTIONMODULUSUNIT::ε) | (SECTIONAREAINTEGRALUNIT::ε) | (ROTATIONALMASSUNIT::ε) | (PHUNIT::ε) | (MODULUSOFROTATIONALSUBGRADEREACTIONUNIT::ε) | (MODULUSOFLINEARSUBGRADEREACTIONUNIT::ε) | (MASSPERLENGTHUNIT::ε) | (LUMINOUSINTENSITYDISTRIBUTIONUNIT::ε) | (IONCONCENTRATIONUNIT::ε) | (HEATINGVALUEUNIT::ε) | (CURVATUREUNIT::ε) | (ACCELERATIONUNIT::ε) | (MODULUSOFSUBGRADEREACTIONUNIT::ε) | (ROTATIONALSTIFFNESSUNIT::ε) | (LINEARSTIFFNESSUNIT::ε) | (SHEARMODULUSUNIT::ε) | (MODULUSOFELASTICITYUNIT::ε) | (PLANARFORCEUNIT::ε) | (LINEARFORCEUNIT::ε) | (LINEARMOMENTUNIT::ε) | (MOMENTOFINERTIAUNIT::ε) | (TORQUEUNIT::ε) | (ROTATIONALFREQUENCYUNIT::ε) | (VOLUMETRICFLOWRATEUNIT::ε) | (VAPORPERMEABILITYUNIT::ε) | (THERMALTRANSMITTANCEUNIT::ε) | (THERMALRESISTANCEUNIT::ε) | (THERMALCONDUCTANCEUNIT::ε) | (THERMALADMITTANCEUNIT::ε) | (SPECIFICHEATCAPACITYUNIT::ε) | (MOLECULARWEIGHTUNIT::ε) | (MOISTUREDIFFUSIVITYUNIT::ε) | (MASSFLOWRATEUNIT::ε) | (MASSDENSITYUNIT::ε) | (LINEARVELOCITYUNIT::ε) | (KINEMATICVISCOSITYUNIT::ε) | (ISOTHERMALMOISTURECAPACITYUNIT::ε) | (INTEGERCOUNTRATEUNIT::ε) | (HEATFLUXDENSITYUNIT::ε) | (DYNAMICVISCOSITYUNIT::ε) | (COMPOUNDPLANEANGLEUNIT::ε) | (ANGULARVELOCITYUNIT::ε) ;
IfcEvaporatorTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SHELLANDCOIL::ε) | (FLOODEDSHELLANDTUBE::ε) | (DIRECTEXPANSIONBRAZEDPLATE::ε) | (DIRECTEXPANSIONTUBEINTUBE::ε) | (DIRECTEXPANSIONSHELLANDTUBE::ε) ;
IfcWindowLiningProperties ::= LiningDepth::α LiningThickness::α TransomThickness::α MullionThickness::α FirstTransomOffset::α SecondTransomOffset::α FirstMullionOffset::α SecondMullionOffset::α ShapeAspectStyle::α ;
IfcRegularTimeSeries ::= (Values::α)+ TimeStep::α ;
IfcExtendedMaterialProperties ::= Description::α Name::α (ExtendedProperties::α)+ ;
IfcWindowPanelPositionEnum ::= (NOTDEFINED::ε) | (TOP::ε) | (BOTTOM::ε) | (RIGHT::ε) | (MIDDLE::ε) | (LEFT::ε) ;
IfcPreDefinedColour ::= ε ;
IfcFilterType ::= PredefinedType::α ;
IfcEllipse ::= SemiAxis1::α SemiAxis2::α ;
IfcBoundedCurve ::= ε ;
IfcRoofTypeEnum ::= (NOTDEFINED::ε) | (FREEFORM::ε) | (DOME_ROOF::ε) | (PAVILION_ROOF::ε) | (BUTTERFLY_ROOF::ε) | (RAINBOW_ROOF::ε) | (BARREL_ROOF::ε) | (MANSARD_ROOF::ε) | (GAMBREL_ROOF::ε) | (HIPPED_GABLE_ROOF::ε) | (HIP_ROOF::ε) | (GABLE_ROOF::ε) | (SHED_ROOF::ε) | (FLAT_ROOF::ε) ;
IfcSphere ::= Radius::α ;
IfcRelAssociatesLibrary ::= RelatingLibrary::α ;
IfcHygroscopicMaterialProperties ::= UpperVaporResistanceFactor::α LowerVaporResistanceFactor::α IsothermalMoistureCapacity::α VaporPermeability::α MoistureDiffusivity::α ;
IfcGeometricCurveSet ::= ε ;
IfcPlanarBox ::= Placement::α ;
IfcLightSource ::= Name::α AmbientIntensity::α Intensity::α LightColour::α ;
IfcStructuralAnalysisModel ::= OrientationOf2DPlane::α (LoadedBy::α)+ (HasResults::α)+ PredefinedType::α ;
IfcStructuralLoadSingleDisplacement ::= DisplacementX::α DisplacementY::α DisplacementZ::α RotationalDisplacementRX::α RotationalDisplacementRY::α RotationalDisplacementRZ::α ;
IfcShapeRepresentation ::= ε ;
IfcCurveBoundedPlane ::= BasisSurface::α OuterBoundary::α (InnerBoundaries::α)+ ;
IfcStructuralSurfaceMember ::= PredefinedType::α Thickness::α ;
IfcRelAssignsToProjectOrder ::= ε ;
IfcQuantityCount ::= CountValue::α ;
IfcRelSpaceBoundary ::= PhysicalOrVirtualBoundary::α InternalOrExternalBoundary::α RelatingSpace::α RelatedBuildingElement::α ConnectionGeometry::α ;
IfcDoorPanelOperationEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (ROLLINGUP::ε) | (REVOLVING::ε) | (FOLDING::ε) | (SLIDING::ε) | (DOUBLE_ACTING::ε) | (SWINGING::ε) ;
IfcLampType ::= PredefinedType::α ;
IfcProjectOrderTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (WORKORDER::ε) | (PURCHASEORDER::ε) | (MOVEORDER::ε) | (MAINTENANCEWORKORDER::ε) | (CHANGEORDER::ε) ;
IfcAnnotationFillAreaOccurrence ::= FillStyleTarget::α GlobalOrLocal::α ;
IfcArbitraryClosedProfileDef ::= OuterCurve::α ;
IfcScheduleTimeControl ::= ScheduleDuration::α ActualDuration::α RemainingTime::α FreeFloat::α TotalFloat::α IsCritical::α StartFloat::α FinishFloat::α Completion::α ScheduleTimeControlAssigned::α ActualStart::α EarlyStart::α LateStart::α ScheduleStart::α ActualFinish::α EarlyFinish::α LateFinish::α ScheduleFinish::α StatusTime::α ;
IfcBoundaryNodeConditionWarping ::= WarpingStiffness::α ;
IfcBeamTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (T_BEAM::ε) | (LINTEL::ε) | (JOIST::ε) | (BEAM::ε) ;
IfcDoorStyleConstructionEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (PLASTIC::ε) | (ALUMINIUM_PLASTIC::ε) | (ALUMINIUM_WOOD::ε) | (WOOD::ε) | (STEEL::ε) | (HIGH_GRADE_STEEL::ε) | (ALUMINIUM::ε) ;
IfcSimpleProperty ::= ε ;
IfcMaterial ::= HasRepresentation::α ClassifiedAs::α Name::α ;
IfcPhysicalOrVirtualEnum ::= (NOTDEFINED::ε) | (VIRTUAL::ε) | (PHYSICAL::ε) ;
IfcWasteTerminalTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (WASTETRAP::ε) | (WASTEDISPOSALUNIT::ε) | (ROOFDRAIN::ε) | (PETROLINTERCEPTOR::ε) | (OILINTERCEPTOR::ε) | (GREASEINTERCEPTOR::ε) | (GULLYTRAP::ε) | (GULLYSUMP::ε) | (FLOORWASTE::ε) | (FLOORTRAP::ε) ;
IfcJunctionBoxType ::= PredefinedType::α ;
IfcRibPlateProfileProperties ::= Thickness::α RibHeight::α RibWidth::α RibSpacing::α Direction::α ;
IfcOneDirectionRepeatFactor ::= RepeatFactor::α ;
IfcBoundaryNodeCondition ::= LinearStiffnessX::α LinearStiffnessY::α LinearStiffnessZ::α RotationalStiffnessX::α RotationalStiffnessY::α RotationalStiffnessZ::α ;
IfcRelConnectsStructuralActivity ::= RelatingElement::α RelatedStructuralActivity::α ;
IfcCompressorType ::= PredefinedType::α ;
IfcWaterProperties ::= IsPotable::α Hardness::α AlkalinityConcentration::α AcidityConcentration::α ImpuritiesContent::α PHLevel::α DissolvedSolidsContent::α ;
IfcPreDefinedSymbol ::= ε ;
IfcRampFlightTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SPIRAL::ε) | (STRAIGHT::ε) ;
IfcBuildingElement ::= ε ;
IfcEnvironmentalImpactCategoryEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TRANSPORTATION::ε) | (MANUFACTURE::ε) | (INSTALLATION::ε) | (EXTRACTION::ε) | (DISPOSAL::ε) | (COMBINEDVALUE::ε) ;
IfcElectricHeaterTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (ELECTRICMATHEATER::ε) | (ELECTRICCABLEHEATER::ε) | (ELECTRICPOINTHEATER::ε) ;
IfcSwitchingDeviceTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TOGGLESWITCH::ε) | (SWITCHDISCONNECTOR::ε) | (STARTER::ε) | (EMERGENCYSTOP::ε) | (CONTACTOR::ε) ;
IfcDraughtingPreDefinedTextFont ::= ε ;
IfcStructuralItem ::= ε ;
IfcFlowInstrumentType ::= PredefinedType::α ;
IfcRelContainedInSpatialStructure ::= (RelatedElements::α)+ RelatingStructure::α ;
IfcEllipseProfileDef ::= SemiAxis1::α SemiAxis2::α ;
IfcDiscreteAccessory ::= ε ;
IfcPreDefinedCurveFont ::= ε ;
IfcCalendarDate ::= DayComponent::α MonthComponent::α YearComponent::α ;
IfcCoolingTowerTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (MECHANICALFORCEDDRAFT::ε) | (MECHANICALINDUCEDDRAFT::ε) | (NATURALDRAFT::ε) ;
IfcRelAssigns ::= (RelatedObjects::α)+ RelatedObjectsType::α ;
IfcColourSpecification ::= Name::α ;
IfcLightSourceAmbient ::= ε ;
IfcStyledItem ::= Item::α (Styles::α)+ Name::α ;
IfcUnitaryEquipmentTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (ROOFTOPUNIT::ε) | (SPLITSYSTEM::ε) | (AIRCONDITIONINGUNIT::ε) | (AIRHANDLER::ε) ;
IfcSIUnitName ::= (WEBER::ε) | (WATT::ε) | (VOLT::ε) | (TESLA::ε) | (STERADIAN::ε) | (SQUARE_METRE::ε) | (SIEVERT::ε) | (SIEMENS::ε) | (SECOND::ε) | (RADIAN::ε) | (PASCAL::ε) | (OHM::ε) | (NEWTON::ε) | (MOLE::ε) | (METRE::ε) | (LUX::ε) | (LUMEN::ε) | (KELVIN::ε) | (JOULE::ε) | (HERTZ::ε) | (HENRY::ε) | (GRAY::ε) | (GRAM::ε) | (FARAD::ε) | (DEGREE_CELSIUS::ε) | (CUBIC_METRE::ε) | (COULOMB::ε) | (CANDELA::ε) | (BECQUEREL::ε) | (AMPERE::ε) ;
IfcStructuralLoadTemperature ::= DeltaT_Constant::α DeltaT_Y::α DeltaT_Z::α ;
IfcBoundaryCondition ::= Name::α ;
IfcWasteTerminalType ::= PredefinedType::α ;
IfcDistributionControlElement ::= AssignedToFlowElement::α ControlElementId::α ;
IfcClassificationNotationFacet ::= NotationValue::α ;
IfcTendonTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (COATED::ε) | (BAR::ε) | (WIRE::ε) | (STRAND::ε) ;
IfcStructuralCurveTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (COMPRESSION_MEMBER::ε) | (TENSION_MEMBER::ε) | (CABLE::ε) | (PIN_JOINED_MEMBER::ε) | (RIGID_JOINED_MEMBER::ε) ;
IfcProductsOfCombustionProperties ::= SpecificHeatCapacity::α N20Content::α COContent::α CO2Content::α ;
IfcCartesianTransformationOperator3DnonUniform ::= Scale2::α Scale3::α ;
IfcDuctSegmentTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (FLEXIBLESEGMENT::ε) | (RIGIDSEGMENT::ε) ;
IfcTwoDirectionRepeatFactor ::= SecondRepeatFactor::α ;
IfcRampFlightType ::= PredefinedType::α ;
IfcSpace ::= InteriorOrExteriorSpace::α ElevationWithFlooring::α HasCoverings::α BoundedBy::α ;
IfcOpenShell ::= ε ;
IfcPresentationLayerAssignment ::= Name::α Description::α Identifier::α (AssignedItems::α)+ ;
IfcPhysicalComplexQuantity ::= Discrimination::α Quality::α Usage::α (HasQuantities::α)+ ;
IfcRelConnects ::= ε ;
IfcExternallyDefinedHatchStyle ::= ε ;
IfcElectricFlowStorageDeviceTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (UPS::ε) | (INDUCTORBANK::ε) | (HARMONICFILTER::ε) | (CAPACITORBANK::ε) | (BATTERY::ε) ;
IfcRectangularTrimmedSurface ::= U1::α V1::α U2::α V2::α Usense::α Vsense::α BasisSurface::α ;
IfcServiceLifeFactor ::= UpperValue::α MostUsedValue::α LowerValue::α PredefinedType::α ;
IfcElectricHeaterType ::= PredefinedType::α ;
IfcSanitaryTerminalType ::= PredefinedType::α ;
IfcVirtualElement ::= ε ;
IfcCurveStyleFont ::= (PatternList::α)+ Name::α ;
IfcVertexLoop ::= LoopVertex::α ;
IfcUShapeProfileDef ::= Depth::α FlangeWidth::α WebThickness::α FlangeThickness::α FilletRadius::α EdgeRadius::α FlangeSlope::α CentreOfGravityInX::α ;
IfcRelServicesBuildings ::= RelatingSystem::α (RelatedBuildings::α)+ ;
IfcWindowStyleOperationEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TRIPLE_PANEL_HORIZONTAL::ε) | (TRIPLE_PANEL_RIGHT::ε) | (TRIPLE_PANEL_LEFT::ε) | (TRIPLE_PANEL_TOP::ε) | (TRIPLE_PANEL_BOTTOM::ε) | (TRIPLE_PANEL_VERTICAL::ε) | (DOUBLE_PANEL_HORIZONTAL::ε) | (DOUBLE_PANEL_VERTICAL::ε) | (SINGLE_PANEL::ε) ;
IfcLightSourceSpot ::= ConcentrationExponent::α SpreadAngle::α BeamWidthAngle::α Orientation::α ;
IfcProjectOrderRecord ::= (Records::α)+ PredefinedType::α ;
IfcFaceBasedSurfaceModel ::= (FbsmFaces::α)+ ;
IfcStructuralPointConnection ::= ε ;
IfcRelaxation ::= RelaxationValue::α InitialStress::α ;
IfcUnitaryEquipmentType ::= PredefinedType::α ;
IfcCurve ::= ε ;
IfcLogicalOperatorEnum ::= (LOGICALOR::ε) | (LOGICALAND::ε) ;
IfcConstructionEquipmentResource ::= ε ;
IfcMaterialLayerSetUsage ::= LayerSetDirection::α DirectionSense::α OffsetFromReferenceLine::α ForLayerSet::α ;
IfcConnectionTypeEnum ::= (NOTDEFINED::ε) | (ATEND::ε) | (ATSTART::ε) | (ATPATH::ε) ;
IfcBoilerTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (STEAM::ε) | (WATER::ε) ;
IfcPropertyDependencyRelationship ::= Name::α Description::α Expression::α DependingProperty::α DependantProperty::α ;
IfcColumn ::= ε ;
IfcPerson ::= Id::α FamilyName::α GivenName::α (MiddleNames::α)+ (PrefixTitles::α)+ (SuffixTitles::α)+ EngagedIn::α (Roles::α)+ (Addresses::α)+ ;
IfcFillAreaStyle ::= (FillStyles::α)+ ;
IfcSectionTypeEnum ::= (TAPERED::ε) | (UNIFORM::ε) ;
IfcElectricFlowStorageDeviceType ::= PredefinedType::α ;
IfcStructuralProfileProperties ::= TorsionalConstantX::α MomentOfInertiaYZ::α MomentOfInertiaY::α MomentOfInertiaZ::α WarpingConstant::α ShearCentreZ::α ShearCentreY::α ShearDeformationAreaZ::α ShearDeformationAreaY::α MaximumSectionModulusY::α MinimumSectionModulusY::α MaximumSectionModulusZ::α MinimumSectionModulusZ::α TorsionalSectionModulus::α CentreOfGravityInX::α CentreOfGravityInY::α ;
IfcDraughtingCallout ::= IsRelatedFromCallout::α IsRelatedToCallout::α (Contents::α)+ ;
IfcCurveStyleFontPattern ::= VisibleSegmentLength::α InvisibleSegmentLength::α ;
IfcCableCarrierFittingType ::= PredefinedType::α ;
IfcCooledBeamType ::= PredefinedType::α ;
IfcReinforcingMesh ::= MeshLength::α MeshWidth::α LongitudinalBarNominalDiameter::α TransverseBarNominalDiameter::α LongitudinalBarCrossSectionArea::α TransverseBarCrossSectionArea::α LongitudinalBarSpacing::α TransverseBarSpacing::α ;
IfcDocumentElectronicFormat ::= FileExtension::α MimeContentType::α MimeSubtype::α ;
IfcFastenerType ::= ε ;
IfcLightSourceGoniometric ::= ColourTemperature::α LuminousFlux::α LightEmissionSource::α Position::α ColourAppearance::α LightDistributionDataSource::α ;
IfcIrregularTimeSeries ::= (Values::α)+ ;
IfcCraneRailAShapeProfileDef ::= OverallHeight::α BaseWidth2::α Radius::α HeadWidth::α HeadDepth2::α HeadDepth3::α WebThickness::α BaseWidth4::α BaseDepth1::α BaseDepth2::α BaseDepth3::α CentreOfGravityInY::α ;
IfcCovering ::= CoversSpaces::α Covers::α PredefinedType::α ;
IfcWall ::= ε ;
IfcElementType ::= ElementType::α ;
IfcTypeProduct ::= (RepresentationMaps::α)+ Tag::α ;
IfcElectricalElement ::= ε ;
IfcElectricMotorTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SYNCHRONOUS::ε) | (RELUCTANCESYNCHRONOUS::ε) | (POLYPHASE::ε) | (INDUCTION::ε) | (DC::ε) ;
IfcJunctionBoxTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) ;
IfcStructuralSurfaceMemberVarying ::= VaryingThicknessLocation::α SubsequentThickness::α ;
IfcGasTerminalType ::= PredefinedType::α ;
IfcElectricDistributionPoint ::= DistributionPointFunction::α UserDefinedFunction::α ;
IfcSurfaceStyleWithTextures ::= (Textures::α)+ ;
IfcTextureMap ::= (TextureMaps::α)+ ;
IfcObject ::= IsDefinedBy::α ObjectType::α ;
IfcRevolvedAreaSolid ::= Axis::α Angle::α ;
IfcEdge ::= EdgeStart::α EdgeEnd::α ;
IfcStructuralLinearAction ::= ProjectedOrTrue::α ;
IfcQuantityArea ::= AreaValue::α ;
IfcSensorTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TEMPERATURESENSOR::ε) | (SOUNDSENSOR::ε) | (SMOKESENSOR::ε) | (PRESSURESENSOR::ε) | (MOVEMENTSENSOR::ε) | (MOISTURESENSOR::ε) | (LIGHTSENSOR::ε) | (HUMIDITYSENSOR::ε) | (HEATSENSOR::ε) | (GASSENSOR::ε) | (FLOWSENSOR::ε) | (FIRESENSOR::ε) | (CO2SENSOR::ε) ;
IfcProjectOrder ::= ID::α PredefinedType::α Status::α ;
IfcPixelTexture ::= Width::α Height::α ColourComponents::α (Pixel::α)+ ;
IfcExternalReference ::= Location::α ItemReference::α Name::α ;
IfcEvaporatorType ::= PredefinedType::α ;
IfcCableSegmentTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (CONDUCTORSEGMENT::ε) | (CABLESEGMENT::ε) ;
IfcProfileProperties ::= ProfileDefinition::α ProfileName::α ;
IfcElementCompositionEnum ::= (PARTIAL::ε) | (ELEMENT::ε) | (COMPLEX::ε) ;
IfcThermalLoadSourceEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (INFILTRATION::ε) | (RELATIVEHUMIDITY::ε) | (DRYBULBTEMPERATURE::ε) | (AIREXCHANGERATE::ε) | (EXHAUSTAIR::ε) | (RECIRCULATEDAIR::ε) | (VENTILATIONOUTSIDEAIR::ε) | (VENTILATIONINDOORAIR::ε) | (EQUIPMENT::ε) | (LIGHTING::ε) | (PEOPLE::ε) ;
IfcRelAssignsToGroup ::= RelatingGroup::α ;
IfcReinforcementDefinitionProperties ::= (ReinforcementSectionDefinitions::α)+ DefinitionType::α ;
IfcParameterizedProfileDef ::= Position::α ;
IfcLoadGroupTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (LOAD_COMBINATION::ε) | (LOAD_COMBINATION_GROUP::ε) | (LOAD_CASE::ε) | (LOAD_GROUP::ε) ;
IfcFireSuppressionTerminalTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SPRINKLERDEFLECTOR::ε) | (SPRINKLER::ε) | (HOSEREEL::ε) | (FIREHYDRANT::ε) | (BREECHINGINLET::ε) ;
IfcDistributionElementType ::= ε ;
IfcBuildingElementProxy ::= CompositionType::α ;
IfcUnitEnum ::= (USERDEFINED::ε) | (VOLUMEUNIT::ε) | (TIMEUNIT::ε) | (THERMODYNAMICTEMPERATUREUNIT::ε) | (SOLIDANGLEUNIT::ε) | (RADIOACTIVITYUNIT::ε) | (PRESSUREUNIT::ε) | (POWERUNIT::ε) | (PLANEANGLEUNIT::ε) | (MASSUNIT::ε) | (MAGNETICFLUXUNIT::ε) | (MAGNETICFLUXDENSITYUNIT::ε) | (LUMINOUSINTENSITYUNIT::ε) | (LUMINOUSFLUXUNIT::ε) | (LENGTHUNIT::ε) | (INDUCTANCEUNIT::ε) | (ILLUMINANCEUNIT::ε) | (FREQUENCYUNIT::ε) | (FORCEUNIT::ε) | (ENERGYUNIT::ε) | (ELECTRICVOLTAGEUNIT::ε) | (ELECTRICRESISTANCEUNIT::ε) | (ELECTRICCURRENTUNIT::ε) | (ELECTRICCONDUCTANCEUNIT::ε) | (ELECTRICCHARGEUNIT::ε) | (ELECTRICCAPACITANCEUNIT::ε) | (DOSEEQUIVALENTUNIT::ε) | (AREAUNIT::ε) | (AMOUNTOFSUBSTANCEUNIT::ε) | (ABSORBEDDOSEUNIT::ε) ;
IfcThermalMaterialProperties ::= SpecificHeatCapacity::α BoilingPoint::α FreezingPoint::α ThermalConductivity::α ;
IfcAxis2Placement3D ::= Axis::α RefDirection::α ;
IfcCondenserTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (EVAPORATIVECOOLED::ε) | (AIRCOOLED::ε) | (WATERCOOLEDBRAZEDPLATE::ε) | (WATERCOOLEDTUBEINTUBE::ε) | (WATERCOOLEDSHELLCOIL::ε) | (WATERCOOLEDSHELLTUBE::ε) ;
IfcSpatialStructureElement ::= LongName::α CompositionType::α ReferencesElements::α ServicedBySystems::α ContainsElements::α ;
IfcSoundScaleEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (NR::ε) | (NC::ε) | (DBC::ε) | (DBB::ε) | (DBA::ε) ;
IfcClassificationItem ::= IsClassifiedItemIn::α IsClassifyingItemIn::α Notation::α ItemOf::α Title::α ;
IfcCostValue ::= CostType::α Condition::α ;
IfcClosedShell ::= ε ;
IfcSensorType ::= PredefinedType::α ;
IfcStackTerminalTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (RAINWATERHOPPER::ε) | (COWL::ε) | (BIRDCAGE::ε) ;
IfcTextureVertex ::= Coordinates::α ;
IfcSpaceHeaterType ::= PredefinedType::α ;
IfcConstraintAggregationRelationship ::= Name::α Description::α LogicalAggregator::α RelatingConstraint::α (RelatedConstraints::α)+ ;
IfcApprovalPropertyRelationship ::= (ApprovedProperties::α)+ Approval::α ;
IfcPolyLoop ::= Polygon::α ;
IfcRelCoversBldgElements ::= RelatingBuildingElement::α (RelatedCoverings::α)+ ;
IfcProject ::= LongName::α Phase::α (RepresentationContexts::α)+ UnitsInContext::α ;
IfcDerivedProfileDef ::= ParentProfile::α Operator::α Label::α ;
IfcCircleProfileDef ::= Radius::α ;
IfcPersonAndOrganization ::= ThePerson::α TheOrganization::α (Roles::α)+ ;
IfcTextStyleForDefinedFont ::= Colour::α BackgroundColour::α ;
IfcAxis2Placement2D ::= RefDirection::α ;
IfcTask ::= TaskId::α Status::α WorkMethod::α IsMilestone::α Priority::α ;
IfcStructuralCurveMemberVarying ::= ε ;
IfcRailing ::= PredefinedType::α ;
IfcStructuralSurfaceConnection ::= ε ;
IfcRelAssociates ::= (RelatedObjects::α)+ ;
IfcPhysicalQuantity ::= Name::α Description::α PartOfComplex::α ;
IfcCurveStyle ::= CurveFont::α CurveWidth::α CurveColour::α ;
IfcBlock ::= XLength::α YLength::α ZLength::α ;
IfcOrientedEdge ::= EdgeElement::α Orientation::α ;
IfcCostItem ::= ε ;
IfcRelAssociatesConstraint ::= RelatingConstraint::α Intent::α ;
IfcSpatialStructureElementType ::= ε ;
IfcSurfaceStyleShading ::= SurfaceColour::α ;
IfcWallStandardCase ::= ε ;
IfcTextStyleFontModel ::= (FontFamily::α)+ FontStyle::α FontVariant::α FontWeight::α FontSize::α ;
IfcControllerType ::= PredefinedType::α ;
IfcElementAssembly ::= AssemblyPlace::α PredefinedType::α ;
IfcSpaceTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) ;
IfcReinforcementBarProperties ::= TotalCrossSectionArea::α SteelGrade::α BarSurface::α EffectiveDepth::α NominalBarDiameter::α BarCount::α ;
IfcConnectionSurfaceGeometry ::= SurfaceOnRelatingElement::α SurfaceOnRelatedElement::α ;
IfcExtrudedAreaSolid ::= ExtrudedDirection::α Depth::α ;
IfcFailureConnectionCondition ::= TensionFailureX::α TensionFailureY::α TensionFailureZ::α CompressionFailureX::α CompressionFailureY::α CompressionFailureZ::α ;
IfcRectangularPyramid ::= XLength::α YLength::α Height::α ;
IfcClassificationItemRelationship ::= RelatingItem::α (RelatedItems::α)+ ;
IfcElement ::= FillsVoids::α ConnectedTo::α HasCoverings::α HasProjections::α HasStructuralMember::α HasPorts::α HasOpenings::α IsConnectionRealization::α ProvidesBoundaries::α ConnectedFrom::α Tag::α ;
IfcPermeableCoveringOperationEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SCREEN::ε) | (LOUVER::ε) | (GRILL::ε) ;
IfcStructuralSteelProfileProperties ::= ShearAreaZ::α ShearAreaY::α PlasticShapeFactorY::α PlasticShapeFactorZ::α ;
IfcTransportElementType ::= PredefinedType::α ;
IfcFlowMeterTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (WATERMETER::ε) | (OILMETER::ε) | (GASMETER::ε) | (FLOWMETER::ε) | (ENERGYMETER::ε) | (ELECTRICMETER::ε) ;
IfcPropertyConstraintRelationship ::= Name::α Description::α RelatingConstraint::α (RelatedProperties::α)+ ;
IfcTimeSeriesDataTypeEnum ::= (NOTDEFINED::ε) | (PIECEWISECONTINUOUS::ε) | (PIECEWISECONSTANT::ε) | (PIECEWISEBINARY::ε) | (DISCRETEBINARY::ε) | (DISCRETE::ε) | (CONTINUOUS::ε) ;
IfcSIPrefix ::= (ATTO::ε) | (FEMTO::ε) | (PICO::ε) | (NANO::ε) | (MICRO::ε) | (MILLI::ε) | (CENTI::ε) | (DECI::ε) | (DECA::ε) | (HECTO::ε) | (KILO::ε) | (MEGA::ε) | (GIGA::ε) | (TERA::ε) | (PETA::ε) | (EXA::ε) ;
IfcRadiusDimension ::= ε ;
IfcPreDefinedTerminatorSymbol ::= ε ;
IfcTransitionCode ::= (CONTSAMEGRADIENTSAMECURVATURE::ε) | (CONTSAMEGRADIENT::ε) | (CONTINUOUS::ε) | (DISCONTINUOUS::ε) ;
IfcFeatureElementSubtraction ::= VoidsElements::α ;
IfcConditionCriterionSelect ::= IfcLabelvalue::α IfcMeasureWithUnitvalue::α ;
IfcProjectOrderRecordTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (WORK::ε) | (PURCHASE::ε) | (MOVE::ε) | (MAINTENANCE::ε) | (CHANGE::ε) ;
IfcBooleanOperator ::= (DIFFERENCE::ε) | (INTERSECTION::ε) | (UNION::ε) ;
IfcCoordinatedUniversalTimeOffset ::= HourOffset::α MinuteOffset::α Sense::α ;
IfcElectricApplianceType ::= PredefinedType::α ;
IfcConstraint ::= Name::α Description::α ConstraintGrade::α ConstraintSource::α UserDefinedGrade::α ClassifiedAs::α RelatesConstraints::α IsRelatedWith::α PropertiesForConstraint::α Aggregates::α IsAggregatedIn::α CreatingActor::α CreationTime::α ;
IfcElectricDistributionPointFunctionEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SWITCHBOARD::ε) | (MOTORCONTROLCENTRE::ε) | (MIMICPANEL::ε) | (INDICATORPANEL::ε) | (GASDETECTORPANEL::ε) | (DISTRIBUTIONBOARD::ε) | (CONTROLPANEL::ε) | (CONSUMERUNIT::ε) | (ALARMPANEL::ε) ;
IfcBooleanResult ::= FirstOperand::α SecondOperand::α Operator::α ;
IfcAssemblyPlaceEnum ::= (NOTDEFINED::ε) | (FACTORY::ε) | (SITE::ε) ;
IfcSpaceType ::= PredefinedType::α ;
IfcFlowTreatmentDevice ::= ε ;
IfcSystemFurnitureElementType ::= ε ;
IfcDimensionCurveDirectedCallout ::= ε ;
IfcColumnTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (COLUMN::ε) ;
IfcInventory ::= Jurisdiction::α (ResponsiblePersons::α)+ LastUpdateDate::α CurrentValue::α OriginalValue::α InventoryType::α ;
IfcRepresentation ::= RepresentationIdentifier::α RepresentationType::α RepresentationMap::α OfProductRepresentation::α ContextOfItems::α (Items::α)+ ;
IfcDiameterDimension ::= ε ;
IfcDuctFittingTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TRANSITION::ε) | (OBSTRUCTION::ε) | (JUNCTION::ε) | (EXIT::ε) | (ENTRY::ε) | (CONNECTOR::ε) | (BEND::ε) ;
IfcCurtainWallType ::= PredefinedType::α ;
IfcConditionCriterion ::= Criterion::α CriterionDateTime::α ;
IfcWallTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (PLUMBINGWALL::ε) | (ELEMENTEDWALL::ε) | (SHEAR::ε) | (POLYGONAL::ε) | (STANDARD::ε) ;
IfcMaterialClassificationRelationship ::= (MaterialClassifications::α)+ ClassifiedMaterial::α ;
IfcProcedureTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (STARTUP::ε) | (SHUTDOWN::ε) | (DIAGNOSTIC::ε) | (CALIBRATION::ε) | (ADVICE_WARNING::ε) | (ADVICE_NOTE::ε) | (ADVICE_CAUTION::ε) ;
IfcDimensionCalloutRelationship ::= ε ;
IfcSurfaceOfRevolution ::= AxisPosition::α ;
IfcServiceLifeTypeEnum ::= (REFERENCESERVICELIFE::ε) | (PESSIMISTICREFERENCESERVICELIFE::ε) | (OPTIMISTICREFERENCESERVICELIFE::ε) | (EXPECTEDSERVICELIFE::ε) | (ACTUALSERVICELIFE::ε) ;
IfcImageTexture ::= UrlReference::α ;
IfcFurnitureType ::= AssemblyPlace::α ;
IfcWindowPanelProperties ::= OperationType::α PanelPosition::α FrameDepth::α FrameThickness::α ShapeAspectStyle::α ;
IfcRelFillsElement ::= RelatingOpeningElement::α RelatedBuildingElement::α ;
IfcHatchLineDistanceSelect ::= IfcPositiveLengthMeasurevalue::α IfcOneDirectionRepeatFactorvalue::α ;
IfcStructuralPlanarActionVarying ::= VaryingAppliedLoadLocation::α SubsequentAppliedLoads::α ;
IfcBuildingElementComponent ::= ε ;
IfcGridPlacement ::= PlacementLocation::α PlacementRefDirection::α ;
IfcTrimmingPreference ::= (UNSPECIFIED::ε) | (PARAMETER::ε) | (CARTESIAN::ε) ;
IfcPile ::= PredefinedType::α ConstructionType::α ;
IfcBuildingElementPart ::= ε ;
IfcObjective ::= ObjectiveQualifier::α UserDefinedQualifier::α BenchmarkValues::α ResultValues::α ;
IfcMechanicalSteelMaterialProperties ::= YieldStress::α UltimateStress::α UltimateStrain::α HardeningModule::α ProportionalStress::α PlasticStrain::α (Relaxations::α)+ ;
IfcCartesianTransformationOperator ::= Axis1::α Axis2::α LocalOrigin::α Scale::α ;
IfcStateEnum ::= (READONLYLOCKED::ε) | (READWRITELOCKED::ε) | (LOCKED::ε) | (READONLY::ε) | (READWRITE::ε) ;
IfcEdgeCurve ::= EdgeGeometry::α SameSense::α ;
IfcWallType ::= PredefinedType::α ;
IfcRelAssignsToActor ::= RelatingActor::α ActingRole::α ;
IfcReflectanceMethodEnum ::= (NOTDEFINED::ε) | (STRAUSS::ε) | (PLASTIC::ε) | (PHONG::ε) | (MIRROR::ε) | (METAL::ε) | (MATT::ε) | (GLASS::ε) | (FLAT::ε) | (BLINN::ε) ;
IfcSoundValue ::= SoundLevelSingleValue::α SoundLevelTimeSeries::α Frequency::α ;
IfcBuildingElementProxyTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) ;
IfcChillerType ::= PredefinedType::α ;
IfcAlarmType ::= PredefinedType::α ;
IfcAnalysisModelTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (LOADING_3D::ε) | (OUT_PLANE_LOADING_2D::ε) | (IN_PLANE_LOADING_2D::ε) ;
IfcProfileDef ::= ProfileType::α ProfileName::α ;
IfcMember ::= ε ;
IfcSurfaceSide ::= (BOTH::ε) | (NEGATIVE::ε) | (POSITIVE::ε) ;
IfcRepresentationContext ::= ContextIdentifier::α ContextType::α RepresentationsInContext::α ;
IfcWindowStyle ::= ConstructionType::α OperationType::α ParameterTakesPrecedence::α Sizeable::α ;
IfcFaceBound ::= Bound::α Orientation::α ;
IfcGeometricRepresentationItem ::= ε ;
IfcSubContractResource ::= SubContractor::α JobDescription::α ;
IfcDataOriginEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SIMULATED::ε) | (PREDICTED::ε) | (MEASURED::ε) ;
IfcLShapeProfileDef ::= Depth::α Width::α Thickness::α FilletRadius::α EdgeRadius::α LegSlope::α CentreOfGravityInX::α CentreOfGravityInY::α ;
IfcRelDecomposes ::= RelatingObject::α (RelatedObjects::α)+ ;
IfcCondition ::= ε ;
IfcTransportElementTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (MOVINGWALKWAY::ε) | (ESCALATOR::ε) | (ELEVATOR::ε) ;
IfcDocumentStatusEnum ::= (NOTDEFINED::ε) | (REVISION::ε) | (FINAL::ε) | (FINALDRAFT::ε) | (DRAFT::ε) ;
IfcResource ::= ResourceOf::α ;
IfcStructuralLinearActionVarying ::= VaryingAppliedLoadLocation::α (SubsequentAppliedLoads::α)+ ;
IfcCoilTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (GASHEATINGCOIL::ε) | (ELECTRICHEATINGCOIL::ε) | (WATERHEATINGCOIL::ε) | (STEAMHEATINGCOIL::ε) | (WATERCOOLINGCOIL::ε) | (DXCOOLINGCOIL::ε) ;
IfcGridAxis ::= AxisTag::α SameSense::α PartOfW::α PartOfV::α PartOfU::α HasIntersections::α AxisCurve::α ;
IfcPresentationStyleSelect ::= IfcNullStylevalue::α IfcSurfaceStylevalue::α IfcTextStylevalue::α IfcFillAreaStylevalue::α IfcSymbolStylevalue::α IfcCurveStylevalue::α ;
IfcGeometricProjectionEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (ELEVATION_VIEW::ε) | (SECTION_VIEW::ε) | (REFLECTED_PLAN_VIEW::ε) | (PLAN_VIEW::ε) | (MODEL_VIEW::ε) | (SKETCH_VIEW::ε) | (GRAPH_VIEW::ε) ;
IfcVertexBasedTextureMap ::= TextureVertices::α TexturePoints::α ;
IfcFaceSurface ::= FaceSurface::α SameSense::α ;
IfcCondenserType ::= PredefinedType::α ;
IfcFanTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (PROPELLORAXIAL::ε) | (VANEAXIAL::ε) | (TUBEAXIAL::ε) | (CENTRIFUGALAIRFOIL::ε) | (CENTRIFUGALBACKWARDINCLINEDCURVED::ε) | (CENTRIFUGALRADIAL::ε) | (CENTRIFUGALFORWARDCURVED::ε) ;
IfcSlippageConnectionCondition ::= SlippageX::α SlippageY::α SlippageZ::α ;
IfcRelNests ::= ε ;
IfcTubeBundleType ::= PredefinedType::α ;
IfcCostScheduleTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SCHEDULEOFRATES::ε) | (UNPRICEDBILLOFQUANTITIES::ε) | (PRICEDBILLOFQUANTITIES::ε) | (TENDER::ε) | (ESTIMATE::ε) | (COSTPLAN::ε) | (BUDGET::ε) ;
IfcStructuralLoadSingleDisplacementDistortion ::= Distortion::α ;
IfcSectionedSpine ::= SpineCurve::α CrossSections::α CrossSectionPositions::α ;
IfcConstraintEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (ADVISORY::ε) | (SOFT::ε) | (HARD::ε) ;
IfcRelConnectsStructuralElement ::= RelatingElement::α RelatedStructuralMember::α ;
IfcConstraintClassificationRelationship ::= ClassifiedConstraint::α (RelatedClassifications::α)+ ;
IfcAppliedValue ::= Name::α Description::α AppliedValue::α ValuesReferenced::α ValueOfComponents::α IsComponentIn::α UnitBasis::α ApplicableDate::α FixedUntilDate::α ;
IfcSwitchingDeviceType ::= PredefinedType::α ;
IfcObjectDefinition ::= HasAssignments::α IsDecomposedBy::α Decomposes::α ;
IfcPropertySourceEnum ::= (NOTKNOWN::ε) | (USERDEFINED::ε) | (MEASURED::ε) | (COMMISSIONING::ε) | (ASBUILT::ε) | (SIMULATED::ε) | (DESIGNMINIMUM::ε) | (DESIGNMAXIMUM::ε) | (DESIGN::ε) ;
IfcElementAssemblyTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TRUSS::ε) | (SLAB_FIELD::ε) | (RIGID_FRAME::ε) | (REINFORCEMENT_UNIT::ε) | (GIRDER::ε) | (BRACED_FRAME::ε) | (BEAM_GRID::ε) | (ARCH::ε) | (ACCESSORY_ASSEMBLY::ε) ;
IfcMonetaryUnit ::= Currency::α ;
IfcFlowStorageDeviceType ::= ε ;
IfcCurtainWall ::= ε ;
IfcRelSequence ::= TimeLag::α SequenceType::α RelatingProcess::α RelatedProcess::α ;
IfcLightFixtureType ::= PredefinedType::α ;
IfcAnnotationTextOccurrence ::= ε ;
IfcCoolingTowerType ::= PredefinedType::α ;
IfcCurrencyRelationship ::= RelatingMonetaryUnit::α RelatedMonetaryUnit::α RateDateTime::α RateSource::α ExchangeRate::α ;
IfcTextLiteralWithExtent ::= Extent::α BoxAlignment::α ;
IfcAnnotationCurveOccurrence ::= AnnotatedBySymbols::α ;
IfcRelConnectsWithEccentricity ::= ConnectionConstraint::α ;
IfcDerivedMeasureValue ::= IfcIonConcentrationMeasurevalue::α IfcPHMeasurevalue::α IfcHeatingValueMeasurevalue::α IfcSoundPressureMeasurevalue::α IfcSoundPowerMeasurevalue::α IfcWarpingMomentMeasurevalue::α IfcWarpingConstantMeasurevalue::α IfcThermalExpansionCoefficientMeasurevalue::α IfcTemperatureGradientMeasurevalue::α IfcSectionModulusMeasurevalue::α IfcSectionalAreaIntegralMeasurevalue::α IfcRotationalMassMeasurevalue::α IfcModulusOfRotationalSubgradeReactionMeasurevalue::α IfcModulusOfLinearSubgradeReactionMeasurevalue::α IfcMassPerLengthMeasurevalue::α IfcCurvatureMeasurevalue::α IfcLuminousIntensityDistributionMeasurevalue::α IfcLinearMomentMeasurevalue::α IfcShearModulusMeasurevalue::α IfcRotationalStiffnessMeasurevalue::α IfcPlanarForceMeasurevalue::α IfcMomentOfInertiaMeasurevalue::α IfcModulusOfElasticityMeasurevalue::α IfcModulusOfSubgradeReactionMeasurevalue::α IfcLinearStiffnessMeasurevalue::α IfcLinearForceMeasurevalue::α IfcAccelerationMeasurevalue::α IfcTorqueMeasurevalue::α IfcRotationalFrequencyMeasurevalue::α IfcRadioActivityMeasurevalue::α IfcAbsorbedDoseMeasurevalue::α IfcElectricCapacitanceMeasurevalue::α IfcDoseEquivalentMeasurevalue::α IfcElectricChargeMeasurevalue::α IfcElectricConductanceMeasurevalue::α IfcElectricResistanceMeasurevalue::α IfcIlluminanceMeasurevalue::α IfcInductanceMeasurevalue::α IfcForceMeasurevalue::α IfcLuminousFluxMeasurevalue::α IfcMagneticFluxMeasurevalue::α IfcMagneticFluxDensityMeasurevalue::α IfcMonetaryMeasurevalue::α IfcSpecificHeatCapacityMeasurevalue::α IfcIsothermalMoistureCapacityMeasurevalue::α IfcMoistureDiffusivityMeasurevalue::α IfcVaporPermeabilityMeasurevalue::α IfcMolecularWeightMeasurevalue::α IfcThermalConductivityMeasurevalue::α IfcAngularVelocityMeasurevalue::α IfcDynamicViscosityMeasurevalue::α IfcElectricVoltageMeasurevalue::α IfcEnergyMeasurevalue::α IfcFrequencyMeasurevalue::α IfcHeatFluxDensityMeasurevalue::α IfcIntegerCountRateMeasurevalue::α IfcKinematicViscosityMeasurevalue::α IfcLinearVelocityMeasurevalue::α IfcMassDensityMeasurevalue::α IfcMassFlowRateMeasurevalue::α IfcPowerMeasurevalue::α IfcPressureMeasurevalue::α IfcThermalAdmittanceMeasurevalue::α IfcThermalResistanceMeasurevalue::α IfcThermalTransmittanceMeasurevalue::α IfcTimeStampvalue::α IfcVolumetricFlowRateMeasurevalue::α ;
IfcProcess ::= OperatesOn::α IsSuccessorFrom::α IsPredecessorTo::α ;
IfcRoot ::= GlobalId::α Name::α Description::α OwnerHistory::α HasAssociations::α ;
IfcOrientationSelect ::= IfcPlaneAngleMeasurevalue::α IfcDirectionvalue::α ;
IfcFluidFlowProperties ::= PropertySource::α UserDefinedPropertySource::α TemperatureSingleValue::α WetBulbTemperatureSingleValue::α FlowConditionSingleValue::α VelocitySingleValue::α PressureSingleValue::α FlowrateSingleValue::α FlowConditionTimeSeries::α VelocityTimeSeries::α FlowrateTimeSeries::α Fluid::α PressureTimeSeries::α WetBulbTemperatureTimeSeries::α TemperatureTimeSeries::α ;
IfcValveType ::= PredefinedType::α ;
IfcDistributionControlElementType ::= ε ;
IfcEnergyProperties ::= EnergySequence::α UserDefinedEnergySequence::α ;
IfcReinforcingBarRoleEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (RING::ε) | (EDGE::ε) | (PUNCHING::ε) | (STUD::ε) | (LIGATURE::ε) | (SHEAR::ε) | (MAIN::ε) ;
IfcProtectiveDeviceTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (VARISTOR::ε) | (RESIDUALCURRENTSWITCH::ε) | (RESIDUALCURRENTCIRCUITBREAKER::ε) | (EARTHFAILUREDEVICE::ε) | (CIRCUITBREAKER::ε) | (FUSEDISCONNECTOR::ε) ;
IfcLightSourceDirectional ::= Orientation::α ;
IfcStructuralMember ::= ReferencesElement::α ConnectedBy::α ;
IfcDoorPanelPositionEnum ::= (NOTDEFINED::ε) | (RIGHT::ε) | (MIDDLE::ε) | (LEFT::ε) ;
IfcRoof ::= ShapeType::α ;
IfcAheadOrBehind ::= (BEHIND::ε) | (AHEAD::ε) ;
IfcObjectiveEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TRIGGERCONDITION::ε) | (SPECIFICATION::ε) | (REQUIREMENT::ε) | (HEALTHANDSAFETY::ε) | (DESIGNINTENT::ε) | (CODECOMPLIANCE::ε) ;
IfcShapeAspect ::= Name::α Description::α ProductDefinitional::α (ShapeRepresentations::α)+ PartOfProductDefinitionShape::α ;
IfcLocalTime ::= HourComponent::α MinuteComponent::α SecondComponent::α DaylightSavingOffset::α Zone::α ;
IfcSweptDiskSolid ::= Radius::α InnerRadius::α StartParam::α EndParam::α Directrix::α ;
IfcRelProjectsElement ::= RelatingElement::α RelatedFeatureElement::α ;
IfcMechanicalMaterialProperties ::= DynamicViscosity::α YoungModulus::α ShearModulus::α PoissonRatio::α ThermalExpansionCoefficient::α ;
IfcBoundaryEdgeCondition ::= LinearStiffnessByLengthX::α LinearStiffnessByLengthY::α LinearStiffnessByLengthZ::α RotationalStiffnessByLengthX::α RotationalStiffnessByLengthY::α RotationalStiffnessByLengthZ::α ;
IfcServiceLife ::= ServiceLifeType::α ServiceLifeDuration::α ;
IfcTable ::= (Rows::α)+ Name::α ;
IfcElectricTimeControlType ::= PredefinedType::α ;
IfcCompressorTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TWINSCREW::ε) | (SINGLESCREW::ε) | (ROTARYVANE::ε) | (ROLLINGPISTON::ε) | (WELDEDSHELLHERMETIC::ε) | (SEMIHERMETIC::ε) | (HERMETIC::ε) | (OPENTYPE::ε) | (BOOSTER::ε) | (SINGLESTAGE::ε) | (TROCHOIDAL::ε) | (SCROLL::ε) | (ROTARY::ε) | (RECIPROCATING::ε) | (DYNAMIC::ε) ;
IfcFlowFittingType ::= ε ;
IfcApprovalActorRelationship ::= Actor::α Approval::α Role::α ;
IfcStairTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TWO_CURVED_RUN_STAIR::ε) | (CURVED_RUN_STAIR::ε) | (DOUBLE_RETURN_STAIR::ε) | (SPIRAL_STAIR::ε) | (THREE_QUARTER_TURN_STAIR::ε) | (THREE_QUARTER_WINDING_STAIR::ε) | (TWO_QUARTER_TURN_STAIR::ε) | (TWO_QUARTER_WINDING_STAIR::ε) | (HALF_TURN_STAIR::ε) | (HALF_WINDING_STAIR::ε) | (QUARTER_TURN_STAIR::ε) | (QUARTER_WINDING_STAIR::ε) | (TWO_STRAIGHT_RUN_STAIR::ε) | (STRAIGHT_RUN_STAIR::ε) ;
IfcGeneralMaterialProperties ::= MolecularWeight::α Porosity::α MassDensity::α ;
IfcGeneralProfileProperties ::= PhysicalWeight::α Perimeter::α MinimumPlateThickness::α MaximumPlateThickness::α CrossSectionArea::α ;
IfcMeasureValue ::= IfcNormalisedRatioMeasurevalue::α IfcLuminousIntensityMeasurevalue::α IfcAmountOfSubstanceMeasurevalue::α IfcAreaMeasurevalue::α IfcContextDependentMeasurevalue::α IfcCountMeasurevalue::α IfcDescriptiveMeasurevalue::α IfcElectricCurrentMeasurevalue::α IfcLengthMeasurevalue::α IfcPositiveLengthMeasurevalue::α IfcMassMeasurevalue::α IfcNumericMeasurevalue::α IfcParameterValuevalue::α IfcPlaneAngleMeasurevalue::α IfcPositivePlaneAngleMeasurevalue::α IfcRatioMeasurevalue::α IfcPositiveRatioMeasurevalue::α IfcSolidAngleMeasurevalue::α IfcThermodynamicTemperatureMeasurevalue::α IfcTimeMeasurevalue::α IfcVolumeMeasurevalue::α ;
IfcFlowInstrumentTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (VOLTMETER_RMS::ε) | (VOLTMETER_PEAK::ε) | (PHASEANGLEMETER::ε) | (POWERFACTORMETER::ε) | (FREQUENCYMETER::ε) | (AMMETER::ε) | (THERMOMETER::ε) | (PRESSUREGAUGE::ε) ;
IfcSystem ::= ServicesBuildings::α ;
IfcPileTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SUPPORT::ε) | (FRICTION::ε) | (COHESION::ε) ;
IfcDuctFittingType ::= PredefinedType::α ;
IfcPresentationStyle ::= Name::α ;
IfcArbitraryProfileDefWithVoids ::= (InnerCurves::α)+ ;
IfcWindowStyleConstructionEnum ::= (NOTDEFINED::ε) | (OTHER_CONSTRUCTION::ε) | (PLASTIC::ε) | (ALUMINIUM_WOOD::ε) | (WOOD::ε) | (STEEL::ε) | (HIGH_GRADE_STEEL::ε) | (ALUMINIUM::ε) ;
IfcPropertyEnumeration ::= (EnumerationValues::α)+ Unit::α Name::α ;
IfcCoveringType ::= PredefinedType::α ;
IfcAngularDimension ::= ε ;
IfcFootingTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (STRIP_FOOTING::ε) | (PILE_CAP::ε) | (PAD_FOOTING::ε) | (FOOTING_BEAM::ε) ;
IfcPreDefinedTextFont ::= ε ;
IfcDistributionChamberElement ::= ε ;
IfcCartesianTransformationOperator2DnonUniform ::= Scale2::α ;
IfcTimeSeriesValue ::= (ListValues::α)+ ;
IfcDocumentConfidentialityEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (PERSONAL::ε) | (CONFIDENTIAL::ε) | (RESTRICTED::ε) | (PUBLIC::ε) ;
IfcPointOnCurve ::= BasisCurve::α PointParameter::α ;
IfcReinforcingBarSurfaceEnum ::= (TEXTURED::ε) | (PLAIN::ε) ;
IfcSpaceProgram ::= SpaceProgramIdentifier::α MaxRequiredArea::α MinRequiredArea::α StandardRequiredArea::α HasInteractionReqsFrom::α HasInteractionReqsTo::α RequestedLocation::α ;
IfcRelAssignsToProcess ::= RelatingProcess::α QuantityInProcess::α ;
IfcPropertyReferenceValue ::= PropertyReference::α UsageName::α ;
IfcProfileTypeEnum ::= (AREA::ε) | (CURVE::ε) ;
IfcOrderAction ::= ActionID::α ;
IfcDistributionFlowElementType ::= ε ;
IfcControllerTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TWOPOSITION::ε) | (TIMEDTWOPOSITION::ε) | (PROPORTIONALINTEGRALDERIVATIVE::ε) | (PROPORTIONALINTEGRAL::ε) | (PROPORTIONAL::ε) | (FLOATING::ε) ;
IfcRelAssociatesAppliedValue ::= RelatingAppliedValue::α ;
IfcMemberTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (STUD::ε) | (STRUT::ε) | (STRINGER::ε) | (RAFTER::ε) | (PURLIN::ε) | (POST::ε) | (PLATE::ε) | (MULLION::ε) | (MEMBER::ε) | (COLLAR::ε) | (CHORD::ε) | (BRACE::ε) ;
IfcAxis1Placement ::= Axis::α ;
IfcRelAssignsToResource ::= RelatingResource::α ;
IfcRightCircularCone ::= Height::α BottomRadius::α ;
IfcConnectionPortGeometry ::= LocationAtRelatingElement::α LocationAtRelatedElement::α ProfileOfPort::α ;
IfcProductRepresentation ::= Name::α Description::α ShapeOfProduct::α (Representations::α)+ ;
IfcLightFixtureTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (DIRECTIONSOURCE::ε) | (POINTSOURCE::ε) ;
IfcVirtualGridIntersection ::= IntersectingAxes::α OffsetDistances::α ;
IfcEquipmentElement ::= ε ;
IfcStructuralActivity ::= AssignedToStructuralItem::α AppliedLoad::α GlobalOrLocal::α ;
IfcArbitraryOpenProfileDef ::= Curve::α ;
IfcEnergySequenceEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (AUXILIARY::ε) | (TERTIARY::ε) | (SECONDARY::ε) | (PRIMARY::ε) ;
IfcBoxedHalfSpace ::= Enclosure::α ;
IfcBeamType ::= PredefinedType::α ;
IfcFacetedBrepWithVoids ::= (Voids::α)+ ;
IfcClassificationNotation ::= (NotationFacets::α)+ ;
IfcFlowDirectionEnum ::= (NOTDEFINED::ε) | (SOURCEANDSINK::ε) | (SINK::ε) | (SOURCE::ε) ;
IfcCableCarrierSegmentType ::= PredefinedType::α ;
IfcDocumentInformation ::= DocumentId::α Name::α Description::α Purpose::α IntendedUse::α Scope::α Revision::α Confidentiality::α Status::α IsPointedTo::α IsPointer::α (DocumentReferences::α)+ DocumentOwner::α (Editors::α)+ CreationTime::α LastRevisionTime::α ElectronicFormat::α ValidFrom::α ValidUntil::α ;
IfcPort ::= ContainedIn::α ConnectedFrom::α ConnectedTo::α ;
IfcStyledRepresentation ::= ε ;
IfcFaceOuterBound ::= ε ;
IfcStructuralSurfaceTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SHELL::ε) | (MEMBRANE_ELEMENT::ε) | (BENDING_ELEMENT::ε) ;
IfcElectricApplianceTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (WATERCOOLER::ε) | (WATERHEATER::ε) | (WASHINGMACHINE::ε) | (VENDINGMACHINE::ε) | (TV::ε) | (TUMBLEDRYER::ε) | (TELEPHONE::ε) | (SCANNER::ε) | (RADIANTHEATER::ε) | (REFRIGERATOR::ε) | (PRINTER::ε) | (PHOTOCOPIER::ε) | (MICROWAVE::ε) | (INDIRECTWATERHEATER::ε) | (HANDDRYER::ε) | (FRIDGE_FREEZER::ε) | (FREEZER::ε) | (FREESTANDINGFAN::ε) | (FACSIMILE::ε) | (ELECTRICHEATER::ε) | (ELECTRICCOOKER::ε) | (DISHWASHER::ε) | (DIRECTWATERHEATER::ε) | (COMPUTER::ε) ;
IfcConnectedFaceSet ::= (CfsFaces::α)+ ;
Ifc2DCompositeCurve ::= ε ;
IfcClassificationReference ::= ReferencedSource::α ;
IfcTextStyle ::= TextCharacterAppearance::α TextStyle::α TextFontStyle::α ;
IfcLightDistributionCurveEnum ::= (NOTDEFINED::ε) | (TYPE_C::ε) | (TYPE_B::ε) | (TYPE_A::ε) ;
IfcBuildingElementType ::= ε ;
IfcWindowPanelOperationEnum ::= (NOTDEFINED::ε) | (OTHEROPERATION::ε) | (FIXEDCASEMENT::ε) | (REMOVABLECASEMENT::ε) | (SLIDINGVERTICAL::ε) | (SLIDINGHORIZONTAL::ε) | (PIVOTVERTICAL::ε) | (PIVOTHORIZONTAL::ε) | (BOTTOMHUNG::ε) | (TOPHUNG::ε) | (TILTANDTURNLEFTHAND::ε) | (TILTANDTURNRIGHTHAND::ε) | (SIDEHUNGLEFTHAND::ε) | (SIDEHUNGRIGHTHAND::ε) ;
IfcPropertySetDefinition ::= PropertyDefinitionOf::α DefinesType::α ;
IfcMemberType ::= PredefinedType::α ;
IfcStructuralAction ::= CausedBy::α DestabilizingLoad::α ;
IfcStackTerminalType ::= PredefinedType::α ;
IfcAnnotationSurface ::= Item::α TextureCoordinates::α ;
IfcStructuralPointReaction ::= ε ;
IfcDimensionCurveTerminator ::= Role::α ;
IfcSymbolStyle ::= StyleOfSymbol::α ;
IfcEnvironmentalImpactValue ::= ImpactType::α Category::α UserDefinedCategory::α ;
IfcHeatExchangerType ::= PredefinedType::α ;
IfcActionSourceTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (BRAKES::ε) | (RAIN::ε) | (WAVE::ε) | (CURRENT::ε) | (ICE::ε) | (BUOYANCY::ε) | (LACK_OF_FIT::ε) | (CREEP::ε) | (SHRINKAGE::ε) | (SYSTEM_IMPERFECTION::ε) | (PROPPING::ε) | (ERECTION::ε) | (TRANSPORT::ε) | (IMPACT::ε) | (IMPULSE::ε) | (FIRE::ε) | (EARTHQUAKE_E::ε) | (TEMPERATURE_T::ε) | (SETTLEMENT_U::ε) | (PRESTRESSING_P::ε) | (WIND_W::ε) | (SNOW_S::ε) | (LIVE_LOAD_Q::ε) | (COMPLETION_G1::ε) | (DEAD_LOAD_G::ε) ;
IfcPropertySingleValue ::= NominalValue::α Unit::α ;
IfcTransformerType ::= PredefinedType::α ;
IfcStairFlightType ::= PredefinedType::α ;
IfcOutletType ::= PredefinedType::α ;
IfcClassification ::= Source::α Edition::α Name::α Contains::α EditionDate::α ;
IfcTankTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (PRESSUREVESSEL::ε) | (EXPANSION::ε) | (SECTIONAL::ε) | (PREFORMED::ε) ;
IfcCenterLineProfileDef ::= Thickness::α ;
IfcMaterialList ::= (Materials::α)+ ;
IfcAnnotationSurfaceOccurrence ::= ε ;
IfcOwnerHistory ::= State::α ChangeAction::α LastModifiedDate::α CreationDate::α OwningUser::α OwningApplication::α LastModifyingUser::α LastModifyingApplication::α ;
IfcElementComponent ::= ε ;
IfcEquipmentStandard ::= ε ;
IfcCompositeCurveSegment ::= Transition::α SameSense::α UsingCurves::α ParentCurve::α ;
IfcAirTerminalBoxType ::= PredefinedType::α ;
IfcNullStyle ::= NULL::ε ;
IfcTendonAnchor ::= ε ;
IfcProjectionCurve ::= ε ;
IfcDimensionPair ::= ε ;
IfcTimeSeriesReferenceRelationship ::= ReferencedTimeSeries::α (TimeSeriesReferences::α)+ ;
IfcSimpleValue ::= IfcLogicalvalue::α IfcLabelvalue::α IfcTextvalue::α IfcIdentifiervalue::α IfcBooleanvalue::α IfcRealvalue::α IfcIntegervalue::α ;
IfcRelConnectsPathElements ::= (RelatingPriorities::α)+ (RelatedPriorities::α)+ RelatedConnectionType::α RelatingConnectionType::α ;
IfcNamedUnit ::= Dimensions::α UnitType::α ;
IfcStructuralLoadGroup ::= PredefinedType::α ActionType::α ActionSource::α Coefficient::α Purpose::α SourceOfResultGroup::α LoadGroupFor::α ;
IfcPreDefinedPointMarkerSymbol ::= ε ;
IfcAppliedValueRelationship ::= ArithmeticOperator::α Name::α Description::α ComponentOfTotal::α (Components::α)+ ;
IfcSpaceThermalLoadProperties ::= ApplicableValueRatio::α ThermalLoadSource::α PropertySource::α SourceDescription::α MaximumValue::α MinimumValue::α UserDefinedThermalLoadSource::α UserDefinedPropertySource::α ThermalLoadType::α ThermalLoadTimeSeriesValues::α ;
IfcRelVoidsElement ::= RelatingBuildingElement::α RelatedOpeningElement::α ;
IfcRelDefinesByProperties ::= RelatingPropertyDefinition::α ;
IfcMaterialDefinitionRepresentation ::= RepresentedMaterial::α ;
IfcCoveringTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (WRAPPING::ε) | (SLEEVING::ε) | (MEMBRANE::ε) | (INSULATION::ε) | (ROOFING::ε) | (CLADDING::ε) | (FLOORING::ε) | (CEILING::ε) ;
IfcTankType ::= PredefinedType::α ;
IfcLayerSetDirectionEnum ::= (AXIS3::ε) | (AXIS2::ε) | (AXIS1::ε) ;
IfcFurnishingElement ::= ε ;
IfcStructuralCurveMember ::= PredefinedType::α ;
IfcPipeFittingType ::= PredefinedType::α ;
IfcStair ::= ShapeType::α ;
IfcDoorPanelProperties ::= PanelDepth::α PanelOperation::α PanelWidth::α PanelPosition::α ShapeAspectStyle::α ;
IfcElementComponentType ::= ε ;
IfcObjectTypeEnum ::= (NOTDEFINED::ε) | (PROJECT::ε) | (GROUP::ε) | (ACTOR::ε) | (RESOURCE::ε) | (CONTROL::ε) | (PROCESS::ε) | (PRODUCT::ε) ;
IfcSlab ::= PredefinedType::α ;
IfcLocalPlacement ::= PlacementRelTo::α RelativePlacement::α ;
IfcCShapeProfileDef ::= Depth::α Width::α WallThickness::α Girth::α InternalFilletRadius::α CentreOfGravityInX::α ;
IfcStructuralResultGroup ::= TheoryType::α IsLinear::α ResultGroupFor::α ResultForLoadGroup::α ;
IfcRelationship ::= ε ;
IfcHumidifierType ::= PredefinedType::α ;
IfcRelAssignsTasks ::= TimeForTask::α ;
IfcTextLiteral ::= Literal::α Path::α Placement::α ;
IfcLinearDimension ::= ε ;
IfcEnergyConversionDevice ::= ε ;
IfcBlobTexture ::= RasterFormat::α RasterCode::α ;
IfcElectricCurrentEnum ::= (NOTDEFINED::ε) | (DIRECT::ε) | (ALTERNATING::ε) ;
IfcActionTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (EXTRAORDINARY_A::ε) | (VARIABLE_Q::ε) | (PERMANENT_G::ε) ;
IfcSurfaceStyleLighting ::= DiffuseTransmissionColour::α DiffuseReflectionColour::α TransmissionColour::α ReflectanceColour::α ;
IfcSurfaceOfLinearExtrusion ::= ExtrudedDirection::α Depth::α ;
IfcMetric ::= Benchmark::α ValueSource::α DataValue::α ;
IfcSurfaceTexture ::= RepeatS::α RepeatT::α TextureType::α TextureTransform::α ;
IfcTableRow ::= (RowCells::α)+ OfTable::α IsHeading::α ;
IfcBoundaryFaceCondition ::= LinearStiffnessByAreaX::α LinearStiffnessByAreaY::α LinearStiffnessByAreaZ::α ;
IfcRelOccupiesSpaces ::= ε ;
IfcPath ::= (EdgeList::α)+ ;
IfcFacetedBrep ::= ε ;
IfcDistributionPort ::= FlowDirection::α ;
IfcVertex ::= ε ;
IfcMotorConnectionTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (DIRECTDRIVE::ε) | (COUPLING::ε) | (BELTDRIVE::ε) ;
IfcRelConnectsPortToElement ::= RelatingPort::α RelatedElement::α ;
IfcDistributionChamberElementTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (VALVECHAMBER::ε) | (TRENCH::ε) | (SUMP::ε) | (METERCHAMBER::ε) | (MANHOLE::ε) | (INSPECTIONPIT::ε) | (INSPECTIONCHAMBER::ε) | (FORMEDDUCT::ε) ;
IfcFurnishingElementType ::= ε ;
IfcElementQuantity ::= (Quantities::α)+ MethodOfMeasurement::α ;
IfcApprovalRelationship ::= Description::α Name::α RelatedApproval::α RelatingApproval::α ;
IfcRelReferencedInSpatialStructure ::= (RelatedElements::α)+ RelatingStructure::α ;
--------------------metamodels::mlhim2.bgf--------------------
DvDecimal ::= dv::α ;
DvCount ::= count::α ;
DvIdentifier ::= issuer::α assigner::α name::α ;
DvMediaMultipart ::= dv::α ;
DvNormalizedString ::= uuid::α language::α dv::α ;
DvNegativeInteger ::= dv::α ;
DvMediaModel ::= dv::α ;
DvCodedString ::= codeString::α terminologyName::α terminologyAbbrev::α ;
DvUnsignedShort ::= dv::α ;
NINF ::= ε ;
NA ::= ε ;
DvPositiveInteger ::= dv::α ;
DvRate ::= rateType::α ;
PINF ::= ε ;
DER ::= ε ;
DvUnsignedByte ::= dv::α ;
DvMediaApp ::= dv::α ;
DvDateTime ::= dv::α ;
DvProportion ::= proportionType::α ;
DvInteger ::= dv::α ;
DvShort ::= dv::α ;
DvLanguage ::= dv::α ;
DvMediaImage ::= dv::α ;
DvUnsignedInt ::= dv::α ;
DvToken ::= dv::α ;
DvDuration ::= dv::α ;
MSK ::= ε ;
DvMediaAudio ::= dv::α ;
DvUnsignedLong ::= dv::α ;
QS ::= ε ;
DvTime ::= dv::α ;
DvMediaText ::= dv::string() ;
DvOrdinal ::= dv::α symbol::string() ;
DvParsable ::= dv::α formalism::α ;
DvInt ::= dv::integer() ;
DvQuantity ::= units::α ;
DvURI ::= dv::α ;
DvByte ::= dv::α ;
ASKR ::= ε ;
DvBoolean ::= dv::α ;
EntityRef ::= uuid::α namespace::α objType::α ;
DvMediaMsg ::= dv::α ;
DvNonNegativeInteger ::= dv::α ;
DvLong ::= dv::α ;
NASK ::= ε ;
UNC ::= ε ;
DvNonPositiveInteger ::= dv::α ;
DvMediaVideo ::= dv::α ;
TRC ::= ε ;
OntologyEntry ::= (contents::string())+ ;
NAV ::= ε ;
MetaDataEntry ::= title::string() contents::string() ;
DvDate ::= dv::α ;
--------------------metamodels::paperdyne.owl.bgf--------------------
Tends_Towards_Practical ::= ε ;
Must_Accept ::= ε ;
start_date_of_camera-ready_submission ::= ε ;
Invited_Speaker ::= ε ;
Preference ::= ε ;
Welcome_address ::= ε ;
New_Perspective_Issue_Problem_Solving ::= ε ;
Classic_Papers ::= ε ;
Refusing_manuscript ::= ε ;
Confirmed_Conflict ::= ε ;
Result_of_Advocate ::= ε ;
Conference_hotel ::= ε ;
Other ::= ε ;
Coffee_break ::= ε ;
Valuable_Confirmation_of_Present_Knowledge ::= ε ;
Rejection ::= ε ;
Renting ::= ε ;
Late_paid_applicant ::= ε ;
Nonauthor_registration_fee ::= ε ;
EEnum ::= (male::ε) | (female::ε) | (high::ε) | (medium::ε) | (low::ε) | (very high::ε) | (submitted::ε) | (missing::ε) | (notStarted::ε) | (active::ε) | (finished::ε) | (accepted::ε) | (rejected::ε) | (regular::ε) | (invited::ε) | (lowBid::ε) | (-::ε) | (CONFLICT::ε) | (wantNot::ε) | (highBid::ε) | (Yes::ε) | (No::ε) | (Compilers::ε) | (Microarchitecture::ε) | (Systems::ε) | (ForwardLookingIdea::ε) | (Accept::ε) | (Reject::ε) | (Unsure::ε) ;
classification ::= ε ;
Author_attendee_book_registration_fee ::= ε ;
AcceptRating ::= ε ;
IASTED_member ::= ε ;
ClosingTalk ::= ε ;
Late-Registered_Participant ::= ε ;
Contribution_co-Author ::= ε ;
Description ::= ε ;
MealBreak ::= ε ;
Shuttle_bus ::= ε ;
Technical_commitee ::= ε ;
Conference_Hiker ::= ε ;
Departure ::= ε ;
Listener ::= ε ;
Industrial_Session ::= ε ;
Conference_fees ::= ε ;
PC_Meeting ::= ε ;
E-mail_PC_Meeting ::= ε ;
Conference_state ::= ε ;
ComputerNetworksEnterpriseTopic ::= ε ;
New_Information ::= ε ;
Early_paid_applicant ::= ε ;
Passive_conference_participant ::= ε ;
Conference_airport ::= ε ;
Hidden_Conflict ::= ε ;
Receiving_manuscript ::= ε ;
Senior_Reviewer_URL ::= ε ;
High ::= ε ;
date_of_notification ::= ε ;
Excursion ::= ε ;
Presenter_city ::= ε ;
Departure_tax ::= ε ;
Early-Registered_Participant ::= ε ;
phase_of_conference ::= ε ;
Video_cassette_player ::= ε ;
Time_zone ::= ε ;
Single_hotel_room ::= ε ;
Hotel_presenter ::= ε ;
Session_chair ::= ε ;
Introduction_of_speaker ::= ε ;
Marginal_Tend_to_Accept ::= ε ;
ConferenceSession ::= ε ;
Programming ::= ε ;
SubjectArea ::= ε ;
Nonmember_registration_fee ::= ε ;
ComputerNetworksMeasurementsTopic ::= ε ;
Coctail_reception ::= ε ;
Dinner_banquet ::= ε ;
Chair_URL ::= ε ;
Car ::= ε ;
start_date_of_conference ::= ε ;
Reception ::= ε ;
Long_bool ::= ε ;
PostScript ::= ε ;
HTML ::= ε ;
Full_day_tour ::= ε ;
LCD_projector ::= ε ;
PaymentMode ::= ε ;
Presenter_house ::= ε ;
Cd_proceening ::= ε ;
Preview ::= ε ;
Rejection_Email ::= ε ;
Presenter_university ::= ε ;
Student_registration_fee ::= ε ;
Tutorial_Chair ::= ε ;
Inforamtion ::= ε ;
Trip_day ::= ε ;
Hotel_registration_form ::= ε ;
Session_Chair ::= ε ;
Group_Email ::= ε ;
lower_tier_reviewing_process ::= ε ;
Regular_Program_Committee_member ::= ε ;
ComputerNetworksOpticalTopic ::= ε ;
end_date_of_conference ::= ε ;
Double_hotel_room ::= ε ;
AccpetIfRoomRating ::= ε ;
Sponsor_city ::= ε ;
RFC ::= ε ;
Conference_city ::= ε ;
One_day_presenter ::= ε ;
Accepting_manuscript ::= ε ;
SC_Member ::= ε ;
Clarity_to_Present_Understanding ::= ε ;
Highly_Practical ::= ε ;
Contribution_1th-Author ::= ε ;
Modelling ::= ε ;
Value_added_tax ::= ε ;
start_date_of_full_paper_submission ::= ε ;
Clear_Accept ::= ε ;
OC_Chair ::= ε ;
Deleted_Conflict ::= ε ;
Highly_Theoretical ::= ε ;
Acceptance ::= ε ;
Credit_card ::= ε ;
Country ::= ε ;
start_date_of_abstract_submission ::= ε ;
end_date_of_camera-ready_submission ::= ε ;
CoffeeBreak ::= ε ;
Tends_Towards_Theoretical ::= ε ;
PaperQuestion ::= ε ;
Detail ::= ε ;
Final_manuscript ::= ε ;
Bank_transfer ::= ε ;
end_date_of_abstract_submission ::= ε ;
Humour ::= ε ;
Worker_non_speaker ::= ε ;
Book_proceeding ::= ε ;
Registration_form ::= ε ;
Student_non_speaker ::= ε ;
Demo_Chair ::= ε ;
Review_Form_Setup ::= ε ;
Conference_Trip ::= ε ;
Camera_ready_contribution ::= ε ;
Self_Conflict ::= ε ;
Adobe_PDF ::= ε ;
ReviewForm ::= ε ;
Hotel_fee ::= ε ;
Sponsor_company_house ::= ε ;
PC_Chair ::= ε ;
Student_lecturer ::= ε ;
Assistance ::= ε ;
Conference_building ::= ε ;
Review_Committee ::= ε ;
NumericalReviewQuestion ::= ε ;
Marginal_Tend_to_Reject ::= ε ;
WeekRejectRating ::= ε ;
ComputerNetworksSecurityTopic ::= ε ;
Text ::= ε ;
Conflict_Rules ::= ε ;
Corel_Word_Perfect ::= ε ;
Discussion ::= ε ;
PersonalPublicationHistory ::= ε ;
Extended_abstract ::= ε ;
Notification_Email ::= ε ;
Trip ::= ε ;
RTF ::= ε ;
Program_Committee ::= ε ;
Banquet ::= ε ;
Cheque ::= ε ;
Computer_Science ::= ε ;
Conference_Banquet ::= ε ;
Taxi ::= ε ;
rejection_notification_email ::= ε ;
RejectRating ::= ε ;
Computer ::= ε ;
Not_Much ::= ε ;
Worker_lecturer ::= ε ;
Low ::= ε ;
ResearchTopic ::= ε ;
end_date_of_full_paper_submission ::= ε ;
intensity ::= ε ;
String ::= string() ;
Currency ::= ε ;
TextualReviewQuestion ::= ε ;
acceptance_notification_email ::= ε ;
Author_attendee_cd_registration_fee ::= ε ;
ComputerNetworksManagementTopic ::= ε ;
Bidding_And_Paper_Submission_Phase ::= ε ;
Balanced_Theory_and_Practice ::= ε ;
Trip_city ::= ε ;
Contact_Person_URL ::= ε ;
Moderate ::= ε ;
MS_Word ::= ε ;
Fee_for_extra_trip ::= ε ;
ComputerNetworksSwitchingTopic ::= ε ;
Conference_restaurant ::= ε ;
Integer ::= integer() ;
Technic_activity ::= ε ;
Invited_speaker ::= ε ;
Presenter_state ::= ε ;
Regular_Reviewer_URL ::= ε ;
Bidding_Without_Paper_Submission_Phase ::= ε ;
ComputerNetworksSensorTopic ::= ε ;
institute ::= ε ;
Networking ::= ε ;
IASTED_non_member ::= ε ;
One_conference_day ::= ε ;
Clear_Reject ::= ε ;
Overhead_projector ::= ε ;
WelcomeTalk ::= ε ;
Workshop_Chair ::= ε ;
Sponsor_state ::= ε ;
Misc ::= ε ;
Author_information_form ::= ε ;
ComputerNetworksAapplicationsTopic ::= ε ;
Boolean ::= "true" | "false" ;
Initial_manuscipt ::= ε ;
FreeTimeBreak ::= ε ;
Feature_Request ::= ε ;
Portable_Reject ::= ε ;
Van ::= ε ;
Simulating ::= ε ;
Memeber_registration_fee ::= ε ;
--------------------metamodels::sbvrEclipse.bgf--------------------
AdviceOfOptionality ::= ε ;
RealworldNumericalCorrespondence ::= ε ;
ExtensionalDefinition ::= ε ;
FactTypeTemplating ::= ε ;
ObligationFormulation ::= ε ;
NecessityStatement ::= ε ;
StructuralBusinessRule ::= ε ;
OwnedDefinition ::= ε ;
RepresentationFormality ::= ε ;
String ::= string() ;
ObligationStatement ::= ε ;
CategorizationFactType ::= ε ;
IndividualConcept ::= ε ;
IsfacetofFactType ::= ε ;
PossibilityFormulation ::= ε ;
BusinessVocabulary ::= ε ;
RestrictedPermissionStatement ::= ε ;
PositiveInteger ::= ε ;
AdoptedDefinition ::= ε ;
PermissibilityFormulation ::= ε ;
OptionalityStatement ::= ε ;
Objectification ::= ε ;
PropositionNominalization ::= ε ;
ClosedLogicalFormulation ::= ε ;
BusinessPolicyStatement ::= ε ;
ThingInContext ::= ε ;
PossibilityStatement ::= ε ;
IspropertyofFactType ::= ε ;
Icon ::= ε ;
RestrictedPossibilityStatement ::= ε ;
Facet ::= ε ;
CharacteristicType ::= ε ;
ExplicitnessOfRepresentation ::= ε ;
InstantiationFormulation ::= ε ;
KindOfGuidanceStatement ::= ε ;
DefiniteDescription ::= ε ;
Boolean ::= "true" | "false" ;
ContextOfThing ::= ε ;
NonnecessityStatement ::= ε ;
ProhibitionStatement ::= ε ;
NecessityFormulation ::= ε ;
NonobligationStatement ::= ε ;
PermissionStatement ::= ε ;
PartitiveFactType ::= ε ;
ImpossibilityStatement ::= ε ;
ContingencyStatement ::= ε ;
AdviceOfContingency ::= ε ;
--------------------metamodels::sbvrOMG.bgf--------------------
AdviceOfOptionality ::= ε ;
RealworldNumericalCorrespondence ::= ε ;
ExtensionalDefinition ::= ε ;
FactTypeTemplating ::= ε ;
ObligationFormulation ::= ε ;
NecessityStatement ::= ε ;
StructuralBusinessRule ::= ε ;
OwnedDefinition ::= ε ;
RepresentationFormality ::= ε ;
String ::= string() ;
ObligationStatement ::= ε ;
CategorizationFactType ::= ε ;
IndividualConcept ::= ε ;
IsfacetofFactType ::= ε ;
PossibilityFormulation ::= ε ;
BusinessVocabulary ::= ε ;
RestrictedPermissionStatement ::= ε ;
PositiveInteger ::= ε ;
AdoptedDefinition ::= ε ;
PermissibilityFormulation ::= ε ;
OptionalityStatement ::= ε ;
Objectification ::= ε ;
PropositionNominalization ::= ε ;
ClosedLogicalFormulation ::= ε ;
BusinessPolicyStatement ::= ε ;
ThingInContext ::= ε ;
PossibilityStatement ::= ε ;
IspropertyofFactType ::= ε ;
Icon ::= ε ;
RestrictedPossibilityStatement ::= ε ;
Facet ::= ε ;
CharacteristicType ::= ε ;
ExplicitnessOfRepresentation ::= ε ;
InstantiationFormulation ::= ε ;
KindOfGuidanceStatement ::= ε ;
DefiniteDescription ::= ε ;
Boolean ::= "true" | "false" ;
ContextOfThing ::= ε ;
NonnecessityStatement ::= ε ;
ProhibitionStatement ::= ε ;
NecessityFormulation ::= ε ;
NonobligationStatement ::= ε ;
PermissionStatement ::= ε ;
PartitiveFactType ::= ε ;
ImpossibilityStatement ::= ε ;
ContingencyStatement ::= ε ;
AdviceOfContingency ::= ε ;
--------------------metamodels::sigkdd.owl.bgf--------------------
Tends_Towards_Practical ::= ε ;
Must_Accept ::= ε ;
start_date_of_camera-ready_submission ::= ε ;
Preference ::= ε ;
Welcome_address ::= ε ;
New_Perspective_Issue_Problem_Solving ::= ε ;
Classic_Papers ::= ε ;
Refusing_manuscript ::= ε ;
Confirmed_Conflict ::= ε ;
Result_of_Advocate ::= ε ;
Conference_hotel ::= ε ;
Other ::= ε ;
Coffee_break ::= ε ;
Valuable_Confirmation_of_Present_Knowledge ::= ε ;
Rejection ::= ε ;
Renting ::= ε ;
Late_paid_applicant ::= ε ;
classification ::= ε ;
EEnum ::= (male::ε) | (female::ε) | (high::ε) | (medium::ε) | (low::ε) | (very high::ε) | (1::ε) | (2::ε) | (3::ε) | (4::ε) | (5::ε) | (6::ε) | (7::ε) | (submitted::ε) | (missing::ε) | (notStarted::ε) | (active::ε) | (finished::ε) | (accepted::ε) | (rejected::ε) | (regular::ε) | (invited::ε) | (lowBid::ε) | (-::ε) | (CONFLICT::ε) | (wantNot::ε) | (highBid::ε) | (Yes::ε) | (No::ε) | (Accept::ε) | (Reject::ε) | (Unsure::ε) | (ForwardLookingIdea::ε) | (Compilers::ε) | (Microarchitecture::ε) | (Systems::ε) ;
AcceptRating ::= ε ;
IASTED_member ::= ε ;
ClosingTalk ::= ε ;
Late-Registered_Participant ::= ε ;
MealBreak ::= ε ;
Description ::= ε ;
Shuttle_bus ::= ε ;
Technical_commitee ::= ε ;
Conference_Hiker ::= ε ;
Departure ::= ε ;
Industrial_Session ::= ε ;
Conference_fees ::= ε ;
PC_Meeting ::= ε ;
E-mail_PC_Meeting ::= ε ;
Conference_state ::= ε ;
ComputerNetworksEnterpriseTopic ::= ε ;
New_Information ::= ε ;
Early_paid_applicant ::= ε ;
Conference_airport ::= ε ;
Passive_conference_participant ::= ε ;
Hidden_Conflict ::= ε ;
Receiving_manuscript ::= ε ;
Senior_Reviewer_URL ::= ε ;
High ::= ε ;
Excursion ::= ε ;
Presenter_city ::= ε ;
date_of_notification ::= ε ;
Departure_tax ::= ε ;
Early-Registered_Participant ::= ε ;
phase_of_conference ::= ε ;
Video_cassette_player ::= ε ;
Time_zone ::= ε ;
Single_hotel_room ::= ε ;
Hotel_presenter ::= ε ;
Contribution_co-author ::= ε ;
Session_chair ::= ε ;
Introduction_of_speaker ::= ε ;
Marginal_Tend_to_Accept ::= ε ;
ConferenceSession ::= ε ;
Programming ::= ε ;
SubjectArea ::= ε ;
ComputerNetworksMeasurementsTopic ::= ε ;
Coctail_reception ::= ε ;
Dinner_banquet ::= ε ;
Chair_URL ::= ε ;
Car ::= ε ;
start_date_of_conference ::= ε ;
Reception ::= ε ;
Long_bool ::= ε ;
PostScript ::= ε ;
HTML ::= ε ;
Full_day_tour ::= ε ;
LCD_projector ::= ε ;
PaymentMode ::= ε ;
Presenter_house ::= ε ;
Cd_proceening ::= ε ;
Preview ::= ε ;
Workshop ::= ε ;
Presenter_university ::= ε ;
Tutorial_Chair ::= ε ;
Inforamtion ::= ε ;
Trip_day ::= ε ;
Hotel_registration_form ::= ε ;
Session_Chair ::= ε ;
lower_tier_reviewing_process ::= ε ;
Regular_Program_Committee_member ::= ε ;
ComputerNetworksOpticalTopic ::= ε ;
end_date_of_conference ::= ε ;
Webmaster ::= ε ;
Double_hotel_room ::= ε ;
AccpetIfRoomRating ::= ε ;
Sponsor_city ::= ε ;
RFC ::= ε ;
Conference_city ::= ε ;
One_day_presenter ::= ε ;
Accepting_manuscript ::= ε ;
SC_Member ::= ε ;
Sponzor_fee ::= ε ;
Clarity_to_Present_Understanding ::= ε ;
Highly_Practical ::= ε ;
Modelling ::= ε ;
Value_added_tax ::= ε ;
start_date_of_full_paper_submission ::= ε ;
Clear_Accept ::= ε ;
OC_Chair ::= ε ;
Deleted_Conflict ::= ε ;
Highly_Theoretical ::= ε ;
Acceptance ::= ε ;
Credit_card ::= ε ;
Country ::= ε ;
start_date_of_abstract_submission ::= ε ;
end_date_of_camera-ready_submission ::= ε ;
CoffeeBreak ::= ε ;
Web_site ::= ε ;
Tends_Towards_Theoretical ::= ε ;
PaperQuestion ::= ε ;
Detail ::= ε ;
Final_manuscript ::= ε ;
General_Chair ::= ε ;
Bank_transfer ::= ε ;
end_date_of_abstract_submission ::= ε ;
Humour ::= ε ;
Worker_non_speaker ::= ε ;
Book_proceeding ::= ε ;
Registration_form ::= ε ;
Student_non_speaker ::= ε ;
Demo_Chair ::= ε ;
Review_Form_Setup ::= ε ;
Conference_Trip ::= ε ;
Camera_ready_contribution ::= ε ;
Self_Conflict ::= ε ;
Adobe_PDF ::= ε ;
Contribution_1th-author ::= ε ;
CD ::= ε ;
ReviewForm ::= ε ;
Organizing_Committee_member ::= ε ;
Hotel_fee ::= ε ;
Sponsor_company_house ::= ε ;
PC_Chair ::= ε ;
Student_lecturer ::= ε ;
Assistance ::= ε ;
Conference_building ::= ε ;
Review_Committee ::= ε ;
NumericalReviewQuestion ::= ε ;
Report ::= ε ;
Marginal_Tend_to_Reject ::= ε ;
WeekRejectRating ::= ε ;
System ::= ε ;
ComputerNetworksSecurityTopic ::= ε ;
Text ::= ε ;
Conflict_Rules ::= ε ;
Corel_Word_Perfect ::= ε ;
Discussion ::= ε ;
PersonalPublicationHistory ::= ε ;
Trip ::= ε ;
RTF ::= ε ;
Banquet ::= ε ;
Cheque ::= ε ;
Computer_Science ::= ε ;
Conference_Banquet ::= ε ;
Taxi ::= ε ;
rejection_notification_email ::= ε ;
RejectRating ::= ε ;
Computer ::= ε ;
Not_Much ::= ε ;
Worker_lecturer ::= ε ;
Low ::= ε ;
ResearchTopic ::= ε ;
end_date_of_full_paper_submission ::= ε ;
intensity ::= ε ;
String ::= string() ;
Currency ::= ε ;
TextualReviewQuestion ::= ε ;
acceptance_notification_email ::= ε ;
ComputerNetworksManagementTopic ::= ε ;
Bidding_And_Paper_Submission_Phase ::= ε ;
Balanced_Theory_and_Practice ::= ε ;
Trip_city ::= ε ;
Contact_Person_URL ::= ε ;
Moderate ::= ε ;
MS_Word ::= ε ;
Fee_for_extra_trip ::= ε ;
ComputerNetworksSwitchingTopic ::= ε ;
Conference_restaurant ::= ε ;
Integer ::= integer() ;
Technic_activity ::= ε ;
Invited_speaker ::= ε ;
Presenter_state ::= ε ;
Regular_Reviewer_URL ::= ε ;
Bidding_Without_Paper_Submission_Phase ::= ε ;
ComputerNetworksSensorTopic ::= ε ;
institute ::= ε ;
Networking ::= ε ;
IASTED_non_member ::= ε ;
One_conference_day ::= ε ;
Clear_Reject ::= ε ;
Overhead_projector ::= ε ;
WelcomeTalk ::= ε ;
Workshop_Chair ::= ε ;
Sponsor_state ::= ε ;
Misc ::= ε ;
Author_information_form ::= ε ;
ComputerNetworksAapplicationsTopic ::= ε ;
Program_Chair ::= ε ;
Boolean ::= "true" | "false" ;
Initial_manuscipt ::= ε ;
FreeTimeBreak ::= ε ;
Feature_Request ::= ε ;
Portable_Reject ::= ε ;
Van ::= ε ;
Simulating ::= ε ;
--------------------metamodels::useCase.bgf--------------------
BehavioredClassifier ::= ε ;
String ::= string() ;
--------------------metamodels::MiningMart.bgf--------------------
MSL-Tool ::= ε ;
Integer ::= integer() ;
KeyAttribute ::= ε ;
PrimaryKey ::= ε ;
Nominal ::= ε ;
StructuralFeature ::= ε ;
Categorial ::= ε ;
Discretization ::= ε ;
FeatureSelection ::= ε ;
DataMinStep ::= ε ;
ModelElement ::= ε ;
RowSelection ::= ε ;
TimeGroup ::= ε ;
TimeOperator ::= ε ;
Ordinal ::= ε ;
String ::= string() ;
Table ::= ε ;
Time ::= ε ;
Scalar ::= ε ;
InOut ::= (Input::ε) | (OutPut::ε) ;
Boolean ::= "true" | "false" ;
Sampling ::= ε ;
Scaling ::= ε ;
Agregation ::= ε ;
MultiRelFeatureConstr ::= ε ;
View ::= ε ;
Constant ::= ε ;
Spatial ::= ε ;
Snapshot ::= ε ;
ParameterType ::= (Value::ε) | (Concept::ε) | (RelationShip::ε) | (FeatureAttribute::ε) ;
Segmentation ::= ε ;
Classifier ::= ε ;
Binary ::= ε ;
--------------------ocl::expressions.bgf--------------------
Integer ::= integer() ;
RejectExp ::= ε ;
Boolean ::= "true" | "false" ;
ForAllExp ::= ε ;
CollectExp ::= ε ;
String ::= string() ;
SelectExp ::= ε ;
ExistsExp ::= ε ;
--------------------ocl::operations.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------ocl::types.bgf--------------------
Integer ::= integer() ;
StringType ::= ε ;
Boolean ::= "true" | "false" ;
RealType ::= ε ;
IntegerType ::= ε ;
BooleanType ::= ε ;
String ::= string() ;
--------------------ocl::uml.bgf--------------------
Integer ::= integer() ;
PortCondition ::= ε ;
Boolean ::= "true" | "false" ;
PreCondition ::= ε ;
Guard ::= ε ;
String ::= string() ;
Invariant ::= ε ;
--------------------ocl::values.bgf--------------------
Integer ::= integer() ;
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------slps::bgf-1.0-xsd.bgf--------------------
selector ::= string() ;
terminal ::= string() ;
nonterminal ::= string() ;
label ::= string() ;
--------------------slps::bgf-2.0-xsd.bgf--------------------
selector ::= string() ;
terminal ::= string() ;
nonterminal ::= string() ;
label ::= string() ;
value ::= (int::ε) | (string::ε) ;
--------------------slps::bgf-2.1-xsd.bgf--------------------
selector ::= string() ;
terminal ::= string() ;
nonterminal ::= string() ;
label ::= string() ;
value ::= (int::ε) | (string::ε) ;
--------------------slps::btf.bgf--------------------
selector ::= string() ;
terminal ::= string() ;
nonterminal ::= string() ;
label ::= string() ;
value ::= (int::ε) | (string::ε) ;
--------------------slps::bgf-3.0-xsd.bgf--------------------
selector ::= string() ;
terminal ::= string() ;
nonterminal ::= string() ;
label ::= string() ;
value ::= (int::ε) | (string::ε) ;
--------------------slps::bgf-3.1-xsd.bgf--------------------
selector ::= string() ;
terminal ::= string() ;
nonterminal ::= string() ;
label ::= string() ;
value ::= (int::ε) | (string::ε) ;
--------------------slps::bgf-4.0-xsd.bgf--------------------
selector ::= string() ;
terminal ::= string() ;
nonterminal ::= string() ;
label ::= string() ;
value ::= (int::ε) | (string::ε) ;
--------------------slps::bgf-4.1-adt.bgf--------------------
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::bgf-4.2-adt.bgf--------------------
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::bgf-4.3-adt.bgf--------------------
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::bgf-5.0-adt.bgf--------------------
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::bgf-5.1-adt.bgf--------------------
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::bgf-5.2-xsd.bgf--------------------
selector ::= string() ;
terminal ::= string() ;
nonterminal ::= string() ;
label ::= string() ;
value ::= (int::ε) | (string::ε) ;
--------------------slps::bgf-5.3-adt.bgf--------------------
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::bgf-v1.0-xsd.bgf--------------------
selector ::= string() ;
terminal ::= string() ;
nonterminal ::= string() ;
label ::= string() ;
--------------------slps::bgf-v2.0-xsd.bgf--------------------
selector ::= string() ;
terminal ::= string() ;
nonterminal ::= string() ;
label ::= string() ;
value ::= (int::ε) | (string::ε) ;
--------------------slps::bgf-v2.1-xsd.bgf--------------------
selector ::= string() ;
terminal ::= string() ;
nonterminal ::= string() ;
label ::= string() ;
value ::= (int::ε) | (string::ε) ;
--------------------slps::bgf-v3.0-xsd.bgf--------------------
selector ::= string() ;
terminal ::= string() ;
nonterminal ::= string() ;
label ::= string() ;
value ::= (int::ε) | (string::ε) ;
--------------------slps::bgf-v3.1-xsd.bgf--------------------
selector ::= string() ;
terminal ::= string() ;
nonterminal ::= string() ;
label ::= string() ;
value ::= (int::ε) | (string::ε) ;
--------------------slps::bgf-v4.0-xsd.bgf--------------------
selector ::= string() ;
terminal ::= string() ;
nonterminal ::= string() ;
label ::= string() ;
value ::= (int::ε) | (string::ε) ;
--------------------slps::bgf-v4.2-adt.bgf--------------------
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::bgf-v5.0-adt.bgf--------------------
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::bgf-v5.1-adt.bgf--------------------
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::bgf-v5.2-xsd.bgf--------------------
selector ::= string() ;
terminal ::= string() ;
nonterminal ::= string() ;
label ::= string() ;
value ::= (int::ε) | (string::ε) ;
--------------------slps::cbgf-xsd.bgf--------------------
selector ::= string() ;
 selector ::= string() ;
terminal ::= string() ;
 terminal ::= string() ;
nonterminal ::= string() ;
 nonterminal ::= string() ;
bypass ::= ε ;
dump ::= ε ;
label ::= string() ;
 label ::= string() ;
value ::= (int::ε) | (string::ε) ;
 value ::= (int::ε) | (string::ε) ;
--------------------slps::edd.bgf--------------------
config ::= ((start-grammar-symbol::string()) | (end-grammar-symbol::string()) | (line-continuation-symbol::string()) | (tabulation-symbol::string()) | (start-label-symbol::string()) | (end-label-symbol::string()) | (defining-symbol::string()) | (multiple-defining-symbol::string()) | (terminator-symbol::string()) | (definition-separator-symbol::string()) | (concatenate-symbol::string()) | (start-comment-symbol::string()) | (end-comment-symbol::string()) | (start-group-symbol::string()) | (end-group-symbol::string()) | (start-option-symbol::string()) | (end-option-symbol::string()) | (start-terminal-symbol::string()) | (end-terminal-symbol::string()) | (start-nonterminal-symbol::string()) | (end-nonterminal-symbol::string()) | (start-seplist-star-symbol::string()) | (end-seplist-star-symbol::string()) | (start-seplist-plus-symbol::string()) | (end-seplist-plus-symbol::string()) | (start-repetition-star-symbol::string()) | (end-repetition-star-symbol::string()) | (start-repetition-plus-symbol::string()) | (end-repetition-plus-symbol::string()) | (postfix-option-symbol::string()) | (postfix-repetition-star-symbol::string()) | (postfix-repetition-plus-symbol::string()) | (nonterminals-may-start-with::string()) | (nonterminals-may-contain::string()) | (nonterminal-if-contains::string()) | (terminal-if-undefined::((except::string())*)) | (nonterminal-if-defined::((except::string())*)) | (decompose-symbols::((except::string())*)) | (terminal-if-uppercase::α) | (terminal-if-lowercase::α) | (terminal-if-mixedcase::α) | (terminal-if-camelcase::α) | (nonterminal-if-uppercase::α) | (nonterminal-if-lowercase::α) | (nonterminal-if-mixedcase::α) | (nonterminal-if-camelcase::α) | (glue-nonalphanumeric-terminals::α) | (break-tokens-at-whitespace::α) | (disregard-labels::α) | (consider-indentation::α) | (ignore::(((newline::α) | (space::α) | (same-indentation::α) | (lines-containing::string()))+)) | (mask::(token::string() (terminal::string()) | (epsilon::α))))* ;
--------------------slps::ldf-Readable.bgf--------------------
selector ::= string() ;
subsection-role ::= (synopsis::ε) | (description::ε) | (syntax::ε) | (constraints::ε) | (relationship::ε) | (semantics::ε) | (default::ε) | (rationale::ε) | (example::ε) | (update::ε) | (subtopic::ε) | (section::ε) ;
section-role ::= (abstract::ε) | (conformance::ε) | (compatibility::ε) | (design-goals::ε) | (document-structure::ε) | (foreword::ε) | (references::ε) | (notation::ε) | (scope::ε) | (what-is-new::ε) | (index::ε) | (full-grammar::ε) | (list-of-tables::ε) | (list-of-authors::ε) | (list-of-contents::ε) | (list-of-references::ε) | (top-section::ε) | (lexical-section::ε) ;
terminal ::= string() ;
mixed ::= (α | string())* ;
type ::= (normative::ε) | (informative::ε) ;
nonterminal ::= string() ;
version-or-edition ::= (version::string()) | (edition::string()) ;
person ::= name::string() (affiliation::string())? (email::string())? ;
label ::= string() ;
status ::= (unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε) ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (iec::ε) | (ietf::ε) | (oasis::ε) | (omg::ε) | (wsa::ε) | (w3c::ε) ;
value ::= (int::ε) | (string::ε) ;
part-role ::= (front-matter::ε) | (core-part::ε) | (back-matter::ε) | (annex::ε) ;
--------------------slps::ldf-v1.0-xsd.bgf--------------------
reference ::= string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? ;
mixedType ::= (α | string())* ;
sampleType ::= ε ;
--------------------slps::ldf-v10.0-xsd.bgf--------------------
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
reference ::= string() ;
keyword ::= string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
ListOfInternalLinks ::= (link::(text::string() (linktext::string())? reference::string()))+ ;
mixedType ::= (α | string())* ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
status ::= (unknown::ε) | (draft::ε) | (committee draft::ε) | (recommendation::ε) | (international standard::ε) ;
--------------------slps::ldf-v11.0-xsd.bgf--------------------
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
reference ::= string() ;
keyword ::= string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
ListOfInternalLinks ::= (link::(text::string() (linktext::string())? reference::string()))+ ;
SimpleFigure ::= caption::string() type::string() file::string() (id::string())? ;
mixedType ::= (α | string())* ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
status ::= (unknown::ε) | (draft::ε) | (committee draft::ε) | (recommendation::ε) | (international standard::ε) ;
--------------------slps::ldf-v11.1-xsd.bgf--------------------
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
reference ::= string() ;
keyword ::= string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
listOfInternalLinks ::= (link::(text::string() (linkText::string())? reference::string()))+ ;
simpleFigure ::= caption::string() type::string() file::string() (id::string())? ;
mixedType ::= (α | string())* ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
status ::= (unknown::ε) | (draft::ε) | (committee draft::ε) | (recommendation::ε) | (international standard::ε) ;
--------------------slps::ldf-v11.2-xsd.bgf--------------------
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
reference ::= string() ;
keyword ::= string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
listOfInternalLinks ::= (link::(text::string() (linkText::string())? reference::string()))+ ;
simpleFigure ::= caption::string() type::string() file::string() (id::string())? ;
mixedType ::= (α | string())* ;
status ::= (unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε) ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
--------------------slps::ldf-v12.0-xsd.bgf--------------------
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
reference ::= string() ;
keyword ::= string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
listOfInternalLinks ::= (link::(text::string() (linkText::string())? reference::string()))+ ;
simpleFigure ::= caption::string() type::string() file::string() (id::string())? ;
mixedType ::= (α | string())* ;
status ::= (unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε) ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
--------------------slps::ldf-v13.0-xsd.bgf--------------------
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
reference ::= string() ;
keyword ::= string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
listOfInternalLinks ::= (link::(text::string() (linkText::string())? reference::string()))+ ;
simpleFigure ::= caption::string() type::string() file::string() (id::string())? ;
mixedType ::= (α | string())* ;
status ::= (unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε) ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
--------------------slps::ldf-v13.1-xsd.bgf--------------------
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
reference ::= string() ;
keyword ::= string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
listOfInternalLinks ::= (link::(text::string() (linkText::string())? reference::string()))+ ;
simpleFigure ::= caption::string() type::string() file::string() (id::string())? ;
mixedType ::= (α | string())* ;
status ::= (unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε) ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
--------------------slps::ldf-v14.0-xsd.bgf--------------------
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
code ::= string() ;
reference ::= string() ;
link ::= (text::string())? reference::string() ;
keyword ::= string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
simpleFigure ::= caption::string() type::string() file::string() (id::string())? ;
mixedType ::= (α | string())* ;
status ::= (unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε) ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
--------------------slps::ldf-v15.0-xsd.bgf--------------------
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
code ::= string() ;
reference ::= string() ;
link ::= (text::string())? reference::string() ;
keyword ::= string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
formula ::= α+ ;
simpleFigure ::= caption::string() type::string() file::string() (id::string())? ;
mixedType ::= (α | string())* ;
anyMath ::= (α | string())* ;
varepsilon ::= ε ;
status ::= (unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε) ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
--------------------slps::ldf-v15.1-xsd.bgf--------------------
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
code ::= string() ;
reference ::= string() ;
link ::= (text::string())? reference::string() ;
keyword ::= string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
formula ::= α+ ;
simpleFigure ::= caption::string() type::string() file::string() (id::string())? ;
mixedType ::= (α | string())* ;
anyMath ::= (α | string())* ;
varepsilon ::= ε ;
status ::= (unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε) ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
--------------------slps::ldf-v16.0-xsd.bgf--------------------
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
code ::= string() ;
reference ::= string() ;
link ::= (text::string())? reference::string() ;
keyword ::= string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
formula ::= α+ ;
simpleFigure ::= caption::string() type::string() file::string() (id::string())? ;
mixedType ::= (α | string())* ;
anyMath ::= (α | string())* ;
varepsilon ::= ε ;
status ::= (unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε) ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
--------------------slps::ldf-v17.0-xsd.bgf--------------------
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
figureType ::= (PDF::ε) | (PostScript::ε) | (SVG::ε) | (PNG::ε) | (GIF::ε) | (JPEG::ε) ;
code ::= string() ;
reference ::= string() ;
link ::= (text::string())? reference::string() ;
keyword ::= string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
formula ::= α+ ;
mixedType ::= (α | string())* ;
anyMath ::= (α | string())* ;
varepsilon ::= ε ;
status ::= (unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε) ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
--------------------slps::ldf-v18.0-xsd.bgf--------------------
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
figureType ::= (PDF::ε) | (PostScript::ε) | (SVG::ε) | (PNG::ε) | (GIF::ε) | (JPEG::ε) ;
code ::= string() ;
link ::= (text::string())? reference::string() ;
keyword ::= string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
formula ::= α+ ;
mixedType ::= (α | string())* ;
anyMath ::= (α | string())* ;
varepsilon ::= ε ;
status ::= (unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε) ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
--------------------slps::ldf-v18.1-xsd.bgf--------------------
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
figureType ::= (PDF::ε) | (PostScript::ε) | (SVG::ε) | (PNG::ε) | (GIF::ε) | (JPEG::ε) ;
code ::= string() ;
link ::= (text::string())? (reference::string()) | (external::string()) ;
keyword ::= string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
formula ::= α+ ;
mixedType ::= (α | string())* ;
anyMath ::= (α | string())* ;
varepsilon ::= ε ;
status ::= (unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε) ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
--------------------slps::ldf-v19.0-xsd.bgf--------------------
figure-metainfo ::= (short-caption::string())? caption::string() (id::string())? ;
link ::= (text::string())? (reference::string()) | (external::string()) ;
normative-role ::= (synopsis::ε) | (description::ε) | (syntax::ε) | (constraints::ε) | (relationship::ε) | (semantics::ε) | (default::ε) ;
simple-section-role ::= (abstract::ε) | (conformance::ε) | (compatibility::ε) | (design-goals::ε) | (document-structure::ε) | (foreword::ε) | (normative-references::ε) | (notation::ε) | (scope::ε) | (what-is-new::ε) ;
structured-section-metainfo ::= title::string() (author::string())* (id::string())? ;
previous ::= title::string() (version::string()) | (edition::string()) (uri::string())? ;
anyMath ::= (α | string())* ;
placeholder ::= (index::ε) | (full-grammar::ε) | (list-of-tables::ε) | (list-of-authors::ε) | (list-of-contents::ε) | (list-of-references::ε) ;
status ::= (unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε) ;
part-role ::= (front-matter::ε) | (core-part::ε) | (back-matter::ε) | (annex::ε) ;
code ::= string() ;
list-section-role ::= (abbreviations::ε) | (definitions::ε) | (language-overview::ε) | (normative-references::ε) ;
mixed-type ::= (α | string())* ;
keyword ::= string() ;
lexical-section-role ::= (lexical-issue::ε) | (line-continuations::ε) | (literals::ε) | (preprocessor::ε) | (tokens::ε) | (whitespace::ε) ;
informative-role ::= (example::ε) | (rationale::ε) | (update::ε) ;
formula ::= α+ ;
varepsilon ::= ε ;
figure-type ::= (PDF::ε) | (PostScript::ε) | (SVG::ε) | (PNG::ε) | (GIF::ε) | (JPEG::ε) ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (iec::ε) | (ietf::ε) | (oasis::ε) | (omg::ε) | (wsa::ε) | (w3c::ε) ;
--------------------slps::ldf-v2.0-xsd.bgf--------------------
reference ::= string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? ;
mixedType ::= (α | string())* ;
sampleType ::= ε ;
--------------------slps::ldf-v2.1-xsd.bgf--------------------
reference ::= string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
mixedType ::= (α | string())* ;
sampleType ::= ε ;
--------------------slps::ldf-v20.0-xsd.bgf--------------------
link ::= (text::string())? (reference::string()) | (external::string()) ;
normative-role ::= (synopsis::ε) | (description::ε) | (syntax::ε) | (constraints::ε) | (relationship::ε) | (semantics::ε) | (default::ε) ;
simple-section-role ::= (abstract::ε) | (conformance::ε) | (compatibility::ε) | (design-goals::ε) | (document-structure::ε) | (foreword::ε) | (normative-references::ε) | (notation::ε) | (scope::ε) | (what-is-new::ε) ;
previous ::= title::string() (version::string()) | (edition::string()) (uri::string())? ;
anyMath ::= (α | string())* ;
placeholder ::= (index::ε) | (full-grammar::ε) | (list-of-tables::ε) | (list-of-authors::ε) | (list-of-contents::ε) | (list-of-references::ε) ;
metainfo ::= (id::string())? (title::string())? (author::string())* ;
status ::= (unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε) ;
part-role ::= (front-matter::ε) | (core-part::ε) | (back-matter::ε) | (annex::ε) ;
code ::= string() ;
list-section-role ::= (abbreviations::ε) | (definitions::ε) | (language-overview::ε) | (normative-references::ε) ;
mixed-type ::= (α | string())* ;
keyword ::= string() ;
lexical-section-role ::= (lexical-issue::ε) | (line-continuations::ε) | (literals::ε) | (preprocessor::ε) | (tokens::ε) | (whitespace::ε) ;
informative-role ::= (example::ε) | (rationale::ε) | (update::ε) ;
formula ::= α+ ;
varepsilon ::= ε ;
figure-type ::= (PDF::ε) | (PostScript::ε) | (SVG::ε) | (PNG::ε) | (GIF::ε) | (JPEG::ε) ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (iec::ε) | (ietf::ε) | (oasis::ε) | (omg::ε) | (wsa::ε) | (w3c::ε) ;
--------------------slps::ldf-v20.1-xsd.bgf--------------------
link ::= (text::string())? (reference::string()) | (external::string()) ;
normative-role ::= (synopsis::ε) | (description::ε) | (syntax::ε) | (constraints::ε) | (relationship::ε) | (semantics::ε) | (default::ε) ;
simple-section-role ::= (abstract::ε) | (conformance::ε) | (compatibility::ε) | (design-goals::ε) | (document-structure::ε) | (foreword::ε) | (normative-references::ε) | (notation::ε) | (scope::ε) | (what-is-new::ε) ;
previous ::= title::string() ((version::string()) | (edition::string()))? (uri::string())? ;
anyMath ::= (α | string())* ;
placeholder ::= (index::ε) | (full-grammar::ε) | (list-of-tables::ε) | (list-of-authors::ε) | (list-of-contents::ε) | (list-of-references::ε) ;
metainfo ::= (id::string())? (title::string())? (author::string())* ;
status ::= (unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε) ;
part-role ::= (front-matter::ε) | (core-part::ε) | (back-matter::ε) | (annex::ε) ;
code ::= string() ;
list-section-role ::= (abbreviations::ε) | (definitions::ε) | (language-overview::ε) | (normative-references::ε) ;
mixed-type ::= (α | string())* ;
keyword ::= string() ;
lexical-section-role ::= (lexical-issue::ε) | (line-continuations::ε) | (literals::ε) | (preprocessor::ε) | (tokens::ε) | (whitespace::ε) ;
informative-role ::= (example::ε) | (rationale::ε) | (update::ε) ;
formula ::= α+ ;
varepsilon ::= ε ;
figure-type ::= (PDF::ε) | (PostScript::ε) | (SVG::ε) | (PNG::ε) | (GIF::ε) | (JPEG::ε) ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (iec::ε) | (ietf::ε) | (oasis::ε) | (omg::ε) | (wsa::ε) | (w3c::ε) ;
--------------------slps::ldf-v21.0-xsd.bgf--------------------
link ::= (text::string())? (reference::string()) | (external::string()) ;
normative-role ::= (synopsis::ε) | (description::ε) | (syntax::ε) | (constraints::ε) | (relationship::ε) | (semantics::ε) | (default::ε) ;
simple-section-role ::= (abstract::ε) | (conformance::ε) | (compatibility::ε) | (design-goals::ε) | (document-structure::ε) | (foreword::ε) | (normative-references::ε) | (notation::ε) | (scope::ε) | (what-is-new::ε) ;
previous ::= title::string() ((version::string()) | (edition::string()))? (uri::string())? ;
anchor ::= id::string() ;
anyMath ::= (α | string())* ;
placeholder ::= (index::ε) | (full-grammar::ε) | (list-of-tables::ε) | (list-of-authors::ε) | (list-of-contents::ε) | (list-of-references::ε) ;
metainfo ::= (id::string())? (title::string())? (author::string())* ;
status ::= (unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε) ;
part-role ::= (front-matter::ε) | (core-part::ε) | (back-matter::ε) | (annex::ε) ;
code ::= string() ;
list-section-role ::= (abbreviations::ε) | (definitions::ε) | (language-overview::ε) | (normative-references::ε) ;
mixed-type ::= (α | string())* ;
keyword ::= string() ;
lexical-section-role ::= (lexical-issue::ε) | (line-continuations::ε) | (literals::ε) | (preprocessor::ε) | (tokens::ε) | (whitespace::ε) ;
informative-role ::= (example::ε) | (rationale::ε) | (update::ε) ;
formula ::= α+ ;
varepsilon ::= ε ;
figure-type ::= (PDF::ε) | (PostScript::ε) | (SVG::ε) | (PNG::ε) | (GIF::ε) | (JPEG::ε) ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (iec::ε) | (ietf::ε) | (oasis::ε) | (omg::ε) | (wsa::ε) | (w3c::ε) ;
--------------------slps::ldf-v21.1-xsd.bgf--------------------
link ::= (text::string())? (reference::string()) | (external::string()) ;
normative-role ::= (synopsis::ε) | (description::ε) | (syntax::ε) | (constraints::ε) | (relationship::ε) | (semantics::ε) | (default::ε) ;
simple-section-role ::= (abstract::ε) | (conformance::ε) | (compatibility::ε) | (design-goals::ε) | (document-structure::ε) | (foreword::ε) | (normative-references::ε) | (notation::ε) | (scope::ε) | (what-is-new::ε) ;
previous ::= title::string() ((version::string()) | (edition::string()))? (uri::string())? ;
anchor ::= id::string() ;
anyMath ::= (α | string())* ;
placeholder ::= (index::ε) | (full-grammar::ε) | (list-of-tables::ε) | (list-of-authors::ε) | (list-of-contents::ε) | (list-of-references::ε) ;
metainfo ::= (id::string())? (title::string())? (author::string())* ;
status ::= (unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε) ;
part-role ::= (front-matter::ε) | (core-part::ε) | (back-matter::ε) | (annex::ε) ;
code ::= string() ;
list-section-role ::= (abbreviations::ε) | (definitions::ε) | (language-overview::ε) | (normative-references::ε) ;
mixed-type ::= (α | string())* ;
keyword ::= string() ;
lexical-section-role ::= (lexical-issue::ε) | (line-continuations::ε) | (literals::ε) | (preprocessor::ε) | (tokens::ε) | (whitespace::ε) ;
informative-role ::= (example::ε) | (rationale::ε) | (update::ε) ;
formula ::= α+ ;
varepsilon ::= ε ;
figure-type ::= (PDF::ε) | (PostScript::ε) | (SVG::ε) | (PNG::ε) | (GIF::ε) | (JPEG::ε) ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (iec::ε) | (ietf::ε) | (oasis::ε) | (omg::ε) | (wsa::ε) | (w3c::ε) ;
--------------------slps::ldf-v22.0-xsd.bgf--------------------
code ::= string() ;
list-section-role ::= (abbreviations::ε) | (definitions::ε) | (language-overview::ε) | (normative-references::ε) ;
mixed-type ::= (α | string())* ;
link ::= (text::string())? (nonterminal::string()) | (reference::string()) | (external::string()) ;
normative-role ::= (synopsis::ε) | (description::ε) | (syntax::ε) | (constraints::ε) | (relationship::ε) | (semantics::ε) | (default::ε) ;
keyword ::= string() ;
informative-role ::= (example::ε) | (rationale::ε) | (update::ε) ;
lexical-section-role ::= (lexical-issue::ε) | (line-continuations::ε) | (literals::ε) | (preprocessor::ε) | (tokens::ε) | (whitespace::ε) ;
formula ::= α+ ;
anchor ::= id::string() ;
person ::= name::string() (affiliation::string())? (email::string())? ;
anyMath ::= (α | string())* ;
varepsilon ::= ε ;
figure-type ::= (PDF::ε) | (PostScript::ε) | (SVG::ε) | (PNG::ε) | (GIF::ε) | (JPEG::ε) ;
placeholder ::= (index::ε) | (full-grammar::ε) | (list-of-tables::ε) | (list-of-authors::ε) | (list-of-contents::ε) | (list-of-references::ε) ;
metainfo ::= (id::string())? (title::string())? (author::string())* ;
title-ve-uri ::= title::string() ((version::string()) | (edition::string()))? (uri::string())? ;
--------------------slps::ldf-v23.0-xsd.bgf--------------------
named-link ::= title::string() ((version::string()) | (edition::string()))? (uri::string())? ;
code ::= string() ;
list-section-role ::= (abbreviations::ε) | (definitions::ε) | (language-overview::ε) | (normative-references::ε) ;
mixed-type ::= (α | string())* ;
link ::= (text::string())? (nonterminal::string()) | (reference::string()) | (external::string()) ;
normative-role ::= (synopsis::ε) | (description::ε) | (syntax::ε) | (constraints::ε) | (relationship::ε) | (semantics::ε) | (default::ε) ;
keyword ::= string() ;
informative-role ::= (example::ε) | (rationale::ε) | (update::ε) ;
lexical-section-role ::= (lexical-issue::ε) | (line-continuations::ε) | (literals::ε) | (preprocessor::ε) | (tokens::ε) | (whitespace::ε) ;
formula ::= α+ ;
anchor ::= id::string() ;
person ::= name::string() (affiliation::string())? (email::string())? ;
anyMath ::= (α | string())* ;
varepsilon ::= ε ;
figure-type ::= (PDF::ε) | (PostScript::ε) | (SVG::ε) | (PNG::ε) | (GIF::ε) | (JPEG::ε) ;
placeholder ::= (index::ε) | (full-grammar::ε) | (list-of-tables::ε) | (list-of-authors::ε) | (list-of-contents::ε) | (list-of-references::ε) ;
metainfo ::= (id::string())? (title::string())? (author::string())* ;
--------------------slps::ldf-v3.0-xsd.bgf--------------------
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
reference ::= string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
ListOfInternalLinks ::= (link::(text::string() reference::string()))+ ;
mixedType ::= (α | string())* ;
lexical ::= (lineContinuations::ε) | (whitespace::ε) | (tokens::ε) | (preprocessor::ε) | (literals::ε) | (other::ε) ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
status ::= (draft::ε) | (committee draft::ε) | (recommendation::ε) | (international standard::ε) ;
SimpleList ::= (item::string())+ ;
--------------------slps::ldf-v4.0-xsd.bgf--------------------
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
reference ::= string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
ListOfInternalLinks ::= (link::(text::string() reference::string()))+ ;
mixedType ::= (α | string())* ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
status ::= (draft::ε) | (committee draft::ε) | (recommendation::ε) | (international standard::ε) ;
SimpleList ::= (item::string())+ ;
--------------------slps::ldf-v5.0-xsd.bgf--------------------
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
reference ::= string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
ListOfInternalLinks ::= (link::(text::string() reference::string()))+ ;
mixedType ::= (α | string())* ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
status ::= (draft::ε) | (committee draft::ε) | (recommendation::ε) | (international standard::ε) ;
SimpleList ::= (item::string())+ ;
--------------------slps::ldf-v6.0-xsd.bgf--------------------
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
reference ::= string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
ListOfInternalLinks ::= (link::(text::string() (linktext::string())? reference::string()))+ ;
mixedType ::= (α | string())* ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
status ::= (draft::ε) | (committee draft::ε) | (recommendation::ε) | (international standard::ε) ;
SimpleList ::= (item::string())+ ;
--------------------slps::ldf-v7.0-xsd.bgf--------------------
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
reference ::= string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
ListOfInternalLinks ::= (link::(text::string() (linktext::string())? reference::string()))+ ;
mixedType ::= (α | string())* ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
status ::= (unknown::ε) | (draft::ε) | (committee draft::ε) | (recommendation::ε) | (international standard::ε) ;
SimpleList ::= (item::string())+ ;
--------------------slps::slps-btf.bgf--------------------
selector ::= string() ;
terminal ::= string() ;
nonterminal ::= string() ;
label ::= string() ;
value ::= (int::ε) | (string::ε) ;
--------------------slps::ldf-v7.1-xsd.bgf--------------------
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
reference ::= string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
ListOfInternalLinks ::= (link::(text::string() (linktext::string())? reference::string()))+ ;
mixedType ::= (α | string())* ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
status ::= (unknown::ε) | (draft::ε) | (committee draft::ε) | (recommendation::ε) | (international standard::ε) ;
SimpleList ::= (item::string())+ ;
--------------------slps::ldf-v8.0-xsd.bgf--------------------
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
reference ::= string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
ListOfInternalLinks ::= (link::(text::string() (linktext::string())? reference::string()))+ ;
mixedType ::= (α | string())* ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
status ::= (unknown::ε) | (draft::ε) | (committee draft::ε) | (recommendation::ε) | (international standard::ε) ;
SimpleList ::= (item::string())+ ;
--------------------slps::ldf-v8.1-xsd.bgf--------------------
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
reference ::= string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
ListOfInternalLinks ::= (link::(text::string() (linktext::string())? reference::string()))+ ;
mixedType ::= (α | string())* ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
status ::= (unknown::ε) | (draft::ε) | (committee draft::ε) | (recommendation::ε) | (international standard::ε) ;
SimpleList ::= (item::string())+ ;
--------------------slps::ldf-v9.0-xsd.bgf--------------------
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
reference ::= string() ;
keyword ::= string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
ListOfInternalLinks ::= (link::(text::string() (linktext::string())? reference::string()))+ ;
mixedType ::= (α | string())* ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
status ::= (unknown::ε) | (draft::ε) | (committee draft::ε) | (recommendation::ε) | (international standard::ε) ;
SimpleList ::= (item::string())+ ;
--------------------slps::ldf-v9.1-xsd.bgf--------------------
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
reference ::= string() ;
keyword ::= string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
ListOfInternalLinks ::= (link::(text::string() (linktext::string())? reference::string()))+ ;
mixedType ::= (α | string())* ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
status ::= (unknown::ε) | (draft::ε) | (committee draft::ε) | (recommendation::ε) | (international standard::ε) ;
--------------------slps::slps-cbgf-xsd.bgf--------------------
selector ::= string() ;
 selector ::= string() ;
terminal ::= string() ;
 terminal ::= string() ;
nonterminal ::= string() ;
 nonterminal ::= string() ;
bypass ::= ε ;
dump ::= ε ;
label ::= string() ;
 label ::= string() ;
value ::= (int::ε) | (string::ε) ;
 value ::= (int::ε) | (string::ε) ;
--------------------slps::slps-edd.bgf--------------------
config ::= ((start-grammar-symbol::string()) | (end-grammar-symbol::string()) | (line-continuation-symbol::string()) | (tabulation-symbol::string()) | (start-label-symbol::string()) | (end-label-symbol::string()) | (defining-symbol::string()) | (multiple-defining-symbol::string()) | (terminator-symbol::string()) | (definition-separator-symbol::string()) | (concatenate-symbol::string()) | (start-comment-symbol::string()) | (end-comment-symbol::string()) | (start-group-symbol::string()) | (end-group-symbol::string()) | (start-option-symbol::string()) | (end-option-symbol::string()) | (start-terminal-symbol::string()) | (end-terminal-symbol::string()) | (start-nonterminal-symbol::string()) | (end-nonterminal-symbol::string()) | (start-seplist-star-symbol::string()) | (end-seplist-star-symbol::string()) | (start-seplist-plus-symbol::string()) | (end-seplist-plus-symbol::string()) | (start-repetition-star-symbol::string()) | (end-repetition-star-symbol::string()) | (start-repetition-plus-symbol::string()) | (end-repetition-plus-symbol::string()) | (postfix-option-symbol::string()) | (postfix-repetition-star-symbol::string()) | (postfix-repetition-plus-symbol::string()) | (nonterminals-may-start-with::string()) | (nonterminals-may-contain::string()) | (nonterminal-if-contains::string()) | (terminal-if-undefined::((except::string())*)) | (nonterminal-if-defined::((except::string())*)) | (decompose-symbols::((except::string())*)) | (terminal-if-uppercase::α) | (terminal-if-lowercase::α) | (terminal-if-mixedcase::α) | (terminal-if-camelcase::α) | (nonterminal-if-uppercase::α) | (nonterminal-if-lowercase::α) | (nonterminal-if-mixedcase::α) | (nonterminal-if-camelcase::α) | (glue-nonalphanumeric-terminals::α) | (break-tokens-at-whitespace::α) | (disregard-labels::α) | (consider-indentation::α) | (ignore::(((newline::α) | (space::α) | (same-indentation::α) | (lines-containing::string()))+)) | (mask::(token::string() (terminal::string()) | (epsilon::α))))* ;
--------------------slps::slps-lcf.bgf--------------------
derived ::= from::string() using::string() ;
xstring ::= ((expand::string()) | string())* ;
automated-transformation ::= method::string() result::string() ;
--------------------slps::slps-xbgf-xsd.bgf--------------------
selector ::= string() ;
terminal ::= string() ;
nonterminal ::= string() ;
bypass ::= ε ;
dump ::= ε ;
label ::= string() ;
value ::= (int::ε) | (string::ε) ;
--------------------slps::slps-xedd.bgf--------------------
metasymbols ::= (terminator::ε) | (defining::ε) | (definition-separator::ε) | (group::ε) | (seplist-plus::ε) | (seplist-star::ε) ;
confixMetasymbols ::= (group::ε) | (seplist-plus::ε) | (seplist-star::ε) ;
--------------------slps::slps-xldf.bgf--------------------
selector ::= string() ;
 selector ::= string() ;
importSample ::= target::string() file::string() (prettyprinter::string())? ;
drop ::= section::string() ;
combine ::= section::string() with::string() ;
terminal ::= string() ;
 terminal ::= string() ;
sectionRole ::= (frontMatter::ε) | (backMatter::ε) | (synopsis::ε) | (description::ε) | (syntax::ε) | (constraints::ε) | (relationship::ε) | (semantics::ε) | (default::ε) | (rationale::ε) | (example::ε) | (update::ε) | (section::ε) ;
nonterminal ::= string() ;
 nonterminal ::= string() ;
bypass ::= ε ;
transformDocument ::= file::string() ;
place ::= section::string() inside::string() ;
hyperlinkify ::= goal::string() uri::string() ;
retitle ::= from::((id::string()) | (title::string())) to::string() ;
dump ::= ε ;
label ::= string() ;
 label ::= string() ;
importGrammar ::= target::string() file::string() ;
value ::= (int::ε) | (string::ε) ;
 value ::= (int::ε) | (string::ε) ;
removeSection ::= id::string() (from::string())? ;
--------------------slps::xbgf-xsd.bgf--------------------
selector ::= string() ;
terminal ::= string() ;
nonterminal ::= string() ;
bypass ::= ε ;
dump ::= ε ;
label ::= string() ;
value ::= (int::ε) | (string::ε) ;
--------------------slps::bgf-v4.1-adt.bgf--------------------
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::bgf-v4.3-adt.bgf--------------------
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::bgf-v5.3-adt.bgf--------------------
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::bgf-v5.4-adt.bgf--------------------
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------develop::ant.bgf--------------------
String ::= string() ;
--------------------develop::java-project.bgf--------------------
Field ::= ε ;
MEMBER_KIND ::= (class::ε) | (enum::ε) | (interface::ε) | (Annotation::ε) ;
String ::= string() ;
--------------------develop::make.bgf--------------------
Boolean ::= "true" | "false" ;
String ::= string() ;
--------------------develop::bugzilla.bgf--------------------
PriorityType ::= (pt_null::ε) | (pt_P1::ε) | (pt_P2::ε) | (pt_P3::ε) | (pt_P4::ε) | (pt_P5::ε) ;
Integer ::= integer() ;
StatusType ::= (st_null::ε) | (st_UNCONFIRMED::ε) | (st_NEW::ε) | (st_ASSIGNED::ε) | (st_REOPENED::ε) | (st_RESOLVED::ε) | (st_VERIFIED::ε) | (st_CLOSED::ε) ;
OperatingSystemType ::= (ost_null::ε) | (ost_all::ε) | (ost_Windows 3.1::ε) | (ost_Windows 95::ε) | (ost_Windows 98::ε) | (ost_Windows ME::ε) | (ost_Windows 2000::ε) | (ost_Windows NT::ε) | (ost_Windows XP::ε) | (ost_Windows Vista::ε) | (ost_Windows Server 2003::ε) | (ost_MacSystem 7::ε) | (ost_MacSystem 7.5::ε) | (ost_MacSystem 7.6.1::ε) | (ost_MacSystem 8.0::ε) | (ost_MacSystem 8.5::ε) | (ost_MacSystem 8.6::ε) | (ost_MacSystem 9.x::ε) | (ost_Mac OS X 10.0::ε) | (ost_Mac OS X 10.1::ε) | (ost_Mac OS X 10.2::ε) | (ost_Mac OS X 10.3::ε) | (ost_Linux::ε) | (ost_BDS/OS::ε) | (ost_FreeBSD::ε) | (ost_NetBSD::ε) | (ost_OpenBSD::ε) | (ost_AIX::ε) | (ost_BeOS::ε) | (ost_HP-UX::ε) | (ost_IRIX::ε) | (ost_Neutrino::ε) | (ost_OpenVMS::ε) | (ost_OS/2::ε) | (ost_OSF/1::ε) | (ost_Solaris::ε) | (ost_SunOS::ε) | (ost_other::ε) ;
Boolean ::= "true" | "false" ;
SeverityType ::= (st_null::ε) | (st_blocker::ε) | (st_critical::ε) | (st_major::ε) | (st_normal::ε) | (st_minor::ε) | (st_trivial::ε) | (st_enhancement::ε) ;
ResolutionType ::= (rt_null::ε) | (rt_FIXED::ε) | (rt_INVALID::ε) | (rt_WONTFIX::ε) | (rt_LATER::ε) | (rt_REMIND::ε) | (rt_DUPLICATE::ε) | (rt_WORKSFORME::ε) | (rt_MOVED::ε) ;
ErrorType ::= (et_null::ε) | (et_NotFound::ε) | (et_NotPermitted::ε) | (et_InvalidBugId::ε) ;
String ::= string() ;
ReportedPlatformType ::= (rpt_null::ε) | (rpt_all::ε) | (rpt_DEC::ε) | (rpt_HP::ε) | (rpt_Macintosh::ε) | (rpt_PC::ε) | (rpt_SGI::ε) | (rpt_Sun::ε) | (rpt_other::ε) ;
--------------------pico::rascal.bgf--------------------
Type ::= [string] "string" ;
 Type ::= [natural] "natural" ;
 Type ::= [nil] "nil-type" ;
--------------------pico::sdf.bgf--------------------
TYPE ::= "natural" | "string" | "nil-type" ;
--------------------saf::abstract.bgf--------------------
Action ::= (action::(name::string())) | (choose::(actions::(string()*))) ;
