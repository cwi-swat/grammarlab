--------------------ada::kellogg.bgf--------------------
parenthesized_primary ::= pp::LPAREN (NuLL RECORD) | (value_s extension_opt) RPAREN ;
subprogram_body ::= (p::PROCEDURE def_id formal_part_opt IS body_part SEMI) | (f::FUNCTION function_tail IS body_part SEMI) ;
relation ::= simple_expression ((IN range_or_mark) | (n::NOT IN range_or_mark) | (EQ simple_expression) | (NE simple_expression) | (LT_ simple_expression) | (LE simple_expression) | (GT simple_expression) | (GE simple_expression))? ;
package_body ::= p::PACKAGE body_is pkg_body_part end_id_opt SEMI ;
raise_stmt ::= r::RAISE compound_name? SEMI ;
discriminant_constraint ::= p::LPAREN discriminant_association (COMMA discriminant_association)* RPAREN ;
statement_identifier ::= n::IDENTIFIER COLON ;
abort_stmt ::= a::ABORT name (COMMA name)* SEMI ;
return_stmt ::= s::RETURN expression? SEMI ;
case_stmt ::= s::CASE expression IS alternative_s END CASE SEMI ;
basic_decl_item ::= (pkg::PACKAGE def_id spec_decl_part) | (tsk::TASK task_type_or_single_decl) | (pro::PROTECTED prot_type_or_single_decl SEMI) | subprog_decl | decl_common ;
renames ::= RENAMES name | (dummy::definable_operator_symbol) ;
name_or_qualified ::= IDENTIFIER ((DOT ALL | IDENTIFIER | CHARACTER_LITERAL | (dummy::is_operator)) | (p::LPAREN value_s RPAREN) | (TIC parenthesized_primary | attribute_id))* ;
prot_op_decl ::= entry_declaration | (p::PROCEDURE def_id formal_part_opt SEMI) | (f::FUNCTION def_designator function_tail SEMI) | rep_spec | pragma ;
signed_term ::= (p::PLUS term) | (m::MINUS term) | term ;
subprog_decl ::= (p::PROCEDURE def_id generic_subp_inst | (formal_part_opt renames | is_separate_or_abstract_or_decl SEMI)) | (f::FUNCTION def_designator generic_subp_inst | (function_tail renames | is_separate_or_abstract_or_decl SEMI)) ;
subprog_decl_or_body ::= (p::PROCEDURE def_id formal_part_opt (IS body_part) | ε SEMI) | (f::FUNCTION def_designator function_tail (IS body_part) | ε SEMI) ;
variant_part ::= c::CASE discriminant_direct_name IS variant_s END CASE SEMI ;
entry_declaration ::= e::ENTRY IDENTIFIER discrete_subtype_def_opt formal_part_opt SEMI ;
cond_clause ::= condition c::THEN statements ;
subprog_decl_or_rename_or_inst_or_body ::= (p::PROCEDURE def_id generic_subp_inst | (formal_part_opt renames | (IS separate_or_abstract | body_part) | ε SEMI)) | (f::FUNCTION def_designator generic_subp_inst | (function_tail renames | (IS separate_or_abstract | body_part) | ε SEMI)) ;
select_stmt ::= s::SELECT (triggering_alternative THEN ABORT) | selective_accept | (entry_call_alternative (OR delay_alternative) | (ELSE statements)) END SELECT SEMI ;
select_alternative ::= accept_alternative | delay_alternative | (t::TERMINATE SEMI) ;
if_stmt ::= s::IF cond_clause elsifs_opt else_opt END IF SEMI ;
index_constraint ::= p::LPAREN discrete_range (COMMA discrete_range)* RPAREN ;
requeue_stmt ::= r::REQUEUE name (WITH ABORT)? SEMI ;
declarative_item ::= (pkg::PACKAGE (body_is separate | (pkg_body_part end_id_opt) SEMI) | (def_id spec_decl_part)) | (tsk::TASK (body_is separate | body_part SEMI) | task_type_or_single_decl) | (pro::PROTECTED (body_is separate | (prot_op_bodies_opt end_id_opt)) | prot_type_or_single_decl SEMI) | subprog_decl_or_rename_or_inst_or_body | decl_common ;
use_clause ::= u::USE (TYPE subtype_mark (COMMA subtype_mark)*) | c_name_list SEMI ;
goto_stmt ::= s::GOTO label_name SEMI ;
decl_common ::= (t::TYPE IDENTIFIER (IS type_def) | (discrim_part (IS derived_or_private_or_record) | ε) | empty_discrim_opt SEMI) | (s::SUBTYPE IDENTIFIER IS subtype_ind SEMI) | generic_decl | use_clause | (r::FOR (local_enum_name USE) | (subtype_mark USE rep_spec_part) SEMI) | (IDENTIFIER erd::COLON EXCEPTION RENAMES compound_name) | (IDENTIFIER ord::COLON subtype_mark RENAMES name) | (defining_identifier_list od::COLON EXCEPTION | (CONSTANT ASSIGN) | (aliased_constant_opt (array_type_definition init_opt) | (subtype_ind init_opt)) SEMI) ;
range_attrib_ref ::= prefix TIC r::RANGE (LPAREN expression RPAREN)? ;
accept_stmt ::= a::ACCEPT def_id entry_index_opt formal_part_opt (DO handled_stmt_s end_id_opt SEMI) | SEMI ;
rep_spec ::= r::FOR subtype_mark USE rep_spec_part SEMI ;
task_body ::= t::TASK body_is body_part SEMI ;
exception_handler ::= w::WHEN identifier_colon_opt except_choice_s RIGHT_SHAFT statements ;
operator_call ::= cs::CHAR_STRING operator_call_tail ;
is_operator ::= op::CHAR_STRING ;
expression ::= relation ((a::AND THEN? relation) | (o::OR ELSE? relation) | (XOR relation))* ;
definable_operator_symbol ::= op::CHAR_STRING ;
digits_constraint ::= d::DIGITS expression range_constraint_opt ;
def_id ::= (cn::compound_name) | (n::IDENTIFIER) ;
block_body ::= b::BEGIN handled_stmt_s ;
designator ::= (op::definable_operator_symbol) | (n::IDENTIFIER) ;
protected_body ::= p::PROTECTED body_is prot_op_bodies_opt end_id_opt SEMI ;
generic_decl ::= g::GENERIC generic_formal_part_opt (PACKAGE def_id renames | (IS pkg_spec_part)) | (PROCEDURE def_id formal_part_opt renames | ε) | (FUNCTION def_designator function_tail renames | ε) SEMI ;
prefix ::= IDENTIFIER ((DOT ALL | IDENTIFIER) | (p::LPAREN value_s RPAREN))* ;
entry_body ::= e::ENTRY def_id entry_body_formal_part entry_barrier IS body_part SEMI ;
id_opt ::= (endid::definable_operator_symbol) | (n::compound_name) | ε ;
case_statement_alternative ::= s::WHEN choice_s RIGHT_SHAFT statements ;
def_designator ::= (n::compound_name) | (d::designator) ;
allocator ::= n::NEW name_or_qualified ;
name ::= IDENTIFIER ((DOT ALL | IDENTIFIER | CHARACTER_LITERAL | (dummy::is_operator)) | (p::LPAREN value_s RPAREN) | (TIC attribute_id))* ;
exit_stmt ::= s::EXIT label_name? (WHEN condition)? SEMI ;
with_clause ::= w::WITH c_name_list SEMI ;
lib_pkg_spec_or_body ::= pkg::PACKAGE (BODY def_id IS pkg_body_part end_id_opt SEMI) | (def_id spec_decl_part) ;
variant ::= w::WHEN choice_s RIGHT_SHAFT component_list ;
subunit ::= sep::SEPARATE LPAREN compound_name RPAREN subprogram_body | package_body | task_body | protected_body ;
delay_stmt ::= d::DELAY until_opt expression SEMI ;
delta_constraint ::= d::DELTA expression range_constraint_opt ;
primary ::= name_or_qualified | parenthesized_primary | allocator | NuLL | NUMERIC_LIT | CHARACTER_LITERAL | (cs::CHAR_STRING operator_call_tail?) ;
generic_formal_parameter ::= (t::TYPE def_id (IS (LPAREN BOX RPAREN) | (RANGE BOX) | (MOD BOX) | (DELTA BOX (DIGITS BOX) | ε) | (DIGITS BOX) | array_type_definition | access_type_definition | (empty_discrim_opt discriminable_type_definition)) | (discrim_part IS discriminable_type_definition)) | (w::WITH (PROCEDURE def_id formal_part_opt subprogram_default_opt) | (FUNCTION def_designator function_tail subprogram_default_opt) | (PACKAGE def_id IS NEW compound_name formal_package_actual_part_opt)) | parameter_specification SEMI ;
null_stmt ::= s::NuLL SEMI ;
--------------------c::bruneliere.bgf--------------------
CUnion ::= (contains::CStructureContents)+ ;
CFunction ::= isVarArg::Boolean ;
CSourceText ::= source::String fileName::String ;
CStructureContents ::= CStructuralFeature ;
 CStructureContents ::= CStructured ;
 CStructureContents ::= sc_container::CStructured ;
BehavioralFeature ::= CFunction ;
 BehavioralFeature ::= (parameters::CParameter)+ ;
CStruct ::= (contains::CStructureContents)+ ;
CParameter ::= behavioralFeature::BehavioralFeature ;
CTypedElement ::= CParameter ;
 CTypedElement ::= CStructuralFeature ;
 CTypedElement ::= type::CClassifier source::CSourceText ;
CStructured ::= CStruct ;
 CStructured ::= CUnion ;
 CStructured ::= (contains::CStructureContents)+ ;
--------------------c::lankamp.bgf--------------------
FunctionDefinition ::= [DefaultFunctionDefinition] specs::(Specifier*) Declarator Declaration* "{" Declaration* Statement* "}" ;
Declaration ::= [DeclarationWithoutInitDecls] specs::(Specifier+) ";" ;
 Declaration ::= [DeclarationWithInitDecls] specs::(Specifier+) initDeclarators::({InitDeclarator ","}+) ";" ;
FunctionPrototype ::= [DefaultFunctionPrototype] specs::(Specifier*) decl::PrototypeDeclarator ";" ;
Expression ::= CharacterConstant ;
 Expression ::= Expression "--" ;
 Expression ::= [Variable] Identifier ;
 Expression ::= Expression "[" Expression "]" ;
 Expression ::= [Bracket] "(" Expression ")" ;
 Expression ::= "sizeof" "(" TypeName ")" ;
 Expression ::= Expression "++" ;
 Expression ::= FloatingPointConstant ;
 Expression ::= Expression "." Identifier ;
 Expression ::= StringConstant ;
 Expression ::= IntegerConstant ;
 Expression ::= HexadecimalConstant ;
 Expression ::= Expression "->" Identifier ;
 Expression ::= Expression "(" {NonCommaExpression ","}* ")" ;
 Expression ::= Expression ;
 Expression ::= [SizeOfExpression] "sizeof" exp::Expression ;
 Expression ::= "&" Expression ;
 Expression ::= "!" Expression ;
 Expression ::= "(" TypeName ")" Expression ;
 Expression ::= "*" Expression ;
 Expression ::= "+" Expression ;
 Expression ::= "-" Expression ;
 Expression ::= "~" Expression ;
 Expression ::= [MultiplicationExpression] lexp::Expression "*" rexp::Expression ;
 Expression ::= Expression "/" Expression ;
 Expression ::= Expression "%" Expression ;
 Expression ::= Expression "+" Expression ;
 Expression ::= Expression "-" Expression ;
 Expression ::= Expression ">>" Expression ;
 Expression ::= Expression "<<" Expression ;
 Expression ::= Expression "<=" Expression ;
 Expression ::= Expression ">=" Expression ;
 Expression ::= Expression ">" Expression ;
 Expression ::= Expression "<" Expression ;
 Expression ::= Expression "==" Expression ;
 Expression ::= Expression "!=" Expression ;
 Expression ::= Expression "&" Expression ;
 Expression ::= Expression "^" Expression ;
 Expression ::= Expression "|" Expression ;
 Expression ::= Expression "&&" Expression ;
 Expression ::= Expression "||" Expression ;
 Expression ::= Expression "?" Expression ":" Expression ;
 Expression ::= Expression "|=" Expression ;
 Expression ::= Expression "&=" Expression ;
 Expression ::= Expression "*=" Expression ;
 Expression ::= Expression "/=" Expression ;
 Expression ::= Expression "+=" Expression ;
 Expression ::= Expression ">>=" Expression ;
 Expression ::= Expression "^=" Expression ;
 Expression ::= Expression "-=" Expression ;
 Expression ::= Expression "<<=" Expression ;
 Expression ::= Expression "%=" Expression ;
 Expression ::= Expression "=" Expression ;
 Expression ::= [CommaExpression] Expression "," Expression ;
GlobalDeclaration ::= [GlobalDeclarationWithoutInitDecls] specs::(Specifier+) ";" ;
 GlobalDeclaration ::= [GlobalDeclarationWithInitDecls] specs::(Specifier*) initDeclarators::({InitDeclarator ","}+) ";" ;
StructDeclaration ::= [StructDeclWithoutDecl] specs::(Specifier+) ";" ;
 StructDeclaration ::= [StructDeclWithDecl] specs::(Specifier+) {StructDeclarator ","}+ ";" ;
AbstractDeclarator ::= [Identifier] AnonymousIdentifier ;
 AbstractDeclarator ::= [ArrayDeclarator] decl::AbstractDeclarator "[" exp::(Expression?) "]" ;
 AbstractDeclarator ::= [Bracket] "(" decl::AbstractDeclarator ")" ;
 AbstractDeclarator ::= [FunctionDeclarator] decl::AbstractDeclarator "(" params::(Parameters?) ")" ;
 AbstractDeclarator ::= [PointerDeclarator] "*" qualifiers::(TypeQualifier*) decl::AbstractDeclarator ;
PrototypeDeclarator ::= [FunctionDeclarator] decl::PrototypeDeclarator "(" params::(PrototypeParameters?) ")" ;
 PrototypeDeclarator ::= [Identifier] Identifier ;
 PrototypeDeclarator ::= [Bracket] "(" decl::AbstractDeclarator ")" ;
 PrototypeDeclarator ::= [ArrayDeclarator] decl::PrototypeDeclarator "[" exp::(Expression?) "]" ;
 PrototypeDeclarator ::= [PointerDeclarator] "*" qualifiers::(TypeQualifier*) decl::PrototypeDeclarator ;
Declarator ::= [ArrayDeclarator] decl::Declarator "[" exp::(Expression?) "]" ;
 Declarator ::= [Identifier] Identifier ;
 Declarator ::= [FunctionDeclarator] decl::Declarator "(" params::(Parameters?) ")" ;
 Declarator ::= [Bracket] "(" decl::Declarator ")" ;
 Declarator ::= [PointerDeclarator] "*" qualifiers::(TypeQualifier*) decl::Declarator ;
InitDeclarator ::= decl::Declarator "=" Initializer ;
 InitDeclarator ::= [decl] Declarator ;
NonCommaExpression ::= [NonCommaExpression] expr::Expression ;
--------------------cpp::bruneliere.bgf--------------------
CPPGeneralization ::= visibility::VisibilityKind isVirtual::Boolean supertype::CPPClass ;
CPPMember ::= isStatic::Boolean isVolatile::Boolean isRegister::Boolean visibility::VisibilityKind ;
CPPTemplate ::= (classes::CPPClass)+ ;
CFunction ::= CPPOperation ;
 CFunction ::= isVsrArg::Boolean ;
CPPOperator ::= isInline::Boolean visibility::VisibilityKind ;
VisibilityKind ::= (vk_public::ε) | (vk_private::ε) | (vk_protected::ε) ;
CPPClass ::= isAbstract::Boolean isVolatile::Boolean visibility::VisibilityKind (templates::CPPTemplate)+ (generalizations::CPPGeneralization)+ ;
CPPOperation ::= isStatic::Boolean isExtern::Boolean isInline::Boolean isVirtual::Boolean isPure::Boolean visibility::VisibilityKind isCtor::Boolean isDtor::Boolean (throws::CPPClass)+ ;
CPPExtern ::= linkage::String ;
--------------------cs::csharp-bruneliere.bgf--------------------
Type ::= qualifiedName::String isAbstract::Boolean visibility::String isSealed::Boolean nameSpace::String (members::Member)+ t_container::Assembly super::Type ;
Constructor ::= visibility::String isAbstract::Boolean isFinal::Boolean isStatic::Boolean (parameters::Parameter)+ ;
Field ::= type::Type ;
Member ::= TypedAttribute ;
 Member ::= MethodBase ;
 Member ::= Type ;
 Member ::= name::String owner::Type ;
Parameter ::= isIn::Boolean isOut::Boolean name::Boolean position::Integer method::MethodBase type::Type ;
Assembly ::= name::String (content::Type)+ ;
Property ::= isReadable::Boolean isWritable::Boolean ;
MethodBase ::= Constructor ;
 MethodBase ::= Method ;
 MethodBase ::= visibility::String isAbstract::Boolean isFinal::Boolean isStatic::Boolean (parameters::Parameter)+ ;
TypedAttribute ::= Field ;
 TypedAttribute ::= Property ;
 TypedAttribute ::= type::Type ;
Method ::= returnType::Type ;
--------------------java::jdt.bgf--------------------
ReturnStatement ::= expression::α ;
SimpleName ::= identifier::α declaration::α ;
ArrayAccess ::= array::α index::α ;
SwitchStatement ::= expression::α (statements::α)+ ;
MemberRef ::= name::α qualifier::α ;
Modifier ::= abstract::α final::α native::α none::α private::α protected::α public::α static::α strictfp::α synchronized::α transient::α volatile::α ;
MethodRefParameter ::= name::α type::α varargs::α ;
ThisExpression ::= qualifier::α ;
VariableDeclarationExpression ::= (fragments::α)+ (modifiers::α)+ type::α ;
TypeLiteral ::= type::α ;
ImportDeclaration ::= onDemand::α static::α name::α ;
PackageDeclaration ::= (annotations::α)+ javadoc::α name::α ;
ParameterizedType ::= type::α (typeArguments::α)+ ;
SingleMemberAnnotation ::= value::α ;
MethodInvocation ::= (arguments::α)+ expression::α name::α (typeArguments::α)+ ;
TextElement ::= text::α ;
TypeParameter ::= name::α (typeBounds::α)+ ;
Block ::= (statements::α)+ ;
Assignment ::= leftHandSide::α operator::α rightHandSide::α ;
PrefixExpression ::= operand::α operator::α ;
CatchClause ::= body::α exception::α ;
ArrayInitializer ::= (expressions::α)+ ;
ContinueStatement ::= label::α ;
InfixExpression ::= (extendedOperands::α)+ leftOperand::α operator::α rightOperand::α ;
CharacterLiteral ::= charValue::α escapedValue::α ;
AST ::= root::α ;
InfixExpressionOperatorKind ::= (GREATER_EQUALS::ε) | (OR::ε) | (RIGHT_SHIFT_SIGNED::ε) | (MINUS::ε) | (XOR::ε) | (LESS_EQUALS::ε) | (EQUALS::ε) | (NOT_EQUALS::ε) | (AND::ε) | (PLUS::ε) | (GREATER::ε) | (CONDITIONAL_OR::ε) | (REMAINDER::ε) | (LESS::ε) | (LEFT_SHIFT::ε) | (RIGHT_SHIFT_UNSIGNED::ε) | (CONDITIONAL_AND::ε) | (TIMES::ε) | (DIVIDE::ε) ;
WhileStatement ::= body::α expression::α ;
FieldAccess ::= expression::α name::α ;
EnhancedForStatement ::= body::α expression::α parameter::α ;
CastExpression ::= expression::α type::α ;
AnnotationTypeMemberDeclaration ::= default::α name::α type::α ;
SingleVariableDeclaration ::= type::α varargs::α (modifiers::α)+ ;
QualifiedType ::= name::α qualifier::α ;
EnumConstantDeclaration ::= (arguments::α)+ anonymousClassDeclaration::α name::α ;
WildcardType ::= bound::α upperBound::α ;
ParenthesizedExpression ::= expression::α ;
MethodRef ::= name::α qualifier::α (parameters::α)+ ;
VariableDeclarationStatement ::= (fragments::α)+ (modifiers::α)+ type::α ;
MemberValuePair ::= name::α value::α ;
BreakStatement ::= label::α ;
AnonymousClassDeclaration ::= (bodyDeclarations::α)+ ;
PostfixExpression ::= operand::α operator::α ;
SuperMethodInvocation ::= (arguments::α)+ name::α qualifier::α (typeArguments::α)+ ;
ThrowStatement ::= expression::α ;
CompilationUnit ::= (comments::α)+ package::α (imports::α)+ (types::α)+ ;
ForStatement ::= body::α expression::α (initializers::α)+ (updaters::α)+ ;
Initializer ::= body::α ;
TypeDeclaration ::= superclassType::α interface::α (superInterfaceTypes::α)+ (typeParameters::α)+ ;
FieldDeclaration ::= (fragments::α)+ type::α ;
StringLiteral ::= escapedValue::α literalValue::α ;
LabeledStatement ::= body::α label::α ;
MethodDeclaration ::= body::α extraDimensions::α name::α returnType::α constructor::α varargs::α (parameters::α)+ (thrownExceptions::α)+ (typeParameters::α)+ ;
ArrayCreation ::= (dimensions::α)+ initializer::α type::α ;
Javadoc ::= (tags::α)+ ;
IfStatement ::= elseStatement::α expression::α thenStatement::α ;
BlockComment ::= alternateRoot::α ;
VariableDeclarationFragment ::= extraDimensions::α initializer::α name::α ;
SimpleType ::= name::α ;
LineComment ::= alternateRoot::α ;
MarkerAnnotation ::= typeName::α ;
AssertStatement ::= expression::α message::α ;
QualifiedName ::= name::α qualifier::α ;
SwitchCase ::= expression::α default::α ;
SuperFieldAccess ::= name::α qualifier::α ;
TagElement ::= (fragments::α)+ tagName::α nested::α ;
PrimitiveType ::= code::α ;
ConditionalExpression ::= elseExpression::α expression::α thenExpression::α ;
SynchronizedStatement ::= body::α expression::α ;
EnumDeclaration ::= (superInterfaceTypes::α)+ (enumConstants::α)+ ;
ExpressionStatement ::= expression::α ;
NormalAnnotation ::= (values::α)+ ;
TryStatement ::= (catchClauses::α)+ body::α finally::α ;
ArrayType ::= componentType::α dimensions::α elementType::α ;
AnnotationTypeDeclaration ::= (bodyDeclarations::α)+ name::α localTypeDeclaration::α memberTypeDeclaration::α packageMemberTypeDeclaration::α ;
TypeDeclarationStatement ::= declaration::α ;
SuperConstructorInvocation ::= (arguments::α)+ expression::α (typeArguments::α)+ ;
ClassInstanceCreation ::= (arguments::α)+ anonymousClassDeclaration::α expression::α type::α (typeArguments::α)+ ;
AssignementOperatorKind ::= (RIGHT_SHIFT_SIGNED_ASSIGN::ε) | (BIT_XOR_ASSIGN::ε) | (TIMES_ASSIGN::ε) | (LEFT_SHIFT_ASSIGN::ε) | (MINUS_ASSIGN::ε) | (BIT_OR_ASSIGN::ε) | (PLUS_ASSIGN::ε) | (ASSIGN::ε) | (RIGHT_SHIFT_UNSIGNED_ASSIGN::ε) | (REMAINDER_ASSIGN::ε) | (DIVIDE_ASSIGN::ε) | (BIT_AND_ASSIGN::ε) ;
PrefixExpresssionOperatorKind ::= (MINUS::ε) | (NOT::ε) | (DECREMENT::ε) | (COMPLEMENT::ε) | (INCREMENT::ε) | (PLUS::ε) ;
ConstructorInvocation ::= (arguments::α)+ (typeArguments::α)+ ;
PostfixExpresssionOperatorKind ::= (INCREMENT::ε) | (DECREMENT::ε) ;
NullLiteral ::= resolveBoxing::α resolveUnboxing::α ;
BooleanLiteral ::= booleanValue::α ;
NumberLiteral ::= token::α ;
DoStatement ::= body::α expression::α ;
InstanceofExpression ::= leftOperand::α rightOperand::α ;
--------------------java::java-5-habelitz.bgf--------------------
statement ::= block | (ASSERT expr1::expression (COLON expr2::expression SEMI) | SEMI) | (IF parenthesizedExpression ifStat::statement (ELSE elseStat::statement) | ε) | (FOR LPAREN (forInit SEMI forCondition SEMI forUpdater RPAREN statement) | (localModifierList type IDENT COLON expression RPAREN statement)) | (WHILE parenthesizedExpression statement) | (DO statement WHILE parenthesizedExpression SEMI) | (TRY block (catches finallyClause?) | finallyClause) | (SWITCH parenthesizedExpression LCURLY switchBlockLabels RCURLY) | (SYNCHRONIZED parenthesizedExpression block) | (RETURN expression? SEMI) | (THROW expression SEMI) | (BREAK IDENT? SEMI) | (CONTINUE IDENT? SEMI) | (IDENT COLON statement) | (expression SEMI) | SEMI ;
qualifiedIdentExpression ::= qualifiedIdentifier ((arrayDeclarator+ DOT CLASS) | arguments | (outerDot::DOT CLASS | (genericTypeArgumentListSimplified (Super::SUPER arguments) | (SUPER innerDot::DOT IDENT arguments) | (IDENT arguments)) | THIS | (Super::SUPER arguments) | innerNewExpression))? ;
postfixedExpression ::= primaryExpression ((outerDot::DOT (genericTypeArgumentListSimplified? IDENT arguments?) | THIS | (Super::SUPER arguments) | (SUPER innerDot::DOT IDENT arguments?) | innerNewExpression) | (LBRACK expression RBRACK))* (INC | DEC)? ;
classScopeDeclarations ::= block | (STATIC block) | (modifierList (genericTypeParameterList? (type IDENT formalParameterList arrayDeclaratorList? throwsClause? block | SEMI) | (VOID IDENT formalParameterList throwsClause? block | SEMI) | (ident::IDENT formalParameterList throwsClause? block)) | (type classFieldDeclaratorList SEMI)) | typeDeclaration | SEMI ;
qualifiedIdentifier ::= IDENT (DOT ident::IDENT)* ;
--------------------java::jvm-level0.bgf--------------------
Instruction ::= (fieldRef::(opcode::integer() owner::string() name::string() description::string())) | (increment::(index::integer() amount::integer())) | (instruction::(opcode::integer())) | (integer::(opcode::integer() operand::integer())) | (jump::(opcode::integer() labelIndex::integer())) | (label::(index::integer())) | (lineNumber::(line::integer() labelIndex::integer())) | (localVariable::(opcode::integer() index::integer())) | (loadConstantString::(stringValue::string())) | (loadConstantInteger::(integerValue::integer())) | (loadConstantLong::(longValue::integer())) | (loadConstantFloat::(floatValue::integer())) | (loadConstantDouble::(doubleValue::integer())) | (lookupSwitch::(defaultLabelIndex::integer() keys::(integer()*) cases::(integer()*))) | (method::(opcode::integer() owner::string() name::string() description::string())) | (multiANewArray::(description::string() dimensions::integer())) | (tableSwitch::(minIndex::integer() maxIndex::integer() defaultLabelIndex::integer() cases::(integer()*))) | (type::(opcode::integer() description::string())) ;
TryCatchBlock ::= (tryCatchBlock::(startLabelIndex::integer() endLabelIndex::integer() handlerLabelIndex::integer() type::string())) | (finallyBlock::(startLabelIndex::integer() endLabelIndex::integer() handlerLabelIndex::integer())) ;
Field ::= (field::(access::integer() name::string() description::string() signature::string() value::α)) | (field::(access::integer() name::string() description::string() signature::string())) ;
Class ::= (class::(version::integer() access::integer() name::string() signature::string() superName::string() interfaces::(string()*) sourceFile::string() sourceDebug::string() outerClass::string() outerMethod::string() outerMethodDescription::string() innerClasses::(InnerClass*) fields::(Field*) methods::(Method*))) | (class::(version::integer() access::integer() name::string() signature::string() superName::string() interfaces::(string()*) innerClasses::(InnerClass*) fields::(Field*) methods::(Method*))) ;
LocalVariable ::= localVariable::(name::string() description::string() signature::string() startLabelIndex::integer() endLabelIndex::integer() index::integer()) ;
InnerClass ::= (innerClass::(name::string() outerName::string() innerName::string() access::integer())) | (innerClass::(name::string() access::integer())) ;
Method ::= method::(access::integer() name::string() description::string() signature::string() exceptions::(string()*) instructions::(Instruction*) tryCatchBlocks::(TryCatchBlock*) localVariables::(LocalVariable*)) ;
--------------------java::java-5-parr.bgf--------------------
relationalOp ::= (t1::"<" t2::("="?)) | (t1::">" t2::("="?)) | "<" | ">" ;
shiftOp ::= (t1::"<" t2::("<"?)) | (t1::">" t2::">" t3::">") | (t1::">" t2::(">"?)) ;
assignmentOperator ::= "=" | "+=" | "-=" | "*=" | "/=" | "&=" | "|=" | "^=" | "%=" | (t1::"<" t2::"<" t3::"=") | (t1::">" t2::">" t3::">" t4::("="?)) | (t1::">" t2::">" t3::"=") ;
--------------------java::java-5-stahl.bgf--------------------
implementsClause ::= (i::"implements" classOrInterfaceType (COMMA classOrInterfaceType)*)? ;
annotationTypeDefinition ::= AT "interface" IDENT ab::annotationBlock ;
constructorBody ::= lc::LCURLY explicitConstructorInvocation? statement* RCURLY ;
typeArguments ::= (lt::LT typeArgument (COMMA typeArgument)* typeArgumentsEnd?) | ε ;
declaration ::= m::modifiers t::typeSpec v::variableDefinitions ;
primaryExpression ::= (identPrimary (DOT "class")?) | constant | "true" | "false" | "null" | newExpression | "this" | "super" | (LPAREN assignmentExpression RPAREN) | (builtInType (lbt::LBRACK RBRACK)* DOT "class") ;
packageDefinition ::= annotations p::"package" identifier SEMI ;
builtInTypeSpec ::= builtInType (lb::LBRACK RBRACK)* ;
NUM_INT ::= ("." ("." ".") | ((("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ EXPONENT? (f1::FLOAT_SUFFIX)?)?)) | (("0" (("x" | "X" HEX_DIGIT+) | (("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+) | (("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7")+))?) | ("1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")*) ("l" | "L" | ("." ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* EXPONENT? (f2::FLOAT_SUFFIX)?) | (EXPONENT (f3::FLOAT_SUFFIX)?) | (f4::FLOAT_SUFFIX))?) ;
innerTypeDef ::= (ed::enumDefinition) | (cd::classDefinition) | (id::interfaceDefinition) | (ad::annotationTypeDefinition) ;
enumDefinition ::= ENUM IDENT ic::implementsClause eb::enumBlock ;
identPrimary ::= ta1::typeArguments IDENT ((DOT ta2::typeArguments IDENT) | ε)* ((lp::LPAREN argList RPAREN) | ((lbc::LBRACK RBRACK)+))? ;
statement ::= compoundStatement | (declaration SEMI) | (expression SEMI) | (m::modifiers enumDefinition | classDefinition) | (IDENT c::COLON statement) | ("if" LPAREN expression RPAREN statement ("else" statement)?) | ("for" LPAREN (parameterDeclaration COLON expression) | (forInit SEMI forCond SEMI forIter) RPAREN statement) | ("while" LPAREN expression RPAREN statement) | ("do" statement "while" LPAREN expression RPAREN SEMI) | ("break" IDENT? SEMI) | ("continue" IDENT? SEMI) | ("return" expression? SEMI) | ("switch" LPAREN expression RPAREN LCURLY casesGroup* RCURLY) | tryBlock | ("throw" expression SEMI) | ("synchronized" LPAREN expression RPAREN compoundStatement) | (ASSERT expression (COLON expression)? SEMI) | (s::SEMI) ;
typeDefinition ::= (m::modifiers classDefinition | enumDefinition | interfaceDefinition | annotationTypeDefinition) | SEMI ;
postfixExpression ::= primaryExpression ((DOT "this") | (DOT ta1::typeArguments (IDENT (lp::LPAREN argList RPAREN)?) | ("super" (lp3::LPAREN argList RPAREN) | (DOT ta2::typeArguments IDENT (lps::LPAREN argList RPAREN)?))) | (DOT newExpression) | (lb::LBRACK expression RBRACK))* ((in::INC) | (de::DEC))? ;
classTypeSpec ::= classOrInterfaceType (lb::LBRACK RBRACK)* ;
interfaceDefinition ::= "interface" IDENT tp::typeParameters ie::interfaceExtends ib::interfaceBlock ;
classDefinition ::= "class" IDENT tp::typeParameters sc::superClassClause ic::implementsClause cb::classBlock ;
newArrayDeclarator ::= (lb::LBRACK expression? RBRACK)+ ;
unaryExpressionNotPlusMinus ::= (BNOT unaryExpression) | (LNOT unaryExpression) | (lpb::LPAREN builtInTypeSpec RPAREN unaryExpression) | (lp::LPAREN classTypeSpec RPAREN unaryExpressionNotPlusMinus) | postfixExpression ;
classField ::= (mods::modifiers (it::innerTypeDef) | (tp::typeParameters (h::ctorHead s::constructorBody) | (md::memberDef))) | ("static" s3::compoundStatement) | (s4::compoundStatement) ;
interfaceExtends ::= (e::"extends" classOrInterfaceType (COMMA classOrInterfaceType)*)? ;
annotationInit ::= (lp::LPAREN (annotationMemberInit (COMMA annotationMemberInit)*) | annotationMemberValue | ε RPAREN) | ε ;
declaratorBrackets ::= (lb::LBRACK RBRACK)* ;
importDefinition ::= i::"import" "static"? identifierStar SEMI ;
typeArgument ::= (q::QUESTION (("extends" referenceTypeSpec) | ("super" referenceTypeSpec))?) | referenceTypeSpec ;
explicitConstructorInvocation ::= typeArguments ("this" lp1::LPAREN argList RPAREN SEMI) | ("super" lp2::LPAREN argList RPAREN SEMI) ;
annotationMemberArrayInitializer ::= lc::LCURLY (annotationMemberValue (COMMA annotationMemberValue)*)? COMMA? RCURLY ;
enumConstInit ::= (lp::LPAREN argList RPAREN) | ε ;
parameterDeclaration ::= pm::parameterModifier t::typeSpec (el::ELLIPSIS)? id::IDENT pd::declaratorBrackets ;
arrayTypeSpec ::= builtInType (lb::LBRACK RBRACK)+ ;
variableDeclarator ::= id::IDENT d::declaratorBrackets v::varInitializer ;
memberDef ::= t::typeSpec (IDENT LPAREN param::parameterDeclarationList RPAREN rt::declaratorBrackets (tc::throwsClause)? SEMI | (s2::compoundStatement)) | (v::variableDefinitions SEMI) ;
annotationField ::= mods::modifiers (it::innerTypeDef) | (ts::typeSpec (i::IDENT LPAREN RPAREN dv::defaultValue SEMI) | (v::variableDefinitions SEMI)) ;
arrayInitializer ::= lc::LCURLY (initializer (COMMA initializer)*)? COMMA? RCURLY ;
compoundStatement ::= lc::LCURLY statement* RCURLY ;
typeParameters ::= (lt::LT typeParameter (COMMA typeParameter)* typeArgumentsEnd?) | ε ;
interfaceField ::= mods::modifiers (it::innerTypeDef) | (tp::typeParameters md::memberDef) ;
--------------------java::java-5-studman.bgf--------------------
implementsClause ::= (i::"implements" classOrInterfaceType (COMMA classOrInterfaceType)*)? ;
constructorBody ::= lc::LCURLY explicitConstructorInvocation? statement* RCURLY ;
declaration ::= m::modifiers t::typeSpec v::variableDefinitions ;
primaryExpression ::= (identPrimary (DOT "class")?) | constant | "true" | "false" | "null" | newExpression | "this" | "super" | (LPAREN assignmentExpression RPAREN) | (builtInType (lbt::LBRACK RBRACK)* DOT "class") ;
forEachClause ::= p::parameterDeclaration COLON expression ;
packageDefinition ::= annotations p::"package" identifier SEMI ;
builtInTypeSpec ::= builtInType (lb::LBRACK RBRACK)* ;
NUM_INT ::= ("." ((("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+ EXPONENT? (f1::FLOAT_SUFFIX)?) | "..")?) | (("0" (("x" | "X" HEX_DIGIT+) | (("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")+) | (("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7")+))?) | ("1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")*) ("l" | "L" | ("." ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")* EXPONENT? (f2::FLOAT_SUFFIX)?) | (EXPONENT (f3::FLOAT_SUFFIX)?) | (f4::FLOAT_SUFFIX))?) ;
enumConstantField ::= (mods::modifiers (td::typeDefinitionInternal) | ((tp::typeParameters)? t::typeSpec (IDENT LPAREN param::parameterDeclarationList RPAREN rt::declaratorBrackets (tc::throwsClause)? (s2::compoundStatement) | SEMI) | (v::variableDefinitions SEMI))) | (s4::compoundStatement) ;
enumDefinition ::= "enum" IDENT ic::implementsClause eb::enumBlock ;
wildcardType ::= q::QUESTION typeArgumentBounds? ;
variableLengthParameterDeclaration ::= pm::parameterModifier t::typeSpec TRIPLE_DOT id::IDENT pd::declaratorBrackets ;
identPrimary ::= (ta1::typeArguments)? IDENT ((DOT (ta2::typeArguments)? IDENT) | ε)* ((lp::LPAREN argList RPAREN) | ((lbc::LBRACK RBRACK)+))? ;
statement ::= compoundStatement | (declaration SEMI) | (expression SEMI) | (m::modifiers classDefinition) | (IDENT c::COLON statement) | ("if" LPAREN expression RPAREN statement ("else" statement)?) | forStatement | ("while" LPAREN expression RPAREN statement) | ("do" statement "while" LPAREN expression RPAREN SEMI) | ("break" IDENT? SEMI) | ("continue" IDENT? SEMI) | ("return" expression? SEMI) | ("switch" LPAREN expression RPAREN LCURLY casesGroup* RCURLY) | tryBlock | ("throw" expression SEMI) | ("synchronized" LPAREN expression RPAREN compoundStatement) | ("assert" expression (COLON expression)? SEMI) | (s::SEMI) ;
annotation ::= AT i::identifier (LPAREN (args::annotationArguments)? RPAREN)? ;
typeDefinition ::= (m::modifiers typeDefinitionInternal) | SEMI ;
postfixExpression ::= primaryExpression ((DOT typeArguments? (IDENT (lp::LPAREN argList RPAREN)?) | ("super" (lp3::LPAREN argList RPAREN) | (DOT typeArguments? IDENT (lps::LPAREN argList RPAREN)?))) | (DOT "this") | (DOT newExpression) | (lb::LBRACK expression RBRACK))* ((in::INC) | (de::DEC))? ;
classTypeSpec ::= classOrInterfaceType (lb::LBRACK RBRACK)* ;
interfaceDefinition ::= "interface" IDENT (tp::typeParameters)? ie::interfaceExtends ib::interfaceBlock ;
classDefinition ::= "class" IDENT (tp::typeParameters)? sc::superClassClause ic::implementsClause cb::classBlock ;
newArrayDeclarator ::= (lb::LBRACK expression? RBRACK)+ ;
unaryExpressionNotPlusMinus ::= (BNOT unaryExpression) | (LNOT unaryExpression) | (lpb::LPAREN builtInTypeSpec RPAREN unaryExpression) | (lp::LPAREN classTypeSpec RPAREN unaryExpressionNotPlusMinus) | postfixExpression ;
forStatement ::= f::"for" LPAREN traditionalForClause | forEachClause RPAREN statement ;
annotationDefinition ::= AT "interface" IDENT ab::annotationBlock ;
classField ::= (mods::modifiers (td::typeDefinitionInternal) | ((tp::typeParameters)? (h::ctorHead s::constructorBody) | (t::typeSpec (IDENT LPAREN param::parameterDeclarationList RPAREN rt::declaratorBrackets (tc::throwsClause)? (s2::compoundStatement) | SEMI) | (v::variableDefinitions SEMI)))) | ("static" s3::compoundStatement) | (s4::compoundStatement) ;
parameterModifier ::= annotation* (f::"final")? annotation* ;
interfaceExtends ::= (e::"extends" classOrInterfaceType (COMMA classOrInterfaceType)*)? ;
declaratorBrackets ::= (lb::LBRACK RBRACK)* ;
importDefinition ::= i::"import" "static"? identifierStar SEMI ;
builtInTypeArraySpec ::= builtInType (lb::LBRACK RBRACK)+ ;
explicitConstructorInvocation ::= typeArguments? ("this" lp1::LPAREN argList RPAREN SEMI) | ("super" lp2::LPAREN argList RPAREN SEMI) ;
annotationMemberArrayInitializer ::= lc::LCURLY (annotationMemberArrayValueInitializer (COMMA annotationMemberArrayValueInitializer)* COMMA?)? RCURLY ;
parameterDeclaration ::= pm::parameterModifier t::typeSpec id::IDENT pd::declaratorBrackets ;
typeParameter ::= id::IDENT typeParameterBounds? ;
variableDeclarator ::= id::IDENT d::declaratorBrackets v::varInitializer ;
superClassClause ::= ("extends" c::classOrInterfaceType)? ;
annotationField ::= mods::modifiers (td::typeDefinitionInternal) | (t::typeSpec (i::IDENT LPAREN RPAREN rt::declaratorBrackets ("default" amvi::annotationMemberValueInitializer)? SEMI) | (v::variableDefinitions SEMI)) ;
arrayInitializer ::= lc::LCURLY (initializer (COMMA initializer)* COMMA?)? RCURLY ;
enumConstant ::= an::annotations i::IDENT (LPAREN a::argList RPAREN)? (b::enumConstantBlock)? ;
compoundStatement ::= lc::LCURLY statement* RCURLY ;
annotationMemberValuePair ::= i::IDENT ASSIGN v::annotationMemberValueInitializer ;
interfaceField ::= mods::modifiers (td::typeDefinitionInternal) | ((tp::typeParameters)? t::typeSpec (IDENT LPAREN param::parameterDeclarationList RPAREN rt::declaratorBrackets (tc::throwsClause)? SEMI) | (v::variableDefinitions SEMI)) ;
--------------------java::java-1-jouault.bgf--------------------
Field ::= owner::JavaClass type::JavaClass isStatic::Boolean isPublic::Boolean ;
Package ::= (classes::JavaClass)+ ;
JavaClass ::= PrimitiveType ;
 JavaClass ::= (members::ClassMember)+ package::Package (typedElements::ClassMember)+ (parameters::FeatureParameter)+ isAbstract::Boolean isStatic::Boolean isPublic::Boolean ;
FeatureParameter ::= type::JavaClass method::Method ;
PrimitiveType ::= (members::ClassMember)+ package::Package (typedElements::ClassMember)+ (parameters::FeatureParameter)+ isAbstract::Boolean isStatic::Boolean isPublic::Boolean ;
Method ::= (parameters::FeatureParameter)+ ;
--------------------java::java-1-touzet.bgf--------------------
JavaSource ::= (classes::ClassDeclaration)+ ;
MethodDefinition ::= class::ClassDeclaration (invocations::MethodInvocation)+ ;
ClassDeclaration ::= superclass::ClassDeclaration (methods::MethodDefinition)+ ;
MethodInvocation ::= method::MethodDefinition ;
--------------------java::java-3-bruneliere.bgf--------------------
Field ::= share::Boolean class::Class interface::Interface value::Value typeOf::Type ;
Parameter ::= name::String typeOf::Type owner::Method ;
Interface ::= (superInterface::Interface)+ (implementedBy::Class)+ (abstractMethods::Method)+ (constants::Field)+ ;
Class ::= superClass::Class (implement::Interface)+ (methods::Method)+ (fields::Field)+ ;
ReferenceType ::= reference::Class ;
Method ::= share::Boolean class::Class interface::Interface resultOf::Type (parameters::Parameter)+ ;
--------------------java::java-5-giquel.bgf--------------------
ReturnStatement ::= expression::Expression ;
ArrayAccess ::= index::Expression array::Expression ;
SwitchStatement ::= (statements::Statement)+ expression::Expression ;
MemberRef ::= qualifier::NamedElementRef member::NamedElementRef ;
MethodRefParameter ::= name::String isVarargs::Boolean type::NamedElementRef ;
VariableDeclarationExpression ::= modifiers::String type::NamedElementRef ;
ThisExpression ::= qualifier::NamedElementRef ;
TypeLiteral ::= type::NamedElementRef ;
ImportDeclaration ::= static::Boolean importedElement::NamedElementRef ;
WildCardType ::= isUpperBound::Boolean bound::NamedElementRef ;
PackageDeclaration ::= model::Model (ownedElements::AbstractTypeDeclaration)+ ;
ParameterizedType ::= (typeArguments::NamedElementRef)+ type::NamedElementRef ;
MethodInvocation ::= method::NamedElementRef (arguments::Expression)+ expression::Expression ;
NamedElementRef ::= extraArrayDimensions::Integer element::NamedElement qualifier::NamedElementRef ;
TypeParameter ::= (bounds::NamedElementRef)+ ;
TextElement ::= text::String ;
Assignment ::= operator::String rightHandSide::Expression leftHandSide::Expression ;
Block ::= (statements::Statement)+ ;
PrefixExpression ::= operator::String operand::Expression ;
CatchClause ::= exception::SingleVariableDeclaration body::Block ;
ArrayInitializer ::= (expressions::Expression)+ ;
InfixExpression ::= operator::String (extendedOperands::Expression)+ rightOperand::Expression leftOperand::Expression ;
ContinueStatement ::= label::NamedElementRef ;
UnresolvedItem ::= name::String proxy::Boolean (comments::Comment)+ ;
WhileStatement ::= expression::Expression body::Statement ;
FieldAccess ::= field::NamedElementRef expression::Expression ;
EnhancedForStatement ::= parameter::SingleVariableDeclaration expression::Expression body::Statement ;
CastExpression ::= type::NamedElementRef expression::Expression ;
AnnotationTypeMemberDeclaration ::= type::NamedElementRef default::Expression ;
SingleVariableDeclaration ::= modifiers::String isVarargs::Boolean type::NamedElementRef ;
EnumConstantDeclaration ::= (arguments::Expression)+ anonymousClassDeclaration::AnonymousClassDeclaration ;
ParenthesizedExpression ::= expression::Expression ;
MethodRef ::= qualifier::NamedElementRef (parameters::MethodRefParameter)+ method::NamedElementRef ;
VariableDeclarationStatement ::= modifiers::String type::NamedElementRef ;
BreakStatement ::= label::NamedElementRef ;
AnonymousClassDeclaration ::= (bodyDeclarations::BodyDeclaration)+ ;
Annotation ::= type::NamedElementRef (values::AnnotationMemberValuePair)+ ;
PostfixExpression ::= operator::String operand::Expression ;
SuperMethodInvocation ::= (arguments::Expression)+ qualifier::NamedElementRef method::NamedElementRef ;
ThrowStatement ::= expression::Expression ;
ForStatement ::= body::Statement expression::Expression (initializers::Expression)+ (updaters::Expression)+ ;
ArrayLengthAccess ::= array::Expression ;
Initializer ::= body::Block ;
TypeDeclaration ::= isInterface::Boolean (typeParameters::TypeParameter)+ superclass::NamedElementRef ;
FieldDeclaration ::= type::NamedElementRef ;
LabeledStatement ::= body::Statement ;
MethodDeclaration ::= extraArrayDimensions::Integer constructor::Boolean varargs::Boolean body::Block (parameters::SingleVariableDeclaration)+ (typeParameters::TypeParameter)+ (thrownExceptions::NamedElementRef)+ returnType::NamedElementRef ;
ArrayCreation ::= (dimensions::Expression)+ initializer::ArrayInitializer type::NamedElementRef ;
Javadoc ::= (tags::TagElement)+ ;
IfStatement ::= expression::Expression elseStatement::Statement thenStatement::Statement ;
BlockComment ::= content::String isEnclosedByParent::Boolean isPrefixOfParent::Boolean ;
LineComment ::= content::String isEnclosedByParent::Boolean isPrefixOfParent::Boolean ;
AssertStatement ::= message::Expression expression::Expression ;
SwitchCase ::= expressionInitialized::Boolean expression::Expression ;
SuperFieldAccess ::= qualifier::NamedElementRef field::NamedElementRef ;
TagElement ::= tagName::String (fragments::ASTNode)+ ;
AnnotationMemberValuePair ::= member::NamedElementRef value::Expression ;
PrimitiveType ::= (comments::Comment)+ ;
ConditionalExpression ::= elseExpression::Expression thenExpression::Expression expression::Expression ;
SynchronizedStatement ::= body::Block expression::Expression ;
EnumDeclaration ::= (enumConstants::EnumConstantDeclaration)+ ;
ExpressionStatement ::= expression::Expression ;
TryStatement ::= finally::Block body::Block (catchClauses::CatchClause)+ ;
AnnotationTypeDeclaration ::= originalFileContent::String package::PackageDeclaration (bodyDeclarations::BodyDeclaration)+ (superInterfaces::NamedElementRef)+ (commentsAfterBody::Comment)+ (imports::ImportDeclaration)+ (commentsBeforeBody::Comment)+ ;
SuperConstructorInvocation ::= (arguments::Expression)+ expression::Expression ;
TypeDeclarationStatement ::= declaration::AbstractTypeDeclaration ;
ClassInstanceCreation ::= (arguments::Expression)+ type::NamedElementRef expression::Expression anonymousClassDeclaration::AnonymousClassDeclaration ;
ConstructorInvocation ::= (arguments::Expression)+ ;
Model ::= name::String (ownedElements::PackageDeclaration)+ (orphanTypes::OrphanType)+ ;
InstanceofExpression ::= leftOperand::Expression rightOperand::NamedElementRef ;
DoStatement ::= expression::Expression body::Statement ;
OrphanType ::= WildCardType ;
 OrphanType ::= ParameterizedType ;
 OrphanType ::= PrimitiveType ;
 OrphanType ::= name::String proxy::Boolean ;
--------------------java::jvm-level1.bgf--------------------
TypeSignature ::= (primitive::(type::PrimitiveTypeDescriptor)) | (fieldType::(sig::FieldTypeSignature)) ;
TypeArg ::= (type::(fieldType::FieldTypeSignature)) | (wildcard::ε) | (extends::(fieldType::FieldTypeSignature)) | (super::(fieldType::FieldTypeSignature)) ;
AccessModifier ::= (public::ε) | (private::ε) | (protected::ε) ;
MethodDescription ::= methodDescriptor::(arguments::(TypeDescriptor*) returnType::TypeDescriptor) ;
Field ::= (field::(modifiers::(FieldModifier*) name::string() description::string() signature::string() value::α)) | (field::(modifiers::(FieldModifier*) name::string() description::string() signature::string())) ;
MethodModifier ::= (access::(access::AccessModifier)) | (static::ε) | (final::ε) | (synchronized::ε) | (bridge::ε) | (varags::ε) | (native::ε) | (abstract::ε) | (strict::ε) | (synthetic::ε) ;
Class ::= (class::(version::integer() modifiers::(ClassModifier*) name::string() signature::string() superName::string() interfaces::(string()*) sourceFile::string() sourceDebug::string() outerClass::string() outerMethod::string() outerMethodDescription::string() innerClasses::(InnerClass*) fields::(Field*) methods::(Method*))) | (class::(version::integer() modifiers::(ClassModifier*) name::string() signature::string() superName::string() interfaces::(string()*) innerClasses::(InnerClass*) fields::(Field*) methods::(Method*))) ;
FieldModifier ::= (access::(access::AccessModifier)) | (static::ε) | (final::ε) | (volatile::ε) | (transient::ε) | (synthetic::ε) | (enum::ε) ;
PrimitiveTypeDescriptor ::= (boolean::ε) | (char::ε) | (byte::ε) | (short::ε) | (int::ε) | (float::ε) | (long::ε) | (double::ε) ;
ClassModifier ::= (access::(access::AccessModifier)) | (final::ε) | (super::ε) | (interface::ε) | (abstract::ε) | (synthetic::ε) | (annotation::ε) | (enum::ε) | (deprecated::ε) ;
Instruction ::= (getStatic::(owner::string() name::string() description::string())) | (putStatic::(owner::string() name::string() description::string())) | (getField::(owner::string() name::string() description::string())) | (putField::(owner::string() name::string() description::string())) | (increment::(index::integer() amount::integer())) | (nop::ε) | (aConstNull::ε) | (iConstM1::ε) | (iConst0::ε) | (iConst1::ε) | (iConst2::ε) | (iConst3::ε) | (iConst4::ε) | (iConst5::ε) | (lConst0::ε) | (lConst1::ε) | (fConst0::ε) | (fConst1::ε) | (fConst2::ε) | (dConst0::ε) | (dConst1::ε) | (iaLoad::ε) | (laLoad::ε) | (faLoad::ε) | (daLoad::ε) | (aaLoad::ε) | (baLoad::ε) | (caLoad::ε) | (saLoad::ε) | (iaStore::ε) | (laStore::ε) | (faStore::ε) | (daStore::ε) | (aaStore::ε) | (baStore::ε) | (caStore::ε) | (saStore::ε) | (pop::ε) | (pop2::ε) | (dup::ε) | (dupX1::ε) | (dupX2::ε) | (dup2::ε) | (dup2X1::ε) | (dup2X2::ε) | (swap::ε) | (iAdd::ε) | (lAdd::ε) | (fAdd::ε) | (dAdd::ε) | (iSub::ε) | (lSub::ε) | (fSub::ε) | (dSub::ε) | (iMul::ε) | (lMul::ε) | (fMul::ε) | (dMul::ε) | (iDiv::ε) | (lDiv::ε) | (fDiv::ε) | (dDiv::ε) | (iRem::ε) | (lRem::ε) | (fRem::ε) | (dRem::ε) | (iNeg::ε) | (lNeg::ε) | (fNeg::ε) | (dNeg::ε) | (iShl::ε) | (lShl::ε) | (iShr::ε) | (lShr::ε) | (iuShr::ε) | (luShr::ε) | (iAnd::ε) | (lAnd::ε) | (iOr::ε) | (lOr::ε) | (iXor::ε) | (lXor::ε) | (i2l::ε) | (i2f::ε) | (i2d::ε) | (l2i::ε) | (l2f::ε) | (l2d::ε) | (f2i::ε) | (f2l::ε) | (f2d::ε) | (d2i::ε) | (d2l::ε) | (d2f::ε) | (i2b::ε) | (i2c::ε) | (i2s::ε) | (lCmp::ε) | (fCmpL::ε) | (fCmpG::ε) | (dCmpL::ε) | (dCmpH::ε) | (iReturn::ε) | (lReturn::ε) | (fReturn::ε) | (dReturn::ε) | (aReturn::ε) | (return::ε) | (arrayLength::ε) | (aThrow::ε) | (monitorEnter::ε) | (monitorExit::ε) | (biPush::(operand::integer())) | (siPush::(operand::integer())) | (newArray::(operand::integer())) | (ifEq::(label::integer())) | (ifNe::(label::integer())) | (ifLt::(label::integer())) | (ifGe::(label::integer())) | (ifGt::(label::integer())) | (ifLe::(label::integer())) | (ifICmpEq::(label::integer())) | (ifICmpNe::(label::integer())) | (ifICmpLt::(label::integer())) | (ifICmpGe::(label::integer())) | (ifICmpGt::(label::integer())) | (ifICmpLe::(label::integer())) | (ifACmpEq::(label::integer())) | (ifACmpNe::(label::integer())) | (goto::(label::integer())) | (jsr::(label::integer())) | (ifNull::(label::integer())) | (ifNonNull::(label::integer())) | (label::(index::integer())) | (lineNumber::(line::integer() labelIndex::integer())) | (localVariable::(opcode::integer() index::integer())) | (iLoad::(index::integer())) | (lLoad::(index::integer())) | (fLoad::(index::integer())) | (dLoad::(index::integer())) | (aLoad::(index::integer())) | (iStore::(index::integer())) | (lStore::(index::integer())) | (fStore::(index::integer())) | (dStore::(index::integer())) | (aStore::(index::integer())) | (ret::(index::integer())) | (ldcString::(string::string())) | (ldcInt::(int::integer())) | (ldcLong::(long::integer())) | (ldcFloat::(float::integer())) | (ldcDouble::(double::integer())) | (lookupSwitch::(defaultLabel::integer() keys::(integer()*) cases::(integer()*))) | (invokeVirtual::(owner::string() name::string() description::string())) | (invokeSpecial::(owner::string() name::string() description::string())) | (invokeStatic::(owner::string() name::string() description::string())) | (invokeInterface::(owner::string() name::string() description::string())) | (invokeDynamic::(owner::string() name::string() description::string())) | (multiANewArray::(description::string() dimensions::integer())) | (tableSwitch::(min::integer() max::integer() defaultLabel::integer() cases::(integer()*))) | (new::(internalName::string())) | (aNewArray::(internalName::string())) | (checkCast::(internalName::string())) | (instanceOf::(internalName::string())) ;
TryCatchBlock ::= (tryCatchBlock::(startLabelIndex::integer() endLabelIndex::integer() handlerLabelIndex::integer() type::string())) | (finallyBlock::(startLabelIndex::integer() endLabelIndex::integer() handlerLabelIndex::integer())) ;
TypeDescriptor ::= (primitive::(type::PrimitiveTypeDescriptor)) | (object::(internalName::string())) | (array::(type::TypeDescriptor)) ;
LocalVariable ::= localVariable::(name::string() description::string() signature::string() startLabelIndex::integer() endLabelIndex::integer() index::integer()) ;
ClassTypeSignature ::= (topLevel::(internalName::string() args::(TypeArg*))) | (inner::(class::ClassTypeSignature name::string() args::(TypeArg*))) ;
FieldTypeSignature ::= (classType::(class::ClassTypeSignature)) | (array::(type::TypeSignature)) | (typeVar::(name::string())) ;
InnerClass ::= (innerClass::(name::string() outerName::string() innerName::string() modifiers::(ClassModifier*))) | (innerClass::(name::string() modifiers::(ClassModifier*))) ;
Method ::= method::(modifiers::(MethodModifier*) name::string() description::string() signature::string() exceptions::(string()*) instructions::(Instruction*) tryCatchBlocks::(TryCatchBlock*) localVariables::(LocalVariable*)) ;
--------------------basic::vb-glineur.bgf--------------------
obeo/psm/vb/projects/VB_1/features/VB_Property ::= visibility::obeo/psm/vb/projects/VB_1/enumerations/VisibilityEnum isShared::Boolean isGetOnly::Boolean isSet::Boolean isLet::Boolean name::String (parameters::obeo/psm/vb/projects/VB_1/features/VB_Parameter)+ type::obeo/psm/vb/projects/VB_1/references/VB_FullTypeRef (modifiers::obeo/psm/vb/projects/VB_1/features/VB_Modifier)+ (statements::obeo/psm/vb/projects/VB_1/statements/VB_Statement)+ ;
obeo/psm/vb/projects/VB_1/expressions/VB_AssignmentExpression ::= variable::obeo/psm/vb/projects/VB_1/references/VB_FullDataRef expression::obeo/psm/vb/projects/VB_1/expressions/VB_Expression ;
obeo/psm/vb/projects/VB_1/core/VB_Implements ::= implements::obeo/psm/vb/projects/VB_1/references/VB_FullTypeRef ;
obeo/psm/vb/projects/VB_1/expressions/VB_TabValuesExpression ::= (arguments::obeo/psm/vb/projects/VB_1/expressions/VB_Expression)+ ;
obeo/psm/vb/projects/VB_1/expressions/VB_ParenthesisExpression ::= expression::obeo/psm/vb/projects/VB_1/expressions/VB_Expression ;
obeo/psm/vb/projects/VB_1/features/VB_Sub ::= hasAnnotation::Boolean annotation::obeo/psm/vb/projects/VB_1/statements/VB_Call isFriend::Boolean hasVisibility::Boolean visibility::obeo/psm/vb/projects/VB_1/enumerations/VisibilityEnum isOverloads::Boolean isOverrides::Boolean name::String (parameters::obeo/psm/vb/projects/VB_1/features/VB_Parameter)+ hasHandles::Boolean (handles::obeo/psm/vb/projects/VB_1/references/VB_FullTypeRef)+ (statements::obeo/psm/vb/projects/VB_1/statements/VB_Statement)+ ;
obeo/psm/vb/projects/VB_1/core/VB_Module ::= name::String (features::obeo/psm/vb/projects/VB_1/features/VB_Feature)+ ;
obeo/psm/vb/projects/VB_1/references/VB_FullTypeRef ::= (members::obeo/psm/vb/projects/VB_1/references/VB_TypeRef)+ ;
obeo/psm/vb/projects/VB_1/expressions/VB_NotExpression ::= expression::obeo/psm/vb/projects/VB_1/expressions/VB_Expression ;
obeo/psm/vb/projects/VB_1/references/VB_LabelRef ::= label::obeo/psm/vb/resources/VB_LangElement labelValue::String ;
obeo/psm/vb/projects/VB_1/core/VB_Assembly ::= call::obeo/psm/vb/projects/VB_1/statements/VB_Call ;
obeo/psm/vb/projects/VB_1/statements/VB_Call ::= expression::obeo/psm/vb/projects/VB_1/references/VB_FullDataRef (arguments::obeo/psm/vb/projects/VB_1/statements/VB_CallArgument)+ ;
obeo/psm/vb/projects/VB_1/expressions/VB_ByValExpression ::= value::obeo/psm/vb/projects/VB_1/expressions/VB_Expression ;
obeo/psm/vb/projects/VB_1/graphicals/VB_GraphicalPropertySet ::= name::String hasArguments::Boolean (arguments::obeo/psm/vb/projects/VB_1/expressions/VB_Expression)+ hasBrackets::Boolean (fields::obeo/psm/vb/projects/VB_1/graphicals/VB_GraphicalField)+ ;
obeo/psm/vb/projects/VB_1/expressions/VB_NegativeValue ::= value::obeo/psm/vb/projects/VB_1/expressions/VB_Value ;
obeo/psm/vb/projects/VB_1/expressions/VB_NegativeExpression ::= expression::obeo/psm/vb/projects/VB_1/expressions/VB_Expression ;
obeo/psm/vb/projects/VB_1/preprocessing/VB_PreprocIf ::= condition::obeo/psm/vb/projects/VB_1/expressions/VB_Expression (features::obeo/psm/vb/projects/VB_1/features/VB_Feature)+ ;
obeo/psm/vb/projects/VB_1/features/VB_Parameter ::= isOptional::Boolean hasQualifier::Boolean qualifier::obeo/psm/vb/projects/VB_1/enumerations/QualifierEnum name::String isArray::Boolean arrayExpression::obeo/psm/vb/projects/VB_1/expressions/VB_Expression hasType::Boolean type::obeo/psm/vb/projects/VB_1/references/VB_FullTypeRef hasInitialValue::Boolean value::obeo/psm/vb/projects/VB_1/expressions/VB_Expression ;
obeo/psm/vb/projects/VB_1/expressions/VB_TypeOfExpression ::= variable::obeo/psm/vb/projects/VB_1/references/VB_FullDataRef type::obeo/psm/vb/projects/VB_1/references/VB_FullTypeRef ;
obeo/psm/vb/projects/VB_1/features/VB_DeclareSub ::= hasVisibility::Boolean visibility::obeo/psm/vb/projects/VB_1/enumerations/VisibilityEnum isAuto::Boolean name::String lib::String isAlias::Boolean alias::String (parameters::obeo/psm/vb/projects/VB_1/features/VB_Parameter)+ ;
obeo/psm/vb/projects/VB_1/enumerations/EnablementEnum ::= (Off::ε) | (On::ε) ;
obeo/psm/vb/projects/VB_1/features/VB_Region ::= name::String (features::obeo/psm/vb/projects/VB_1/features/VB_Feature)+ ;
obeo/psm/vb/projects/VB_1/graphicals/VB_GraphicalProperty ::= property::obeo/psm/vb/projects/VB_1/references/VB_FullDataRef value::obeo/psm/vb/projects/VB_1/expressions/VB_Expression ;
obeo/psm/vb/projects/VB_1/statements/VB_RawBody ::= value::String ;
obeo/psm/vb/projects/VB_1/features/VB_Set ::= hasParameters::Boolean (parameters::obeo/psm/vb/projects/VB_1/features/VB_Parameter)+ (statements::obeo/psm/vb/projects/VB_1/statements/VB_Statement)+ ;
obeo/psm/vb/projects/VB_1/features/VB_DeclareFunction ::= hasVisibility::Boolean visibility::obeo/psm/vb/projects/VB_1/enumerations/VisibilityEnum isAuto::Boolean name::String lib::String isAlias::Boolean alias::String (parameters::obeo/psm/vb/projects/VB_1/features/VB_Parameter)+ return::obeo/psm/vb/projects/VB_1/references/VB_FullTypeRef ;
obeo/psm/vb/projects/VB_1/core/VB_SimpleType ::= visibility::obeo/psm/vb/projects/VB_1/enumerations/VisibilityEnum name::String (features::obeo/psm/vb/projects/VB_1/features/VB_Feature)+ ;
obeo/psm/vb/projects/VB_1/references/VB_DataRef ::= data::obeo/psm/vb/resources/VB_LangElement dataValue::String hasArguments::Boolean (arguments::obeo/psm/vb/projects/VB_1/statements/VB_CallArgument)+ hasRefMarker::Boolean hasSubMarker::Boolean ;
obeo/psm/vb/projects/VB_1/graphicals/VB_GraphicalElement ::= type::obeo/psm/vb/projects/VB_1/references/VB_FullTypeRef name::String (fields::obeo/psm/vb/projects/VB_1/graphicals/VB_GraphicalField)+ (children::obeo/psm/vb/projects/VB_1/graphicals/VB_GraphicalElement)+ ;
obeo/psm/vb/projects/VB_1/core/VB_FileAttribute ::= name::String (initialValue::obeo/psm/vb/projects/VB_1/expressions/VB_Expression)+ ;
obeo/psm/vb/projects/VB_1/expressions/VB_OperatorExpression ::= leftHand::obeo/psm/vb/projects/VB_1/expressions/VB_Expression rightHand::obeo/psm/vb/projects/VB_1/expressions/VB_Expression operatorName::String ;
obeo/psm/vb/projects/VB_1/features/VB_Attribute ::= hasVisibility::Boolean visibility::obeo/psm/vb/projects/VB_1/enumerations/VisibilityEnum hasQualifier::Boolean qualifier::obeo/psm/vb/projects/VB_1/enumerations/Qualifier_2Enum isFriend::Boolean isWithEvents::Boolean isShared::Boolean name::String isArray::Boolean (arrayExpressions::obeo/psm/vb/projects/VB_1/expressions/VB_Expression)+ hasType::Boolean type::obeo/psm/vb/projects/VB_1/expressions/VB_Expression hasInitialValue::Boolean initialValue::obeo/psm/vb/projects/VB_1/expressions/VB_Expression hasNext::Boolean ;
obeo/psm/vb/projects/VB_1/enumerations/QualifierEnum ::= (byRef::ε) | (byVal::ε) ;
obeo/psm/vb/projects/VB_1/enumerations/VisibilityEnum ::= (private::ε) | (protected::ε) | (public::ε) ;
obeo/psm/vb/projects/VB_1/core/VB_Content ::= hasVersion::Boolean version::String hasClass::Boolean hasBeginEnd::Boolean (beginEndGlobalVariables::obeo/psm/vb/projects/VB_1/core/VB_GlobalVariable)+ (globalVariables::obeo/psm/vb/projects/VB_1/core/VB_GlobalVariable)+ (elements::obeo/psm/vb/projects/VB_1/core/VB_ContentElement)+ ;
obeo/psm/vb/projects/VB_1/features/VB_Get ::= hasParameters::Boolean (parameters::obeo/psm/vb/projects/VB_1/features/VB_Parameter)+ (statements::obeo/psm/vb/projects/VB_1/statements/VB_Statement)+ ;
obeo/psm/vb/projects/VB_1/core/VB_Class ::= isFriend::Boolean hasVisibility::Boolean visibility::obeo/psm/vb/projects/VB_1/enumerations/VisibilityEnum name::String hasInherits::Boolean inherits::obeo/psm/vb/projects/VB_1/references/VB_FullTypeRef (features::obeo/psm/vb/projects/VB_1/features/VB_Feature)+ ;
obeo/psm/vb/projects/VB_1/core/VB_Enum ::= visibility::obeo/psm/vb/projects/VB_1/enumerations/VisibilityEnum name::String (features::obeo/psm/vb/projects/VB_1/features/VB_Feature)+ ;
obeo/psm/vb/projects/VB_1/core/VB_GlobalVariable ::= name::String (value::obeo/psm/vb/projects/VB_1/expressions/VB_Expression)+ ;
obeo/psm/vb/projects/VB_1/enumerations/NameEnum ::= (trueLit::ε) | (falseLit::ε) | (nothing::ε) ;
obeo/psm/vb/projects/VB_1/references/VB_FullDataRef ::= self::Boolean (members::obeo/psm/vb/projects/VB_1/references/VB_DataRef)+ hasRecSet::Boolean recSetMember::obeo/psm/vb/projects/VB_1/references/VB_DataRef ;
obeo/psm/vb/projects/VB_1/references/VB_TypeRef ::= type::obeo/psm/vb/resources/VB_LangElement typeValue::String ;
obeo/psm/vb/projects/VB_1/enumerations/Qualifier_2Enum ::= (static::ε) | (const::ε) | (dim::ε) ;
obeo/psm/vb/projects/VB_1/statements/VB_CallExpressionArgument ::= expression::obeo/psm/vb/projects/VB_1/expressions/VB_Expression hasSeparator::Boolean ;
obeo/psm/vb/projects/VB_1/core/VB_Imports ::= imports::obeo/psm/vb/projects/VB_1/references/VB_FullTypeRef ;
obeo/psm/vb/projects/VB_1/expressions/VB_VariableSystem ::= name::obeo/psm/vb/projects/VB_1/enumerations/NameEnum ;
obeo/psm/vb/projects/VB_1/expressions/VB_NewExpression ::= type::obeo/psm/vb/projects/VB_1/references/VB_FullTypeRef hasArguments::Boolean (arguments::obeo/psm/vb/projects/VB_1/expressions/VB_Expression)+ hasInitialization::Boolean (initializations::obeo/psm/vb/projects/VB_1/expressions/VB_Expression)+ ;
obeo/psm/vb/projects/VB_1/features/VB_Function ::= isFriend::Boolean hasVisibility::Boolean visibility::obeo/psm/vb/projects/VB_1/enumerations/VisibilityEnum name::String (parameters::obeo/psm/vb/projects/VB_1/features/VB_Parameter)+ return::obeo/psm/vb/projects/VB_1/references/VB_FullTypeRef (statements::obeo/psm/vb/projects/VB_1/statements/VB_Statement)+ ;
obeo/psm/vb/projects/VB_1/statements/VB_Case ::= (values::obeo/psm/vb/projects/VB_1/expressions/VB_Expression)+ hasSeparator::Boolean (statements::obeo/psm/vb/projects/VB_1/statements/VB_Statement)+ ;
obeo/psm/vb/projects/VB_1/core/VB_Option ::= name::String hasEnablement::Boolean enablement::obeo/psm/vb/projects/VB_1/enumerations/EnablementEnum ;
--------------------bibtex::bibtex-1.1.bgf--------------------
Proceedings ::= InProceedings ;
 Proceedings ::= year::String title::String ;
MasterThesis ::= school::String ;
InBook ::= chapter::Integer ;
Misc ::= id::String ;
Author ::= author::String ;
TechReport ::= (authors::Author)+ ;
Book ::= InBook ;
 Book ::= InCollection ;
 Book ::= publisher::String ;
PhDThesis ::= school::String ;
BibTeXFile ::= (entries::BibTeXEntry)+ ;
Manual ::= title::String ;
Article ::= journal::String ;
Unpublished ::= note::String ;
InCollection ::= publisher::String booktitle::String ;
Booklet ::= year::String ;
--------------------bibtex::bibtex-1.2.bgf--------------------
Proceedings ::= editor::String volume::String number::String series::String address::String organization::String publisher::String note::String ;
InBook ::= chapter::String type::String ;
MastersThesis ::= type::String address::String note::String ;
Misc ::= (authors::Author)+ title::String howpublished::String month::String year::String note::String ;
Conference ::= pages::String ;
Author ::= name::String ;
InProceedings ::= Conference ;
 InProceedings ::= pages::String ;
TechReport ::= type::String number::String address::String note::String ;
Book ::= InBook ;
 Book ::= InCollection ;
 Book ::= volume::String number::String series::String address::String edition::String note::String ;
PhdThesis ::= type::String address::String note::String ;
BibtexFile ::= (entries::Entry)+ ;
Manual ::= organization::String address::String edition::String note::String ;
Article ::= volume::String number::String pages::String note::String ;
Unpublished ::= (authors::Author)+ ;
InCollection ::= chapter::String type::String ;
Booklet ::= (authors::Author)+ howpublished::String address::String note::String ;
--------------------bibtex::bibtex-1.bgf--------------------
Howpublished ::= value::String ;
Day ::= value::String ;
Volume ::= value::String ;
Title ::= value::String ;
PhdThesis ::= key::String (fields::Field)+ ;
Booklet ::= key::String (fields::Field)+ ;
AuthorUrls ::= value::String ;
Inbook ::= key::String (fields::Field)+ ;
Chapter ::= value::String ;
Bibtex ::= (entries::Entry)+ ;
Techreport ::= key::String (fields::Field)+ ;
Number ::= value::String ;
Authors ::= value::String ;
Manual ::= key::String (fields::Field)+ ;
Issn ::= value::String ;
Pages ::= value::String ;
Incollection ::= key::String (fields::Field)+ ;
Month ::= value::String ;
Proceedings ::= key::String (fields::Field)+ ;
Doi ::= value::String ;
Edition ::= value::String ;
Year ::= value::String ;
MastersThesis ::= key::String (fields::Field)+ ;
Publisher ::= value::String ;
Type ::= value::String ;
Inproceedings ::= key::String (fields::Field)+ ;
AbstractField ::= value::String ;
Institution ::= value::String ;
Series ::= value::String ;
Journal ::= value::String ;
Isbn ::= value::String ;
Article ::= key::String (fields::Field)+ ;
Address ::= value::String ;
School ::= value::String ;
Organization ::= value::String ;
Note ::= value::String ;
Url ::= value::String ;
BookTitle ::= value::String ;
Text ::= value::String ;
Editor ::= value::String ;
Misc ::= key::String (fields::Field)+ ;
Book ::= key::String (fields::Field)+ ;
--------------------bibtex::bql.bgf--------------------
Field ::= name::String entry::Entry ;
Expression ::= field::String value::String ;
Query ::= (entries::Entry)+ (predicates::Predicate)+ ;
Predicate ::= entry::Entry (expression::Expression)+ ;
Entry ::= name::String type::String allFields::Boolean (fields::Field)+ predicate::Predicate ;
--------------------dot::doux.bgf--------------------
SubGraph ::= type::String rankDir::String dim::Integer (contents::GraphElement)+ label::String color::String z::Integer graph::Graph ;
Graph ::= SubGraph ;
 Graph ::= type::String rankDir::String dim::Integer (contents::GraphElement)+ ;
Constraint ::= val::String (refers::String)+ ;
DirectedArc ::= sourceNode::String sourcePart::String targetNode::String targetPart::String shape::String ;
Node ::= shape::String style::String ;
--------------------dot::palies.bgf--------------------
SubGraph ::= (nodes::Nodelike)+ labelloc::String ;
Graph ::= type::String rankDir::String labeljust::String labelloc::String concentrate::Boolean (nodes::Nodelike)+ boundingBox::String compound::Boolean (layers::Layer)+ nodeSeparation::Double ordering::String size::String ratio::String center::Boolean ;
HorizontalCompartment ::= complexLabel::ComplexLabel compartments::Compartment anchor::Anchor ;
VerticalCompartment ::= complexLabel::ComplexLabel compartments::Compartment anchor::Anchor ;
DirectedArc ::= arrowHead::ArrowShape headlabel::Label taillabel::Label arrowTail::ArrowShape tail_lp::Double head_lp::Double ;
ArrowShape ::= clipping::String isPlain::Boolean size::Integer ;
PolygonNodeShape ::= sides::Integer skew::Integer distortion::Integer isRegular::Boolean orientation::Integer ;
Anchor ::= name::String source::Compartment ;
ComplexLabel ::= (compartments::Compartment)+ ;
MNodeShape ::= toplabel::Label bottomlabel::Label ;
Node ::= fixedSize::Boolean fontname::String fontsize::Integer height::Integer width::Integer shape::NodeShape ;
SimpleLabel ::= content::String ;
UndirectedArc ::= fromNode::Nodelike toNode::Nodelike (layers::Layer)+ constraint::Boolean group::String minlen::Integer sameHead::String sameTail::String lhead::Nodelike ltail::Nodelike decorate::Boolean ;
Layer ::= (nodes::Nodelike)+ (arcs::Arc)+ graph::Graph layerSeparator::String ;
SimpleCompartment ::= content::String ;
--------------------dot::rascal-abstract.bgf--------------------
Dotline ::= graph::DotGraph outline::Outline ;
Stm ::= (N::(id::Id attrs::Attrs)) | (N::(id::Id)) | (N::(nid::NodeId attrs::Attrs)) | (N::(nid::NodeId)) | (E::(from::Id to::Id attrs::Attrs)) | (E::(from::Id to::Id)) | (E::(nfrom::NodeId to::Id attrs::Attrs)) | (E::(nfrom::NodeId to::Id)) | (E::(sfrom::Stm to::Id attrs::Attrs)) | (E::(sfrom::Stm to::Id)) | (E::(from::Id nto::NodeId attrs::Attrs)) | (E::(from::Id nto::NodeId)) | (E::(nfrom::NodeId nto::NodeId attrs::Attrs)) | (E::(nfrom::NodeId nto::NodeId)) | (E::(sfrom::Stm nto::NodeId attrs::Attrs)) | (E::(sfrom::Stm nto::NodeId)) | (E::(from::Id sto::Stm attrs::Attrs)) | (E::(from::Id sto::Stm)) | (E::(nfrom::NodeId sto::Stm attrs::Attrs)) | (E::(nfrom::NodeId sto::Stm)) | (E::(sfrom::Stm sto::Stm attrs::Attrs)) | (E::(sfrom::Stm sto::Stm)) | (S::(id::Id stms::Stms)) | (S::(stms::Stms)) | (A::(prop::Id val::Id)) | (GRAPH::(attrs::Attrs)) | (NODE::(attrs::Attrs)) | (EDGE::(attrs::Attrs)) ;
CompassPt ::= (N::ε) | (NE::ε) | (E::ε) | (SE::ε) | (S::ε) | (SW::ε) | (W::ε) | (NW::ε) | (C::ε) | (_::ε) ;
DotGraph ::= (graph::(id::Id stmts::Stms)) | (digraph::(id::Id stmts::Stms)) ;
Outline ::= (key::integer() args::(string()*))* ;
Attr ::= prop::string() val::Id ;
--------------------html::allilaire.bgf--------------------
OBJECT ::= classid::String id::String data::String type::String standby::String ;
TR ::= valign::String align::String table::TABLE (tds::TD)+ ;
LI ::= liValue::String ;
SELECT ::= multiple::String size::String name::String ;
MAP ::= body::BODY ;
TEXTAREA ::= name::String rows::String cols::String ;
LINK ::= rel::String title::String ahref::String type::String ;
EMBED ::= src::String width::String height::String align::String vspace::String hspace::String border::String ;
TITLE ::= head::HEAD ;
OPTION ::= selected::String optionValue::String ;
TH ::= colspan::String rowspan::String valign::String align::String width::String tr::TR ;
STRIKE ::= body::BODY ;
DIV ::= align::String ;
TD ::= TH ;
 TD ::= colspan::String rowspan::String valign::String align::String width::String tr::TR ;
TABLE ::= border::String width::String cellspacing::String cellpadding::String (trs::TR)+ ;
SUP ::= body::BODY ;
PARAM ::= name::String paramValue::String ;
H4 ::= body::BODY ;
H3 ::= body::BODY ;
HTML ::= head::HEAD body::BODY ;
INPUT ::= align::String maxlength::String size::String checked::String src::String inputValue::String name::String type::String ;
H2 ::= body::BODY ;
H1 ::= body::BODY ;
EM ::= body::BODY ;
SMALL ::= body::BODY ;
IFRAME ::= src::String name::String marginwidth::String marginheight::String scrolling::String noresize::String ;
IMG ::= src::String width::String height::String alt::String align::String vspace::String hspace::String ismap::String usemap::String border::String ;
BODY ::= background::String bgcolor::String text::String link::String alink::String vlink::String (bodyElements::BODYElement)+ html::HTML ;
BIG ::= body::BODY ;
SUB ::= body::BODY ;
HEAD ::= (headElements::HEADElement)+ html::HTML ;
OL ::= start::String ;
APPLET ::= applet::String class::String src::String align::String width::String height::String ;
NOEMBED ::= body::BODY ;
UL ::= type::String ;
STRONG ::= body::BODY ;
FRAMESET ::= rows::String cols::String framespacing::String frameborder::String border::String ;
STYLE ::= body::BODY ;
HTMLElement ::= HEAD ;
 HTMLElement ::= HEADElement ;
 HTMLElement ::= BODY ;
 HTMLElement ::= BODYElement ;
 HTMLElement ::= value::String (children::HTMLElement)+ parent::HTMLElement ;
P ::= body::BODY ;
BR ::= clear::String ;
FONT ::= color::String face::String size::String ;
FRAME ::= IFRAME ;
 FRAME ::= src::String name::String marginwidth::String marginheight::String scrolling::String noresize::String ;
AREA ::= shape::String coords::String ahref::String ;
SPAN ::= style::String ;
I ::= body::BODY ;
FORM ::= action::String method::String ;
PRE ::= body::BODY ;
B ::= body::BODY ;
A ::= ahref::String name::String id::String ;
TT ::= body::BODY ;
--------------------html::clark-basic.bgf--------------------
tr ::= tr::(tr.attlist (th | td)+) ;
li ::= li::(li.attlist Flow.model) ;
id.attrib ::= (id::ID.datatype)? ;
select ::= select::(select.attlist option+) ;
link ::= link::link.attlist ;
profile.attlist ::= (profile::URI.datatype)? ;
CellHAlign.attrib ::= (align::("left" | "center" | "right"))? ;
option ::= option::(Common.attrib (selected::"selected")? (value::string())? string()) ;
pre.attlist ::= Common.attrib (xml:space::"preserve")? ;
address ::= address::(address.attlist Inline.model) ;
th ::= th::(th.attlist Flow.model) ;
label ::= label::(label.attlist Inline.model) ;
q ::= q::(q.attlist Inline.model) ;
samp ::= samp::(samp.attlist Inline.model) ;
p ::= p::(p.attlist Inline.model) ;
td ::= td::(td.attlist Flow.model) ;
kbd ::= kbd::(kbd.attlist Inline.model) ;
code ::= code::(code.attlist Inline.model) ;
XHTML.version.attrib ::= (version::FPI.datatype)? ;
caption ::= caption::(caption.attlist Inline.model) ;
a ::= a::(a.attlist Inline.model) ;
blockquote.attlist ::= Common.attrib (cite::URI.datatype)? ;
head ::= head::(head.attlist head.content) ;
param.attlist ::= id.attrib name::string() (value::string())? (valuetype::("data" | "ref" | "object"))? (type::ContentType.datatype)? ;
ol ::= ol::(ol.attlist li+) ;
title ::= title::(title.attlist string()) ;
cite ::= cite::(cite.attlist Inline.model) ;
meta.attlist ::= I18n.attrib (http-equiv::NMTOKEN.datatype)? (name::NMTOKEN.datatype)? (content::string())? (scheme::string())? ;
base ::= base::base.attlist ;
br ::= br::br.attlist ;
h6 ::= h6::(Heading.attrib Heading.content) ;
table ::= table::(table.attlist caption? tr+) ;
h5 ::= h5::(Heading.attrib Heading.content) ;
select.attlist ::= Common.attrib (name::string())? (size::Number.datatype)? (multiple::"multiple")? ;
h4 ::= h4::(Heading.attrib Heading.content) ;
h3 ::= h3::(Heading.attrib Heading.content) ;
link.attlist ::= Common.attrib (charset::Charset.datatype)? (href::URI.datatype)? (hreflang::LanguageCode.datatype)? (type::ContentType.datatype)? (rel::LinkTypes.datatype)? (rev::LinkTypes.datatype)? (media::MediaDesc.datatype)? ;
h2 ::= h2::(Heading.attrib Heading.content) ;
span ::= span::(span.attlist Inline.model) ;
input ::= input::input.attlist ;
lang.attrib ::= (xml:lang::LanguageCode.datatype)? ;
h1 ::= h1::(Heading.attrib Heading.content) ;
label.attlist ::= Common.attrib (for::IDREF.datatype)? (accesskey::Character.datatype)? ;
form ::= form::(form.attlist Block.class+) ;
acronym ::= acronym::(acronym.attlist Inline.model) ;
img ::= img::img.attlist ;
q.attlist ::= Common.attrib (cite::URI.datatype)? ;
object ::= object::(object.attlist param* Flow.model) ;
textarea ::= textarea::textarea.attlist ;
Cell.attrib ::= Common.attrib (abbr::Text.datatype)? (axis::string())? (headers::IDREFS.datatype)? scope.attrib (rowspan::Number.datatype)? (colspan::Number.datatype)? CellHAlign.attrib CellVAlign.attrib ;
a.attlist ::= Common.attrib (href::URI.datatype)? (charset::Charset.datatype)? (type::ContentType.datatype)? (hreflang::LanguageCode.datatype)? (rel::LinkTypes.datatype)? (rev::LinkTypes.datatype)? (accesskey::Character.datatype)? (tabindex::Number.datatype)? ;
abbr ::= abbr::(abbr.attlist Inline.model) ;
dfn ::= dfn::(dfn.attlist Inline.model) ;
html ::= html::(html.attlist head body) ;
em ::= em::(em.attlist Inline.model) ;
var ::= var::(var.attlist Inline.model) ;
scope.attrib ::= (scope::("row" | "col"))? ;
pre ::= pre::(pre.attlist Inline.model) ;
body ::= body::(body.attlist Block.model) ;
base.attlist ::= href::URI.datatype ;
title.attrib ::= (title::Text.datatype)? ;
table.attlist ::= Common.attrib (summary::Text.datatype)? ;
input.attlist ::= Common.attrib (type::InputType.class)? (name::string())? (value::string())? (checked::"checked")? (size::string())? (maxlength::Number.datatype)? (src::URI.datatype)? (accesskey::Character.datatype)? ;
strong ::= strong::(strong.attlist Inline.model) ;
ul ::= ul::(ul.attlist li+) ;
form.attlist ::= Common.attrib action::URI.datatype (method::("get" | "post"))? (enctype::ContentType.datatype)? ;
img.attlist ::= Common.attrib src::URI.datatype alt::Text.datatype (longdesc::URI.datatype)? (height::Length.datatype)? (width::Length.datatype)? ;
CommonIdRequired.attrib ::= id::ID.datatype class.attrib title.attrib I18n.attrib ;
div ::= div::(div.attlist Flow.model) ;
object.attlist ::= Common.attrib (declare::"declare")? (classid::URI.datatype)? (codebase::URI.datatype)? (data::URI.datatype)? (type::ContentType.datatype)? (codetype::ContentType.datatype)? (archive::URIs.datatype)? (standby::Text.datatype)? (height::Length.datatype)? (width::Length.datatype)? (name::string())? (tabindex::Number.datatype)? ;
dt ::= dt::(dt.attlist Inline.model) ;
blockquote ::= blockquote::(blockquote.attlist Block.model) ;
param ::= param::param.attlist ;
textarea.attlist ::= Common.attrib (name::string())? rows::Number.datatype cols::Number.datatype (accesskey::Character.datatype)? string() ;
dl ::= dl::(dl.attlist (dt | dd)+) ;
CellVAlign.attrib ::= (valign::("top" | "middle" | "bottom"))? ;
meta ::= meta::meta.attlist ;
dd ::= dd::(dd.attlist Flow.model) ;
class.attrib ::= (class::NMTOKENS.datatype)? ;
--------------------html::clark.bgf--------------------
colgroup ::= colgroup::(colgroup.attlist col*) ;
id.attrib ::= (id::ID.datatype)? ;
select ::= select::(select.attlist (option | optgroup)+) ;
 select ::= select::(select.attlist option+) ;
li.noblock ::= li::(li.attlist Inline.model) ;
link ::= link::link.attlist ;
CellHAlign.attrib ::= (align::("left" | "center" | "right" | "justify" | "char"))? (char::Character.datatype)? (charoff::Length.datatype)? ;
 CellHAlign.attrib ::= (align::("left" | "center" | "right"))? ;
address ::= address::(address.attlist Inline.model) ;
label ::= label::(label.attlist Inline.model) ;
ins ::= ins::(ins.attlist Inline.model) ;
kbd ::= kbd::(kbd.attlist Inline.model) ;
code ::= code::(code.attlist Inline.model) ;
XHTML.version.attrib ::= (version::FPI.datatype)? ;
isindex ::= isindex::isindex.attlist ;
caption ::= caption::(caption.attlist Inline.model) ;
tfoot ::= tfoot::(tfoot.attlist tr+) ;
blockquote.attlist ::= Common.attrib (cite::URI.datatype)? ;
head ::= head::(head.attlist head.content) ;
legend.attlist ::= Common.attrib (accesskey::Character.datatype)? ;
 legend.attlist ::= (align::("top" | "bottom" | "left" | "right"))? ;
ol ::= ol::(ol.attlist li+) ;
hr.attlist ::= (align::("left" | "center" | "right"))? (noshade::"noshade")? (size::Pixels.datatype)? (width::Pixels.datatype)? ;
 hr.attlist ::= Common.attrib ;
Core.attrib ::= id.attrib class.attrib title.attrib ;
 Core.attrib ::= (style::string())? ;
meta.attlist ::= I18n.attrib (http-equiv::NMTOKEN.datatype)? (name::NMTOKEN.datatype)? (content::string())? (scheme::string())? ;
frameset ::= frameset::(frameset.attlist (frameset | frame)+ noframes?) ;
 frameset ::= body ;
align.attrib ::= (align::("left" | "all" | "right" | "none"))? ;
base ::= base::base.attlist ;
colgroup.attlist ::= Common.attrib (span::Number.datatype)? (width::MultiLength.datatype)? CellHAlign.attrib CellVAlign.attrib ;
h6 ::= h6::(Heading.attrib Heading.content) ;
table ::= table::(table.attlist caption? (col*) | (colgroup*) (thead? tfoot? tbody+) | (tr+)) ;
 table ::= table::(table.attlist caption? tr+) ;
h5 ::= h5::(Heading.attrib Heading.content) ;
select.attlist ::= (onblur::Script.datatype)? (onchange::Script.datatype)? (onfocus::Script.datatype)? ;
 select.attlist ::= (disabled::"disabled")? (tabindex::Number.datatype)? ;
 select.attlist ::= Common.attrib (name::string())? (size::Number.datatype)? (multiple::"multiple")? ;
h4 ::= h4::(Heading.attrib Heading.content) ;
noscript ::= noscript::(noscript.attlist Block.model) ;
h3 ::= h3::(Heading.attrib Heading.content) ;
link.attlist ::= Common.attrib (charset::Charset.datatype)? (href::URI.datatype)? (hreflang::LanguageCode.datatype)? (type::ContentType.datatype)? (rel::LinkTypes.datatype)? (rev::LinkTypes.datatype)? (media::MediaDesc.datatype)? ;
script ::= script::(script.attlist string()) ;
h2 ::= h2::(Heading.attrib Heading.content) ;
input ::= input::input.attlist ;
lang.attrib ::= (xml:lang::LanguageCode.datatype)? ;
 lang.attrib ::= (lang::LanguageCode.datatype)? ;
h1 ::= h1::(Heading.attrib Heading.content) ;
target.attrib ::= (target::string())? ;
label.attlist ::= (onblur::Script.datatype)? (onfocus::Script.datatype)? ;
 label.attlist ::= Common.attrib (for::IDREF.datatype)? (accesskey::Character.datatype)? ;
form ::= form::(form.attlist Block.class+) ;
acronym ::= acronym::(acronym.attlist Inline.model) ;
img ::= img::img.attlist ;
isindex.attlist ::= Core.attrib I18n.attrib (prompt::Text.datatype)? ;
shape.attrib ::= (shape::("rect" | "circle" | "poly" | "default"))? ;
Cell.attrib ::= (nowrap::"nowrap")? (bgcolor::Color.datatype)? (width::Pixels.datatype)? (height::Pixels.datatype)? ;
 Cell.attrib ::= Common.attrib (abbr::Text.datatype)? (axis::string())? (headers::IDREFS.datatype)? scope.attrib (rowspan::Number.datatype)? (colspan::Number.datatype)? CellHAlign.attrib CellVAlign.attrib ;
strike ::= strike::(strike.attlist Inline.model) ;
style ::= style::(style.attlist string()) ;
ol.attlist ::= (type::string())? (compact::"compact")? (start::string())? ;
 ol.attlist ::= Common.attrib ;
optgroup ::= optgroup::(optgroup.attlist option+) ;
html ::= html::(html.attlist head frameset) ;
 html ::= html::(html.attlist head body) ;
em ::= em::(em.attlist Inline.model) ;
noframes ::= noframes::(noframes.attlist body) ;
frameset.attlist ::= Core.attrib (cols::MultiLength.datatype)? (rows::MultiLength.datatype)? ;
scope.attrib ::= (scope::("row" | "col" | "rowgroup" | "colgroup"))? ;
 scope.attrib ::= (scope::("row" | "col"))? ;
iframe ::= iframe::(iframe.attlist Flow.model) ;
pre ::= pre::(pre.attlist Inline.model) ;
body ::= body::(body.attlist Block.model) ;
base.attlist ::= href::URI.datatype ;
 base.attlist ::= target.attrib ;
rules.attrib ::= (rules::("none" | "groups" | "rows" | "cols" | "all"))? ;
basefont ::= basefont::basefont.attlist ;
table.attlist ::= align.attrib (bgcolor::Color.datatype)? ;
 table.attlist ::= (width::Length.datatype)? (border::Pixels.datatype)? frame.attrib rules.attrib (cellspacing::Length.datatype)? (cellpadding::Length.datatype)? ;
 table.attlist ::= Common.attrib (summary::Text.datatype)? ;
script.attlist ::= (language::ContentType.datatype)? ;
 script.attlist ::= (charset::Charset.datatype)? type::ContentType.datatype (src::URI.datatype)? (defer::"defer")? (xml:space::"preserve")? ;
input.attlist ::= (onblur::Script.datatype)? (onchange::Script.datatype)? (onfocus::Script.datatype)? (onselect::Script.datatype)? ;
 input.attlist ::= (disabled::"disabled")? (readonly::"readonly")? (alt::string())? (tabindex::Number.datatype)? (accept::ContentTypes.datatype)? ;
 input.attlist ::= Common.attrib (type::InputType.class)? (name::string())? (value::string())? (checked::"checked")? (size::string())? (maxlength::Number.datatype)? (src::URI.datatype)? (accesskey::Character.datatype)? ;
 input.attlist ::= align.attrib ;
coords.attrib ::= (coords::string())? ;
strong ::= strong::(strong.attlist Inline.model) ;
ul ::= ul::(ul.attlist li+) ;
form.attlist ::= (onreset::Script.datatype)? (onsubmit::Script.datatype)? ;
 form.attlist ::= (accept-charset::Charsets.datatype)? (accept::ContentTypes.datatype)? ;
 form.attlist ::= Common.attrib action::URI.datatype (method::("get" | "post"))? (enctype::ContentType.datatype)? ;
 form.attlist ::= name.attlist ;
 form.attlist ::= target.attrib ;
img.attlist ::= usemap.attlist ;
 img.attlist ::= Common.attrib src::URI.datatype alt::Text.datatype (longdesc::URI.datatype)? (height::Length.datatype)? (width::Length.datatype)? ;
 img.attlist ::= (align::("top" | "middle" | "bottom" | "left" | "right"))? (border::Pixels.datatype)? (hspace::Pixels.datatype)? (vspace::Pixels.datatype)? ;
 img.attlist ::= name.attlist ;
 img.attlist ::= (ismap::"ismap")? ;
CommonIdRequired.attrib ::= id::ID.datatype class.attrib title.attrib I18n.attrib ;
 CommonIdRequired.attrib ::= Events.attrib ;
div ::= div::(div.attlist Flow.model) ;
dt ::= dt::(dt.attlist Inline.model) ;
param ::= param::param.attlist ;
dir ::= dir::(dir.attlist li.noblock+) ;
area ::= area::area.attlist ;
dl ::= dl::(dl.attlist (dt | dd)+) ;
style.attlist ::= title.attrib I18n.attrib type::ContentType.datatype (media::MediaDesc.datatype)? (xml:space::"preserve")? ;
dd ::= dd::(dd.attlist Flow.model) ;
tt ::= tt::(tt.attlist Inline.model) ;
col ::= col::col.attlist ;
tr ::= tr::(tr.attlist (th | td)+) ;
optgroup.attlist ::= Common.attrib (disabled::"disabled")? label::Text.datatype ;
li ::= li::(li.attlist Flow.model) ;
profile.attlist ::= (profile::URI.datatype)? ;
u ::= u::(u.attlist Inline.model) ;
iframe.attlist ::= Core.attrib (longdesc::URI.datatype)? (src::URI.datatype)? (frameborder::("1" | "0"))? (width::Length.datatype)? (height::Length.datatype)? (marginwidth::Pixels.datatype)? (marginheight::Pixels.datatype)? (scrolling::("yes" | "no" | "auto"))? ;
 iframe.attlist ::= name.attlist ;
option ::= option::(Common.attrib (selected::"selected")? (value::string())? string()) ;
pre.attlist ::= (width::Length.datatype)? ;
 pre.attlist ::= Common.attrib (xml:space::"preserve")? ;
th ::= th::(th.attlist Flow.model) ;
s ::= s::(s.attlist Inline.model) ;
body.attlist ::= (onload::Script.datatype)? (onunload::Script.datatype)? ;
 body.attlist ::= (background::URI.datatype)? (bgcolor::Color.datatype)? (text::Color.datatype)? (link::Color.datatype)? (vlink::Color.datatype)? (alink::Color.datatype)? ;
 body.attlist ::= Common.attrib ;
samp ::= samp::(samp.attlist Inline.model) ;
q ::= q::(q.attlist Inline.model) ;
p ::= p::(p.attlist Inline.model) ;
td ::= td::(td.attlist Flow.model) ;
frame ::= frame::frame.attlist ;
bdo ::= bdo::(bdo.attlist Inline.model) ;
frame.attrib ::= name.attlist ;
 frame.attrib ::= (frame::("void" | "above" | "below" | "hsides" | "lhs" | "rhs" | "vsides" | "box" | "border"))? ;
i ::= i::(i.attlist Inline.model) ;
ul.attlist ::= (type::string())? (compact::"compact")? ;
 ul.attlist ::= Common.attrib ;
b ::= b::(b.attlist Inline.model) ;
a ::= a::(a.attlist Inline.model) ;
menu ::= menu::(menu.attlist li.noblock+) ;
dir.attlist ::= Common.attrib (compact::"compact")? ;
param.attlist ::= id.attrib name::string() (value::string())? (valuetype::("data" | "ref" | "object"))? (type::ContentType.datatype)? ;
area.attlist ::= Common.attrib (href::URI.datatype)? shape.attrib coords.attrib (nohref::"nohref")? alt::Text.datatype (tabindex::Number.datatype)? (accesskey::Character.datatype)? ;
 area.attlist ::= (onblur::Script.datatype)? (onfocus::Script.datatype)? ;
 area.attlist ::= target.attrib ;
name.attlist ::= (name::string())? ;
map ::= map::(map.attlist (Block.class | area)+) ;
applet ::= applet::(applet.attlist param* Flow.model) ;
dl.attlist ::= (compact::"compact")? ;
 dl.attlist ::= Common.attrib ;
title ::= title::(title.attlist string()) ;
cite ::= cite::(cite.attlist Inline.model) ;
center ::= center::(center.attlist Flow.model) ;
thead ::= thead::(thead.attlist tr+) ;
col.attlist ::= Common.attrib (span::Number.datatype)? (width::MultiLength.datatype)? CellHAlign.attrib CellVAlign.attrib ;
br ::= br::br.attlist ;
tr.attlist ::= (bgcolor::Color.datatype)? ;
 tr.attlist ::= Common.attrib CellHAlign.attrib CellVAlign.attrib ;
font ::= font::(font.attlist Inline.model) ;
sup ::= sup::(sup.attlist Inline.model) ;
li.attlist ::= (type::string())? (value::string())? ;
 li.attlist ::= Common.attrib ;
dir.attrib ::= dir::("ltr" | "rtl") ;
span ::= span::(span.attlist Inline.model) ;
option.attlist ::= (disabled::"disabled")? (label::Text.datatype)? ;
usemap.attlist ::= (usemap::IDREF.datatype)? ;
q.attlist ::= Common.attrib (cite::URI.datatype)? ;
sub ::= sub::(sub.attlist Inline.model) ;
object ::= object::(object.attlist param* Flow.model) ;
frame.attlist ::= Core.attrib (longdesc::URI.datatype)? (src::URI.datatype)? (frameborder::("1" | "0"))? (marginwidth::Pixels.datatype)? (marginheight::Pixels.datatype)? (noresize::"noresize")? (scrolling::("yes" | "no" | "auto"))? ;
textarea ::= textarea::textarea.attlist ;
button ::= button::(button.attlist Flow.model) ;
a.attlist ::= shape.attrib coords.attrib ;
 a.attlist ::= (onblur::Script.datatype)? (onfocus::Script.datatype)? ;
 a.attlist ::= Common.attrib (href::URI.datatype)? (charset::Charset.datatype)? (type::ContentType.datatype)? (hreflang::LanguageCode.datatype)? (rel::LinkTypes.datatype)? (rev::LinkTypes.datatype)? (accesskey::Character.datatype)? (tabindex::Number.datatype)? ;
 a.attlist ::= name.attlist ;
 a.attlist ::= target.attrib ;
abbr ::= abbr::(abbr.attlist Inline.model) ;
menu.attlist ::= Common.attrib (compact::"compact")? ;
dfn ::= dfn::(dfn.attlist Inline.model) ;
applet.attlist ::= Core.attrib alt::Text.datatype (archive::string())? (code::string())? (codebase::URI.datatype)? (object::string())? height::Length.datatype width::Length.datatype ;
 applet.attlist ::= (align::("top" | "middle" | "bottom" | "left" | "right"))? (hspace::Pixels.datatype)? (vspace::Pixels.datatype)? ;
 applet.attlist ::= name.attlist ;
Font.attrib ::= (size::string())? (color::Color.datatype)? (face::string())? ;
fieldset ::= fieldset::(fieldset.attlist legend Flow.model) ;
var ::= var::(var.attlist Inline.model) ;
br.attlist ::= (clear::("left" | "all" | "right" | "none"))? ;
 br.attlist ::= Core.attrib ;
title.attrib ::= (title::Text.datatype)? ;
Events.attrib ::= (onclick::Script.datatype)? (ondblclick::Script.datatype)? (onmousedown::Script.datatype)? (onmouseup::Script.datatype)? (onmouseover::Script.datatype)? (onmousemove::Script.datatype)? (onmouseout::Script.datatype)? (onkeypress::Script.datatype)? (onkeydown::Script.datatype)? (onkeyup::Script.datatype)? ;
tbody ::= tbody::(tbody.attlist tr+) ;
object.attlist ::= usemap.attlist ;
 object.attlist ::= (align::("top" | "middle" | "bottom" | "left" | "right"))? (border::Pixels.datatype)? (hspace::Pixels.datatype)? (vspace::Pixels.datatype)? ;
 object.attlist ::= Common.attrib (declare::"declare")? (classid::URI.datatype)? (codebase::URI.datatype)? (data::URI.datatype)? (type::ContentType.datatype)? (codetype::ContentType.datatype)? (archive::URIs.datatype)? (standby::Text.datatype)? (height::Length.datatype)? (width::Length.datatype)? (name::string())? (tabindex::Number.datatype)? ;
blockquote ::= blockquote::(blockquote.attlist Block.model) ;
Edit.attrib ::= (cite::URI.datatype)? (datetime::Datetime.datatype)? ;
legend ::= legend::(legend.attlist Inline.model) ;
del ::= del::(del.attlist Inline.model) ;
textarea.attlist ::= (onblur::Script.datatype)? (onchange::Script.datatype)? (onfocus::Script.datatype)? (onselect::Script.datatype)? ;
 textarea.attlist ::= (disabled::"disabled")? (readonly::"readonly")? (tabindex::Number.datatype)? ;
 textarea.attlist ::= Common.attrib (name::string())? rows::Number.datatype cols::Number.datatype (accesskey::Character.datatype)? string() ;
hr ::= hr::hr.attlist ;
CellVAlign.attrib ::= (valign::("top" | "middle" | "bottom" | "baseline"))? ;
 CellVAlign.attrib ::= (valign::("top" | "middle" | "bottom"))? ;
small ::= small::(small.attlist Inline.model) ;
meta ::= meta::meta.attlist ;
button.attlist ::= (onblur::Script.datatype)? (onfocus::Script.datatype)? ;
 button.attlist ::= Common.attrib (name::string())? (value::string())? (type::("button" | "submit" | "reset"))? (disabled::"disabled")? (tabindex::Number.datatype)? (accesskey::Character.datatype)? ;
big ::= big::(big.attlist Inline.model) ;
class.attrib ::= (class::NMTOKENS.datatype)? ;
--------------------html::guyard.bgf--------------------
Ol ::= (li::Li)+ ;
ColElement ::= (cols::Col)+ (colgroup::Colgroup)+ ;
TFrame ::= (void::ε) | (above::ε) | (below::ε) | (hsides::ε) | (lhs::ε) | (rhs::ε) | (vsides::ε) | (box::ε) | (border::ε) ;
IDREF ::= value::String ;
Cite ::= (citeElements::Inline)+ ;
Tbody ::= (tr::Tr)+ ;
Div ::= (divElements::Flow)+ ;
Base ::= href::URI id::ID ;
TableElement ::= (tbody::Tbody)+ (tr::Tr)+ ;
H6 ::= (h6Elements::Inline)+ ;
Param ::= id::ID name::CDATA value::CDATA valuetype::ValueType type::ContentType ;
H5 ::= (h5Elements::Inline)+ ;
H4 ::= (h4Elements::Inline)+ ;
Noscript ::= block::Block ;
Del ::= (flowelement::Flow)+ cite::URI datetime::Datetime ;
Script ::= id::ID charset::Charset type::ContentType src::URI defer::String xml:space::String ;
H3 ::= (h3Elements::Inline)+ ;
Span ::= (spanElements::Inline)+ ;
H2 ::= (h2Elements::Inline)+ ;
H1 ::= (h1Elements::Inline)+ ;
Small ::= (smallElements::Inline)+ ;
Form ::= (formelement::FormContent)+ action::URI method::FomeMethod enctype::ContentType onsubmit::ScriptExpression onreset::ScriptExpression accept::ContentTypes accept-charset::Charsets ;
Col ::= span::Number width::MultiLength ;
Big ::= (bigElements::Inline)+ ;
Object ::= (objectelement::ObjectElement)+ declare::Boolean classid::URI codebase::URI data::URI type::ContentType codetype::ContentType archive::UriList standby::Text height::Length width::Length usemap::URI name::NMTOKEN tabindex::Number ;
Direction ::= (ltr::ε) | (rtl::ε) ;
IDREFS ::= (idrefs::IDREF)+ ;
Textarea ::= name::CDATA rows::Number cols::Number disabled::Boolean readonly::Boolean onselect::ScriptExpression onchange::ScriptExpression ;
Label ::= (labelelements::Inline)+ for::IDREF accesskey::Character onfocus::ScriptExpression onblur::ScriptExpression ;
Address ::= (addressElements::Inline)+ ;
Button ::= (buttoncontent::ButtonContent)+ name::CDATA value::CDATA type::ButtonType disabled::Boolean ;
CellVAlign ::= (top::ε) | (middle::ε) | (bottom::ε) | (baseline::ε) ;
Abbr ::= (abbrElements::Inline)+ ;
Q ::= (qElements::Inline)+ cite::URI ;
P ::= (pElements::Inline)+ ;
Ins ::= (flowelement::Flow)+ cite::URI datetime::Datetime ;
Kbd ::= (kbdElements::Inline)+ ;
Bdo ::= (bdoElements::Inline)+ lang::LanguageCode xml:lang::LanguageCode dir::Direction ;
Optgroup ::= (options::Option)+ disabled::Boolean label::Text ;
Html ::= i18n::I18n id::ID xmlns::URI head::Head body::Body ;
BaseHeadElement ::= base::Base (headmisc::HeadMisc)+ (titleBaseHeadElement::TitleBaseHeadElement)+ ;
I ::= (iElements::Inline)+ ;
Fieldset ::= (fieldsetelements::FieldsetElement)+ ;
Em ::= (emElements::Inline)+ ;
Charsets ::= charsets::Charset ;
Caption ::= (captionelement::Inline)+ ;
Tfoot ::= (tr::Tr)+ ;
B ::= (bElements::Inline)+ ;
Body ::= (bodyElements::Block)+ onload::ScriptExpression onunload::ScriptExpression html::Html ;
A ::= (acontent::AContent)+ charset::Charset type::ContentType name::NMTOKEN href::URI hreflang::LanguageCode rel::LinkTypes rev::LinkTypes shape::Shape coords::Coords ;
Coords ::= lengths::Length ;
Map ::= mapelement::MapContent id::ID class::CDATA style::StyleSheet title::Text name::NMTOKEN ;
Title ::= i18n::I18n id::ID ;
Strong ::= (strongElements::Inline)+ ;
Ul ::= (li::Li)+ ;
Scope ::= (row::ε) | (col::ε) | (rowgroup::ε) | (colgroup::ε) ;
Thead ::= (tr::Tr)+ ;
Dt ::= (dtElements::Inline)+ ;
Blockquote ::= (blockquoteElements::Block)+ cite::URI ;
Table ::= (caption::Caption)+ colelement::ColElement thead::Thead tfoot::Tfoot tableelement::TableElement summary::Text width::Length border::Pixels frame::TFrame rules::TRules cellspacing::Length cellpadding::Length ;
Sup ::= (supElements::Inline)+ ;
Legend ::= (legendelement::Inline)+ accesskey::Character ;
Area ::= shape::Shape coords::Coords href::URI nohref::Boolean alt::Text ;
ButtonType ::= (button::ε) | (submit::ε) | (reset::ε) ;
ValueType ::= (data::ε) | (ref::ε) | (object::ε) ;
Input ::= type::InputType name::CDATA value::CDATA checked::Boolean disabled::Boolean readonly::Boolean size::CDATA maxlength::Number src::URI alt::CDATA usemap::URI onselect::ScriptExpression onchange::ScriptExpression accept::ContentTypes ;
Dl ::= (dlElements::DlElement)+ ;
Meta ::= i18n::I18n id::ID httpequiv::CDATA name::CDATA content::CDATA scheme::CDATA ;
TitleHeadElement ::= title::Title (headmisc::HeadMisc)+ (baseTitleHeadElement::BaseTitleHeadElement)+ ;
Img ::= src::URI alt::Text longdesc::URI height::Length width::Length usemap::URI ismap::Boolean ;
Acronym ::= (acronymElements::Inline)+ ;
Tt ::= (ttElements::Inline)+ ;
Sub ::= (subElements::Inline)+ ;
Dd ::= (ddElements::Flow)+ ;
ContentTypes ::= contentTypes::ContentType ;
Colgroup ::= (cols::Col)+ span::Number width::MultiLength ;
CellHAlign ::= (left::ε) | (center::ε) | (right::ε) | (justify::ε) | (char::ε) ;
Tr ::= (trelements::TrElement)+ ;
MapContent ::= (mapElements::MapElement)+ ;
Li ::= (liElements::Flow)+ ;
Select ::= (selectelement::SelectElement)+ name::CDATA size::Number multiple::Boolean disabled::Boolean tabindex::Number onfocus::ScriptExpression onblur::ScriptExpression onchange::ScriptExpression ;
ID ::= value::String ;
Link ::= charset::Charset href::URI hreflang::LanguageCode type::ContentType rel::LinkTypes rev::LinkTypes media::MediaDesc ;
Option ::= selected::Boolean disabled::Boolean label::Text optionvalue::CDATA ;
BaseTitleHeadElement ::= base::Base (headmisc::HeadMisc)+ ;
Th ::= (thelement::Flow)+ abbr::Text axis::CDATA headers::IDREFS scope::Scope rowspan::Number colspan::Number ;
TitleBaseHeadElement ::= title::Title (headmisc::HeadMisc)+ ;
Samp ::= (sampElements::Inline)+ ;
Style ::= i18n::I18n id::ID type::ContentType media::MediaDesc title::Text xml:space::String ;
Td ::= (tdelement::Flow)+ abbr::Text axis::CDATA headers::IDREFS scope::Scope rowspan::Number colspan::Number ;
Code ::= (codeElements::Inline)+ ;
Dfn ::= (dfnElements::Inline)+ ;
UriList ::= uris::URI ;
Var ::= (varElements::Inline)+ ;
InputType ::= (text::ε) | (password::ε) | (checkbox::ε) | (radio::ε) | (submit::ε) | (reset::ε) | (file::ε) | (hidden::ε) | (image::ε) | (button::ε) ;
TRules ::= (none::ε) | (groups::ε) | (rows::ε) | (cols::ε) | (all::ε) ;
Pre ::= (preElements::PreContent)+ xml:space::String ;
FomeMethod ::= (get::ε) | (post::ε) ;
Shape ::= (rect::ε) | (circle::ε) | (poly::ε) | (default::ε) ;
Head ::= i18n::I18n id::ID profile::URI (headmisc::HeadMisc)+ headelement::HeadElement html::Html ;
--------------------html::clark-strict.bgf--------------------
colgroup ::= colgroup::(colgroup.attlist col*) ;
tr ::= tr::(tr.attlist (th | td)+) ;
li ::= li::(li.attlist Flow.model) ;
optgroup.attlist ::= Common.attrib (disabled::"disabled")? label::Text.datatype ;
id.attrib ::= (id::ID.datatype)? ;
select ::= select::(select.attlist (option | optgroup)+) ;
 select ::= select::(select.attlist option+) ;
profile.attlist ::= (profile::URI.datatype)? ;
link ::= link::link.attlist ;
CellHAlign.attrib ::= (align::("left" | "center" | "right" | "justify" | "char"))? (char::Character.datatype)? (charoff::Length.datatype)? ;
 CellHAlign.attrib ::= (align::("left" | "center" | "right"))? ;
iframe.attlist ::= Core.attrib (longdesc::URI.datatype)? (src::URI.datatype)? (frameborder::("1" | "0"))? (width::Length.datatype)? (height::Length.datatype)? (marginwidth::Pixels.datatype)? (marginheight::Pixels.datatype)? (scrolling::("yes" | "no" | "auto"))? ;
 iframe.attlist ::= name.attlist ;
option ::= option::(Common.attrib (selected::"selected")? (value::string())? string()) ;
pre.attlist ::= Common.attrib (xml:space::"preserve")? ;
address ::= address::(address.attlist Inline.model) ;
th ::= th::(th.attlist Flow.model) ;
label ::= label::(label.attlist Inline.model) ;
body.attlist ::= (onload::Script.datatype)? (onunload::Script.datatype)? ;
 body.attlist ::= Common.attrib ;
samp ::= samp::(samp.attlist Inline.model) ;
q ::= q::(q.attlist Inline.model) ;
p ::= p::(p.attlist Inline.model) ;
td ::= td::(td.attlist Flow.model) ;
ins ::= ins::(ins.attlist Inline.model) ;
kbd ::= kbd::(kbd.attlist Inline.model) ;
code ::= code::(code.attlist Inline.model) ;
bdo ::= bdo::(bdo.attlist Inline.model) ;
XHTML.version.attrib ::= (version::FPI.datatype)? ;
frame.attrib ::= name.attlist ;
 frame.attrib ::= (frame::("void" | "above" | "below" | "hsides" | "lhs" | "rhs" | "vsides" | "box" | "border"))? ;
i ::= i::(i.attlist Inline.model) ;
caption ::= caption::(caption.attlist Inline.model) ;
tfoot ::= tfoot::(tfoot.attlist tr+) ;
b ::= b::(b.attlist Inline.model) ;
a ::= a::(a.attlist Inline.model) ;
blockquote.attlist ::= Common.attrib (cite::URI.datatype)? ;
head ::= head::(head.attlist head.content) ;
param.attlist ::= id.attrib name::string() (value::string())? (valuetype::("data" | "ref" | "object"))? (type::ContentType.datatype)? ;
legend.attlist ::= Common.attrib (accesskey::Character.datatype)? ;
area.attlist ::= Common.attrib (href::URI.datatype)? shape.attrib coords.attrib (nohref::"nohref")? alt::Text.datatype (tabindex::Number.datatype)? (accesskey::Character.datatype)? ;
 area.attlist ::= (onblur::Script.datatype)? (onfocus::Script.datatype)? ;
 area.attlist ::= target.attrib ;
ol ::= ol::(ol.attlist li+) ;
name.attlist ::= (name::string())? ;
map ::= map::(map.attlist (Block.class | area)+) ;
applet ::= applet::(applet.attlist param* Flow.model) ;
Core.attrib ::= id.attrib class.attrib title.attrib ;
 Core.attrib ::= (style::string())? ;
title ::= title::(title.attlist string()) ;
cite ::= cite::(cite.attlist Inline.model) ;
meta.attlist ::= I18n.attrib (http-equiv::NMTOKEN.datatype)? (name::NMTOKEN.datatype)? (content::string())? (scheme::string())? ;
thead ::= thead::(thead.attlist tr+) ;
col.attlist ::= Common.attrib (span::Number.datatype)? (width::MultiLength.datatype)? CellHAlign.attrib CellVAlign.attrib ;
base ::= base::base.attlist ;
br ::= br::br.attlist ;
colgroup.attlist ::= Common.attrib (span::Number.datatype)? (width::MultiLength.datatype)? CellHAlign.attrib CellVAlign.attrib ;
h6 ::= h6::(Heading.attrib Heading.content) ;
table ::= table::(table.attlist caption? (col*) | (colgroup*) (thead? tfoot? tbody+) | (tr+)) ;
 table ::= table::(table.attlist caption? tr+) ;
sup ::= sup::(sup.attlist Inline.model) ;
h5 ::= h5::(Heading.attrib Heading.content) ;
select.attlist ::= (onblur::Script.datatype)? (onchange::Script.datatype)? (onfocus::Script.datatype)? ;
 select.attlist ::= (disabled::"disabled")? (tabindex::Number.datatype)? ;
 select.attlist ::= Common.attrib (name::string())? (size::Number.datatype)? (multiple::"multiple")? ;
h4 ::= h4::(Heading.attrib Heading.content) ;
noscript ::= noscript::(noscript.attlist Block.model) ;
h3 ::= h3::(Heading.attrib Heading.content) ;
script ::= script::(script.attlist string()) ;
dir.attrib ::= dir::("ltr" | "rtl") ;
link.attlist ::= Common.attrib (charset::Charset.datatype)? (href::URI.datatype)? (hreflang::LanguageCode.datatype)? (type::ContentType.datatype)? (rel::LinkTypes.datatype)? (rev::LinkTypes.datatype)? (media::MediaDesc.datatype)? ;
h2 ::= h2::(Heading.attrib Heading.content) ;
span ::= span::(span.attlist Inline.model) ;
input ::= input::input.attlist ;
lang.attrib ::= (xml:lang::LanguageCode.datatype)? ;
h1 ::= h1::(Heading.attrib Heading.content) ;
target.attrib ::= (target::string())? ;
option.attlist ::= (disabled::"disabled")? (label::Text.datatype)? ;
usemap.attlist ::= (usemap::IDREF.datatype)? ;
label.attlist ::= (onblur::Script.datatype)? (onfocus::Script.datatype)? ;
 label.attlist ::= Common.attrib (for::IDREF.datatype)? (accesskey::Character.datatype)? ;
form ::= form::(form.attlist Block.class+) ;
acronym ::= acronym::(acronym.attlist Inline.model) ;
img ::= img::img.attlist ;
q.attlist ::= Common.attrib (cite::URI.datatype)? ;
sub ::= sub::(sub.attlist Inline.model) ;
object ::= object::(object.attlist param* Flow.model) ;
textarea ::= textarea::textarea.attlist ;
shape.attrib ::= (shape::("rect" | "circle" | "poly" | "default"))? ;
Cell.attrib ::= Common.attrib (abbr::Text.datatype)? (axis::string())? (headers::IDREFS.datatype)? scope.attrib (rowspan::Number.datatype)? (colspan::Number.datatype)? CellHAlign.attrib CellVAlign.attrib ;
button ::= button::(button.attlist Flow.model) ;
a.attlist ::= shape.attrib coords.attrib ;
 a.attlist ::= (onblur::Script.datatype)? (onfocus::Script.datatype)? ;
 a.attlist ::= Common.attrib (href::URI.datatype)? (charset::Charset.datatype)? (type::ContentType.datatype)? (hreflang::LanguageCode.datatype)? (rel::LinkTypes.datatype)? (rev::LinkTypes.datatype)? (accesskey::Character.datatype)? (tabindex::Number.datatype)? ;
 a.attlist ::= name.attlist ;
 a.attlist ::= target.attrib ;
abbr ::= abbr::(abbr.attlist Inline.model) ;
style ::= style::(style.attlist string()) ;
dfn ::= dfn::(dfn.attlist Inline.model) ;
optgroup ::= optgroup::(optgroup.attlist option+) ;
html ::= html::(html.attlist head body) ;
applet.attlist ::= Core.attrib alt::Text.datatype (archive::string())? (code::string())? (codebase::URI.datatype)? (object::string())? height::Length.datatype width::Length.datatype ;
 applet.attlist ::= name.attlist ;
em ::= em::(em.attlist Inline.model) ;
fieldset ::= fieldset::(fieldset.attlist legend Flow.model) ;
var ::= var::(var.attlist Inline.model) ;
scope.attrib ::= (scope::("row" | "col" | "rowgroup" | "colgroup"))? ;
 scope.attrib ::= (scope::("row" | "col"))? ;
iframe ::= iframe::(iframe.attlist Flow.model) ;
pre ::= pre::(pre.attlist Inline.model) ;
body ::= body::(body.attlist Block.model) ;
base.attlist ::= href::URI.datatype ;
 base.attlist ::= target.attrib ;
rules.attrib ::= (rules::("none" | "groups" | "rows" | "cols" | "all"))? ;
title.attrib ::= (title::Text.datatype)? ;
table.attlist ::= (width::Length.datatype)? (border::Pixels.datatype)? frame.attrib rules.attrib (cellspacing::Length.datatype)? (cellpadding::Length.datatype)? ;
 table.attlist ::= Common.attrib (summary::Text.datatype)? ;
Events.attrib ::= (onclick::Script.datatype)? (ondblclick::Script.datatype)? (onmousedown::Script.datatype)? (onmouseup::Script.datatype)? (onmouseover::Script.datatype)? (onmousemove::Script.datatype)? (onmouseout::Script.datatype)? (onkeypress::Script.datatype)? (onkeydown::Script.datatype)? (onkeyup::Script.datatype)? ;
script.attlist ::= (charset::Charset.datatype)? type::ContentType.datatype (src::URI.datatype)? (defer::"defer")? (xml:space::"preserve")? ;
input.attlist ::= (onblur::Script.datatype)? (onchange::Script.datatype)? (onfocus::Script.datatype)? (onselect::Script.datatype)? ;
 input.attlist ::= (disabled::"disabled")? (readonly::"readonly")? (alt::string())? (tabindex::Number.datatype)? (accept::ContentTypes.datatype)? ;
 input.attlist ::= Common.attrib (type::InputType.class)? (name::string())? (value::string())? (checked::"checked")? (size::string())? (maxlength::Number.datatype)? (src::URI.datatype)? (accesskey::Character.datatype)? ;
coords.attrib ::= (coords::string())? ;
strong ::= strong::(strong.attlist Inline.model) ;
ul ::= ul::(ul.attlist li+) ;
tbody ::= tbody::(tbody.attlist tr+) ;
form.attlist ::= (onreset::Script.datatype)? (onsubmit::Script.datatype)? ;
 form.attlist ::= (accept-charset::Charsets.datatype)? (accept::ContentTypes.datatype)? ;
 form.attlist ::= Common.attrib action::URI.datatype (method::("get" | "post"))? (enctype::ContentType.datatype)? ;
 form.attlist ::= name.attlist ;
 form.attlist ::= target.attrib ;
img.attlist ::= usemap.attlist ;
 img.attlist ::= Common.attrib src::URI.datatype alt::Text.datatype (longdesc::URI.datatype)? (height::Length.datatype)? (width::Length.datatype)? ;
 img.attlist ::= name.attlist ;
 img.attlist ::= (ismap::"ismap")? ;
CommonIdRequired.attrib ::= id::ID.datatype class.attrib title.attrib I18n.attrib ;
 CommonIdRequired.attrib ::= Events.attrib ;
div ::= div::(div.attlist Flow.model) ;
dt ::= dt::(dt.attlist Inline.model) ;
object.attlist ::= usemap.attlist ;
 object.attlist ::= Common.attrib (declare::"declare")? (classid::URI.datatype)? (codebase::URI.datatype)? (data::URI.datatype)? (type::ContentType.datatype)? (codetype::ContentType.datatype)? (archive::URIs.datatype)? (standby::Text.datatype)? (height::Length.datatype)? (width::Length.datatype)? (name::string())? (tabindex::Number.datatype)? ;
blockquote ::= blockquote::(blockquote.attlist Block.model) ;
Edit.attrib ::= (cite::URI.datatype)? (datetime::Datetime.datatype)? ;
legend ::= legend::(legend.attlist Inline.model) ;
param ::= param::param.attlist ;
area ::= area::area.attlist ;
del ::= del::(del.attlist Inline.model) ;
textarea.attlist ::= (onblur::Script.datatype)? (onchange::Script.datatype)? (onfocus::Script.datatype)? (onselect::Script.datatype)? ;
 textarea.attlist ::= (disabled::"disabled")? (readonly::"readonly")? (tabindex::Number.datatype)? ;
 textarea.attlist ::= Common.attrib (name::string())? rows::Number.datatype cols::Number.datatype (accesskey::Character.datatype)? string() ;
hr ::= hr::hr.attlist ;
dl ::= dl::(dl.attlist (dt | dd)+) ;
CellVAlign.attrib ::= (valign::("top" | "middle" | "bottom" | "baseline"))? ;
 CellVAlign.attrib ::= (valign::("top" | "middle" | "bottom"))? ;
small ::= small::(small.attlist Inline.model) ;
meta ::= meta::meta.attlist ;
button.attlist ::= (onblur::Script.datatype)? (onfocus::Script.datatype)? ;
 button.attlist ::= Common.attrib (name::string())? (value::string())? (type::("button" | "submit" | "reset"))? (disabled::"disabled")? (tabindex::Number.datatype)? (accesskey::Character.datatype)? ;
style.attlist ::= title.attrib I18n.attrib type::ContentType.datatype (media::MediaDesc.datatype)? (xml:space::"preserve")? ;
col ::= col::col.attlist ;
tt ::= tt::(tt.attlist Inline.model) ;
big ::= big::(big.attlist Inline.model) ;
dd ::= dd::(dd.attlist Flow.model) ;
class.attrib ::= (class::NMTOKENS.datatype)? ;
--------------------occam::mu-srour.bgf--------------------
Replicator ::= name::String base::Base count::Count ;
NormalConditional ::= choice::Choice ;
BooleanGuard ::= boolean::BooleanRef ;
Alternation ::= alternative::Alternative ;
LiteralOperand ::= integer::Integer ;
ValDeclaration ::= name::String expression::Expression ;
DyadicOperator ::= plus::Boolean minus::Boolean star::Boolean slash::Boolean or::Boolean inverseSlash::Boolean and::Boolean eq::Boolean ne::Boolean lt::Boolean gt::Boolean le::Boolean ge::Boolean ;
ProcedureBody ::= name::String process::Process ;
Instance ::= name::String ;
Definition ::= name::String procedureBody::ProcedureBody ;
ExpressionOperand ::= operand::Operand ;
Base ::= expression::Expression ;
Count ::= expression::Expression ;
Actual ::= element::Element ;
NormalParallel ::= process::Process ;
MonadicOperator ::= minus::Boolean not::Boolean ;
VariableOPerand ::= element::Element ;
Assignment ::= variable::Variable expression::Expression ;
IntDeclaration ::= name::String expression::Expression ;
Subscript ::= expression::Expression ;
BooleanRef ::= expression::Expression ;
DyadicExpression ::= operandRight::Operand dyadicOperator::DyadicOperator ;
Input ::= channel::Channel variable::Variable ;
NormalSequence ::= process::Process ;
ReplicatorParallel ::= replicator::Replicator ;
Channel ::= element::Element ;
PrimitiveType ::= isInt::Boolean isChan::Boolean ;
MonadicExpression ::= monadicOperator::MonadicOperator ;
Output ::= channel::Channel expression::Expression ;
ReplicatorSequence ::= replicator::Replicator ;
ReplicatorAlternation ::= replicator::Replicator ;
Variable ::= VariableOPerand ;
 Variable ::= element::Element ;
Element ::= name::String subscript::Subscript ;
InputGuard ::= input::Input ;
Type ::= primitiveType::PrimitiveType expression::Expression ;
NormalAlternation ::= process::Process ;
Formal ::= name::String primitiveType::PrimitiveType ;
Literal ::= LiteralOperand ;
 Literal ::= integer::Integer ;
Alternative ::= guard::Guard process::Process ;
SimpleExpression ::= operand::Operand ;
ReplicatorConditional ::= replicator::Replicator ;
Loop ::= boolean::BooleanRef process::Process ;
Choice ::= boolean::BooleanRef process::Process ;
TypeDeclaration ::= type::Type ;
--------------------occam::srour.bgf--------------------
Sequential ::= process::Process (actions::Action)+ (buckels::Buckel)+ (childrens::Constructor)+ ;
If ::= (conditions::Condition)+ (actions::Action)+ ;
File ::= name::String ;
Library ::= name::String ;
Condition ::= elementRight::String elementLeft::String typeCondition::String if::If while::While ;
Declaration ::= name::String process::Process (elements::DataType)+ ;
Constructor ::= Sequential ;
 Constructor ::= Parallel ;
 Constructor ::= Alternative ;
 Constructor ::= process::Process (actions::Action)+ (buckels::Buckel)+ (childrens::Constructor)+ ;
OCCAM_Element ::= Process ;
 OCCAM_Element ::= Action ;
 OCCAM_Element ::= Constructor ;
 OCCAM_Element ::= DataType ;
 OCCAM_Element ::= name::String ;
Action ::= Assignment ;
 Action ::= Input ;
 Action ::= Output ;
 Action ::= constructor::Constructor while::While if::If ;
While ::= (conditions::Condition)+ (actions::Action)+ ;
Process ::= declaration::Declaration (constructors::Constructor)+ (parameters::DataType)+ (libraries::Library)+ toChannel::Channel ;
Alternative ::= process::Process (actions::Action)+ (buckels::Buckel)+ (childrens::Constructor)+ ;
Assignment ::= constructor::Constructor while::While if::If ;
Input ::= constructor::Constructor while::While if::If ;
Parallel ::= process::Process (actions::Action)+ (buckels::Buckel)+ (childrens::Constructor)+ ;
DataType ::= dataType::String ;
Server ::= name::String toChannel::Channel ;
Channel ::= name::String type::String toServer::Server toProcess::Process ;
Buckel ::= If ;
 Buckel ::= While ;
 Buckel ::= constructor::Constructor ;
Output ::= constructor::Constructor while::While if::If ;
OCCAM_Program ::= (occam_Elements::OCCAM_Element)+ (files::File)+ ;
--------------------odf::opendoc-1.0-manifest.bgf--------------------
algorithm ::= manifest:algorithm::algorithm-attlist ;
manifest ::= manifest:manifest::(file-entry+) ;
key-derivation-attlist ::= manifest:key-derivation-name::string() ;
 key-derivation-attlist ::= manifest:salt::string() ;
 key-derivation-attlist ::= manifest:iteration-count::integer() ;
encryption-data-attlist ::= manifest:checksum-type::string() ;
 encryption-data-attlist ::= manifest:checksum::string() ;
key-derivation ::= manifest:key-derivation::key-derivation-attlist ;
encryption-data ::= manifest:encryption-data::(encryption-data-attlist algorithm key-derivation) ;
file-entry-attlist ::= manifest:full-path::string() ;
 file-entry-attlist ::= (manifest:size::integer())? ;
 file-entry-attlist ::= manifest:media-type::string() ;
algorithm-attlist ::= manifest:algorithm-name::string() ;
 algorithm-attlist ::= manifest:initialisation-vector::string() ;
file-entry ::= manifest:file-entry::(file-entry-attlist encryption-data?) ;
--------------------odf::opendoc-1.0-strict.bgf--------------------
style-font-face ::= style:font-face::(style-font-face-attlist svg-font-face-src? svg-definition-src?) ;
svg-linearGradient ::= svg:linearGradient::(common-svg-gradient-attlist (svg:x1::(coordinate | percent))? (svg:y1::(coordinate | percent))? (svg:x2::(coordinate | percent))? (svg:y2::(coordinate | percent))? svg-stop*) ;
style-page-layout-attlist ::= style:name::styleName ;
 style-page-layout-attlist ::= (style:page-usage::("all" | "left" | "right" | "mirrored"))? ;
number-seconds ::= number:seconds::number-seconds-attlist ;
number-currency-style ::= number:currency-style::(common-data-style-attlist common-auto-reorder-attlist style-text-properties? number-text? ((number-and-text currency-symbol-and-text?) | (currency-symbol-and-text number-and-text?))? style-map*) ;
number-fraction-attlist ::= (number:min-numerator-digits::integer)? ;
 number-fraction-attlist ::= (number:min-denominator-digits::integer)? ;
 number-fraction-attlist ::= (number:denominator-value::integer)? ;
table-covered-table-cell ::= table:covered-table-cell::(table-table-cell-attlist table-table-cell-content) ;
text-notes-configuration-content ::= text-note-class ;
 text-notes-configuration-content ::= (text:citation-style-name::styleNameRef)? ;
 text-notes-configuration-content ::= (text:citation-body-style-name::styleNameRef)? ;
 text-notes-configuration-content ::= (text:default-style-name::styleNameRef)? ;
 text-notes-configuration-content ::= (text:master-page-name::styleNameRef)? ;
 text-notes-configuration-content ::= (text:start-value::nonNegativeInteger)? ;
 text-notes-configuration-content ::= common-num-format-prefix-suffix-attlist common-num-format-attlist? ;
 text-notes-configuration-content ::= (text:start-numbering-at::("document" | "chapter" | "page"))? ;
 text-notes-configuration-content ::= (text:footnotes-position::("text" | "page" | "section" | "document"))? ;
 text-notes-configuration-content ::= (text:note-continuation-notice-forward::string())? ;
 text-notes-configuration-content ::= (text:note-continuation-notice-backward::string())? ;
draw-applet-attlist ::= (draw:code::string())? ;
 draw-applet-attlist ::= (draw:object::string())? ;
 draw-applet-attlist ::= (draw:archive::string())? ;
 draw-applet-attlist ::= (draw:may-script::boolean)? ;
number-scientific-number ::= number:scientific-number::(number-scientific-number-attlist common-decimal-places-attlist common-number-attlist) ;
presentation-hide-shape ::= presentation:hide-shape::(common-presentation-effect-attlist presentation-sound?) ;
text-number ::= text:number::string ;
common-title-attlist ::= (form:title::string())? ;
draw-object ::= draw:object::(draw-object-attlist common-draw-data-attlist | office-document | math-math) ;
table-sort-by ::= table:sort-by::table-sort-by-attlist ;
table-data-pilot-table-attlist ::= table:name::string ;
 table-data-pilot-table-attlist ::= (table:application-data::string)? ;
 table-data-pilot-table-attlist ::= (table:grand-total::("none" | "row" | "column" | "both"))? ;
 table-data-pilot-table-attlist ::= (table:ignore-empty-rows::boolean)? ;
 table-data-pilot-table-attlist ::= (table:identify-categories::boolean)? ;
 table-data-pilot-table-attlist ::= table:target-range-address::cellRangeAddress ;
 table-data-pilot-table-attlist ::= (table:buttons::cellRangeAddressList)? ;
 table-data-pilot-table-attlist ::= (table:show-filter-button::boolean)? ;
 table-data-pilot-table-attlist ::= (table:drill-down-on-double-click::boolean)? ;
presentation-hide-text ::= presentation:hide-text::(common-presentation-effect-attlist presentation-sound?) ;
style-tab-stop-char-attlist ::= style:char::character ;
table-deletion-attlist ::= table:type::("row" | "column" | "table") ;
 table-deletion-attlist ::= table:position::integer ;
 table-deletion-attlist ::= (table:table::integer)? ;
 table-deletion-attlist ::= (table:multi-deletion-spanned::integer)? ;
number-text-content ::= number:text-content::ε ;
draw-plugin ::= draw:plugin::(draw-plugin-attlist common-draw-data-attlist draw-param*) ;
table-database-source-query-attlist ::= table:database-name::string ;
 table-database-source-query-attlist ::= table:query-name::string ;
draw-area-rectangle ::= draw:area-rectangle::(common-draw-area-attlist svg:x::coordinate svg:y::coordinate svg:width::length svg:height::length svg-desc? office-event-listeners?) ;
table-table-rows ::= table:table-rows::(table-table-row+) ;
style-tab-stop ::= style:tab-stop::style-tab-stop-attlist ;
number-date-style ::= number:date-style::(common-data-style-attlist common-auto-reorder-attlist common-format-source-attlist style-text-properties? number-text? (any-date number-text?)+ style-map*) ;
draw-marker-attlist ::= draw:name::styleName ;
 draw-marker-attlist ::= (draw:display-name::string)? ;
chart-grid ::= chart:grid::chart-grid-attlist ;
table-table-cell-attlist-extra ::= (table:number-columns-spanned::positiveInteger)? (table:number-rows-spanned::positiveInteger)? ;
 table-table-cell-attlist-extra ::= (table:number-matrix-columns-spanned::positiveInteger)? (table:number-matrix-rows-spanned::positiveInteger)? ;
common-text-spreadsheet-shape-attlist ::= (table:end-cell-address::cellAddress)? (table:end-x::coordinate)? (table:end-y::coordinate)? ;
 common-text-spreadsheet-shape-attlist ::= (table:table-background::boolean)? ;
 common-text-spreadsheet-shape-attlist ::= common-text-anchor-attlist ;
common-draw-text-style-name-attlist ::= (draw:text-style-name::styleNameRef)? ;
table-shapes ::= table:shapes::(shape+) ;
text-p ::= text:p::(paragraph-attrs paragraph-content*) ;
common-style-header-footer-attlist ::= (style:display::boolean)? ;
draw-line-attlist ::= svg:x1::coordinate svg:y1::coordinate ;
 draw-line-attlist ::= svg:x2::coordinate svg:y2::coordinate ;
table-movement ::= table:movement::(common-table-change-attlist table-source-range-address table-target-range-address office-change-info table-dependencies? table-deletions?) ;
script-event-listener ::= script:event-listener::script-event-listener-attlist ;
style-tab-stop-attlist ::= style:position::nonNegativeLength ;
 style-tab-stop-attlist ::= ((style:type::("left" | "center" | "right"))?) | (style:type::"char" style-tab-stop-char-attlist) ;
 style-tab-stop-attlist ::= (style:leader-type::lineType)? ;
 style-tab-stop-attlist ::= (style:leader-style::lineStyle)? ;
 style-tab-stop-attlist ::= (style:leader-width::lineWidth)? ;
 style-tab-stop-attlist ::= (style:leader-color::("font-color" | color))? ;
 style-tab-stop-attlist ::= (style:leader-text::string)? ;
 style-tab-stop-attlist ::= (style:leader-text-style::styleNameRef)? ;
text-h ::= text:h::(heading-attrs paragraph-attrs text-number? paragraph-content*) ;
text-outline-style ::= text:outline-style::(text-outline-level-style+) ;
draw-control-attlist ::= draw:control::IDREF ;
table-table-column-attlist ::= (table:number-columns-repeated::positiveInteger)? ;
 table-table-column-attlist ::= (table:style-name::styleNameRef)? ;
 table-table-column-attlist ::= (table:visibility::table-visibility-value)? ;
 table-table-column-attlist ::= (table:default-cell-style-name::styleNameRef)? ;
text-placeholder-attlist ::= text:placeholder-type::("text" | "table" | "text-box" | "image" | "object") ;
 text-placeholder-attlist ::= common-field-description-attlist ;
office-document-settings ::= office:document-settings::(office-document-common-attrs office-settings) ;
draw-handle-attlist ::= (draw:handle-mirror-vertical::boolean)? ;
 draw-handle-attlist ::= (draw:handle-mirror-horizontal::boolean)? ;
 draw-handle-attlist ::= (draw:handle-switched::boolean)? ;
 draw-handle-attlist ::= draw:handle-position::string ;
 draw-handle-attlist ::= (draw:handle-range-x-minimum::string)? ;
 draw-handle-attlist ::= (draw:handle-range-x-maximum::string)? ;
 draw-handle-attlist ::= (draw:handle-range-y-minimum::string)? ;
 draw-handle-attlist ::= (draw:handle-range-y-maximum::string)? ;
 draw-handle-attlist ::= (draw:handle-polar::string)? ;
 draw-handle-attlist ::= (draw:handle-radius-range-minimum::string)? ;
 draw-handle-attlist ::= (draw:handle-radius-range-maximum::string)? ;
presentation-show-attlist ::= presentation:name::string ;
 presentation-show-attlist ::= presentation:pages::string() ;
style-columns ::= (style:columns::(style-columns-attlist style-column-sep? style-column*))? ;
table-calculation-setting-attlist ::= (table:case-sensitive::boolean)? ;
 table-calculation-setting-attlist ::= (table:precision-as-shown::boolean)? ;
 table-calculation-setting-attlist ::= (table:search-criteria-must-apply-to-whole-cell::boolean)? ;
 table-calculation-setting-attlist ::= (table:automatic-find-labels::boolean)? ;
 table-calculation-setting-attlist ::= (table:use-regular-expressions::boolean)? ;
 table-calculation-setting-attlist ::= (table:null-year::positiveInteger)? ;
table-subtotal-rules-attlist ::= (table:bind-styles-to-content::boolean)? ;
 table-subtotal-rules-attlist ::= (table:case-sensitive::boolean)? ;
 table-subtotal-rules-attlist ::= (table:page-breaks-on-group-change::boolean)? ;
number-am-pm ::= number:am-pm::ε ;
number-time-style ::= number:time-style::(number-time-style-attlist common-data-style-attlist common-format-source-attlist style-text-properties? number-text? (any-time number-text?)+ style-map*) ;
text-dde-connection-decl ::= text:dde-connection-decl::(text-dde-connection-decl-attlist common-dde-connection-decl-attlist) ;
style-table-column-properties ::= style:table-column-properties::style-table-column-properties-content ;
chart-stock-range-line ::= chart:stock-range-line::common-stock-marker-attlist ;
chart-title ::= chart:title::(chart-title-attlist text-p?) ;
common-anim-attlist ::= (presentation:node-type::("default" | "on-click" | "with-previous" | "after-previous" | "timing-root" | "main-sequence" | "interactive-sequence"))? ;
 common-anim-attlist ::= (presentation:preset-id::string)? ;
 common-anim-attlist ::= (presentation:preset-sub-type::string)? ;
 common-anim-attlist ::= (presentation:preset-class::("custom" | "entrance" | "exit" | "emphasis" | "motion-path" | "ole-action" | "media-call"))? ;
 common-anim-attlist ::= (presentation:master-element::IDREF)? ;
 common-anim-attlist ::= (presentation:group-id::string)? ;
 common-anim-attlist ::= (anim:id::ID)? ;
common-tab-attlist ::= (form:tab-index::nonNegativeInteger)? ;
 common-tab-attlist ::= (form:tab-stop::boolean)? ;
config-config-item-attlist ::= config:name::string ;
 config-config-item-attlist ::= config:type::("boolean" | "short" | "int" | "long" | "double" | "string" | "datetime" | "base64Binary") ;
draw-frame ::= draw:frame::(common-draw-shape-with-text-and-styles-attlist common-draw-position-attlist common-draw-rel-size-attlist presentation-shape-attlist draw-frame-attlist (draw-text-box | draw-image | draw-object | draw-object-ole | draw-applet | draw-floating-frame | draw-plugin)* office-event-listeners? draw-glue-point* draw-image-map? svg-desc? (draw-contour-polygon | draw-contour-path)?) ;
table-iteration ::= table:iteration::((table:status::("enable" | "disable"))? (table:steps::positiveInteger)? (table:maximum-difference::double)?) ;
text-user-index-source ::= text:user-index-source::(text-user-index-source-attr text-index-title-template? text-user-index-entry-template* text-index-source-styles*) ;
text-index-entry-chapter ::= text:index-entry-chapter::((text:style-name::styleNameRef)? text-index-entry-chapter-attrs) ;
table-data-pilot-subtotals ::= table:data-pilot-subtotals::(table-data-pilot-subtotal*) ;
style-page-layout-properties ::= style:page-layout-properties::style-page-layout-properties-content ;
form-connection-resource ::= form:connection-resource::(xlink:href::anyURI) ;
draw-text-box ::= draw:text-box::(draw-text-box-attlist text-content*) ;
draw-image ::= draw:image::(draw-image-attlist common-draw-data-attlist | office-binary-data draw-text) ;
table-data-pilot-field-reference-attlist ::= table:field-name::string ;
 table-data-pilot-field-reference-attlist ::= (table:member-type::"named" table:member-name::string) | (table:member-type::("previous" | "next")) ;
 table-data-pilot-field-reference-attlist ::= table:type::("none" | "member-difference" | "member-percentage" | "member-percentage-difference" | "running-total" | "row-percentage" | "column-percentage" | "total-percentage" | "index") ;
common-break-attlist ::= (fo:break-before::("auto" | "column" | "page"))? (fo:break-after::("auto" | "column" | "page"))? ;
table-data-pilot-groups ::= table:data-pilot-groups::(table-data-pilot-groups-attlist table-data-pilot-group+) ;
chart-error-indicator-attlist ::= (chart:style-name::styleNameRef)? ;
number-hours ::= number:hours::number-hours-attlist ;
table-table-source-attlist ::= (table:mode::("copy-all" | "copy-results-only"))? ;
 table-table-source-attlist ::= (table:table-name::string)? ;
draw-layer ::= draw:layer::draw-layer-attlist ;
common-text-align ::= (fo:text-align::("start" | "end" | "left" | "right" | "center" | "justify"))? ;
style-style-attlist ::= style:name::styleName ;
 style-style-attlist ::= (style:display-name::string)? ;
 style-style-attlist ::= (style:parent-style-name::styleNameRef)? ;
 style-style-attlist ::= (style:next-style-name::styleNameRef)? ;
 style-style-attlist ::= (style:list-style-name::(styleName | ε))? ;
 style-style-attlist ::= (style:master-page-name::styleNameRef)? ;
 style-style-attlist ::= (style:auto-update::boolean)? ;
 style-style-attlist ::= (style:data-style-name::styleNameRef)? ;
 style-style-attlist ::= (style:class::string)? ;
 style-style-attlist ::= (style:default-outline-level::positiveInteger)? ;
draw-image-attlist ::= (draw:filter-name::string)? ;
paragraph-attrs ::= (text:style-name::styleNameRef)? (text:class-names::styleNameRefs)? (text:cond-style-name::styleNameRef)? ;
 paragraph-attrs ::= text-id? ;
form-fixed-text-attlist ::= form-control-attlist for common-disabled-attlist label common-printable-attlist common-title-attlist ;
 form-fixed-text-attlist ::= (form:multi-line::boolean)? ;
draw-floating-frame-attlist ::= (draw:frame-name::string)? ;
presentation-decl ::= presentation:header-decl::(presentation-header-decl-attlist string()) ;
 presentation-decl ::= presentation:footer-decl::(presentation-footer-decl-attlist string()) ;
 presentation-decl ::= presentation:date-time-decl::(presentation-date-time-decl-attlist string()) ;
common-draw-size-attlist ::= (svg:width::length)? (svg:height::length)? ;
text-changed-region-content ::= text:insertion::office-change-info ;
 text-changed-region-content ::= text:deletion::(office-change-info text-content*) ;
 text-changed-region-content ::= text:format-change::office-change-info ;
table-table-template ::= table:table-template::(table-table-template-attlist table-first-row? table-last-row? table-first-column? table-last-column? table-body | (table-even-rows table-odd-rows) | (table-even-columns table-odd-columns)) ;
dr3d-extrude ::= dr3d:extrude::(common-draw-path-data-attlist common-draw-viewbox-attlist common-draw-id-attlist common-draw-z-index-attlist common-draw-layer-name-attlist common-draw-style-name-attlist common-dr3d-transform-attlist) ;
form-password-attlist ::= form-control-attlist common-disabled-attlist common-maxlength-attlist common-printable-attlist common-tab-attlist common-title-attlist common-value-attlist common-convert-empty-attlist ;
 form-password-attlist ::= (form:echo-char::character)? ;
common-style-direction-attlist ::= (style:direction::("ltr" | "ttb"))? ;
draw-regular-polygon-attlist ::= (draw:concave::"false") | (draw:concave::"true" draw-regular-polygon-sharpness-attlist) ;
 draw-regular-polygon-attlist ::= draw:corners::positiveInteger ;
text-sequence-ref-name ::= (text:ref-name::string)? ;
table-insertion ::= table:insertion::(table-insertion-attlist common-table-change-attlist office-change-info table-dependencies? table-deletions?) ;
table-label-ranges ::= table:label-ranges::(table-label-range*) ;
table-even-rows ::= table:even-rows::common-table-template-attlist ;
chart-categories ::= chart:categories::((table:cell-range-address::cellRangeAddress)?) ;
draw-page-attlist ::= (draw:name::string)? ;
 draw-page-attlist ::= (draw:style-name::styleNameRef)? ;
 draw-page-attlist ::= draw:master-page-name::styleNameRef ;
 draw-page-attlist ::= (presentation:presentation-page-layout-name::styleNameRef)? ;
 draw-page-attlist ::= (draw:id::ID)? ;
table-database-ranges ::= table:database-ranges::(table-database-range*) ;
style-drawing-page-properties ::= style:drawing-page-properties::style-drawing-page-properties-content ;
config-config-item-map-indexed ::= config:config-item-map-indexed::(config-config-item-map-indexed-attlist config-config-item-map-entry+) ;
style-table-cell-properties ::= style:table-cell-properties::style-table-cell-properties-content ;
table-table-cell ::= table:table-cell::(table-table-cell-attlist table-table-cell-attlist-extra table-table-cell-content) ;
table-consolidation-attlist ::= table:function::("auto" | "average" | "count" | "countnums" | "max" | "min" | "product" | "stdev" | "stdevp" | "sum" | "var" | "varp" | string) ;
 table-consolidation-attlist ::= table:source-cell-range-addresses::cellRangeAddressList ;
 table-consolidation-attlist ::= table:target-cell-address::cellAddress ;
 table-consolidation-attlist ::= (table:use-labels::("none" | "row" | "column" | "both"))? ;
 table-consolidation-attlist ::= (table:link-to-source-data::boolean)? ;
style-tab-stops ::= (style:tab-stops::(style-tab-stop*))? ;
style-data-style-attlist ::= (style:display-name::string)? ;
dr3d-light-attlist ::= (dr3d:diffuse-color::color)? ;
 dr3d-light-attlist ::= dr3d:direction::vector3D ;
 dr3d-light-attlist ::= (dr3d:enabled::boolean)? ;
 dr3d-light-attlist ::= (dr3d:specular::boolean)? ;
style-drawing-page-properties-attlist ::= (presentation:transition-type::("manual" | "automatic" | "semi-automatic"))? ;
 style-drawing-page-properties-attlist ::= (presentation:transition-style::("none" | "fade-from-left" | "fade-from-top" | "fade-from-right" | "fade-from-bottom" | "fade-from-upperleft" | "fade-from-upperright" | "fade-from-lowerleft" | "fade-from-lowerright" | "move-from-left" | "move-from-top" | "move-from-right" | "move-from-bottom" | "move-from-upperleft" | "move-from-upperright" | "move-from-lowerleft" | "move-from-lowerright" | "uncover-to-left" | "uncover-to-top" | "uncover-to-right" | "uncover-to-bottom" | "uncover-to-upperleft" | "uncover-to-upperright" | "uncover-to-lowerleft" | "uncover-to-lowerright" | "fade-to-center" | "fade-from-center" | "vertical-stripes" | "horizontal-stripes" | "clockwise" | "counterclockwise" | "open-vertical" | "open-horizontal" | "close-vertical" | "close-horizontal" | "wavyline-from-left" | "wavyline-from-top" | "wavyline-from-right" | "wavyline-from-bottom" | "spiralin-left" | "spiralin-right" | "spiralout-left" | "spiralout-right" | "roll-from-top" | "roll-from-left" | "roll-from-right" | "roll-from-bottom" | "stretch-from-left" | "stretch-from-top" | "stretch-from-right" | "stretch-from-bottom" | "vertical-lines" | "horizontal-lines" | "dissolve" | "random" | "vertical-checkerboard" | "horizontal-checkerboard" | "interlocking-horizontal-left" | "interlocking-horizontal-right" | "interlocking-vertical-top" | "interlocking-vertical-bottom" | "fly-away" | "open" | "close" | "melt"))? ;
 style-drawing-page-properties-attlist ::= (presentation:transition-speed::presentationSpeeds)? ;
 style-drawing-page-properties-attlist ::= (smil:subtype::string)? ;
 style-drawing-page-properties-attlist ::= (smil:direction::("forward" | "reverse"))? ;
 style-drawing-page-properties-attlist ::= (smil:fadeColor::("forward" | "reverse"))? ;
 style-drawing-page-properties-attlist ::= (presentation:duration::duration)? ;
 style-drawing-page-properties-attlist ::= (presentation:visibility::("visible" | "hidden"))? ;
 style-drawing-page-properties-attlist ::= (draw:background-size::("full" | "border"))? ;
 style-drawing-page-properties-attlist ::= (presentation:background-objects-visible::boolean)? ;
 style-drawing-page-properties-attlist ::= (presentation:background-visible::boolean)? ;
 style-drawing-page-properties-attlist ::= (presentation:display-header::boolean)? ;
 style-drawing-page-properties-attlist ::= (presentation:display-footer::boolean)? ;
 style-drawing-page-properties-attlist ::= (presentation:display-page-number::boolean)? ;
 style-drawing-page-properties-attlist ::= (presentation:display-date-time::boolean)? ;
 style-drawing-page-properties-attlist ::= (smil:type::string)? ;
table-data-pilot-layout-info ::= table:data-pilot-layout-info::table-data-pilot-layout-info-attlist ;
config-config-item-map-indexed-attlist ::= config:name::string ;
table-sort-groups-attlist ::= (table:data-type::("text" | "number" | "automatic" | string))? ;
 table-sort-groups-attlist ::= (table:order::("ascending" | "descending"))? ;
presentation-dim ::= presentation:dim::(presentation-dim-attlist presentation-sound?) ;
anim-animate-motion-attlist ::= (svg:path::pathData)? ;
 anim-animate-motion-attlist ::= (svg:origin::string)? ;
 anim-animate-motion-attlist ::= (smil:calcMode::("discrete" | "linear" | "paced" | "spline"))? ;
presentation-date-time-decl-attlist ::= presentation:name::string ;
 presentation-date-time-decl-attlist ::= presentation:source::("fixed" | "current-date") ;
 presentation-date-time-decl-attlist ::= (style:data-style-name::styleNameRef)? ;
text-template-name-attlist ::= (text:display::("full" | "path" | "name" | "name-and-extension" | "area" | "title"))? ;
draw-caption-attlist ::= (draw:caption-point-x::coordinate draw:caption-point-y::coordinate)? ;
 draw-caption-attlist ::= (draw:corner-radius::nonNegativeLength)? ;
form-button-attlist ::= form-control-attlist button-type common-disabled-attlist label image-data common-printable-attlist common-tab-attlist target-frame target-location common-title-attlist common-value-attlist common-form-relative-image-position-attlist ;
 form-button-attlist ::= (form:default-button::boolean)? ;
 form-button-attlist ::= (form:toggle::boolean)? ;
 form-button-attlist ::= (form:focus-on-click::boolean)? ;
 form-button-attlist ::= (form:xforms-submission::string)? ;
column-controls ::= form:text::(form-text-attlist common-form-control-content) ;
 column-controls ::= form:textarea::(form-textarea-attlist common-form-control-content text-p*) ;
 column-controls ::= form:formatted-text::(form-formatted-text-attlist common-form-control-content) ;
 column-controls ::= form:number::(form-number-attlist common-numeric-control-attlist common-form-control-content) ;
 column-controls ::= form:date::(form-date-attlist common-numeric-control-attlist common-form-control-content) ;
 column-controls ::= form:combobox::(form-combobox-attlist common-form-control-content form-item*) ;
 column-controls ::= form:listbox::(form-listbox-attlist common-form-control-content form-option*) ;
 column-controls ::= form:checkbox::(form-checkbox-attlist common-form-control-content) ;
chart-wall-attlist ::= (svg:width::length)? ;
 chart-wall-attlist ::= (chart:style-name::styleNameRef)? ;
text-index-title-template ::= text:index-title-template::((text:style-name::styleNameRef)? string()) ;
dr3d-rotate ::= dr3d:rotate::(common-draw-viewbox-attlist common-draw-path-data-attlist common-draw-z-index-attlist common-draw-id-attlist common-draw-layer-name-attlist common-draw-style-name-attlist common-dr3d-transform-attlist) ;
meta-date-string ::= meta:date-string::string ;
table-content-validations ::= table:content-validations::(table-content-validation+) ;
chart-series ::= chart:series::(chart-series-attlist chart-domain* chart-mean-value? chart-regression-curve? chart-error-indicator? chart-data-point*) ;
table-calculation-settings ::= table:calculation-settings::(table-calculation-setting-attlist table-null-date? table-iteration?) ;
common-field-display-value-none-attlist ::= (text:display::("value" | "none"))? ;
text-index-name ::= text:index-name::string ;
table-data-pilot-member-attlist ::= table:name::string ;
 table-data-pilot-member-attlist ::= (table:display::boolean)? ;
 table-data-pilot-member-attlist ::= (table:show-details::boolean)? ;
presentation-placeholder ::= presentation:placeholder::(presentation:object::presentation-classes svg:x::(coordinate | percent) svg:y::(coordinate | percent) svg:width::(length | percent) svg:height::(length | percent)) ;
style-map ::= style:map::style-map-attlist ;
number-number-attlist ::= (number:decimal-replacement::string())? ;
 number-number-attlist ::= (number:display-factor::double)? ;
text-index-source-style ::= text:index-source-style::(text:style-name::styleName) ;
common-field-description-attlist ::= (text:description::string())? ;
chart-series-attlist ::= (chart:values-cell-range-address::cellRangeAddress)? ;
 chart-series-attlist ::= (chart:label-cell-address::cellAddress)? ;
 chart-series-attlist ::= (chart:class::namespacedToken)? ;
 chart-series-attlist ::= (chart:attached-axis::string)? ;
 chart-series-attlist ::= (chart:style-name::styleNameRef)? ;
common-draw-transform-attlist ::= (draw:transform::string)? ;
common-shadow-attlist ::= (style:shadow::shadowType)? ;
common-num-format-attlist ::= (style:num-format::("1" | "i" | "I" | string | ε)) | (style:num-format::("a" | "A") style-num-letter-sync-attlist) | ε ;
text-page ::= text:page::text-page-attlist ;
common-data-field-attlist ::= (form:data-field::string)? ;
draw-regular-polygon-sharpness-attlist ::= draw:sharpness::percent ;
table-deletions ::= table:deletions::((table-cell-content-deletion | table-change-deletion)+) ;
text-list-level-style-attr ::= text:level::positiveInteger ;
table-data-pilot-sort-info ::= table:data-pilot-sort-info::table-data-pilot-sort-info-attlist ;
table-tracked-changes ::= table:tracked-changes::(table-tracked-changes-attlist (table-cell-content-change | table-insertion | table-deletion | table-movement)*) ;
table-database-source-sql-attlist ::= table:database-name::string ;
 table-database-source-sql-attlist ::= table:sql-statement::string ;
 table-database-source-sql-attlist ::= (table:parse-sql-statement::boolean)? ;
presentation-shape-attlist ::= (presentation:class::presentation-classes)? ;
 presentation-shape-attlist ::= (presentation:placeholder::boolean)? ;
 presentation-shape-attlist ::= (presentation:user-transformed::boolean)? ;
style-chart-properties ::= style:chart-properties::style-chart-properties-content ;
text-alphabetical-index ::= text:alphabetical-index::(sectionAttr text-alphabetical-index-source text-index-body) ;
office-change-info ::= office:change-info::(dc-creator dc-date text-p*) ;
paragraph-content ::= string() ;
 paragraph-content ::= text:s::((text:c::nonNegativeInteger)?) ;
 paragraph-content ::= text:tab::text-tab-attr ;
 paragraph-content ::= text:line-break::ε ;
 paragraph-content ::= text:span::((text:style-name::styleNameRef)? (text:class-names::styleNameRefs)? paragraph-content*) ;
 paragraph-content ::= text:a::(text-a-attlist office-event-listeners? paragraph-content*) ;
 paragraph-content ::= (text:bookmark::(text:name::string)) | (text:bookmark-start::(text:name::string)) | (text:bookmark-end::(text:name::string)) ;
 paragraph-content ::= text:reference-mark::(text:name::string) ;
 paragraph-content ::= (text:reference-mark-start::(text:name::string)) | (text:reference-mark-end::(text:name::string)) ;
 paragraph-content ::= text:note::(text-note-class (text:id::string)? text:note-citation::((text:label::string)? string()) text:note-body::(text-content*)) ;
 paragraph-content ::= text:ruby::((text:style-name::styleNameRef)? text:ruby-base::paragraph-content text:ruby-text::((text:style-name::styleNameRef)? string())) ;
 paragraph-content ::= office-annotation ;
 paragraph-content ::= change-marks ;
 paragraph-content ::= shape | draw-a ;
 paragraph-content ::= text:date::(text-date-attlist string()) ;
 paragraph-content ::= text:time::(text-time-attlist string()) ;
 paragraph-content ::= text:page-number::(text-page-number-attlist string()) ;
 paragraph-content ::= text:page-continuation::(text-page-continuation-attlist string()) ;
 paragraph-content ::= text:sender-firstname::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-lastname::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-initials::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-title::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-position::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-email::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-phone-private::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-fax::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-company::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-phone-work::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-street::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-city::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-postal-code::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-country::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-state-or-province::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:author-name::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:author-initials::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:chapter::(text-chapter-attlist string()) ;
 paragraph-content ::= text:file-name::(text-file-name-attlist string()) ;
 paragraph-content ::= text:template-name::(text-template-name-attlist string()) ;
 paragraph-content ::= text:sheet-name::string() ;
 paragraph-content ::= text:variable-set::(common-field-name-attlist common-field-formula-attlist common-value-and-type-attlist common-field-display-value-none-attlist common-field-data-style-name-attlist string()) ;
 paragraph-content ::= text:variable-get::(common-field-name-attlist common-field-display-value-formula-attlist common-field-data-style-name-attlist string()) ;
 paragraph-content ::= text:variable-input::(common-field-name-attlist common-field-description-attlist common-value-type-attlist common-field-display-value-none-attlist common-field-data-style-name-attlist string()) ;
 paragraph-content ::= text:user-field-get::(common-field-name-attlist common-field-display-value-formula-none-attlist common-field-data-style-name-attlist string()) ;
 paragraph-content ::= text:user-field-input::(common-field-name-attlist common-field-description-attlist common-field-data-style-name-attlist string()) ;
 paragraph-content ::= text:sequence::(common-field-name-attlist common-field-formula-attlist common-field-num-format-attlist text-sequence-ref-name string()) ;
 paragraph-content ::= text:expression::(common-field-formula-attlist common-value-and-type-attlist? common-field-display-value-formula-attlist common-field-data-style-name-attlist string()) ;
 paragraph-content ::= text:text-input::(common-field-description-attlist string()) ;
 paragraph-content ::= text:initial-creator::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:creation-date::(common-field-fixed-attlist common-field-data-style-name-attlist (text:date-value::dateOrDateTime)? string()) ;
 paragraph-content ::= text:creation-time::(common-field-fixed-attlist common-field-data-style-name-attlist (text:time-value::timeOrDateTime)? string()) ;
 paragraph-content ::= text:description::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:user-defined::(common-field-fixed-attlist text:name::string common-field-data-style-name-attlist (office:value::double)? (office:date-value::dateOrDateTime)? (office:time-value::duration)? (office:boolean-value::boolean)? (office:string-value::string)? string()) ;
 paragraph-content ::= text:print-time::(common-field-fixed-attlist common-field-data-style-name-attlist (text:time-value::time)? string()) ;
 paragraph-content ::= text:print-date::(common-field-fixed-attlist common-field-data-style-name-attlist (text:date-value::date)? string()) ;
 paragraph-content ::= text:printed-by::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:title::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:subject::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:keywords::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:editing-cycles::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:editing-duration::(common-field-fixed-attlist common-field-data-style-name-attlist (text:duration::duration)? string()) ;
 paragraph-content ::= text:modification-time::(common-field-fixed-attlist common-field-data-style-name-attlist (text:time-value::time)? string()) ;
 paragraph-content ::= text:modification-date::(common-field-fixed-attlist common-field-data-style-name-attlist (text:date-value::date)? string()) ;
 paragraph-content ::= text:creator::(common-field-fixed-attlist string()) ;
 paragraph-content ::= (text:page-count::(common-field-num-format-attlist string())) | (text:paragraph-count::(common-field-num-format-attlist string())) | (text:word-count::(common-field-num-format-attlist string())) | (text:character-count::(common-field-num-format-attlist string())) | (text:table-count::(common-field-num-format-attlist string())) | (text:image-count::(common-field-num-format-attlist string())) | (text:object-count::(common-field-num-format-attlist string())) ;
 paragraph-content ::= text:database-display::(text-database-display-attlist string()) ;
 paragraph-content ::= text:database-next::text-database-next-attlist ;
 paragraph-content ::= text:database-row-select::text-database-row-select-attlist ;
 paragraph-content ::= text:database-row-number::(common-field-database-table common-field-num-format-attlist (text:value::nonNegativeInteger)? string()) ;
 paragraph-content ::= text:database-name::(common-field-database-table string()) ;
 paragraph-content ::= text:page-variable-set::(text-set-page-variable-attlist string()) ;
 paragraph-content ::= text:page-variable-get::(text-get-page-variable-attlist string()) ;
 paragraph-content ::= text:placeholder::(text-placeholder-attlist string()) ;
 paragraph-content ::= text:conditional-text::(text-conditional-text-attlist string()) ;
 paragraph-content ::= text:hidden-text::(text-hidden-text-attlist string()) ;
 paragraph-content ::= (text:reference-ref::(text-common-ref-content text-ref-content)) | (text:bookmark-ref::(text-common-ref-content text-ref-content)) ;
 paragraph-content ::= text:note-ref::(text-common-ref-content text-note-ref-content text-ref-content) ;
 paragraph-content ::= text:sequence-ref::(text-common-ref-content text-sequence-ref-content) ;
 paragraph-content ::= text:script::((xlink:href::anyURI (xlink:type::"simple")?) | string() (script:language::string)?) ;
 paragraph-content ::= text:execute-macro::((text:name::string)? office-event-listeners? string()) ;
 paragraph-content ::= text:hidden-paragraph::(text-hidden-paragraph-attlist string()) ;
 paragraph-content ::= text:dde-connection::(text:connection-name::string string()) ;
 paragraph-content ::= text:measure::(text:kind::("value" | "unit" | "gap") string()) ;
 paragraph-content ::= text:table-formula::(common-field-formula-attlist common-field-display-value-formula-attlist common-field-data-style-name-attlist string()) ;
 paragraph-content ::= text:toc-mark-start::text-toc-mark-start-attrs ;
 paragraph-content ::= text:toc-mark-end::text-id ;
 paragraph-content ::= text:toc-mark::(text:string-value::string text-outline-level) ;
 paragraph-content ::= text:user-index-mark-start::(text-id text-outline-level text-index-name) ;
 paragraph-content ::= text:user-index-mark-end::(text-id text-outline-level) ;
 paragraph-content ::= text:user-index-mark::(text:string-value::string text-outline-level text-index-name) ;
 paragraph-content ::= text:alphabetical-index-mark-start::(text-id text-alphabetical-index-mark-attrs) ;
 paragraph-content ::= text:alphabetical-index-mark-end::text-id ;
 paragraph-content ::= text:alphabetical-index-mark::(text:string-value::string text-alphabetical-index-mark-attrs) ;
 paragraph-content ::= text:bibliography-mark::(text:bibliography-type::text-bibliography-types ((text:identifier::string) | (text:address::string) | (text:annote::string) | (text:author::string) | (text:booktitle::string) | (text:chapter::string) | (text:edition::string) | (text:editor::string) | (text:howpublished::string) | (text:institution::string) | (text:journal::string) | (text:month::string) | (text:note::string) | (text:number::string) | (text:organizations::string) | (text:pages::string) | (text:publisher::string) | (text:school::string) | (text:series::string) | (text:title::string) | (text:report-type::string) | (text:volume::string) | (text:year::string) | (text:url::string) | (text:custom1::string) | (text:custom2::string) | (text:custom3::string) | (text:custom4::string) | (text:custom5::string) | (text:isbn::string) | (text:issn::string))* string()) ;
 paragraph-content ::= presentation:header::ε ;
 paragraph-content ::= presentation:footer::ε ;
 paragraph-content ::= presentation:date-time::ε ;
config-config-item-map-entry-attlist ::= (config:name::string)? ;
number-day ::= number:day::(number-day-attlist common-calendar-attlist) ;
common-endsync-timing-attlist ::= (smil:endsync::("first" | "last" | "all" | "media"))? ;
change-mark-attr ::= text:change-id::IDREF ;
common-vertical-pos-attlist ::= (style:vertical-pos::("top" | "middle" | "bottom" | "from-top" | "below"))? (svg:y::coordinate)? ;
style-chart-properties-attlist ::= (chart:scale-text::boolean)? ;
 style-chart-properties-attlist ::= (chart:three-dimensional::boolean)? ;
 style-chart-properties-attlist ::= (chart:deep::boolean)? ;
 style-chart-properties-attlist ::= (chart:symbol-type::"none") | (chart:symbol-type::"automatic") | (chart:symbol-type::"named-symbol" chart:symbol-name::("square" | "diamond" | "arrow-down" | "arrow-up" | "arrow-right" | "arrow-left" | "bow-tie" | "hourglass" | "circle" | "star" | "x" | "plus" | "asterisk" | "horizontal-bar" | "vertical-bar")) | (chart:symbol-type::"image" chart:symbol-image::(xlink:href::anyURI)) | ε ;
 style-chart-properties-attlist ::= (chart:symbol-width::nonNegativeLength)? (chart:symbol-height::nonNegativeLength)? ;
 style-chart-properties-attlist ::= (chart:vertical::boolean)? ;
 style-chart-properties-attlist ::= (chart:connect-bars::boolean)? ;
 style-chart-properties-attlist ::= (chart:gap-width::integer)? (chart:overlap::integer)? ;
 style-chart-properties-attlist ::= (chart:japanese-candle-stick::boolean)? ;
 style-chart-properties-attlist ::= (chart:interpolation::("none" | "cubic-spline" | "b-spline"))? (chart:spline-order::positiveInteger)? (chart:spline-resolution::positiveInteger)? ;
 style-chart-properties-attlist ::= (chart:pie-offset::nonNegativeInteger)? ;
 style-chart-properties-attlist ::= (chart:lines::boolean)? ;
 style-chart-properties-attlist ::= (chart:solid-type::("cuboid" | "cylinder" | "cone" | "pyramid"))? ;
 style-chart-properties-attlist ::= (chart:stacked::boolean)? (chart:percentage::boolean)? ;
 style-chart-properties-attlist ::= (chart:link-data-style-to-source::boolean)? ;
 style-chart-properties-attlist ::= (chart:visible::boolean)? ;
 style-chart-properties-attlist ::= (chart:logarithmic::boolean)? ;
 style-chart-properties-attlist ::= (chart:maximum::double)? (chart:minimum::double)? (chart:origin::double)? (chart:interval-major::double)? (chart:interval-minor::positiveInteger)? ;
 style-chart-properties-attlist ::= (chart:tick-marks-major-inner::boolean)? (chart:tick-marks-major-outer::boolean)? (chart:tick-marks-minor-inner::boolean)? (chart:tick-marks-minor-outer::boolean)? ;
 style-chart-properties-attlist ::= (chart:display-label::boolean)? (chart:text-overlap::boolean)? (text:line-break::boolean)? (chart:label-arrangement::("side-by-side" | "stagger-even" | "stagger-odd"))? ;
 style-chart-properties-attlist ::= common-style-direction-attlist ;
 style-chart-properties-attlist ::= common-rotation-angle-attlist ;
 style-chart-properties-attlist ::= (chart:data-label-number::("none" | "value" | "percentage"))? ;
 style-chart-properties-attlist ::= (chart:data-label-text::boolean)? ;
 style-chart-properties-attlist ::= (chart:data-label-symbol::boolean)? ;
 style-chart-properties-attlist ::= (chart:mean-value::boolean)? ;
 style-chart-properties-attlist ::= (chart:error-category::("none" | "variance" | "standard-deviation" | "percentage" | "error-margin" | "constant"))? ;
 style-chart-properties-attlist ::= (chart:error-percentage::double)? ;
 style-chart-properties-attlist ::= (chart:error-margin::double)? ;
 style-chart-properties-attlist ::= (chart:error-lower-limit::double)? (chart:error-upper-limit::double)? ;
 style-chart-properties-attlist ::= (chart:error-upper-indicator::boolean)? (chart:error-lower-indicator::boolean)? ;
 style-chart-properties-attlist ::= (chart:series-source::("columns" | "rows"))? ;
 style-chart-properties-attlist ::= (chart:regression-type::("none" | "linear" | "logarithmic" | "exponential" | "power"))? ;
text-table-index-entry-template ::= text:table-index-entry-template::text-illustration-index-entry-content ;
text-linenumbering-configuration ::= text:linenumbering-configuration::(text-linenumbering-configuration-attlist text-linenumbering-separator?) ;
draw-path ::= draw:path::(common-draw-path-data-attlist common-draw-position-attlist common-draw-size-attlist common-draw-viewbox-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text) ;
number-embedded-text ::= number:embedded-text::(number-embedded-text-attlist string()) ;
style-handout-master ::= style:handout-master::(common-presentation-header-footer-attlist style-handout-master-attlist shape*) ;
presentation-show-text ::= presentation:show-text::(common-presentation-effect-attlist presentation-sound?) ;
draw-area-circle ::= draw:area-circle::(common-draw-area-attlist svg:cx::coordinate svg:cy::coordinate svg:r::length svg-desc? office-event-listeners?) ;
text-user-index-source-attr ::= text-index-scope-attr text-relative-tab-stop-position-attr text:index-name::string ;
 text-user-index-source-attr ::= (text:use-index-marks::boolean)? (text:use-graphics::boolean)? (text:use-tables::boolean)? (text:use-floating-frames::boolean)? (text:use-objects::boolean)? ;
 text-user-index-source-attr ::= (text:copy-outline-levels::boolean)? ;
draw-connector ::= draw:connector::(draw-connector-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text) ;
table-highlighted-range ::= table:highlighted-range::(table-highlighted-range-attlist | table-highlighted-range-attlist-invalid) ;
style-column-sep ::= style:column-sep::style-column-sep-attlist ;
text-linenumbering-configuration-attlist ::= (text:number-lines::boolean)? ;
 text-linenumbering-configuration-attlist ::= common-num-format-attlist? ;
 text-linenumbering-configuration-attlist ::= (text:style-name::styleNameRef)? ;
 text-linenumbering-configuration-attlist ::= (text:increment::nonNegativeInteger)? ;
 text-linenumbering-configuration-attlist ::= (text:number-position::("left" | "rigth" | "inner" | "outer"))? ;
 text-linenumbering-configuration-attlist ::= (text:offset::nonNegativeLength)? ;
 text-linenumbering-configuration-attlist ::= (text:count-empty-lines::boolean)? ;
 text-linenumbering-configuration-attlist ::= (text:count-in-text-boxes::boolean)? ;
 text-linenumbering-configuration-attlist ::= (text:restart-on-page::boolean)? ;
draw-stroke-dash ::= draw:stroke-dash::draw-stroke-dash-attlist ;
text-object-index-entry-template ::= text:object-index-entry-template::text-illustration-index-entry-content ;
list-source-type ::= (form:list-source-type::("table" | "query" | "sql" | "sql-pass-through" | "value-list" | "table-fields"))? ;
number-month ::= number:month::(number-month-attlist common-calendar-attlist) ;
chart-data-point ::= chart:data-point::chart-data-point-attlist ;
office-scripts ::= (office:scripts::(office-script* office-event-listeners?))? ;
common-vertical-margin-attlist ::= (fo:margin-top::(nonNegativeLength | percent))? (fo:margin-bottom::(nonNegativeLength | percent))? ;
table-data-pilot-table ::= table:data-pilot-table::(table-data-pilot-table-attlist (table-database-source-sql | table-database-source-table | table-database-source-query | table-source-service | table-source-cell-range)? table-data-pilot-field+) ;
label ::= (form:label::string)? ;
style-header-footer-properties-attlist ::= (svg:height::length)? (fo:min-height::length)? ;
 style-header-footer-properties-attlist ::= common-horizontal-margin-attlist common-vertical-margin-attlist common-margin-attlist ;
 style-header-footer-properties-attlist ::= common-border-attlist ;
 style-header-footer-properties-attlist ::= common-border-line-width-attlist ;
 style-header-footer-properties-attlist ::= common-padding-attlist ;
 style-header-footer-properties-attlist ::= common-background-color-attlist ;
 style-header-footer-properties-attlist ::= common-shadow-attlist ;
style-column ::= style:column::style-column-attlist ;
style-font-face-attlist ::= (svg:font-family::string)? (svg:font-style::fontStyle)? (svg:font-variant::fontVariant)? (svg:font-weight::fontWeight)? (svg:font-stretch::("normal" | "ultra-condensed" | "extra-condensed" | "condensed" | "semi-condensed" | "semi-expanded" | "expanded" | "extra-expanded" | "ultra-expanded"))? (svg:font-size::positiveLength)? (svg:unicode-range::string())? (svg:units-per-em::integer)? (svg:panose-1::string())? (svg:stemv::integer)? (svg:stemh::integer)? (svg:slope::integer)? (svg:cap-height::integer)? (svg:x-height::integer)? (svg:accent-height::integer)? (svg:ascent::integer)? (svg:descent::integer)? (svg:widths::string())? (svg:bbox::string())? (svg:ideographic::integer)? (svg:alphabetic::integer)? (svg:mathematical::integer)? (svg:hanging::integer)? (svg:v-ideographic::integer)? (svg:v-alphabetic::integer)? (svg:v-mathematical::integer)? (svg:v-hanging::integer)? (svg:underline-position::integer)? (svg:underline-thickness::integer)? (svg:strikethrough-position::integer)? (svg:strikethrough-thickness::integer)? (svg:overline-position::integer)? (svg:overline-thickness::integer)? ;
 style-font-face-attlist ::= style:name::string ;
 style-font-face-attlist ::= (style:font-adornments::string)? ;
 style-font-face-attlist ::= (style:font-family-generic::fontFamilyGeneric)? ;
 style-font-face-attlist ::= (style:font-pitch::fontPitch)? ;
 style-font-face-attlist ::= (style:font-charset::textEncoding)? ;
style-num-letter-sync-attlist ::= (style:num-letter-sync::boolean)? ;
common-field-fixed-attlist ::= (text:fixed::boolean)? ;
text-changed-region-attr ::= text:id::ID ;
draw-stroke-dash-attlist ::= draw:name::styleName ;
 draw-stroke-dash-attlist ::= (draw:display-name::string)? ;
 draw-stroke-dash-attlist ::= (draw:style::("rect" | "round"))? ;
 draw-stroke-dash-attlist ::= (draw:dots1::integer)? (draw:dots1-length::length)? (draw:dots2::integer)? (draw:dots2-length::length)? ;
 draw-stroke-dash-attlist ::= (draw:distance::length)? ;
table-last-column ::= table:last-column::common-table-template-attlist ;
table-cell-content-deletion ::= table:cell-content-deletion::((table:id::string)? table-cell-address? table-change-track-table-cell?) ;
office-script-attlist ::= script:language::string ;
config-config-item-map-named ::= config:config-item-map-named::(config-config-item-map-named-attlist config-config-item-map-entry+) ;
number-seconds-attlist ::= (number:style::("short" | "long"))? ;
 number-seconds-attlist ::= (number:decimal-places::integer)? ;
table-deletion ::= table:deletion::(table-deletion-attlist common-table-change-attlist office-change-info table-dependencies? table-deletions? table-cut-offs?) ;
text-index-entry-chapter-attrs ::= (text:display::("name" | "number" | "number-and-name"))? ;
style-ruby-properties ::= style:ruby-properties::style-ruby-properties-content ;
common-contour-attlist ::= draw:recreate-on-edit::boolean ;
change-marks ::= (text:change::change-mark-attr) | (text:change-start::change-mark-attr) | (text:change-end::change-mark-attr) ;
table-database-source-query ::= table:database-source-table::table-database-source-table-attlist ;
common-field-data-style-name-attlist ::= (style:data-style-name::styleNameRef)? ;
style-column-attlist ::= style:rel-width::relativeLength ;
 style-column-attlist ::= (fo:start-indent::length)? ;
 style-column-attlist ::= (fo:end-indent::length)? ;
 style-column-attlist ::= (fo:space-before::length)? ;
 style-column-attlist ::= (fo:space-after::length)? ;
common-fill-timing-attlist ::= (smil:fill::("remove" | "freeze" | "hold" | "auto" | "default" | "transition"))? ;
table-source-service ::= table:source-service::table-source-service-attlist ;
office-annotation ::= office:annotation::(office-annotation-attlist draw-caption-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist dc-creator? dc-date? meta-date-string? (text-p | text-list)*) ;
config-config-item-map-named-attlist ::= config:name::string ;
style-footer-left ::= style:footer-left::(common-style-header-footer-attlist header-footer-content) ;
common-anim-target-attlist ::= (smil:targetElement::IDREF)? ;
 common-anim-target-attlist ::= (anim:sub-item::string)? ;
draw-line ::= draw:line::(draw-line-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text) ;
style-ruby-properties-attlist ::= (style:ruby-position::("above" | "below"))? ;
 style-ruby-properties-attlist ::= (style:ruby-align::("left" | "center" | "right" | "distribute-letter" | "distribute-space"))? ;
table-sort-by-attlist ::= table:field-number::nonNegativeInteger ;
 table-sort-by-attlist ::= (table:data-type::("text" | "number" | "automatic" | string))? ;
 table-sort-by-attlist ::= (table:order::("ascending" | "descending"))? ;
draw-page-thumbnail ::= draw:page-thumbnail::(draw-page-thumbnail-attlist common-draw-position-attlist common-draw-size-attlist presentation-shape-attlist common-draw-shape-with-styles-attlist) ;
table-odd-rows ::= table:odd-rows::common-table-template-attlist ;
style-graphic-properties ::= style:graphic-properties::style-graphic-properties-content ;
table-source-service-attlist ::= table:name::string ;
 table-source-service-attlist ::= table:source-name::string ;
 table-source-service-attlist ::= table:object-name::string ;
 table-source-service-attlist ::= (table:user-name::string)? ;
 table-source-service-attlist ::= (table:password::string)? ;
common-calendar-attlist ::= (number:calendar::("gregorian" | "gengou" | "ROC" | "hanja_yoil" | "hanja" | "hijri" | "jewish" | "buddhist" | string))? ;
draw-handle ::= draw:handle::draw-handle-attlist ;
table-cell-content-change ::= table:cell-content-change::(common-table-change-attlist table-cell-address office-change-info table-dependencies? table-deletions? table-previous) ;
table-subtotal-field ::= table:subtotal-field::table-subtotal-field-attlist ;
chart-legend-attlist ::= (chart:legend-position::("start" | "end" | "top" | "bottom") (chart:legend-align::("start" | "center" | "end"))?) | (chart:legend-position::("top-start" | "bottom-start" | "top-end" | "bottom-end")) | ε ;
 chart-legend-attlist ::= common-draw-position-attlist ;
 chart-legend-attlist ::= (style:legend-expansion::("wide" | "high" | "balanced")) | (style:legend-expansion::"custom" style:legend-expansion-aspect-ratio::double) | ε ;
 chart-legend-attlist ::= (chart:style-name::styleNameRef)? ;
table-subtotal-rules ::= table:subtotal-rules::(table-subtotal-rules-attlist table-sort-groups? table-subtotal-rule*) ;
chart-plot-area ::= chart:plot-area::(chart-plot-area-attlist dr3d-light* chart-axis* chart-series* chart-stock-gain-marker? chart-stock-loss-marker? chart-stock-range-line? chart-wall? chart-floor?) ;
draw-measure-attlist ::= svg:x1::coordinate svg:y1::coordinate ;
 draw-measure-attlist ::= svg:x2::coordinate svg:y2::coordinate ;
draw-param ::= draw:param::draw-param-attlist ;
draw-object-ole ::= draw:object-ole::(draw-object-ole-attlist common-draw-data-attlist | office-binary-data) ;
number-era-attlist ::= (number:style::("short" | "long"))? ;
number-percentage-style ::= number:percentage-style::(common-data-style-attlist style-text-properties? number-text? number-and-text? style-map*) ;
office-body-content ::= office:text::(office-text-attlist office-text-content-prelude office-text-content-main* office-text-content-epilogue) ;
 office-body-content ::= office:drawing::(office-drawing-attlist office-drawing-content-prelude office-drawing-content-main office-drawing-content-epilogue) ;
 office-body-content ::= office:presentation::(office-presentation-attlist office-presentation-content-prelude office-presentation-content-main office-presentation-content-epilogue) ;
 office-body-content ::= office:spreadsheet::(office-spreadsheet-attlist office-spreadsheet-content-prelude office-spreadsheet-content-main office-spreadsheet-content-epilogue) ;
 office-body-content ::= office:chart::(office-chart-attlist office-chart-content-prelude office-chart-content-main office-chart-content-epilogue) ;
 office-body-content ::= office:image::(office-image-attlist office-image-content-prelude office-image-content-main office-image-content-epilogue) ;
draw-contour-polygon ::= draw:contour-polygon::(common-contour-attlist common-draw-size-attlist common-draw-viewbox-attlist common-draw-points-attlist) ;
chart-plot-area-attlist ::= common-draw-position-attlist common-draw-size-attlist ;
 chart-plot-area-attlist ::= (chart:style-name::styleNameRef)? ;
 chart-plot-area-attlist ::= (table:cell-range-address::cellRangeAddress)? ;
 chart-plot-area-attlist ::= (chart:data-source-has-labels::("none" | "row" | "column" | "both"))? ;
 chart-plot-area-attlist ::= dr3d-scene-attlist common-dr3d-transform-attlist ;
form-formatted-text-attlist ::= form-control-attlist common-current-value-attlist common-disabled-attlist common-maxlength-attlist common-printable-attlist common-readonly-attlist common-tab-attlist common-title-attlist common-value-attlist common-convert-empty-attlist common-data-field-attlist ;
 form-formatted-text-attlist ::= (form:max-value::string)? ;
 form-formatted-text-attlist ::= (form:min-value::string)? ;
 form-formatted-text-attlist ::= (form:validation::boolean)? ;
chart-mean-value ::= chart:mean-value::chart-mean-value-attlist ;
style-section-properties ::= style:section-properties::style-section-properties-content ;
table-source-cell-range-attlist ::= table:cell-range-address::cellRangeAddress ;
controls ::= column-controls ;
 controls ::= form:password::(form-password-attlist common-form-control-content) ;
 controls ::= form:file::(form-file-attlist common-form-control-content) ;
 controls ::= form:time::(form-time-attlist common-numeric-control-attlist common-form-control-content) ;
 controls ::= form:fixed-text::(form-fixed-text-attlist common-form-control-content) ;
 controls ::= form:button::(form-button-attlist common-form-control-content) ;
 controls ::= form:image::(form-image-attlist common-form-control-content) ;
 controls ::= form:radio::(form-radio-attlist common-form-control-content) ;
 controls ::= form:frame::(form-frame-attlist common-form-control-content) ;
 controls ::= form:image-frame::(form-image-frame-attlist common-form-control-content) ;
 controls ::= form:hidden::(form-hidden-attlist common-form-control-content) ;
 controls ::= form:grid::(form-grid-attlist common-form-control-content form-column*) ;
 controls ::= form:value-range::(form-value-range-attlist common-form-control-content) ;
 controls ::= form:generic-control::(form-generic-control-attlist common-form-control-content) ;
text-illustration-index ::= text:illustration-index::(sectionAttr text-illustration-index-source text-index-body) ;
office-dde-source ::= office:dde-source::(office-dde-source-attlist common-dde-connection-decl-attlist) ;
anin-iterate-attlist ::= (smil:targetElement::IDREF)? ;
 anin-iterate-attlist ::= (anim:iterate-type::string)? ;
 anin-iterate-attlist ::= (anim:iterate-interval::duration)? ;
table-scenario ::= table:scenario::table-scenario-attlist ;
common-table-template-attlist ::= text:style-name::styleNameRef ;
math-math ::= math:math::mathMarkup ;
common-current-value-attlist ::= (form:current-value::string)? ;
table-content-validation ::= table:content-validation::(table-validation-attlist table-help-message? (table-error-message | (table-error-macro office-event-listeners?))?) ;
table-data-pilot-level ::= table:data-pilot-level::(table-data-pilot-level-attlist table-data-pilot-subtotals? table-data-pilot-members? table-data-pilot-display-info? table-data-pilot-sort-info? table-data-pilot-layout-info?) ;
table-dependency ::= table:dependency::(table:id::string) ;
draw-equation-attlist ::= (draw:name::string)? ;
 draw-equation-attlist ::= (draw:formula::string)? ;
text-conditional-text-attlist ::= text:condition::formula ;
 text-conditional-text-attlist ::= text:string-value-if-true::string ;
 text-conditional-text-attlist ::= text:string-value-if-false::string ;
 text-conditional-text-attlist ::= (text:current-value::boolean)? ;
style-table-column-properties-attlist ::= (style:column-width::positiveLength)? (style:rel-column-width::relativeLength)? ;
 style-table-column-properties-attlist ::= (style:use-optimal-column-width::boolean)? ;
 style-table-column-properties-attlist ::= common-break-attlist ;
text-list-item-attr ::= (text:start-value::nonNegativeInteger)? ;
selected ::= (form:selected::boolean)? ;
common-draw-circle-ellipse-attlist ::= (svg:cx::coordinate svg:cy::coordinate)? ;
 common-draw-circle-ellipse-attlist ::= (draw:kind::("full" | "section" | "cut" | "arc"))? ;
 common-draw-circle-ellipse-attlist ::= (draw:start-angle::double)? ;
 common-draw-circle-ellipse-attlist ::= (draw:end-angle::double)? ;
text-page-number-attlist ::= common-field-num-format-attlist common-field-fixed-attlist ;
 text-page-number-attlist ::= (text:page-adjust::integer)? ;
 text-page-number-attlist ::= (text:select-page::("previous" | "current" | "next"))? ;
table-table-source ::= table:table-source::(table-table-source-attlist table-linked-source-attlist) ;
table-label-range-attlist ::= table:label-cell-range-address::cellRangeAddress ;
 table-label-range-attlist ::= table:data-cell-range-address::cellRangeAddress ;
 table-label-range-attlist ::= table:orientation::("column" | "row") ;
text-sequence-decl ::= text:sequence-decl::text-sequence-decl-attlist ;
style-style ::= style:style::(style-style-attlist style-style-content style-map*) ;
draw-enhanced-geometry-attlist ::= (draw:type::custom-shape-type)? ;
 draw-enhanced-geometry-attlist ::= (svg:viewBox::(integer integer integer integer))? ;
 draw-enhanced-geometry-attlist ::= (draw:mirror-vertical::boolean)? (draw:mirror-horizontal::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:text-rotate-angle::double)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-allowed::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:text-path-allowed::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:concentric-gradient-fill-allowed::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-brightness::percent)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-depth::(length double))? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-diffusion::percent)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-number-of-line-segments::integer)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-light-face::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-first-light-harsh::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-second-light-harsh::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-first-light-level::percent)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-second-light-level::percent)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-first-light-direction::vector3D)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-second-light-direction::vector3D)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-metal::boolean)? ;
 draw-enhanced-geometry-attlist ::= (dr3d:shade-mode::("flat" | "phong" | "gouraud" | "draft"))? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-rotation-angle::(double double))? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-rotation-center::vector3D)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-shininess::percent)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-skew::(double double))? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-specularity::percent)? ;
 draw-enhanced-geometry-attlist ::= (dr3d:projection::("parallel" | "perspective"))? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-viewpoint::point3D)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-origin::(double double))? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-color::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:enhanced-path::string)? ;
 draw-enhanced-geometry-attlist ::= (draw:path-stretchpoint-x::double)? (draw:path-stretchpoint-y::double)? ;
 draw-enhanced-geometry-attlist ::= (draw:text-areas::string)? ;
 draw-enhanced-geometry-attlist ::= (draw:glue-points::string)? ;
 draw-enhanced-geometry-attlist ::= (draw:glue-point-type::("none" | "segments" | "rectangle"))? ;
 draw-enhanced-geometry-attlist ::= (draw:glue-point-leaving-directions::string())? ;
 draw-enhanced-geometry-attlist ::= (draw:text-path::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:text-path-mode::("normal" | "path" | "shape"))? ;
 draw-enhanced-geometry-attlist ::= (draw:text-path-scale::("path" | "shape"))? ;
 draw-enhanced-geometry-attlist ::= (draw:text-path-same-letter-heights::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:modifiers::string)? ;
common-field-name-attlist ::= text:name::variableName ;
style-presentation-page-layout ::= style:presentation-page-layout::(style:name::styleName (style:display-name::string)? presentation-placeholder*) ;
text-index-entry-page-number ::= text:index-entry-page-number::((text:style-name::styleNameRef)?) ;
presentation-sound-attlist ::= (presentation:play-full::boolean)? ;
text-alphabetical-index-auto-mark-file ::= text:alphabetical-index-auto-mark-file::(xlink:href::anyURI (xlink:type::"simple")?) ;
draw-gradient-attlist ::= (draw:start-color::color)? (draw:end-color::color)? ;
 draw-gradient-attlist ::= (draw:start-intensity::percent)? (draw:end-intensity::percent)? ;
style-background-image-attlist ::= (style:repeat::("no-repeat" | "repeat" | "stretch"))? ;
 style-background-image-attlist ::= (style:position::("left" | "center" | "right" | "top" | "bottom" | (horiBackPos vertBackPos) | (vertBackPos horiBackPos)))? ;
 style-background-image-attlist ::= (style:filter-name::string)? ;
 style-background-image-attlist ::= (draw:opacity::percent)? ;
svg-font-face-src ::= svg:font-face-src::((svg-font-face-uri | svg-font-face-name)+) ;
text-sequence-decl-attlist ::= common-field-name-attlist ;
 text-sequence-decl-attlist ::= text:display-outline-level::nonNegativeInteger ;
 text-sequence-decl-attlist ::= (text:separation-character::character)? ;
svg-font-face-name ::= svg:font-face-name::((name::string())?) ;
bound-column ::= (form:bound-column::string)? ;
style-drop-cap-attlist ::= (style:length::("word" | positiveInteger))? ;
 style-drop-cap-attlist ::= (style:lines::positiveInteger)? ;
 style-drop-cap-attlist ::= (style:distance::length)? ;
 style-drop-cap-attlist ::= (style:style-name::styleNameRef)? ;
text-table-of-content ::= text:table-of-content::(sectionAttr text-table-of-content-source text-index-body) ;
anim-command-attlist ::= anim:command::string ;
table-data-pilot-members ::= table:data-pilot-members::(table-data-pilot-member*) ;
text-tracked-changes ::= (text:tracked-changes::(text-tracked-changes-attr text-changed-region*))? ;
text-index-entry-link-end ::= text:index-entry-link-end::((text:style-name::styleNameRef)?) ;
number-hours-attlist ::= (number:style::("short" | "long"))? ;
form-item ::= form:item::(form-item-attlist string()) ;
draw-hatch ::= draw:hatch::draw-hatch-attlist ;
sectionAttr ::= (text:style-name::styleNameRef)? ;
 sectionAttr ::= text:name::string ;
 sectionAttr ::= (text:protected::boolean)? ;
 sectionAttr ::= (text:protection-key::string)? ;
office-meta ::= (office:meta::office-meta-content)? ;
style-table-row-properties-attlist ::= (style:row-height::positiveLength)? (style:min-row-height::nonNegativeLength)? ;
 style-table-row-properties-attlist ::= (style:use-optimal-row-height::boolean)? ;
 style-table-row-properties-attlist ::= common-background-color-attlist ;
 style-table-row-properties-attlist ::= common-break-attlist ;
 style-table-row-properties-attlist ::= (fo:keep-together::("auto" | "always"))? ;
chart-regression-curve ::= chart:regression-curve::chart-regression-curve-attlist ;
common-auto-reorder-attlist ::= (number:automatic-order::boolean)? ;
table-consolidation ::= table:consolidation::table-consolidation-attlist ;
text-bibliography-configuration ::= text:bibliography-configuration::(text-bibliography-configuration-attlist text-sort-key*) ;
draw-circle-attlist ::= (svg:r::length)? ;
chart-footer ::= chart:footer::(chart-title-attlist text-p?) ;
table-subtotal-rule ::= table:subtotal-rule::(table-subtotal-rule-attlist table-subtotal-field*) ;
common-stock-marker-attlist ::= (chart:style-name::styleNameRef)? ;
chart-regression-curve-attlist ::= (chart:style-name::styleNameRef)? ;
common-value-and-type-attlist ::= (office:value-type::"float" office:value::double) | (office:value-type::"percentage" office:value::double) | (office:value-type::"currency" office:value::double (office:currency::string)?) | (office:value-type::"date" office:date-value::dateOrDateTime) | (office:value-type::"time" office:time-value::duration) | (office:value-type::"boolean" office:boolean-value::boolean) | (office:value-type::"string" (office:string-value::string)?) ;
draw-caption ::= draw:caption::(draw-caption-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text) ;
text-index-body ::= text:index-body::(index-content-main*) ;
common-decimal-places-attlist ::= (number:decimal-places::integer)? ;
number-minutes ::= number:minutes::number-minutes-attlist ;
chart-wall ::= chart:wall::chart-wall-attlist ;
text-index-entry-bibliography ::= text:index-entry-bibliography::text-index-entry-bibliography-attrs ;
table-subtotal-rule-attlist ::= table:group-by-field-number::nonNegativeInteger ;
table-filter ::= table:filter::(table-filter-attlist table-filter-condition | table-filter-and | table-filter-or) ;
form-listbox-attlist ::= form-control-attlist common-disabled-attlist dropdown common-printable-attlist size common-tab-attlist common-title-attlist bound-column common-data-field-attlist list-source list-source-type ;
 form-listbox-attlist ::= (form:multiple::boolean)? ;
 form-listbox-attlist ::= (form:xforms-list-source::string)? ;
style-table-cell-properties-attlist ::= (style:vertical-align::("top" | "middle" | "bottom" | "automatic"))? ;
 style-table-cell-properties-attlist ::= (style:text-align-source::("fix" | "value-type"))? ;
 style-table-cell-properties-attlist ::= common-style-direction-attlist ;
 style-table-cell-properties-attlist ::= (style:glyph-orientation-vertical::("auto" | "0"))? ;
 style-table-cell-properties-attlist ::= common-shadow-attlist ;
 style-table-cell-properties-attlist ::= common-background-color-attlist ;
 style-table-cell-properties-attlist ::= common-border-attlist ;
 style-table-cell-properties-attlist ::= (style:diagonal-tl-br::string)? (style:diagonal-tl-br-widths::borderWidths)? (style:diagonal-bl-tr::string)? (style:diagonal-bl-tr-widths::borderWidths)? ;
 style-table-cell-properties-attlist ::= common-border-line-width-attlist ;
 style-table-cell-properties-attlist ::= common-padding-attlist ;
 style-table-cell-properties-attlist ::= (fo:wrap-option::("no-wrap" | "wrap"))? ;
 style-table-cell-properties-attlist ::= common-rotation-angle-attlist ;
 style-table-cell-properties-attlist ::= (style:rotation-align::("none" | "bottom" | "top" | "center"))? ;
 style-table-cell-properties-attlist ::= (style:cell-protect::("none" | "hidden-and-protected" | (("protected" | "formula-hidden")+)))? ;
 style-table-cell-properties-attlist ::= (style:print-content::boolean)? ;
 style-table-cell-properties-attlist ::= (style:decimal-places::nonNegativeInteger)? ;
 style-table-cell-properties-attlist ::= (style:repeat-content::boolean)? ;
 style-table-cell-properties-attlist ::= (style:shrink-to-fit::boolean)? ;
text-alphabetical-index-mark-attrs ::= (text:key1::string)? (text:key2::string)? ;
 text-alphabetical-index-mark-attrs ::= (text:string-value-phonetic::string)? (text:key1-phonetic::string)? (text:key2-phonetic::string)? ;
 text-alphabetical-index-mark-attrs ::= (text:main-entry::boolean)? ;
text-sort-key ::= text:sort-key::text-sort-key-attlist ;
chart-floor-attlist ::= (svg:width::length)? ;
 chart-floor-attlist ::= (chart:style-name::styleNameRef)? ;
presentation-notes ::= presentation:notes::(common-presentation-header-footer-attlist presentation-notes-attlist shape*) ;
number-number ::= number:number::(number-number-attlist common-decimal-places-attlist common-number-attlist number-embedded-text*) ;
text-notes-configuration ::= text:notes-configuration::text-notes-configuration-content ;
table-database-range ::= table:database-range::(table-database-range-attlist (table-database-source-sql | table-database-source-table | table-database-source-query)? table-filter? table-sort? table-subtotal-rules?) ;
text-index-scope-attr ::= (text:index-scope::("document" | "chapter"))? ;
text-section ::= text:section::(text-section-attr text-section-source | text-section-source-dde | ε text-content*) ;
presentation-animation-group ::= presentation:animation-group::(presentation-animation-elements*) ;
text-relative-tab-stop-position-attr ::= (text:relative-tab-stop-position::boolean)? ;
number-currency-symbol-attlist ::= (number:language::languageCode)? (number:country::countryCode)? ;
text-list-item ::= text:list-item::(text-list-item-attr text-list-item-content) ;
text-list-level-style-number-attr ::= (text:style-name::styleNameRef)? ;
 text-list-level-style-number-attr ::= common-num-format-attlist common-num-format-prefix-suffix-attlist ;
 text-list-level-style-number-attr ::= (text:display-levels::positiveInteger)? ;
 text-list-level-style-number-attr ::= (text:start-value::positiveInteger)? ;
common-border-attlist ::= (fo:border::string)? (fo:border-top::string)? (fo:border-bottom::string)? (fo:border-left::string)? (fo:border-right::string)? ;
presentation-notes-attlist ::= (style:page-layout-name::styleNameRef)? ;
 presentation-notes-attlist ::= (draw:style-name::styleNameRef)? ;
table-database-range-attlist ::= (table:name::string)? ;
 table-database-range-attlist ::= (table:is-selection::boolean)? ;
 table-database-range-attlist ::= (table:on-update-keep-styles::boolean)? ;
 table-database-range-attlist ::= (table:on-update-keep-size::boolean)? ;
 table-database-range-attlist ::= (table:has-persistent-data::boolean)? ;
 table-database-range-attlist ::= (table:orientation::("column" | "row"))? ;
 table-database-range-attlist ::= (table:contains-header::boolean)? ;
 table-database-range-attlist ::= (table:display-filter-buttons::boolean)? ;
 table-database-range-attlist ::= table:target-range-address::cellRangeAddress ;
 table-database-range-attlist ::= (table:refresh-delay::boolean)? ;
form-property-name ::= form:property-name::string ;
config-config-item-set-attlist ::= config:name::string ;
text-object-index-source-attrs ::= text-index-scope-attr ;
 text-object-index-source-attrs ::= text-relative-tab-stop-position-attr ;
 text-object-index-source-attrs ::= (text:use-spreadsheet-objects::boolean)? ;
 text-object-index-source-attrs ::= (text:use-math-objects::boolean)? ;
 text-object-index-source-attrs ::= (text:use-draw-objects::boolean)? ;
 text-object-index-source-attrs ::= (text:use-chart-objects::boolean)? ;
 text-object-index-source-attrs ::= (text:use-other-objects::boolean)? ;
table-change-track-table-cell-attlist ::= (table:cell-address::cellAddress)? ;
 table-change-track-table-cell-attlist ::= (table:matrix-covered::boolean)? ;
 table-change-track-table-cell-attlist ::= (table:formula::string)? (table:number-matrix-columns-spanned::positiveInteger)? (table:number-matrix-rows-spanned::positiveInteger)? common-value-and-type-attlist? ;
text-illustration-index-source ::= text:illustration-index-source::(text-illustration-index-source-attrs text-index-title-template? text-illustration-index-entry-template?) ;
style-region-center ::= style:region-center::region-content ;
number-number-style ::= number:number-style::(common-data-style-attlist style-text-properties? number-text? (any-number number-text?)? style-map*) ;
target-frame ::= (office:target-frame::targetFrameName)? ;
form-property-value-and-type-attlist ::= common-value-and-type-attlist | (office:value-type::"void") ;
table-named-range ::= table:named-range::table-named-range-attlist ;
style-header ::= style:header::(common-style-header-footer-attlist header-footer-content) ;
form-time-attlist ::= (form:value::time)? ;
 form-time-attlist ::= (form:current-value::time)? ;
 form-time-attlist ::= (form:min-value::time)? ;
 form-time-attlist ::= (form:max-value::time)? ;
table-cell-address ::= table:cell-address::common-table-cell-address-attlist ;
table-operation ::= table:operation::table-operation-attlist ;
office-document-meta ::= office:document-meta::(office-document-common-attrs office-meta) ;
text-index-entry-text ::= text:index-entry-text::((text:style-name::styleNameRef)?) ;
common-draw-data-attlist ::= xlink:href::anyURI (xlink:type::"simple")? (xlink:show::"embed")? (xlink:actuate::"onLoad")? ;
chart-axis-attlist ::= chart:dimension::("x" | "y" | "z") ;
 chart-axis-attlist ::= (chart:name::string)? ;
 chart-axis-attlist ::= (chart:style-name::styleNameRef)? ;
text-page-attlist ::= text:master-page-name::styleNameRef ;
text-table-of-content-entry-template ::= text:table-of-content-entry-template::(text-table-of-content-entry-template-attlist text-table-of-content-children*) ;
draw-g ::= draw:g::(draw-g-attlist common-draw-z-index-attlist common-draw-name-attlist common-draw-id-attlist common-draw-style-name-attlist common-text-spreadsheet-shape-attlist office-event-listeners? draw-glue-point* shape*) ;
common-draw-path-data-attlist ::= svg:d::pathData ;
table-named-range-attlist ::= table:name::string table:cell-range-address::cellRangeAddress (table:base-cell-address::cellAddress)? (table:range-usable-as::("none" | (("print-range" | "filter" | "repeat-row" | "repeat-column")+)))? ;
number-quarter-attlist ::= (number:style::("short" | "long"))? ;
draw-a ::= draw:a::(draw-a-attlist draw-frame) ;
table-filter-condition-attlist ::= table:field-number::nonNegativeInteger ;
 table-filter-condition-attlist ::= table:value::string ;
 table-filter-condition-attlist ::= table:operator::string ;
 table-filter-condition-attlist ::= (table:case-sensitive::string)? ;
 table-filter-condition-attlist ::= (table:data-type::("text" | "number"))? ;
table-previous ::= table:previous::((table:id::string)? table-change-track-table-cell) ;
number-text-style ::= number:text-style::(common-data-style-attlist style-text-properties? number-text? (number-text-content number-text?)* style-map*) ;
office-body ::= office:body::office-body-content ;
svg-font-face-uri ::= svg:font-face-uri::(common-svg-font-face-xlink-attlist svg-font-face-format*) ;
draw-g-attlist ::= (svg:y::coordinate)? ;
text-list-style-content ::= text:list-level-style-number::(text-list-level-style-attr text-list-level-style-number-attr style-list-level-properties? style-text-properties?) ;
 text-list-style-content ::= text:list-level-style-bullet::(text-list-level-style-attr text-list-level-style-bullet-attr style-list-level-properties? style-text-properties?) ;
 text-list-style-content ::= text:list-level-style-image::(text-list-level-style-attr text-list-level-style-image-attr style-list-level-properties?) ;
table-table-row-attlist ::= (table:number-rows-repeated::positiveInteger)? ;
 table-table-row-attlist ::= (table:style-name::styleNameRef)? ;
 table-table-row-attlist ::= (table:default-cell-style-name::styleNameRef)? ;
 table-table-row-attlist ::= (table:visibility::table-visibility-value)? ;
style-page-layout ::= style:page-layout::(style-page-layout-attlist style-page-layout-properties? style-header-style? style-footer-style?) ;
office-process-content ::= (office:process-content::boolean)? ;
form-date-attlist ::= (form:value::date)? ;
 form-date-attlist ::= (form:current-value::date)? ;
 form-date-attlist ::= (form:min-value::date)? ;
 form-date-attlist ::= (form:max-value::date)? ;
common-form-relative-image-position-attlist ::= ((form:image-position::"center")?) | (form:image-position::("start" | "end" | "top" | "bottom") (form:image-align::("start" | "center" | "end"))?) ;
presentation-play ::= presentation:play::presentation-play-attlist ;
table-insertion-cut-off ::= table:insertion-cut-off::table-insertion-cut-off-attlist ;
presentation-animations ::= presentation:animations::((presentation-animation-elements | presentation-animation-group)*) ;
style-header-footer-properties ::= style:header-footer-properties::style-header-footer-properties-content ;
common-value-attlist ::= (form:value::string)? ;
style-footnote-sep-attlist ::= (style:width::length)? (style:rel-width::percent)? (style:color::color)? (style:line-style::lineStyle)? (style:adjustment::("left" | "center" | "right"))? (style:distance-before-sep::length)? (style:distance-after-sep::length)? ;
table-first-row ::= table:first-row::common-table-template-attlist ;
text-list-header ::= text:list-header::text-list-item-content ;
style-column-sep-attlist ::= (style:style::("none" | "solid" | "dotted" | "dashed" | "dot-dashed"))? ;
 style-column-sep-attlist ::= style:width::length ;
 style-column-sep-attlist ::= (style:height::percent)? ;
 style-column-sep-attlist ::= (style:vertical-align::("top" | "middle" | "bottom"))? ;
 style-column-sep-attlist ::= (style:color::color)? ;
text-user-index-entry-template ::= text:user-index-entry-template::(text-user-index-entry-template-attrs (text-index-entry-chapter | text-index-entry-page-number | text-index-entry-text | text-index-entry-span | text-index-entry-tab-stop)*) ;
table-database-source-table ::= table:database-source-query::table-database-source-query-attlist ;
table-table-cell-range-source-attlist ::= table:name::string ;
 table-table-cell-range-source-attlist ::= table:last-column-spanned::positiveInteger table:last-row-spanned::positiveInteger ;
common-form-control-attlist ::= (form:name::string)? ;
 common-form-control-attlist ::= (form:control-implementation::namespacedToken)? ;
common-svg-font-face-xlink-attlist ::= xlink:href::anyURI (xlink:type::"simple")? (xlink:actuate::"onRequest")? ;
draw-area-polygon ::= draw:area-polygon::(common-draw-area-attlist svg:x::coordinate svg:y::coordinate svg:width::length svg:height::length common-draw-viewbox-attlist common-draw-points-attlist svg-desc? office-event-listeners?) ;
chart-stock-gain-marker ::= chart:stock-gain-marker::common-stock-marker-attlist ;
office-forms ::= (office:forms::(office-forms-attlist (form-form | xforms-model)*))? ;
common-restart-timing-attlist ::= (smil:restart::("never" | "always" | "whenNotActive" | "default"))? ;
form-properties ::= form:properties::(form-property+) ;
common-maxlength-attlist ::= (form:max-length::nonNegativeInteger)? ;
draw-object-attlist ::= (draw:notify-on-update-of-ranges::string)? ;
common-rotation-angle-attlist ::= (style:rotation-angle::nonNegativeInteger)? ;
common-readonly-attlist ::= (form:readonly::boolean)? ;
draw-measure ::= draw:measure::(draw-measure-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text) ;
draw-control ::= draw:control::(draw-control-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist draw-glue-point*) ;
table-table-column ::= table:table-column::table-table-column-attlist ;
text-sequence-ref-content ::= (text:reference-format::("page" | "chapter" | "direction" | "text" | "category-and-value" | "caption" | "value"))? ;
table-data-pilot-display-info ::= table:data-pilot-display-info::table-data-pilot-display-info-attlist ;
table-source-range-address ::= table:source-range-address::common-table-range-attlist ;
presentation-show ::= presentation:show::presentation-show-attlist ;
office-forms-attlist ::= (form:automatic-focus::boolean)? ;
 office-forms-attlist ::= (form:apply-design-mode::boolean)? ;
draw-plugin-attlist ::= (draw:mime-type::string())? ;
svg-stop ::= svg:stop::(svg:offset::(double | percent) (svg:stop-color::color)? (svg:stop-opacity::double)?) ;
table-named-expression ::= table:named-expression::table-named-expression-attlist ;
table-validation-attlist ::= table:name::string ;
 table-validation-attlist ::= (table:condition::string)? ;
 table-validation-attlist ::= (table:base-cell-address::cellAddress)? ;
 table-validation-attlist ::= (table:allow-empty-cell::boolean)? ;
 table-validation-attlist ::= (table:display-list::("none" | "unsorted" | "sort-ascending"))? ;
table-even-columns ::= table:even-columns::common-table-template-attlist ;
draw-page-thumbnail-attlist ::= (draw:page-number::positiveInteger)? ;
text-tab-attr ::= (text:tab-ref::nonNegativeInteger)? ;
text-style-name ::= (form:text-style-name::styleNameRef)? ;
text-table-of-content-source ::= text:table-of-content-source::(text-table-of-content-source-attlist text-index-title-template? text-table-of-content-entry-template* text-index-source-styles*) ;
text-index-entry-tab-stop-attrs ::= (style:leader-char::character)? ;
 text-index-entry-tab-stop-attrs ::= (style:type::"right") | (style:type::"left" style:position::length) ;
table-source-cell-range ::= table:source-cell-range::(table-source-cell-range-attlist table-filter?) ;
table-data-pilot-display-info-attlist ::= table:enabled::boolean ;
 table-data-pilot-display-info-attlist ::= table:data-field::string ;
 table-data-pilot-display-info-attlist ::= table:member-count::nonNegativeInteger ;
 table-data-pilot-display-info-attlist ::= table:display-member-mode::("from-top" | "from-bottom") ;
common-field-database-table-attlist ::= text:table-name::string ;
 common-field-database-table-attlist ::= (text:table-type::("table" | "query" | "command"))? ;
common-margin-attlist ::= (fo:margin::(nonNegativeLength | percent))? ;
common-spline-anim-value-attlist ::= (smil:keyTimes::string)? ;
 common-spline-anim-value-attlist ::= (smil:keySplines::string)? ;
table-odd-columns ::= table:odd-columns::common-table-template-attlist ;
common-draw-layer-name-attlist ::= (draw:layer::string())? ;
draw-rect-attlist ::= (draw:corner-radius::nonNegativeLength)? ;
chart-stock-loss-marker ::= chart:stock-loss-marker::common-stock-marker-attlist ;
common-field-display-value-formula-attlist ::= (text:display::("value" | "formula"))? ;
office-event-listeners ::= office:event-listeners::((script-event-listener | presentation-event-listener)*) ;
dr3d-sphere ::= dr3d:sphere::(dr3d-sphere-attlist common-draw-z-index-attlist common-draw-id-attlist common-draw-layer-name-attlist common-draw-style-name-attlist common-dr3d-transform-attlist) ;
text-id ::= text:id::string ;
text-table-of-content-source-attlist ::= (text:outline-level::positiveInteger)? ;
 text-table-of-content-source-attlist ::= (text:use-outline-level::boolean)? ;
 text-table-of-content-source-attlist ::= (text:use-index-marks::boolean)? ;
 text-table-of-content-source-attlist ::= (text:use-index-source-styles::boolean)? ;
 text-table-of-content-source-attlist ::= (text:index-scope::("document" | "chapter"))? ;
 text-table-of-content-source-attlist ::= (text:relative-tab-stop-position::boolean)? ;
style-text-properties ::= style:text-properties::style-text-properties-content ;
draw-equation ::= draw:equation::draw-equation-attlist ;
draw-object-ole-attlist ::= (draw:class-id::string())? ;
text-table-index-source ::= text:table-index-source::(text-illustration-index-source-attrs text-index-title-template? text-table-index-entry-template?) ;
office-automatic-styles ::= (office:automatic-styles::(styles style-page-layout*))? ;
animation-element ::= anim:animate::(common-anim-target-attlist common-anim-named-target-attlist common-anim-values-attlist common-anim-spline-mode-attlist common-spline-anim-value-attlist common-repeat-timing-attlist common-fill-timing-attlist common-anim-add-accum-attlist) ;
 animation-element ::= anim:set::(common-anim-target-attlist common-anim-named-target-attlist common-anim-set-values-attlist common-fill-timing-attlist common-anim-add-accum-attlist) ;
 animation-element ::= anim:animateMotion::(anim-animate-motion-attlist common-anim-target-attlist common-anim-named-target-attlist common-anim-add-accum-attlist common-anim-values-attlist common-fill-timing-attlist common-spline-anim-value-attlist) ;
 animation-element ::= anim:animateColor::(common-anim-target-attlist common-anim-named-target-attlist common-anim-add-accum-attlist common-anim-values-attlist common-anim-spline-mode-attlist common-spline-anim-value-attlist anim-animate-color-attlist common-fill-timing-attlist) ;
 animation-element ::= anim:animateTransform::(common-anim-target-attlist common-anim-named-target-attlist common-anim-add-accum-attlist common-anim-values-attlist anim-animate-transform-attlist common-fill-timing-attlist) ;
 animation-element ::= anim:transitionFilter::(common-anim-target-attlist common-anim-add-accum-attlist common-anim-values-attlist common-anim-spline-mode-attlist anim-transition-filter-attlist common-fill-timing-attlist) ;
 animation-element ::= anim:par::(common-anim-attlist common-timing-attlist common-endsync-timing-attlist animation-element*) ;
 animation-element ::= anim:seq::(common-anim-attlist common-endsync-timing-attlist common-timing-attlist) ;
 animation-element ::= anim:iterate::(common-anim-attlist anin-iterate-attlist common-timing-attlist common-endsync-timing-attlist animation-element*) ;
 animation-element ::= anim:audio::(common-anim-attlist anim-audio-attlist common-basic-timing-attlist) ;
 animation-element ::= anim:command::(common-anim-attlist anim-command-attlist common-begin-end-timing-attlist common-anim-target-attlist (anim:param::(anim:name::string() anim:value::string()))*) ;
draw-polygon ::= draw:polygon::(common-draw-points-attlist common-draw-position-attlist common-draw-size-attlist common-draw-viewbox-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text) ;
anim-animate-color-attlist ::= (anim:color-interpolation::("rgb" | "hsl"))? ;
 anim-animate-color-attlist ::= (anim:color-interpolation-direction::("clockwise" | "counter-clockwise"))? ;
style-section-properties-attlist ::= common-background-color-attlist ;
 style-section-properties-attlist ::= common-horizontal-margin-attlist ;
 style-section-properties-attlist ::= (style:protect::boolean)? ;
 style-section-properties-attlist ::= (text:dont-balance-text-columns::boolean)? ;
 style-section-properties-attlist ::= common-writing-mode-attlist ;
table-data-pilot-group ::= table:data-pilot-group::(table-data-pilot-group-attlist table-data-pilot-group-member+) ;
table-label-range ::= table:label-range::table-label-range-attlist ;
number-boolean ::= number:boolean::ε ;
dr3d-cube ::= dr3d:cube::(dr3d-cube-attlist common-draw-z-index-attlist common-draw-id-attlist common-draw-layer-name-attlist common-draw-style-name-attlist common-dr3d-transform-attlist) ;
table-scenario-attlist ::= table:scenario-ranges::cellRangeAddressList ;
 table-scenario-attlist ::= table:is-active::boolean ;
 table-scenario-attlist ::= (table:display-border::boolean)? ;
 table-scenario-attlist ::= (table:border-color::color)? ;
 table-scenario-attlist ::= (table:copy-back::boolean)? ;
 table-scenario-attlist ::= (table:copy-styles::boolean)? ;
 table-scenario-attlist ::= (table:copy-formulas::boolean)? ;
 table-scenario-attlist ::= (table:comment::string)? ;
 table-scenario-attlist ::= (table:protected::boolean)? ;
common-control-id-attlist ::= form:id::ID ;
number-week-of-year ::= number:week-of-year::common-calendar-attlist ;
form-option ::= form:option::(form-option-attlist string()) ;
table-data-pilot-level-attlist ::= (table:show-empty::boolean)? ;
style-footer-style ::= style:footer-style::(style-header-footer-properties?) ;
presentation-event-listener ::= presentation:event-listener::(presentation-event-listener-attlist presentation-sound?) ;
draw-gradient ::= draw:gradient::(common-draw-gradient-attlist draw-gradient-attlist) ;
text-outline-level ::= (text:outline-level::positiveInteger)? ;
common-background-color-attlist ::= (fo:background-color::("transparent" | color))? ;
table-data-pilot-group-attlist ::= table:name::string ;
draw-frame-attlist ::= (draw:copy-of::string)? ;
common-restart-default-attlist ::= (smil:restartDefault::("never" | "always" | "whenNotActive" | "inherit"))? ;
chart-domain ::= chart:domain::((table:cell-range-address::cellRangeAddress)?) ;
table-data-pilot-group-member-attlist ::= table:name::string ;
office-text-attlist ::= (text:global::boolean)? ;
style-paragraph-properties ::= style:paragraph-properties::style-paragraph-properties-content ;
table-table-row-group ::= table:table-row-group::(table-table-row-group-attlist table-rows-and-groups) ;
text-file-name-attlist ::= (text:display::("full" | "path" | "name" | "name-and-extension"))? ;
 text-file-name-attlist ::= common-field-fixed-attlist ;
text-illustration-index-entry-template ::= text:illustration-index-entry-template::text-illustration-index-entry-content ;
presentation-event-listener-attlist ::= script:event-name::string ;
 presentation-event-listener-attlist ::= presentation:action::("none" | "previous-page" | "next-page" | "first-page" | "last-page" | "hide" | "stop" | "execute" | "show" | "verb" | "fade-out" | "sound") ;
 presentation-event-listener-attlist ::= (presentation:effect::presentationEffects)? ;
 presentation-event-listener-attlist ::= (presentation:direction::presentationEffectDirections)? ;
 presentation-event-listener-attlist ::= (presentation:speed::presentationSpeeds)? ;
 presentation-event-listener-attlist ::= (presentation:start-scale::percent)? ;
 presentation-event-listener-attlist ::= (xlink:href::anyURI)? (xlink:type::"simple")? (xlink:show::"embed")? (xlink:actuate::"onRequest")? ;
 presentation-event-listener-attlist ::= (presentation:verb::nonNegativeInteger)? ;
common-fill-default-attlist ::= (smil:fillDefault::("remove" | "freeze" | "hold" | "transition" | "auto" | "inherit"))? ;
common-form-visual-effect-attlist ::= (form:visual-effect::("flat" | "3d"))? ;
style-page-layout-properties-attlist ::= (fo:page-width::length)? (fo:page-height::length)? ;
 style-page-layout-properties-attlist ::= common-num-format-attlist? common-num-format-prefix-suffix-attlist ;
 style-page-layout-properties-attlist ::= (style:paper-tray-name::("default" | string))? ;
 style-page-layout-properties-attlist ::= (style:print-orientation::("portrait" | "landscape"))? ;
 style-page-layout-properties-attlist ::= common-horizontal-margin-attlist common-vertical-margin-attlist common-margin-attlist ;
 style-page-layout-properties-attlist ::= common-border-attlist ;
 style-page-layout-properties-attlist ::= common-border-line-width-attlist ;
 style-page-layout-properties-attlist ::= common-padding-attlist ;
 style-page-layout-properties-attlist ::= common-shadow-attlist ;
 style-page-layout-properties-attlist ::= common-background-color-attlist ;
 style-page-layout-properties-attlist ::= (style:register-truth-ref-style-name::styleNameRef)? ;
 style-page-layout-properties-attlist ::= (style:print::(("headers" | "grid" | "annotations" | "objects" | "charts" | "drawings" | "formulas" | "zero-values")*))? ;
 style-page-layout-properties-attlist ::= (style:print-page-order::("ttb" | "ltr"))? ;
 style-page-layout-properties-attlist ::= (style:first-page-number::(positiveInteger | "continue"))? ;
 style-page-layout-properties-attlist ::= (style:scale-to::percent)? (style:scale-to-pages::positiveInteger)? ;
 style-page-layout-properties-attlist ::= (style:table-centering::("horizontal" | "vertical" | "both" | "none"))? ;
 style-page-layout-properties-attlist ::= (style:footnote-max-height::length)? ;
 style-page-layout-properties-attlist ::= common-writing-mode-attlist ;
 style-page-layout-properties-attlist ::= (style:layout-grid-mode::("none" | "line" | "both"))? ;
 style-page-layout-properties-attlist ::= (style:layout-grid-base-height::length)? ;
 style-page-layout-properties-attlist ::= (style:layout-grid-ruby-height::length)? ;
 style-page-layout-properties-attlist ::= (style:layout-grid-lines::positiveInteger)? ;
 style-page-layout-properties-attlist ::= (style:layout-grid-color::color)? ;
 style-page-layout-properties-attlist ::= (style:layout-grid-ruby-below::boolean)? ;
 style-page-layout-properties-attlist ::= (style:layout-grid-print::boolean)? ;
 style-page-layout-properties-attlist ::= (style:layout-grid-display::boolean)? ;
draw-text-box-attlist ::= (draw:chain-next-name::string)? ;
 draw-text-box-attlist ::= (draw:corner-radius::nonNegativeLength)? ;
 draw-text-box-attlist ::= (fo:min-height::(length | percent))? (fo:min-width::(length | percent))? ;
 draw-text-box-attlist ::= (fo:max-height::(length | percent))? (fo:max-width::(length | percent))? ;
table-error-message ::= table:error-message::((table:title::string)? (table:display::boolean)? (table:message-type::("stop" | "warning" | "information"))? text-p*) ;
style-table-row-properties ::= style:table-row-properties::style-table-row-properties-content ;
style-paragraph-properties-attlist ::= (fo:line-height::("normal" | nonNegativeLength | percent))? ;
 style-paragraph-properties-attlist ::= (style:line-height-at-least::nonNegativeLength)? ;
 style-paragraph-properties-attlist ::= (style:line-spacing::length)? ;
 style-paragraph-properties-attlist ::= (style:font-independent-line-spacing::boolean)? ;
 style-paragraph-properties-attlist ::= common-text-align ;
 style-paragraph-properties-attlist ::= (fo:text-align-last::("start" | "center" | "justify"))? ;
 style-paragraph-properties-attlist ::= (style:justify-single-word::boolean)? ;
 style-paragraph-properties-attlist ::= (fo:keep-together::("auto" | "always"))? ;
 style-paragraph-properties-attlist ::= (fo:widows::nonNegativeInteger)? ;
 style-paragraph-properties-attlist ::= (fo:orphans::nonNegativeInteger)? ;
 style-paragraph-properties-attlist ::= (style:tab-stop-distance::nonNegativeLength)? ;
 style-paragraph-properties-attlist ::= (fo:hyphenation-keep::("auto" | "page"))? ;
 style-paragraph-properties-attlist ::= (fo:hyphenation-ladder-count::("no-limit" | positiveInteger))? ;
 style-paragraph-properties-attlist ::= (style:register-true::boolean)? ;
 style-paragraph-properties-attlist ::= common-horizontal-margin-attlist ;
 style-paragraph-properties-attlist ::= (fo:text-indent::(length | percent))? ;
 style-paragraph-properties-attlist ::= (style:auto-text-indent::boolean)? ;
 style-paragraph-properties-attlist ::= common-vertical-margin-attlist ;
 style-paragraph-properties-attlist ::= common-margin-attlist ;
 style-paragraph-properties-attlist ::= common-break-attlist ;
 style-paragraph-properties-attlist ::= common-background-color-attlist ;
 style-paragraph-properties-attlist ::= common-border-attlist ;
 style-paragraph-properties-attlist ::= common-border-line-width-attlist ;
 style-paragraph-properties-attlist ::= common-padding-attlist ;
 style-paragraph-properties-attlist ::= common-shadow-attlist ;
 style-paragraph-properties-attlist ::= common-keep-with-next-attlist ;
 style-paragraph-properties-attlist ::= (text:number-lines::boolean)? ;
 style-paragraph-properties-attlist ::= (text:line-number::nonNegativeInteger)? ;
 style-paragraph-properties-attlist ::= (style:text-autospace::("none" | "ideograph-alpha"))? ;
 style-paragraph-properties-attlist ::= (style:punctuation-wrap::("simple" | "hanging"))? ;
 style-paragraph-properties-attlist ::= (style:line-break::("normal" | "strict"))? ;
 style-paragraph-properties-attlist ::= (style:vertical-align::("top" | "middle" | "bottom" | "auto"))? ;
 style-paragraph-properties-attlist ::= common-writing-mode-attlist ;
 style-paragraph-properties-attlist ::= (style:writing-mode-automatic::boolean)? ;
 style-paragraph-properties-attlist ::= (style:snap-to-layout-grid::boolean)? ;
 style-paragraph-properties-attlist ::= common-page-number-attlist ;
 style-paragraph-properties-attlist ::= (style:background-transparency::percent)? ;
draw-regular-polygon ::= draw:regular-polygon::(draw-regular-polygon-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text) ;
table-table-row-group-attlist ::= (table:display::boolean)? ;
common-border-line-width-attlist ::= (style:border-line-width::borderWidths)? (style:border-line-width-top::borderWidths)? (style:border-line-width-bottom::borderWidths)? (style:border-line-width-left::borderWidths)? (style:border-line-width-right::borderWidths)? ;
draw-layer-attlist ::= draw:name::string ;
 draw-layer-attlist ::= (draw:protected::boolean)? ;
 draw-layer-attlist ::= (draw:display::("always" | "screen" | "printer" | "none"))? ;
draw-circle ::= draw:circle::(draw-circle-attlist common-draw-circle-ellipse-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text) ;
draw-page ::= draw:page::(common-presentation-header-footer-attlist draw-page-attlist office-forms? shape* (presentation-animations | animation-element)? presentation-notes?) ;
presentation-settings ::= (presentation:settings::(presentation-settings-attlist presentation-show*))? ;
text-table-index ::= text:table-index::(sectionAttr text-table-index-source text-index-body) ;
text-outline-level-style-attlist ::= text:level::positiveInteger ;
 text-outline-level-style-attlist ::= (text:style-name::styleNameRef)? ;
 text-outline-level-style-attlist ::= common-num-format-attlist common-num-format-prefix-suffix-attlist ;
 text-outline-level-style-attlist ::= (text:display-levels::positiveInteger)? ;
 text-outline-level-style-attlist ::= (text:start-value::positiveInteger)? ;
table-data-pilot-subtotal-attlist ::= table:function::("auto" | "average" | "count" | "countnums" | "max" | "min" | "product" | "stdev" | "stdevp" | "sum" | "var" | "varp" | string) ;
common-anim-values-attlist ::= (smil:values::string)? ;
 common-anim-values-attlist ::= (anim:formula::string)? ;
 common-anim-values-attlist ::= common-anim-set-values-attlist (smil:from::string)? (smil:by::string)? ;
table-table-template-attlist ::= text:name::string ;
 table-table-template-attlist ::= text:first-row-start-column::rowOrCol ;
 table-table-template-attlist ::= text:first-row-end-column::rowOrCol ;
 table-table-template-attlist ::= text:last-row-start-column::rowOrCol ;
 table-table-template-attlist ::= text:last-row-end-column::rowOrCol ;
draw-hatch-attlist ::= draw:name::styleName ;
 draw-hatch-attlist ::= (draw:display-name::string)? ;
 draw-hatch-attlist ::= draw:style::("single" | "double" | "triple") ;
 draw-hatch-attlist ::= (draw:color::color)? ;
 draw-hatch-attlist ::= (draw:distance::length)? ;
 draw-hatch-attlist ::= (draw:rotation::integer)? ;
presentation-settings-attlist ::= (presentation:start-page::string)? ;
 presentation-settings-attlist ::= (presentation:show::string)? ;
 presentation-settings-attlist ::= (presentation:full-screen::boolean)? ;
 presentation-settings-attlist ::= (presentation:endless::boolean)? ;
 presentation-settings-attlist ::= (presentation:pause::duration)? ;
 presentation-settings-attlist ::= (presentation:show-logo::boolean)? ;
 presentation-settings-attlist ::= (presentation:force-manual::boolean)? ;
 presentation-settings-attlist ::= (presentation:mouse-visible::boolean)? ;
 presentation-settings-attlist ::= (presentation:mouse-as-pen::boolean)? ;
 presentation-settings-attlist ::= (presentation:start-with-navigator::boolean)? ;
 presentation-settings-attlist ::= (presentation:animations::("enabled" | "disabled"))? ;
 presentation-settings-attlist ::= (presentation:transition-on-click::("enabled" | "disabled"))? ;
 presentation-settings-attlist ::= (presentation:stay-on-top::boolean)? ;
dr3d-light ::= dr3d:light::dr3d-light-attlist ;
number-day-of-week-attlist ::= (number:style::("short" | "long"))? ;
common-keep-with-next-attlist ::= (fo:keep-with-next::("auto" | "always"))? ;
common-text-anchor-attlist ::= (text:anchor-type::("page" | "frame" | "paragraph" | "char" | "as-char"))? ;
 common-text-anchor-attlist ::= (text:anchor-page-number::positiveInteger)? ;
presentation-show-shape ::= presentation:show-shape::(common-presentation-effect-attlist presentation-sound?) ;
table-sort-groups ::= table:sort-groups::table-sort-groups-attlist ;
text-object-index ::= text:object-index::(sectionAttr text-object-index-source text-index-body) ;
table-insertion-attlist ::= table:type::("row" | "column" | "table") ;
 table-insertion-attlist ::= table:position::integer ;
 table-insertion-attlist ::= (table:count::positiveInteger)? ;
 table-insertion-attlist ::= (table:table::integer)? ;
table-filter-and ::= table:filter-and::((table-filter-or | table-filter-condition)+) ;
office-document-common-attrs ::= (office:version::string)? ;
common-draw-style-name-attlist ::= ((draw:style-name::styleNameRef)? (draw:class-names::styleNameRefs)?) | ((presentation:style-name::styleNameRef)? (presentation:class-names::styleNameRefs)?) ;
text-bibliography-configuration-attlist ::= (text:prefix::string)? (text:suffix::string)? ;
 text-bibliography-configuration-attlist ::= (text:numbered-entries::boolean)? ;
 text-bibliography-configuration-attlist ::= (text:sort-by-position::boolean)? (fo:language::languageCode)? (fo:country::countryCode)? (text:sort-algorithm::string)? ;
chart-floor ::= chart:floor::chart-floor-attlist ;
office-master-styles ::= (office:master-styles::(style-master-page* style-handout-master? draw-layer-set?))? ;
table-table-header-rows ::= table:table-header-rows::(table-table-row+) ;
table-movement-cut-off-attlist ::= (table:position::integer) | (table:start-position::integer table:end-position::integer) ;
table-table-cell-attlist ::= (table:number-columns-repeated::positiveInteger)? ;
 table-table-cell-attlist ::= (table:style-name::styleNameRef)? ;
 table-table-cell-attlist ::= (table:content-validation-name::string)? ;
 table-table-cell-attlist ::= (table:formula::string)? ;
 table-table-cell-attlist ::= common-value-and-type-attlist? ;
 table-table-cell-attlist ::= (table:protect::boolean)? ;
style-list-level-properties ::= style:list-level-properties::style-list-level-properties-content ;
number-minutes-attlist ::= (number:style::("short" | "long"))? ;
table-change-deletion ::= table:change-deletion::((table:id::string)?) ;
table-data-pilot-layout-info-attlist ::= table:layout-mode::("tabular-layout" | "outline-subtotals-top" | "outline-subtotals-bottom") ;
 table-data-pilot-layout-info-attlist ::= table:add-empty-lines::boolean ;
table-filter-attlist ::= (table:target-range-address::cellRangeAddress)? ;
 table-filter-attlist ::= (table:condition-source::("self" | "cell-range"))? ;
 table-filter-attlist ::= (table:condition-source-range-address::cellRangeAddress)? ;
 table-filter-attlist ::= (table:display-duplicates::boolean)? ;
draw-ellipse-attlist ::= (svg:rx::length svg:ry::length)? ;
table-table-column-group ::= table:table-column-group::(table-table-column-group-attlist table-columns-and-groups) ;
text-index-entry-link-start ::= text:index-entry-link-start::((text:style-name::styleNameRef)?) ;
common-convert-empty-attlist ::= (form:convert-empty-to-null::boolean)? ;
table-last-row ::= table:last-row::common-table-template-attlist ;
style-style-content ::= style:family::"text" style-text-properties? ;
 style-style-content ::= style:family::"paragraph" style-paragraph-properties? style-text-properties? ;
 style-style-content ::= style:family::"section" style-section-properties? ;
 style-style-content ::= style:family::"ruby" style-ruby-properties? ;
 style-style-content ::= style:family::"table" style-table-properties? ;
 style-style-content ::= style:family::"table-column" style-table-column-properties? ;
 style-style-content ::= style:family::"table-row" style-table-row-properties? ;
 style-style-content ::= style:family::"table-cell" style-table-cell-properties? style-paragraph-properties? style-text-properties? ;
 style-style-content ::= style:family::("graphic" | "presentation") style-graphic-properties? style-paragraph-properties? style-text-properties? ;
 style-style-content ::= style:family::"drawing-page" style-drawing-page-properties? ;
 style-style-content ::= style:family::"chart" style-chart-properties? style-graphic-properties? style-paragraph-properties? style-text-properties? ;
common-format-source-attlist ::= (number:format-source::("fixed" | "language"))? ;
table-change-track-table-cell ::= table:change-track-table-cell::(table-change-track-table-cell-attlist text-p*) ;
text-list ::= text:list::(text-list-attr text-list-header? text-list-item*) ;
common-table-cell-address-attlist ::= table:column::integer table:row::integer table:table::integer ;
common-anim-set-values-attlist ::= (smil:to::string)? ;
table-table-column-group-attlist ::= (table:display::boolean)? ;
style-footer ::= style:footer::(common-style-header-footer-attlist header-footer-content) ;
text-bibliography-entry-template-attrs ::= text:bibliography-type::text-bibliography-types ;
 text-bibliography-entry-template-attrs ::= text:style-name::styleNameRef ;
number-year-attlist ::= (number:style::("short" | "long"))? ;
svg-font-face-format ::= svg:font-face-format::((svg:string::string())?) ;
style-map-attlist ::= style:condition::string ;
 style-map-attlist ::= style:apply-style-name::styleNameRef ;
 style-map-attlist ::= (style:base-cell-address::cellAddress)? ;
number-text ::= number:text::string() ;
text-index-entry-tab-stop ::= text:index-entry-tab-stop::((text:style-name::styleNameRef)? text-index-entry-tab-stop-attrs) ;
table-sort-attlist ::= (table:bind-styles-to-content::boolean)? ;
 table-sort-attlist ::= (table:target-range-address::cellRangeAddress)? ;
 table-sort-attlist ::= (table:case-sensitive::boolean)? ;
 table-sort-attlist ::= (table:language::languageCode)? ;
 table-sort-attlist ::= (table:country::countryCode)? ;
 table-sort-attlist ::= (table:algorithm::string)? ;
chart-chart ::= chart:chart::(chart-chart-attlist chart-title? chart-subtitle? chart-footer? chart-legend? chart-plot-area table-table?) ;
style-table-properties ::= style:table-properties::style-table-properties-content ;
office-spreadsheet-attlist ::= (table:structure-protected::boolean)? (table:protection-key::string)? ;
style-header-left ::= style:header-left::(common-style-header-footer-attlist header-footer-content) ;
common-value-type-attlist ::= office:value-type::valueType ;
common-field-database-name ::= (text:database-name::string)? ;
 common-field-database-name ::= form-connection-resource ;
chart-subtitle ::= chart:subtitle::(chart-title-attlist text-p?) ;
table-filter-condition ::= table:filter-condition::table-filter-condition-attlist ;
style-region-left ::= style:region-left::region-content ;
common-draw-position-attlist ::= (svg:x::coordinate)? (svg:y::coordinate)? ;
common-padding-attlist ::= (fo:padding::nonNegativeLength)? (fo:padding-top::nonNegativeLength)? (fo:padding-bottom::nonNegativeLength)? (fo:padding-left::nonNegativeLength)? (fo:padding-right::nonNegativeLength)? ;
draw-contour-path ::= draw:contour-path::(common-contour-attlist common-draw-size-attlist common-draw-viewbox-attlist common-draw-path-data-attlist) ;
style-table-properties-attlist ::= (style:width::positiveLength)? (style:rel-width::percent)? ;
 style-table-properties-attlist ::= (table:align::("left" | "center" | "right" | "margins"))? ;
 style-table-properties-attlist ::= common-horizontal-margin-attlist ;
 style-table-properties-attlist ::= common-vertical-margin-attlist ;
 style-table-properties-attlist ::= common-margin-attlist ;
 style-table-properties-attlist ::= common-page-number-attlist ;
 style-table-properties-attlist ::= common-break-attlist ;
 style-table-properties-attlist ::= common-background-color-attlist ;
 style-table-properties-attlist ::= common-shadow-attlist ;
 style-table-properties-attlist ::= common-keep-with-next-attlist ;
 style-table-properties-attlist ::= (style:may-break-between-rows::boolean)? ;
 style-table-properties-attlist ::= (table:border-model::("collapsing" | "separating"))? ;
 style-table-properties-attlist ::= common-writing-mode-attlist ;
 style-table-properties-attlist ::= (table:display::boolean)? ;
text-alphabetical-index-source-attrs ::= text-index-scope-attr text-relative-tab-stop-position-attr ;
 text-alphabetical-index-source-attrs ::= (text:ignore-case::boolean)? ;
 text-alphabetical-index-source-attrs ::= (text:main-entry-style-name::styleNameRef)? ;
 text-alphabetical-index-source-attrs ::= (text:alphabetical-separators::boolean)? ;
 text-alphabetical-index-source-attrs ::= (text:combine-entries::boolean)? (text:combine-entries-with-dash::boolean)? (text:combine-entries-with-pp::boolean)? ;
 text-alphabetical-index-source-attrs ::= (text:use-keys-as-entries::boolean)? ;
 text-alphabetical-index-source-attrs ::= (text:capitalize-entries::boolean)? ;
 text-alphabetical-index-source-attrs ::= (text:comma-separated::boolean)? ;
 text-alphabetical-index-source-attrs ::= (fo:language::languageCode)? ;
 text-alphabetical-index-source-attrs ::= (fo:country::countryCode)? ;
 text-alphabetical-index-source-attrs ::= (text:sort-algorithm::string)? ;
text-list-attr ::= (text:style-name::styleNameRef)? ;
 text-list-attr ::= (text:continue-numbering::boolean)? ;
form-form-attlist ::= (xlink:href::anyURI (xlink:type::"simple")? (xlink:actuate::"onRequest")?)? ;
 form-form-attlist ::= (office:target-frame::targetFrameName)? ;
 form-form-attlist ::= (form:method::("get" | "post" | string))? ;
 form-form-attlist ::= (form:enctype::string)? ;
 form-form-attlist ::= (form:allow-deletes::boolean)? ;
 form-form-attlist ::= (form:allow-inserts::boolean)? ;
 form-form-attlist ::= (form:allow-updates::boolean)? ;
 form-form-attlist ::= (form:apply-filter::boolean)? ;
 form-form-attlist ::= (form:command-type::("table" | "query" | "command"))? ;
 form-form-attlist ::= (form:command::string())? ;
 form-form-attlist ::= (form:datasource::(anyURI | string))? ;
 form-form-attlist ::= (form:master-fields::string)? ;
 form-form-attlist ::= (form:detail-fields::string)? ;
 form-form-attlist ::= (form:escape-processing::boolean)? ;
 form-form-attlist ::= (form:filter::string)? ;
 form-form-attlist ::= (form:ignore-result::boolean)? ;
 form-form-attlist ::= (form:navigation-mode::navigation)? ;
 form-form-attlist ::= (form:order::string)? ;
 form-form-attlist ::= (form:tab-cycle::tab-cycles)? ;
table-table-columns ::= table:table-columns::(table-table-column+) ;
text-tracked-changes-attr ::= (text:track-changes::boolean)? ;
table-table-header-columns ::= table:table-header-columns::(table-table-column+) ;
table-help-message ::= table:help-message::((table:title::string)? (table:display::boolean)? text-p*) ;
table-filter-or ::= table:filter-or::((table-filter-and | table-filter-condition)+) ;
common-printable-attlist ::= (form:printable::boolean)? ;
heading-attrs ::= text:outline-level::positiveInteger ;
 heading-attrs ::= (text:restart-numbering::boolean)? ;
 heading-attrs ::= (text:start-value::nonNegativeInteger)? ;
 heading-attrs ::= (text:is-list-header::boolean)? ;
table-data-pilot-sort-info-attlist ::= (table:sort-mode::"data" table:data-field::string) | (table:sort-mode::("none" | "manual" | "name")) ;
 table-data-pilot-sort-info-attlist ::= table:order::("ascending" | "descending") ;
common-time-manip-attlist ::= (smil:accelerate::double)? ;
 common-time-manip-attlist ::= (smil:decelerate::double)? ;
 common-time-manip-attlist ::= (smil:autoReverse::boolean)? ;
text-numbered-paragraph-attr ::= (text:level::positiveInteger)? ;
 text-numbered-paragraph-attr ::= text-list-attr ;
 text-numbered-paragraph-attr ::= text-list-item-attr ;
draw-glue-point-attlist ::= draw:id::nonNegativeInteger ;
 draw-glue-point-attlist ::= svg:x::(distance | percent) svg:y::(distance | percent) ;
 draw-glue-point-attlist ::= draw:align::("top-left" | "top" | "top-right" | "left" | "center" | "right" | "bottom-left" | "bottom-right") ;
table-data-pilot-field-attlist ::= table:source-field-name::string ;
 table-data-pilot-field-attlist ::= (table:orientation::("row" | "column" | "data" | "hidden")) | (table:orientation::"page" table:selected-page::string) ;
 table-data-pilot-field-attlist ::= (table:is-data-layout-field::string)? ;
 table-data-pilot-field-attlist ::= (table:function::("auto" | "average" | "count" | "countnums" | "max" | "min" | "product" | "stdev" | "stdevp" | "sum" | "var" | "varp" | string))? ;
 table-data-pilot-field-attlist ::= (table:used-hierarchy::integer)? ;
office-styles ::= (office:styles::(styles style-default-style* text-outline-style? text-notes-configuration* text-bibliography-configuration? text-linenumbering-configuration? draw-gradient* svg-linearGradient* svg-radialGradient* draw-hatch* draw-fill-image* draw-marker* draw-stroke-dash* draw-opacity* style-presentation-page-layout*))? ;
common-draw-viewbox-attlist ::= svg:viewBox::(integer integer integer integer) ;
table-table ::= table:table::(table-table-attlist table-table-source? office-dde-source? table-scenario? office-forms? table-shapes? table-columns-and-groups table-rows-and-groups) ;
style-footnote-sep ::= (style:footnote-sep::style-footnote-sep-attlist)? ;
style-header-style ::= style:header-style::(style-header-footer-properties?) ;
anim-audio-attlist ::= (xlink:href::anyURI)? ;
 anim-audio-attlist ::= (anim:audio-level::double)? ;
office-document ::= office:document::(office-document-attrs office-document-common-attrs office-meta office-settings office-scripts office-font-face-decls office-styles office-automatic-styles office-master-styles office-body) ;
number-day-attlist ::= (number:style::("short" | "long"))? ;
common-horizontal-margin-attlist ::= (fo:margin-left::(length | percent))? (fo:margin-right::(length | percent))? ;
text-user-index-entry-template-attrs ::= text:outline-level::positiveInteger ;
 text-user-index-entry-template-attrs ::= text:style-name::styleNameRef ;
text-page-continuation-attlist ::= text:select-page::("previous" | "next") ;
 text-page-continuation-attlist ::= (text:string-value::string)? ;
common-anim-add-accum-attlist ::= (smil:accumulate::("none" | "sum"))? ;
 common-anim-add-accum-attlist ::= (smil:additive::("replace" | "sum"))? ;
draw-applet ::= draw:applet::(draw-applet-attlist common-draw-data-attlist? draw-param*) ;
text-database-display-attlist ::= common-field-database-table ;
 text-database-display-attlist ::= common-field-data-style-name-attlist ;
 text-database-display-attlist ::= text:column-name::string ;
number-embedded-text-attlist ::= number:position::integer ;
style-master-page ::= style:master-page::(style-master-page-attlist (style-header style-header-left?)? (style-footer style-footer-left?)? office-forms? style-style* shape* presentation-notes?) ;
style-handout-master-attlist ::= (presentation:presentation-page-layout-name::styleNameRef)? ;
 style-handout-master-attlist ::= style:page-layout-name::styleNameRef ;
 style-handout-master-attlist ::= (draw:style-name::styleNameRef)? ;
text-linenumbering-separator ::= text:linenumbering-separator::((text:increment::nonNegativeInteger)? string()) ;
text-common-ref-content ::= string() ;
 text-common-ref-content ::= (text:ref-name::string)? ;
text-index-title ::= text:index-title::(sectionAttr index-content-main*) ;
office-script ::= office:script::(office-script-attlist string()? anyElements string()?) ;
text-alphabetical-index-entry-template-attrs ::= text:outline-level::("1" | "2" | "3" | "separator") ;
 text-alphabetical-index-entry-template-attrs ::= text:style-name::styleNameRef ;
presentation-play-attlist ::= draw:shape-id::IDREF (presentation:speed::presentationSpeeds)? ;
table-insertion-cut-off-attlist ::= table:id::string ;
 table-insertion-cut-off-attlist ::= table:position::integer ;
svg-radialGradient ::= svg:radialGradient::(common-svg-gradient-attlist (svg:cx::(coordinate | percent))? (svg:cy::(coordinate | percent))? (svg:r::(coordinate | percent))? (svg:fx::(coordinate | percent))? (svg:fy::(coordinate | percent))? svg-stop*) ;
common-anim-spline-mode-attlist ::= (smil:calcMode::("discrete" | "linear" | "paced" | "spline"))? ;
table-cell-range-source ::= table:cell-range-source::(table-table-cell-range-source-attlist table-linked-source-attlist) ;
draw-connector-attlist ::= (draw:type::("standard" | "lines" | "line" | "curve"))? ;
 draw-connector-attlist ::= (svg:x1::coordinate svg:y1::coordinate)? ;
 draw-connector-attlist ::= (draw:start-shape::IDREF)? ;
 draw-connector-attlist ::= (draw:start-glue-point::nonNegativeInteger)? ;
 draw-connector-attlist ::= (svg:x2::coordinate svg:y2::coordinate)? ;
 draw-connector-attlist ::= (draw:end-shape::IDREF)? ;
 draw-connector-attlist ::= (draw:end-glue-point::nonNegativeInteger)? ;
 draw-connector-attlist ::= (draw:line-skew::(length (length length?)?))? ;
table-highlighted-range-attlist ::= (table:cell-range-address::cellRangeAddress)? ;
 table-highlighted-range-attlist ::= table:direction::("from-another-table" | "to-another-table" | "from-same-table") ;
 table-highlighted-range-attlist ::= (table:contains-error::boolean)? ;
button-type ::= (form:button-type::types)? ;
table-null-date ::= table:null-date::((table:value-type::valueType)? (table:date-value-type::date)?) ;
svg-definition-src ::= svg:definition-src::common-svg-font-face-xlink-attlist ;
style-master-page-attlist ::= style:name::styleName ;
 style-master-page-attlist ::= (style:display-name::string)? ;
 style-master-page-attlist ::= style:page-layout-name::styleNameRef ;
 style-master-page-attlist ::= (draw:style-name::styleNameRef)? ;
 style-master-page-attlist ::= (style:next-style-name::styleNameRef)? ;
text-user-index ::= text:user-index::(sectionAttr text-user-index-source text-index-body) ;
number-month-attlist ::= (number:textual::boolean)? ;
 number-month-attlist ::= (number:possessive-form::boolean)? ;
 number-month-attlist ::= (number:style::("short" | "long"))? ;
chart-data-point-attlist ::= (chart:repeated::nonNegativeInteger)? ;
 chart-data-point-attlist ::= (chart:style-name::styleNameRef)? ;
text-index-entry-bibliography-attrs ::= (text:style-name::styleNameRef)? ;
 text-index-entry-bibliography-attrs ::= text:bibliography-data-field::("address" | "annote" | "author" | "bibliography-type" | "booktitle" | "chapter" | "custom1" | "custom2" | "custom3" | "custom4" | "custom5" | "edition" | "editor" | "howpublished" | "identifier" | "institution" | "isbn" | "issn" | "journal" | "month" | "note" | "number" | "organizations" | "pages" | "publisher" | "report-type" | "school" | "series" | "title" | "url" | "volume" | "year") ;
draw-marker ::= draw:marker::(draw-marker-attlist common-draw-viewbox-attlist common-draw-path-data-attlist) ;
common-data-style-attlist ::= style:name::styleName ;
 common-data-style-attlist ::= (number:language::languageCode)? ;
 common-data-style-attlist ::= (number:country::countryCode)? ;
 common-data-style-attlist ::= (number:title::string())? ;
 common-data-style-attlist ::= (style:volatile::boolean)? ;
 common-data-style-attlist ::= (number:transliteration-format::string)? ;
 common-data-style-attlist ::= (number:transliteration-language::countryCode)? ;
 common-data-style-attlist ::= (number:transliteration-country::countryCode)? ;
 common-data-style-attlist ::= (number:transliteration-style::("short" | "medium" | "long"))? ;
table-database-source-table-attlist ::= table:database-name::string ;
 table-database-source-table-attlist ::= table:database-table-name::string ;
dr3d-scene ::= dr3d:scene::(dr3d-scene-attlist common-draw-position-attlist common-draw-size-attlist common-draw-style-name-attlist common-draw-z-index-attlist common-draw-id-attlist common-draw-layer-name-attlist common-text-spreadsheet-shape-attlist common-dr3d-transform-attlist dr3d-light* shapes3d*) ;
dc-creator ::= dc:creator::string ;
image-data ::= (form:image-data::anyURI)? ;
chart-legend ::= chart:legend::chart-legend-attlist ;
number-scientific-number-attlist ::= (number:min-exponent-digits::integer)? ;
text-section-source-attr ::= (xlink:href::anyURI (xlink:type::"simple")? (xlink:show::"embed")?)? ;
 text-section-source-attr ::= (text:section-name::string)? ;
 text-section-source-attr ::= (text:filter-name::string)? ;
office-annotation-attlist ::= (office:display::boolean)? ;
common-dr3d-transform-attlist ::= (dr3d:transform::string())? ;
number-era ::= number:era::(number-era-attlist common-calendar-attlist) ;
dr3d-scene-attlist ::= (dr3d:vrp::vector3D)? (dr3d:vpn::vector3D)? (dr3d:vup::vector3D)? ;
 dr3d-scene-attlist ::= (dr3d:projection::("parallel" | "perspective"))? ;
 dr3d-scene-attlist ::= (dr3d:distance::length)? ;
 dr3d-scene-attlist ::= (dr3d:focal-length::length)? ;
 dr3d-scene-attlist ::= (dr3d:shadow-slant::nonNegativeInteger)? ;
 dr3d-scene-attlist ::= (dr3d:shade-mode::("flat" | "phong" | "gouraud" | "draft"))? ;
 dr3d-scene-attlist ::= (dr3d:ambient-color::color)? ;
 dr3d-scene-attlist ::= (dr3d:lighting-mode::boolean)? ;
draw-rect ::= draw:rect::(draw-rect-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text) ;
text-changed-region ::= text:changed-region::(text-changed-region-attr text-changed-region-content) ;
text-alphabetical-index-source ::= text:alphabetical-index-source::(text-alphabetical-index-source-attrs text-index-title-template? text-alphabetical-index-entry-template*) ;
common-draw-z-index-attlist ::= (draw:z-index::nonNegativeInteger)? ;
for ::= (form:for::string)? ;
table-dependencies ::= table:dependencies::(table-dependency+) ;
chart-grid-attlist ::= (chart:class::("major" | "minor"))? ;
 chart-grid-attlist ::= (chart:style-name::styleNameRef)? ;
table-target-range-address ::= table:target-range-address::common-table-range-attlist ;
style-graphic-properties-attlist ::= (draw:stroke::("none" | "dash" | "solid"))? ;
 style-graphic-properties-attlist ::= (draw:stroke-dash::styleNameRef)? ;
 style-graphic-properties-attlist ::= (draw:stroke-dash-names::styleNameRefs)? ;
 style-graphic-properties-attlist ::= (svg:stroke-width::length)? ;
 style-graphic-properties-attlist ::= (svg:stroke-color::color)? ;
 style-graphic-properties-attlist ::= (draw:marker-start::styleNameRef)? ;
 style-graphic-properties-attlist ::= (draw:marker-end::styleNameRef)? ;
 style-graphic-properties-attlist ::= (draw:marker-start-width::length)? ;
 style-graphic-properties-attlist ::= (draw:marker-end-width::length)? ;
 style-graphic-properties-attlist ::= (draw:marker-start-center::boolean)? ;
 style-graphic-properties-attlist ::= (draw:marker-end-center::boolean)? ;
 style-graphic-properties-attlist ::= (svg:stroke-opacity::(string() | percent))? ;
 style-graphic-properties-attlist ::= (draw:stroke-linejoin::("miter" | "round" | "bevel" | "middle" | "none" | "inherit"))? ;
 style-graphic-properties-attlist ::= (draw:symbol-color::color)? ;
 style-graphic-properties-attlist ::= (text:animation::("none" | "scroll" | "alternate" | "slide"))? ;
 style-graphic-properties-attlist ::= (text:animation-direction::("left" | "right" | "up" | "down"))? ;
 style-graphic-properties-attlist ::= (text:animation-start-inside::boolean)? ;
 style-graphic-properties-attlist ::= (text:animation-stop-inside::boolean)? ;
 style-graphic-properties-attlist ::= (text:animation-repeat::nonNegativeInteger)? ;
 style-graphic-properties-attlist ::= (text:animation-delay::duration)? ;
 style-graphic-properties-attlist ::= (text:animation-steps::length)? ;
 style-graphic-properties-attlist ::= (draw:auto-grow-width::boolean)? (draw:auto-grow-height::boolean)? ;
 style-graphic-properties-attlist ::= (draw:fit-to-size::boolean)? ;
 style-graphic-properties-attlist ::= (draw:fit-to-contour::boolean)? ;
 style-graphic-properties-attlist ::= (draw:textarea-vertical-align::("top" | "middle" | "bottom" | "justify"))? ;
 style-graphic-properties-attlist ::= (draw:textarea-horizontal-align::("left" | "center" | "right" | "justify"))? ;
 style-graphic-properties-attlist ::= (fo:wrap-option::("no-wrap" | "wrap"))? ;
 style-graphic-properties-attlist ::= (draw:color-mode::("greyscale" | "mono" | "watermark" | "standard"))? ;
 style-graphic-properties-attlist ::= (draw:color-inversion::boolean)? ;
 style-graphic-properties-attlist ::= (draw:luminance::percent)? ;
 style-graphic-properties-attlist ::= (draw:contrast::percent)? ;
 style-graphic-properties-attlist ::= (draw:gamma::percent)? ;
 style-graphic-properties-attlist ::= (draw:red::percent)? ;
 style-graphic-properties-attlist ::= (draw:green::percent)? ;
 style-graphic-properties-attlist ::= (draw:blue::percent)? ;
 style-graphic-properties-attlist ::= (draw:image-opacity::percent)? ;
 style-graphic-properties-attlist ::= (draw:shadow::("visible" | "hidden"))? ;
 style-graphic-properties-attlist ::= (draw:shadow-offset-x::length)? (draw:shadow-offset-y::length)? ;
 style-graphic-properties-attlist ::= (draw:shadow-color::color)? ;
 style-graphic-properties-attlist ::= (draw:shadow-opacity::percent)? ;
 style-graphic-properties-attlist ::= (draw:start-line-spacing-horizontal::distance)? (draw:start-line-spacing-vertical::distance)? ;
 style-graphic-properties-attlist ::= (draw:end-line-spacing-horizontal::distance)? (draw:end-line-spacing-vertical::distance)? ;
 style-graphic-properties-attlist ::= (draw:line-distance::distance)? ;
 style-graphic-properties-attlist ::= (draw:guide-overhang::length)? ;
 style-graphic-properties-attlist ::= (draw:guide-distance::distance)? ;
 style-graphic-properties-attlist ::= (draw:start-guide::length)? ;
 style-graphic-properties-attlist ::= (draw:end-guide::length)? ;
 style-graphic-properties-attlist ::= (draw:placing::("below" | "above"))? ;
 style-graphic-properties-attlist ::= (draw:parallel::boolean)? ;
 style-graphic-properties-attlist ::= (draw:measure-align::("automatic" | "left-outside" | "inside" | "right-outside"))? (draw:measure-vertical-align::("automatic" | "above" | "below" | "center"))? ;
 style-graphic-properties-attlist ::= (draw:unit::("automatic" | "mm" | "cm" | "m" | "km" | "pt" | "pc" | "inch" | "ft" | "mi"))? ;
 style-graphic-properties-attlist ::= (draw:show-unit::boolean)? ;
 style-graphic-properties-attlist ::= (draw:decimal-places::nonNegativeInteger)? ;
 style-graphic-properties-attlist ::= (draw:caption-type::("straight-line" | "angled-line" | "angled-connector-line"))? ;
 style-graphic-properties-attlist ::= (draw:caption-angle-type::("fixed" | "free"))? ;
 style-graphic-properties-attlist ::= (draw:caption-angle::nonNegativeInteger)? ;
 style-graphic-properties-attlist ::= (draw:caption-gap::distance)? ;
 style-graphic-properties-attlist ::= (draw:caption-escape-direction::("horizontal" | "vertical" | "auto"))? ;
 style-graphic-properties-attlist ::= (draw:caption-escape::(length | percent))? ;
 style-graphic-properties-attlist ::= (draw:caption-line-length::length)? ;
 style-graphic-properties-attlist ::= (draw:caption-fit-line-length::boolean)? ;
 style-graphic-properties-attlist ::= (dr3d:horizontal-segments::nonNegativeInteger)? ;
 style-graphic-properties-attlist ::= (dr3d:vertical-segments::nonNegativeInteger)? ;
 style-graphic-properties-attlist ::= (dr3d:edge-rounding::percent)? ;
 style-graphic-properties-attlist ::= (dr3d:edge-rounding-mode::("correct" | "attractive"))? ;
 style-graphic-properties-attlist ::= (dr3d:back-scale::percent)? ;
 style-graphic-properties-attlist ::= (dr3d:depth::length)? ;
 style-graphic-properties-attlist ::= (dr3d:backface-culling::("enabled" | "disabled"))? ;
 style-graphic-properties-attlist ::= (dr3d:end-angle::nonNegativeInteger)? ;
 style-graphic-properties-attlist ::= (dr3d:close-front::boolean)? ;
 style-graphic-properties-attlist ::= (dr3d:close-back::boolean)? ;
 style-graphic-properties-attlist ::= (dr3d:lighting-mode::("standard" | "double-sided"))? ;
 style-graphic-properties-attlist ::= (dr3d:normals-kind::("object" | "flat" | "sphere"))? ;
 style-graphic-properties-attlist ::= (dr3d:normals-direction::("normal" | "inverse"))? ;
 style-graphic-properties-attlist ::= (dr3d:texture-generation-mode-x::("object" | "parallel" | "sphere"))? (dr3d:texture-generation-mode-y::("object" | "parallel" | "sphere"))? ;
 style-graphic-properties-attlist ::= (dr3d:texture-kind::("luminance" | "intesity" | "color"))? ;
 style-graphic-properties-attlist ::= (dr3d:texture-filter::("enabled" | "disabled"))? ;
 style-graphic-properties-attlist ::= (dr3d:texture-mode::("replace" | "modulate" | "blend"))? ;
 style-graphic-properties-attlist ::= (dr3d:ambient-color::color)? (dr3d:emissive-color::color)? (dr3d:specular-color::color)? (dr3d:diffuse-color::color)? ;
 style-graphic-properties-attlist ::= (dr3d:shininess::percent)? ;
 style-graphic-properties-attlist ::= (dr3d:shadow::("visible" | "hidden"))? ;
 style-graphic-properties-attlist ::= common-draw-rel-size-attlist (fo:min-width::(length | percent))? ;
 style-graphic-properties-attlist ::= (fo:min-height::(length | percent))? ;
 style-graphic-properties-attlist ::= (fo:max-height::(length | percent))? (fo:max-width::(length | percent))? ;
 style-graphic-properties-attlist ::= common-horizontal-margin-attlist ;
 style-graphic-properties-attlist ::= common-vertical-margin-attlist ;
 style-graphic-properties-attlist ::= common-margin-attlist ;
 style-graphic-properties-attlist ::= (style:print-content::boolean)? ;
 style-graphic-properties-attlist ::= (style:protect::("none" | (("content" | "position" | "size")+)))? ;
 style-graphic-properties-attlist ::= (style:horizontal-pos::("left" | "center" | "right" | "from-left" | "inside" | "outside" | "from-inside"))? (svg:x::coordinate)? ;
 style-graphic-properties-attlist ::= (style:horizontal-rel::("page" | "page-content" | "page-start-margin" | "page-end-margin" | "frame" | "frame-content" | "frame-start-margin" | "frame-end-margin" | "paragraph" | "paragraph-content" | "paragraph-start-margin" | "paragraph-end-margin" | "char"))? ;
 style-graphic-properties-attlist ::= common-vertical-pos-attlist ;
 style-graphic-properties-attlist ::= common-vertical-rel-attlist ;
 style-graphic-properties-attlist ::= common-text-anchor-attlist ;
 style-graphic-properties-attlist ::= common-border-attlist ;
 style-graphic-properties-attlist ::= common-border-line-width-attlist ;
 style-graphic-properties-attlist ::= common-padding-attlist ;
 style-graphic-properties-attlist ::= common-shadow-attlist ;
 style-graphic-properties-attlist ::= common-background-color-attlist ;
 style-graphic-properties-attlist ::= (style:editable::boolean)? ;
 style-graphic-properties-attlist ::= (style:wrap::("none" | "left" | "right" | "parallel" | "dynamic" | "run-through" | "biggest"))? ;
 style-graphic-properties-attlist ::= (style:wrap-dynamic-treshold::nonNegativeLength)? ;
 style-graphic-properties-attlist ::= (style:number-wrapped-paragraphs::("no-limit" | positiveInteger))? ;
 style-graphic-properties-attlist ::= (style:wrap-contour::boolean)? ;
 style-graphic-properties-attlist ::= (style:wrap-contour-mode::("full" | "outside"))? ;
 style-graphic-properties-attlist ::= (style:run-through::("foreground" | "background"))? ;
 style-graphic-properties-attlist ::= (style:flow-with-text::boolean)? ;
 style-graphic-properties-attlist ::= (style:overflow-behavior::("clip" | "auto-create-new-frame"))? ;
 style-graphic-properties-attlist ::= (style:mirror::("none" | "vertical" | horizontal-mirror | ("vertical" horizontal-mirror) | (horizontal-mirror "vertical")))? ;
 style-graphic-properties-attlist ::= (fo:clip::string)? ;
 style-graphic-properties-attlist ::= (draw:wrap-influence-on-position::("iterative" | "once-concurrent" | "once-successive"))? ;
 style-graphic-properties-attlist ::= (draw:frame-display-scrollbar::boolean)? ;
 style-graphic-properties-attlist ::= (draw:frame-display-border::boolean)? ;
 style-graphic-properties-attlist ::= (draw:frame-margin-horizontal::nonNegativePixelLength)? (draw:frame-margin-vertical::nonNegativePixelLength)? ;
 style-graphic-properties-attlist ::= (draw:visible-area-left::nonNegativeLength)? (draw:visible-area-top::nonNegativeLength)? (draw:visible-area-width::positiveLength)? (draw:visible-area-height::positiveLength)? ;
 style-graphic-properties-attlist ::= (draw:ole-draw-aspect::nonNegativeInteger)? ;
office-font-face-decls ::= (office:font-face-decls::(style-font-face*))? ;
office-document-styles ::= office:document-styles::(office-document-common-attrs office-font-face-decls office-styles office-automatic-styles office-master-styles) ;
table-subtotal-field-attlist ::= table:field-number::nonNegativeInteger ;
 table-subtotal-field-attlist ::= table:function::("auto" | "average" | "count" | "countnums" | "max" | "min" | "product" | "stdev" | "stdevp" | "sum" | "var" | "varp" | string) ;
text-hidden-text-attlist ::= text:condition::formula ;
 text-hidden-text-attlist ::= text:string-value::string ;
 text-hidden-text-attlist ::= (text:is-hidden::boolean)? ;
form-property ::= form:property::(form-property-name form-property-value-and-type-attlist) ;
 form-property ::= form:list-property::(form-property-name form-property-type-and-value-list) ;
table-named-expression-attlist ::= table:name::string table:expression::string (table:base-cell-address::cellAddress)? ;
script-event-listener-attlist ::= script:event-name::string ;
 script-event-listener-attlist ::= script:language::string ;
 script-event-listener-attlist ::= (script:macro-name::string) | (xlink:href::anyURI (xlink:type::"simple")? (xlink:actuate::"onRequest")?) ;
text-variable-decl ::= text:variable-decl::(common-field-name-attlist common-value-type-attlist) ;
draw-fill-image ::= draw:fill-image::(draw-fill-image-attlist xlink:href::anyURI (xlink:type::"simple")? (xlink:show::"embed")? (xlink:actuate::"onLoad")?) ;
office-document-content ::= office:document-content::(office-document-common-attrs office-scripts office-font-face-decls office-automatic-styles office-body) ;
anim-animate-transform-attlist ::= svg:type::("translate" | "scale" | "rotate" | "skewX" | "skewY") ;
draw-param-attlist ::= (draw:name::string())? ;
 draw-param-attlist ::= (draw:value::string())? ;
common-begin-end-timing-attlist ::= (smil:begin::string)? ;
 common-begin-end-timing-attlist ::= (smil:end::string)? ;
common-presentation-effect-attlist ::= draw:shape-id::IDREF ;
 common-presentation-effect-attlist ::= (presentation:effect::presentationEffects)? ;
 common-presentation-effect-attlist ::= (presentation:direction::presentationEffectDirections)? ;
 common-presentation-effect-attlist ::= (presentation:speed::presentationSpeeds)? ;
 common-presentation-effect-attlist ::= (presentation:delay::duration)? ;
 common-presentation-effect-attlist ::= (presentation:start-scale::percent)? ;
 common-presentation-effect-attlist ::= (presentation:path-id::string())? ;
style-columns-attlist ::= fo:column-count::positiveInteger ;
 style-columns-attlist ::= (fo:column-gap::length)? ;
text-a-attlist ::= (office:name::string)? ;
 text-a-attlist ::= xlink:href::anyURI (xlink:type::"simple")? (xlink:actuate::"onRequest")? ;
 text-a-attlist ::= (office:target-frame-name::targetFrameName)? (xlink:show::("new" | "replace"))? ;
 text-a-attlist ::= (text:style-name::styleNameRef)? (text:visited-style-name::styleNameRef)? ;
config-config-item ::= config:config-item::(config-config-item-attlist string()) ;
table-first-column ::= table:first-column::common-table-template-attlist ;
style-header-footer-attlist ::= (style:dynamic-spacing::boolean)? ;
style-graphic-fill-properties-attlist ::= (draw:fill::("none" | "solid" | "bitmap" | "gradient" | "hatch"))? ;
 style-graphic-fill-properties-attlist ::= (draw:fill-color::color)? ;
 style-graphic-fill-properties-attlist ::= (draw:secondary-fill-color::color)? ;
 style-graphic-fill-properties-attlist ::= (draw:fill-gradient-name::styleNameRef)? ;
 style-graphic-fill-properties-attlist ::= (draw:gradient-step-count::nonNegativeInteger)? ;
 style-graphic-fill-properties-attlist ::= (draw:fill-hatch-name::styleNameRef)? ;
 style-graphic-fill-properties-attlist ::= (draw:fill-hatch-solid::boolean)? ;
 style-graphic-fill-properties-attlist ::= (draw:fill-image-name::styleNameRef)? ;
 style-graphic-fill-properties-attlist ::= (style:repeat::("no-repeat" | "repeat" | "stretch"))? ;
 style-graphic-fill-properties-attlist ::= (draw:fill-image-width::(length | percent))? (draw:fill-image-height::(length | percent))? ;
 style-graphic-fill-properties-attlist ::= (draw:fill-image-ref-point-x::percent)? (draw:fill-image-ref-point-y::percent)? (draw:fill-image-ref-point::("top-left" | "top" | "top-right" | "left" | "center" | "right" | "bottom-left" | "bottom" | "bottom-right"))? ;
 style-graphic-fill-properties-attlist ::= (draw:tile-repeat-offset::string())? ;
 style-graphic-fill-properties-attlist ::= (draw:opacity::percent)? ;
 style-graphic-fill-properties-attlist ::= (draw:opacity-name::styleNameRef)? ;
 style-graphic-fill-properties-attlist ::= (svg:fill-rule::("nonzero" | "evenodd"))? ;
common-draw-rel-size-attlist ::= common-draw-size-attlist (style:rel-width::(percent | "scale" | "scale-min"))? (style:rel-height::(percent | "scale" | "scale-min"))? ;
table-cut-offs ::= table:cut-offs::((table-movement-cut-off+) | (table-insertion-cut-off table-movement-cut-off*)) ;
dr3d-sphere-attlist ::= (dr3d:center::vector3D)? ;
 dr3d-sphere-attlist ::= (dr3d:size::vector3D)? ;
draw-fill-image-attlist ::= draw:name::styleName ;
 draw-fill-image-attlist ::= (draw:display-name::string)? ;
 draw-fill-image-attlist ::= (svg:width::length)? (svg:height::length)? ;
common-dur-timing-attlist ::= (smil:dur::string)? ;
chart-mean-value-attlist ::= (chart:style-name::styleNameRef)? ;
style-text-properties-attlist ::= (fo:font-variant::fontVariant)? ;
 style-text-properties-attlist ::= (fo:text-transform::("none" | "lowercase" | "uppercase" | "capitalize"))? ;
 style-text-properties-attlist ::= (fo:color::color)? ;
 style-text-properties-attlist ::= (style:use-window-font-color::boolean)? ;
 style-text-properties-attlist ::= (style:text-outline::boolean)? ;
 style-text-properties-attlist ::= (style:text-line-through-type::lineType)? ;
 style-text-properties-attlist ::= (style:text-line-through-style::lineStyle)? ;
 style-text-properties-attlist ::= (style:text-line-through-width::lineWidth)? ;
 style-text-properties-attlist ::= (style:text-line-through-color::("font-color" | color))? ;
 style-text-properties-attlist ::= (style:text-line-through-text::string)? ;
 style-text-properties-attlist ::= (style:text-line-through-text-style::styleNameRef)? ;
 style-text-properties-attlist ::= (style:text-position::(percent | "super" | "sub" percent?))? ;
 style-text-properties-attlist ::= (style:font-name::string)? (style:font-name-asian::string)? (style:font-name-complex::string)? ;
 style-text-properties-attlist ::= (fo:font-family::string)? (style:font-family-asian::string)? (style:font-family-complex::string)? ;
 style-text-properties-attlist ::= (style:font-family-generic::fontFamilyGeneric)? (style:font-family-generic-asian::fontFamilyGeneric)? (style:font-family-generic-complex::fontFamilyGeneric)? ;
 style-text-properties-attlist ::= (style:font-style-name::string)? (style:font-style-name-asian::string)? (style:font-style-name-complex::string)? ;
 style-text-properties-attlist ::= (style:font-pitch::fontPitch)? (style:font-pitch-asian::fontPitch)? (style:font-pitch-complex::fontPitch)? ;
 style-text-properties-attlist ::= (style:font-charset::textEncoding)? ;
 style-text-properties-attlist ::= (fo:font-size::(positiveLength | percent))? (style:font-size-asian::(positiveLength | percent))? (style:font-size-complex::(positiveLength | percent))? ;
 style-text-properties-attlist ::= (style:font-size-rel::length)? (style:font-size-rel-asian::length)? (style:font-size-rel-complex::length)? ;
 style-text-properties-attlist ::= (style:script-type::("latin" | "asian" | "complex" | "ignore"))? ;
 style-text-properties-attlist ::= (fo:letter-spacing::(length | "normal"))? ;
 style-text-properties-attlist ::= (fo:language::languageCode)? (style:language-asian::languageCode)? (style:language-complex::languageCode)? ;
 style-text-properties-attlist ::= (fo:country::countryCode)? (style:country-asian::countryCode)? (style:country-complex::countryCode)? ;
 style-text-properties-attlist ::= (fo:font-style::fontStyle)? (style:font-style-asian::fontStyle)? (style:font-style-complex::fontStyle)? ;
 style-text-properties-attlist ::= (style:font-relief::("none" | "embossed" | "engraved"))? ;
 style-text-properties-attlist ::= (fo:text-shadow::shadowType)? ;
 style-text-properties-attlist ::= (style:text-underline-type::lineType)? ;
 style-text-properties-attlist ::= (style:text-underline-style::lineStyle)? ;
 style-text-properties-attlist ::= (style:text-underline-width::lineWidth)? ;
 style-text-properties-attlist ::= (style:text-underline-color::("font-color" | color))? ;
 style-text-properties-attlist ::= (fo:font-weight::fontWeight)? (style:font-weight-asian::fontWeight)? (style:font-weight-complex::fontWeight)? ;
 style-text-properties-attlist ::= (style:text-underline-mode::lineMode)? ;
 style-text-properties-attlist ::= (style:text-line-through-mode::lineMode)? ;
 style-text-properties-attlist ::= (style:letter-kerning::boolean)? ;
 style-text-properties-attlist ::= (style:text-blinking::boolean)? ;
 style-text-properties-attlist ::= common-background-color-attlist ;
 style-text-properties-attlist ::= (style:text-combine::("none" | "letters" | "lines"))? ;
 style-text-properties-attlist ::= (style:text-combine-start-char::character)? (style:text-combine-end-char::character)? ;
 style-text-properties-attlist ::= (style:text-emphasize::("none" | ("none" | "accent" | "dot" | "circle" | "disc" "above" | "below")))? ;
 style-text-properties-attlist ::= (style:text-scale::percent)? ;
 style-text-properties-attlist ::= (style:text-rotation-angle::integer)? ;
 style-text-properties-attlist ::= (style:text-rotation-scale::("fixed" | "line-height"))? ;
 style-text-properties-attlist ::= (fo:hyphenate::boolean)? ;
 style-text-properties-attlist ::= (fo:hyphenation-remain-char-count::positiveInteger)? ;
 style-text-properties-attlist ::= (fo:hyphenation-push-char-count::positiveInteger)? ;
 style-text-properties-attlist ::= (text:display::"true") | (text:display::"none") | (text:display::"condition" text:condition::"none") | ε ;
presentation-header-decl-attlist ::= presentation:name::string ;
number-time-style-attlist ::= (number:truncate-on-overflow::boolean)? ;
office-dde-source-attlist ::= (office:name::string)? ;
 office-dde-source-attlist ::= (office:conversion-mode::("into-default-style-data-style" | "into-english-number" | "keep-text"))? ;
text-object-index-source ::= text:object-index-source::(text-object-index-source-attrs text-index-title-template? text-object-index-entry-template?) ;
text-dde-connection-decl-attlist ::= office:name::string ;
text-section-source ::= text:section-source::text-section-source-attr ;
draw-image-map ::= draw:image-map::((draw-area-rectangle | draw-area-circle | draw-area-polygon)*) ;
table-data-pilot-group-member ::= table:data-pilot-group-member::table-data-pilot-group-member-attlist ;
office-meta-data ::= meta:generator::string ;
 office-meta-data ::= dc:title::string ;
 office-meta-data ::= dc:description::string ;
 office-meta-data ::= dc:subject::string ;
 office-meta-data ::= meta:keyword::string ;
 office-meta-data ::= meta:initial-creator::string ;
 office-meta-data ::= dc-creator ;
 office-meta-data ::= meta:printed-by::string ;
 office-meta-data ::= meta:creation-date::dateTime ;
 office-meta-data ::= dc-date ;
 office-meta-data ::= meta:print-date::dateTime ;
 office-meta-data ::= meta:template::(xlink:href::anyURI (xlink:type::"simple")? (xlink:actuate::"onRequest")? (xlink:title::string)? (meta:date::dateTime)?) ;
 office-meta-data ::= meta:auto-reload::((xlink:type::"simple")? (xlink:show::"replace")? (xlink:actuate::"onLoad")? (xlink:href::anyURI)? (meta:delay::duration)?) ;
 office-meta-data ::= meta:hyperlink-behaviour::((office:target-frame-name::targetFrameName)? (xlink:show::("new" | "replace"))?) ;
 office-meta-data ::= dc:language::language ;
 office-meta-data ::= meta:editing-cycles::nonNegativeInteger ;
 office-meta-data ::= meta:editing-duration::duration ;
 office-meta-data ::= meta:document-statistic::((meta:page-count::nonNegativeInteger)? (meta:table-count::nonNegativeInteger)? (meta:draw-count::nonNegativeInteger)? (meta:image-count::nonNegativeInteger)? (meta:ole-object-count::nonNegativeInteger)? (meta:paragraph-count::nonNegativeInteger)? (meta:word-count::nonNegativeInteger)? (meta:character-count::nonNegativeInteger)? (frame-count::nonNegativeInteger)? (sentence-count::nonNegativeInteger)? (syllable-count::nonNegativeInteger)? (non-whitespace-character-count::nonNegativeInteger)? (meta:row-count::nonNegativeInteger)? (meta:cell-count::nonNegativeInteger)? (meta:object-count::nonNegativeInteger)?) ;
 office-meta-data ::= meta:user-defined::(meta:name::string (meta:value-type::"float" double) | (meta:value-type::"date" dateOrDateTime) | (meta:value-type::"time" duration) | (meta:value-type::"boolean" boolean) | (meta:value-type::"string" string) | string()) ;
office-document-attrs ::= office:mimetype::string ;
draw-enhanced-geometry ::= draw:enhanced-geometry::(draw-enhanced-geometry-attlist draw-equation* draw-handle*) ;
text-bibliography-entry-template ::= text:bibliography-entry-template::(text-bibliography-entry-template-attrs (text-index-entry-span | text-index-entry-tab-stop | text-index-entry-bibliography)*) ;
style-region-right ::= style:region-right::region-content ;
table-data-pilot-field-reference ::= table:data-pilot-field-reference::table-data-pilot-field-reference-attlist ;
text-ref-content ::= (text:reference-format::("page" | "chapter" | "direction" | "text"))? ;
text-chapter-attlist ::= text:display::("name" | "number" | "number-and-name" | "plain-number-and-name" | "plain-number") ;
 text-chapter-attlist ::= text:outline-level::nonNegativeInteger ;
text-page-sequence ::= text:page-sequence::(text-page+) ;
form-checkbox-attlist ::= form-control-attlist common-disabled-attlist label common-printable-attlist common-tab-attlist common-title-attlist common-value-attlist common-data-field-attlist common-form-visual-effect-attlist common-form-relative-image-position-attlist ;
 form-checkbox-attlist ::= (form:current-state::states)? ;
 form-checkbox-attlist ::= (form:is-tristate::boolean)? ;
 form-checkbox-attlist ::= (form:state::states)? ;
draw-layer-set ::= draw:layer-set::(draw-layer*) ;
text-hidden-paragraph-attlist ::= text:condition::formula ;
 text-hidden-paragraph-attlist ::= (text:is-hidden::boolean)? ;
common-draw-points-attlist ::= draw:points::points ;
presentation-sound ::= presentation:sound::(presentation-sound-attlist xlink:href::anyURI (xlink:type::"simple")? (xlink:actuate::"onRequest")? (xlink:show::("new" | "replace"))?) ;
chart-error-indicator ::= chart:error-indicator::chart-error-indicator-attlist ;
chart-title-attlist ::= (table:cell-range::cellAddress)? ;
 chart-title-attlist ::= common-draw-position-attlist ;
 chart-title-attlist ::= (chart:style-name::styleNameRef)? ;
style-background-image ::= (style:background-image::(style-background-image-attlist common-draw-data-attlist | office-binary-data | ε))? ;
dr3d-cube-attlist ::= (dr3d:min-edge::vector3D)? (dr3d:max-edge::vector3D)? ;
form-property-type-and-value-list ::= (office:value-type::"float" (form:list-value::(office:value::double))*) | (office:value-type::"percentage" (form:list-value::(office:value::double))*) | (office:value-type::"currency" (form:list-value::(office:value::double (office:currency::string)?))*) | (office:value-type::"date" (form:list-value::(office:date-value::dateOrDateTime))*) | (office:value-type::"time" (form:list-value::(office:time-value::duration))*) | (office:value-type::"boolean" (form:list-value::(office:boolean-value::boolean))*) | (office:value-type::"string" (form:list-value::(office:string-value::string))*) | (office:value-type::"void") ;
xforms-model ::= xforms:model::anyAttListOrElements ;
table-dde-links ::= table:dde-links::(table-dde-link+) ;
style-drop-cap ::= (style:drop-cap::style-drop-cap-attlist)? ;
draw-floating-frame ::= draw:floating-frame::(draw-floating-frame-attlist common-draw-data-attlist) ;
common-writing-mode-attlist ::= (style:writing-mode::("lr-tb" | "rl-tb" | "tb-rl" | "tb-lr" | "lr" | "rl" | "tb" | "page"))? ;
text-illustration-index-source-attrs ::= text-index-scope-attr ;
 text-illustration-index-source-attrs ::= text-relative-tab-stop-position-attr ;
 text-illustration-index-source-attrs ::= (text:use-caption::boolean)? ;
 text-illustration-index-source-attrs ::= (text:caption-sequence-name::string)? ;
 text-illustration-index-source-attrs ::= (text:caption-sequence-format::("text" | "category-and-value" | "caption"))? ;
xforms-bind-attlist ::= (xforms:bind::string)? ;
draw-opacity ::= draw:opacity::(common-draw-gradient-attlist draw-opacity-attlist) ;
table-linked-source-attlist ::= (xlink:type::"simple")? (xlink:actuate::"onRequest")? xlink:href::anyURI ;
 table-linked-source-attlist ::= (table:filter-name::string)? ;
 table-linked-source-attlist ::= (table:filter-options::string)? ;
 table-linked-source-attlist ::= (table:refresh-delay::duration)? ;
form-column ::= form:column::(form-column-attlist column-controls+) ;
table-data-pilot-groups-attlist ::= table:source-field-name::string ;
 table-data-pilot-groups-attlist ::= (table:date-start::(dateOrDateTime | "auto")) | (table:start::(double | "auto")) ;
 table-data-pilot-groups-attlist ::= (table:date-end::(dateOrDateTime | "auto")) | (table:end::(double | "auto")) ;
 table-data-pilot-groups-attlist ::= table:step::double ;
 table-data-pilot-groups-attlist ::= table:grouped-by::("seconds" | "minutes" | "hours" | "days" | "months" | "quarters" | "years") ;
text-outline-level-style ::= text:outline-level-style::(text-outline-level-style-attlist style-list-level-properties? style-text-properties?) ;
table-data-pilot-subtotal ::= table:data-pilot-subtotal::table-data-pilot-subtotal-attlist ;
text-note-class ::= text:note-class::("footnote" | "endnote") ;
text-list-style-attr ::= style:name::styleName ;
 text-list-style-attr ::= (style:display-name::string)? ;
 text-list-style-attr ::= (text:consecutive-numbering::boolean)? ;
common-presentation-header-footer-attlist ::= (presentation:use-header-name::string)? ;
 common-presentation-header-footer-attlist ::= (presentation:use-footer-name::string)? ;
 common-presentation-header-footer-attlist ::= (presentation:use-date-time-name::string)? ;
text-index-source-styles ::= text:index-source-styles::(text:outline-level::positiveInteger text-index-source-style*) ;
text-section-attr ::= sectionAttr ;
 text-section-attr ::= (text:display::("true" | "none")) | (text:display::"condition" text:condition::string) | ε ;
number-day-of-week ::= number:day-of-week::(number-day-of-week-attlist common-calendar-attlist) ;
draw-opacity-attlist ::= (draw:start::percent)? (draw:end::percent)? ;
common-anim-named-target-attlist ::= smil:attributeName::string ;
target-location ::= (xlink:href::anyURI)? ;
current-selected ::= (form:current-selected::boolean)? ;
text-decls ::= (text:variable-decls::(text-variable-decl*))? (text:sequence-decls::(text-sequence-decl*))? (text:user-field-decls::(text-user-field-decl*))? (text:dde-connection-decls::(text-dde-connection-decl*))? text-alphabetical-index-auto-mark-file? ;
office-binary-data ::= office:binary-data::base64Binary ;
table-movement-cut-off ::= table:movement-cut-off::table-movement-cut-off-attlist ;
form-number-attlist ::= (form:value::double)? ;
 form-number-attlist ::= (form:current-value::double)? ;
 form-number-attlist ::= (form:min-value::double)? ;
 form-number-attlist ::= (form:max-value::double)? ;
draw-glue-points-attlist ::= draw:escape-direction::("auto" | "left" | "right" | "up" | "down" | "horizontal" | "vertical") ;
text-list-style ::= text:list-style::(text-list-style-attr text-list-style-content*) ;
text-illustration-index-entry-template-attrs ::= text:style-name::styleNameRef ;
common-dde-connection-decl-attlist ::= office:dde-application::string ;
 common-dde-connection-decl-attlist ::= office:dde-topic::string ;
 common-dde-connection-decl-attlist ::= office:dde-item::string ;
 common-dde-connection-decl-attlist ::= (office:automatic-update::boolean)? ;
text-time-attlist ::= common-field-fixed-attlist common-field-data-style-name-attlist ;
 text-time-attlist ::= (text:time-value::timeOrDateTime)? ;
 text-time-attlist ::= (text:time-adjust::duration)? ;
common-number-attlist ::= (number:min-integer-digits::integer)? ;
 common-number-attlist ::= (number:grouping::boolean)? ;
presentation-footer-decl-attlist ::= presentation:name::string ;
svg-desc ::= svg:desc::string() ;
form-combobox-attlist ::= form-control-attlist common-current-value-attlist common-disabled-attlist dropdown common-maxlength-attlist common-printable-attlist common-readonly-attlist size common-tab-attlist common-title-attlist common-value-attlist common-convert-empty-attlist common-data-field-attlist list-source list-source-type ;
 form-combobox-attlist ::= (form:auto-complete::boolean)? ;
common-page-number-attlist ::= (style:page-number::positiveInteger)? ;
text-database-next-attlist ::= common-field-database-table ;
 text-database-next-attlist ::= (text:condition::formula)? ;
common-vertical-rel-attlist ::= (style:vertical-rel::("page" | "page-content" | "frame" | "frame-content" | "paragraph" | "paragraph-content" | "char" | "line" | "baseline" | "text"))? ;
draw-ellipse ::= draw:ellipse::(common-draw-circle-ellipse-attlist draw-ellipse-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text) ;
common-draw-id-attlist ::= (draw:id::ID)? ;
table-data-pilot-member ::= table:data-pilot-member::table-data-pilot-member-attlist ;
number-currency-symbol ::= number:currency-symbol::(number-currency-symbol-attlist string()) ;
common-field-display-value-formula-none-attlist ::= (text:display::("value" | "formula" | "none"))? ;
common-repeat-timing-attlist ::= (smil:repeatDur::string smil:repeatCount::nonNegativeInteger)? ;
form-value-range-attlist ::= form-control-attlist common-disabled-attlist common-printable-attlist common-tab-attlist common-title-attlist common-value-attlist ;
 form-value-range-attlist ::= (form:max-value::string)? ;
 form-value-range-attlist ::= (form:min-value::string)? ;
 form-value-range-attlist ::= (form:step-size::positiveInteger)? ;
 form-value-range-attlist ::= (form:page-step-size::positiveInteger)? ;
 form-value-range-attlist ::= (form:delay-for-repeat::duration)? ;
 form-value-range-attlist ::= (form:orientation::("horizontal" | "vertical"))? ;
number-boolean-style ::= number:boolean-style::(common-data-style-attlist style-text-properties? number-text? (number-boolean number-text?)? style-map*) ;
table-error-macro ::= table:error-macro::((table:execute::boolean)?) ;
config-config-item-set ::= config:config-item-set::(config-config-item-set-attlist config-items) ;
presentation-dim-attlist ::= draw:shape-id::IDREF ;
 presentation-dim-attlist ::= draw:color::color ;
text-bibliography-source ::= text:bibliography-source::(text-index-title-template? text-bibliography-entry-template*) ;
text-sort-key-attlist ::= text:key::("address" | "annote" | "author" | "bibliography-type" | "booktitle" | "chapter" | "custom1" | "custom2" | "custom3" | "custom4" | "custom5" | "edition" | "editor" | "howpublished" | "identifier" | "institution" | "isbn" | "issn" | "journal" | "month" | "note" | "number" | "organizations" | "pages" | "publisher" | "report-type" | "school" | "series" | "title" | "url" | "volume" | "year") (text:sort-ascending::boolean)? ;
style-list-level-properties-attlist ::= common-text-align ;
 style-list-level-properties-attlist ::= (text:space-before::nonNegativeLength)? ;
 style-list-level-properties-attlist ::= (text:min-label-width::nonNegativeLength)? ;
 style-list-level-properties-attlist ::= (text:min-label-distance::nonNegativeLength)? ;
 style-list-level-properties-attlist ::= (style:font-name::string)? ;
 style-list-level-properties-attlist ::= (fo:width::positiveLength)? (fo:height::positiveLength)? ;
 style-list-level-properties-attlist ::= common-vertical-rel-attlist common-vertical-pos-attlist ;
number-year ::= number:year::(number-year-attlist common-calendar-attlist) ;
table-body ::= table:body::common-table-template-attlist ;
text-index-entry-span ::= text:index-entry-span::((text:style-name::styleNameRef)? string()) ;
text-date-attlist ::= common-field-fixed-attlist common-field-data-style-name-attlist ;
 text-date-attlist ::= (text:date-value::dateOrDateTime)? ;
 text-date-attlist ::= (text:date-adjust::duration)? ;
text-user-field-decl ::= text:user-field-decl::(common-field-name-attlist common-field-formula-attlist? common-value-and-type-attlist) ;
table-sort ::= table:sort::(table-sort-attlist table-sort-by+) ;
dc-date ::= dc:date::dateTime ;
text-database-row-select-attlist ::= common-field-database-table ;
 text-database-row-select-attlist ::= (text:condition::formula)? ;
 text-database-row-select-attlist ::= (text:row-number::nonNegativeInteger)? ;
chart-axis ::= chart:axis::(chart-axis-attlist chart-title? chart-categories? chart-grid*) ;
table-database-source-sql ::= table:database-source-sql::table-database-source-sql-attlist ;
draw-custom-shape ::= draw:custom-shape::(draw-custom-shape-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text draw-enhanced-geometry?) ;
form-form ::= form:form::(common-form-control-attlist form-form-attlist form-properties? office-event-listeners? (controls | form-form)* form-connection-resource?) ;
common-table-cell-range-address-attlist ::= table:start-column::integer table:start-row::integer table:start-table::integer table:end-column::integer table:end-row::integer table:end-table::integer ;
list-source ::= (form:list-source::string)? ;
common-draw-gradient-attlist ::= (draw:name::styleName)? ;
 common-draw-gradient-attlist ::= (draw:display-name::string)? ;
 common-draw-gradient-attlist ::= draw:style::gradient-style ;
 common-draw-gradient-attlist ::= (draw:cx::percent)? (draw:cy::percent)? ;
 common-draw-gradient-attlist ::= (draw:angle::integer)? ;
 common-draw-gradient-attlist ::= (draw:border::percent)? ;
draw-polyline ::= draw:polyline::(common-draw-points-attlist common-draw-position-attlist common-draw-size-attlist common-draw-viewbox-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text) ;
text-numbered-paragraph ::= text:numbered-paragraph::(text-numbered-paragraph-attr text-number? text-p | text-h) ;
text-list-level-style-bullet-attr ::= (text:style-name::styleNameRef)? ;
 text-list-level-style-bullet-attr ::= text:bullet-char::character ;
 text-list-level-style-bullet-attr ::= common-num-format-prefix-suffix-attlist ;
 text-list-level-style-bullet-attr ::= (text:bullet-relative-size::percent)? ;
number-quarter ::= number:quarter::(number-quarter-attlist common-calendar-attlist) ;
config-config-item-map-entry ::= config:config-item-map-entry::(config-config-item-map-entry-attlist config-items) ;
anim-transition-filter-attlist ::= smil:type::string ;
 anim-transition-filter-attlist ::= (smil:subtype::string)? ;
 anim-transition-filter-attlist ::= (smil:direction::("forward" | "reverse"))? ;
 anim-transition-filter-attlist ::= (smil:fadeColor::("forward" | "reverse"))? ;
 anim-transition-filter-attlist ::= (smil:mode::("in" | "out"))? ;
text-alphabetical-index-entry-template ::= text:alphabetical-index-entry-template::(text-alphabetical-index-entry-template-attrs (text-index-entry-chapter | text-index-entry-page-number | text-index-entry-text | text-index-entry-span | text-index-entry-tab-stop)*) ;
common-table-change-attlist ::= table:id::string ;
 common-table-change-attlist ::= (table:acceptance-state::("accepted" | "rejected" | "pending"))? ;
 common-table-change-attlist ::= (table:rejecting-change-id::string)? ;
common-field-formula-attlist ::= (text:formula::formula)? ;
text-set-page-variable-attlist ::= (text:active::boolean)? ;
 text-set-page-variable-attlist ::= (text:page-adjust::integer)? ;
table-data-pilot-field ::= table:data-pilot-field::(table-data-pilot-field-attlist table-data-pilot-level? table-data-pilot-field-reference? table-data-pilot-groups?) ;
draw-glue-point ::= draw:glue-point::draw-glue-point-attlist ;
chart-chart-attlist ::= chart:class::namespacedToken ;
 chart-chart-attlist ::= common-draw-size-attlist ;
 chart-chart-attlist ::= (chart:column-mapping::string)? ;
 chart-chart-attlist ::= (chart:row-mapping::string)? ;
 chart-chart-attlist ::= (chart:style-name::styleNameRef)? ;
draw-custom-shape-attlist ::= (draw:engine::namespacedToken)? ;
 draw-custom-shape-attlist ::= (draw:data::string)? ;
table-highlighted-range-attlist-invalid ::= table:marked-invalid::boolean ;
table-data-pilot-tables ::= table:data-pilot-tables::(table-data-pilot-table*) ;
table-table-row ::= table:table-row::(table-table-row-attlist (table-table-cell | table-covered-table-cell)+) ;
table-operation-attlist ::= table:name::("trace-dependents" | "remove-dependents" | "trace-precedents" | "remove-precedents" | "trace-errors") ;
 table-operation-attlist ::= table:index::nonNegativeInteger ;
table-detective ::= table:detective::(table-highlighted-range* table-operation*) ;
office-settings ::= (office:settings::(config-config-item-set+))? ;
table-tracked-changes-attlist ::= (table:track-changes::boolean)? ;
text-table-of-content-entry-template-attlist ::= text:outline-level::positiveInteger ;
 text-table-of-content-entry-template-attlist ::= text:style-name::styleNameRef ;
common-num-format-prefix-suffix-attlist ::= (style:num-prefix::string)? (style:num-suffix::string)? ;
dropdown ::= (form:dropdown::boolean)? ;
common-disabled-attlist ::= (form:disabled::boolean)? ;
common-svg-gradient-attlist ::= (svg:gradientUnits::"objectBoundingBox")? (svg:gradientTransform::string)? (svg:spreadMethod::("pad" | "reflect" | "repeat"))? ;
 common-svg-gradient-attlist ::= draw:name::styleName ;
 common-svg-gradient-attlist ::= (draw:display-name::string)? ;
draw-a-attlist ::= xlink:href::anyURI (xlink:type::"simple")? (xlink:actuate::"onRequest")? ;
 draw-a-attlist ::= (office:target-frame-name::targetFrameName)? (xlink:show::("new" | "replace"))? ;
 draw-a-attlist ::= (office:name::string)? ;
 draw-a-attlist ::= (office:server-map::boolean)? ;
style-default-style ::= style:default-style::style-style-content ;
table-named-expressions ::= table:named-expressions::((table-named-range | table-named-expression)*) ;
number-fraction ::= number:fraction::(number-fraction-attlist common-number-attlist) ;
common-draw-area-attlist ::= (xlink:href::anyURI)? (xlink:type::"simple")? (office:target-frame-name::targetFrameName)? (xlink:show::("new" | "replace"))? ;
 common-draw-area-attlist ::= (office:name::string)? ;
 common-draw-area-attlist ::= (draw:nohref::"nohref")? ;
common-draw-name-attlist ::= (draw:name::string)? ;
text-bibliography ::= text:bibliography::(sectionAttr text-bibliography-source text-index-body) ;
table-dde-link ::= table:dde-link::(office-dde-source table-table) ;
size ::= (form:size::nonNegativeInteger)? ;
table-table-attlist ::= (table:name::string)? ;
 table-table-attlist ::= (table:style-name::styleNameRef)? ;
 table-table-attlist ::= (table:protected::boolean)? (table:protection-key::string())? ;
 table-table-attlist ::= (table:print::boolean)? ;
 table-table-attlist ::= (table:print-ranges::cellRangeAddressList)? ;
 table-table-attlist ::= (table:is-sub-table::boolean)? ;
--------------------odf::opendoc-1.0.bgf--------------------
style-font-face ::= style:font-face::(style-font-face-attlist svg-font-face-src? svg-definition-src?) ;
svg-linearGradient ::= svg:linearGradient::(common-svg-gradient-attlist (svg:x1::(coordinate | percent))? (svg:y1::(coordinate | percent))? (svg:x2::(coordinate | percent))? (svg:y2::(coordinate | percent))? svg-stop*) ;
style-page-layout-attlist ::= style:name::styleName ;
 style-page-layout-attlist ::= (style:page-usage::("all" | "left" | "right" | "mirrored"))? ;
number-seconds ::= number:seconds::number-seconds-attlist ;
number-currency-style ::= number:currency-style::(common-data-style-attlist common-auto-reorder-attlist style-text-properties? number-text? ((number-and-text currency-symbol-and-text?) | (currency-symbol-and-text number-and-text?))? style-map*) ;
number-fraction-attlist ::= (number:min-numerator-digits::integer)? ;
 number-fraction-attlist ::= (number:min-denominator-digits::integer)? ;
 number-fraction-attlist ::= (number:denominator-value::integer)? ;
table-covered-table-cell ::= table:covered-table-cell::(table-table-cell-attlist table-table-cell-content) ;
text-notes-configuration-content ::= text-note-class ;
 text-notes-configuration-content ::= (text:citation-style-name::styleNameRef)? ;
 text-notes-configuration-content ::= (text:citation-body-style-name::styleNameRef)? ;
 text-notes-configuration-content ::= (text:default-style-name::styleNameRef)? ;
 text-notes-configuration-content ::= (text:master-page-name::styleNameRef)? ;
 text-notes-configuration-content ::= (text:start-value::nonNegativeInteger)? ;
 text-notes-configuration-content ::= common-num-format-prefix-suffix-attlist common-num-format-attlist? ;
 text-notes-configuration-content ::= (text:start-numbering-at::("document" | "chapter" | "page"))? ;
 text-notes-configuration-content ::= (text:footnotes-position::("text" | "page" | "section" | "document"))? ;
 text-notes-configuration-content ::= (text:note-continuation-notice-forward::string())? ;
 text-notes-configuration-content ::= (text:note-continuation-notice-backward::string())? ;
draw-applet-attlist ::= (draw:code::string())? ;
 draw-applet-attlist ::= (draw:object::string())? ;
 draw-applet-attlist ::= (draw:archive::string())? ;
 draw-applet-attlist ::= (draw:may-script::boolean)? ;
number-scientific-number ::= number:scientific-number::(number-scientific-number-attlist common-decimal-places-attlist common-number-attlist) ;
presentation-hide-shape ::= presentation:hide-shape::(common-presentation-effect-attlist presentation-sound?) ;
text-number ::= text:number::string ;
common-title-attlist ::= (form:title::string())? ;
draw-object ::= draw:object::(draw-object-attlist common-draw-data-attlist | office-document | math-math) ;
table-sort-by ::= table:sort-by::table-sort-by-attlist ;
table-data-pilot-table-attlist ::= table:name::string ;
 table-data-pilot-table-attlist ::= (table:application-data::string)? ;
 table-data-pilot-table-attlist ::= (table:grand-total::("none" | "row" | "column" | "both"))? ;
 table-data-pilot-table-attlist ::= (table:ignore-empty-rows::boolean)? ;
 table-data-pilot-table-attlist ::= (table:identify-categories::boolean)? ;
 table-data-pilot-table-attlist ::= table:target-range-address::cellRangeAddress ;
 table-data-pilot-table-attlist ::= (table:buttons::cellRangeAddressList)? ;
 table-data-pilot-table-attlist ::= (table:show-filter-button::boolean)? ;
 table-data-pilot-table-attlist ::= (table:drill-down-on-double-click::boolean)? ;
presentation-hide-text ::= presentation:hide-text::(common-presentation-effect-attlist presentation-sound?) ;
style-tab-stop-char-attlist ::= style:char::character ;
table-deletion-attlist ::= table:type::("row" | "column" | "table") ;
 table-deletion-attlist ::= table:position::integer ;
 table-deletion-attlist ::= (table:table::integer)? ;
 table-deletion-attlist ::= (table:multi-deletion-spanned::integer)? ;
number-text-content ::= number:text-content::ε ;
draw-plugin ::= draw:plugin::(draw-plugin-attlist common-draw-data-attlist draw-param*) ;
table-database-source-query-attlist ::= table:database-name::string ;
 table-database-source-query-attlist ::= table:query-name::string ;
draw-area-rectangle ::= draw:area-rectangle::(common-draw-area-attlist svg:x::coordinate svg:y::coordinate svg:width::length svg:height::length svg-desc? office-event-listeners?) ;
table-table-rows ::= table:table-rows::(table-table-row+) ;
style-tab-stop ::= style:tab-stop::style-tab-stop-attlist ;
number-date-style ::= number:date-style::(common-data-style-attlist common-auto-reorder-attlist common-format-source-attlist style-text-properties? number-text? (any-date number-text?)+ style-map*) ;
draw-marker-attlist ::= draw:name::styleName ;
 draw-marker-attlist ::= (draw:display-name::string)? ;
chart-grid ::= chart:grid::chart-grid-attlist ;
table-table-cell-attlist-extra ::= (table:number-columns-spanned::positiveInteger)? (table:number-rows-spanned::positiveInteger)? ;
 table-table-cell-attlist-extra ::= (table:number-matrix-columns-spanned::positiveInteger)? (table:number-matrix-rows-spanned::positiveInteger)? ;
common-text-spreadsheet-shape-attlist ::= (table:end-cell-address::cellAddress)? (table:end-x::coordinate)? (table:end-y::coordinate)? ;
 common-text-spreadsheet-shape-attlist ::= (table:table-background::boolean)? ;
 common-text-spreadsheet-shape-attlist ::= common-text-anchor-attlist ;
common-draw-text-style-name-attlist ::= (draw:text-style-name::styleNameRef)? ;
table-shapes ::= table:shapes::(shape+) ;
text-p ::= text:p::(paragraph-attrs paragraph-content*) ;
common-style-header-footer-attlist ::= (style:display::boolean)? ;
draw-line-attlist ::= svg:x1::coordinate svg:y1::coordinate ;
 draw-line-attlist ::= svg:x2::coordinate svg:y2::coordinate ;
table-movement ::= table:movement::(common-table-change-attlist table-source-range-address table-target-range-address office-change-info table-dependencies? table-deletions?) ;
script-event-listener ::= script:event-listener::script-event-listener-attlist ;
style-tab-stop-attlist ::= style:position::nonNegativeLength ;
 style-tab-stop-attlist ::= ((style:type::("left" | "center" | "right"))?) | (style:type::"char" style-tab-stop-char-attlist) ;
 style-tab-stop-attlist ::= (style:leader-type::lineType)? ;
 style-tab-stop-attlist ::= (style:leader-style::lineStyle)? ;
 style-tab-stop-attlist ::= (style:leader-width::lineWidth)? ;
 style-tab-stop-attlist ::= (style:leader-color::("font-color" | color))? ;
 style-tab-stop-attlist ::= (style:leader-text::string)? ;
 style-tab-stop-attlist ::= (style:leader-text-style::styleNameRef)? ;
text-h ::= text:h::(heading-attrs paragraph-attrs text-number? paragraph-content*) ;
text-outline-style ::= text:outline-style::(text-outline-level-style+) ;
draw-control-attlist ::= draw:control::IDREF ;
table-table-column-attlist ::= (table:number-columns-repeated::positiveInteger)? ;
 table-table-column-attlist ::= (table:style-name::styleNameRef)? ;
 table-table-column-attlist ::= (table:visibility::table-visibility-value)? ;
 table-table-column-attlist ::= (table:default-cell-style-name::styleNameRef)? ;
text-placeholder-attlist ::= text:placeholder-type::("text" | "table" | "text-box" | "image" | "object") ;
 text-placeholder-attlist ::= common-field-description-attlist ;
office-document-settings ::= office:document-settings::(office-document-common-attrs office-settings) ;
draw-handle-attlist ::= (draw:handle-mirror-vertical::boolean)? ;
 draw-handle-attlist ::= (draw:handle-mirror-horizontal::boolean)? ;
 draw-handle-attlist ::= (draw:handle-switched::boolean)? ;
 draw-handle-attlist ::= draw:handle-position::string ;
 draw-handle-attlist ::= (draw:handle-range-x-minimum::string)? ;
 draw-handle-attlist ::= (draw:handle-range-x-maximum::string)? ;
 draw-handle-attlist ::= (draw:handle-range-y-minimum::string)? ;
 draw-handle-attlist ::= (draw:handle-range-y-maximum::string)? ;
 draw-handle-attlist ::= (draw:handle-polar::string)? ;
 draw-handle-attlist ::= (draw:handle-radius-range-minimum::string)? ;
 draw-handle-attlist ::= (draw:handle-radius-range-maximum::string)? ;
presentation-show-attlist ::= presentation:name::string ;
 presentation-show-attlist ::= presentation:pages::string() ;
style-columns ::= (style:columns::(style-columns-attlist style-column-sep? style-column*))? ;
table-calculation-setting-attlist ::= (table:case-sensitive::boolean)? ;
 table-calculation-setting-attlist ::= (table:precision-as-shown::boolean)? ;
 table-calculation-setting-attlist ::= (table:search-criteria-must-apply-to-whole-cell::boolean)? ;
 table-calculation-setting-attlist ::= (table:automatic-find-labels::boolean)? ;
 table-calculation-setting-attlist ::= (table:use-regular-expressions::boolean)? ;
 table-calculation-setting-attlist ::= (table:null-year::positiveInteger)? ;
table-subtotal-rules-attlist ::= (table:bind-styles-to-content::boolean)? ;
 table-subtotal-rules-attlist ::= (table:case-sensitive::boolean)? ;
 table-subtotal-rules-attlist ::= (table:page-breaks-on-group-change::boolean)? ;
number-am-pm ::= number:am-pm::ε ;
number-time-style ::= number:time-style::(number-time-style-attlist common-data-style-attlist common-format-source-attlist style-text-properties? number-text? (any-time number-text?)+ style-map*) ;
text-dde-connection-decl ::= text:dde-connection-decl::(text-dde-connection-decl-attlist common-dde-connection-decl-attlist) ;
style-table-column-properties ::= style:table-column-properties::style-table-column-properties-content ;
chart-stock-range-line ::= chart:stock-range-line::common-stock-marker-attlist ;
chart-title ::= chart:title::(chart-title-attlist text-p?) ;
common-anim-attlist ::= (presentation:node-type::("default" | "on-click" | "with-previous" | "after-previous" | "timing-root" | "main-sequence" | "interactive-sequence"))? ;
 common-anim-attlist ::= (presentation:preset-id::string)? ;
 common-anim-attlist ::= (presentation:preset-sub-type::string)? ;
 common-anim-attlist ::= (presentation:preset-class::("custom" | "entrance" | "exit" | "emphasis" | "motion-path" | "ole-action" | "media-call"))? ;
 common-anim-attlist ::= (presentation:master-element::IDREF)? ;
 common-anim-attlist ::= (presentation:group-id::string)? ;
 common-anim-attlist ::= (anim:id::ID)? ;
common-tab-attlist ::= (form:tab-index::nonNegativeInteger)? ;
 common-tab-attlist ::= (form:tab-stop::boolean)? ;
config-config-item-attlist ::= config:name::string ;
 config-config-item-attlist ::= config:type::("boolean" | "short" | "int" | "long" | "double" | "string" | "datetime" | "base64Binary") ;
draw-frame ::= draw:frame::(common-draw-shape-with-text-and-styles-attlist common-draw-position-attlist common-draw-rel-size-attlist presentation-shape-attlist draw-frame-attlist (draw-text-box | draw-image | draw-object | draw-object-ole | draw-applet | draw-floating-frame | draw-plugin)* office-event-listeners? draw-glue-point* draw-image-map? svg-desc? (draw-contour-polygon | draw-contour-path)?) ;
table-iteration ::= table:iteration::((table:status::("enable" | "disable"))? (table:steps::positiveInteger)? (table:maximum-difference::double)?) ;
text-user-index-source ::= text:user-index-source::(text-user-index-source-attr text-index-title-template? text-user-index-entry-template* text-index-source-styles*) ;
text-index-entry-chapter ::= text:index-entry-chapter::((text:style-name::styleNameRef)? text-index-entry-chapter-attrs) ;
table-data-pilot-subtotals ::= table:data-pilot-subtotals::(table-data-pilot-subtotal*) ;
style-page-layout-properties ::= style:page-layout-properties::style-page-layout-properties-content ;
form-connection-resource ::= form:connection-resource::(xlink:href::anyURI) ;
draw-text-box ::= draw:text-box::(draw-text-box-attlist text-content*) ;
draw-image ::= draw:image::(draw-image-attlist common-draw-data-attlist | office-binary-data draw-text) ;
table-data-pilot-field-reference-attlist ::= table:field-name::string ;
 table-data-pilot-field-reference-attlist ::= (table:member-type::"named" table:member-name::string) | (table:member-type::("previous" | "next")) ;
 table-data-pilot-field-reference-attlist ::= table:type::("none" | "member-difference" | "member-percentage" | "member-percentage-difference" | "running-total" | "row-percentage" | "column-percentage" | "total-percentage" | "index") ;
common-break-attlist ::= (fo:break-before::("auto" | "column" | "page"))? (fo:break-after::("auto" | "column" | "page"))? ;
table-data-pilot-groups ::= table:data-pilot-groups::(table-data-pilot-groups-attlist table-data-pilot-group+) ;
chart-error-indicator-attlist ::= (chart:style-name::styleNameRef)? ;
number-hours ::= number:hours::number-hours-attlist ;
table-table-source-attlist ::= (table:mode::("copy-all" | "copy-results-only"))? ;
 table-table-source-attlist ::= (table:table-name::string)? ;
draw-layer ::= draw:layer::draw-layer-attlist ;
common-text-align ::= (fo:text-align::("start" | "end" | "left" | "right" | "center" | "justify"))? ;
style-style-attlist ::= style:name::styleName ;
 style-style-attlist ::= (style:display-name::string)? ;
 style-style-attlist ::= (style:parent-style-name::styleNameRef)? ;
 style-style-attlist ::= (style:next-style-name::styleNameRef)? ;
 style-style-attlist ::= (style:list-style-name::(styleName | ε))? ;
 style-style-attlist ::= (style:master-page-name::styleNameRef)? ;
 style-style-attlist ::= (style:auto-update::boolean)? ;
 style-style-attlist ::= (style:data-style-name::styleNameRef)? ;
 style-style-attlist ::= (style:class::string)? ;
 style-style-attlist ::= (style:default-outline-level::positiveInteger)? ;
draw-image-attlist ::= (draw:filter-name::string)? ;
paragraph-attrs ::= (text:style-name::styleNameRef)? (text:class-names::styleNameRefs)? (text:cond-style-name::styleNameRef)? ;
 paragraph-attrs ::= text-id? ;
form-fixed-text-attlist ::= form-control-attlist for common-disabled-attlist label common-printable-attlist common-title-attlist ;
 form-fixed-text-attlist ::= (form:multi-line::boolean)? ;
draw-floating-frame-attlist ::= (draw:frame-name::string)? ;
presentation-decl ::= presentation:header-decl::(presentation-header-decl-attlist string()) ;
 presentation-decl ::= presentation:footer-decl::(presentation-footer-decl-attlist string()) ;
 presentation-decl ::= presentation:date-time-decl::(presentation-date-time-decl-attlist string()) ;
common-draw-size-attlist ::= (svg:width::length)? (svg:height::length)? ;
text-changed-region-content ::= text:insertion::office-change-info ;
 text-changed-region-content ::= text:deletion::(office-change-info text-content*) ;
 text-changed-region-content ::= text:format-change::office-change-info ;
table-table-template ::= table:table-template::(table-table-template-attlist table-first-row? table-last-row? table-first-column? table-last-column? table-body | (table-even-rows table-odd-rows) | (table-even-columns table-odd-columns)) ;
dr3d-extrude ::= dr3d:extrude::(common-draw-path-data-attlist common-draw-viewbox-attlist common-draw-id-attlist common-draw-z-index-attlist common-draw-layer-name-attlist common-draw-style-name-attlist common-dr3d-transform-attlist) ;
form-password-attlist ::= form-control-attlist common-disabled-attlist common-maxlength-attlist common-printable-attlist common-tab-attlist common-title-attlist common-value-attlist common-convert-empty-attlist ;
 form-password-attlist ::= (form:echo-char::character)? ;
common-style-direction-attlist ::= (style:direction::("ltr" | "ttb"))? ;
draw-regular-polygon-attlist ::= (draw:concave::"false") | (draw:concave::"true" draw-regular-polygon-sharpness-attlist) ;
 draw-regular-polygon-attlist ::= draw:corners::positiveInteger ;
text-sequence-ref-name ::= (text:ref-name::string)? ;
table-insertion ::= table:insertion::(table-insertion-attlist common-table-change-attlist office-change-info table-dependencies? table-deletions?) ;
table-label-ranges ::= table:label-ranges::(table-label-range*) ;
table-even-rows ::= table:even-rows::common-table-template-attlist ;
chart-categories ::= chart:categories::((table:cell-range-address::cellRangeAddress)?) ;
draw-page-attlist ::= (draw:name::string)? ;
 draw-page-attlist ::= (draw:style-name::styleNameRef)? ;
 draw-page-attlist ::= draw:master-page-name::styleNameRef ;
 draw-page-attlist ::= (presentation:presentation-page-layout-name::styleNameRef)? ;
 draw-page-attlist ::= (draw:id::ID)? ;
table-database-ranges ::= table:database-ranges::(table-database-range*) ;
style-drawing-page-properties ::= style:drawing-page-properties::style-drawing-page-properties-content ;
config-config-item-map-indexed ::= config:config-item-map-indexed::(config-config-item-map-indexed-attlist config-config-item-map-entry+) ;
style-table-cell-properties ::= style:table-cell-properties::style-table-cell-properties-content ;
table-table-cell ::= table:table-cell::(table-table-cell-attlist table-table-cell-attlist-extra table-table-cell-content) ;
table-consolidation-attlist ::= table:function::("auto" | "average" | "count" | "countnums" | "max" | "min" | "product" | "stdev" | "stdevp" | "sum" | "var" | "varp" | string) ;
 table-consolidation-attlist ::= table:source-cell-range-addresses::cellRangeAddressList ;
 table-consolidation-attlist ::= table:target-cell-address::cellAddress ;
 table-consolidation-attlist ::= (table:use-labels::("none" | "row" | "column" | "both"))? ;
 table-consolidation-attlist ::= (table:link-to-source-data::boolean)? ;
style-tab-stops ::= (style:tab-stops::(style-tab-stop*))? ;
style-data-style-attlist ::= (style:display-name::string)? ;
dr3d-light-attlist ::= (dr3d:diffuse-color::color)? ;
 dr3d-light-attlist ::= dr3d:direction::vector3D ;
 dr3d-light-attlist ::= (dr3d:enabled::boolean)? ;
 dr3d-light-attlist ::= (dr3d:specular::boolean)? ;
style-drawing-page-properties-attlist ::= (presentation:transition-type::("manual" | "automatic" | "semi-automatic"))? ;
 style-drawing-page-properties-attlist ::= (presentation:transition-style::("none" | "fade-from-left" | "fade-from-top" | "fade-from-right" | "fade-from-bottom" | "fade-from-upperleft" | "fade-from-upperright" | "fade-from-lowerleft" | "fade-from-lowerright" | "move-from-left" | "move-from-top" | "move-from-right" | "move-from-bottom" | "move-from-upperleft" | "move-from-upperright" | "move-from-lowerleft" | "move-from-lowerright" | "uncover-to-left" | "uncover-to-top" | "uncover-to-right" | "uncover-to-bottom" | "uncover-to-upperleft" | "uncover-to-upperright" | "uncover-to-lowerleft" | "uncover-to-lowerright" | "fade-to-center" | "fade-from-center" | "vertical-stripes" | "horizontal-stripes" | "clockwise" | "counterclockwise" | "open-vertical" | "open-horizontal" | "close-vertical" | "close-horizontal" | "wavyline-from-left" | "wavyline-from-top" | "wavyline-from-right" | "wavyline-from-bottom" | "spiralin-left" | "spiralin-right" | "spiralout-left" | "spiralout-right" | "roll-from-top" | "roll-from-left" | "roll-from-right" | "roll-from-bottom" | "stretch-from-left" | "stretch-from-top" | "stretch-from-right" | "stretch-from-bottom" | "vertical-lines" | "horizontal-lines" | "dissolve" | "random" | "vertical-checkerboard" | "horizontal-checkerboard" | "interlocking-horizontal-left" | "interlocking-horizontal-right" | "interlocking-vertical-top" | "interlocking-vertical-bottom" | "fly-away" | "open" | "close" | "melt"))? ;
 style-drawing-page-properties-attlist ::= (presentation:transition-speed::presentationSpeeds)? ;
 style-drawing-page-properties-attlist ::= (smil:subtype::string)? ;
 style-drawing-page-properties-attlist ::= (smil:direction::("forward" | "reverse"))? ;
 style-drawing-page-properties-attlist ::= (smil:fadeColor::("forward" | "reverse"))? ;
 style-drawing-page-properties-attlist ::= (presentation:duration::duration)? ;
 style-drawing-page-properties-attlist ::= (presentation:visibility::("visible" | "hidden"))? ;
 style-drawing-page-properties-attlist ::= (draw:background-size::("full" | "border"))? ;
 style-drawing-page-properties-attlist ::= (presentation:background-objects-visible::boolean)? ;
 style-drawing-page-properties-attlist ::= (presentation:background-visible::boolean)? ;
 style-drawing-page-properties-attlist ::= (presentation:display-header::boolean)? ;
 style-drawing-page-properties-attlist ::= (presentation:display-footer::boolean)? ;
 style-drawing-page-properties-attlist ::= (presentation:display-page-number::boolean)? ;
 style-drawing-page-properties-attlist ::= (presentation:display-date-time::boolean)? ;
 style-drawing-page-properties-attlist ::= (smil:type::string)? ;
table-data-pilot-layout-info ::= table:data-pilot-layout-info::table-data-pilot-layout-info-attlist ;
config-config-item-map-indexed-attlist ::= config:name::string ;
table-sort-groups-attlist ::= (table:data-type::("text" | "number" | "automatic" | string))? ;
 table-sort-groups-attlist ::= (table:order::("ascending" | "descending"))? ;
presentation-dim ::= presentation:dim::(presentation-dim-attlist presentation-sound?) ;
anim-animate-motion-attlist ::= (svg:path::pathData)? ;
 anim-animate-motion-attlist ::= (svg:origin::string)? ;
 anim-animate-motion-attlist ::= (smil:calcMode::("discrete" | "linear" | "paced" | "spline"))? ;
presentation-date-time-decl-attlist ::= presentation:name::string ;
 presentation-date-time-decl-attlist ::= presentation:source::("fixed" | "current-date") ;
 presentation-date-time-decl-attlist ::= (style:data-style-name::styleNameRef)? ;
text-template-name-attlist ::= (text:display::("full" | "path" | "name" | "name-and-extension" | "area" | "title"))? ;
draw-caption-attlist ::= (draw:caption-point-x::coordinate draw:caption-point-y::coordinate)? ;
 draw-caption-attlist ::= (draw:corner-radius::nonNegativeLength)? ;
form-button-attlist ::= form-control-attlist button-type common-disabled-attlist label image-data common-printable-attlist common-tab-attlist target-frame target-location common-title-attlist common-value-attlist common-form-relative-image-position-attlist ;
 form-button-attlist ::= (form:default-button::boolean)? ;
 form-button-attlist ::= (form:toggle::boolean)? ;
 form-button-attlist ::= (form:focus-on-click::boolean)? ;
 form-button-attlist ::= (form:xforms-submission::string)? ;
column-controls ::= form:text::(form-text-attlist common-form-control-content) ;
 column-controls ::= form:textarea::(form-textarea-attlist common-form-control-content text-p*) ;
 column-controls ::= form:formatted-text::(form-formatted-text-attlist common-form-control-content) ;
 column-controls ::= form:number::(form-number-attlist common-numeric-control-attlist common-form-control-content) ;
 column-controls ::= form:date::(form-date-attlist common-numeric-control-attlist common-form-control-content) ;
 column-controls ::= form:combobox::(form-combobox-attlist common-form-control-content form-item*) ;
 column-controls ::= form:listbox::(form-listbox-attlist common-form-control-content form-option*) ;
 column-controls ::= form:checkbox::(form-checkbox-attlist common-form-control-content) ;
chart-wall-attlist ::= (svg:width::length)? ;
 chart-wall-attlist ::= (chart:style-name::styleNameRef)? ;
text-index-title-template ::= text:index-title-template::((text:style-name::styleNameRef)? string()) ;
dr3d-rotate ::= dr3d:rotate::(common-draw-viewbox-attlist common-draw-path-data-attlist common-draw-z-index-attlist common-draw-id-attlist common-draw-layer-name-attlist common-draw-style-name-attlist common-dr3d-transform-attlist) ;
meta-date-string ::= meta:date-string::string ;
table-content-validations ::= table:content-validations::(table-content-validation+) ;
chart-series ::= chart:series::(chart-series-attlist chart-domain* chart-mean-value? chart-regression-curve? chart-error-indicator? chart-data-point*) ;
table-calculation-settings ::= table:calculation-settings::(table-calculation-setting-attlist table-null-date? table-iteration?) ;
common-field-display-value-none-attlist ::= (text:display::("value" | "none"))? ;
text-index-name ::= text:index-name::string ;
table-data-pilot-member-attlist ::= table:name::string ;
 table-data-pilot-member-attlist ::= (table:display::boolean)? ;
 table-data-pilot-member-attlist ::= (table:show-details::boolean)? ;
presentation-placeholder ::= presentation:placeholder::(presentation:object::presentation-classes svg:x::(coordinate | percent) svg:y::(coordinate | percent) svg:width::(length | percent) svg:height::(length | percent)) ;
style-map ::= style:map::style-map-attlist ;
number-number-attlist ::= (number:decimal-replacement::string())? ;
 number-number-attlist ::= (number:display-factor::double)? ;
text-index-source-style ::= text:index-source-style::(text:style-name::styleName) ;
common-field-description-attlist ::= (text:description::string())? ;
chart-series-attlist ::= (chart:values-cell-range-address::cellRangeAddress)? ;
 chart-series-attlist ::= (chart:label-cell-address::cellAddress)? ;
 chart-series-attlist ::= (chart:class::namespacedToken)? ;
 chart-series-attlist ::= (chart:attached-axis::string)? ;
 chart-series-attlist ::= (chart:style-name::styleNameRef)? ;
common-draw-transform-attlist ::= (draw:transform::string)? ;
common-shadow-attlist ::= (style:shadow::shadowType)? ;
common-num-format-attlist ::= (style:num-format::("1" | "i" | "I" | string | ε)) | (style:num-format::("a" | "A") style-num-letter-sync-attlist) | ε ;
text-page ::= text:page::text-page-attlist ;
common-data-field-attlist ::= (form:data-field::string)? ;
draw-regular-polygon-sharpness-attlist ::= draw:sharpness::percent ;
table-deletions ::= table:deletions::((table-cell-content-deletion | table-change-deletion)+) ;
text-list-level-style-attr ::= text:level::positiveInteger ;
table-data-pilot-sort-info ::= table:data-pilot-sort-info::table-data-pilot-sort-info-attlist ;
table-tracked-changes ::= table:tracked-changes::(table-tracked-changes-attlist (table-cell-content-change | table-insertion | table-deletion | table-movement)*) ;
table-database-source-sql-attlist ::= table:database-name::string ;
 table-database-source-sql-attlist ::= table:sql-statement::string ;
 table-database-source-sql-attlist ::= (table:parse-sql-statement::boolean)? ;
presentation-shape-attlist ::= (presentation:class::presentation-classes)? ;
 presentation-shape-attlist ::= (presentation:placeholder::boolean)? ;
 presentation-shape-attlist ::= (presentation:user-transformed::boolean)? ;
style-chart-properties ::= style:chart-properties::style-chart-properties-content ;
text-alphabetical-index ::= text:alphabetical-index::(sectionAttr text-alphabetical-index-source text-index-body) ;
office-change-info ::= office:change-info::(dc-creator dc-date text-p*) ;
paragraph-content ::= string() ;
 paragraph-content ::= text:s::((text:c::nonNegativeInteger)?) ;
 paragraph-content ::= text:tab::text-tab-attr ;
 paragraph-content ::= text:line-break::ε ;
 paragraph-content ::= text:span::((text:style-name::styleNameRef)? (text:class-names::styleNameRefs)? paragraph-content*) ;
 paragraph-content ::= text:a::(text-a-attlist office-event-listeners? paragraph-content*) ;
 paragraph-content ::= (text:bookmark::(text:name::string)) | (text:bookmark-start::(text:name::string)) | (text:bookmark-end::(text:name::string)) ;
 paragraph-content ::= text:reference-mark::(text:name::string) ;
 paragraph-content ::= (text:reference-mark-start::(text:name::string)) | (text:reference-mark-end::(text:name::string)) ;
 paragraph-content ::= text:note::(text-note-class (text:id::string)? text:note-citation::((text:label::string)? string()) text:note-body::(text-content*)) ;
 paragraph-content ::= text:ruby::((text:style-name::styleNameRef)? text:ruby-base::paragraph-content text:ruby-text::((text:style-name::styleNameRef)? string())) ;
 paragraph-content ::= office-annotation ;
 paragraph-content ::= change-marks ;
 paragraph-content ::= shape | draw-a ;
 paragraph-content ::= text:date::(text-date-attlist string()) ;
 paragraph-content ::= text:time::(text-time-attlist string()) ;
 paragraph-content ::= text:page-number::(text-page-number-attlist string()) ;
 paragraph-content ::= text:page-continuation::(text-page-continuation-attlist string()) ;
 paragraph-content ::= text:sender-firstname::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-lastname::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-initials::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-title::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-position::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-email::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-phone-private::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-fax::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-company::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-phone-work::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-street::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-city::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-postal-code::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-country::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-state-or-province::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:author-name::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:author-initials::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:chapter::(text-chapter-attlist string()) ;
 paragraph-content ::= text:file-name::(text-file-name-attlist string()) ;
 paragraph-content ::= text:template-name::(text-template-name-attlist string()) ;
 paragraph-content ::= text:sheet-name::string() ;
 paragraph-content ::= text:variable-set::(common-field-name-attlist common-field-formula-attlist common-value-and-type-attlist common-field-display-value-none-attlist common-field-data-style-name-attlist string()) ;
 paragraph-content ::= text:variable-get::(common-field-name-attlist common-field-display-value-formula-attlist common-field-data-style-name-attlist string()) ;
 paragraph-content ::= text:variable-input::(common-field-name-attlist common-field-description-attlist common-value-type-attlist common-field-display-value-none-attlist common-field-data-style-name-attlist string()) ;
 paragraph-content ::= text:user-field-get::(common-field-name-attlist common-field-display-value-formula-none-attlist common-field-data-style-name-attlist string()) ;
 paragraph-content ::= text:user-field-input::(common-field-name-attlist common-field-description-attlist common-field-data-style-name-attlist string()) ;
 paragraph-content ::= text:sequence::(common-field-name-attlist common-field-formula-attlist common-field-num-format-attlist text-sequence-ref-name string()) ;
 paragraph-content ::= text:expression::(common-field-formula-attlist common-value-and-type-attlist? common-field-display-value-formula-attlist common-field-data-style-name-attlist string()) ;
 paragraph-content ::= text:text-input::(common-field-description-attlist string()) ;
 paragraph-content ::= text:initial-creator::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:creation-date::(common-field-fixed-attlist common-field-data-style-name-attlist (text:date-value::dateOrDateTime)? string()) ;
 paragraph-content ::= text:creation-time::(common-field-fixed-attlist common-field-data-style-name-attlist (text:time-value::timeOrDateTime)? string()) ;
 paragraph-content ::= text:description::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:user-defined::(common-field-fixed-attlist text:name::string common-field-data-style-name-attlist (office:value::double)? (office:date-value::dateOrDateTime)? (office:time-value::duration)? (office:boolean-value::boolean)? (office:string-value::string)? string()) ;
 paragraph-content ::= text:print-time::(common-field-fixed-attlist common-field-data-style-name-attlist (text:time-value::time)? string()) ;
 paragraph-content ::= text:print-date::(common-field-fixed-attlist common-field-data-style-name-attlist (text:date-value::date)? string()) ;
 paragraph-content ::= text:printed-by::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:title::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:subject::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:keywords::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:editing-cycles::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:editing-duration::(common-field-fixed-attlist common-field-data-style-name-attlist (text:duration::duration)? string()) ;
 paragraph-content ::= text:modification-time::(common-field-fixed-attlist common-field-data-style-name-attlist (text:time-value::time)? string()) ;
 paragraph-content ::= text:modification-date::(common-field-fixed-attlist common-field-data-style-name-attlist (text:date-value::date)? string()) ;
 paragraph-content ::= text:creator::(common-field-fixed-attlist string()) ;
 paragraph-content ::= (text:page-count::(common-field-num-format-attlist string())) | (text:paragraph-count::(common-field-num-format-attlist string())) | (text:word-count::(common-field-num-format-attlist string())) | (text:character-count::(common-field-num-format-attlist string())) | (text:table-count::(common-field-num-format-attlist string())) | (text:image-count::(common-field-num-format-attlist string())) | (text:object-count::(common-field-num-format-attlist string())) ;
 paragraph-content ::= text:database-display::(text-database-display-attlist string()) ;
 paragraph-content ::= text:database-next::text-database-next-attlist ;
 paragraph-content ::= text:database-row-select::text-database-row-select-attlist ;
 paragraph-content ::= text:database-row-number::(common-field-database-table common-field-num-format-attlist (text:value::nonNegativeInteger)? string()) ;
 paragraph-content ::= text:database-name::(common-field-database-table string()) ;
 paragraph-content ::= text:page-variable-set::(text-set-page-variable-attlist string()) ;
 paragraph-content ::= text:page-variable-get::(text-get-page-variable-attlist string()) ;
 paragraph-content ::= text:placeholder::(text-placeholder-attlist string()) ;
 paragraph-content ::= text:conditional-text::(text-conditional-text-attlist string()) ;
 paragraph-content ::= text:hidden-text::(text-hidden-text-attlist string()) ;
 paragraph-content ::= (text:reference-ref::(text-common-ref-content text-ref-content)) | (text:bookmark-ref::(text-common-ref-content text-ref-content)) ;
 paragraph-content ::= text:note-ref::(text-common-ref-content text-note-ref-content text-ref-content) ;
 paragraph-content ::= text:sequence-ref::(text-common-ref-content text-sequence-ref-content) ;
 paragraph-content ::= text:script::((xlink:href::anyURI (xlink:type::"simple")?) | string() (script:language::string)?) ;
 paragraph-content ::= text:execute-macro::((text:name::string)? office-event-listeners? string()) ;
 paragraph-content ::= text:hidden-paragraph::(text-hidden-paragraph-attlist string()) ;
 paragraph-content ::= text:dde-connection::(text:connection-name::string string()) ;
 paragraph-content ::= text:measure::(text:kind::("value" | "unit" | "gap") string()) ;
 paragraph-content ::= text:table-formula::(common-field-formula-attlist common-field-display-value-formula-attlist common-field-data-style-name-attlist string()) ;
 paragraph-content ::= text:toc-mark-start::text-toc-mark-start-attrs ;
 paragraph-content ::= text:toc-mark-end::text-id ;
 paragraph-content ::= text:toc-mark::(text:string-value::string text-outline-level) ;
 paragraph-content ::= text:user-index-mark-start::(text-id text-outline-level text-index-name) ;
 paragraph-content ::= text:user-index-mark-end::(text-id text-outline-level) ;
 paragraph-content ::= text:user-index-mark::(text:string-value::string text-outline-level text-index-name) ;
 paragraph-content ::= text:alphabetical-index-mark-start::(text-id text-alphabetical-index-mark-attrs) ;
 paragraph-content ::= text:alphabetical-index-mark-end::text-id ;
 paragraph-content ::= text:alphabetical-index-mark::(text:string-value::string text-alphabetical-index-mark-attrs) ;
 paragraph-content ::= text:bibliography-mark::(text:bibliography-type::text-bibliography-types ((text:identifier::string) | (text:address::string) | (text:annote::string) | (text:author::string) | (text:booktitle::string) | (text:chapter::string) | (text:edition::string) | (text:editor::string) | (text:howpublished::string) | (text:institution::string) | (text:journal::string) | (text:month::string) | (text:note::string) | (text:number::string) | (text:organizations::string) | (text:pages::string) | (text:publisher::string) | (text:school::string) | (text:series::string) | (text:title::string) | (text:report-type::string) | (text:volume::string) | (text:year::string) | (text:url::string) | (text:custom1::string) | (text:custom2::string) | (text:custom3::string) | (text:custom4::string) | (text:custom5::string) | (text:isbn::string) | (text:issn::string))* string()) ;
 paragraph-content ::= presentation:header::ε ;
 paragraph-content ::= presentation:footer::ε ;
 paragraph-content ::= presentation:date-time::ε ;
config-config-item-map-entry-attlist ::= (config:name::string)? ;
number-day ::= number:day::(number-day-attlist common-calendar-attlist) ;
common-endsync-timing-attlist ::= (smil:endsync::("first" | "last" | "all" | "media"))? ;
change-mark-attr ::= text:change-id::IDREF ;
common-vertical-pos-attlist ::= (style:vertical-pos::("top" | "middle" | "bottom" | "from-top" | "below"))? (svg:y::coordinate)? ;
style-chart-properties-attlist ::= (chart:scale-text::boolean)? ;
 style-chart-properties-attlist ::= (chart:three-dimensional::boolean)? ;
 style-chart-properties-attlist ::= (chart:deep::boolean)? ;
 style-chart-properties-attlist ::= (chart:symbol-type::"none") | (chart:symbol-type::"automatic") | (chart:symbol-type::"named-symbol" chart:symbol-name::("square" | "diamond" | "arrow-down" | "arrow-up" | "arrow-right" | "arrow-left" | "bow-tie" | "hourglass" | "circle" | "star" | "x" | "plus" | "asterisk" | "horizontal-bar" | "vertical-bar")) | (chart:symbol-type::"image" chart:symbol-image::(xlink:href::anyURI)) | ε ;
 style-chart-properties-attlist ::= (chart:symbol-width::nonNegativeLength)? (chart:symbol-height::nonNegativeLength)? ;
 style-chart-properties-attlist ::= (chart:vertical::boolean)? ;
 style-chart-properties-attlist ::= (chart:connect-bars::boolean)? ;
 style-chart-properties-attlist ::= (chart:gap-width::integer)? (chart:overlap::integer)? ;
 style-chart-properties-attlist ::= (chart:japanese-candle-stick::boolean)? ;
 style-chart-properties-attlist ::= (chart:interpolation::("none" | "cubic-spline" | "b-spline"))? (chart:spline-order::positiveInteger)? (chart:spline-resolution::positiveInteger)? ;
 style-chart-properties-attlist ::= (chart:pie-offset::nonNegativeInteger)? ;
 style-chart-properties-attlist ::= (chart:lines::boolean)? ;
 style-chart-properties-attlist ::= (chart:solid-type::("cuboid" | "cylinder" | "cone" | "pyramid"))? ;
 style-chart-properties-attlist ::= (chart:stacked::boolean)? (chart:percentage::boolean)? ;
 style-chart-properties-attlist ::= (chart:link-data-style-to-source::boolean)? ;
 style-chart-properties-attlist ::= (chart:visible::boolean)? ;
 style-chart-properties-attlist ::= (chart:logarithmic::boolean)? ;
 style-chart-properties-attlist ::= (chart:maximum::double)? (chart:minimum::double)? (chart:origin::double)? (chart:interval-major::double)? (chart:interval-minor::positiveInteger)? ;
 style-chart-properties-attlist ::= (chart:tick-marks-major-inner::boolean)? (chart:tick-marks-major-outer::boolean)? (chart:tick-marks-minor-inner::boolean)? (chart:tick-marks-minor-outer::boolean)? ;
 style-chart-properties-attlist ::= (chart:display-label::boolean)? (chart:text-overlap::boolean)? (text:line-break::boolean)? (chart:label-arrangement::("side-by-side" | "stagger-even" | "stagger-odd"))? ;
 style-chart-properties-attlist ::= common-style-direction-attlist ;
 style-chart-properties-attlist ::= common-rotation-angle-attlist ;
 style-chart-properties-attlist ::= (chart:data-label-number::("none" | "value" | "percentage"))? ;
 style-chart-properties-attlist ::= (chart:data-label-text::boolean)? ;
 style-chart-properties-attlist ::= (chart:data-label-symbol::boolean)? ;
 style-chart-properties-attlist ::= (chart:mean-value::boolean)? ;
 style-chart-properties-attlist ::= (chart:error-category::("none" | "variance" | "standard-deviation" | "percentage" | "error-margin" | "constant"))? ;
 style-chart-properties-attlist ::= (chart:error-percentage::double)? ;
 style-chart-properties-attlist ::= (chart:error-margin::double)? ;
 style-chart-properties-attlist ::= (chart:error-lower-limit::double)? (chart:error-upper-limit::double)? ;
 style-chart-properties-attlist ::= (chart:error-upper-indicator::boolean)? (chart:error-lower-indicator::boolean)? ;
 style-chart-properties-attlist ::= (chart:series-source::("columns" | "rows"))? ;
 style-chart-properties-attlist ::= (chart:regression-type::("none" | "linear" | "logarithmic" | "exponential" | "power"))? ;
text-table-index-entry-template ::= text:table-index-entry-template::text-illustration-index-entry-content ;
text-linenumbering-configuration ::= text:linenumbering-configuration::(text-linenumbering-configuration-attlist text-linenumbering-separator?) ;
draw-path ::= draw:path::(common-draw-path-data-attlist common-draw-position-attlist common-draw-size-attlist common-draw-viewbox-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text) ;
number-embedded-text ::= number:embedded-text::(number-embedded-text-attlist string()) ;
style-handout-master ::= style:handout-master::(common-presentation-header-footer-attlist style-handout-master-attlist shape*) ;
presentation-show-text ::= presentation:show-text::(common-presentation-effect-attlist presentation-sound?) ;
draw-area-circle ::= draw:area-circle::(common-draw-area-attlist svg:cx::coordinate svg:cy::coordinate svg:r::length svg-desc? office-event-listeners?) ;
text-user-index-source-attr ::= text-index-scope-attr text-relative-tab-stop-position-attr text:index-name::string ;
 text-user-index-source-attr ::= (text:use-index-marks::boolean)? (text:use-graphics::boolean)? (text:use-tables::boolean)? (text:use-floating-frames::boolean)? (text:use-objects::boolean)? ;
 text-user-index-source-attr ::= (text:copy-outline-levels::boolean)? ;
draw-connector ::= draw:connector::(draw-connector-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text) ;
table-highlighted-range ::= table:highlighted-range::(table-highlighted-range-attlist | table-highlighted-range-attlist-invalid) ;
style-column-sep ::= style:column-sep::style-column-sep-attlist ;
text-linenumbering-configuration-attlist ::= (text:number-lines::boolean)? ;
 text-linenumbering-configuration-attlist ::= common-num-format-attlist? ;
 text-linenumbering-configuration-attlist ::= (text:style-name::styleNameRef)? ;
 text-linenumbering-configuration-attlist ::= (text:increment::nonNegativeInteger)? ;
 text-linenumbering-configuration-attlist ::= (text:number-position::("left" | "rigth" | "inner" | "outer"))? ;
 text-linenumbering-configuration-attlist ::= (text:offset::nonNegativeLength)? ;
 text-linenumbering-configuration-attlist ::= (text:count-empty-lines::boolean)? ;
 text-linenumbering-configuration-attlist ::= (text:count-in-text-boxes::boolean)? ;
 text-linenumbering-configuration-attlist ::= (text:restart-on-page::boolean)? ;
draw-stroke-dash ::= draw:stroke-dash::draw-stroke-dash-attlist ;
text-object-index-entry-template ::= text:object-index-entry-template::text-illustration-index-entry-content ;
list-source-type ::= (form:list-source-type::("table" | "query" | "sql" | "sql-pass-through" | "value-list" | "table-fields"))? ;
number-month ::= number:month::(number-month-attlist common-calendar-attlist) ;
chart-data-point ::= chart:data-point::chart-data-point-attlist ;
office-scripts ::= (office:scripts::(office-script* office-event-listeners?))? ;
common-vertical-margin-attlist ::= (fo:margin-top::(nonNegativeLength | percent))? (fo:margin-bottom::(nonNegativeLength | percent))? ;
table-data-pilot-table ::= table:data-pilot-table::(table-data-pilot-table-attlist (table-database-source-sql | table-database-source-table | table-database-source-query | table-source-service | table-source-cell-range)? table-data-pilot-field+) ;
label ::= (form:label::string)? ;
style-header-footer-properties-attlist ::= (svg:height::length)? (fo:min-height::length)? ;
 style-header-footer-properties-attlist ::= common-horizontal-margin-attlist common-vertical-margin-attlist common-margin-attlist ;
 style-header-footer-properties-attlist ::= common-border-attlist ;
 style-header-footer-properties-attlist ::= common-border-line-width-attlist ;
 style-header-footer-properties-attlist ::= common-padding-attlist ;
 style-header-footer-properties-attlist ::= common-background-color-attlist ;
 style-header-footer-properties-attlist ::= common-shadow-attlist ;
style-column ::= style:column::style-column-attlist ;
style-font-face-attlist ::= (svg:font-family::string)? (svg:font-style::fontStyle)? (svg:font-variant::fontVariant)? (svg:font-weight::fontWeight)? (svg:font-stretch::("normal" | "ultra-condensed" | "extra-condensed" | "condensed" | "semi-condensed" | "semi-expanded" | "expanded" | "extra-expanded" | "ultra-expanded"))? (svg:font-size::positiveLength)? (svg:unicode-range::string())? (svg:units-per-em::integer)? (svg:panose-1::string())? (svg:stemv::integer)? (svg:stemh::integer)? (svg:slope::integer)? (svg:cap-height::integer)? (svg:x-height::integer)? (svg:accent-height::integer)? (svg:ascent::integer)? (svg:descent::integer)? (svg:widths::string())? (svg:bbox::string())? (svg:ideographic::integer)? (svg:alphabetic::integer)? (svg:mathematical::integer)? (svg:hanging::integer)? (svg:v-ideographic::integer)? (svg:v-alphabetic::integer)? (svg:v-mathematical::integer)? (svg:v-hanging::integer)? (svg:underline-position::integer)? (svg:underline-thickness::integer)? (svg:strikethrough-position::integer)? (svg:strikethrough-thickness::integer)? (svg:overline-position::integer)? (svg:overline-thickness::integer)? ;
 style-font-face-attlist ::= style:name::string ;
 style-font-face-attlist ::= (style:font-adornments::string)? ;
 style-font-face-attlist ::= (style:font-family-generic::fontFamilyGeneric)? ;
 style-font-face-attlist ::= (style:font-pitch::fontPitch)? ;
 style-font-face-attlist ::= (style:font-charset::textEncoding)? ;
style-num-letter-sync-attlist ::= (style:num-letter-sync::boolean)? ;
common-field-fixed-attlist ::= (text:fixed::boolean)? ;
text-changed-region-attr ::= text:id::ID ;
draw-stroke-dash-attlist ::= draw:name::styleName ;
 draw-stroke-dash-attlist ::= (draw:display-name::string)? ;
 draw-stroke-dash-attlist ::= (draw:style::("rect" | "round"))? ;
 draw-stroke-dash-attlist ::= (draw:dots1::integer)? (draw:dots1-length::length)? (draw:dots2::integer)? (draw:dots2-length::length)? ;
 draw-stroke-dash-attlist ::= (draw:distance::length)? ;
table-last-column ::= table:last-column::common-table-template-attlist ;
table-cell-content-deletion ::= table:cell-content-deletion::((table:id::string)? table-cell-address? table-change-track-table-cell?) ;
office-script-attlist ::= script:language::string ;
config-config-item-map-named ::= config:config-item-map-named::(config-config-item-map-named-attlist config-config-item-map-entry+) ;
number-seconds-attlist ::= (number:style::("short" | "long"))? ;
 number-seconds-attlist ::= (number:decimal-places::integer)? ;
table-deletion ::= table:deletion::(table-deletion-attlist common-table-change-attlist office-change-info table-dependencies? table-deletions? table-cut-offs?) ;
text-index-entry-chapter-attrs ::= (text:display::("name" | "number" | "number-and-name"))? ;
style-ruby-properties ::= style:ruby-properties::style-ruby-properties-content ;
common-contour-attlist ::= draw:recreate-on-edit::boolean ;
change-marks ::= (text:change::change-mark-attr) | (text:change-start::change-mark-attr) | (text:change-end::change-mark-attr) ;
table-database-source-query ::= table:database-source-table::table-database-source-table-attlist ;
common-field-data-style-name-attlist ::= (style:data-style-name::styleNameRef)? ;
style-column-attlist ::= style:rel-width::relativeLength ;
 style-column-attlist ::= (fo:start-indent::length)? ;
 style-column-attlist ::= (fo:end-indent::length)? ;
 style-column-attlist ::= (fo:space-before::length)? ;
 style-column-attlist ::= (fo:space-after::length)? ;
common-fill-timing-attlist ::= (smil:fill::("remove" | "freeze" | "hold" | "auto" | "default" | "transition"))? ;
table-source-service ::= table:source-service::table-source-service-attlist ;
office-annotation ::= office:annotation::(office-annotation-attlist draw-caption-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist dc-creator? dc-date? meta-date-string? (text-p | text-list)*) ;
config-config-item-map-named-attlist ::= config:name::string ;
style-footer-left ::= style:footer-left::(common-style-header-footer-attlist header-footer-content) ;
common-anim-target-attlist ::= (smil:targetElement::IDREF)? ;
 common-anim-target-attlist ::= (anim:sub-item::string)? ;
draw-line ::= draw:line::(draw-line-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text) ;
style-ruby-properties-attlist ::= (style:ruby-position::("above" | "below"))? ;
 style-ruby-properties-attlist ::= (style:ruby-align::("left" | "center" | "right" | "distribute-letter" | "distribute-space"))? ;
table-sort-by-attlist ::= table:field-number::nonNegativeInteger ;
 table-sort-by-attlist ::= (table:data-type::("text" | "number" | "automatic" | string))? ;
 table-sort-by-attlist ::= (table:order::("ascending" | "descending"))? ;
draw-page-thumbnail ::= draw:page-thumbnail::(draw-page-thumbnail-attlist common-draw-position-attlist common-draw-size-attlist presentation-shape-attlist common-draw-shape-with-styles-attlist) ;
table-odd-rows ::= table:odd-rows::common-table-template-attlist ;
style-graphic-properties ::= style:graphic-properties::style-graphic-properties-content ;
table-source-service-attlist ::= table:name::string ;
 table-source-service-attlist ::= table:source-name::string ;
 table-source-service-attlist ::= table:object-name::string ;
 table-source-service-attlist ::= (table:user-name::string)? ;
 table-source-service-attlist ::= (table:password::string)? ;
common-calendar-attlist ::= (number:calendar::("gregorian" | "gengou" | "ROC" | "hanja_yoil" | "hanja" | "hijri" | "jewish" | "buddhist" | string))? ;
draw-handle ::= draw:handle::draw-handle-attlist ;
table-cell-content-change ::= table:cell-content-change::(common-table-change-attlist table-cell-address office-change-info table-dependencies? table-deletions? table-previous) ;
table-subtotal-field ::= table:subtotal-field::table-subtotal-field-attlist ;
chart-legend-attlist ::= (chart:legend-position::("start" | "end" | "top" | "bottom") (chart:legend-align::("start" | "center" | "end"))?) | (chart:legend-position::("top-start" | "bottom-start" | "top-end" | "bottom-end")) | ε ;
 chart-legend-attlist ::= common-draw-position-attlist ;
 chart-legend-attlist ::= (style:legend-expansion::("wide" | "high" | "balanced")) | (style:legend-expansion::"custom" style:legend-expansion-aspect-ratio::double) | ε ;
 chart-legend-attlist ::= (chart:style-name::styleNameRef)? ;
table-subtotal-rules ::= table:subtotal-rules::(table-subtotal-rules-attlist table-sort-groups? table-subtotal-rule*) ;
chart-plot-area ::= chart:plot-area::(chart-plot-area-attlist dr3d-light* chart-axis* chart-series* chart-stock-gain-marker? chart-stock-loss-marker? chart-stock-range-line? chart-wall? chart-floor?) ;
draw-measure-attlist ::= svg:x1::coordinate svg:y1::coordinate ;
 draw-measure-attlist ::= svg:x2::coordinate svg:y2::coordinate ;
draw-param ::= draw:param::draw-param-attlist ;
draw-object-ole ::= draw:object-ole::(draw-object-ole-attlist common-draw-data-attlist | office-binary-data) ;
number-era-attlist ::= (number:style::("short" | "long"))? ;
number-percentage-style ::= number:percentage-style::(common-data-style-attlist style-text-properties? number-text? number-and-text? style-map*) ;
office-body-content ::= office:text::(office-text-attlist office-text-content-prelude office-text-content-main* office-text-content-epilogue) ;
 office-body-content ::= office:drawing::(office-drawing-attlist office-drawing-content-prelude office-drawing-content-main office-drawing-content-epilogue) ;
 office-body-content ::= office:presentation::(office-presentation-attlist office-presentation-content-prelude office-presentation-content-main office-presentation-content-epilogue) ;
 office-body-content ::= office:spreadsheet::(office-spreadsheet-attlist office-spreadsheet-content-prelude office-spreadsheet-content-main office-spreadsheet-content-epilogue) ;
 office-body-content ::= office:chart::(office-chart-attlist office-chart-content-prelude office-chart-content-main office-chart-content-epilogue) ;
 office-body-content ::= office:image::(office-image-attlist office-image-content-prelude office-image-content-main office-image-content-epilogue) ;
draw-contour-polygon ::= draw:contour-polygon::(common-contour-attlist common-draw-size-attlist common-draw-viewbox-attlist common-draw-points-attlist) ;
chart-plot-area-attlist ::= common-draw-position-attlist common-draw-size-attlist ;
 chart-plot-area-attlist ::= (chart:style-name::styleNameRef)? ;
 chart-plot-area-attlist ::= (table:cell-range-address::cellRangeAddress)? ;
 chart-plot-area-attlist ::= (chart:data-source-has-labels::("none" | "row" | "column" | "both"))? ;
 chart-plot-area-attlist ::= dr3d-scene-attlist common-dr3d-transform-attlist ;
form-formatted-text-attlist ::= form-control-attlist common-current-value-attlist common-disabled-attlist common-maxlength-attlist common-printable-attlist common-readonly-attlist common-tab-attlist common-title-attlist common-value-attlist common-convert-empty-attlist common-data-field-attlist ;
 form-formatted-text-attlist ::= (form:max-value::string)? ;
 form-formatted-text-attlist ::= (form:min-value::string)? ;
 form-formatted-text-attlist ::= (form:validation::boolean)? ;
chart-mean-value ::= chart:mean-value::chart-mean-value-attlist ;
style-section-properties ::= style:section-properties::style-section-properties-content ;
table-source-cell-range-attlist ::= table:cell-range-address::cellRangeAddress ;
controls ::= column-controls ;
 controls ::= form:password::(form-password-attlist common-form-control-content) ;
 controls ::= form:file::(form-file-attlist common-form-control-content) ;
 controls ::= form:time::(form-time-attlist common-numeric-control-attlist common-form-control-content) ;
 controls ::= form:fixed-text::(form-fixed-text-attlist common-form-control-content) ;
 controls ::= form:button::(form-button-attlist common-form-control-content) ;
 controls ::= form:image::(form-image-attlist common-form-control-content) ;
 controls ::= form:radio::(form-radio-attlist common-form-control-content) ;
 controls ::= form:frame::(form-frame-attlist common-form-control-content) ;
 controls ::= form:image-frame::(form-image-frame-attlist common-form-control-content) ;
 controls ::= form:hidden::(form-hidden-attlist common-form-control-content) ;
 controls ::= form:grid::(form-grid-attlist common-form-control-content form-column*) ;
 controls ::= form:value-range::(form-value-range-attlist common-form-control-content) ;
 controls ::= form:generic-control::(form-generic-control-attlist common-form-control-content) ;
text-illustration-index ::= text:illustration-index::(sectionAttr text-illustration-index-source text-index-body) ;
office-dde-source ::= office:dde-source::(office-dde-source-attlist common-dde-connection-decl-attlist) ;
anin-iterate-attlist ::= (smil:targetElement::IDREF)? ;
 anin-iterate-attlist ::= (anim:iterate-type::string)? ;
 anin-iterate-attlist ::= (anim:iterate-interval::duration)? ;
table-scenario ::= table:scenario::table-scenario-attlist ;
common-table-template-attlist ::= text:style-name::styleNameRef ;
math-math ::= math:math::mathMarkup ;
common-current-value-attlist ::= (form:current-value::string)? ;
table-content-validation ::= table:content-validation::(table-validation-attlist table-help-message? (table-error-message | (table-error-macro office-event-listeners?))?) ;
table-data-pilot-level ::= table:data-pilot-level::(table-data-pilot-level-attlist table-data-pilot-subtotals? table-data-pilot-members? table-data-pilot-display-info? table-data-pilot-sort-info? table-data-pilot-layout-info?) ;
table-dependency ::= table:dependency::(table:id::string) ;
draw-equation-attlist ::= (draw:name::string)? ;
 draw-equation-attlist ::= (draw:formula::string)? ;
text-conditional-text-attlist ::= text:condition::formula ;
 text-conditional-text-attlist ::= text:string-value-if-true::string ;
 text-conditional-text-attlist ::= text:string-value-if-false::string ;
 text-conditional-text-attlist ::= (text:current-value::boolean)? ;
style-table-column-properties-attlist ::= (style:column-width::positiveLength)? (style:rel-column-width::relativeLength)? ;
 style-table-column-properties-attlist ::= (style:use-optimal-column-width::boolean)? ;
 style-table-column-properties-attlist ::= common-break-attlist ;
text-list-item-attr ::= (text:start-value::nonNegativeInteger)? ;
selected ::= (form:selected::boolean)? ;
common-draw-circle-ellipse-attlist ::= (svg:cx::coordinate svg:cy::coordinate)? ;
 common-draw-circle-ellipse-attlist ::= (draw:kind::("full" | "section" | "cut" | "arc"))? ;
 common-draw-circle-ellipse-attlist ::= (draw:start-angle::double)? ;
 common-draw-circle-ellipse-attlist ::= (draw:end-angle::double)? ;
text-page-number-attlist ::= common-field-num-format-attlist common-field-fixed-attlist ;
 text-page-number-attlist ::= (text:page-adjust::integer)? ;
 text-page-number-attlist ::= (text:select-page::("previous" | "current" | "next"))? ;
table-table-source ::= table:table-source::(table-table-source-attlist table-linked-source-attlist) ;
table-label-range-attlist ::= table:label-cell-range-address::cellRangeAddress ;
 table-label-range-attlist ::= table:data-cell-range-address::cellRangeAddress ;
 table-label-range-attlist ::= table:orientation::("column" | "row") ;
text-sequence-decl ::= text:sequence-decl::text-sequence-decl-attlist ;
style-style ::= style:style::(style-style-attlist style-style-content style-map*) ;
draw-enhanced-geometry-attlist ::= (draw:type::custom-shape-type)? ;
 draw-enhanced-geometry-attlist ::= (svg:viewBox::(integer integer integer integer))? ;
 draw-enhanced-geometry-attlist ::= (draw:mirror-vertical::boolean)? (draw:mirror-horizontal::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:text-rotate-angle::double)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-allowed::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:text-path-allowed::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:concentric-gradient-fill-allowed::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-brightness::percent)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-depth::(length double))? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-diffusion::percent)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-number-of-line-segments::integer)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-light-face::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-first-light-harsh::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-second-light-harsh::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-first-light-level::percent)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-second-light-level::percent)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-first-light-direction::vector3D)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-second-light-direction::vector3D)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-metal::boolean)? ;
 draw-enhanced-geometry-attlist ::= (dr3d:shade-mode::("flat" | "phong" | "gouraud" | "draft"))? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-rotation-angle::(double double))? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-rotation-center::vector3D)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-shininess::percent)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-skew::(double double))? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-specularity::percent)? ;
 draw-enhanced-geometry-attlist ::= (dr3d:projection::("parallel" | "perspective"))? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-viewpoint::point3D)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-origin::(double double))? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-color::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:enhanced-path::string)? ;
 draw-enhanced-geometry-attlist ::= (draw:path-stretchpoint-x::double)? (draw:path-stretchpoint-y::double)? ;
 draw-enhanced-geometry-attlist ::= (draw:text-areas::string)? ;
 draw-enhanced-geometry-attlist ::= (draw:glue-points::string)? ;
 draw-enhanced-geometry-attlist ::= (draw:glue-point-type::("none" | "segments" | "rectangle"))? ;
 draw-enhanced-geometry-attlist ::= (draw:glue-point-leaving-directions::string())? ;
 draw-enhanced-geometry-attlist ::= (draw:text-path::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:text-path-mode::("normal" | "path" | "shape"))? ;
 draw-enhanced-geometry-attlist ::= (draw:text-path-scale::("path" | "shape"))? ;
 draw-enhanced-geometry-attlist ::= (draw:text-path-same-letter-heights::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:modifiers::string)? ;
common-field-name-attlist ::= text:name::variableName ;
style-presentation-page-layout ::= style:presentation-page-layout::(style:name::styleName (style:display-name::string)? presentation-placeholder*) ;
text-index-entry-page-number ::= text:index-entry-page-number::((text:style-name::styleNameRef)?) ;
presentation-sound-attlist ::= (presentation:play-full::boolean)? ;
text-alphabetical-index-auto-mark-file ::= text:alphabetical-index-auto-mark-file::(xlink:href::anyURI (xlink:type::"simple")?) ;
draw-gradient-attlist ::= (draw:start-color::color)? (draw:end-color::color)? ;
 draw-gradient-attlist ::= (draw:start-intensity::percent)? (draw:end-intensity::percent)? ;
style-background-image-attlist ::= (style:repeat::("no-repeat" | "repeat" | "stretch"))? ;
 style-background-image-attlist ::= (style:position::("left" | "center" | "right" | "top" | "bottom" | (horiBackPos vertBackPos) | (vertBackPos horiBackPos)))? ;
 style-background-image-attlist ::= (style:filter-name::string)? ;
 style-background-image-attlist ::= (draw:opacity::percent)? ;
svg-font-face-src ::= svg:font-face-src::((svg-font-face-uri | svg-font-face-name)+) ;
text-sequence-decl-attlist ::= common-field-name-attlist ;
 text-sequence-decl-attlist ::= text:display-outline-level::nonNegativeInteger ;
 text-sequence-decl-attlist ::= (text:separation-character::character)? ;
svg-font-face-name ::= svg:font-face-name::((name::string())?) ;
bound-column ::= (form:bound-column::string)? ;
style-drop-cap-attlist ::= (style:length::("word" | positiveInteger))? ;
 style-drop-cap-attlist ::= (style:lines::positiveInteger)? ;
 style-drop-cap-attlist ::= (style:distance::length)? ;
 style-drop-cap-attlist ::= (style:style-name::styleNameRef)? ;
text-table-of-content ::= text:table-of-content::(sectionAttr text-table-of-content-source text-index-body) ;
anim-command-attlist ::= anim:command::string ;
table-data-pilot-members ::= table:data-pilot-members::(table-data-pilot-member*) ;
text-tracked-changes ::= (text:tracked-changes::(text-tracked-changes-attr text-changed-region*))? ;
text-index-entry-link-end ::= text:index-entry-link-end::((text:style-name::styleNameRef)?) ;
number-hours-attlist ::= (number:style::("short" | "long"))? ;
form-item ::= form:item::(form-item-attlist string()) ;
draw-hatch ::= draw:hatch::draw-hatch-attlist ;
sectionAttr ::= (text:style-name::styleNameRef)? ;
 sectionAttr ::= text:name::string ;
 sectionAttr ::= (text:protected::boolean)? ;
 sectionAttr ::= (text:protection-key::string)? ;
office-meta ::= (office:meta::office-meta-content)? ;
style-table-row-properties-attlist ::= (style:row-height::positiveLength)? (style:min-row-height::nonNegativeLength)? ;
 style-table-row-properties-attlist ::= (style:use-optimal-row-height::boolean)? ;
 style-table-row-properties-attlist ::= common-background-color-attlist ;
 style-table-row-properties-attlist ::= common-break-attlist ;
 style-table-row-properties-attlist ::= (fo:keep-together::("auto" | "always"))? ;
chart-regression-curve ::= chart:regression-curve::chart-regression-curve-attlist ;
common-auto-reorder-attlist ::= (number:automatic-order::boolean)? ;
table-consolidation ::= table:consolidation::table-consolidation-attlist ;
text-bibliography-configuration ::= text:bibliography-configuration::(text-bibliography-configuration-attlist text-sort-key*) ;
draw-circle-attlist ::= (svg:r::length)? ;
chart-footer ::= chart:footer::(chart-title-attlist text-p?) ;
table-subtotal-rule ::= table:subtotal-rule::(table-subtotal-rule-attlist table-subtotal-field*) ;
common-stock-marker-attlist ::= (chart:style-name::styleNameRef)? ;
chart-regression-curve-attlist ::= (chart:style-name::styleNameRef)? ;
common-value-and-type-attlist ::= (office:value-type::"float" office:value::double) | (office:value-type::"percentage" office:value::double) | (office:value-type::"currency" office:value::double (office:currency::string)?) | (office:value-type::"date" office:date-value::dateOrDateTime) | (office:value-type::"time" office:time-value::duration) | (office:value-type::"boolean" office:boolean-value::boolean) | (office:value-type::"string" (office:string-value::string)?) ;
draw-caption ::= draw:caption::(draw-caption-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text) ;
text-index-body ::= text:index-body::(index-content-main*) ;
common-decimal-places-attlist ::= (number:decimal-places::integer)? ;
number-minutes ::= number:minutes::number-minutes-attlist ;
chart-wall ::= chart:wall::chart-wall-attlist ;
text-index-entry-bibliography ::= text:index-entry-bibliography::text-index-entry-bibliography-attrs ;
table-subtotal-rule-attlist ::= table:group-by-field-number::nonNegativeInteger ;
table-filter ::= table:filter::(table-filter-attlist table-filter-condition | table-filter-and | table-filter-or) ;
form-listbox-attlist ::= form-control-attlist common-disabled-attlist dropdown common-printable-attlist size common-tab-attlist common-title-attlist bound-column common-data-field-attlist list-source list-source-type ;
 form-listbox-attlist ::= (form:multiple::boolean)? ;
 form-listbox-attlist ::= (form:xforms-list-source::string)? ;
style-table-cell-properties-attlist ::= (style:vertical-align::("top" | "middle" | "bottom" | "automatic"))? ;
 style-table-cell-properties-attlist ::= (style:text-align-source::("fix" | "value-type"))? ;
 style-table-cell-properties-attlist ::= common-style-direction-attlist ;
 style-table-cell-properties-attlist ::= (style:glyph-orientation-vertical::("auto" | "0"))? ;
 style-table-cell-properties-attlist ::= common-shadow-attlist ;
 style-table-cell-properties-attlist ::= common-background-color-attlist ;
 style-table-cell-properties-attlist ::= common-border-attlist ;
 style-table-cell-properties-attlist ::= (style:diagonal-tl-br::string)? (style:diagonal-tl-br-widths::borderWidths)? (style:diagonal-bl-tr::string)? (style:diagonal-bl-tr-widths::borderWidths)? ;
 style-table-cell-properties-attlist ::= common-border-line-width-attlist ;
 style-table-cell-properties-attlist ::= common-padding-attlist ;
 style-table-cell-properties-attlist ::= (fo:wrap-option::("no-wrap" | "wrap"))? ;
 style-table-cell-properties-attlist ::= common-rotation-angle-attlist ;
 style-table-cell-properties-attlist ::= (style:rotation-align::("none" | "bottom" | "top" | "center"))? ;
 style-table-cell-properties-attlist ::= (style:cell-protect::("none" | "hidden-and-protected" | (("protected" | "formula-hidden")+)))? ;
 style-table-cell-properties-attlist ::= (style:print-content::boolean)? ;
 style-table-cell-properties-attlist ::= (style:decimal-places::nonNegativeInteger)? ;
 style-table-cell-properties-attlist ::= (style:repeat-content::boolean)? ;
 style-table-cell-properties-attlist ::= (style:shrink-to-fit::boolean)? ;
text-alphabetical-index-mark-attrs ::= (text:key1::string)? (text:key2::string)? ;
 text-alphabetical-index-mark-attrs ::= (text:string-value-phonetic::string)? (text:key1-phonetic::string)? (text:key2-phonetic::string)? ;
 text-alphabetical-index-mark-attrs ::= (text:main-entry::boolean)? ;
text-sort-key ::= text:sort-key::text-sort-key-attlist ;
chart-floor-attlist ::= (svg:width::length)? ;
 chart-floor-attlist ::= (chart:style-name::styleNameRef)? ;
presentation-notes ::= presentation:notes::(common-presentation-header-footer-attlist presentation-notes-attlist shape*) ;
number-number ::= number:number::(number-number-attlist common-decimal-places-attlist common-number-attlist number-embedded-text*) ;
text-notes-configuration ::= text:notes-configuration::text-notes-configuration-content ;
table-database-range ::= table:database-range::(table-database-range-attlist (table-database-source-sql | table-database-source-table | table-database-source-query)? table-filter? table-sort? table-subtotal-rules?) ;
text-index-scope-attr ::= (text:index-scope::("document" | "chapter"))? ;
text-section ::= text:section::(text-section-attr text-section-source | text-section-source-dde | ε text-content*) ;
presentation-animation-group ::= presentation:animation-group::(presentation-animation-elements*) ;
text-relative-tab-stop-position-attr ::= (text:relative-tab-stop-position::boolean)? ;
number-currency-symbol-attlist ::= (number:language::languageCode)? (number:country::countryCode)? ;
text-list-item ::= text:list-item::(text-list-item-attr text-list-item-content) ;
text-list-level-style-number-attr ::= (text:style-name::styleNameRef)? ;
 text-list-level-style-number-attr ::= common-num-format-attlist common-num-format-prefix-suffix-attlist ;
 text-list-level-style-number-attr ::= (text:display-levels::positiveInteger)? ;
 text-list-level-style-number-attr ::= (text:start-value::positiveInteger)? ;
common-border-attlist ::= (fo:border::string)? (fo:border-top::string)? (fo:border-bottom::string)? (fo:border-left::string)? (fo:border-right::string)? ;
presentation-notes-attlist ::= (style:page-layout-name::styleNameRef)? ;
 presentation-notes-attlist ::= (draw:style-name::styleNameRef)? ;
table-database-range-attlist ::= (table:name::string)? ;
 table-database-range-attlist ::= (table:is-selection::boolean)? ;
 table-database-range-attlist ::= (table:on-update-keep-styles::boolean)? ;
 table-database-range-attlist ::= (table:on-update-keep-size::boolean)? ;
 table-database-range-attlist ::= (table:has-persistent-data::boolean)? ;
 table-database-range-attlist ::= (table:orientation::("column" | "row"))? ;
 table-database-range-attlist ::= (table:contains-header::boolean)? ;
 table-database-range-attlist ::= (table:display-filter-buttons::boolean)? ;
 table-database-range-attlist ::= table:target-range-address::cellRangeAddress ;
 table-database-range-attlist ::= (table:refresh-delay::boolean)? ;
form-property-name ::= form:property-name::string ;
config-config-item-set-attlist ::= config:name::string ;
text-object-index-source-attrs ::= text-index-scope-attr ;
 text-object-index-source-attrs ::= text-relative-tab-stop-position-attr ;
 text-object-index-source-attrs ::= (text:use-spreadsheet-objects::boolean)? ;
 text-object-index-source-attrs ::= (text:use-math-objects::boolean)? ;
 text-object-index-source-attrs ::= (text:use-draw-objects::boolean)? ;
 text-object-index-source-attrs ::= (text:use-chart-objects::boolean)? ;
 text-object-index-source-attrs ::= (text:use-other-objects::boolean)? ;
table-change-track-table-cell-attlist ::= (table:cell-address::cellAddress)? ;
 table-change-track-table-cell-attlist ::= (table:matrix-covered::boolean)? ;
 table-change-track-table-cell-attlist ::= (table:formula::string)? (table:number-matrix-columns-spanned::positiveInteger)? (table:number-matrix-rows-spanned::positiveInteger)? common-value-and-type-attlist? ;
text-illustration-index-source ::= text:illustration-index-source::(text-illustration-index-source-attrs text-index-title-template? text-illustration-index-entry-template?) ;
style-region-center ::= style:region-center::region-content ;
number-number-style ::= number:number-style::(common-data-style-attlist style-text-properties? number-text? (any-number number-text?)? style-map*) ;
target-frame ::= (office:target-frame::targetFrameName)? ;
form-property-value-and-type-attlist ::= common-value-and-type-attlist | (office:value-type::"void") ;
table-named-range ::= table:named-range::table-named-range-attlist ;
style-header ::= style:header::(common-style-header-footer-attlist header-footer-content) ;
form-time-attlist ::= (form:value::time)? ;
 form-time-attlist ::= (form:current-value::time)? ;
 form-time-attlist ::= (form:min-value::time)? ;
 form-time-attlist ::= (form:max-value::time)? ;
table-cell-address ::= table:cell-address::common-table-cell-address-attlist ;
table-operation ::= table:operation::table-operation-attlist ;
office-document-meta ::= office:document-meta::(office-document-common-attrs office-meta) ;
text-index-entry-text ::= text:index-entry-text::((text:style-name::styleNameRef)?) ;
common-draw-data-attlist ::= xlink:href::anyURI (xlink:type::"simple")? (xlink:show::"embed")? (xlink:actuate::"onLoad")? ;
chart-axis-attlist ::= chart:dimension::("x" | "y" | "z") ;
 chart-axis-attlist ::= (chart:name::string)? ;
 chart-axis-attlist ::= (chart:style-name::styleNameRef)? ;
text-page-attlist ::= text:master-page-name::styleNameRef ;
text-table-of-content-entry-template ::= text:table-of-content-entry-template::(text-table-of-content-entry-template-attlist text-table-of-content-children*) ;
draw-g ::= draw:g::(draw-g-attlist common-draw-z-index-attlist common-draw-name-attlist common-draw-id-attlist common-draw-style-name-attlist common-text-spreadsheet-shape-attlist office-event-listeners? draw-glue-point* shape*) ;
common-draw-path-data-attlist ::= svg:d::pathData ;
table-named-range-attlist ::= table:name::string table:cell-range-address::cellRangeAddress (table:base-cell-address::cellAddress)? (table:range-usable-as::("none" | (("print-range" | "filter" | "repeat-row" | "repeat-column")+)))? ;
number-quarter-attlist ::= (number:style::("short" | "long"))? ;
draw-a ::= draw:a::(draw-a-attlist draw-frame) ;
table-filter-condition-attlist ::= table:field-number::nonNegativeInteger ;
 table-filter-condition-attlist ::= table:value::string ;
 table-filter-condition-attlist ::= table:operator::string ;
 table-filter-condition-attlist ::= (table:case-sensitive::string)? ;
 table-filter-condition-attlist ::= (table:data-type::("text" | "number"))? ;
table-previous ::= table:previous::((table:id::string)? table-change-track-table-cell) ;
number-text-style ::= number:text-style::(common-data-style-attlist style-text-properties? number-text? (number-text-content number-text?)* style-map*) ;
office-body ::= office:body::office-body-content ;
svg-font-face-uri ::= svg:font-face-uri::(common-svg-font-face-xlink-attlist svg-font-face-format*) ;
draw-g-attlist ::= (svg:y::coordinate)? ;
text-list-style-content ::= text:list-level-style-number::(text-list-level-style-attr text-list-level-style-number-attr style-list-level-properties? style-text-properties?) ;
 text-list-style-content ::= text:list-level-style-bullet::(text-list-level-style-attr text-list-level-style-bullet-attr style-list-level-properties? style-text-properties?) ;
 text-list-style-content ::= text:list-level-style-image::(text-list-level-style-attr text-list-level-style-image-attr style-list-level-properties?) ;
table-table-row-attlist ::= (table:number-rows-repeated::positiveInteger)? ;
 table-table-row-attlist ::= (table:style-name::styleNameRef)? ;
 table-table-row-attlist ::= (table:default-cell-style-name::styleNameRef)? ;
 table-table-row-attlist ::= (table:visibility::table-visibility-value)? ;
style-page-layout ::= style:page-layout::(style-page-layout-attlist style-page-layout-properties? style-header-style? style-footer-style?) ;
office-process-content ::= (office:process-content::boolean)? ;
form-date-attlist ::= (form:value::date)? ;
 form-date-attlist ::= (form:current-value::date)? ;
 form-date-attlist ::= (form:min-value::date)? ;
 form-date-attlist ::= (form:max-value::date)? ;
common-form-relative-image-position-attlist ::= ((form:image-position::"center")?) | (form:image-position::("start" | "end" | "top" | "bottom") (form:image-align::("start" | "center" | "end"))?) ;
presentation-play ::= presentation:play::presentation-play-attlist ;
table-insertion-cut-off ::= table:insertion-cut-off::table-insertion-cut-off-attlist ;
presentation-animations ::= presentation:animations::((presentation-animation-elements | presentation-animation-group)*) ;
style-header-footer-properties ::= style:header-footer-properties::style-header-footer-properties-content ;
common-value-attlist ::= (form:value::string)? ;
style-footnote-sep-attlist ::= (style:width::length)? (style:rel-width::percent)? (style:color::color)? (style:line-style::lineStyle)? (style:adjustment::("left" | "center" | "right"))? (style:distance-before-sep::length)? (style:distance-after-sep::length)? ;
table-first-row ::= table:first-row::common-table-template-attlist ;
text-list-header ::= text:list-header::text-list-item-content ;
style-column-sep-attlist ::= (style:style::("none" | "solid" | "dotted" | "dashed" | "dot-dashed"))? ;
 style-column-sep-attlist ::= style:width::length ;
 style-column-sep-attlist ::= (style:height::percent)? ;
 style-column-sep-attlist ::= (style:vertical-align::("top" | "middle" | "bottom"))? ;
 style-column-sep-attlist ::= (style:color::color)? ;
text-user-index-entry-template ::= text:user-index-entry-template::(text-user-index-entry-template-attrs (text-index-entry-chapter | text-index-entry-page-number | text-index-entry-text | text-index-entry-span | text-index-entry-tab-stop)*) ;
table-database-source-table ::= table:database-source-query::table-database-source-query-attlist ;
table-table-cell-range-source-attlist ::= table:name::string ;
 table-table-cell-range-source-attlist ::= table:last-column-spanned::positiveInteger table:last-row-spanned::positiveInteger ;
common-form-control-attlist ::= (form:name::string)? ;
 common-form-control-attlist ::= (form:control-implementation::namespacedToken)? ;
common-svg-font-face-xlink-attlist ::= xlink:href::anyURI (xlink:type::"simple")? (xlink:actuate::"onRequest")? ;
draw-area-polygon ::= draw:area-polygon::(common-draw-area-attlist svg:x::coordinate svg:y::coordinate svg:width::length svg:height::length common-draw-viewbox-attlist common-draw-points-attlist svg-desc? office-event-listeners?) ;
chart-stock-gain-marker ::= chart:stock-gain-marker::common-stock-marker-attlist ;
office-forms ::= (office:forms::(office-forms-attlist (form-form | xforms-model)*))? ;
common-restart-timing-attlist ::= (smil:restart::("never" | "always" | "whenNotActive" | "default"))? ;
form-properties ::= form:properties::(form-property+) ;
common-maxlength-attlist ::= (form:max-length::nonNegativeInteger)? ;
draw-object-attlist ::= (draw:notify-on-update-of-ranges::string)? ;
common-rotation-angle-attlist ::= (style:rotation-angle::nonNegativeInteger)? ;
common-readonly-attlist ::= (form:readonly::boolean)? ;
draw-measure ::= draw:measure::(draw-measure-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text) ;
draw-control ::= draw:control::(draw-control-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist draw-glue-point*) ;
table-table-column ::= table:table-column::table-table-column-attlist ;
text-sequence-ref-content ::= (text:reference-format::("page" | "chapter" | "direction" | "text" | "category-and-value" | "caption" | "value"))? ;
table-data-pilot-display-info ::= table:data-pilot-display-info::table-data-pilot-display-info-attlist ;
table-source-range-address ::= table:source-range-address::common-table-range-attlist ;
presentation-show ::= presentation:show::presentation-show-attlist ;
office-forms-attlist ::= (form:automatic-focus::boolean)? ;
 office-forms-attlist ::= (form:apply-design-mode::boolean)? ;
draw-plugin-attlist ::= (draw:mime-type::string())? ;
svg-stop ::= svg:stop::(svg:offset::(double | percent) (svg:stop-color::color)? (svg:stop-opacity::double)?) ;
table-named-expression ::= table:named-expression::table-named-expression-attlist ;
table-validation-attlist ::= table:name::string ;
 table-validation-attlist ::= (table:condition::string)? ;
 table-validation-attlist ::= (table:base-cell-address::cellAddress)? ;
 table-validation-attlist ::= (table:allow-empty-cell::boolean)? ;
 table-validation-attlist ::= (table:display-list::("none" | "unsorted" | "sort-ascending"))? ;
table-even-columns ::= table:even-columns::common-table-template-attlist ;
draw-page-thumbnail-attlist ::= (draw:page-number::positiveInteger)? ;
text-tab-attr ::= (text:tab-ref::nonNegativeInteger)? ;
text-style-name ::= (form:text-style-name::styleNameRef)? ;
text-table-of-content-source ::= text:table-of-content-source::(text-table-of-content-source-attlist text-index-title-template? text-table-of-content-entry-template* text-index-source-styles*) ;
text-index-entry-tab-stop-attrs ::= (style:leader-char::character)? ;
 text-index-entry-tab-stop-attrs ::= (style:type::"right") | (style:type::"left" style:position::length) ;
table-source-cell-range ::= table:source-cell-range::(table-source-cell-range-attlist table-filter?) ;
table-data-pilot-display-info-attlist ::= table:enabled::boolean ;
 table-data-pilot-display-info-attlist ::= table:data-field::string ;
 table-data-pilot-display-info-attlist ::= table:member-count::nonNegativeInteger ;
 table-data-pilot-display-info-attlist ::= table:display-member-mode::("from-top" | "from-bottom") ;
common-field-database-table-attlist ::= text:table-name::string ;
 common-field-database-table-attlist ::= (text:table-type::("table" | "query" | "command"))? ;
common-margin-attlist ::= (fo:margin::(nonNegativeLength | percent))? ;
common-spline-anim-value-attlist ::= (smil:keyTimes::string)? ;
 common-spline-anim-value-attlist ::= (smil:keySplines::string)? ;
table-odd-columns ::= table:odd-columns::common-table-template-attlist ;
common-draw-layer-name-attlist ::= (draw:layer::string())? ;
draw-rect-attlist ::= (draw:corner-radius::nonNegativeLength)? ;
chart-stock-loss-marker ::= chart:stock-loss-marker::common-stock-marker-attlist ;
common-field-display-value-formula-attlist ::= (text:display::("value" | "formula"))? ;
office-event-listeners ::= office:event-listeners::((script-event-listener | presentation-event-listener)*) ;
dr3d-sphere ::= dr3d:sphere::(dr3d-sphere-attlist common-draw-z-index-attlist common-draw-id-attlist common-draw-layer-name-attlist common-draw-style-name-attlist common-dr3d-transform-attlist) ;
text-id ::= text:id::string ;
text-table-of-content-source-attlist ::= (text:outline-level::positiveInteger)? ;
 text-table-of-content-source-attlist ::= (text:use-outline-level::boolean)? ;
 text-table-of-content-source-attlist ::= (text:use-index-marks::boolean)? ;
 text-table-of-content-source-attlist ::= (text:use-index-source-styles::boolean)? ;
 text-table-of-content-source-attlist ::= (text:index-scope::("document" | "chapter"))? ;
 text-table-of-content-source-attlist ::= (text:relative-tab-stop-position::boolean)? ;
style-text-properties ::= style:text-properties::style-text-properties-content ;
draw-equation ::= draw:equation::draw-equation-attlist ;
draw-object-ole-attlist ::= (draw:class-id::string())? ;
text-table-index-source ::= text:table-index-source::(text-illustration-index-source-attrs text-index-title-template? text-table-index-entry-template?) ;
office-automatic-styles ::= (office:automatic-styles::(styles style-page-layout*))? ;
animation-element ::= anim:animate::(common-anim-target-attlist common-anim-named-target-attlist common-anim-values-attlist common-anim-spline-mode-attlist common-spline-anim-value-attlist common-repeat-timing-attlist common-fill-timing-attlist common-anim-add-accum-attlist) ;
 animation-element ::= anim:set::(common-anim-target-attlist common-anim-named-target-attlist common-anim-set-values-attlist common-fill-timing-attlist common-anim-add-accum-attlist) ;
 animation-element ::= anim:animateMotion::(anim-animate-motion-attlist common-anim-target-attlist common-anim-named-target-attlist common-anim-add-accum-attlist common-anim-values-attlist common-fill-timing-attlist common-spline-anim-value-attlist) ;
 animation-element ::= anim:animateColor::(common-anim-target-attlist common-anim-named-target-attlist common-anim-add-accum-attlist common-anim-values-attlist common-anim-spline-mode-attlist common-spline-anim-value-attlist anim-animate-color-attlist common-fill-timing-attlist) ;
 animation-element ::= anim:animateTransform::(common-anim-target-attlist common-anim-named-target-attlist common-anim-add-accum-attlist common-anim-values-attlist anim-animate-transform-attlist common-fill-timing-attlist) ;
 animation-element ::= anim:transitionFilter::(common-anim-target-attlist common-anim-add-accum-attlist common-anim-values-attlist common-anim-spline-mode-attlist anim-transition-filter-attlist common-fill-timing-attlist) ;
 animation-element ::= anim:par::(common-anim-attlist common-timing-attlist common-endsync-timing-attlist animation-element*) ;
 animation-element ::= anim:seq::(common-anim-attlist common-endsync-timing-attlist common-timing-attlist) ;
 animation-element ::= anim:iterate::(common-anim-attlist anin-iterate-attlist common-timing-attlist common-endsync-timing-attlist animation-element*) ;
 animation-element ::= anim:audio::(common-anim-attlist anim-audio-attlist common-basic-timing-attlist) ;
 animation-element ::= anim:command::(common-anim-attlist anim-command-attlist common-begin-end-timing-attlist common-anim-target-attlist (anim:param::(anim:name::string() anim:value::string()))*) ;
draw-polygon ::= draw:polygon::(common-draw-points-attlist common-draw-position-attlist common-draw-size-attlist common-draw-viewbox-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text) ;
anim-animate-color-attlist ::= (anim:color-interpolation::("rgb" | "hsl"))? ;
 anim-animate-color-attlist ::= (anim:color-interpolation-direction::("clockwise" | "counter-clockwise"))? ;
style-section-properties-attlist ::= common-background-color-attlist ;
 style-section-properties-attlist ::= common-horizontal-margin-attlist ;
 style-section-properties-attlist ::= (style:protect::boolean)? ;
 style-section-properties-attlist ::= (text:dont-balance-text-columns::boolean)? ;
 style-section-properties-attlist ::= common-writing-mode-attlist ;
table-data-pilot-group ::= table:data-pilot-group::(table-data-pilot-group-attlist table-data-pilot-group-member+) ;
table-label-range ::= table:label-range::table-label-range-attlist ;
number-boolean ::= number:boolean::ε ;
dr3d-cube ::= dr3d:cube::(dr3d-cube-attlist common-draw-z-index-attlist common-draw-id-attlist common-draw-layer-name-attlist common-draw-style-name-attlist common-dr3d-transform-attlist) ;
table-scenario-attlist ::= table:scenario-ranges::cellRangeAddressList ;
 table-scenario-attlist ::= table:is-active::boolean ;
 table-scenario-attlist ::= (table:display-border::boolean)? ;
 table-scenario-attlist ::= (table:border-color::color)? ;
 table-scenario-attlist ::= (table:copy-back::boolean)? ;
 table-scenario-attlist ::= (table:copy-styles::boolean)? ;
 table-scenario-attlist ::= (table:copy-formulas::boolean)? ;
 table-scenario-attlist ::= (table:comment::string)? ;
 table-scenario-attlist ::= (table:protected::boolean)? ;
common-control-id-attlist ::= form:id::ID ;
number-week-of-year ::= number:week-of-year::common-calendar-attlist ;
form-option ::= form:option::(form-option-attlist string()) ;
table-data-pilot-level-attlist ::= (table:show-empty::boolean)? ;
style-footer-style ::= style:footer-style::(style-header-footer-properties?) ;
presentation-event-listener ::= presentation:event-listener::(presentation-event-listener-attlist presentation-sound?) ;
draw-gradient ::= draw:gradient::(common-draw-gradient-attlist draw-gradient-attlist) ;
text-outline-level ::= (text:outline-level::positiveInteger)? ;
common-background-color-attlist ::= (fo:background-color::("transparent" | color))? ;
table-data-pilot-group-attlist ::= table:name::string ;
draw-frame-attlist ::= (draw:copy-of::string)? ;
common-restart-default-attlist ::= (smil:restartDefault::("never" | "always" | "whenNotActive" | "inherit"))? ;
chart-domain ::= chart:domain::((table:cell-range-address::cellRangeAddress)?) ;
table-data-pilot-group-member-attlist ::= table:name::string ;
office-text-attlist ::= (text:global::boolean)? ;
style-paragraph-properties ::= style:paragraph-properties::style-paragraph-properties-content ;
table-table-row-group ::= table:table-row-group::(table-table-row-group-attlist table-rows-and-groups) ;
text-file-name-attlist ::= (text:display::("full" | "path" | "name" | "name-and-extension"))? ;
 text-file-name-attlist ::= common-field-fixed-attlist ;
text-illustration-index-entry-template ::= text:illustration-index-entry-template::text-illustration-index-entry-content ;
presentation-event-listener-attlist ::= script:event-name::string ;
 presentation-event-listener-attlist ::= presentation:action::("none" | "previous-page" | "next-page" | "first-page" | "last-page" | "hide" | "stop" | "execute" | "show" | "verb" | "fade-out" | "sound") ;
 presentation-event-listener-attlist ::= (presentation:effect::presentationEffects)? ;
 presentation-event-listener-attlist ::= (presentation:direction::presentationEffectDirections)? ;
 presentation-event-listener-attlist ::= (presentation:speed::presentationSpeeds)? ;
 presentation-event-listener-attlist ::= (presentation:start-scale::percent)? ;
 presentation-event-listener-attlist ::= (xlink:href::anyURI)? (xlink:type::"simple")? (xlink:show::"embed")? (xlink:actuate::"onRequest")? ;
 presentation-event-listener-attlist ::= (presentation:verb::nonNegativeInteger)? ;
common-fill-default-attlist ::= (smil:fillDefault::("remove" | "freeze" | "hold" | "transition" | "auto" | "inherit"))? ;
common-form-visual-effect-attlist ::= (form:visual-effect::("flat" | "3d"))? ;
style-page-layout-properties-attlist ::= (fo:page-width::length)? (fo:page-height::length)? ;
 style-page-layout-properties-attlist ::= common-num-format-attlist? common-num-format-prefix-suffix-attlist ;
 style-page-layout-properties-attlist ::= (style:paper-tray-name::("default" | string))? ;
 style-page-layout-properties-attlist ::= (style:print-orientation::("portrait" | "landscape"))? ;
 style-page-layout-properties-attlist ::= common-horizontal-margin-attlist common-vertical-margin-attlist common-margin-attlist ;
 style-page-layout-properties-attlist ::= common-border-attlist ;
 style-page-layout-properties-attlist ::= common-border-line-width-attlist ;
 style-page-layout-properties-attlist ::= common-padding-attlist ;
 style-page-layout-properties-attlist ::= common-shadow-attlist ;
 style-page-layout-properties-attlist ::= common-background-color-attlist ;
 style-page-layout-properties-attlist ::= (style:register-truth-ref-style-name::styleNameRef)? ;
 style-page-layout-properties-attlist ::= (style:print::(("headers" | "grid" | "annotations" | "objects" | "charts" | "drawings" | "formulas" | "zero-values")*))? ;
 style-page-layout-properties-attlist ::= (style:print-page-order::("ttb" | "ltr"))? ;
 style-page-layout-properties-attlist ::= (style:first-page-number::(positiveInteger | "continue"))? ;
 style-page-layout-properties-attlist ::= (style:scale-to::percent)? (style:scale-to-pages::positiveInteger)? ;
 style-page-layout-properties-attlist ::= (style:table-centering::("horizontal" | "vertical" | "both" | "none"))? ;
 style-page-layout-properties-attlist ::= (style:footnote-max-height::length)? ;
 style-page-layout-properties-attlist ::= common-writing-mode-attlist ;
 style-page-layout-properties-attlist ::= (style:layout-grid-mode::("none" | "line" | "both"))? ;
 style-page-layout-properties-attlist ::= (style:layout-grid-base-height::length)? ;
 style-page-layout-properties-attlist ::= (style:layout-grid-ruby-height::length)? ;
 style-page-layout-properties-attlist ::= (style:layout-grid-lines::positiveInteger)? ;
 style-page-layout-properties-attlist ::= (style:layout-grid-color::color)? ;
 style-page-layout-properties-attlist ::= (style:layout-grid-ruby-below::boolean)? ;
 style-page-layout-properties-attlist ::= (style:layout-grid-print::boolean)? ;
 style-page-layout-properties-attlist ::= (style:layout-grid-display::boolean)? ;
draw-text-box-attlist ::= (draw:chain-next-name::string)? ;
 draw-text-box-attlist ::= (draw:corner-radius::nonNegativeLength)? ;
 draw-text-box-attlist ::= (fo:min-height::(length | percent))? (fo:min-width::(length | percent))? ;
 draw-text-box-attlist ::= (fo:max-height::(length | percent))? (fo:max-width::(length | percent))? ;
table-error-message ::= table:error-message::((table:title::string)? (table:display::boolean)? (table:message-type::("stop" | "warning" | "information"))? text-p*) ;
style-table-row-properties ::= style:table-row-properties::style-table-row-properties-content ;
style-paragraph-properties-attlist ::= (fo:line-height::("normal" | nonNegativeLength | percent))? ;
 style-paragraph-properties-attlist ::= (style:line-height-at-least::nonNegativeLength)? ;
 style-paragraph-properties-attlist ::= (style:line-spacing::length)? ;
 style-paragraph-properties-attlist ::= (style:font-independent-line-spacing::boolean)? ;
 style-paragraph-properties-attlist ::= common-text-align ;
 style-paragraph-properties-attlist ::= (fo:text-align-last::("start" | "center" | "justify"))? ;
 style-paragraph-properties-attlist ::= (style:justify-single-word::boolean)? ;
 style-paragraph-properties-attlist ::= (fo:keep-together::("auto" | "always"))? ;
 style-paragraph-properties-attlist ::= (fo:widows::nonNegativeInteger)? ;
 style-paragraph-properties-attlist ::= (fo:orphans::nonNegativeInteger)? ;
 style-paragraph-properties-attlist ::= (style:tab-stop-distance::nonNegativeLength)? ;
 style-paragraph-properties-attlist ::= (fo:hyphenation-keep::("auto" | "page"))? ;
 style-paragraph-properties-attlist ::= (fo:hyphenation-ladder-count::("no-limit" | positiveInteger))? ;
 style-paragraph-properties-attlist ::= (style:register-true::boolean)? ;
 style-paragraph-properties-attlist ::= common-horizontal-margin-attlist ;
 style-paragraph-properties-attlist ::= (fo:text-indent::(length | percent))? ;
 style-paragraph-properties-attlist ::= (style:auto-text-indent::boolean)? ;
 style-paragraph-properties-attlist ::= common-vertical-margin-attlist ;
 style-paragraph-properties-attlist ::= common-margin-attlist ;
 style-paragraph-properties-attlist ::= common-break-attlist ;
 style-paragraph-properties-attlist ::= common-background-color-attlist ;
 style-paragraph-properties-attlist ::= common-border-attlist ;
 style-paragraph-properties-attlist ::= common-border-line-width-attlist ;
 style-paragraph-properties-attlist ::= common-padding-attlist ;
 style-paragraph-properties-attlist ::= common-shadow-attlist ;
 style-paragraph-properties-attlist ::= common-keep-with-next-attlist ;
 style-paragraph-properties-attlist ::= (text:number-lines::boolean)? ;
 style-paragraph-properties-attlist ::= (text:line-number::nonNegativeInteger)? ;
 style-paragraph-properties-attlist ::= (style:text-autospace::("none" | "ideograph-alpha"))? ;
 style-paragraph-properties-attlist ::= (style:punctuation-wrap::("simple" | "hanging"))? ;
 style-paragraph-properties-attlist ::= (style:line-break::("normal" | "strict"))? ;
 style-paragraph-properties-attlist ::= (style:vertical-align::("top" | "middle" | "bottom" | "auto"))? ;
 style-paragraph-properties-attlist ::= common-writing-mode-attlist ;
 style-paragraph-properties-attlist ::= (style:writing-mode-automatic::boolean)? ;
 style-paragraph-properties-attlist ::= (style:snap-to-layout-grid::boolean)? ;
 style-paragraph-properties-attlist ::= common-page-number-attlist ;
 style-paragraph-properties-attlist ::= (style:background-transparency::percent)? ;
draw-regular-polygon ::= draw:regular-polygon::(draw-regular-polygon-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text) ;
table-table-row-group-attlist ::= (table:display::boolean)? ;
common-border-line-width-attlist ::= (style:border-line-width::borderWidths)? (style:border-line-width-top::borderWidths)? (style:border-line-width-bottom::borderWidths)? (style:border-line-width-left::borderWidths)? (style:border-line-width-right::borderWidths)? ;
draw-layer-attlist ::= draw:name::string ;
 draw-layer-attlist ::= (draw:protected::boolean)? ;
 draw-layer-attlist ::= (draw:display::("always" | "screen" | "printer" | "none"))? ;
draw-circle ::= draw:circle::(draw-circle-attlist common-draw-circle-ellipse-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text) ;
draw-page ::= draw:page::(common-presentation-header-footer-attlist draw-page-attlist office-forms? shape* (presentation-animations | animation-element)? presentation-notes?) ;
presentation-settings ::= (presentation:settings::(presentation-settings-attlist presentation-show*))? ;
text-table-index ::= text:table-index::(sectionAttr text-table-index-source text-index-body) ;
text-outline-level-style-attlist ::= text:level::positiveInteger ;
 text-outline-level-style-attlist ::= (text:style-name::styleNameRef)? ;
 text-outline-level-style-attlist ::= common-num-format-attlist common-num-format-prefix-suffix-attlist ;
 text-outline-level-style-attlist ::= (text:display-levels::positiveInteger)? ;
 text-outline-level-style-attlist ::= (text:start-value::positiveInteger)? ;
table-data-pilot-subtotal-attlist ::= table:function::("auto" | "average" | "count" | "countnums" | "max" | "min" | "product" | "stdev" | "stdevp" | "sum" | "var" | "varp" | string) ;
common-anim-values-attlist ::= (smil:values::string)? ;
 common-anim-values-attlist ::= (anim:formula::string)? ;
 common-anim-values-attlist ::= common-anim-set-values-attlist (smil:from::string)? (smil:by::string)? ;
table-table-template-attlist ::= text:name::string ;
 table-table-template-attlist ::= text:first-row-start-column::rowOrCol ;
 table-table-template-attlist ::= text:first-row-end-column::rowOrCol ;
 table-table-template-attlist ::= text:last-row-start-column::rowOrCol ;
 table-table-template-attlist ::= text:last-row-end-column::rowOrCol ;
draw-hatch-attlist ::= draw:name::styleName ;
 draw-hatch-attlist ::= (draw:display-name::string)? ;
 draw-hatch-attlist ::= draw:style::("single" | "double" | "triple") ;
 draw-hatch-attlist ::= (draw:color::color)? ;
 draw-hatch-attlist ::= (draw:distance::length)? ;
 draw-hatch-attlist ::= (draw:rotation::integer)? ;
presentation-settings-attlist ::= (presentation:start-page::string)? ;
 presentation-settings-attlist ::= (presentation:show::string)? ;
 presentation-settings-attlist ::= (presentation:full-screen::boolean)? ;
 presentation-settings-attlist ::= (presentation:endless::boolean)? ;
 presentation-settings-attlist ::= (presentation:pause::duration)? ;
 presentation-settings-attlist ::= (presentation:show-logo::boolean)? ;
 presentation-settings-attlist ::= (presentation:force-manual::boolean)? ;
 presentation-settings-attlist ::= (presentation:mouse-visible::boolean)? ;
 presentation-settings-attlist ::= (presentation:mouse-as-pen::boolean)? ;
 presentation-settings-attlist ::= (presentation:start-with-navigator::boolean)? ;
 presentation-settings-attlist ::= (presentation:animations::("enabled" | "disabled"))? ;
 presentation-settings-attlist ::= (presentation:transition-on-click::("enabled" | "disabled"))? ;
 presentation-settings-attlist ::= (presentation:stay-on-top::boolean)? ;
dr3d-light ::= dr3d:light::dr3d-light-attlist ;
number-day-of-week-attlist ::= (number:style::("short" | "long"))? ;
common-keep-with-next-attlist ::= (fo:keep-with-next::("auto" | "always"))? ;
common-text-anchor-attlist ::= (text:anchor-type::("page" | "frame" | "paragraph" | "char" | "as-char"))? ;
 common-text-anchor-attlist ::= (text:anchor-page-number::positiveInteger)? ;
presentation-show-shape ::= presentation:show-shape::(common-presentation-effect-attlist presentation-sound?) ;
table-sort-groups ::= table:sort-groups::table-sort-groups-attlist ;
text-object-index ::= text:object-index::(sectionAttr text-object-index-source text-index-body) ;
table-insertion-attlist ::= table:type::("row" | "column" | "table") ;
 table-insertion-attlist ::= table:position::integer ;
 table-insertion-attlist ::= (table:count::positiveInteger)? ;
 table-insertion-attlist ::= (table:table::integer)? ;
table-filter-and ::= table:filter-and::((table-filter-or | table-filter-condition)+) ;
office-document-common-attrs ::= (office:version::string)? ;
common-draw-style-name-attlist ::= ((draw:style-name::styleNameRef)? (draw:class-names::styleNameRefs)?) | ((presentation:style-name::styleNameRef)? (presentation:class-names::styleNameRefs)?) ;
text-bibliography-configuration-attlist ::= (text:prefix::string)? (text:suffix::string)? ;
 text-bibliography-configuration-attlist ::= (text:numbered-entries::boolean)? ;
 text-bibliography-configuration-attlist ::= (text:sort-by-position::boolean)? (fo:language::languageCode)? (fo:country::countryCode)? (text:sort-algorithm::string)? ;
chart-floor ::= chart:floor::chart-floor-attlist ;
office-master-styles ::= (office:master-styles::(style-master-page* style-handout-master? draw-layer-set?))? ;
table-table-header-rows ::= table:table-header-rows::(table-table-row+) ;
table-movement-cut-off-attlist ::= (table:position::integer) | (table:start-position::integer table:end-position::integer) ;
table-table-cell-attlist ::= (table:number-columns-repeated::positiveInteger)? ;
 table-table-cell-attlist ::= (table:style-name::styleNameRef)? ;
 table-table-cell-attlist ::= (table:content-validation-name::string)? ;
 table-table-cell-attlist ::= (table:formula::string)? ;
 table-table-cell-attlist ::= common-value-and-type-attlist? ;
 table-table-cell-attlist ::= (table:protect::boolean)? ;
style-list-level-properties ::= style:list-level-properties::style-list-level-properties-content ;
number-minutes-attlist ::= (number:style::("short" | "long"))? ;
table-change-deletion ::= table:change-deletion::((table:id::string)?) ;
table-data-pilot-layout-info-attlist ::= table:layout-mode::("tabular-layout" | "outline-subtotals-top" | "outline-subtotals-bottom") ;
 table-data-pilot-layout-info-attlist ::= table:add-empty-lines::boolean ;
table-filter-attlist ::= (table:target-range-address::cellRangeAddress)? ;
 table-filter-attlist ::= (table:condition-source::("self" | "cell-range"))? ;
 table-filter-attlist ::= (table:condition-source-range-address::cellRangeAddress)? ;
 table-filter-attlist ::= (table:display-duplicates::boolean)? ;
draw-ellipse-attlist ::= (svg:rx::length svg:ry::length)? ;
table-table-column-group ::= table:table-column-group::(table-table-column-group-attlist table-columns-and-groups) ;
text-index-entry-link-start ::= text:index-entry-link-start::((text:style-name::styleNameRef)?) ;
common-convert-empty-attlist ::= (form:convert-empty-to-null::boolean)? ;
table-last-row ::= table:last-row::common-table-template-attlist ;
style-style-content ::= style:family::"text" style-text-properties? ;
 style-style-content ::= style:family::"paragraph" style-paragraph-properties? style-text-properties? ;
 style-style-content ::= style:family::"section" style-section-properties? ;
 style-style-content ::= style:family::"ruby" style-ruby-properties? ;
 style-style-content ::= style:family::"table" style-table-properties? ;
 style-style-content ::= style:family::"table-column" style-table-column-properties? ;
 style-style-content ::= style:family::"table-row" style-table-row-properties? ;
 style-style-content ::= style:family::"table-cell" style-table-cell-properties? style-paragraph-properties? style-text-properties? ;
 style-style-content ::= style:family::("graphic" | "presentation") style-graphic-properties? style-paragraph-properties? style-text-properties? ;
 style-style-content ::= style:family::"drawing-page" style-drawing-page-properties? ;
 style-style-content ::= style:family::"chart" style-chart-properties? style-graphic-properties? style-paragraph-properties? style-text-properties? ;
common-format-source-attlist ::= (number:format-source::("fixed" | "language"))? ;
table-change-track-table-cell ::= table:change-track-table-cell::(table-change-track-table-cell-attlist text-p*) ;
text-list ::= text:list::(text-list-attr text-list-header? text-list-item*) ;
common-table-cell-address-attlist ::= table:column::integer table:row::integer table:table::integer ;
common-anim-set-values-attlist ::= (smil:to::string)? ;
table-table-column-group-attlist ::= (table:display::boolean)? ;
style-footer ::= style:footer::(common-style-header-footer-attlist header-footer-content) ;
text-bibliography-entry-template-attrs ::= text:bibliography-type::text-bibliography-types ;
 text-bibliography-entry-template-attrs ::= text:style-name::styleNameRef ;
number-year-attlist ::= (number:style::("short" | "long"))? ;
svg-font-face-format ::= svg:font-face-format::((svg:string::string())?) ;
style-map-attlist ::= style:condition::string ;
 style-map-attlist ::= style:apply-style-name::styleNameRef ;
 style-map-attlist ::= (style:base-cell-address::cellAddress)? ;
number-text ::= number:text::string() ;
text-index-entry-tab-stop ::= text:index-entry-tab-stop::((text:style-name::styleNameRef)? text-index-entry-tab-stop-attrs) ;
table-sort-attlist ::= (table:bind-styles-to-content::boolean)? ;
 table-sort-attlist ::= (table:target-range-address::cellRangeAddress)? ;
 table-sort-attlist ::= (table:case-sensitive::boolean)? ;
 table-sort-attlist ::= (table:language::languageCode)? ;
 table-sort-attlist ::= (table:country::countryCode)? ;
 table-sort-attlist ::= (table:algorithm::string)? ;
chart-chart ::= chart:chart::(chart-chart-attlist chart-title? chart-subtitle? chart-footer? chart-legend? chart-plot-area table-table?) ;
style-table-properties ::= style:table-properties::style-table-properties-content ;
office-spreadsheet-attlist ::= (table:structure-protected::boolean)? (table:protection-key::string)? ;
style-header-left ::= style:header-left::(common-style-header-footer-attlist header-footer-content) ;
common-value-type-attlist ::= office:value-type::valueType ;
common-field-database-name ::= (text:database-name::string)? ;
 common-field-database-name ::= form-connection-resource ;
chart-subtitle ::= chart:subtitle::(chart-title-attlist text-p?) ;
table-filter-condition ::= table:filter-condition::table-filter-condition-attlist ;
style-region-left ::= style:region-left::region-content ;
common-draw-position-attlist ::= (svg:x::coordinate)? (svg:y::coordinate)? ;
common-padding-attlist ::= (fo:padding::nonNegativeLength)? (fo:padding-top::nonNegativeLength)? (fo:padding-bottom::nonNegativeLength)? (fo:padding-left::nonNegativeLength)? (fo:padding-right::nonNegativeLength)? ;
draw-contour-path ::= draw:contour-path::(common-contour-attlist common-draw-size-attlist common-draw-viewbox-attlist common-draw-path-data-attlist) ;
style-table-properties-attlist ::= (style:width::positiveLength)? (style:rel-width::percent)? ;
 style-table-properties-attlist ::= (table:align::("left" | "center" | "right" | "margins"))? ;
 style-table-properties-attlist ::= common-horizontal-margin-attlist ;
 style-table-properties-attlist ::= common-vertical-margin-attlist ;
 style-table-properties-attlist ::= common-margin-attlist ;
 style-table-properties-attlist ::= common-page-number-attlist ;
 style-table-properties-attlist ::= common-break-attlist ;
 style-table-properties-attlist ::= common-background-color-attlist ;
 style-table-properties-attlist ::= common-shadow-attlist ;
 style-table-properties-attlist ::= common-keep-with-next-attlist ;
 style-table-properties-attlist ::= (style:may-break-between-rows::boolean)? ;
 style-table-properties-attlist ::= (table:border-model::("collapsing" | "separating"))? ;
 style-table-properties-attlist ::= common-writing-mode-attlist ;
 style-table-properties-attlist ::= (table:display::boolean)? ;
text-alphabetical-index-source-attrs ::= text-index-scope-attr text-relative-tab-stop-position-attr ;
 text-alphabetical-index-source-attrs ::= (text:ignore-case::boolean)? ;
 text-alphabetical-index-source-attrs ::= (text:main-entry-style-name::styleNameRef)? ;
 text-alphabetical-index-source-attrs ::= (text:alphabetical-separators::boolean)? ;
 text-alphabetical-index-source-attrs ::= (text:combine-entries::boolean)? (text:combine-entries-with-dash::boolean)? (text:combine-entries-with-pp::boolean)? ;
 text-alphabetical-index-source-attrs ::= (text:use-keys-as-entries::boolean)? ;
 text-alphabetical-index-source-attrs ::= (text:capitalize-entries::boolean)? ;
 text-alphabetical-index-source-attrs ::= (text:comma-separated::boolean)? ;
 text-alphabetical-index-source-attrs ::= (fo:language::languageCode)? ;
 text-alphabetical-index-source-attrs ::= (fo:country::countryCode)? ;
 text-alphabetical-index-source-attrs ::= (text:sort-algorithm::string)? ;
text-list-attr ::= (text:style-name::styleNameRef)? ;
 text-list-attr ::= (text:continue-numbering::boolean)? ;
form-form-attlist ::= (xlink:href::anyURI (xlink:type::"simple")? (xlink:actuate::"onRequest")?)? ;
 form-form-attlist ::= (office:target-frame::targetFrameName)? ;
 form-form-attlist ::= (form:method::("get" | "post" | string))? ;
 form-form-attlist ::= (form:enctype::string)? ;
 form-form-attlist ::= (form:allow-deletes::boolean)? ;
 form-form-attlist ::= (form:allow-inserts::boolean)? ;
 form-form-attlist ::= (form:allow-updates::boolean)? ;
 form-form-attlist ::= (form:apply-filter::boolean)? ;
 form-form-attlist ::= (form:command-type::("table" | "query" | "command"))? ;
 form-form-attlist ::= (form:command::string())? ;
 form-form-attlist ::= (form:datasource::(anyURI | string))? ;
 form-form-attlist ::= (form:master-fields::string)? ;
 form-form-attlist ::= (form:detail-fields::string)? ;
 form-form-attlist ::= (form:escape-processing::boolean)? ;
 form-form-attlist ::= (form:filter::string)? ;
 form-form-attlist ::= (form:ignore-result::boolean)? ;
 form-form-attlist ::= (form:navigation-mode::navigation)? ;
 form-form-attlist ::= (form:order::string)? ;
 form-form-attlist ::= (form:tab-cycle::tab-cycles)? ;
table-table-columns ::= table:table-columns::(table-table-column+) ;
text-tracked-changes-attr ::= (text:track-changes::boolean)? ;
table-table-header-columns ::= table:table-header-columns::(table-table-column+) ;
table-help-message ::= table:help-message::((table:title::string)? (table:display::boolean)? text-p*) ;
table-filter-or ::= table:filter-or::((table-filter-and | table-filter-condition)+) ;
common-printable-attlist ::= (form:printable::boolean)? ;
heading-attrs ::= text:outline-level::positiveInteger ;
 heading-attrs ::= (text:restart-numbering::boolean)? ;
 heading-attrs ::= (text:start-value::nonNegativeInteger)? ;
 heading-attrs ::= (text:is-list-header::boolean)? ;
table-data-pilot-sort-info-attlist ::= (table:sort-mode::"data" table:data-field::string) | (table:sort-mode::("none" | "manual" | "name")) ;
 table-data-pilot-sort-info-attlist ::= table:order::("ascending" | "descending") ;
common-time-manip-attlist ::= (smil:accelerate::double)? ;
 common-time-manip-attlist ::= (smil:decelerate::double)? ;
 common-time-manip-attlist ::= (smil:autoReverse::boolean)? ;
text-numbered-paragraph-attr ::= (text:level::positiveInteger)? ;
 text-numbered-paragraph-attr ::= text-list-attr ;
 text-numbered-paragraph-attr ::= text-list-item-attr ;
draw-glue-point-attlist ::= draw:id::nonNegativeInteger ;
 draw-glue-point-attlist ::= svg:x::(distance | percent) svg:y::(distance | percent) ;
 draw-glue-point-attlist ::= draw:align::("top-left" | "top" | "top-right" | "left" | "center" | "right" | "bottom-left" | "bottom-right") ;
table-data-pilot-field-attlist ::= table:source-field-name::string ;
 table-data-pilot-field-attlist ::= (table:orientation::("row" | "column" | "data" | "hidden")) | (table:orientation::"page" table:selected-page::string) ;
 table-data-pilot-field-attlist ::= (table:is-data-layout-field::string)? ;
 table-data-pilot-field-attlist ::= (table:function::("auto" | "average" | "count" | "countnums" | "max" | "min" | "product" | "stdev" | "stdevp" | "sum" | "var" | "varp" | string))? ;
 table-data-pilot-field-attlist ::= (table:used-hierarchy::integer)? ;
office-styles ::= (office:styles::(styles style-default-style* text-outline-style? text-notes-configuration* text-bibliography-configuration? text-linenumbering-configuration? draw-gradient* svg-linearGradient* svg-radialGradient* draw-hatch* draw-fill-image* draw-marker* draw-stroke-dash* draw-opacity* style-presentation-page-layout*))? ;
common-draw-viewbox-attlist ::= svg:viewBox::(integer integer integer integer) ;
table-table ::= table:table::(table-table-attlist table-table-source? office-dde-source? table-scenario? office-forms? table-shapes? table-columns-and-groups table-rows-and-groups) ;
style-footnote-sep ::= (style:footnote-sep::style-footnote-sep-attlist)? ;
style-header-style ::= style:header-style::(style-header-footer-properties?) ;
anim-audio-attlist ::= (xlink:href::anyURI)? ;
 anim-audio-attlist ::= (anim:audio-level::double)? ;
office-document ::= office:document::(office-document-attrs office-document-common-attrs office-meta office-settings office-scripts office-font-face-decls office-styles office-automatic-styles office-master-styles office-body) ;
number-day-attlist ::= (number:style::("short" | "long"))? ;
common-horizontal-margin-attlist ::= (fo:margin-left::(length | percent))? (fo:margin-right::(length | percent))? ;
text-user-index-entry-template-attrs ::= text:outline-level::positiveInteger ;
 text-user-index-entry-template-attrs ::= text:style-name::styleNameRef ;
text-page-continuation-attlist ::= text:select-page::("previous" | "next") ;
 text-page-continuation-attlist ::= (text:string-value::string)? ;
common-anim-add-accum-attlist ::= (smil:accumulate::("none" | "sum"))? ;
 common-anim-add-accum-attlist ::= (smil:additive::("replace" | "sum"))? ;
draw-applet ::= draw:applet::(draw-applet-attlist common-draw-data-attlist? draw-param*) ;
text-database-display-attlist ::= common-field-database-table ;
 text-database-display-attlist ::= common-field-data-style-name-attlist ;
 text-database-display-attlist ::= text:column-name::string ;
number-embedded-text-attlist ::= number:position::integer ;
style-master-page ::= style:master-page::(style-master-page-attlist (style-header style-header-left?)? (style-footer style-footer-left?)? office-forms? style-style* shape* presentation-notes?) ;
style-handout-master-attlist ::= (presentation:presentation-page-layout-name::styleNameRef)? ;
 style-handout-master-attlist ::= style:page-layout-name::styleNameRef ;
 style-handout-master-attlist ::= (draw:style-name::styleNameRef)? ;
text-linenumbering-separator ::= text:linenumbering-separator::((text:increment::nonNegativeInteger)? string()) ;
text-common-ref-content ::= string() ;
 text-common-ref-content ::= (text:ref-name::string)? ;
text-index-title ::= text:index-title::(sectionAttr index-content-main*) ;
office-script ::= office:script::(office-script-attlist string()? anyElements string()?) ;
text-alphabetical-index-entry-template-attrs ::= text:outline-level::("1" | "2" | "3" | "separator") ;
 text-alphabetical-index-entry-template-attrs ::= text:style-name::styleNameRef ;
presentation-play-attlist ::= draw:shape-id::IDREF (presentation:speed::presentationSpeeds)? ;
table-insertion-cut-off-attlist ::= table:id::string ;
 table-insertion-cut-off-attlist ::= table:position::integer ;
svg-radialGradient ::= svg:radialGradient::(common-svg-gradient-attlist (svg:cx::(coordinate | percent))? (svg:cy::(coordinate | percent))? (svg:r::(coordinate | percent))? (svg:fx::(coordinate | percent))? (svg:fy::(coordinate | percent))? svg-stop*) ;
common-anim-spline-mode-attlist ::= (smil:calcMode::("discrete" | "linear" | "paced" | "spline"))? ;
table-cell-range-source ::= table:cell-range-source::(table-table-cell-range-source-attlist table-linked-source-attlist) ;
draw-connector-attlist ::= (draw:type::("standard" | "lines" | "line" | "curve"))? ;
 draw-connector-attlist ::= (svg:x1::coordinate svg:y1::coordinate)? ;
 draw-connector-attlist ::= (draw:start-shape::IDREF)? ;
 draw-connector-attlist ::= (draw:start-glue-point::nonNegativeInteger)? ;
 draw-connector-attlist ::= (svg:x2::coordinate svg:y2::coordinate)? ;
 draw-connector-attlist ::= (draw:end-shape::IDREF)? ;
 draw-connector-attlist ::= (draw:end-glue-point::nonNegativeInteger)? ;
 draw-connector-attlist ::= (draw:line-skew::(length (length length?)?))? ;
table-highlighted-range-attlist ::= (table:cell-range-address::cellRangeAddress)? ;
 table-highlighted-range-attlist ::= table:direction::("from-another-table" | "to-another-table" | "from-same-table") ;
 table-highlighted-range-attlist ::= (table:contains-error::boolean)? ;
button-type ::= (form:button-type::types)? ;
table-null-date ::= table:null-date::((table:value-type::valueType)? (table:date-value-type::date)?) ;
svg-definition-src ::= svg:definition-src::common-svg-font-face-xlink-attlist ;
style-master-page-attlist ::= style:name::styleName ;
 style-master-page-attlist ::= (style:display-name::string)? ;
 style-master-page-attlist ::= style:page-layout-name::styleNameRef ;
 style-master-page-attlist ::= (draw:style-name::styleNameRef)? ;
 style-master-page-attlist ::= (style:next-style-name::styleNameRef)? ;
text-user-index ::= text:user-index::(sectionAttr text-user-index-source text-index-body) ;
number-month-attlist ::= (number:textual::boolean)? ;
 number-month-attlist ::= (number:possessive-form::boolean)? ;
 number-month-attlist ::= (number:style::("short" | "long"))? ;
chart-data-point-attlist ::= (chart:repeated::nonNegativeInteger)? ;
 chart-data-point-attlist ::= (chart:style-name::styleNameRef)? ;
text-index-entry-bibliography-attrs ::= (text:style-name::styleNameRef)? ;
 text-index-entry-bibliography-attrs ::= text:bibliography-data-field::("address" | "annote" | "author" | "bibliography-type" | "booktitle" | "chapter" | "custom1" | "custom2" | "custom3" | "custom4" | "custom5" | "edition" | "editor" | "howpublished" | "identifier" | "institution" | "isbn" | "issn" | "journal" | "month" | "note" | "number" | "organizations" | "pages" | "publisher" | "report-type" | "school" | "series" | "title" | "url" | "volume" | "year") ;
draw-marker ::= draw:marker::(draw-marker-attlist common-draw-viewbox-attlist common-draw-path-data-attlist) ;
common-data-style-attlist ::= style:name::styleName ;
 common-data-style-attlist ::= (number:language::languageCode)? ;
 common-data-style-attlist ::= (number:country::countryCode)? ;
 common-data-style-attlist ::= (number:title::string())? ;
 common-data-style-attlist ::= (style:volatile::boolean)? ;
 common-data-style-attlist ::= (number:transliteration-format::string)? ;
 common-data-style-attlist ::= (number:transliteration-language::countryCode)? ;
 common-data-style-attlist ::= (number:transliteration-country::countryCode)? ;
 common-data-style-attlist ::= (number:transliteration-style::("short" | "medium" | "long"))? ;
table-database-source-table-attlist ::= table:database-name::string ;
 table-database-source-table-attlist ::= table:database-table-name::string ;
dr3d-scene ::= dr3d:scene::(dr3d-scene-attlist common-draw-position-attlist common-draw-size-attlist common-draw-style-name-attlist common-draw-z-index-attlist common-draw-id-attlist common-draw-layer-name-attlist common-text-spreadsheet-shape-attlist common-dr3d-transform-attlist dr3d-light* shapes3d*) ;
dc-creator ::= dc:creator::string ;
image-data ::= (form:image-data::anyURI)? ;
chart-legend ::= chart:legend::chart-legend-attlist ;
number-scientific-number-attlist ::= (number:min-exponent-digits::integer)? ;
text-section-source-attr ::= (xlink:href::anyURI (xlink:type::"simple")? (xlink:show::"embed")?)? ;
 text-section-source-attr ::= (text:section-name::string)? ;
 text-section-source-attr ::= (text:filter-name::string)? ;
office-annotation-attlist ::= (office:display::boolean)? ;
common-dr3d-transform-attlist ::= (dr3d:transform::string())? ;
number-era ::= number:era::(number-era-attlist common-calendar-attlist) ;
dr3d-scene-attlist ::= (dr3d:vrp::vector3D)? (dr3d:vpn::vector3D)? (dr3d:vup::vector3D)? ;
 dr3d-scene-attlist ::= (dr3d:projection::("parallel" | "perspective"))? ;
 dr3d-scene-attlist ::= (dr3d:distance::length)? ;
 dr3d-scene-attlist ::= (dr3d:focal-length::length)? ;
 dr3d-scene-attlist ::= (dr3d:shadow-slant::nonNegativeInteger)? ;
 dr3d-scene-attlist ::= (dr3d:shade-mode::("flat" | "phong" | "gouraud" | "draft"))? ;
 dr3d-scene-attlist ::= (dr3d:ambient-color::color)? ;
 dr3d-scene-attlist ::= (dr3d:lighting-mode::boolean)? ;
draw-rect ::= draw:rect::(draw-rect-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text) ;
text-changed-region ::= text:changed-region::(text-changed-region-attr text-changed-region-content) ;
text-alphabetical-index-source ::= text:alphabetical-index-source::(text-alphabetical-index-source-attrs text-index-title-template? text-alphabetical-index-entry-template*) ;
common-draw-z-index-attlist ::= (draw:z-index::nonNegativeInteger)? ;
for ::= (form:for::string)? ;
table-dependencies ::= table:dependencies::(table-dependency+) ;
chart-grid-attlist ::= (chart:class::("major" | "minor"))? ;
 chart-grid-attlist ::= (chart:style-name::styleNameRef)? ;
table-target-range-address ::= table:target-range-address::common-table-range-attlist ;
style-graphic-properties-attlist ::= (draw:stroke::("none" | "dash" | "solid"))? ;
 style-graphic-properties-attlist ::= (draw:stroke-dash::styleNameRef)? ;
 style-graphic-properties-attlist ::= (draw:stroke-dash-names::styleNameRefs)? ;
 style-graphic-properties-attlist ::= (svg:stroke-width::length)? ;
 style-graphic-properties-attlist ::= (svg:stroke-color::color)? ;
 style-graphic-properties-attlist ::= (draw:marker-start::styleNameRef)? ;
 style-graphic-properties-attlist ::= (draw:marker-end::styleNameRef)? ;
 style-graphic-properties-attlist ::= (draw:marker-start-width::length)? ;
 style-graphic-properties-attlist ::= (draw:marker-end-width::length)? ;
 style-graphic-properties-attlist ::= (draw:marker-start-center::boolean)? ;
 style-graphic-properties-attlist ::= (draw:marker-end-center::boolean)? ;
 style-graphic-properties-attlist ::= (svg:stroke-opacity::(string() | percent))? ;
 style-graphic-properties-attlist ::= (draw:stroke-linejoin::("miter" | "round" | "bevel" | "middle" | "none" | "inherit"))? ;
 style-graphic-properties-attlist ::= (draw:symbol-color::color)? ;
 style-graphic-properties-attlist ::= (text:animation::("none" | "scroll" | "alternate" | "slide"))? ;
 style-graphic-properties-attlist ::= (text:animation-direction::("left" | "right" | "up" | "down"))? ;
 style-graphic-properties-attlist ::= (text:animation-start-inside::boolean)? ;
 style-graphic-properties-attlist ::= (text:animation-stop-inside::boolean)? ;
 style-graphic-properties-attlist ::= (text:animation-repeat::nonNegativeInteger)? ;
 style-graphic-properties-attlist ::= (text:animation-delay::duration)? ;
 style-graphic-properties-attlist ::= (text:animation-steps::length)? ;
 style-graphic-properties-attlist ::= (draw:auto-grow-width::boolean)? (draw:auto-grow-height::boolean)? ;
 style-graphic-properties-attlist ::= (draw:fit-to-size::boolean)? ;
 style-graphic-properties-attlist ::= (draw:fit-to-contour::boolean)? ;
 style-graphic-properties-attlist ::= (draw:textarea-vertical-align::("top" | "middle" | "bottom" | "justify"))? ;
 style-graphic-properties-attlist ::= (draw:textarea-horizontal-align::("left" | "center" | "right" | "justify"))? ;
 style-graphic-properties-attlist ::= (fo:wrap-option::("no-wrap" | "wrap"))? ;
 style-graphic-properties-attlist ::= (draw:color-mode::("greyscale" | "mono" | "watermark" | "standard"))? ;
 style-graphic-properties-attlist ::= (draw:color-inversion::boolean)? ;
 style-graphic-properties-attlist ::= (draw:luminance::percent)? ;
 style-graphic-properties-attlist ::= (draw:contrast::percent)? ;
 style-graphic-properties-attlist ::= (draw:gamma::percent)? ;
 style-graphic-properties-attlist ::= (draw:red::percent)? ;
 style-graphic-properties-attlist ::= (draw:green::percent)? ;
 style-graphic-properties-attlist ::= (draw:blue::percent)? ;
 style-graphic-properties-attlist ::= (draw:image-opacity::percent)? ;
 style-graphic-properties-attlist ::= (draw:shadow::("visible" | "hidden"))? ;
 style-graphic-properties-attlist ::= (draw:shadow-offset-x::length)? (draw:shadow-offset-y::length)? ;
 style-graphic-properties-attlist ::= (draw:shadow-color::color)? ;
 style-graphic-properties-attlist ::= (draw:shadow-opacity::percent)? ;
 style-graphic-properties-attlist ::= (draw:start-line-spacing-horizontal::distance)? (draw:start-line-spacing-vertical::distance)? ;
 style-graphic-properties-attlist ::= (draw:end-line-spacing-horizontal::distance)? (draw:end-line-spacing-vertical::distance)? ;
 style-graphic-properties-attlist ::= (draw:line-distance::distance)? ;
 style-graphic-properties-attlist ::= (draw:guide-overhang::length)? ;
 style-graphic-properties-attlist ::= (draw:guide-distance::distance)? ;
 style-graphic-properties-attlist ::= (draw:start-guide::length)? ;
 style-graphic-properties-attlist ::= (draw:end-guide::length)? ;
 style-graphic-properties-attlist ::= (draw:placing::("below" | "above"))? ;
 style-graphic-properties-attlist ::= (draw:parallel::boolean)? ;
 style-graphic-properties-attlist ::= (draw:measure-align::("automatic" | "left-outside" | "inside" | "right-outside"))? (draw:measure-vertical-align::("automatic" | "above" | "below" | "center"))? ;
 style-graphic-properties-attlist ::= (draw:unit::("automatic" | "mm" | "cm" | "m" | "km" | "pt" | "pc" | "inch" | "ft" | "mi"))? ;
 style-graphic-properties-attlist ::= (draw:show-unit::boolean)? ;
 style-graphic-properties-attlist ::= (draw:decimal-places::nonNegativeInteger)? ;
 style-graphic-properties-attlist ::= (draw:caption-type::("straight-line" | "angled-line" | "angled-connector-line"))? ;
 style-graphic-properties-attlist ::= (draw:caption-angle-type::("fixed" | "free"))? ;
 style-graphic-properties-attlist ::= (draw:caption-angle::nonNegativeInteger)? ;
 style-graphic-properties-attlist ::= (draw:caption-gap::distance)? ;
 style-graphic-properties-attlist ::= (draw:caption-escape-direction::("horizontal" | "vertical" | "auto"))? ;
 style-graphic-properties-attlist ::= (draw:caption-escape::(length | percent))? ;
 style-graphic-properties-attlist ::= (draw:caption-line-length::length)? ;
 style-graphic-properties-attlist ::= (draw:caption-fit-line-length::boolean)? ;
 style-graphic-properties-attlist ::= (dr3d:horizontal-segments::nonNegativeInteger)? ;
 style-graphic-properties-attlist ::= (dr3d:vertical-segments::nonNegativeInteger)? ;
 style-graphic-properties-attlist ::= (dr3d:edge-rounding::percent)? ;
 style-graphic-properties-attlist ::= (dr3d:edge-rounding-mode::("correct" | "attractive"))? ;
 style-graphic-properties-attlist ::= (dr3d:back-scale::percent)? ;
 style-graphic-properties-attlist ::= (dr3d:depth::length)? ;
 style-graphic-properties-attlist ::= (dr3d:backface-culling::("enabled" | "disabled"))? ;
 style-graphic-properties-attlist ::= (dr3d:end-angle::nonNegativeInteger)? ;
 style-graphic-properties-attlist ::= (dr3d:close-front::boolean)? ;
 style-graphic-properties-attlist ::= (dr3d:close-back::boolean)? ;
 style-graphic-properties-attlist ::= (dr3d:lighting-mode::("standard" | "double-sided"))? ;
 style-graphic-properties-attlist ::= (dr3d:normals-kind::("object" | "flat" | "sphere"))? ;
 style-graphic-properties-attlist ::= (dr3d:normals-direction::("normal" | "inverse"))? ;
 style-graphic-properties-attlist ::= (dr3d:texture-generation-mode-x::("object" | "parallel" | "sphere"))? (dr3d:texture-generation-mode-y::("object" | "parallel" | "sphere"))? ;
 style-graphic-properties-attlist ::= (dr3d:texture-kind::("luminance" | "intesity" | "color"))? ;
 style-graphic-properties-attlist ::= (dr3d:texture-filter::("enabled" | "disabled"))? ;
 style-graphic-properties-attlist ::= (dr3d:texture-mode::("replace" | "modulate" | "blend"))? ;
 style-graphic-properties-attlist ::= (dr3d:ambient-color::color)? (dr3d:emissive-color::color)? (dr3d:specular-color::color)? (dr3d:diffuse-color::color)? ;
 style-graphic-properties-attlist ::= (dr3d:shininess::percent)? ;
 style-graphic-properties-attlist ::= (dr3d:shadow::("visible" | "hidden"))? ;
 style-graphic-properties-attlist ::= common-draw-rel-size-attlist (fo:min-width::(length | percent))? ;
 style-graphic-properties-attlist ::= (fo:min-height::(length | percent))? ;
 style-graphic-properties-attlist ::= (fo:max-height::(length | percent))? (fo:max-width::(length | percent))? ;
 style-graphic-properties-attlist ::= common-horizontal-margin-attlist ;
 style-graphic-properties-attlist ::= common-vertical-margin-attlist ;
 style-graphic-properties-attlist ::= common-margin-attlist ;
 style-graphic-properties-attlist ::= (style:print-content::boolean)? ;
 style-graphic-properties-attlist ::= (style:protect::("none" | (("content" | "position" | "size")+)))? ;
 style-graphic-properties-attlist ::= (style:horizontal-pos::("left" | "center" | "right" | "from-left" | "inside" | "outside" | "from-inside"))? (svg:x::coordinate)? ;
 style-graphic-properties-attlist ::= (style:horizontal-rel::("page" | "page-content" | "page-start-margin" | "page-end-margin" | "frame" | "frame-content" | "frame-start-margin" | "frame-end-margin" | "paragraph" | "paragraph-content" | "paragraph-start-margin" | "paragraph-end-margin" | "char"))? ;
 style-graphic-properties-attlist ::= common-vertical-pos-attlist ;
 style-graphic-properties-attlist ::= common-vertical-rel-attlist ;
 style-graphic-properties-attlist ::= common-text-anchor-attlist ;
 style-graphic-properties-attlist ::= common-border-attlist ;
 style-graphic-properties-attlist ::= common-border-line-width-attlist ;
 style-graphic-properties-attlist ::= common-padding-attlist ;
 style-graphic-properties-attlist ::= common-shadow-attlist ;
 style-graphic-properties-attlist ::= common-background-color-attlist ;
 style-graphic-properties-attlist ::= (style:editable::boolean)? ;
 style-graphic-properties-attlist ::= (style:wrap::("none" | "left" | "right" | "parallel" | "dynamic" | "run-through" | "biggest"))? ;
 style-graphic-properties-attlist ::= (style:wrap-dynamic-treshold::nonNegativeLength)? ;
 style-graphic-properties-attlist ::= (style:number-wrapped-paragraphs::("no-limit" | positiveInteger))? ;
 style-graphic-properties-attlist ::= (style:wrap-contour::boolean)? ;
 style-graphic-properties-attlist ::= (style:wrap-contour-mode::("full" | "outside"))? ;
 style-graphic-properties-attlist ::= (style:run-through::("foreground" | "background"))? ;
 style-graphic-properties-attlist ::= (style:flow-with-text::boolean)? ;
 style-graphic-properties-attlist ::= (style:overflow-behavior::("clip" | "auto-create-new-frame"))? ;
 style-graphic-properties-attlist ::= (style:mirror::("none" | "vertical" | horizontal-mirror | ("vertical" horizontal-mirror) | (horizontal-mirror "vertical")))? ;
 style-graphic-properties-attlist ::= (fo:clip::string)? ;
 style-graphic-properties-attlist ::= (draw:wrap-influence-on-position::("iterative" | "once-concurrent" | "once-successive"))? ;
 style-graphic-properties-attlist ::= (draw:frame-display-scrollbar::boolean)? ;
 style-graphic-properties-attlist ::= (draw:frame-display-border::boolean)? ;
 style-graphic-properties-attlist ::= (draw:frame-margin-horizontal::nonNegativePixelLength)? (draw:frame-margin-vertical::nonNegativePixelLength)? ;
 style-graphic-properties-attlist ::= (draw:visible-area-left::nonNegativeLength)? (draw:visible-area-top::nonNegativeLength)? (draw:visible-area-width::positiveLength)? (draw:visible-area-height::positiveLength)? ;
 style-graphic-properties-attlist ::= (draw:ole-draw-aspect::nonNegativeInteger)? ;
office-font-face-decls ::= (office:font-face-decls::(style-font-face*))? ;
office-document-styles ::= office:document-styles::(office-document-common-attrs office-font-face-decls office-styles office-automatic-styles office-master-styles) ;
table-subtotal-field-attlist ::= table:field-number::nonNegativeInteger ;
 table-subtotal-field-attlist ::= table:function::("auto" | "average" | "count" | "countnums" | "max" | "min" | "product" | "stdev" | "stdevp" | "sum" | "var" | "varp" | string) ;
text-hidden-text-attlist ::= text:condition::formula ;
 text-hidden-text-attlist ::= text:string-value::string ;
 text-hidden-text-attlist ::= (text:is-hidden::boolean)? ;
form-property ::= form:property::(form-property-name form-property-value-and-type-attlist) ;
 form-property ::= form:list-property::(form-property-name form-property-type-and-value-list) ;
table-named-expression-attlist ::= table:name::string table:expression::string (table:base-cell-address::cellAddress)? ;
script-event-listener-attlist ::= script:event-name::string ;
 script-event-listener-attlist ::= script:language::string ;
 script-event-listener-attlist ::= (script:macro-name::string) | (xlink:href::anyURI (xlink:type::"simple")? (xlink:actuate::"onRequest")?) ;
text-variable-decl ::= text:variable-decl::(common-field-name-attlist common-value-type-attlist) ;
draw-fill-image ::= draw:fill-image::(draw-fill-image-attlist xlink:href::anyURI (xlink:type::"simple")? (xlink:show::"embed")? (xlink:actuate::"onLoad")?) ;
office-document-content ::= office:document-content::(office-document-common-attrs office-scripts office-font-face-decls office-automatic-styles office-body) ;
anim-animate-transform-attlist ::= svg:type::("translate" | "scale" | "rotate" | "skewX" | "skewY") ;
draw-param-attlist ::= (draw:name::string())? ;
 draw-param-attlist ::= (draw:value::string())? ;
common-begin-end-timing-attlist ::= (smil:begin::string)? ;
 common-begin-end-timing-attlist ::= (smil:end::string)? ;
common-presentation-effect-attlist ::= draw:shape-id::IDREF ;
 common-presentation-effect-attlist ::= (presentation:effect::presentationEffects)? ;
 common-presentation-effect-attlist ::= (presentation:direction::presentationEffectDirections)? ;
 common-presentation-effect-attlist ::= (presentation:speed::presentationSpeeds)? ;
 common-presentation-effect-attlist ::= (presentation:delay::duration)? ;
 common-presentation-effect-attlist ::= (presentation:start-scale::percent)? ;
 common-presentation-effect-attlist ::= (presentation:path-id::string())? ;
style-columns-attlist ::= fo:column-count::positiveInteger ;
 style-columns-attlist ::= (fo:column-gap::length)? ;
text-a-attlist ::= (office:name::string)? ;
 text-a-attlist ::= xlink:href::anyURI (xlink:type::"simple")? (xlink:actuate::"onRequest")? ;
 text-a-attlist ::= (office:target-frame-name::targetFrameName)? (xlink:show::("new" | "replace"))? ;
 text-a-attlist ::= (text:style-name::styleNameRef)? (text:visited-style-name::styleNameRef)? ;
config-config-item ::= config:config-item::(config-config-item-attlist string()) ;
table-first-column ::= table:first-column::common-table-template-attlist ;
style-header-footer-attlist ::= (style:dynamic-spacing::boolean)? ;
style-graphic-fill-properties-attlist ::= (draw:fill::("none" | "solid" | "bitmap" | "gradient" | "hatch"))? ;
 style-graphic-fill-properties-attlist ::= (draw:fill-color::color)? ;
 style-graphic-fill-properties-attlist ::= (draw:secondary-fill-color::color)? ;
 style-graphic-fill-properties-attlist ::= (draw:fill-gradient-name::styleNameRef)? ;
 style-graphic-fill-properties-attlist ::= (draw:gradient-step-count::nonNegativeInteger)? ;
 style-graphic-fill-properties-attlist ::= (draw:fill-hatch-name::styleNameRef)? ;
 style-graphic-fill-properties-attlist ::= (draw:fill-hatch-solid::boolean)? ;
 style-graphic-fill-properties-attlist ::= (draw:fill-image-name::styleNameRef)? ;
 style-graphic-fill-properties-attlist ::= (style:repeat::("no-repeat" | "repeat" | "stretch"))? ;
 style-graphic-fill-properties-attlist ::= (draw:fill-image-width::(length | percent))? (draw:fill-image-height::(length | percent))? ;
 style-graphic-fill-properties-attlist ::= (draw:fill-image-ref-point-x::percent)? (draw:fill-image-ref-point-y::percent)? (draw:fill-image-ref-point::("top-left" | "top" | "top-right" | "left" | "center" | "right" | "bottom-left" | "bottom" | "bottom-right"))? ;
 style-graphic-fill-properties-attlist ::= (draw:tile-repeat-offset::string())? ;
 style-graphic-fill-properties-attlist ::= (draw:opacity::percent)? ;
 style-graphic-fill-properties-attlist ::= (draw:opacity-name::styleNameRef)? ;
 style-graphic-fill-properties-attlist ::= (svg:fill-rule::("nonzero" | "evenodd"))? ;
common-draw-rel-size-attlist ::= common-draw-size-attlist (style:rel-width::(percent | "scale" | "scale-min"))? (style:rel-height::(percent | "scale" | "scale-min"))? ;
table-cut-offs ::= table:cut-offs::((table-movement-cut-off+) | (table-insertion-cut-off table-movement-cut-off*)) ;
dr3d-sphere-attlist ::= (dr3d:center::vector3D)? ;
 dr3d-sphere-attlist ::= (dr3d:size::vector3D)? ;
draw-fill-image-attlist ::= draw:name::styleName ;
 draw-fill-image-attlist ::= (draw:display-name::string)? ;
 draw-fill-image-attlist ::= (svg:width::length)? (svg:height::length)? ;
common-dur-timing-attlist ::= (smil:dur::string)? ;
chart-mean-value-attlist ::= (chart:style-name::styleNameRef)? ;
style-text-properties-attlist ::= (fo:font-variant::fontVariant)? ;
 style-text-properties-attlist ::= (fo:text-transform::("none" | "lowercase" | "uppercase" | "capitalize"))? ;
 style-text-properties-attlist ::= (fo:color::color)? ;
 style-text-properties-attlist ::= (style:use-window-font-color::boolean)? ;
 style-text-properties-attlist ::= (style:text-outline::boolean)? ;
 style-text-properties-attlist ::= (style:text-line-through-type::lineType)? ;
 style-text-properties-attlist ::= (style:text-line-through-style::lineStyle)? ;
 style-text-properties-attlist ::= (style:text-line-through-width::lineWidth)? ;
 style-text-properties-attlist ::= (style:text-line-through-color::("font-color" | color))? ;
 style-text-properties-attlist ::= (style:text-line-through-text::string)? ;
 style-text-properties-attlist ::= (style:text-line-through-text-style::styleNameRef)? ;
 style-text-properties-attlist ::= (style:text-position::(percent | "super" | "sub" percent?))? ;
 style-text-properties-attlist ::= (style:font-name::string)? (style:font-name-asian::string)? (style:font-name-complex::string)? ;
 style-text-properties-attlist ::= (fo:font-family::string)? (style:font-family-asian::string)? (style:font-family-complex::string)? ;
 style-text-properties-attlist ::= (style:font-family-generic::fontFamilyGeneric)? (style:font-family-generic-asian::fontFamilyGeneric)? (style:font-family-generic-complex::fontFamilyGeneric)? ;
 style-text-properties-attlist ::= (style:font-style-name::string)? (style:font-style-name-asian::string)? (style:font-style-name-complex::string)? ;
 style-text-properties-attlist ::= (style:font-pitch::fontPitch)? (style:font-pitch-asian::fontPitch)? (style:font-pitch-complex::fontPitch)? ;
 style-text-properties-attlist ::= (style:font-charset::textEncoding)? ;
 style-text-properties-attlist ::= (fo:font-size::(positiveLength | percent))? (style:font-size-asian::(positiveLength | percent))? (style:font-size-complex::(positiveLength | percent))? ;
 style-text-properties-attlist ::= (style:font-size-rel::length)? (style:font-size-rel-asian::length)? (style:font-size-rel-complex::length)? ;
 style-text-properties-attlist ::= (style:script-type::("latin" | "asian" | "complex" | "ignore"))? ;
 style-text-properties-attlist ::= (fo:letter-spacing::(length | "normal"))? ;
 style-text-properties-attlist ::= (fo:language::languageCode)? (style:language-asian::languageCode)? (style:language-complex::languageCode)? ;
 style-text-properties-attlist ::= (fo:country::countryCode)? (style:country-asian::countryCode)? (style:country-complex::countryCode)? ;
 style-text-properties-attlist ::= (fo:font-style::fontStyle)? (style:font-style-asian::fontStyle)? (style:font-style-complex::fontStyle)? ;
 style-text-properties-attlist ::= (style:font-relief::("none" | "embossed" | "engraved"))? ;
 style-text-properties-attlist ::= (fo:text-shadow::shadowType)? ;
 style-text-properties-attlist ::= (style:text-underline-type::lineType)? ;
 style-text-properties-attlist ::= (style:text-underline-style::lineStyle)? ;
 style-text-properties-attlist ::= (style:text-underline-width::lineWidth)? ;
 style-text-properties-attlist ::= (style:text-underline-color::("font-color" | color))? ;
 style-text-properties-attlist ::= (fo:font-weight::fontWeight)? (style:font-weight-asian::fontWeight)? (style:font-weight-complex::fontWeight)? ;
 style-text-properties-attlist ::= (style:text-underline-mode::lineMode)? ;
 style-text-properties-attlist ::= (style:text-line-through-mode::lineMode)? ;
 style-text-properties-attlist ::= (style:letter-kerning::boolean)? ;
 style-text-properties-attlist ::= (style:text-blinking::boolean)? ;
 style-text-properties-attlist ::= common-background-color-attlist ;
 style-text-properties-attlist ::= (style:text-combine::("none" | "letters" | "lines"))? ;
 style-text-properties-attlist ::= (style:text-combine-start-char::character)? (style:text-combine-end-char::character)? ;
 style-text-properties-attlist ::= (style:text-emphasize::("none" | ("none" | "accent" | "dot" | "circle" | "disc" "above" | "below")))? ;
 style-text-properties-attlist ::= (style:text-scale::percent)? ;
 style-text-properties-attlist ::= (style:text-rotation-angle::integer)? ;
 style-text-properties-attlist ::= (style:text-rotation-scale::("fixed" | "line-height"))? ;
 style-text-properties-attlist ::= (fo:hyphenate::boolean)? ;
 style-text-properties-attlist ::= (fo:hyphenation-remain-char-count::positiveInteger)? ;
 style-text-properties-attlist ::= (fo:hyphenation-push-char-count::positiveInteger)? ;
 style-text-properties-attlist ::= (text:display::"true") | (text:display::"none") | (text:display::"condition" text:condition::"none") | ε ;
presentation-header-decl-attlist ::= presentation:name::string ;
number-time-style-attlist ::= (number:truncate-on-overflow::boolean)? ;
office-dde-source-attlist ::= (office:name::string)? ;
 office-dde-source-attlist ::= (office:conversion-mode::("into-default-style-data-style" | "into-english-number" | "keep-text"))? ;
text-object-index-source ::= text:object-index-source::(text-object-index-source-attrs text-index-title-template? text-object-index-entry-template?) ;
text-dde-connection-decl-attlist ::= office:name::string ;
text-section-source ::= text:section-source::text-section-source-attr ;
draw-image-map ::= draw:image-map::((draw-area-rectangle | draw-area-circle | draw-area-polygon)*) ;
table-data-pilot-group-member ::= table:data-pilot-group-member::table-data-pilot-group-member-attlist ;
office-meta-data ::= meta:generator::string ;
 office-meta-data ::= dc:title::string ;
 office-meta-data ::= dc:description::string ;
 office-meta-data ::= dc:subject::string ;
 office-meta-data ::= meta:keyword::string ;
 office-meta-data ::= meta:initial-creator::string ;
 office-meta-data ::= dc-creator ;
 office-meta-data ::= meta:printed-by::string ;
 office-meta-data ::= meta:creation-date::dateTime ;
 office-meta-data ::= dc-date ;
 office-meta-data ::= meta:print-date::dateTime ;
 office-meta-data ::= meta:template::(xlink:href::anyURI (xlink:type::"simple")? (xlink:actuate::"onRequest")? (xlink:title::string)? (meta:date::dateTime)?) ;
 office-meta-data ::= meta:auto-reload::((xlink:type::"simple")? (xlink:show::"replace")? (xlink:actuate::"onLoad")? (xlink:href::anyURI)? (meta:delay::duration)?) ;
 office-meta-data ::= meta:hyperlink-behaviour::((office:target-frame-name::targetFrameName)? (xlink:show::("new" | "replace"))?) ;
 office-meta-data ::= dc:language::language ;
 office-meta-data ::= meta:editing-cycles::nonNegativeInteger ;
 office-meta-data ::= meta:editing-duration::duration ;
 office-meta-data ::= meta:document-statistic::((meta:page-count::nonNegativeInteger)? (meta:table-count::nonNegativeInteger)? (meta:draw-count::nonNegativeInteger)? (meta:image-count::nonNegativeInteger)? (meta:ole-object-count::nonNegativeInteger)? (meta:paragraph-count::nonNegativeInteger)? (meta:word-count::nonNegativeInteger)? (meta:character-count::nonNegativeInteger)? (frame-count::nonNegativeInteger)? (sentence-count::nonNegativeInteger)? (syllable-count::nonNegativeInteger)? (non-whitespace-character-count::nonNegativeInteger)? (meta:row-count::nonNegativeInteger)? (meta:cell-count::nonNegativeInteger)? (meta:object-count::nonNegativeInteger)?) ;
 office-meta-data ::= meta:user-defined::(meta:name::string (meta:value-type::"float" double) | (meta:value-type::"date" dateOrDateTime) | (meta:value-type::"time" duration) | (meta:value-type::"boolean" boolean) | (meta:value-type::"string" string) | string()) ;
office-document-attrs ::= office:mimetype::string ;
draw-enhanced-geometry ::= draw:enhanced-geometry::(draw-enhanced-geometry-attlist draw-equation* draw-handle*) ;
text-bibliography-entry-template ::= text:bibliography-entry-template::(text-bibliography-entry-template-attrs (text-index-entry-span | text-index-entry-tab-stop | text-index-entry-bibliography)*) ;
style-region-right ::= style:region-right::region-content ;
table-data-pilot-field-reference ::= table:data-pilot-field-reference::table-data-pilot-field-reference-attlist ;
text-ref-content ::= (text:reference-format::("page" | "chapter" | "direction" | "text"))? ;
text-chapter-attlist ::= text:display::("name" | "number" | "number-and-name" | "plain-number-and-name" | "plain-number") ;
 text-chapter-attlist ::= text:outline-level::nonNegativeInteger ;
text-page-sequence ::= text:page-sequence::(text-page+) ;
form-checkbox-attlist ::= form-control-attlist common-disabled-attlist label common-printable-attlist common-tab-attlist common-title-attlist common-value-attlist common-data-field-attlist common-form-visual-effect-attlist common-form-relative-image-position-attlist ;
 form-checkbox-attlist ::= (form:current-state::states)? ;
 form-checkbox-attlist ::= (form:is-tristate::boolean)? ;
 form-checkbox-attlist ::= (form:state::states)? ;
draw-layer-set ::= draw:layer-set::(draw-layer*) ;
text-hidden-paragraph-attlist ::= text:condition::formula ;
 text-hidden-paragraph-attlist ::= (text:is-hidden::boolean)? ;
common-draw-points-attlist ::= draw:points::points ;
presentation-sound ::= presentation:sound::(presentation-sound-attlist xlink:href::anyURI (xlink:type::"simple")? (xlink:actuate::"onRequest")? (xlink:show::("new" | "replace"))?) ;
chart-error-indicator ::= chart:error-indicator::chart-error-indicator-attlist ;
chart-title-attlist ::= (table:cell-range::cellAddress)? ;
 chart-title-attlist ::= common-draw-position-attlist ;
 chart-title-attlist ::= (chart:style-name::styleNameRef)? ;
style-background-image ::= (style:background-image::(style-background-image-attlist common-draw-data-attlist | office-binary-data | ε))? ;
dr3d-cube-attlist ::= (dr3d:min-edge::vector3D)? (dr3d:max-edge::vector3D)? ;
form-property-type-and-value-list ::= (office:value-type::"float" (form:list-value::(office:value::double))*) | (office:value-type::"percentage" (form:list-value::(office:value::double))*) | (office:value-type::"currency" (form:list-value::(office:value::double (office:currency::string)?))*) | (office:value-type::"date" (form:list-value::(office:date-value::dateOrDateTime))*) | (office:value-type::"time" (form:list-value::(office:time-value::duration))*) | (office:value-type::"boolean" (form:list-value::(office:boolean-value::boolean))*) | (office:value-type::"string" (form:list-value::(office:string-value::string))*) | (office:value-type::"void") ;
xforms-model ::= xforms:model::anyAttListOrElements ;
table-dde-links ::= table:dde-links::(table-dde-link+) ;
style-drop-cap ::= (style:drop-cap::style-drop-cap-attlist)? ;
draw-floating-frame ::= draw:floating-frame::(draw-floating-frame-attlist common-draw-data-attlist) ;
common-writing-mode-attlist ::= (style:writing-mode::("lr-tb" | "rl-tb" | "tb-rl" | "tb-lr" | "lr" | "rl" | "tb" | "page"))? ;
text-illustration-index-source-attrs ::= text-index-scope-attr ;
 text-illustration-index-source-attrs ::= text-relative-tab-stop-position-attr ;
 text-illustration-index-source-attrs ::= (text:use-caption::boolean)? ;
 text-illustration-index-source-attrs ::= (text:caption-sequence-name::string)? ;
 text-illustration-index-source-attrs ::= (text:caption-sequence-format::("text" | "category-and-value" | "caption"))? ;
xforms-bind-attlist ::= (xforms:bind::string)? ;
draw-opacity ::= draw:opacity::(common-draw-gradient-attlist draw-opacity-attlist) ;
table-linked-source-attlist ::= (xlink:type::"simple")? (xlink:actuate::"onRequest")? xlink:href::anyURI ;
 table-linked-source-attlist ::= (table:filter-name::string)? ;
 table-linked-source-attlist ::= (table:filter-options::string)? ;
 table-linked-source-attlist ::= (table:refresh-delay::duration)? ;
form-column ::= form:column::(form-column-attlist column-controls+) ;
table-data-pilot-groups-attlist ::= table:source-field-name::string ;
 table-data-pilot-groups-attlist ::= (table:date-start::(dateOrDateTime | "auto")) | (table:start::(double | "auto")) ;
 table-data-pilot-groups-attlist ::= (table:date-end::(dateOrDateTime | "auto")) | (table:end::(double | "auto")) ;
 table-data-pilot-groups-attlist ::= table:step::double ;
 table-data-pilot-groups-attlist ::= table:grouped-by::("seconds" | "minutes" | "hours" | "days" | "months" | "quarters" | "years") ;
text-outline-level-style ::= text:outline-level-style::(text-outline-level-style-attlist style-list-level-properties? style-text-properties?) ;
table-data-pilot-subtotal ::= table:data-pilot-subtotal::table-data-pilot-subtotal-attlist ;
text-note-class ::= text:note-class::("footnote" | "endnote") ;
text-list-style-attr ::= style:name::styleName ;
 text-list-style-attr ::= (style:display-name::string)? ;
 text-list-style-attr ::= (text:consecutive-numbering::boolean)? ;
common-presentation-header-footer-attlist ::= (presentation:use-header-name::string)? ;
 common-presentation-header-footer-attlist ::= (presentation:use-footer-name::string)? ;
 common-presentation-header-footer-attlist ::= (presentation:use-date-time-name::string)? ;
text-index-source-styles ::= text:index-source-styles::(text:outline-level::positiveInteger text-index-source-style*) ;
text-section-attr ::= sectionAttr ;
 text-section-attr ::= (text:display::("true" | "none")) | (text:display::"condition" text:condition::string) | ε ;
number-day-of-week ::= number:day-of-week::(number-day-of-week-attlist common-calendar-attlist) ;
draw-opacity-attlist ::= (draw:start::percent)? (draw:end::percent)? ;
common-anim-named-target-attlist ::= smil:attributeName::string ;
target-location ::= (xlink:href::anyURI)? ;
current-selected ::= (form:current-selected::boolean)? ;
text-decls ::= (text:variable-decls::(text-variable-decl*))? (text:sequence-decls::(text-sequence-decl*))? (text:user-field-decls::(text-user-field-decl*))? (text:dde-connection-decls::(text-dde-connection-decl*))? text-alphabetical-index-auto-mark-file? ;
office-binary-data ::= office:binary-data::base64Binary ;
table-movement-cut-off ::= table:movement-cut-off::table-movement-cut-off-attlist ;
form-number-attlist ::= (form:value::double)? ;
 form-number-attlist ::= (form:current-value::double)? ;
 form-number-attlist ::= (form:min-value::double)? ;
 form-number-attlist ::= (form:max-value::double)? ;
draw-glue-points-attlist ::= draw:escape-direction::("auto" | "left" | "right" | "up" | "down" | "horizontal" | "vertical") ;
text-list-style ::= text:list-style::(text-list-style-attr text-list-style-content*) ;
text-illustration-index-entry-template-attrs ::= text:style-name::styleNameRef ;
common-dde-connection-decl-attlist ::= office:dde-application::string ;
 common-dde-connection-decl-attlist ::= office:dde-topic::string ;
 common-dde-connection-decl-attlist ::= office:dde-item::string ;
 common-dde-connection-decl-attlist ::= (office:automatic-update::boolean)? ;
text-time-attlist ::= common-field-fixed-attlist common-field-data-style-name-attlist ;
 text-time-attlist ::= (text:time-value::timeOrDateTime)? ;
 text-time-attlist ::= (text:time-adjust::duration)? ;
common-number-attlist ::= (number:min-integer-digits::integer)? ;
 common-number-attlist ::= (number:grouping::boolean)? ;
presentation-footer-decl-attlist ::= presentation:name::string ;
svg-desc ::= svg:desc::string() ;
form-combobox-attlist ::= form-control-attlist common-current-value-attlist common-disabled-attlist dropdown common-maxlength-attlist common-printable-attlist common-readonly-attlist size common-tab-attlist common-title-attlist common-value-attlist common-convert-empty-attlist common-data-field-attlist list-source list-source-type ;
 form-combobox-attlist ::= (form:auto-complete::boolean)? ;
common-page-number-attlist ::= (style:page-number::positiveInteger)? ;
text-database-next-attlist ::= common-field-database-table ;
 text-database-next-attlist ::= (text:condition::formula)? ;
common-vertical-rel-attlist ::= (style:vertical-rel::("page" | "page-content" | "frame" | "frame-content" | "paragraph" | "paragraph-content" | "char" | "line" | "baseline" | "text"))? ;
draw-ellipse ::= draw:ellipse::(common-draw-circle-ellipse-attlist draw-ellipse-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text) ;
common-draw-id-attlist ::= (draw:id::ID)? ;
table-data-pilot-member ::= table:data-pilot-member::table-data-pilot-member-attlist ;
number-currency-symbol ::= number:currency-symbol::(number-currency-symbol-attlist string()) ;
common-field-display-value-formula-none-attlist ::= (text:display::("value" | "formula" | "none"))? ;
common-repeat-timing-attlist ::= (smil:repeatDur::string smil:repeatCount::nonNegativeInteger)? ;
form-value-range-attlist ::= form-control-attlist common-disabled-attlist common-printable-attlist common-tab-attlist common-title-attlist common-value-attlist ;
 form-value-range-attlist ::= (form:max-value::string)? ;
 form-value-range-attlist ::= (form:min-value::string)? ;
 form-value-range-attlist ::= (form:step-size::positiveInteger)? ;
 form-value-range-attlist ::= (form:page-step-size::positiveInteger)? ;
 form-value-range-attlist ::= (form:delay-for-repeat::duration)? ;
 form-value-range-attlist ::= (form:orientation::("horizontal" | "vertical"))? ;
number-boolean-style ::= number:boolean-style::(common-data-style-attlist style-text-properties? number-text? (number-boolean number-text?)? style-map*) ;
table-error-macro ::= table:error-macro::((table:execute::boolean)?) ;
config-config-item-set ::= config:config-item-set::(config-config-item-set-attlist config-items) ;
presentation-dim-attlist ::= draw:shape-id::IDREF ;
 presentation-dim-attlist ::= draw:color::color ;
text-bibliography-source ::= text:bibliography-source::(text-index-title-template? text-bibliography-entry-template*) ;
text-sort-key-attlist ::= text:key::("address" | "annote" | "author" | "bibliography-type" | "booktitle" | "chapter" | "custom1" | "custom2" | "custom3" | "custom4" | "custom5" | "edition" | "editor" | "howpublished" | "identifier" | "institution" | "isbn" | "issn" | "journal" | "month" | "note" | "number" | "organizations" | "pages" | "publisher" | "report-type" | "school" | "series" | "title" | "url" | "volume" | "year") (text:sort-ascending::boolean)? ;
style-list-level-properties-attlist ::= common-text-align ;
 style-list-level-properties-attlist ::= (text:space-before::nonNegativeLength)? ;
 style-list-level-properties-attlist ::= (text:min-label-width::nonNegativeLength)? ;
 style-list-level-properties-attlist ::= (text:min-label-distance::nonNegativeLength)? ;
 style-list-level-properties-attlist ::= (style:font-name::string)? ;
 style-list-level-properties-attlist ::= (fo:width::positiveLength)? (fo:height::positiveLength)? ;
 style-list-level-properties-attlist ::= common-vertical-rel-attlist common-vertical-pos-attlist ;
number-year ::= number:year::(number-year-attlist common-calendar-attlist) ;
table-body ::= table:body::common-table-template-attlist ;
text-index-entry-span ::= text:index-entry-span::((text:style-name::styleNameRef)? string()) ;
text-date-attlist ::= common-field-fixed-attlist common-field-data-style-name-attlist ;
 text-date-attlist ::= (text:date-value::dateOrDateTime)? ;
 text-date-attlist ::= (text:date-adjust::duration)? ;
text-user-field-decl ::= text:user-field-decl::(common-field-name-attlist common-field-formula-attlist? common-value-and-type-attlist) ;
table-sort ::= table:sort::(table-sort-attlist table-sort-by+) ;
dc-date ::= dc:date::dateTime ;
text-database-row-select-attlist ::= common-field-database-table ;
 text-database-row-select-attlist ::= (text:condition::formula)? ;
 text-database-row-select-attlist ::= (text:row-number::nonNegativeInteger)? ;
chart-axis ::= chart:axis::(chart-axis-attlist chart-title? chart-categories? chart-grid*) ;
table-database-source-sql ::= table:database-source-sql::table-database-source-sql-attlist ;
draw-custom-shape ::= draw:custom-shape::(draw-custom-shape-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text draw-enhanced-geometry?) ;
form-form ::= form:form::(common-form-control-attlist form-form-attlist form-properties? office-event-listeners? (controls | form-form)* form-connection-resource?) ;
common-table-cell-range-address-attlist ::= table:start-column::integer table:start-row::integer table:start-table::integer table:end-column::integer table:end-row::integer table:end-table::integer ;
list-source ::= (form:list-source::string)? ;
common-draw-gradient-attlist ::= (draw:name::styleName)? ;
 common-draw-gradient-attlist ::= (draw:display-name::string)? ;
 common-draw-gradient-attlist ::= draw:style::gradient-style ;
 common-draw-gradient-attlist ::= (draw:cx::percent)? (draw:cy::percent)? ;
 common-draw-gradient-attlist ::= (draw:angle::integer)? ;
 common-draw-gradient-attlist ::= (draw:border::percent)? ;
draw-polyline ::= draw:polyline::(common-draw-points-attlist common-draw-position-attlist common-draw-size-attlist common-draw-viewbox-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text) ;
text-numbered-paragraph ::= text:numbered-paragraph::(text-numbered-paragraph-attr text-number? text-p | text-h) ;
text-list-level-style-bullet-attr ::= (text:style-name::styleNameRef)? ;
 text-list-level-style-bullet-attr ::= text:bullet-char::character ;
 text-list-level-style-bullet-attr ::= common-num-format-prefix-suffix-attlist ;
 text-list-level-style-bullet-attr ::= (text:bullet-relative-size::percent)? ;
number-quarter ::= number:quarter::(number-quarter-attlist common-calendar-attlist) ;
config-config-item-map-entry ::= config:config-item-map-entry::(config-config-item-map-entry-attlist config-items) ;
anim-transition-filter-attlist ::= smil:type::string ;
 anim-transition-filter-attlist ::= (smil:subtype::string)? ;
 anim-transition-filter-attlist ::= (smil:direction::("forward" | "reverse"))? ;
 anim-transition-filter-attlist ::= (smil:fadeColor::("forward" | "reverse"))? ;
 anim-transition-filter-attlist ::= (smil:mode::("in" | "out"))? ;
text-alphabetical-index-entry-template ::= text:alphabetical-index-entry-template::(text-alphabetical-index-entry-template-attrs (text-index-entry-chapter | text-index-entry-page-number | text-index-entry-text | text-index-entry-span | text-index-entry-tab-stop)*) ;
common-table-change-attlist ::= table:id::string ;
 common-table-change-attlist ::= (table:acceptance-state::("accepted" | "rejected" | "pending"))? ;
 common-table-change-attlist ::= (table:rejecting-change-id::string)? ;
common-field-formula-attlist ::= (text:formula::formula)? ;
text-set-page-variable-attlist ::= (text:active::boolean)? ;
 text-set-page-variable-attlist ::= (text:page-adjust::integer)? ;
table-data-pilot-field ::= table:data-pilot-field::(table-data-pilot-field-attlist table-data-pilot-level? table-data-pilot-field-reference? table-data-pilot-groups?) ;
draw-glue-point ::= draw:glue-point::draw-glue-point-attlist ;
chart-chart-attlist ::= chart:class::namespacedToken ;
 chart-chart-attlist ::= common-draw-size-attlist ;
 chart-chart-attlist ::= (chart:column-mapping::string)? ;
 chart-chart-attlist ::= (chart:row-mapping::string)? ;
 chart-chart-attlist ::= (chart:style-name::styleNameRef)? ;
draw-custom-shape-attlist ::= (draw:engine::namespacedToken)? ;
 draw-custom-shape-attlist ::= (draw:data::string)? ;
table-highlighted-range-attlist-invalid ::= table:marked-invalid::boolean ;
table-data-pilot-tables ::= table:data-pilot-tables::(table-data-pilot-table*) ;
table-table-row ::= table:table-row::(table-table-row-attlist (table-table-cell | table-covered-table-cell)+) ;
table-operation-attlist ::= table:name::("trace-dependents" | "remove-dependents" | "trace-precedents" | "remove-precedents" | "trace-errors") ;
 table-operation-attlist ::= table:index::nonNegativeInteger ;
table-detective ::= table:detective::(table-highlighted-range* table-operation*) ;
office-settings ::= (office:settings::(config-config-item-set+))? ;
table-tracked-changes-attlist ::= (table:track-changes::boolean)? ;
text-table-of-content-entry-template-attlist ::= text:outline-level::positiveInteger ;
 text-table-of-content-entry-template-attlist ::= text:style-name::styleNameRef ;
common-num-format-prefix-suffix-attlist ::= (style:num-prefix::string)? (style:num-suffix::string)? ;
dropdown ::= (form:dropdown::boolean)? ;
common-disabled-attlist ::= (form:disabled::boolean)? ;
common-svg-gradient-attlist ::= (svg:gradientUnits::"objectBoundingBox")? (svg:gradientTransform::string)? (svg:spreadMethod::("pad" | "reflect" | "repeat"))? ;
 common-svg-gradient-attlist ::= draw:name::styleName ;
 common-svg-gradient-attlist ::= (draw:display-name::string)? ;
draw-a-attlist ::= xlink:href::anyURI (xlink:type::"simple")? (xlink:actuate::"onRequest")? ;
 draw-a-attlist ::= (office:target-frame-name::targetFrameName)? (xlink:show::("new" | "replace"))? ;
 draw-a-attlist ::= (office:name::string)? ;
 draw-a-attlist ::= (office:server-map::boolean)? ;
style-default-style ::= style:default-style::style-style-content ;
table-named-expressions ::= table:named-expressions::((table-named-range | table-named-expression)*) ;
number-fraction ::= number:fraction::(number-fraction-attlist common-number-attlist) ;
common-draw-area-attlist ::= (xlink:href::anyURI)? (xlink:type::"simple")? (office:target-frame-name::targetFrameName)? (xlink:show::("new" | "replace"))? ;
 common-draw-area-attlist ::= (office:name::string)? ;
 common-draw-area-attlist ::= (draw:nohref::"nohref")? ;
common-draw-name-attlist ::= (draw:name::string)? ;
text-bibliography ::= text:bibliography::(sectionAttr text-bibliography-source text-index-body) ;
table-dde-link ::= table:dde-link::(office-dde-source table-table) ;
size ::= (form:size::nonNegativeInteger)? ;
table-table-attlist ::= (table:name::string)? ;
 table-table-attlist ::= (table:style-name::styleNameRef)? ;
 table-table-attlist ::= (table:protected::boolean)? (table:protection-key::string())? ;
 table-table-attlist ::= (table:print::boolean)? ;
 table-table-attlist ::= (table:print-ranges::cellRangeAddressList)? ;
 table-table-attlist ::= (table:is-sub-table::boolean)? ;
--------------------odf::opendoc-1.1-manifest.bgf--------------------
algorithm ::= manifest:algorithm::algorithm-attlist ;
manifest ::= manifest:manifest::(file-entry+) ;
key-derivation-attlist ::= manifest:key-derivation-name::string() ;
 key-derivation-attlist ::= manifest:salt::string() ;
 key-derivation-attlist ::= manifest:iteration-count::integer() ;
encryption-data-attlist ::= manifest:checksum-type::string() ;
 encryption-data-attlist ::= manifest:checksum::string() ;
key-derivation ::= manifest:key-derivation::key-derivation-attlist ;
encryption-data ::= manifest:encryption-data::(encryption-data-attlist algorithm key-derivation) ;
file-entry-attlist ::= manifest:full-path::string() ;
 file-entry-attlist ::= (manifest:size::integer())? ;
 file-entry-attlist ::= manifest:media-type::string() ;
algorithm-attlist ::= manifest:algorithm-name::string() ;
 algorithm-attlist ::= manifest:initialisation-vector::string() ;
file-entry ::= manifest:file-entry::(file-entry-attlist encryption-data?) ;
--------------------odf::opendoc-1.1-strict.bgf--------------------
style-font-face ::= style:font-face::(style-font-face-attlist svg-font-face-src? svg-definition-src?) ;
svg-linearGradient ::= svg:linearGradient::(common-svg-gradient-attlist (svg:x1::(coordinate | percent))? (svg:y1::(coordinate | percent))? (svg:x2::(coordinate | percent))? (svg:y2::(coordinate | percent))? svg-stop*) ;
style-page-layout-attlist ::= style:name::styleName ;
 style-page-layout-attlist ::= (style:page-usage::("all" | "left" | "right" | "mirrored"))? ;
number-seconds ::= number:seconds::number-seconds-attlist ;
number-currency-style ::= number:currency-style::(common-data-style-attlist common-auto-reorder-attlist style-text-properties? number-text? ((number-and-text currency-symbol-and-text?) | (currency-symbol-and-text number-and-text?))? style-map*) ;
number-fraction-attlist ::= (number:min-numerator-digits::integer)? ;
 number-fraction-attlist ::= (number:min-denominator-digits::integer)? ;
 number-fraction-attlist ::= (number:denominator-value::integer)? ;
table-covered-table-cell ::= table:covered-table-cell::(table-table-cell-attlist table-table-cell-content) ;
text-notes-configuration-content ::= text-note-class ;
 text-notes-configuration-content ::= (text:citation-style-name::styleNameRef)? ;
 text-notes-configuration-content ::= (text:citation-body-style-name::styleNameRef)? ;
 text-notes-configuration-content ::= (text:default-style-name::styleNameRef)? ;
 text-notes-configuration-content ::= (text:master-page-name::styleNameRef)? ;
 text-notes-configuration-content ::= (text:start-value::nonNegativeInteger)? ;
 text-notes-configuration-content ::= common-num-format-prefix-suffix-attlist common-num-format-attlist? ;
 text-notes-configuration-content ::= (text:start-numbering-at::("document" | "chapter" | "page"))? ;
 text-notes-configuration-content ::= (text:footnotes-position::("text" | "page" | "section" | "document"))? ;
 text-notes-configuration-content ::= (text:note-continuation-notice-forward::string())? ;
 text-notes-configuration-content ::= (text:note-continuation-notice-backward::string())? ;
draw-applet-attlist ::= (draw:code::string())? ;
 draw-applet-attlist ::= (draw:object::string())? ;
 draw-applet-attlist ::= (draw:archive::string())? ;
 draw-applet-attlist ::= (draw:may-script::boolean)? ;
number-scientific-number ::= number:scientific-number::(number-scientific-number-attlist common-decimal-places-attlist common-number-attlist) ;
presentation-hide-shape ::= presentation:hide-shape::(common-presentation-effect-attlist presentation-sound?) ;
text-number ::= text:number::string ;
common-title-attlist ::= (form:title::string())? ;
draw-object ::= draw:object::(draw-object-attlist common-draw-data-attlist | office-document | math-math) ;
table-sort-by ::= table:sort-by::table-sort-by-attlist ;
table-data-pilot-table-attlist ::= table:name::string ;
 table-data-pilot-table-attlist ::= (table:application-data::string)? ;
 table-data-pilot-table-attlist ::= (table:grand-total::("none" | "row" | "column" | "both"))? ;
 table-data-pilot-table-attlist ::= (table:ignore-empty-rows::boolean)? ;
 table-data-pilot-table-attlist ::= (table:identify-categories::boolean)? ;
 table-data-pilot-table-attlist ::= table:target-range-address::cellRangeAddress ;
 table-data-pilot-table-attlist ::= (table:buttons::cellRangeAddressList)? ;
 table-data-pilot-table-attlist ::= (table:show-filter-button::boolean)? ;
 table-data-pilot-table-attlist ::= (table:drill-down-on-double-click::boolean)? ;
presentation-hide-text ::= presentation:hide-text::(common-presentation-effect-attlist presentation-sound?) ;
style-tab-stop-char-attlist ::= style:char::character ;
table-deletion-attlist ::= table:type::("row" | "column" | "table") ;
 table-deletion-attlist ::= table:position::integer ;
 table-deletion-attlist ::= (table:table::integer)? ;
 table-deletion-attlist ::= (table:multi-deletion-spanned::integer)? ;
number-text-content ::= number:text-content::ε ;
draw-plugin ::= draw:plugin::(draw-plugin-attlist common-draw-data-attlist draw-param*) ;
table-database-source-query-attlist ::= table:database-name::string ;
 table-database-source-query-attlist ::= table:query-name::string ;
draw-area-rectangle ::= draw:area-rectangle::(common-draw-area-attlist svg:x::coordinate svg:y::coordinate svg:width::length svg:height::length svg-title? svg-desc? office-event-listeners?) ;
table-table-rows ::= table:table-rows::((text-soft-page-break? table-table-row)+) ;
style-tab-stop ::= style:tab-stop::style-tab-stop-attlist ;
number-date-style ::= number:date-style::(common-data-style-attlist common-auto-reorder-attlist common-format-source-attlist style-text-properties? number-text? (any-date number-text?)+ style-map*) ;
draw-marker-attlist ::= draw:name::styleName ;
 draw-marker-attlist ::= (draw:display-name::string)? ;
chart-grid ::= chart:grid::chart-grid-attlist ;
table-table-cell-attlist-extra ::= (table:number-columns-spanned::positiveInteger)? (table:number-rows-spanned::positiveInteger)? ;
 table-table-cell-attlist-extra ::= (table:number-matrix-columns-spanned::positiveInteger)? (table:number-matrix-rows-spanned::positiveInteger)? ;
common-text-spreadsheet-shape-attlist ::= (table:end-cell-address::cellAddress)? (table:end-x::coordinate)? (table:end-y::coordinate)? ;
 common-text-spreadsheet-shape-attlist ::= (table:table-background::boolean)? ;
 common-text-spreadsheet-shape-attlist ::= common-text-anchor-attlist ;
common-draw-text-style-name-attlist ::= (draw:text-style-name::styleNameRef)? ;
table-shapes ::= table:shapes::(shape+) ;
text-p ::= text:p::(paragraph-attrs paragraph-content*) ;
common-style-header-footer-attlist ::= (style:display::boolean)? ;
draw-line-attlist ::= svg:x1::coordinate svg:y1::coordinate ;
 draw-line-attlist ::= svg:x2::coordinate svg:y2::coordinate ;
table-movement ::= table:movement::(common-table-change-attlist table-source-range-address table-target-range-address office-change-info table-dependencies? table-deletions?) ;
script-event-listener ::= script:event-listener::script-event-listener-attlist ;
style-tab-stop-attlist ::= style:position::nonNegativeLength ;
 style-tab-stop-attlist ::= ((style:type::("left" | "center" | "right"))?) | (style:type::"char" style-tab-stop-char-attlist) ;
 style-tab-stop-attlist ::= (style:leader-type::lineType)? ;
 style-tab-stop-attlist ::= (style:leader-style::lineStyle)? ;
 style-tab-stop-attlist ::= (style:leader-width::lineWidth)? ;
 style-tab-stop-attlist ::= (style:leader-color::("font-color" | color))? ;
 style-tab-stop-attlist ::= (style:leader-text::string)? ;
 style-tab-stop-attlist ::= (style:leader-text-style::styleNameRef)? ;
text-h ::= text:h::(heading-attrs paragraph-attrs text-number? paragraph-content*) ;
text-outline-style ::= text:outline-style::(text-outline-level-style+) ;
draw-control-attlist ::= draw:control::IDREF ;
table-table-column-attlist ::= (table:number-columns-repeated::positiveInteger)? ;
 table-table-column-attlist ::= (table:style-name::styleNameRef)? ;
 table-table-column-attlist ::= (table:visibility::table-visibility-value)? ;
 table-table-column-attlist ::= (table:default-cell-style-name::styleNameRef)? ;
text-placeholder-attlist ::= text:placeholder-type::("text" | "table" | "text-box" | "image" | "object") ;
 text-placeholder-attlist ::= common-field-description-attlist ;
office-document-settings ::= office:document-settings::(office-document-common-attrs office-settings) ;
draw-handle-attlist ::= (draw:handle-mirror-vertical::boolean)? ;
 draw-handle-attlist ::= (draw:handle-mirror-horizontal::boolean)? ;
 draw-handle-attlist ::= (draw:handle-switched::boolean)? ;
 draw-handle-attlist ::= draw:handle-position::string ;
 draw-handle-attlist ::= (draw:handle-range-x-minimum::string)? ;
 draw-handle-attlist ::= (draw:handle-range-x-maximum::string)? ;
 draw-handle-attlist ::= (draw:handle-range-y-minimum::string)? ;
 draw-handle-attlist ::= (draw:handle-range-y-maximum::string)? ;
 draw-handle-attlist ::= (draw:handle-polar::string)? ;
 draw-handle-attlist ::= (draw:handle-radius-range-minimum::string)? ;
 draw-handle-attlist ::= (draw:handle-radius-range-maximum::string)? ;
presentation-show-attlist ::= presentation:name::string ;
 presentation-show-attlist ::= presentation:pages::string() ;
style-columns ::= (style:columns::(style-columns-attlist style-column-sep? style-column*))? ;
table-calculation-setting-attlist ::= (table:case-sensitive::boolean)? ;
 table-calculation-setting-attlist ::= (table:precision-as-shown::boolean)? ;
 table-calculation-setting-attlist ::= (table:search-criteria-must-apply-to-whole-cell::boolean)? ;
 table-calculation-setting-attlist ::= (table:automatic-find-labels::boolean)? ;
 table-calculation-setting-attlist ::= (table:use-regular-expressions::boolean)? ;
 table-calculation-setting-attlist ::= (table:null-year::positiveInteger)? ;
table-subtotal-rules-attlist ::= (table:bind-styles-to-content::boolean)? ;
 table-subtotal-rules-attlist ::= (table:case-sensitive::boolean)? ;
 table-subtotal-rules-attlist ::= (table:page-breaks-on-group-change::boolean)? ;
number-am-pm ::= number:am-pm::ε ;
number-time-style ::= number:time-style::(number-time-style-attlist common-data-style-attlist common-format-source-attlist style-text-properties? number-text? (any-time number-text?)+ style-map*) ;
text-dde-connection-decl ::= text:dde-connection-decl::(text-dde-connection-decl-attlist common-dde-connection-decl-attlist) ;
style-table-column-properties ::= style:table-column-properties::style-table-column-properties-content ;
chart-stock-range-line ::= chart:stock-range-line::common-stock-marker-attlist ;
chart-title ::= chart:title::(chart-title-attlist text-p?) ;
common-anim-attlist ::= (presentation:node-type::("default" | "on-click" | "with-previous" | "after-previous" | "timing-root" | "main-sequence" | "interactive-sequence"))? ;
 common-anim-attlist ::= (presentation:preset-id::string)? ;
 common-anim-attlist ::= (presentation:preset-sub-type::string)? ;
 common-anim-attlist ::= (presentation:preset-class::("custom" | "entrance" | "exit" | "emphasis" | "motion-path" | "ole-action" | "media-call"))? ;
 common-anim-attlist ::= (presentation:master-element::IDREF)? ;
 common-anim-attlist ::= (presentation:group-id::string)? ;
 common-anim-attlist ::= (anim:id::ID)? ;
common-tab-attlist ::= (form:tab-index::nonNegativeInteger)? ;
 common-tab-attlist ::= (form:tab-stop::boolean)? ;
config-config-item-attlist ::= config:name::string ;
 config-config-item-attlist ::= config:type::("boolean" | "short" | "int" | "long" | "double" | "string" | "datetime" | "base64Binary") ;
draw-frame ::= draw:frame::(common-draw-shape-with-text-and-styles-attlist common-draw-position-attlist common-draw-rel-size-attlist common-draw-caption-id-attlist presentation-shape-attlist draw-frame-attlist (draw-text-box | draw-image | draw-object | draw-object-ole | draw-applet | draw-floating-frame | draw-plugin)* office-event-listeners? draw-glue-point* draw-image-map? svg-title? svg-desc? (draw-contour-polygon | draw-contour-path)?) ;
table-iteration ::= table:iteration::((table:status::("enable" | "disable"))? (table:steps::positiveInteger)? (table:maximum-difference::double)?) ;
common-draw-caption-id-attlist ::= (draw:caption-id::IDREF)? ;
text-user-index-source ::= text:user-index-source::(text-user-index-source-attr text-index-title-template? text-user-index-entry-template* text-index-source-styles*) ;
text-index-entry-chapter ::= text:index-entry-chapter::((text:style-name::styleNameRef)? text-index-entry-chapter-attrs) ;
table-data-pilot-subtotals ::= table:data-pilot-subtotals::(table-data-pilot-subtotal*) ;
style-page-layout-properties ::= style:page-layout-properties::style-page-layout-properties-content ;
form-connection-resource ::= form:connection-resource::(xlink:href::anyURI) ;
draw-text-box ::= draw:text-box::(draw-text-box-attlist text-content*) ;
draw-image ::= draw:image::(draw-image-attlist common-draw-data-attlist | office-binary-data draw-text) ;
table-data-pilot-field-reference-attlist ::= table:field-name::string ;
 table-data-pilot-field-reference-attlist ::= (table:member-type::"named" table:member-name::string) | (table:member-type::("previous" | "next")) ;
 table-data-pilot-field-reference-attlist ::= table:type::("none" | "member-difference" | "member-percentage" | "member-percentage-difference" | "running-total" | "row-percentage" | "column-percentage" | "total-percentage" | "index") ;
common-break-attlist ::= (fo:break-before::("auto" | "column" | "page"))? (fo:break-after::("auto" | "column" | "page"))? ;
table-data-pilot-groups ::= table:data-pilot-groups::(table-data-pilot-groups-attlist table-data-pilot-group+) ;
chart-error-indicator-attlist ::= (chart:style-name::styleNameRef)? ;
number-hours ::= number:hours::number-hours-attlist ;
table-table-source-attlist ::= (table:mode::("copy-all" | "copy-results-only"))? ;
 table-table-source-attlist ::= (table:table-name::string)? ;
draw-layer ::= draw:layer::(draw-layer-attlist svg-title? svg-desc?) ;
common-text-align ::= (fo:text-align::("start" | "end" | "left" | "right" | "center" | "justify"))? ;
style-style-attlist ::= style:name::styleName ;
 style-style-attlist ::= (style:display-name::string)? ;
 style-style-attlist ::= (style:parent-style-name::styleNameRef)? ;
 style-style-attlist ::= (style:next-style-name::styleNameRef)? ;
 style-style-attlist ::= (style:list-style-name::(styleName | ε))? ;
 style-style-attlist ::= (style:master-page-name::styleNameRef)? ;
 style-style-attlist ::= (style:auto-update::boolean)? ;
 style-style-attlist ::= (style:data-style-name::styleNameRef)? ;
 style-style-attlist ::= (style:class::string)? ;
 style-style-attlist ::= (style:default-outline-level::positiveInteger)? ;
draw-image-attlist ::= (draw:filter-name::string)? ;
paragraph-attrs ::= (text:style-name::styleNameRef)? (text:class-names::styleNameRefs)? (text:cond-style-name::styleNameRef)? ;
 paragraph-attrs ::= text-id? ;
form-fixed-text-attlist ::= form-control-attlist for common-disabled-attlist label common-printable-attlist common-title-attlist ;
 form-fixed-text-attlist ::= (form:multi-line::boolean)? ;
draw-floating-frame-attlist ::= (draw:frame-name::string)? ;
presentation-decl ::= presentation:header-decl::(presentation-header-decl-attlist string()) ;
 presentation-decl ::= presentation:footer-decl::(presentation-footer-decl-attlist string()) ;
 presentation-decl ::= presentation:date-time-decl::(presentation-date-time-decl-attlist string()) ;
common-draw-size-attlist ::= (svg:width::length)? (svg:height::length)? ;
text-changed-region-content ::= text:insertion::office-change-info ;
 text-changed-region-content ::= text:deletion::(office-change-info text-content*) ;
 text-changed-region-content ::= text:format-change::office-change-info ;
table-table-template ::= table:table-template::(table-table-template-attlist table-first-row? table-last-row? table-first-column? table-last-column? table-body | (table-even-rows table-odd-rows) | (table-even-columns table-odd-columns)) ;
dr3d-extrude ::= dr3d:extrude::(common-draw-path-data-attlist common-draw-viewbox-attlist common-draw-id-attlist common-draw-z-index-attlist common-draw-layer-name-attlist common-draw-style-name-attlist common-dr3d-transform-attlist) ;
form-password-attlist ::= form-control-attlist common-disabled-attlist common-maxlength-attlist common-printable-attlist common-tab-attlist common-title-attlist common-value-attlist common-convert-empty-attlist ;
 form-password-attlist ::= (form:echo-char::character)? ;
common-style-direction-attlist ::= (style:direction::("ltr" | "ttb"))? ;
draw-regular-polygon-attlist ::= (draw:concave::"false") | (draw:concave::"true" draw-regular-polygon-sharpness-attlist) ;
 draw-regular-polygon-attlist ::= draw:corners::positiveInteger ;
text-sequence-ref-name ::= (text:ref-name::string)? ;
table-insertion ::= table:insertion::(table-insertion-attlist common-table-change-attlist office-change-info table-dependencies? table-deletions?) ;
table-label-ranges ::= table:label-ranges::(table-label-range*) ;
table-even-rows ::= table:even-rows::common-table-template-attlist ;
chart-categories ::= chart:categories::((table:cell-range-address::cellRangeAddress)?) ;
draw-page-attlist ::= (draw:name::string)? ;
 draw-page-attlist ::= (draw:style-name::styleNameRef)? ;
 draw-page-attlist ::= draw:master-page-name::styleNameRef ;
 draw-page-attlist ::= (presentation:presentation-page-layout-name::styleNameRef)? ;
 draw-page-attlist ::= (draw:id::ID)? ;
 draw-page-attlist ::= (draw:nav-order::IDREFS)? ;
table-database-ranges ::= table:database-ranges::(table-database-range*) ;
style-drawing-page-properties ::= style:drawing-page-properties::style-drawing-page-properties-content ;
config-config-item-map-indexed ::= config:config-item-map-indexed::(config-config-item-map-indexed-attlist config-config-item-map-entry+) ;
style-table-cell-properties ::= style:table-cell-properties::style-table-cell-properties-content ;
table-table-cell ::= table:table-cell::(table-table-cell-attlist table-table-cell-attlist-extra table-table-cell-content) ;
table-consolidation-attlist ::= table:function::("auto" | "average" | "count" | "countnums" | "max" | "min" | "product" | "stdev" | "stdevp" | "sum" | "var" | "varp" | string) ;
 table-consolidation-attlist ::= table:source-cell-range-addresses::cellRangeAddressList ;
 table-consolidation-attlist ::= table:target-cell-address::cellAddress ;
 table-consolidation-attlist ::= (table:use-labels::("none" | "row" | "column" | "both"))? ;
 table-consolidation-attlist ::= (table:link-to-source-data::boolean)? ;
style-tab-stops ::= (style:tab-stops::(style-tab-stop*))? ;
style-data-style-attlist ::= (style:display-name::string)? ;
dr3d-light-attlist ::= (dr3d:diffuse-color::color)? ;
 dr3d-light-attlist ::= dr3d:direction::vector3D ;
 dr3d-light-attlist ::= (dr3d:enabled::boolean)? ;
 dr3d-light-attlist ::= (dr3d:specular::boolean)? ;
style-drawing-page-properties-attlist ::= (presentation:transition-type::("manual" | "automatic" | "semi-automatic"))? ;
 style-drawing-page-properties-attlist ::= (presentation:transition-style::("none" | "fade-from-left" | "fade-from-top" | "fade-from-right" | "fade-from-bottom" | "fade-from-upperleft" | "fade-from-upperright" | "fade-from-lowerleft" | "fade-from-lowerright" | "move-from-left" | "move-from-top" | "move-from-right" | "move-from-bottom" | "move-from-upperleft" | "move-from-upperright" | "move-from-lowerleft" | "move-from-lowerright" | "uncover-to-left" | "uncover-to-top" | "uncover-to-right" | "uncover-to-bottom" | "uncover-to-upperleft" | "uncover-to-upperright" | "uncover-to-lowerleft" | "uncover-to-lowerright" | "fade-to-center" | "fade-from-center" | "vertical-stripes" | "horizontal-stripes" | "clockwise" | "counterclockwise" | "open-vertical" | "open-horizontal" | "close-vertical" | "close-horizontal" | "wavyline-from-left" | "wavyline-from-top" | "wavyline-from-right" | "wavyline-from-bottom" | "spiralin-left" | "spiralin-right" | "spiralout-left" | "spiralout-right" | "roll-from-top" | "roll-from-left" | "roll-from-right" | "roll-from-bottom" | "stretch-from-left" | "stretch-from-top" | "stretch-from-right" | "stretch-from-bottom" | "vertical-lines" | "horizontal-lines" | "dissolve" | "random" | "vertical-checkerboard" | "horizontal-checkerboard" | "interlocking-horizontal-left" | "interlocking-horizontal-right" | "interlocking-vertical-top" | "interlocking-vertical-bottom" | "fly-away" | "open" | "close" | "melt"))? ;
 style-drawing-page-properties-attlist ::= (presentation:transition-speed::presentationSpeeds)? ;
 style-drawing-page-properties-attlist ::= (smil:subtype::string)? ;
 style-drawing-page-properties-attlist ::= (smil:direction::("forward" | "reverse"))? ;
 style-drawing-page-properties-attlist ::= (smil:fadeColor::color)? ;
 style-drawing-page-properties-attlist ::= (presentation:duration::duration)? ;
 style-drawing-page-properties-attlist ::= (presentation:visibility::("visible" | "hidden"))? ;
 style-drawing-page-properties-attlist ::= (draw:background-size::("full" | "border"))? ;
 style-drawing-page-properties-attlist ::= (presentation:background-objects-visible::boolean)? ;
 style-drawing-page-properties-attlist ::= (presentation:background-visible::boolean)? ;
 style-drawing-page-properties-attlist ::= (presentation:display-header::boolean)? ;
 style-drawing-page-properties-attlist ::= (presentation:display-footer::boolean)? ;
 style-drawing-page-properties-attlist ::= (presentation:display-page-number::boolean)? ;
 style-drawing-page-properties-attlist ::= (presentation:display-date-time::boolean)? ;
 style-drawing-page-properties-attlist ::= (smil:type::string)? ;
table-data-pilot-layout-info ::= table:data-pilot-layout-info::table-data-pilot-layout-info-attlist ;
config-config-item-map-indexed-attlist ::= config:name::string ;
table-sort-groups-attlist ::= (table:data-type::("text" | "number" | "automatic" | string))? ;
 table-sort-groups-attlist ::= (table:order::("ascending" | "descending"))? ;
presentation-dim ::= presentation:dim::(presentation-dim-attlist presentation-sound?) ;
anim-animate-motion-attlist ::= (svg:path::pathData)? ;
 anim-animate-motion-attlist ::= (svg:origin::string)? ;
 anim-animate-motion-attlist ::= (smil:calcMode::("discrete" | "linear" | "paced" | "spline"))? ;
presentation-date-time-decl-attlist ::= presentation:name::string ;
 presentation-date-time-decl-attlist ::= presentation:source::("fixed" | "current-date") ;
 presentation-date-time-decl-attlist ::= (style:data-style-name::styleNameRef)? ;
text-template-name-attlist ::= (text:display::("full" | "path" | "name" | "name-and-extension" | "area" | "title"))? ;
draw-caption-attlist ::= (draw:caption-point-x::coordinate draw:caption-point-y::coordinate)? ;
 draw-caption-attlist ::= (draw:corner-radius::nonNegativeLength)? ;
form-button-attlist ::= form-control-attlist button-type common-disabled-attlist label image-data common-printable-attlist common-tab-attlist target-frame target-location common-title-attlist common-value-attlist common-form-relative-image-position-attlist ;
 form-button-attlist ::= (form:default-button::boolean)? ;
 form-button-attlist ::= (form:toggle::boolean)? ;
 form-button-attlist ::= (form:focus-on-click::boolean)? ;
 form-button-attlist ::= (form:xforms-submission::string)? ;
column-controls ::= form:text::(form-text-attlist common-form-control-content) ;
 column-controls ::= form:textarea::(form-textarea-attlist common-form-control-content text-p*) ;
 column-controls ::= form:formatted-text::(form-formatted-text-attlist common-form-control-content) ;
 column-controls ::= form:number::(form-number-attlist common-numeric-control-attlist common-form-control-content) ;
 column-controls ::= form:date::(form-date-attlist common-numeric-control-attlist common-form-control-content) ;
 column-controls ::= form:combobox::(form-combobox-attlist common-form-control-content form-item*) ;
 column-controls ::= form:listbox::(form-listbox-attlist common-form-control-content form-option*) ;
 column-controls ::= form:checkbox::(form-checkbox-attlist common-form-control-content) ;
chart-wall-attlist ::= (svg:width::length)? ;
 chart-wall-attlist ::= (chart:style-name::styleNameRef)? ;
text-index-title-template ::= text:index-title-template::((text:style-name::styleNameRef)? string()) ;
dr3d-rotate ::= dr3d:rotate::(common-draw-viewbox-attlist common-draw-path-data-attlist common-draw-z-index-attlist common-draw-id-attlist common-draw-layer-name-attlist common-draw-style-name-attlist common-dr3d-transform-attlist) ;
meta-date-string ::= meta:date-string::string ;
table-content-validations ::= table:content-validations::(table-content-validation+) ;
chart-series ::= chart:series::(chart-series-attlist chart-domain* chart-mean-value? chart-regression-curve? chart-error-indicator? chart-data-point*) ;
table-calculation-settings ::= table:calculation-settings::(table-calculation-setting-attlist table-null-date? table-iteration?) ;
common-field-display-value-none-attlist ::= (text:display::("value" | "none"))? ;
text-index-name ::= text:index-name::string ;
table-data-pilot-member-attlist ::= table:name::string ;
 table-data-pilot-member-attlist ::= (table:display::boolean)? ;
 table-data-pilot-member-attlist ::= (table:show-details::boolean)? ;
presentation-placeholder ::= presentation:placeholder::(presentation:object::presentation-classes svg:x::(coordinate | percent) svg:y::(coordinate | percent) svg:width::(length | percent) svg:height::(length | percent)) ;
style-map ::= style:map::style-map-attlist ;
number-number-attlist ::= (number:decimal-replacement::string())? ;
 number-number-attlist ::= (number:display-factor::double)? ;
text-index-source-style ::= text:index-source-style::(text:style-name::styleName) ;
common-field-description-attlist ::= (text:description::string())? ;
chart-series-attlist ::= (chart:values-cell-range-address::cellRangeAddress)? ;
 chart-series-attlist ::= (chart:label-cell-address::cellAddress)? ;
 chart-series-attlist ::= (chart:class::namespacedToken)? ;
 chart-series-attlist ::= (chart:attached-axis::string)? ;
 chart-series-attlist ::= (chart:style-name::styleNameRef)? ;
common-draw-transform-attlist ::= (draw:transform::string)? ;
common-shadow-attlist ::= (style:shadow::shadowType)? ;
common-num-format-attlist ::= (style:num-format::("1" | "i" | "I" | string | ε)) | (style:num-format::("a" | "A") style-num-letter-sync-attlist) | ε ;
text-page ::= text:page::text-page-attlist ;
common-data-field-attlist ::= (form:data-field::string)? ;
draw-regular-polygon-sharpness-attlist ::= draw:sharpness::percent ;
table-deletions ::= table:deletions::((table-cell-content-deletion | table-change-deletion)+) ;
text-list-level-style-attr ::= text:level::positiveInteger ;
table-data-pilot-sort-info ::= table:data-pilot-sort-info::table-data-pilot-sort-info-attlist ;
table-tracked-changes ::= table:tracked-changes::(table-tracked-changes-attlist (table-cell-content-change | table-insertion | table-deletion | table-movement)*) ;
table-database-source-sql-attlist ::= table:database-name::string ;
 table-database-source-sql-attlist ::= table:sql-statement::string ;
 table-database-source-sql-attlist ::= (table:parse-sql-statement::boolean)? ;
presentation-shape-attlist ::= (presentation:class::presentation-classes)? ;
 presentation-shape-attlist ::= (presentation:placeholder::boolean)? ;
 presentation-shape-attlist ::= (presentation:user-transformed::boolean)? ;
style-chart-properties ::= style:chart-properties::style-chart-properties-content ;
text-alphabetical-index ::= text:alphabetical-index::(sectionAttr text-alphabetical-index-source text-index-body) ;
office-change-info ::= office:change-info::(dc-creator dc-date text-p*) ;
paragraph-content ::= string() ;
 paragraph-content ::= text:s::((text:c::nonNegativeInteger)?) ;
 paragraph-content ::= text:tab::text-tab-attr ;
 paragraph-content ::= text:line-break::ε ;
 paragraph-content ::= text-soft-page-break ;
 paragraph-content ::= text:span::((text:style-name::styleNameRef)? (text:class-names::styleNameRefs)? paragraph-content*) ;
 paragraph-content ::= text:a::(text-a-attlist office-event-listeners? paragraph-content*) ;
 paragraph-content ::= (text:bookmark::(text:name::string)) | (text:bookmark-start::(text:name::string)) | (text:bookmark-end::(text:name::string)) ;
 paragraph-content ::= text:reference-mark::(text:name::string) ;
 paragraph-content ::= (text:reference-mark-start::(text:name::string)) | (text:reference-mark-end::(text:name::string)) ;
 paragraph-content ::= text:note::(text-note-class (text:id::string)? text:note-citation::((text:label::string)? string()) text:note-body::(text-content*)) ;
 paragraph-content ::= text:ruby::((text:style-name::styleNameRef)? text:ruby-base::paragraph-content text:ruby-text::((text:style-name::styleNameRef)? string())) ;
 paragraph-content ::= office-annotation ;
 paragraph-content ::= change-marks ;
 paragraph-content ::= shape | draw-a ;
 paragraph-content ::= text:date::(text-date-attlist string()) ;
 paragraph-content ::= text:time::(text-time-attlist string()) ;
 paragraph-content ::= text:page-number::(text-page-number-attlist string()) ;
 paragraph-content ::= text:page-continuation::(text-page-continuation-attlist string()) ;
 paragraph-content ::= text:sender-firstname::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-lastname::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-initials::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-title::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-position::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-email::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-phone-private::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-fax::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-company::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-phone-work::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-street::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-city::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-postal-code::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-country::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-state-or-province::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:author-name::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:author-initials::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:chapter::(text-chapter-attlist string()) ;
 paragraph-content ::= text:file-name::(text-file-name-attlist string()) ;
 paragraph-content ::= text:template-name::(text-template-name-attlist string()) ;
 paragraph-content ::= text:sheet-name::string() ;
 paragraph-content ::= text:variable-set::(common-field-name-attlist common-field-formula-attlist common-value-and-type-attlist common-field-display-value-none-attlist common-field-data-style-name-attlist string()) ;
 paragraph-content ::= text:variable-get::(common-field-name-attlist common-field-display-value-formula-attlist common-field-data-style-name-attlist string()) ;
 paragraph-content ::= text:variable-input::(common-field-name-attlist common-field-description-attlist common-value-type-attlist common-field-display-value-none-attlist common-field-data-style-name-attlist string()) ;
 paragraph-content ::= text:user-field-get::(common-field-name-attlist common-field-display-value-formula-none-attlist common-field-data-style-name-attlist string()) ;
 paragraph-content ::= text:user-field-input::(common-field-name-attlist common-field-description-attlist common-field-data-style-name-attlist string()) ;
 paragraph-content ::= text:sequence::(common-field-name-attlist common-field-formula-attlist common-field-num-format-attlist text-sequence-ref-name string()) ;
 paragraph-content ::= text:expression::(common-field-formula-attlist common-value-and-type-attlist? common-field-display-value-formula-attlist common-field-data-style-name-attlist string()) ;
 paragraph-content ::= text:text-input::(common-field-description-attlist string()) ;
 paragraph-content ::= text:initial-creator::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:creation-date::(common-field-fixed-attlist common-field-data-style-name-attlist (text:date-value::dateOrDateTime)? string()) ;
 paragraph-content ::= text:creation-time::(common-field-fixed-attlist common-field-data-style-name-attlist (text:time-value::timeOrDateTime)? string()) ;
 paragraph-content ::= text:description::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:user-defined::(common-field-fixed-attlist text:name::string common-field-data-style-name-attlist (office:value::double)? (office:date-value::dateOrDateTime)? (office:time-value::duration)? (office:boolean-value::boolean)? (office:string-value::string)? string()) ;
 paragraph-content ::= text:print-time::(common-field-fixed-attlist common-field-data-style-name-attlist (text:time-value::time)? string()) ;
 paragraph-content ::= text:print-date::(common-field-fixed-attlist common-field-data-style-name-attlist (text:date-value::date)? string()) ;
 paragraph-content ::= text:printed-by::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:title::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:subject::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:keywords::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:editing-cycles::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:editing-duration::(common-field-fixed-attlist common-field-data-style-name-attlist (text:duration::duration)? string()) ;
 paragraph-content ::= text:modification-time::(common-field-fixed-attlist common-field-data-style-name-attlist (text:time-value::time)? string()) ;
 paragraph-content ::= text:modification-date::(common-field-fixed-attlist common-field-data-style-name-attlist (text:date-value::date)? string()) ;
 paragraph-content ::= text:creator::(common-field-fixed-attlist string()) ;
 paragraph-content ::= (text:page-count::(common-field-num-format-attlist string())) | (text:paragraph-count::(common-field-num-format-attlist string())) | (text:word-count::(common-field-num-format-attlist string())) | (text:character-count::(common-field-num-format-attlist string())) | (text:table-count::(common-field-num-format-attlist string())) | (text:image-count::(common-field-num-format-attlist string())) | (text:object-count::(common-field-num-format-attlist string())) ;
 paragraph-content ::= text:database-display::(text-database-display-attlist string()) ;
 paragraph-content ::= text:database-next::text-database-next-attlist ;
 paragraph-content ::= text:database-row-select::text-database-row-select-attlist ;
 paragraph-content ::= text:database-row-number::(common-field-database-table common-field-num-format-attlist (text:value::nonNegativeInteger)? string()) ;
 paragraph-content ::= text:database-name::(common-field-database-table string()) ;
 paragraph-content ::= text:page-variable-set::(text-set-page-variable-attlist string()) ;
 paragraph-content ::= text:page-variable-get::(text-get-page-variable-attlist string()) ;
 paragraph-content ::= text:placeholder::(text-placeholder-attlist string()) ;
 paragraph-content ::= text:conditional-text::(text-conditional-text-attlist string()) ;
 paragraph-content ::= text:hidden-text::(text-hidden-text-attlist string()) ;
 paragraph-content ::= (text:reference-ref::(text-common-ref-content text-ref-content)) | (text:bookmark-ref::(text-common-ref-content text-ref-content)) ;
 paragraph-content ::= text:note-ref::(text-common-ref-content text-note-ref-content text-ref-content) ;
 paragraph-content ::= text:sequence-ref::(text-common-ref-content text-sequence-ref-content) ;
 paragraph-content ::= text:script::((xlink:href::anyURI (xlink:type::"simple")?) | string() (script:language::string)?) ;
 paragraph-content ::= text:execute-macro::((text:name::string)? office-event-listeners? string()) ;
 paragraph-content ::= text:hidden-paragraph::(text-hidden-paragraph-attlist string()) ;
 paragraph-content ::= text:dde-connection::(text:connection-name::string string()) ;
 paragraph-content ::= text:measure::(text:kind::("value" | "unit" | "gap") string()) ;
 paragraph-content ::= text:table-formula::(common-field-formula-attlist common-field-display-value-formula-attlist common-field-data-style-name-attlist string()) ;
 paragraph-content ::= text:toc-mark-start::text-toc-mark-start-attrs ;
 paragraph-content ::= text:toc-mark-end::text-id ;
 paragraph-content ::= text:toc-mark::(text:string-value::string text-outline-level) ;
 paragraph-content ::= text:user-index-mark-start::(text-id text-outline-level text-index-name) ;
 paragraph-content ::= text:user-index-mark-end::(text-id text-outline-level) ;
 paragraph-content ::= text:user-index-mark::(text:string-value::string text-outline-level text-index-name) ;
 paragraph-content ::= text:alphabetical-index-mark-start::(text-id text-alphabetical-index-mark-attrs) ;
 paragraph-content ::= text:alphabetical-index-mark-end::text-id ;
 paragraph-content ::= text:alphabetical-index-mark::(text:string-value::string text-alphabetical-index-mark-attrs) ;
 paragraph-content ::= text:bibliography-mark::(text:bibliography-type::text-bibliography-types ((text:identifier::string) | (text:address::string) | (text:annote::string) | (text:author::string) | (text:booktitle::string) | (text:chapter::string) | (text:edition::string) | (text:editor::string) | (text:howpublished::string) | (text:institution::string) | (text:journal::string) | (text:month::string) | (text:note::string) | (text:number::string) | (text:organizations::string) | (text:pages::string) | (text:publisher::string) | (text:school::string) | (text:series::string) | (text:title::string) | (text:report-type::string) | (text:volume::string) | (text:year::string) | (text:url::string) | (text:custom1::string) | (text:custom2::string) | (text:custom3::string) | (text:custom4::string) | (text:custom5::string) | (text:isbn::string) | (text:issn::string))* string()) ;
 paragraph-content ::= presentation:header::ε ;
 paragraph-content ::= presentation:footer::ε ;
 paragraph-content ::= presentation:date-time::ε ;
config-config-item-map-entry-attlist ::= (config:name::string)? ;
number-day ::= number:day::(number-day-attlist common-calendar-attlist) ;
common-endsync-timing-attlist ::= (smil:endsync::("first" | "last" | "all" | "media"))? ;
change-mark-attr ::= text:change-id::IDREF ;
common-vertical-pos-attlist ::= (style:vertical-pos::("top" | "middle" | "bottom" | "from-top" | "below"))? (svg:y::coordinate)? ;
style-chart-properties-attlist ::= (chart:scale-text::boolean)? ;
 style-chart-properties-attlist ::= (chart:three-dimensional::boolean)? ;
 style-chart-properties-attlist ::= (chart:deep::boolean)? ;
 style-chart-properties-attlist ::= (chart:symbol-type::"none") | (chart:symbol-type::"automatic") | (chart:symbol-type::"named-symbol" chart:symbol-name::("square" | "diamond" | "arrow-down" | "arrow-up" | "arrow-right" | "arrow-left" | "bow-tie" | "hourglass" | "circle" | "star" | "x" | "plus" | "asterisk" | "horizontal-bar" | "vertical-bar")) | (chart:symbol-type::"image" chart:symbol-image::(xlink:href::anyURI)) | ε ;
 style-chart-properties-attlist ::= (chart:symbol-width::nonNegativeLength)? (chart:symbol-height::nonNegativeLength)? ;
 style-chart-properties-attlist ::= (chart:vertical::boolean)? ;
 style-chart-properties-attlist ::= (chart:connect-bars::boolean)? ;
 style-chart-properties-attlist ::= (chart:gap-width::integer)? (chart:overlap::integer)? ;
 style-chart-properties-attlist ::= (chart:japanese-candle-stick::boolean)? ;
 style-chart-properties-attlist ::= (chart:interpolation::("none" | "cubic-spline" | "b-spline"))? (chart:spline-order::positiveInteger)? (chart:spline-resolution::positiveInteger)? ;
 style-chart-properties-attlist ::= (chart:pie-offset::nonNegativeInteger)? ;
 style-chart-properties-attlist ::= (chart:lines::boolean)? ;
 style-chart-properties-attlist ::= (chart:solid-type::("cuboid" | "cylinder" | "cone" | "pyramid"))? ;
 style-chart-properties-attlist ::= (chart:stacked::boolean)? (chart:percentage::boolean)? ;
 style-chart-properties-attlist ::= (chart:link-data-style-to-source::boolean)? ;
 style-chart-properties-attlist ::= (chart:visible::boolean)? ;
 style-chart-properties-attlist ::= (chart:logarithmic::boolean)? ;
 style-chart-properties-attlist ::= (chart:maximum::double)? (chart:minimum::double)? (chart:origin::double)? (chart:interval-major::double)? (chart:interval-minor-divisor::positiveInteger)? ;
 style-chart-properties-attlist ::= (chart:tick-marks-major-inner::boolean)? (chart:tick-marks-major-outer::boolean)? (chart:tick-marks-minor-inner::boolean)? (chart:tick-marks-minor-outer::boolean)? ;
 style-chart-properties-attlist ::= (chart:display-label::boolean)? (chart:text-overlap::boolean)? (text:line-break::boolean)? (chart:label-arrangement::("side-by-side" | "stagger-even" | "stagger-odd"))? ;
 style-chart-properties-attlist ::= common-style-direction-attlist ;
 style-chart-properties-attlist ::= common-rotation-angle-attlist ;
 style-chart-properties-attlist ::= (chart:data-label-number::("none" | "value" | "percentage"))? ;
 style-chart-properties-attlist ::= (chart:data-label-text::boolean)? ;
 style-chart-properties-attlist ::= (chart:data-label-symbol::boolean)? ;
 style-chart-properties-attlist ::= (chart:mean-value::boolean)? ;
 style-chart-properties-attlist ::= (chart:error-category::("none" | "variance" | "standard-deviation" | "percentage" | "error-margin" | "constant"))? ;
 style-chart-properties-attlist ::= (chart:error-percentage::double)? ;
 style-chart-properties-attlist ::= (chart:error-margin::double)? ;
 style-chart-properties-attlist ::= (chart:error-lower-limit::double)? (chart:error-upper-limit::double)? ;
 style-chart-properties-attlist ::= (chart:error-upper-indicator::boolean)? (chart:error-lower-indicator::boolean)? ;
 style-chart-properties-attlist ::= (chart:series-source::("columns" | "rows"))? ;
 style-chart-properties-attlist ::= (chart:regression-type::("none" | "linear" | "logarithmic" | "exponential" | "power"))? ;
text-table-index-entry-template ::= text:table-index-entry-template::text-illustration-index-entry-content ;
text-linenumbering-configuration ::= text:linenumbering-configuration::(text-linenumbering-configuration-attlist text-linenumbering-separator?) ;
draw-path ::= draw:path::(common-draw-path-data-attlist common-draw-position-attlist common-draw-size-attlist common-draw-viewbox-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text) ;
number-embedded-text ::= number:embedded-text::(number-embedded-text-attlist string()) ;
style-handout-master ::= style:handout-master::(common-presentation-header-footer-attlist style-handout-master-attlist shape*) ;
presentation-show-text ::= presentation:show-text::(common-presentation-effect-attlist presentation-sound?) ;
draw-area-circle ::= draw:area-circle::(common-draw-area-attlist svg:cx::coordinate svg:cy::coordinate svg:r::length svg-title? svg-desc? office-event-listeners?) ;
text-user-index-source-attr ::= text-index-scope-attr text-relative-tab-stop-position-attr text:index-name::string ;
 text-user-index-source-attr ::= (text:use-index-marks::boolean)? (text:use-graphics::boolean)? (text:use-tables::boolean)? (text:use-floating-frames::boolean)? (text:use-objects::boolean)? ;
 text-user-index-source-attr ::= (text:copy-outline-levels::boolean)? ;
draw-connector ::= draw:connector::(draw-connector-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text) ;
table-highlighted-range ::= table:highlighted-range::(table-highlighted-range-attlist | table-highlighted-range-attlist-invalid) ;
style-column-sep ::= style:column-sep::style-column-sep-attlist ;
text-linenumbering-configuration-attlist ::= (text:number-lines::boolean)? ;
 text-linenumbering-configuration-attlist ::= common-num-format-attlist? ;
 text-linenumbering-configuration-attlist ::= (text:style-name::styleNameRef)? ;
 text-linenumbering-configuration-attlist ::= (text:increment::nonNegativeInteger)? ;
 text-linenumbering-configuration-attlist ::= (text:number-position::("left" | "right" | "inner" | "outer"))? ;
 text-linenumbering-configuration-attlist ::= (text:offset::nonNegativeLength)? ;
 text-linenumbering-configuration-attlist ::= (text:count-empty-lines::boolean)? ;
 text-linenumbering-configuration-attlist ::= (text:count-in-text-boxes::boolean)? ;
 text-linenumbering-configuration-attlist ::= (text:restart-on-page::boolean)? ;
draw-stroke-dash ::= draw:stroke-dash::draw-stroke-dash-attlist ;
text-object-index-entry-template ::= text:object-index-entry-template::text-illustration-index-entry-content ;
list-source-type ::= (form:list-source-type::("table" | "query" | "sql" | "sql-pass-through" | "value-list" | "table-fields"))? ;
number-month ::= number:month::(number-month-attlist common-calendar-attlist) ;
chart-data-point ::= chart:data-point::chart-data-point-attlist ;
office-scripts ::= (office:scripts::(office-script* office-event-listeners?))? ;
common-vertical-margin-attlist ::= (fo:margin-top::(nonNegativeLength | percent))? (fo:margin-bottom::(nonNegativeLength | percent))? ;
table-data-pilot-table ::= table:data-pilot-table::(table-data-pilot-table-attlist (table-database-source-sql | table-database-source-table | table-database-source-query | table-source-service | table-source-cell-range)? table-data-pilot-field+) ;
label ::= (form:label::string)? ;
style-header-footer-properties-attlist ::= (svg:height::length)? (fo:min-height::length)? ;
 style-header-footer-properties-attlist ::= common-horizontal-margin-attlist common-vertical-margin-attlist common-margin-attlist ;
 style-header-footer-properties-attlist ::= common-border-attlist ;
 style-header-footer-properties-attlist ::= common-border-line-width-attlist ;
 style-header-footer-properties-attlist ::= common-padding-attlist ;
 style-header-footer-properties-attlist ::= common-background-color-attlist ;
 style-header-footer-properties-attlist ::= common-shadow-attlist ;
 style-header-footer-properties-attlist ::= (style:dynamic-spacing::boolean)? ;
style-column ::= style:column::style-column-attlist ;
style-font-face-attlist ::= (svg:font-family::string)? (svg:font-style::fontStyle)? (svg:font-variant::fontVariant)? (svg:font-weight::fontWeight)? (svg:font-stretch::("normal" | "ultra-condensed" | "extra-condensed" | "condensed" | "semi-condensed" | "semi-expanded" | "expanded" | "extra-expanded" | "ultra-expanded"))? (svg:font-size::positiveLength)? (svg:unicode-range::string())? (svg:units-per-em::integer)? (svg:panose-1::string())? (svg:stemv::integer)? (svg:stemh::integer)? (svg:slope::integer)? (svg:cap-height::integer)? (svg:x-height::integer)? (svg:accent-height::integer)? (svg:ascent::integer)? (svg:descent::integer)? (svg:widths::string())? (svg:bbox::string())? (svg:ideographic::integer)? (svg:alphabetic::integer)? (svg:mathematical::integer)? (svg:hanging::integer)? (svg:v-ideographic::integer)? (svg:v-alphabetic::integer)? (svg:v-mathematical::integer)? (svg:v-hanging::integer)? (svg:underline-position::integer)? (svg:underline-thickness::integer)? (svg:strikethrough-position::integer)? (svg:strikethrough-thickness::integer)? (svg:overline-position::integer)? (svg:overline-thickness::integer)? ;
 style-font-face-attlist ::= style:name::string ;
 style-font-face-attlist ::= (style:font-adornments::string)? ;
 style-font-face-attlist ::= (style:font-family-generic::fontFamilyGeneric)? ;
 style-font-face-attlist ::= (style:font-pitch::fontPitch)? ;
 style-font-face-attlist ::= (style:font-charset::textEncoding)? ;
style-num-letter-sync-attlist ::= (style:num-letter-sync::boolean)? ;
common-field-fixed-attlist ::= (text:fixed::boolean)? ;
text-changed-region-attr ::= text:id::ID ;
draw-stroke-dash-attlist ::= draw:name::styleName ;
 draw-stroke-dash-attlist ::= (draw:display-name::string)? ;
 draw-stroke-dash-attlist ::= (draw:style::("rect" | "round"))? ;
 draw-stroke-dash-attlist ::= (draw:dots1::integer)? (draw:dots1-length::length)? (draw:dots2::integer)? (draw:dots2-length::length)? ;
 draw-stroke-dash-attlist ::= (draw:distance::length)? ;
table-last-column ::= table:last-column::common-table-template-attlist ;
table-cell-content-deletion ::= table:cell-content-deletion::((table:id::string)? table-cell-address? table-change-track-table-cell?) ;
office-script-attlist ::= script:language::string ;
config-config-item-map-named ::= config:config-item-map-named::(config-config-item-map-named-attlist config-config-item-map-entry+) ;
number-seconds-attlist ::= (number:style::("short" | "long"))? ;
 number-seconds-attlist ::= (number:decimal-places::integer)? ;
table-deletion ::= table:deletion::(table-deletion-attlist common-table-change-attlist office-change-info table-dependencies? table-deletions? table-cut-offs?) ;
text-index-entry-chapter-attrs ::= (text:display::("name" | "number" | "number-and-name"))? ;
style-ruby-properties ::= style:ruby-properties::style-ruby-properties-content ;
common-contour-attlist ::= draw:recreate-on-edit::boolean ;
change-marks ::= (text:change::change-mark-attr) | (text:change-start::change-mark-attr) | (text:change-end::change-mark-attr) ;
table-database-source-query ::= table:database-source-table::table-database-source-table-attlist ;
common-field-data-style-name-attlist ::= (style:data-style-name::styleNameRef)? ;
style-column-attlist ::= style:rel-width::relativeLength ;
 style-column-attlist ::= (fo:start-indent::length)? ;
 style-column-attlist ::= (fo:end-indent::length)? ;
 style-column-attlist ::= (fo:space-before::length)? ;
 style-column-attlist ::= (fo:space-after::length)? ;
common-fill-timing-attlist ::= (smil:fill::("remove" | "freeze" | "hold" | "auto" | "default" | "transition"))? ;
table-source-service ::= table:source-service::table-source-service-attlist ;
office-annotation ::= office:annotation::(office-annotation-attlist draw-caption-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist dc-creator? dc-date? meta-date-string? (text-p | text-list)*) ;
config-config-item-map-named-attlist ::= config:name::string ;
style-footer-left ::= style:footer-left::(common-style-header-footer-attlist header-footer-content) ;
common-anim-target-attlist ::= (smil:targetElement::IDREF)? ;
 common-anim-target-attlist ::= (anim:sub-item::string)? ;
draw-line ::= draw:line::(draw-line-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text) ;
style-ruby-properties-attlist ::= (style:ruby-position::("above" | "below"))? ;
 style-ruby-properties-attlist ::= (style:ruby-align::("left" | "center" | "right" | "distribute-letter" | "distribute-space"))? ;
table-sort-by-attlist ::= table:field-number::nonNegativeInteger ;
 table-sort-by-attlist ::= (table:data-type::("text" | "number" | "automatic" | string))? ;
 table-sort-by-attlist ::= (table:order::("ascending" | "descending"))? ;
draw-page-thumbnail ::= draw:page-thumbnail::(draw-page-thumbnail-attlist common-draw-position-attlist common-draw-size-attlist presentation-shape-attlist common-draw-shape-with-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc?) ;
table-odd-rows ::= table:odd-rows::common-table-template-attlist ;
style-graphic-properties ::= style:graphic-properties::style-graphic-properties-content ;
table-source-service-attlist ::= table:name::string ;
 table-source-service-attlist ::= table:source-name::string ;
 table-source-service-attlist ::= table:object-name::string ;
 table-source-service-attlist ::= (table:user-name::string)? ;
 table-source-service-attlist ::= (table:password::string)? ;
common-calendar-attlist ::= (number:calendar::("gregorian" | "gengou" | "ROC" | "hanja_yoil" | "hanja" | "hijri" | "jewish" | "buddhist" | string))? ;
draw-handle ::= draw:handle::draw-handle-attlist ;
table-cell-content-change ::= table:cell-content-change::(common-table-change-attlist table-cell-address office-change-info table-dependencies? table-deletions? table-previous) ;
table-subtotal-field ::= table:subtotal-field::table-subtotal-field-attlist ;
chart-legend-attlist ::= (chart:legend-position::("start" | "end" | "top" | "bottom") (chart:legend-align::("start" | "center" | "end"))?) | (chart:legend-position::("top-start" | "bottom-start" | "top-end" | "bottom-end")) | ε ;
 chart-legend-attlist ::= common-draw-position-attlist ;
 chart-legend-attlist ::= (style:legend-expansion::("wide" | "high" | "balanced")) | (style:legend-expansion::"custom" style:legend-expansion-aspect-ratio::double) | ε ;
 chart-legend-attlist ::= (chart:style-name::styleNameRef)? ;
table-subtotal-rules ::= table:subtotal-rules::(table-subtotal-rules-attlist table-sort-groups? table-subtotal-rule*) ;
chart-plot-area ::= chart:plot-area::(chart-plot-area-attlist dr3d-light* chart-axis* chart-series* chart-stock-gain-marker? chart-stock-loss-marker? chart-stock-range-line? chart-wall? chart-floor?) ;
draw-measure-attlist ::= svg:x1::coordinate svg:y1::coordinate ;
 draw-measure-attlist ::= svg:x2::coordinate svg:y2::coordinate ;
draw-param ::= draw:param::draw-param-attlist ;
draw-object-ole ::= draw:object-ole::(draw-object-ole-attlist common-draw-data-attlist | office-binary-data) ;
number-era-attlist ::= (number:style::("short" | "long"))? ;
number-percentage-style ::= number:percentage-style::(common-data-style-attlist style-text-properties? number-text? number-and-text? style-map*) ;
office-body-content ::= office:text::(office-text-attlist office-text-content-prelude office-text-content-main* office-text-content-epilogue) ;
 office-body-content ::= office:drawing::(office-drawing-attlist office-drawing-content-prelude office-drawing-content-main office-drawing-content-epilogue) ;
 office-body-content ::= office:presentation::(office-presentation-attlist office-presentation-content-prelude office-presentation-content-main office-presentation-content-epilogue) ;
 office-body-content ::= office:spreadsheet::(office-spreadsheet-attlist office-spreadsheet-content-prelude office-spreadsheet-content-main office-spreadsheet-content-epilogue) ;
 office-body-content ::= office:chart::(office-chart-attlist office-chart-content-prelude office-chart-content-main office-chart-content-epilogue) ;
 office-body-content ::= office:image::(office-image-attlist office-image-content-prelude office-image-content-main office-image-content-epilogue) ;
draw-contour-polygon ::= draw:contour-polygon::(common-contour-attlist common-draw-size-attlist common-draw-viewbox-attlist common-draw-points-attlist) ;
chart-plot-area-attlist ::= common-draw-position-attlist common-draw-size-attlist ;
 chart-plot-area-attlist ::= (chart:style-name::styleNameRef)? ;
 chart-plot-area-attlist ::= (table:cell-range-address::cellRangeAddress)? ;
 chart-plot-area-attlist ::= (chart:data-source-has-labels::("none" | "row" | "column" | "both"))? ;
 chart-plot-area-attlist ::= dr3d-scene-attlist common-dr3d-transform-attlist ;
form-formatted-text-attlist ::= form-control-attlist common-current-value-attlist common-disabled-attlist common-maxlength-attlist common-printable-attlist common-readonly-attlist common-tab-attlist common-title-attlist common-value-attlist common-convert-empty-attlist common-data-field-attlist ;
 form-formatted-text-attlist ::= (form:max-value::string)? ;
 form-formatted-text-attlist ::= (form:min-value::string)? ;
 form-formatted-text-attlist ::= (form:validation::boolean)? ;
chart-mean-value ::= chart:mean-value::chart-mean-value-attlist ;
style-section-properties ::= style:section-properties::style-section-properties-content ;
table-source-cell-range-attlist ::= table:cell-range-address::cellRangeAddress ;
controls ::= column-controls ;
 controls ::= form:password::(form-password-attlist common-form-control-content) ;
 controls ::= form:file::(form-file-attlist common-form-control-content) ;
 controls ::= form:time::(form-time-attlist common-numeric-control-attlist common-form-control-content) ;
 controls ::= form:fixed-text::(form-fixed-text-attlist common-form-control-content) ;
 controls ::= form:button::(form-button-attlist common-form-control-content) ;
 controls ::= form:image::(form-image-attlist common-form-control-content) ;
 controls ::= form:radio::(form-radio-attlist common-form-control-content) ;
 controls ::= form:frame::(form-frame-attlist common-form-control-content) ;
 controls ::= form:image-frame::(form-image-frame-attlist common-form-control-content) ;
 controls ::= form:hidden::(form-hidden-attlist common-form-control-content) ;
 controls ::= form:grid::(form-grid-attlist common-form-control-content form-column*) ;
 controls ::= form:value-range::(form-value-range-attlist common-form-control-content) ;
 controls ::= form:generic-control::(form-generic-control-attlist common-form-control-content) ;
text-illustration-index ::= text:illustration-index::(sectionAttr text-illustration-index-source text-index-body) ;
office-dde-source ::= office:dde-source::(office-dde-source-attlist common-dde-connection-decl-attlist) ;
table-scenario ::= table:scenario::table-scenario-attlist ;
common-table-template-attlist ::= text:style-name::styleNameRef text:paragraph-style-name::(styleNameRef?) ;
math-math ::= math:math::mathMarkup ;
common-current-value-attlist ::= (form:current-value::string)? ;
table-content-validation ::= table:content-validation::(table-validation-attlist table-help-message? (table-error-message | (table-error-macro office-event-listeners?))?) ;
table-data-pilot-level ::= table:data-pilot-level::(table-data-pilot-level-attlist table-data-pilot-subtotals? table-data-pilot-members? table-data-pilot-display-info? table-data-pilot-sort-info? table-data-pilot-layout-info?) ;
table-dependency ::= table:dependency::(table:id::string) ;
draw-equation-attlist ::= (draw:name::string)? ;
 draw-equation-attlist ::= (draw:formula::string)? ;
text-conditional-text-attlist ::= text:condition::formula ;
 text-conditional-text-attlist ::= text:string-value-if-true::string ;
 text-conditional-text-attlist ::= text:string-value-if-false::string ;
 text-conditional-text-attlist ::= (text:current-value::boolean)? ;
style-table-column-properties-attlist ::= (style:column-width::positiveLength)? (style:rel-column-width::relativeLength)? ;
 style-table-column-properties-attlist ::= (style:use-optimal-column-width::boolean)? ;
 style-table-column-properties-attlist ::= common-break-attlist ;
text-list-item-attr ::= (text:start-value::nonNegativeInteger)? ;
selected ::= (form:selected::boolean)? ;
common-draw-circle-ellipse-attlist ::= (svg:cx::coordinate svg:cy::coordinate)? ;
 common-draw-circle-ellipse-attlist ::= (draw:kind::("full" | "section" | "cut" | "arc"))? ;
 common-draw-circle-ellipse-attlist ::= (draw:start-angle::double)? ;
 common-draw-circle-ellipse-attlist ::= (draw:end-angle::double)? ;
text-page-number-attlist ::= common-field-num-format-attlist common-field-fixed-attlist ;
 text-page-number-attlist ::= (text:page-adjust::integer)? ;
 text-page-number-attlist ::= (text:select-page::("previous" | "current" | "next"))? ;
table-table-source ::= table:table-source::(table-table-source-attlist table-linked-source-attlist) ;
table-label-range-attlist ::= table:label-cell-range-address::cellRangeAddress ;
 table-label-range-attlist ::= table:data-cell-range-address::cellRangeAddress ;
 table-label-range-attlist ::= table:orientation::("column" | "row") ;
text-sequence-decl ::= text:sequence-decl::text-sequence-decl-attlist ;
style-style ::= style:style::(style-style-attlist style-style-content style-map*) ;
draw-enhanced-geometry-attlist ::= (draw:type::custom-shape-type)? ;
 draw-enhanced-geometry-attlist ::= (svg:viewBox::(integer integer integer integer))? ;
 draw-enhanced-geometry-attlist ::= (draw:mirror-vertical::boolean)? (draw:mirror-horizontal::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:text-rotate-angle::double)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-allowed::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:text-path-allowed::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:concentric-gradient-fill-allowed::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-brightness::percent)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-depth::(length double))? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-diffusion::percent)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-number-of-line-segments::integer)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-light-face::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-first-light-harsh::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-second-light-harsh::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-first-light-level::percent)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-second-light-level::percent)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-first-light-direction::vector3D)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-second-light-direction::vector3D)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-metal::boolean)? ;
 draw-enhanced-geometry-attlist ::= (dr3d:shade-mode::("flat" | "phong" | "gouraud" | "draft"))? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-rotation-angle::(double double))? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-rotation-center::vector3D)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-shininess::percent)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-skew::(double double))? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-specularity::percent)? ;
 draw-enhanced-geometry-attlist ::= (dr3d:projection::("parallel" | "perspective"))? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-viewpoint::point3D)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-origin::(double double))? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-color::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:enhanced-path::string)? ;
 draw-enhanced-geometry-attlist ::= (draw:path-stretchpoint-x::double)? (draw:path-stretchpoint-y::double)? ;
 draw-enhanced-geometry-attlist ::= (draw:text-areas::string)? ;
 draw-enhanced-geometry-attlist ::= (draw:glue-points::string)? ;
 draw-enhanced-geometry-attlist ::= (draw:glue-point-type::("none" | "segments" | "rectangle"))? ;
 draw-enhanced-geometry-attlist ::= (draw:glue-point-leaving-directions::string())? ;
 draw-enhanced-geometry-attlist ::= (draw:text-path::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:text-path-mode::("normal" | "path" | "shape"))? ;
 draw-enhanced-geometry-attlist ::= (draw:text-path-scale::("path" | "shape"))? ;
 draw-enhanced-geometry-attlist ::= (draw:text-path-same-letter-heights::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:modifiers::string)? ;
common-field-name-attlist ::= text:name::variableName ;
style-presentation-page-layout ::= style:presentation-page-layout::(style:name::styleName (style:display-name::string)? presentation-placeholder*) ;
text-index-entry-page-number ::= text:index-entry-page-number::((text:style-name::styleNameRef)?) ;
presentation-sound-attlist ::= (presentation:play-full::boolean)? ;
text-alphabetical-index-auto-mark-file ::= text:alphabetical-index-auto-mark-file::(xlink:href::anyURI (xlink:type::"simple")?) ;
draw-gradient-attlist ::= (draw:start-color::color)? (draw:end-color::color)? ;
 draw-gradient-attlist ::= (draw:start-intensity::percent)? (draw:end-intensity::percent)? ;
style-background-image-attlist ::= (style:repeat::("no-repeat" | "repeat" | "stretch"))? ;
 style-background-image-attlist ::= (style:position::("left" | "center" | "right" | "top" | "bottom" | (horiBackPos vertBackPos) | (vertBackPos horiBackPos)))? ;
 style-background-image-attlist ::= (style:filter-name::string)? ;
 style-background-image-attlist ::= (draw:opacity::percent)? ;
svg-font-face-src ::= svg:font-face-src::((svg-font-face-uri | svg-font-face-name)+) ;
text-sequence-decl-attlist ::= common-field-name-attlist ;
 text-sequence-decl-attlist ::= text:display-outline-level::nonNegativeInteger ;
 text-sequence-decl-attlist ::= (text:separation-character::character)? ;
svg-font-face-name ::= svg:font-face-name::((svg:name::string())?) ;
bound-column ::= (form:bound-column::string)? ;
style-drop-cap-attlist ::= (style:length::("word" | positiveInteger))? ;
 style-drop-cap-attlist ::= (style:lines::positiveInteger)? ;
 style-drop-cap-attlist ::= (style:distance::length)? ;
 style-drop-cap-attlist ::= (style:style-name::styleNameRef)? ;
text-table-of-content ::= text:table-of-content::(sectionAttr text-table-of-content-source text-index-body) ;
anim-command-attlist ::= anim:command::string ;
table-data-pilot-members ::= table:data-pilot-members::(table-data-pilot-member*) ;
text-tracked-changes ::= (text:tracked-changes::(text-tracked-changes-attr text-changed-region*))? ;
text-index-entry-link-end ::= text:index-entry-link-end::((text:style-name::styleNameRef)?) ;
number-hours-attlist ::= (number:style::("short" | "long"))? ;
form-item ::= form:item::(form-item-attlist string()) ;
draw-hatch ::= draw:hatch::draw-hatch-attlist ;
sectionAttr ::= (text:style-name::styleNameRef)? ;
 sectionAttr ::= text:name::string ;
 sectionAttr ::= (text:protected::boolean)? ;
 sectionAttr ::= (text:protection-key::string)? ;
office-meta ::= (office:meta::office-meta-content)? ;
style-table-row-properties-attlist ::= (style:row-height::positiveLength)? (style:min-row-height::nonNegativeLength)? ;
 style-table-row-properties-attlist ::= (style:use-optimal-row-height::boolean)? ;
 style-table-row-properties-attlist ::= common-background-color-attlist ;
 style-table-row-properties-attlist ::= common-break-attlist ;
 style-table-row-properties-attlist ::= (fo:keep-together::("auto" | "always"))? ;
chart-regression-curve ::= chart:regression-curve::chart-regression-curve-attlist ;
common-auto-reorder-attlist ::= (number:automatic-order::boolean)? ;
table-consolidation ::= table:consolidation::table-consolidation-attlist ;
text-bibliography-configuration ::= text:bibliography-configuration::(text-bibliography-configuration-attlist text-sort-key*) ;
draw-circle-attlist ::= (svg:r::length)? ;
chart-footer ::= chart:footer::(chart-title-attlist text-p?) ;
table-subtotal-rule ::= table:subtotal-rule::(table-subtotal-rule-attlist table-subtotal-field*) ;
common-stock-marker-attlist ::= (chart:style-name::styleNameRef)? ;
chart-regression-curve-attlist ::= (chart:style-name::styleNameRef)? ;
common-value-and-type-attlist ::= (office:value-type::"float" office:value::double) | (office:value-type::"percentage" office:value::double) | (office:value-type::"currency" office:value::double (office:currency::string)?) | (office:value-type::"date" office:date-value::dateOrDateTime) | (office:value-type::"time" office:time-value::duration) | (office:value-type::"boolean" office:boolean-value::boolean) | (office:value-type::"string" (office:string-value::string)?) ;
draw-caption ::= draw:caption::(draw-caption-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text) ;
text-index-body ::= text:index-body::(index-content-main*) ;
common-decimal-places-attlist ::= (number:decimal-places::integer)? ;
number-minutes ::= number:minutes::number-minutes-attlist ;
chart-wall ::= chart:wall::chart-wall-attlist ;
text-index-entry-bibliography ::= text:index-entry-bibliography::text-index-entry-bibliography-attrs ;
table-subtotal-rule-attlist ::= table:group-by-field-number::nonNegativeInteger ;
table-filter ::= table:filter::(table-filter-attlist table-filter-condition | table-filter-and | table-filter-or) ;
form-listbox-attlist ::= form-control-attlist common-disabled-attlist dropdown common-printable-attlist size common-tab-attlist common-title-attlist bound-column common-data-field-attlist list-source list-source-type ;
 form-listbox-attlist ::= (form:multiple::boolean)? ;
 form-listbox-attlist ::= (form:xforms-list-source::string)? ;
style-table-cell-properties-attlist ::= (style:vertical-align::("top" | "middle" | "bottom" | "automatic"))? ;
 style-table-cell-properties-attlist ::= (style:text-align-source::("fix" | "value-type"))? ;
 style-table-cell-properties-attlist ::= common-style-direction-attlist ;
 style-table-cell-properties-attlist ::= (style:glyph-orientation-vertical::("auto" | "0"))? ;
 style-table-cell-properties-attlist ::= common-shadow-attlist ;
 style-table-cell-properties-attlist ::= common-background-color-attlist ;
 style-table-cell-properties-attlist ::= common-border-attlist ;
 style-table-cell-properties-attlist ::= (style:diagonal-tl-br::string)? (style:diagonal-tl-br-widths::borderWidths)? (style:diagonal-bl-tr::string)? (style:diagonal-bl-tr-widths::borderWidths)? ;
 style-table-cell-properties-attlist ::= common-border-line-width-attlist ;
 style-table-cell-properties-attlist ::= common-padding-attlist ;
 style-table-cell-properties-attlist ::= (fo:wrap-option::("no-wrap" | "wrap"))? ;
 style-table-cell-properties-attlist ::= common-rotation-angle-attlist ;
 style-table-cell-properties-attlist ::= (style:rotation-align::("none" | "bottom" | "top" | "center"))? ;
 style-table-cell-properties-attlist ::= (style:cell-protect::("none" | "hidden-and-protected" | (("protected" | "formula-hidden")+)))? ;
 style-table-cell-properties-attlist ::= (style:print-content::boolean)? ;
 style-table-cell-properties-attlist ::= (style:decimal-places::nonNegativeInteger)? ;
 style-table-cell-properties-attlist ::= (style:repeat-content::boolean)? ;
 style-table-cell-properties-attlist ::= (style:shrink-to-fit::boolean)? ;
text-alphabetical-index-mark-attrs ::= (text:key1::string)? (text:key2::string)? ;
 text-alphabetical-index-mark-attrs ::= (text:string-value-phonetic::string)? (text:key1-phonetic::string)? (text:key2-phonetic::string)? ;
 text-alphabetical-index-mark-attrs ::= (text:main-entry::boolean)? ;
text-sort-key ::= text:sort-key::text-sort-key-attlist ;
chart-floor-attlist ::= (svg:width::length)? ;
 chart-floor-attlist ::= (chart:style-name::styleNameRef)? ;
presentation-notes ::= presentation:notes::(common-presentation-header-footer-attlist presentation-notes-attlist office-forms shape*) ;
number-number ::= number:number::(number-number-attlist common-decimal-places-attlist common-number-attlist number-embedded-text*) ;
text-notes-configuration ::= text:notes-configuration::text-notes-configuration-content ;
table-database-range ::= table:database-range::(table-database-range-attlist (table-database-source-sql | table-database-source-table | table-database-source-query)? table-filter? table-sort? table-subtotal-rules?) ;
text-index-scope-attr ::= (text:index-scope::("document" | "chapter"))? ;
text-section ::= text:section::(text-section-attr text-section-source | text-section-source-dde | ε text-content*) ;
presentation-animation-group ::= presentation:animation-group::(presentation-animation-elements*) ;
text-relative-tab-stop-position-attr ::= (text:relative-tab-stop-position::boolean)? ;
number-currency-symbol-attlist ::= (number:language::languageCode)? (number:country::countryCode)? ;
text-list-item ::= text:list-item::(text-list-item-attr text-list-item-content) ;
text-list-level-style-number-attr ::= (text:style-name::styleNameRef)? ;
 text-list-level-style-number-attr ::= common-num-format-attlist common-num-format-prefix-suffix-attlist ;
 text-list-level-style-number-attr ::= (text:display-levels::positiveInteger)? ;
 text-list-level-style-number-attr ::= (text:start-value::positiveInteger)? ;
common-border-attlist ::= (fo:border::string)? (fo:border-top::string)? (fo:border-bottom::string)? (fo:border-left::string)? (fo:border-right::string)? ;
presentation-notes-attlist ::= (style:page-layout-name::styleNameRef)? ;
 presentation-notes-attlist ::= (draw:style-name::styleNameRef)? ;
table-database-range-attlist ::= (table:name::string)? ;
 table-database-range-attlist ::= (table:is-selection::boolean)? ;
 table-database-range-attlist ::= (table:on-update-keep-styles::boolean)? ;
 table-database-range-attlist ::= (table:on-update-keep-size::boolean)? ;
 table-database-range-attlist ::= (table:has-persistent-data::boolean)? ;
 table-database-range-attlist ::= (table:orientation::("column" | "row"))? ;
 table-database-range-attlist ::= (table:contains-header::boolean)? ;
 table-database-range-attlist ::= (table:display-filter-buttons::boolean)? ;
 table-database-range-attlist ::= table:target-range-address::cellRangeAddress ;
 table-database-range-attlist ::= (table:refresh-delay::boolean)? ;
form-property-name ::= form:property-name::string ;
config-config-item-set-attlist ::= config:name::string ;
text-object-index-source-attrs ::= text-index-scope-attr ;
 text-object-index-source-attrs ::= text-relative-tab-stop-position-attr ;
 text-object-index-source-attrs ::= (text:use-spreadsheet-objects::boolean)? ;
 text-object-index-source-attrs ::= (text:use-math-objects::boolean)? ;
 text-object-index-source-attrs ::= (text:use-draw-objects::boolean)? ;
 text-object-index-source-attrs ::= (text:use-chart-objects::boolean)? ;
 text-object-index-source-attrs ::= (text:use-other-objects::boolean)? ;
table-change-track-table-cell-attlist ::= (table:cell-address::cellAddress)? ;
 table-change-track-table-cell-attlist ::= (table:matrix-covered::boolean)? ;
 table-change-track-table-cell-attlist ::= (table:formula::string)? (table:number-matrix-columns-spanned::positiveInteger)? (table:number-matrix-rows-spanned::positiveInteger)? common-value-and-type-attlist? ;
text-illustration-index-source ::= text:illustration-index-source::(text-illustration-index-source-attrs text-index-title-template? text-illustration-index-entry-template?) ;
style-region-center ::= style:region-center::region-content ;
number-number-style ::= number:number-style::(common-data-style-attlist style-text-properties? number-text? (any-number number-text?)? style-map*) ;
target-frame ::= (office:target-frame::targetFrameName)? ;
form-property-value-and-type-attlist ::= common-value-and-type-attlist | (office:value-type::"void") ;
table-named-range ::= table:named-range::table-named-range-attlist ;
style-header ::= style:header::(common-style-header-footer-attlist header-footer-content) ;
form-time-attlist ::= (form:value::time)? ;
 form-time-attlist ::= (form:current-value::time)? ;
 form-time-attlist ::= (form:min-value::time)? ;
 form-time-attlist ::= (form:max-value::time)? ;
table-cell-address ::= table:cell-address::common-table-cell-address-attlist ;
table-operation ::= table:operation::table-operation-attlist ;
office-document-meta ::= office:document-meta::(office-document-common-attrs office-meta) ;
text-index-entry-text ::= text:index-entry-text::((text:style-name::styleNameRef)?) ;
common-draw-data-attlist ::= xlink:href::anyURI (xlink:type::"simple")? (xlink:show::"embed")? (xlink:actuate::"onLoad")? ;
chart-axis-attlist ::= chart:dimension::("x" | "y" | "z") ;
 chart-axis-attlist ::= (chart:name::string)? ;
 chart-axis-attlist ::= (chart:style-name::styleNameRef)? ;
text-page-attlist ::= text:master-page-name::styleNameRef ;
text-table-of-content-entry-template ::= text:table-of-content-entry-template::(text-table-of-content-entry-template-attlist text-table-of-content-children*) ;
draw-g ::= draw:g::(draw-g-attlist common-draw-z-index-attlist common-draw-name-attlist common-draw-id-attlist common-draw-style-name-attlist common-text-spreadsheet-shape-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* shape*) ;
common-draw-path-data-attlist ::= svg:d::pathData ;
table-named-range-attlist ::= table:name::string table:cell-range-address::cellRangeAddress (table:base-cell-address::cellAddress)? (table:range-usable-as::("none" | (("print-range" | "filter" | "repeat-row" | "repeat-column")+)))? ;
number-quarter-attlist ::= (number:style::("short" | "long"))? ;
draw-a ::= draw:a::(draw-a-attlist draw-frame) ;
table-filter-condition-attlist ::= table:field-number::nonNegativeInteger ;
 table-filter-condition-attlist ::= table:value::string ;
 table-filter-condition-attlist ::= table:operator::string ;
 table-filter-condition-attlist ::= (table:case-sensitive::string)? ;
 table-filter-condition-attlist ::= (table:data-type::("text" | "number"))? ;
table-previous ::= table:previous::((table:id::string)? table-change-track-table-cell) ;
number-text-style ::= number:text-style::(common-data-style-attlist style-text-properties? number-text? (number-text-content number-text?)* style-map*) ;
office-body ::= office:body::office-body-content ;
svg-font-face-uri ::= svg:font-face-uri::(common-svg-font-face-xlink-attlist svg-font-face-format*) ;
draw-g-attlist ::= (svg:y::coordinate)? ;
text-list-style-content ::= text:list-level-style-number::(text-list-level-style-attr text-list-level-style-number-attr style-list-level-properties? style-text-properties?) ;
 text-list-style-content ::= text:list-level-style-bullet::(text-list-level-style-attr text-list-level-style-bullet-attr style-list-level-properties? style-text-properties?) ;
 text-list-style-content ::= text:list-level-style-image::(text-list-level-style-attr text-list-level-style-image-attr style-list-level-properties?) ;
table-table-row-attlist ::= (table:number-rows-repeated::positiveInteger)? ;
 table-table-row-attlist ::= (table:style-name::styleNameRef)? ;
 table-table-row-attlist ::= (table:default-cell-style-name::styleNameRef)? ;
 table-table-row-attlist ::= (table:visibility::table-visibility-value)? ;
style-page-layout ::= style:page-layout::(style-page-layout-attlist style-page-layout-properties? style-header-style? style-footer-style?) ;
office-process-content ::= (office:process-content::boolean)? ;
form-date-attlist ::= (form:value::date)? ;
 form-date-attlist ::= (form:current-value::date)? ;
 form-date-attlist ::= (form:min-value::date)? ;
 form-date-attlist ::= (form:max-value::date)? ;
common-form-relative-image-position-attlist ::= ((form:image-position::"center")?) | (form:image-position::("start" | "end" | "top" | "bottom") (form:image-align::("start" | "center" | "end"))?) ;
presentation-play ::= presentation:play::presentation-play-attlist ;
table-insertion-cut-off ::= table:insertion-cut-off::table-insertion-cut-off-attlist ;
presentation-animations ::= presentation:animations::((presentation-animation-elements | presentation-animation-group)*) ;
style-header-footer-properties ::= style:header-footer-properties::style-header-footer-properties-content ;
common-value-attlist ::= (form:value::string)? ;
style-footnote-sep-attlist ::= (style:width::length)? (style:rel-width::percent)? (style:color::color)? (style:line-style::lineStyle)? (style:adjustment::("left" | "center" | "right"))? (style:distance-before-sep::length)? (style:distance-after-sep::length)? ;
table-first-row ::= table:first-row::common-table-template-attlist ;
text-list-header ::= text:list-header::text-list-item-content ;
style-column-sep-attlist ::= (style:style::("none" | "solid" | "dotted" | "dashed" | "dot-dashed"))? ;
 style-column-sep-attlist ::= style:width::length ;
 style-column-sep-attlist ::= (style:height::percent)? ;
 style-column-sep-attlist ::= (style:vertical-align::("top" | "middle" | "bottom"))? ;
 style-column-sep-attlist ::= (style:color::color)? ;
text-user-index-entry-template ::= text:user-index-entry-template::(text-user-index-entry-template-attrs (text-index-entry-chapter | text-index-entry-page-number | text-index-entry-text | text-index-entry-span | text-index-entry-tab-stop)*) ;
table-database-source-table ::= table:database-source-query::table-database-source-query-attlist ;
table-table-cell-range-source-attlist ::= table:name::string ;
 table-table-cell-range-source-attlist ::= table:last-column-spanned::positiveInteger table:last-row-spanned::positiveInteger ;
common-form-control-attlist ::= (form:name::string)? ;
 common-form-control-attlist ::= (form:control-implementation::namespacedToken)? ;
common-svg-font-face-xlink-attlist ::= xlink:href::anyURI (xlink:type::"simple")? (xlink:actuate::"onRequest")? ;
draw-area-polygon ::= draw:area-polygon::(common-draw-area-attlist svg:x::coordinate svg:y::coordinate svg:width::length svg:height::length common-draw-viewbox-attlist common-draw-points-attlist svg-title? svg-desc? office-event-listeners?) ;
chart-stock-gain-marker ::= chart:stock-gain-marker::common-stock-marker-attlist ;
office-forms ::= (office:forms::(office-forms-attlist (form-form | xforms-model)*))? ;
common-restart-timing-attlist ::= (smil:restart::("never" | "always" | "whenNotActive" | "default"))? ;
form-properties ::= form:properties::(form-property+) ;
common-maxlength-attlist ::= (form:max-length::nonNegativeInteger)? ;
draw-object-attlist ::= (draw:notify-on-update-of-ranges::string)? ;
common-rotation-angle-attlist ::= (style:rotation-angle::nonNegativeInteger)? ;
common-readonly-attlist ::= (form:readonly::boolean)? ;
draw-measure ::= draw:measure::(draw-measure-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text) ;
draw-control ::= draw:control::(draw-control-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? draw-glue-point*) ;
table-table-column ::= table:table-column::table-table-column-attlist ;
text-sequence-ref-content ::= (text:reference-format::("page" | "chapter" | "direction" | "text" | "category-and-value" | "caption" | "value"))? ;
table-data-pilot-display-info ::= table:data-pilot-display-info::table-data-pilot-display-info-attlist ;
table-source-range-address ::= table:source-range-address::common-table-range-attlist ;
presentation-show ::= presentation:show::presentation-show-attlist ;
office-forms-attlist ::= (form:automatic-focus::boolean)? ;
 office-forms-attlist ::= (form:apply-design-mode::boolean)? ;
draw-plugin-attlist ::= (draw:mime-type::string())? ;
svg-stop ::= svg:stop::(svg:offset::(double | percent) (svg:stop-color::color)? (svg:stop-opacity::double)?) ;
table-named-expression ::= table:named-expression::table-named-expression-attlist ;
table-validation-attlist ::= table:name::string ;
 table-validation-attlist ::= (table:condition::string)? ;
 table-validation-attlist ::= (table:base-cell-address::cellAddress)? ;
 table-validation-attlist ::= (table:allow-empty-cell::boolean)? ;
 table-validation-attlist ::= (table:display-list::("none" | "unsorted" | "sort-ascending"))? ;
table-even-columns ::= table:even-columns::common-table-template-attlist ;
draw-page-thumbnail-attlist ::= (draw:page-number::positiveInteger)? ;
text-tab-attr ::= (text:tab-ref::nonNegativeInteger)? ;
text-style-name ::= (form:text-style-name::styleNameRef)? ;
text-table-of-content-source ::= text:table-of-content-source::(text-table-of-content-source-attlist text-index-title-template? text-table-of-content-entry-template* text-index-source-styles*) ;
text-index-entry-tab-stop-attrs ::= (style:leader-char::character)? ;
 text-index-entry-tab-stop-attrs ::= (style:type::"right") | (style:type::"left" style:position::length) ;
table-source-cell-range ::= table:source-cell-range::(table-source-cell-range-attlist table-filter?) ;
table-data-pilot-display-info-attlist ::= table:enabled::boolean ;
 table-data-pilot-display-info-attlist ::= table:data-field::string ;
 table-data-pilot-display-info-attlist ::= table:member-count::nonNegativeInteger ;
 table-data-pilot-display-info-attlist ::= table:display-member-mode::("from-top" | "from-bottom") ;
common-field-database-table-attlist ::= text:table-name::string ;
 common-field-database-table-attlist ::= (text:table-type::("table" | "query" | "command"))? ;
common-margin-attlist ::= (fo:margin::(nonNegativeLength | percent))? ;
common-spline-anim-value-attlist ::= (smil:keyTimes::string)? ;
 common-spline-anim-value-attlist ::= (smil:keySplines::string)? ;
table-odd-columns ::= table:odd-columns::common-table-template-attlist ;
common-draw-layer-name-attlist ::= (draw:layer::string())? ;
draw-rect-attlist ::= (draw:corner-radius::nonNegativeLength)? ;
chart-stock-loss-marker ::= chart:stock-loss-marker::common-stock-marker-attlist ;
common-field-display-value-formula-attlist ::= (text:display::("value" | "formula"))? ;
office-event-listeners ::= office:event-listeners::((script-event-listener | presentation-event-listener)*) ;
dr3d-sphere ::= dr3d:sphere::(dr3d-sphere-attlist common-draw-z-index-attlist common-draw-id-attlist common-draw-layer-name-attlist common-draw-style-name-attlist common-dr3d-transform-attlist) ;
text-id ::= text:id::string ;
text-table-of-content-source-attlist ::= (text:outline-level::positiveInteger)? ;
 text-table-of-content-source-attlist ::= (text:use-outline-level::boolean)? ;
 text-table-of-content-source-attlist ::= (text:use-index-marks::boolean)? ;
 text-table-of-content-source-attlist ::= (text:use-index-source-styles::boolean)? ;
 text-table-of-content-source-attlist ::= (text:index-scope::("document" | "chapter"))? ;
 text-table-of-content-source-attlist ::= (text:relative-tab-stop-position::boolean)? ;
style-text-properties ::= style:text-properties::style-text-properties-content ;
draw-equation ::= draw:equation::draw-equation-attlist ;
draw-object-ole-attlist ::= (draw:class-id::string())? ;
text-table-index-source ::= text:table-index-source::(text-illustration-index-source-attrs text-index-title-template? text-table-index-entry-template?) ;
office-automatic-styles ::= (office:automatic-styles::(styles style-page-layout*))? ;
animation-element ::= anim:animate::(common-anim-target-attlist common-anim-named-target-attlist common-anim-values-attlist common-anim-spline-mode-attlist common-spline-anim-value-attlist common-timing-attlist common-anim-add-accum-attlist) ;
 animation-element ::= anim:set::(common-anim-target-attlist common-anim-named-target-attlist common-anim-set-values-attlist common-timing-attlist common-anim-add-accum-attlist) ;
 animation-element ::= anim:animateMotion::(anim-animate-motion-attlist common-anim-target-attlist common-anim-named-target-attlist common-anim-add-accum-attlist common-anim-values-attlist common-timing-attlist common-spline-anim-value-attlist) ;
 animation-element ::= anim:animateColor::(common-anim-target-attlist common-anim-named-target-attlist common-anim-add-accum-attlist common-anim-values-attlist common-anim-spline-mode-attlist common-spline-anim-value-attlist anim-animate-color-attlist common-timing-attlist) ;
 animation-element ::= anim:animateTransform::(common-anim-target-attlist common-anim-named-target-attlist common-anim-add-accum-attlist common-anim-values-attlist anim-animate-transform-attlist common-timing-attlist) ;
 animation-element ::= anim:transitionFilter::(common-anim-target-attlist common-anim-add-accum-attlist common-anim-values-attlist common-anim-spline-mode-attlist anim-transition-filter-attlist common-timing-attlist) ;
 animation-element ::= anim:par::(common-anim-attlist common-timing-attlist common-endsync-timing-attlist animation-element*) ;
 animation-element ::= anim:seq::(common-anim-attlist common-endsync-timing-attlist common-timing-attlist animation-element*) ;
 animation-element ::= anim:iterate::(common-anim-attlist anim-iterate-attlist common-timing-attlist common-endsync-timing-attlist animation-element*) ;
 animation-element ::= anim:audio::(common-anim-attlist anim-audio-attlist common-basic-timing-attlist) ;
 animation-element ::= anim:command::(common-anim-attlist anim-command-attlist common-begin-end-timing-attlist common-anim-target-attlist (anim:param::(anim:name::string() anim:value::string()))*) ;
draw-polygon ::= draw:polygon::(common-draw-points-attlist common-draw-position-attlist common-draw-size-attlist common-draw-viewbox-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text) ;
svg-title ::= svg:title::string() ;
anim-animate-color-attlist ::= (anim:color-interpolation::("rgb" | "hsl"))? ;
 anim-animate-color-attlist ::= (anim:color-interpolation-direction::("clockwise" | "counter-clockwise"))? ;
style-section-properties-attlist ::= common-background-color-attlist ;
 style-section-properties-attlist ::= common-horizontal-margin-attlist ;
 style-section-properties-attlist ::= (style:protect::boolean)? ;
 style-section-properties-attlist ::= (text:dont-balance-text-columns::boolean)? ;
 style-section-properties-attlist ::= common-writing-mode-attlist ;
table-data-pilot-group ::= table:data-pilot-group::(table-data-pilot-group-attlist table-data-pilot-group-member+) ;
table-label-range ::= table:label-range::table-label-range-attlist ;
number-boolean ::= number:boolean::ε ;
dr3d-cube ::= dr3d:cube::(dr3d-cube-attlist common-draw-z-index-attlist common-draw-id-attlist common-draw-layer-name-attlist common-draw-style-name-attlist common-dr3d-transform-attlist) ;
table-scenario-attlist ::= table:scenario-ranges::cellRangeAddressList ;
 table-scenario-attlist ::= table:is-active::boolean ;
 table-scenario-attlist ::= (table:display-border::boolean)? ;
 table-scenario-attlist ::= (table:border-color::color)? ;
 table-scenario-attlist ::= (table:copy-back::boolean)? ;
 table-scenario-attlist ::= (table:copy-styles::boolean)? ;
 table-scenario-attlist ::= (table:copy-formulas::boolean)? ;
 table-scenario-attlist ::= (table:comment::string)? ;
 table-scenario-attlist ::= (table:protected::boolean)? ;
common-control-id-attlist ::= form:id::ID ;
number-week-of-year ::= number:week-of-year::common-calendar-attlist ;
form-option ::= form:option::(form-option-attlist string()) ;
table-data-pilot-level-attlist ::= (table:show-empty::boolean)? ;
style-footer-style ::= style:footer-style::(style-header-footer-properties?) ;
presentation-event-listener ::= presentation:event-listener::(presentation-event-listener-attlist presentation-sound?) ;
draw-gradient ::= draw:gradient::(common-draw-gradient-attlist draw-gradient-attlist) ;
text-outline-level ::= (text:outline-level::positiveInteger)? ;
common-background-color-attlist ::= (fo:background-color::("transparent" | color))? ;
table-data-pilot-group-attlist ::= table:name::string ;
draw-frame-attlist ::= (draw:copy-of::string)? ;
common-restart-default-attlist ::= (smil:restartDefault::("never" | "always" | "whenNotActive" | "inherit"))? ;
chart-domain ::= chart:domain::((table:cell-range-address::cellRangeAddress)?) ;
table-data-pilot-group-member-attlist ::= table:name::string ;
office-text-attlist ::= (text:global::boolean)? ;
 office-text-attlist ::= (text:use-soft-page-breaks::boolean)? ;
style-paragraph-properties ::= style:paragraph-properties::style-paragraph-properties-content ;
table-table-row-group ::= table:table-row-group::(table-table-row-group-attlist table-rows-and-groups) ;
text-file-name-attlist ::= (text:display::("full" | "path" | "name" | "name-and-extension"))? ;
 text-file-name-attlist ::= common-field-fixed-attlist ;
text-illustration-index-entry-template ::= text:illustration-index-entry-template::text-illustration-index-entry-content ;
presentation-event-listener-attlist ::= script:event-name::string ;
 presentation-event-listener-attlist ::= presentation:action::("none" | "previous-page" | "next-page" | "first-page" | "last-page" | "hide" | "stop" | "execute" | "show" | "verb" | "fade-out" | "sound") ;
 presentation-event-listener-attlist ::= (presentation:effect::presentationEffects)? ;
 presentation-event-listener-attlist ::= (presentation:direction::presentationEffectDirections)? ;
 presentation-event-listener-attlist ::= (presentation:speed::presentationSpeeds)? ;
 presentation-event-listener-attlist ::= (presentation:start-scale::percent)? ;
 presentation-event-listener-attlist ::= (xlink:href::anyURI)? (xlink:type::"simple")? (xlink:show::"embed")? (xlink:actuate::"onRequest")? ;
 presentation-event-listener-attlist ::= (presentation:verb::nonNegativeInteger)? ;
common-fill-default-attlist ::= (smil:fillDefault::("remove" | "freeze" | "hold" | "transition" | "auto" | "inherit"))? ;
common-form-visual-effect-attlist ::= (form:visual-effect::("flat" | "3d"))? ;
style-page-layout-properties-attlist ::= (fo:page-width::length)? (fo:page-height::length)? ;
 style-page-layout-properties-attlist ::= common-num-format-attlist? common-num-format-prefix-suffix-attlist ;
 style-page-layout-properties-attlist ::= (style:paper-tray-name::("default" | string))? ;
 style-page-layout-properties-attlist ::= (style:print-orientation::("portrait" | "landscape"))? ;
 style-page-layout-properties-attlist ::= common-horizontal-margin-attlist common-vertical-margin-attlist common-margin-attlist ;
 style-page-layout-properties-attlist ::= common-border-attlist ;
 style-page-layout-properties-attlist ::= common-border-line-width-attlist ;
 style-page-layout-properties-attlist ::= common-padding-attlist ;
 style-page-layout-properties-attlist ::= common-shadow-attlist ;
 style-page-layout-properties-attlist ::= common-background-color-attlist ;
 style-page-layout-properties-attlist ::= (style:register-truth-ref-style-name::styleNameRef)? ;
 style-page-layout-properties-attlist ::= (style:print::(("headers" | "grid" | "annotations" | "objects" | "charts" | "drawings" | "formulas" | "zero-values")*))? ;
 style-page-layout-properties-attlist ::= (style:print-page-order::("ttb" | "ltr"))? ;
 style-page-layout-properties-attlist ::= (style:first-page-number::(positiveInteger | "continue"))? ;
 style-page-layout-properties-attlist ::= (style:scale-to::percent)? (style:scale-to-pages::positiveInteger)? ;
 style-page-layout-properties-attlist ::= (style:table-centering::("horizontal" | "vertical" | "both" | "none"))? ;
 style-page-layout-properties-attlist ::= (style:footnote-max-height::length)? ;
 style-page-layout-properties-attlist ::= common-writing-mode-attlist ;
 style-page-layout-properties-attlist ::= (style:layout-grid-mode::("none" | "line" | "both"))? ;
 style-page-layout-properties-attlist ::= (style:layout-grid-base-height::length)? ;
 style-page-layout-properties-attlist ::= (style:layout-grid-ruby-height::length)? ;
 style-page-layout-properties-attlist ::= (style:layout-grid-lines::positiveInteger)? ;
 style-page-layout-properties-attlist ::= (style:layout-grid-color::color)? ;
 style-page-layout-properties-attlist ::= (style:layout-grid-ruby-below::boolean)? ;
 style-page-layout-properties-attlist ::= (style:layout-grid-print::boolean)? ;
 style-page-layout-properties-attlist ::= (style:layout-grid-display::boolean)? ;
draw-text-box-attlist ::= (draw:chain-next-name::string)? ;
 draw-text-box-attlist ::= (draw:corner-radius::nonNegativeLength)? ;
 draw-text-box-attlist ::= (fo:min-height::(length | percent))? (fo:min-width::(length | percent))? ;
 draw-text-box-attlist ::= (fo:max-height::(length | percent))? (fo:max-width::(length | percent))? ;
 draw-text-box-attlist ::= text-id? ;
table-error-message ::= table:error-message::((table:title::string)? (table:display::boolean)? (table:message-type::("stop" | "warning" | "information"))? text-p*) ;
style-table-row-properties ::= style:table-row-properties::style-table-row-properties-content ;
style-paragraph-properties-attlist ::= (fo:line-height::("normal" | nonNegativeLength | percent))? ;
 style-paragraph-properties-attlist ::= (style:line-height-at-least::nonNegativeLength)? ;
 style-paragraph-properties-attlist ::= (style:line-spacing::length)? ;
 style-paragraph-properties-attlist ::= (style:font-independent-line-spacing::boolean)? ;
 style-paragraph-properties-attlist ::= common-text-align ;
 style-paragraph-properties-attlist ::= (fo:text-align-last::("start" | "center" | "justify"))? ;
 style-paragraph-properties-attlist ::= (style:justify-single-word::boolean)? ;
 style-paragraph-properties-attlist ::= (fo:keep-together::("auto" | "always"))? ;
 style-paragraph-properties-attlist ::= (fo:widows::nonNegativeInteger)? ;
 style-paragraph-properties-attlist ::= (fo:orphans::nonNegativeInteger)? ;
 style-paragraph-properties-attlist ::= (style:tab-stop-distance::nonNegativeLength)? ;
 style-paragraph-properties-attlist ::= (fo:hyphenation-keep::("auto" | "page"))? ;
 style-paragraph-properties-attlist ::= (fo:hyphenation-ladder-count::("no-limit" | positiveInteger))? ;
 style-paragraph-properties-attlist ::= (style:register-true::boolean)? ;
 style-paragraph-properties-attlist ::= common-horizontal-margin-attlist ;
 style-paragraph-properties-attlist ::= (fo:text-indent::(length | percent))? ;
 style-paragraph-properties-attlist ::= (style:auto-text-indent::boolean)? ;
 style-paragraph-properties-attlist ::= common-vertical-margin-attlist ;
 style-paragraph-properties-attlist ::= common-margin-attlist ;
 style-paragraph-properties-attlist ::= common-break-attlist ;
 style-paragraph-properties-attlist ::= common-background-color-attlist ;
 style-paragraph-properties-attlist ::= common-border-attlist ;
 style-paragraph-properties-attlist ::= common-border-line-width-attlist ;
 style-paragraph-properties-attlist ::= common-padding-attlist ;
 style-paragraph-properties-attlist ::= common-shadow-attlist ;
 style-paragraph-properties-attlist ::= common-keep-with-next-attlist ;
 style-paragraph-properties-attlist ::= (text:number-lines::boolean)? ;
 style-paragraph-properties-attlist ::= (text:line-number::nonNegativeInteger)? ;
 style-paragraph-properties-attlist ::= (style:text-autospace::("none" | "ideograph-alpha"))? ;
 style-paragraph-properties-attlist ::= (style:punctuation-wrap::("simple" | "hanging"))? ;
 style-paragraph-properties-attlist ::= (style:line-break::("normal" | "strict"))? ;
 style-paragraph-properties-attlist ::= (style:vertical-align::("top" | "middle" | "bottom" | "auto" | "baseline"))? ;
 style-paragraph-properties-attlist ::= common-writing-mode-attlist ;
 style-paragraph-properties-attlist ::= (style:writing-mode-automatic::boolean)? ;
 style-paragraph-properties-attlist ::= (style:snap-to-layout-grid::boolean)? ;
 style-paragraph-properties-attlist ::= common-page-number-attlist ;
 style-paragraph-properties-attlist ::= (style:background-transparency::percent)? ;
draw-regular-polygon ::= draw:regular-polygon::(draw-regular-polygon-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text) ;
table-table-row-group-attlist ::= (table:display::boolean)? ;
common-border-line-width-attlist ::= (style:border-line-width::borderWidths)? (style:border-line-width-top::borderWidths)? (style:border-line-width-bottom::borderWidths)? (style:border-line-width-left::borderWidths)? (style:border-line-width-right::borderWidths)? ;
draw-layer-attlist ::= draw:name::string ;
 draw-layer-attlist ::= (draw:protected::boolean)? ;
 draw-layer-attlist ::= (draw:display::("always" | "screen" | "printer" | "none"))? ;
draw-circle ::= draw:circle::(draw-circle-attlist common-draw-circle-ellipse-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text) ;
draw-page ::= draw:page::(common-presentation-header-footer-attlist draw-page-attlist office-forms? shape* (presentation-animations | animation-element)? presentation-notes?) ;
presentation-settings ::= (presentation:settings::(presentation-settings-attlist presentation-show*))? ;
text-table-index ::= text:table-index::(sectionAttr text-table-index-source text-index-body) ;
text-outline-level-style-attlist ::= text:level::positiveInteger ;
 text-outline-level-style-attlist ::= (text:style-name::styleNameRef)? ;
 text-outline-level-style-attlist ::= common-num-format-attlist common-num-format-prefix-suffix-attlist ;
 text-outline-level-style-attlist ::= (text:display-levels::positiveInteger)? ;
 text-outline-level-style-attlist ::= (text:start-value::positiveInteger)? ;
table-data-pilot-subtotal-attlist ::= table:function::("auto" | "average" | "count" | "countnums" | "max" | "min" | "product" | "stdev" | "stdevp" | "sum" | "var" | "varp" | string) ;
common-anim-values-attlist ::= (smil:values::string)? ;
 common-anim-values-attlist ::= (anim:formula::string)? ;
 common-anim-values-attlist ::= common-anim-set-values-attlist (smil:from::string)? (smil:by::string)? ;
table-table-template-attlist ::= text:name::string ;
 table-table-template-attlist ::= text:first-row-start-column::rowOrCol ;
 table-table-template-attlist ::= text:first-row-end-column::rowOrCol ;
 table-table-template-attlist ::= text:last-row-start-column::rowOrCol ;
 table-table-template-attlist ::= text:last-row-end-column::rowOrCol ;
draw-hatch-attlist ::= draw:name::styleName ;
 draw-hatch-attlist ::= (draw:display-name::string)? ;
 draw-hatch-attlist ::= draw:style::("single" | "double" | "triple") ;
 draw-hatch-attlist ::= (draw:color::color)? ;
 draw-hatch-attlist ::= (draw:distance::length)? ;
 draw-hatch-attlist ::= (draw:rotation::integer)? ;
presentation-settings-attlist ::= (presentation:start-page::string)? ;
 presentation-settings-attlist ::= (presentation:show::string)? ;
 presentation-settings-attlist ::= (presentation:full-screen::boolean)? ;
 presentation-settings-attlist ::= (presentation:endless::boolean)? ;
 presentation-settings-attlist ::= (presentation:pause::duration)? ;
 presentation-settings-attlist ::= (presentation:show-logo::boolean)? ;
 presentation-settings-attlist ::= (presentation:force-manual::boolean)? ;
 presentation-settings-attlist ::= (presentation:mouse-visible::boolean)? ;
 presentation-settings-attlist ::= (presentation:mouse-as-pen::boolean)? ;
 presentation-settings-attlist ::= (presentation:start-with-navigator::boolean)? ;
 presentation-settings-attlist ::= (presentation:animations::("enabled" | "disabled"))? ;
 presentation-settings-attlist ::= (presentation:transition-on-click::("enabled" | "disabled"))? ;
 presentation-settings-attlist ::= (presentation:stay-on-top::boolean)? ;
 presentation-settings-attlist ::= (presentation:show-end-of-presentation-slide::boolean)? ;
dr3d-light ::= dr3d:light::dr3d-light-attlist ;
number-day-of-week-attlist ::= (number:style::("short" | "long"))? ;
common-keep-with-next-attlist ::= (fo:keep-with-next::("auto" | "always"))? ;
common-text-anchor-attlist ::= (text:anchor-type::("page" | "frame" | "paragraph" | "char" | "as-char"))? ;
 common-text-anchor-attlist ::= (text:anchor-page-number::positiveInteger)? ;
presentation-show-shape ::= presentation:show-shape::(common-presentation-effect-attlist presentation-sound?) ;
table-sort-groups ::= table:sort-groups::table-sort-groups-attlist ;
text-object-index ::= text:object-index::(sectionAttr text-object-index-source text-index-body) ;
table-insertion-attlist ::= table:type::("row" | "column" | "table") ;
 table-insertion-attlist ::= table:position::integer ;
 table-insertion-attlist ::= (table:count::positiveInteger)? ;
 table-insertion-attlist ::= (table:table::integer)? ;
table-filter-and ::= table:filter-and::((table-filter-or | table-filter-condition)+) ;
office-document-common-attrs ::= (office:version::string)? ;
common-draw-style-name-attlist ::= ((draw:style-name::styleNameRef)? (draw:class-names::styleNameRefs)?) | ((presentation:style-name::styleNameRef)? (presentation:class-names::styleNameRefs)?) ;
text-bibliography-configuration-attlist ::= (text:prefix::string)? (text:suffix::string)? ;
 text-bibliography-configuration-attlist ::= (text:numbered-entries::boolean)? ;
 text-bibliography-configuration-attlist ::= (text:sort-by-position::boolean)? (fo:language::languageCode)? (fo:country::countryCode)? (text:sort-algorithm::string)? ;
chart-floor ::= chart:floor::chart-floor-attlist ;
office-master-styles ::= (office:master-styles::(style-master-page* style-handout-master? draw-layer-set?))? ;
table-table-header-rows ::= table:table-header-rows::((text-soft-page-break? table-table-row)+) ;
table-movement-cut-off-attlist ::= (table:position::integer) | (table:start-position::integer table:end-position::integer) ;
table-table-cell-attlist ::= (table:number-columns-repeated::positiveInteger)? ;
 table-table-cell-attlist ::= (table:style-name::styleNameRef)? ;
 table-table-cell-attlist ::= (table:content-validation-name::string)? ;
 table-table-cell-attlist ::= (table:formula::string)? ;
 table-table-cell-attlist ::= common-value-and-type-attlist? ;
 table-table-cell-attlist ::= (table:protect::boolean)? ;
style-list-level-properties ::= style:list-level-properties::style-list-level-properties-content ;
number-minutes-attlist ::= (number:style::("short" | "long"))? ;
table-change-deletion ::= table:change-deletion::((table:id::string)?) ;
table-data-pilot-layout-info-attlist ::= table:layout-mode::("tabular-layout" | "outline-subtotals-top" | "outline-subtotals-bottom") ;
 table-data-pilot-layout-info-attlist ::= table:add-empty-lines::boolean ;
table-filter-attlist ::= (table:target-range-address::cellRangeAddress)? ;
 table-filter-attlist ::= (table:condition-source::("self" | "cell-range"))? ;
 table-filter-attlist ::= (table:condition-source-range-address::cellRangeAddress)? ;
 table-filter-attlist ::= (table:display-duplicates::boolean)? ;
draw-ellipse-attlist ::= (svg:rx::length svg:ry::length)? ;
table-table-column-group ::= table:table-column-group::(table-table-column-group-attlist table-columns-and-groups) ;
text-index-entry-link-start ::= text:index-entry-link-start::((text:style-name::styleNameRef)?) ;
common-convert-empty-attlist ::= (form:convert-empty-to-null::boolean)? ;
table-last-row ::= table:last-row::common-table-template-attlist ;
style-style-content ::= style:family::"text" style-text-properties? ;
 style-style-content ::= style:family::"paragraph" style-paragraph-properties? style-text-properties? ;
 style-style-content ::= style:family::"section" style-section-properties? ;
 style-style-content ::= style:family::"ruby" style-ruby-properties? ;
 style-style-content ::= style:family::"table" style-table-properties? ;
 style-style-content ::= style:family::"table-column" style-table-column-properties? ;
 style-style-content ::= style:family::"table-row" style-table-row-properties? ;
 style-style-content ::= style:family::"table-cell" style-table-cell-properties? style-paragraph-properties? style-text-properties? ;
 style-style-content ::= style:family::("graphic" | "presentation") style-graphic-properties? style-paragraph-properties? style-text-properties? ;
 style-style-content ::= style:family::"drawing-page" style-drawing-page-properties? ;
 style-style-content ::= style:family::"chart" style-chart-properties? style-graphic-properties? style-paragraph-properties? style-text-properties? ;
common-format-source-attlist ::= (number:format-source::("fixed" | "language"))? ;
table-change-track-table-cell ::= table:change-track-table-cell::(table-change-track-table-cell-attlist text-p*) ;
text-list ::= text:list::(text-list-attr text-list-header? text-list-item*) ;
common-table-cell-address-attlist ::= table:column::integer table:row::integer table:table::integer ;
common-anim-set-values-attlist ::= (smil:to::string)? ;
table-table-column-group-attlist ::= (table:display::boolean)? ;
style-footer ::= style:footer::(common-style-header-footer-attlist header-footer-content) ;
text-bibliography-entry-template-attrs ::= text:bibliography-type::text-bibliography-types ;
 text-bibliography-entry-template-attrs ::= text:style-name::styleNameRef ;
number-year-attlist ::= (number:style::("short" | "long"))? ;
svg-font-face-format ::= svg:font-face-format::((svg:string::string())?) ;
style-map-attlist ::= style:condition::string ;
 style-map-attlist ::= style:apply-style-name::styleNameRef ;
 style-map-attlist ::= (style:base-cell-address::cellAddress)? ;
number-text ::= number:text::string() ;
text-index-entry-tab-stop ::= text:index-entry-tab-stop::((text:style-name::styleNameRef)? text-index-entry-tab-stop-attrs) ;
table-sort-attlist ::= (table:bind-styles-to-content::boolean)? ;
 table-sort-attlist ::= (table:target-range-address::cellRangeAddress)? ;
 table-sort-attlist ::= (table:case-sensitive::boolean)? ;
 table-sort-attlist ::= (table:language::languageCode)? ;
 table-sort-attlist ::= (table:country::countryCode)? ;
 table-sort-attlist ::= (table:algorithm::string)? ;
chart-chart ::= chart:chart::(chart-chart-attlist chart-title? chart-subtitle? chart-footer? chart-legend? chart-plot-area table-table?) ;
style-table-properties ::= style:table-properties::style-table-properties-content ;
office-spreadsheet-attlist ::= (table:structure-protected::boolean)? (table:protection-key::string)? ;
style-header-left ::= style:header-left::(common-style-header-footer-attlist header-footer-content) ;
common-value-type-attlist ::= office:value-type::valueType ;
common-field-database-name ::= (text:database-name::string)? ;
 common-field-database-name ::= form-connection-resource ;
chart-subtitle ::= chart:subtitle::(chart-title-attlist text-p?) ;
table-filter-condition ::= table:filter-condition::table-filter-condition-attlist ;
style-region-left ::= style:region-left::region-content ;
text-soft-page-break ::= text:soft-page-break::ε ;
common-draw-position-attlist ::= (svg:x::coordinate)? (svg:y::coordinate)? ;
common-padding-attlist ::= (fo:padding::nonNegativeLength)? (fo:padding-top::nonNegativeLength)? (fo:padding-bottom::nonNegativeLength)? (fo:padding-left::nonNegativeLength)? (fo:padding-right::nonNegativeLength)? ;
draw-contour-path ::= draw:contour-path::(common-contour-attlist common-draw-size-attlist common-draw-viewbox-attlist common-draw-path-data-attlist) ;
style-table-properties-attlist ::= (style:width::positiveLength)? (style:rel-width::percent)? ;
 style-table-properties-attlist ::= (table:align::("left" | "center" | "right" | "margins"))? ;
 style-table-properties-attlist ::= common-horizontal-margin-attlist ;
 style-table-properties-attlist ::= common-vertical-margin-attlist ;
 style-table-properties-attlist ::= common-margin-attlist ;
 style-table-properties-attlist ::= common-page-number-attlist ;
 style-table-properties-attlist ::= common-break-attlist ;
 style-table-properties-attlist ::= common-background-color-attlist ;
 style-table-properties-attlist ::= common-shadow-attlist ;
 style-table-properties-attlist ::= common-keep-with-next-attlist ;
 style-table-properties-attlist ::= (style:may-break-between-rows::boolean)? ;
 style-table-properties-attlist ::= (table:border-model::("collapsing" | "separating"))? ;
 style-table-properties-attlist ::= common-writing-mode-attlist ;
 style-table-properties-attlist ::= (table:display::boolean)? ;
text-alphabetical-index-source-attrs ::= text-index-scope-attr text-relative-tab-stop-position-attr ;
 text-alphabetical-index-source-attrs ::= (text:ignore-case::boolean)? ;
 text-alphabetical-index-source-attrs ::= (text:main-entry-style-name::styleNameRef)? ;
 text-alphabetical-index-source-attrs ::= (text:alphabetical-separators::boolean)? ;
 text-alphabetical-index-source-attrs ::= (text:combine-entries::boolean)? (text:combine-entries-with-dash::boolean)? (text:combine-entries-with-pp::boolean)? ;
 text-alphabetical-index-source-attrs ::= (text:use-keys-as-entries::boolean)? ;
 text-alphabetical-index-source-attrs ::= (text:capitalize-entries::boolean)? ;
 text-alphabetical-index-source-attrs ::= (text:comma-separated::boolean)? ;
 text-alphabetical-index-source-attrs ::= (fo:language::languageCode)? ;
 text-alphabetical-index-source-attrs ::= (fo:country::countryCode)? ;
 text-alphabetical-index-source-attrs ::= (text:sort-algorithm::string)? ;
text-list-attr ::= (text:style-name::styleNameRef)? ;
 text-list-attr ::= (text:continue-numbering::boolean)? ;
form-form-attlist ::= (xlink:href::anyURI (xlink:type::"simple")? (xlink:actuate::"onRequest")?)? ;
 form-form-attlist ::= (office:target-frame::targetFrameName)? ;
 form-form-attlist ::= (form:method::("get" | "post" | string))? ;
 form-form-attlist ::= (form:enctype::string)? ;
 form-form-attlist ::= (form:allow-deletes::boolean)? ;
 form-form-attlist ::= (form:allow-inserts::boolean)? ;
 form-form-attlist ::= (form:allow-updates::boolean)? ;
 form-form-attlist ::= (form:apply-filter::boolean)? ;
 form-form-attlist ::= (form:command-type::("table" | "query" | "command"))? ;
 form-form-attlist ::= (form:command::string())? ;
 form-form-attlist ::= (form:datasource::(anyURI | string))? ;
 form-form-attlist ::= (form:master-fields::string)? ;
 form-form-attlist ::= (form:detail-fields::string)? ;
 form-form-attlist ::= (form:escape-processing::boolean)? ;
 form-form-attlist ::= (form:filter::string)? ;
 form-form-attlist ::= (form:ignore-result::boolean)? ;
 form-form-attlist ::= (form:navigation-mode::navigation)? ;
 form-form-attlist ::= (form:order::string)? ;
 form-form-attlist ::= (form:tab-cycle::tab-cycles)? ;
table-table-columns ::= table:table-columns::(table-table-column+) ;
text-tracked-changes-attr ::= (text:track-changes::boolean)? ;
table-table-header-columns ::= table:table-header-columns::(table-table-column+) ;
table-help-message ::= table:help-message::((table:title::string)? (table:display::boolean)? text-p*) ;
table-filter-or ::= table:filter-or::((table-filter-and | table-filter-condition)+) ;
common-printable-attlist ::= (form:printable::boolean)? ;
heading-attrs ::= text:outline-level::positiveInteger ;
 heading-attrs ::= (text:restart-numbering::boolean)? ;
 heading-attrs ::= (text:start-value::nonNegativeInteger)? ;
 heading-attrs ::= (text:is-list-header::boolean)? ;
table-data-pilot-sort-info-attlist ::= (table:sort-mode::"data" table:data-field::string) | (table:sort-mode::("none" | "manual" | "name")) ;
 table-data-pilot-sort-info-attlist ::= table:order::("ascending" | "descending") ;
common-time-manip-attlist ::= (smil:accelerate::double)? ;
 common-time-manip-attlist ::= (smil:decelerate::double)? ;
 common-time-manip-attlist ::= (smil:autoReverse::boolean)? ;
text-numbered-paragraph-attr ::= (text:level::positiveInteger)? ;
 text-numbered-paragraph-attr ::= text-list-attr ;
 text-numbered-paragraph-attr ::= text-list-item-attr ;
draw-glue-point-attlist ::= draw:id::nonNegativeInteger ;
 draw-glue-point-attlist ::= svg:x::(distance | percent) svg:y::(distance | percent) ;
 draw-glue-point-attlist ::= (draw:align::("top-left" | "top" | "top-right" | "left" | "center" | "right" | "bottom-left" | "bottom-right"))? ;
table-data-pilot-field-attlist ::= table:source-field-name::string ;
 table-data-pilot-field-attlist ::= (table:orientation::("row" | "column" | "data" | "hidden")) | (table:orientation::"page" table:selected-page::string) ;
 table-data-pilot-field-attlist ::= (table:is-data-layout-field::string)? ;
 table-data-pilot-field-attlist ::= (table:function::("auto" | "average" | "count" | "countnums" | "max" | "min" | "product" | "stdev" | "stdevp" | "sum" | "var" | "varp" | string))? ;
 table-data-pilot-field-attlist ::= (table:used-hierarchy::integer)? ;
office-styles ::= (office:styles::(styles style-default-style* text-outline-style? text-notes-configuration* text-bibliography-configuration? text-linenumbering-configuration? draw-gradient* svg-linearGradient* svg-radialGradient* draw-hatch* draw-fill-image* draw-marker* draw-stroke-dash* draw-opacity* style-presentation-page-layout*))? ;
common-draw-viewbox-attlist ::= svg:viewBox::(integer integer integer integer) ;
table-table ::= table:table::(table-table-attlist table-table-source? office-dde-source? table-scenario? office-forms? table-shapes? table-columns-and-groups table-rows-and-groups) ;
style-footnote-sep ::= (style:footnote-sep::style-footnote-sep-attlist)? ;
style-header-style ::= style:header-style::(style-header-footer-properties?) ;
anim-audio-attlist ::= (xlink:href::anyURI)? ;
 anim-audio-attlist ::= (anim:audio-level::double)? ;
office-document ::= office:document::(office-document-attrs office-document-common-attrs office-meta office-settings office-scripts office-font-face-decls office-styles office-automatic-styles office-master-styles office-body) ;
number-day-attlist ::= (number:style::("short" | "long"))? ;
common-horizontal-margin-attlist ::= (fo:margin-left::(length | percent))? (fo:margin-right::(length | percent))? ;
text-user-index-entry-template-attrs ::= text:outline-level::positiveInteger ;
 text-user-index-entry-template-attrs ::= text:style-name::styleNameRef ;
text-page-continuation-attlist ::= text:select-page::("previous" | "next") ;
 text-page-continuation-attlist ::= (text:string-value::string)? ;
common-anim-add-accum-attlist ::= (smil:accumulate::("none" | "sum"))? ;
 common-anim-add-accum-attlist ::= (smil:additive::("replace" | "sum"))? ;
draw-applet ::= draw:applet::(draw-applet-attlist common-draw-data-attlist? draw-param*) ;
text-database-display-attlist ::= common-field-database-table ;
 text-database-display-attlist ::= common-field-data-style-name-attlist ;
 text-database-display-attlist ::= text:column-name::string ;
number-embedded-text-attlist ::= number:position::integer ;
style-master-page ::= style:master-page::(style-master-page-attlist (style-header style-header-left?)? (style-footer style-footer-left?)? office-forms? style-style* shape* presentation-notes?) ;
style-handout-master-attlist ::= (presentation:presentation-page-layout-name::styleNameRef)? ;
 style-handout-master-attlist ::= style:page-layout-name::styleNameRef ;
 style-handout-master-attlist ::= (draw:style-name::styleNameRef)? ;
text-linenumbering-separator ::= text:linenumbering-separator::((text:increment::nonNegativeInteger)? string()) ;
text-common-ref-content ::= string() ;
 text-common-ref-content ::= (text:ref-name::string)? ;
text-index-title ::= text:index-title::(sectionAttr index-content-main*) ;
office-script ::= office:script::(office-script-attlist string()? anyElements string()?) ;
text-alphabetical-index-entry-template-attrs ::= text:outline-level::("1" | "2" | "3" | "separator") ;
 text-alphabetical-index-entry-template-attrs ::= text:style-name::styleNameRef ;
presentation-play-attlist ::= draw:shape-id::IDREF (presentation:speed::presentationSpeeds)? ;
table-insertion-cut-off-attlist ::= table:id::string ;
 table-insertion-cut-off-attlist ::= table:position::integer ;
svg-radialGradient ::= svg:radialGradient::(common-svg-gradient-attlist (svg:cx::(coordinate | percent))? (svg:cy::(coordinate | percent))? (svg:r::(coordinate | percent))? (svg:fx::(coordinate | percent))? (svg:fy::(coordinate | percent))? svg-stop*) ;
common-anim-spline-mode-attlist ::= (smil:calcMode::("discrete" | "linear" | "paced" | "spline"))? ;
table-cell-range-source ::= table:cell-range-source::(table-table-cell-range-source-attlist table-linked-source-attlist) ;
draw-connector-attlist ::= (draw:type::("standard" | "lines" | "line" | "curve"))? ;
 draw-connector-attlist ::= (svg:x1::coordinate svg:y1::coordinate)? ;
 draw-connector-attlist ::= (draw:start-shape::IDREF)? ;
 draw-connector-attlist ::= (draw:start-glue-point::nonNegativeInteger)? ;
 draw-connector-attlist ::= (svg:x2::coordinate svg:y2::coordinate)? ;
 draw-connector-attlist ::= (draw:end-shape::IDREF)? ;
 draw-connector-attlist ::= (draw:end-glue-point::nonNegativeInteger)? ;
 draw-connector-attlist ::= (draw:line-skew::(length (length length?)?))? ;
table-highlighted-range-attlist ::= (table:cell-range-address::cellRangeAddress)? ;
 table-highlighted-range-attlist ::= table:direction::("from-another-table" | "to-another-table" | "from-same-table") ;
 table-highlighted-range-attlist ::= (table:contains-error::boolean)? ;
button-type ::= (form:button-type::types)? ;
table-null-date ::= table:null-date::((table:value-type::valueType)? (table:date-value::date)?) ;
svg-definition-src ::= svg:definition-src::common-svg-font-face-xlink-attlist ;
style-master-page-attlist ::= style:name::styleName ;
 style-master-page-attlist ::= (style:display-name::string)? ;
 style-master-page-attlist ::= style:page-layout-name::styleNameRef ;
 style-master-page-attlist ::= (draw:style-name::styleNameRef)? ;
 style-master-page-attlist ::= (style:next-style-name::styleNameRef)? ;
text-user-index ::= text:user-index::(sectionAttr text-user-index-source text-index-body) ;
number-month-attlist ::= (number:textual::boolean)? ;
 number-month-attlist ::= (number:possessive-form::boolean)? ;
 number-month-attlist ::= (number:style::("short" | "long"))? ;
chart-data-point-attlist ::= (chart:repeated::nonNegativeInteger)? ;
 chart-data-point-attlist ::= (chart:style-name::styleNameRef)? ;
text-index-entry-bibliography-attrs ::= (text:style-name::styleNameRef)? ;
 text-index-entry-bibliography-attrs ::= text:bibliography-data-field::("address" | "annote" | "author" | "bibliography-type" | "booktitle" | "chapter" | "custom1" | "custom2" | "custom3" | "custom4" | "custom5" | "edition" | "editor" | "howpublished" | "identifier" | "institution" | "isbn" | "issn" | "journal" | "month" | "note" | "number" | "organizations" | "pages" | "publisher" | "report-type" | "school" | "series" | "title" | "url" | "volume" | "year") ;
draw-marker ::= draw:marker::(draw-marker-attlist common-draw-viewbox-attlist common-draw-path-data-attlist) ;
common-data-style-attlist ::= style:name::styleName ;
 common-data-style-attlist ::= (number:language::languageCode)? ;
 common-data-style-attlist ::= (number:country::countryCode)? ;
 common-data-style-attlist ::= (number:title::string())? ;
 common-data-style-attlist ::= (style:volatile::boolean)? ;
 common-data-style-attlist ::= (number:transliteration-format::string)? ;
 common-data-style-attlist ::= (number:transliteration-language::countryCode)? ;
 common-data-style-attlist ::= (number:transliteration-country::countryCode)? ;
 common-data-style-attlist ::= (number:transliteration-style::("short" | "medium" | "long"))? ;
table-database-source-table-attlist ::= table:database-name::string ;
 table-database-source-table-attlist ::= table:database-table-name::string ;
dr3d-scene ::= dr3d:scene::(dr3d-scene-attlist common-draw-position-attlist common-draw-size-attlist common-draw-style-name-attlist common-draw-z-index-attlist common-draw-id-attlist common-draw-layer-name-attlist common-text-spreadsheet-shape-attlist common-dr3d-transform-attlist common-draw-caption-id-attlist svg-title? svg-desc? dr3d-light* shapes3d*) ;
dc-creator ::= dc:creator::string ;
image-data ::= (form:image-data::anyURI)? ;
chart-legend ::= chart:legend::chart-legend-attlist ;
number-scientific-number-attlist ::= (number:min-exponent-digits::integer)? ;
text-section-source-attr ::= (xlink:href::anyURI (xlink:type::"simple")? (xlink:show::"embed")?)? ;
 text-section-source-attr ::= (text:section-name::string)? ;
 text-section-source-attr ::= (text:filter-name::string)? ;
office-annotation-attlist ::= (office:display::boolean)? ;
common-dr3d-transform-attlist ::= (dr3d:transform::string())? ;
number-era ::= number:era::(number-era-attlist common-calendar-attlist) ;
dr3d-scene-attlist ::= (dr3d:vrp::vector3D)? (dr3d:vpn::vector3D)? (dr3d:vup::vector3D)? ;
 dr3d-scene-attlist ::= (dr3d:projection::("parallel" | "perspective"))? ;
 dr3d-scene-attlist ::= (dr3d:distance::length)? ;
 dr3d-scene-attlist ::= (dr3d:focal-length::length)? ;
 dr3d-scene-attlist ::= (dr3d:shadow-slant::nonNegativeInteger)? ;
 dr3d-scene-attlist ::= (dr3d:shade-mode::("flat" | "phong" | "gouraud" | "draft"))? ;
 dr3d-scene-attlist ::= (dr3d:ambient-color::color)? ;
 dr3d-scene-attlist ::= (dr3d:lighting-mode::boolean)? ;
draw-rect ::= draw:rect::(draw-rect-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text) ;
text-changed-region ::= text:changed-region::(text-changed-region-attr text-changed-region-content) ;
text-alphabetical-index-source ::= text:alphabetical-index-source::(text-alphabetical-index-source-attrs text-index-title-template? text-alphabetical-index-entry-template*) ;
common-draw-z-index-attlist ::= (draw:z-index::nonNegativeInteger)? ;
for ::= (form:for::string)? ;
table-dependencies ::= table:dependencies::(table-dependency+) ;
chart-grid-attlist ::= (chart:class::("major" | "minor"))? ;
 chart-grid-attlist ::= (chart:style-name::styleNameRef)? ;
table-target-range-address ::= table:target-range-address::common-table-range-attlist ;
style-graphic-properties-attlist ::= (draw:stroke::("none" | "dash" | "solid"))? ;
 style-graphic-properties-attlist ::= (draw:stroke-dash::styleNameRef)? ;
 style-graphic-properties-attlist ::= (draw:stroke-dash-names::styleNameRefs)? ;
 style-graphic-properties-attlist ::= (svg:stroke-width::length)? ;
 style-graphic-properties-attlist ::= (svg:stroke-color::color)? ;
 style-graphic-properties-attlist ::= (draw:marker-start::styleNameRef)? ;
 style-graphic-properties-attlist ::= (draw:marker-end::styleNameRef)? ;
 style-graphic-properties-attlist ::= (draw:marker-start-width::length)? ;
 style-graphic-properties-attlist ::= (draw:marker-end-width::length)? ;
 style-graphic-properties-attlist ::= (draw:marker-start-center::boolean)? ;
 style-graphic-properties-attlist ::= (draw:marker-end-center::boolean)? ;
 style-graphic-properties-attlist ::= (svg:stroke-opacity::(string() | percent))? ;
 style-graphic-properties-attlist ::= (draw:stroke-linejoin::("miter" | "round" | "bevel" | "middle" | "none" | "inherit"))? ;
 style-graphic-properties-attlist ::= (draw:symbol-color::color)? ;
 style-graphic-properties-attlist ::= (text:animation::("none" | "scroll" | "alternate" | "slide"))? ;
 style-graphic-properties-attlist ::= (text:animation-direction::("left" | "right" | "up" | "down"))? ;
 style-graphic-properties-attlist ::= (text:animation-start-inside::boolean)? ;
 style-graphic-properties-attlist ::= (text:animation-stop-inside::boolean)? ;
 style-graphic-properties-attlist ::= (text:animation-repeat::nonNegativeInteger)? ;
 style-graphic-properties-attlist ::= (text:animation-delay::duration)? ;
 style-graphic-properties-attlist ::= (text:animation-steps::length)? ;
 style-graphic-properties-attlist ::= (draw:auto-grow-width::boolean)? (draw:auto-grow-height::boolean)? ;
 style-graphic-properties-attlist ::= (draw:fit-to-size::boolean)? ;
 style-graphic-properties-attlist ::= (draw:fit-to-contour::boolean)? ;
 style-graphic-properties-attlist ::= (draw:textarea-vertical-align::("top" | "middle" | "bottom" | "justify"))? ;
 style-graphic-properties-attlist ::= (draw:textarea-horizontal-align::("left" | "center" | "right" | "justify"))? ;
 style-graphic-properties-attlist ::= (fo:wrap-option::("no-wrap" | "wrap"))? ;
 style-graphic-properties-attlist ::= (draw:color-mode::("greyscale" | "mono" | "watermark" | "standard"))? ;
 style-graphic-properties-attlist ::= (draw:color-inversion::boolean)? ;
 style-graphic-properties-attlist ::= (draw:luminance::percent)? ;
 style-graphic-properties-attlist ::= (draw:contrast::percent)? ;
 style-graphic-properties-attlist ::= (draw:gamma::percent)? ;
 style-graphic-properties-attlist ::= (draw:red::percent)? ;
 style-graphic-properties-attlist ::= (draw:green::percent)? ;
 style-graphic-properties-attlist ::= (draw:blue::percent)? ;
 style-graphic-properties-attlist ::= (draw:image-opacity::percent)? ;
 style-graphic-properties-attlist ::= (draw:shadow::("visible" | "hidden"))? ;
 style-graphic-properties-attlist ::= (draw:shadow-offset-x::length)? (draw:shadow-offset-y::length)? ;
 style-graphic-properties-attlist ::= (draw:shadow-color::color)? ;
 style-graphic-properties-attlist ::= (draw:shadow-opacity::percent)? ;
 style-graphic-properties-attlist ::= (draw:start-line-spacing-horizontal::distance)? (draw:start-line-spacing-vertical::distance)? ;
 style-graphic-properties-attlist ::= (draw:end-line-spacing-horizontal::distance)? (draw:end-line-spacing-vertical::distance)? ;
 style-graphic-properties-attlist ::= (draw:line-distance::distance)? ;
 style-graphic-properties-attlist ::= (draw:guide-overhang::length)? ;
 style-graphic-properties-attlist ::= (draw:guide-distance::distance)? ;
 style-graphic-properties-attlist ::= (draw:start-guide::length)? ;
 style-graphic-properties-attlist ::= (draw:end-guide::length)? ;
 style-graphic-properties-attlist ::= (draw:placing::("below" | "above"))? ;
 style-graphic-properties-attlist ::= (draw:parallel::boolean)? ;
 style-graphic-properties-attlist ::= (draw:measure-align::("automatic" | "left-outside" | "inside" | "right-outside"))? (draw:measure-vertical-align::("automatic" | "above" | "below" | "center"))? ;
 style-graphic-properties-attlist ::= (draw:unit::("automatic" | "mm" | "cm" | "m" | "km" | "pt" | "pc" | "inch" | "ft" | "mi"))? ;
 style-graphic-properties-attlist ::= (draw:show-unit::boolean)? ;
 style-graphic-properties-attlist ::= (draw:decimal-places::nonNegativeInteger)? ;
 style-graphic-properties-attlist ::= (draw:caption-type::("straight-line" | "angled-line" | "angled-connector-line"))? ;
 style-graphic-properties-attlist ::= (draw:caption-angle-type::("fixed" | "free"))? ;
 style-graphic-properties-attlist ::= (draw:caption-angle::nonNegativeInteger)? ;
 style-graphic-properties-attlist ::= (draw:caption-gap::distance)? ;
 style-graphic-properties-attlist ::= (draw:caption-escape-direction::("horizontal" | "vertical" | "auto"))? ;
 style-graphic-properties-attlist ::= (draw:caption-escape::(length | percent))? ;
 style-graphic-properties-attlist ::= (draw:caption-line-length::length)? ;
 style-graphic-properties-attlist ::= (draw:caption-fit-line-length::boolean)? ;
 style-graphic-properties-attlist ::= (dr3d:horizontal-segments::nonNegativeInteger)? ;
 style-graphic-properties-attlist ::= (dr3d:vertical-segments::nonNegativeInteger)? ;
 style-graphic-properties-attlist ::= (dr3d:edge-rounding::percent)? ;
 style-graphic-properties-attlist ::= (dr3d:edge-rounding-mode::("correct" | "attractive"))? ;
 style-graphic-properties-attlist ::= (dr3d:back-scale::percent)? ;
 style-graphic-properties-attlist ::= (dr3d:depth::length)? ;
 style-graphic-properties-attlist ::= (dr3d:backface-culling::("enabled" | "disabled"))? ;
 style-graphic-properties-attlist ::= (dr3d:end-angle::nonNegativeInteger)? ;
 style-graphic-properties-attlist ::= (dr3d:close-front::boolean)? ;
 style-graphic-properties-attlist ::= (dr3d:close-back::boolean)? ;
 style-graphic-properties-attlist ::= (dr3d:lighting-mode::("standard" | "double-sided"))? ;
 style-graphic-properties-attlist ::= (dr3d:normals-kind::("object" | "flat" | "sphere"))? ;
 style-graphic-properties-attlist ::= (dr3d:normals-direction::("normal" | "inverse"))? ;
 style-graphic-properties-attlist ::= (dr3d:texture-generation-mode-x::("object" | "parallel" | "sphere"))? (dr3d:texture-generation-mode-y::("object" | "parallel" | "sphere"))? ;
 style-graphic-properties-attlist ::= (dr3d:texture-kind::("luminance" | "intensity" | "color"))? ;
 style-graphic-properties-attlist ::= (dr3d:texture-filter::("enabled" | "disabled"))? ;
 style-graphic-properties-attlist ::= (dr3d:texture-mode::("replace" | "modulate" | "blend"))? ;
 style-graphic-properties-attlist ::= (dr3d:ambient-color::color)? (dr3d:emissive-color::color)? (dr3d:specular-color::color)? (dr3d:diffuse-color::color)? ;
 style-graphic-properties-attlist ::= (dr3d:shininess::percent)? ;
 style-graphic-properties-attlist ::= (dr3d:shadow::("visible" | "hidden"))? ;
 style-graphic-properties-attlist ::= common-draw-rel-size-attlist (fo:min-width::(length | percent))? ;
 style-graphic-properties-attlist ::= (fo:min-height::(length | percent))? ;
 style-graphic-properties-attlist ::= (fo:max-height::(length | percent))? (fo:max-width::(length | percent))? ;
 style-graphic-properties-attlist ::= common-horizontal-margin-attlist ;
 style-graphic-properties-attlist ::= common-vertical-margin-attlist ;
 style-graphic-properties-attlist ::= common-margin-attlist ;
 style-graphic-properties-attlist ::= (style:print-content::boolean)? ;
 style-graphic-properties-attlist ::= (style:protect::("none" | (("content" | "position" | "size")+)))? ;
 style-graphic-properties-attlist ::= (style:horizontal-pos::("left" | "center" | "right" | "from-left" | "inside" | "outside" | "from-inside"))? (svg:x::coordinate)? ;
 style-graphic-properties-attlist ::= (style:horizontal-rel::("page" | "page-content" | "page-start-margin" | "page-end-margin" | "frame" | "frame-content" | "frame-start-margin" | "frame-end-margin" | "paragraph" | "paragraph-content" | "paragraph-start-margin" | "paragraph-end-margin" | "char"))? ;
 style-graphic-properties-attlist ::= common-vertical-pos-attlist ;
 style-graphic-properties-attlist ::= common-vertical-rel-attlist ;
 style-graphic-properties-attlist ::= common-text-anchor-attlist ;
 style-graphic-properties-attlist ::= common-border-attlist ;
 style-graphic-properties-attlist ::= common-border-line-width-attlist ;
 style-graphic-properties-attlist ::= common-padding-attlist ;
 style-graphic-properties-attlist ::= common-shadow-attlist ;
 style-graphic-properties-attlist ::= common-background-color-attlist ;
 style-graphic-properties-attlist ::= (style:editable::boolean)? ;
 style-graphic-properties-attlist ::= (style:wrap::("none" | "left" | "right" | "parallel" | "dynamic" | "run-through" | "biggest"))? ;
 style-graphic-properties-attlist ::= (style:wrap-dynamic-threshold::nonNegativeLength)? ;
 style-graphic-properties-attlist ::= (style:number-wrapped-paragraphs::("no-limit" | positiveInteger))? ;
 style-graphic-properties-attlist ::= (style:wrap-contour::boolean)? ;
 style-graphic-properties-attlist ::= (style:wrap-contour-mode::("full" | "outside"))? ;
 style-graphic-properties-attlist ::= (style:run-through::("foreground" | "background"))? ;
 style-graphic-properties-attlist ::= (style:flow-with-text::boolean)? ;
 style-graphic-properties-attlist ::= (style:overflow-behavior::("clip" | "auto-create-new-frame"))? ;
 style-graphic-properties-attlist ::= (style:mirror::("none" | "vertical" | horizontal-mirror | ("vertical" horizontal-mirror) | (horizontal-mirror "vertical")))? ;
 style-graphic-properties-attlist ::= (fo:clip::string)? ;
 style-graphic-properties-attlist ::= (draw:wrap-influence-on-position::("iterative" | "once-concurrent" | "once-successive"))? ;
 style-graphic-properties-attlist ::= common-writing-mode-attlist ;
 style-graphic-properties-attlist ::= (draw:frame-display-scrollbar::boolean)? ;
 style-graphic-properties-attlist ::= (draw:frame-display-border::boolean)? ;
 style-graphic-properties-attlist ::= (draw:frame-margin-horizontal::nonNegativePixelLength)? (draw:frame-margin-vertical::nonNegativePixelLength)? ;
 style-graphic-properties-attlist ::= (draw:visible-area-left::nonNegativeLength)? (draw:visible-area-top::nonNegativeLength)? (draw:visible-area-width::positiveLength)? (draw:visible-area-height::positiveLength)? ;
 style-graphic-properties-attlist ::= (draw:ole-draw-aspect::nonNegativeInteger)? ;
office-font-face-decls ::= (office:font-face-decls::(style-font-face*))? ;
office-document-styles ::= office:document-styles::(office-document-common-attrs office-font-face-decls office-styles office-automatic-styles office-master-styles) ;
table-subtotal-field-attlist ::= table:field-number::nonNegativeInteger ;
 table-subtotal-field-attlist ::= table:function::("auto" | "average" | "count" | "countnums" | "max" | "min" | "product" | "stdev" | "stdevp" | "sum" | "var" | "varp" | string) ;
text-hidden-text-attlist ::= text:condition::formula ;
 text-hidden-text-attlist ::= text:string-value::string ;
 text-hidden-text-attlist ::= (text:is-hidden::boolean)? ;
form-property ::= form:property::(form-property-name form-property-value-and-type-attlist) ;
 form-property ::= form:list-property::(form-property-name form-property-type-and-value-list) ;
table-named-expression-attlist ::= table:name::string table:expression::string (table:base-cell-address::cellAddress)? ;
script-event-listener-attlist ::= script:event-name::string ;
 script-event-listener-attlist ::= script:language::string ;
 script-event-listener-attlist ::= (script:macro-name::string) | (xlink:href::anyURI (xlink:type::"simple")? (xlink:actuate::"onRequest")?) ;
text-variable-decl ::= text:variable-decl::(common-field-name-attlist common-value-type-attlist) ;
draw-fill-image ::= draw:fill-image::(draw-fill-image-attlist xlink:href::anyURI (xlink:type::"simple")? (xlink:show::"embed")? (xlink:actuate::"onLoad")?) ;
office-document-content ::= office:document-content::(office-document-common-attrs office-scripts office-font-face-decls office-automatic-styles office-body) ;
anim-animate-transform-attlist ::= svg:type::("translate" | "scale" | "rotate" | "skewX" | "skewY") ;
draw-param-attlist ::= (draw:name::string())? ;
 draw-param-attlist ::= (draw:value::string())? ;
common-begin-end-timing-attlist ::= (smil:begin::string)? ;
 common-begin-end-timing-attlist ::= (smil:end::string)? ;
common-presentation-effect-attlist ::= draw:shape-id::IDREF ;
 common-presentation-effect-attlist ::= (presentation:effect::presentationEffects)? ;
 common-presentation-effect-attlist ::= (presentation:direction::presentationEffectDirections)? ;
 common-presentation-effect-attlist ::= (presentation:speed::presentationSpeeds)? ;
 common-presentation-effect-attlist ::= (presentation:delay::duration)? ;
 common-presentation-effect-attlist ::= (presentation:start-scale::percent)? ;
 common-presentation-effect-attlist ::= (presentation:path-id::string())? ;
style-columns-attlist ::= fo:column-count::positiveInteger ;
 style-columns-attlist ::= (fo:column-gap::length)? ;
text-a-attlist ::= (office:name::string)? ;
 text-a-attlist ::= (office:title::string)? ;
 text-a-attlist ::= xlink:href::anyURI (xlink:type::"simple")? (xlink:actuate::"onRequest")? ;
 text-a-attlist ::= (office:target-frame-name::targetFrameName)? (xlink:show::("new" | "replace"))? ;
 text-a-attlist ::= (text:style-name::styleNameRef)? (text:visited-style-name::styleNameRef)? ;
config-config-item ::= config:config-item::(config-config-item-attlist string()) ;
table-first-column ::= table:first-column::common-table-template-attlist ;
anim-iterate-attlist ::= common-anim-target-attlist ;
 anim-iterate-attlist ::= (anim:iterate-type::string)? ;
 anim-iterate-attlist ::= (anim:iterate-interval::duration)? ;
style-graphic-fill-properties-attlist ::= (draw:fill::("none" | "solid" | "bitmap" | "gradient" | "hatch"))? ;
 style-graphic-fill-properties-attlist ::= (draw:fill-color::color)? ;
 style-graphic-fill-properties-attlist ::= (draw:secondary-fill-color::color)? ;
 style-graphic-fill-properties-attlist ::= (draw:fill-gradient-name::styleNameRef)? ;
 style-graphic-fill-properties-attlist ::= (draw:gradient-step-count::nonNegativeInteger)? ;
 style-graphic-fill-properties-attlist ::= (draw:fill-hatch-name::styleNameRef)? ;
 style-graphic-fill-properties-attlist ::= (draw:fill-hatch-solid::boolean)? ;
 style-graphic-fill-properties-attlist ::= (draw:fill-image-name::styleNameRef)? ;
 style-graphic-fill-properties-attlist ::= (style:repeat::("no-repeat" | "repeat" | "stretch"))? ;
 style-graphic-fill-properties-attlist ::= (draw:fill-image-width::(length | percent))? (draw:fill-image-height::(length | percent))? ;
 style-graphic-fill-properties-attlist ::= (draw:fill-image-ref-point-x::percent)? (draw:fill-image-ref-point-y::percent)? (draw:fill-image-ref-point::("top-left" | "top" | "top-right" | "left" | "center" | "right" | "bottom-left" | "bottom" | "bottom-right"))? ;
 style-graphic-fill-properties-attlist ::= (draw:tile-repeat-offset::string())? ;
 style-graphic-fill-properties-attlist ::= (draw:opacity::percent)? ;
 style-graphic-fill-properties-attlist ::= (draw:opacity-name::styleNameRef)? ;
 style-graphic-fill-properties-attlist ::= (svg:fill-rule::("nonzero" | "evenodd"))? ;
common-draw-rel-size-attlist ::= common-draw-size-attlist (style:rel-width::(percent | "scale" | "scale-min"))? (style:rel-height::(percent | "scale" | "scale-min"))? ;
table-cut-offs ::= table:cut-offs::((table-movement-cut-off+) | (table-insertion-cut-off table-movement-cut-off*)) ;
dr3d-sphere-attlist ::= (dr3d:center::vector3D)? ;
 dr3d-sphere-attlist ::= (dr3d:size::vector3D)? ;
draw-fill-image-attlist ::= draw:name::styleName ;
 draw-fill-image-attlist ::= (draw:display-name::string)? ;
 draw-fill-image-attlist ::= (svg:width::length)? (svg:height::length)? ;
common-dur-timing-attlist ::= (smil:dur::string)? ;
chart-mean-value-attlist ::= (chart:style-name::styleNameRef)? ;
style-text-properties-attlist ::= (fo:font-variant::fontVariant)? ;
 style-text-properties-attlist ::= (fo:text-transform::("none" | "lowercase" | "uppercase" | "capitalize"))? ;
 style-text-properties-attlist ::= (fo:color::color)? ;
 style-text-properties-attlist ::= (style:use-window-font-color::boolean)? ;
 style-text-properties-attlist ::= (style:text-outline::boolean)? ;
 style-text-properties-attlist ::= (style:text-line-through-type::lineType)? ;
 style-text-properties-attlist ::= (style:text-line-through-style::lineStyle)? ;
 style-text-properties-attlist ::= (style:text-line-through-width::lineWidth)? ;
 style-text-properties-attlist ::= (style:text-line-through-color::("font-color" | color))? ;
 style-text-properties-attlist ::= (style:text-line-through-text::string)? ;
 style-text-properties-attlist ::= (style:text-line-through-text-style::styleNameRef)? ;
 style-text-properties-attlist ::= (style:text-position::(percent | "super" | "sub" percent?))? ;
 style-text-properties-attlist ::= (style:font-name::string)? (style:font-name-asian::string)? (style:font-name-complex::string)? ;
 style-text-properties-attlist ::= (fo:font-family::string)? (style:font-family-asian::string)? (style:font-family-complex::string)? ;
 style-text-properties-attlist ::= (style:font-family-generic::fontFamilyGeneric)? (style:font-family-generic-asian::fontFamilyGeneric)? (style:font-family-generic-complex::fontFamilyGeneric)? ;
 style-text-properties-attlist ::= (style:font-style-name::string)? (style:font-style-name-asian::string)? (style:font-style-name-complex::string)? ;
 style-text-properties-attlist ::= (style:font-pitch::fontPitch)? (style:font-pitch-asian::fontPitch)? (style:font-pitch-complex::fontPitch)? ;
 style-text-properties-attlist ::= (style:font-charset::textEncoding)? (style:font-charset-asian::textEncoding)? (style:font-charset-complex::textEncoding)? ;
 style-text-properties-attlist ::= (fo:font-size::(positiveLength | percent))? (style:font-size-asian::(positiveLength | percent))? (style:font-size-complex::(positiveLength | percent))? ;
 style-text-properties-attlist ::= (style:font-size-rel::length)? (style:font-size-rel-asian::length)? (style:font-size-rel-complex::length)? ;
 style-text-properties-attlist ::= (style:script-type::("latin" | "asian" | "complex" | "ignore"))? ;
 style-text-properties-attlist ::= (fo:letter-spacing::(length | "normal"))? ;
 style-text-properties-attlist ::= (fo:language::languageCode)? (style:language-asian::languageCode)? (style:language-complex::languageCode)? ;
 style-text-properties-attlist ::= (fo:country::countryCode)? (style:country-asian::countryCode)? (style:country-complex::countryCode)? ;
 style-text-properties-attlist ::= (fo:font-style::fontStyle)? (style:font-style-asian::fontStyle)? (style:font-style-complex::fontStyle)? ;
 style-text-properties-attlist ::= (style:font-relief::("none" | "embossed" | "engraved"))? ;
 style-text-properties-attlist ::= (fo:text-shadow::shadowType)? ;
 style-text-properties-attlist ::= (style:text-underline-type::lineType)? ;
 style-text-properties-attlist ::= (style:text-underline-style::lineStyle)? ;
 style-text-properties-attlist ::= (style:text-underline-width::lineWidth)? ;
 style-text-properties-attlist ::= (style:text-underline-color::("font-color" | color))? ;
 style-text-properties-attlist ::= (fo:font-weight::fontWeight)? (style:font-weight-asian::fontWeight)? (style:font-weight-complex::fontWeight)? ;
 style-text-properties-attlist ::= (style:text-underline-mode::lineMode)? ;
 style-text-properties-attlist ::= (style:text-line-through-mode::lineMode)? ;
 style-text-properties-attlist ::= (style:letter-kerning::boolean)? ;
 style-text-properties-attlist ::= (style:text-blinking::boolean)? ;
 style-text-properties-attlist ::= common-background-color-attlist ;
 style-text-properties-attlist ::= (style:text-combine::("none" | "letters" | "lines"))? ;
 style-text-properties-attlist ::= (style:text-combine-start-char::character)? (style:text-combine-end-char::character)? ;
 style-text-properties-attlist ::= (style:text-emphasize::("none" | ("none" | "accent" | "dot" | "circle" | "disc" "above" | "below")))? ;
 style-text-properties-attlist ::= (style:text-scale::percent)? ;
 style-text-properties-attlist ::= (style:text-rotation-angle::integer)? ;
 style-text-properties-attlist ::= (style:text-rotation-scale::("fixed" | "line-height"))? ;
 style-text-properties-attlist ::= (fo:hyphenate::boolean)? ;
 style-text-properties-attlist ::= (fo:hyphenation-remain-char-count::positiveInteger)? ;
 style-text-properties-attlist ::= (fo:hyphenation-push-char-count::positiveInteger)? ;
 style-text-properties-attlist ::= (text:display::"true") | (text:display::"none") | (text:display::"condition" text:condition::"none") | ε ;
presentation-header-decl-attlist ::= presentation:name::string ;
number-time-style-attlist ::= (number:truncate-on-overflow::boolean)? ;
office-dde-source-attlist ::= (office:name::string)? ;
 office-dde-source-attlist ::= (office:conversion-mode::("into-default-style-data-style" | "into-english-number" | "keep-text"))? ;
text-object-index-source ::= text:object-index-source::(text-object-index-source-attrs text-index-title-template? text-object-index-entry-template?) ;
text-dde-connection-decl-attlist ::= office:name::string ;
text-section-source ::= text:section-source::text-section-source-attr ;
draw-image-map ::= draw:image-map::((draw-area-rectangle | draw-area-circle | draw-area-polygon)*) ;
table-data-pilot-group-member ::= table:data-pilot-group-member::table-data-pilot-group-member-attlist ;
office-meta-data ::= meta:generator::string ;
 office-meta-data ::= dc:title::string ;
 office-meta-data ::= dc:description::string ;
 office-meta-data ::= dc:subject::string ;
 office-meta-data ::= meta:keyword::string ;
 office-meta-data ::= meta:initial-creator::string ;
 office-meta-data ::= dc-creator ;
 office-meta-data ::= meta:printed-by::string ;
 office-meta-data ::= meta:creation-date::dateTime ;
 office-meta-data ::= dc-date ;
 office-meta-data ::= meta:print-date::dateTime ;
 office-meta-data ::= meta:template::(xlink:href::anyURI (xlink:type::"simple")? (xlink:actuate::"onRequest")? (xlink:title::string)? (meta:date::dateTime)?) ;
 office-meta-data ::= meta:auto-reload::((xlink:type::"simple")? (xlink:show::"replace")? (xlink:actuate::"onLoad")? (xlink:href::anyURI)? (meta:delay::duration)?) ;
 office-meta-data ::= meta:hyperlink-behaviour::((office:target-frame-name::targetFrameName)? (xlink:show::("new" | "replace"))?) ;
 office-meta-data ::= dc:language::language ;
 office-meta-data ::= meta:editing-cycles::nonNegativeInteger ;
 office-meta-data ::= meta:editing-duration::duration ;
 office-meta-data ::= meta:document-statistic::((meta:page-count::nonNegativeInteger)? (meta:table-count::nonNegativeInteger)? (meta:draw-count::nonNegativeInteger)? (meta:image-count::nonNegativeInteger)? (meta:ole-object-count::nonNegativeInteger)? (meta:object-count::nonNegativeInteger)? (meta:paragraph-count::nonNegativeInteger)? (meta:word-count::nonNegativeInteger)? (meta:character-count::nonNegativeInteger)? (frame-count::nonNegativeInteger)? (sentence-count::nonNegativeInteger)? (syllable-count::nonNegativeInteger)? (non-whitespace-character-count::nonNegativeInteger)? (meta:row-count::nonNegativeInteger)? (meta:cell-count::nonNegativeInteger)?) ;
 office-meta-data ::= meta:user-defined::(meta:name::string (meta:value-type::"float" double) | (meta:value-type::"date" dateOrDateTime) | (meta:value-type::"time" duration) | (meta:value-type::"boolean" boolean) | (meta:value-type::"string" string) | string()) ;
office-document-attrs ::= office:mimetype::string ;
draw-enhanced-geometry ::= draw:enhanced-geometry::(draw-enhanced-geometry-attlist draw-equation* draw-handle*) ;
text-bibliography-entry-template ::= text:bibliography-entry-template::(text-bibliography-entry-template-attrs (text-index-entry-span | text-index-entry-tab-stop | text-index-entry-bibliography)*) ;
style-region-right ::= style:region-right::region-content ;
table-data-pilot-field-reference ::= table:data-pilot-field-reference::table-data-pilot-field-reference-attlist ;
text-ref-content ::= (text:reference-format::("page" | "chapter" | "direction" | "text"))? ;
text-chapter-attlist ::= text:display::("name" | "number" | "number-and-name" | "plain-number-and-name" | "plain-number") ;
 text-chapter-attlist ::= text:outline-level::nonNegativeInteger ;
text-page-sequence ::= text:page-sequence::(text-page+) ;
form-checkbox-attlist ::= form-control-attlist common-disabled-attlist label common-printable-attlist common-tab-attlist common-title-attlist common-value-attlist common-data-field-attlist common-form-visual-effect-attlist common-form-relative-image-position-attlist ;
 form-checkbox-attlist ::= (form:current-state::states)? ;
 form-checkbox-attlist ::= (form:is-tristate::boolean)? ;
 form-checkbox-attlist ::= (form:state::states)? ;
draw-layer-set ::= draw:layer-set::(draw-layer*) ;
text-hidden-paragraph-attlist ::= text:condition::formula ;
 text-hidden-paragraph-attlist ::= (text:is-hidden::boolean)? ;
common-draw-points-attlist ::= draw:points::points ;
presentation-sound ::= presentation:sound::(presentation-sound-attlist xlink:href::anyURI (xlink:type::"simple")? (xlink:actuate::"onRequest")? (xlink:show::("new" | "replace"))?) ;
chart-error-indicator ::= chart:error-indicator::chart-error-indicator-attlist ;
chart-title-attlist ::= (table:cell-range::cellAddress)? ;
 chart-title-attlist ::= common-draw-position-attlist ;
 chart-title-attlist ::= (chart:style-name::styleNameRef)? ;
style-background-image ::= (style:background-image::(style-background-image-attlist common-draw-data-attlist | office-binary-data | ε))? ;
dr3d-cube-attlist ::= (dr3d:min-edge::vector3D)? (dr3d:max-edge::vector3D)? ;
form-property-type-and-value-list ::= (office:value-type::"float" (form:list-value::(office:value::double))*) | (office:value-type::"percentage" (form:list-value::(office:value::double))*) | (office:value-type::"currency" (form:list-value::(office:value::double (office:currency::string)?))*) | (office:value-type::"date" (form:list-value::(office:date-value::dateOrDateTime))*) | (office:value-type::"time" (form:list-value::(office:time-value::duration))*) | (office:value-type::"boolean" (form:list-value::(office:boolean-value::boolean))*) | (office:value-type::"string" (form:list-value::(office:string-value::string))*) | (office:value-type::"void") ;
xforms-model ::= xforms:model::anyAttListOrElements ;
table-dde-links ::= table:dde-links::(table-dde-link+) ;
style-drop-cap ::= (style:drop-cap::style-drop-cap-attlist)? ;
draw-floating-frame ::= draw:floating-frame::(draw-floating-frame-attlist common-draw-data-attlist) ;
common-writing-mode-attlist ::= (style:writing-mode::("lr-tb" | "rl-tb" | "tb-rl" | "tb-lr" | "lr" | "rl" | "tb" | "page"))? ;
text-illustration-index-source-attrs ::= text-index-scope-attr ;
 text-illustration-index-source-attrs ::= text-relative-tab-stop-position-attr ;
 text-illustration-index-source-attrs ::= (text:use-caption::boolean)? ;
 text-illustration-index-source-attrs ::= (text:caption-sequence-name::string)? ;
 text-illustration-index-source-attrs ::= (text:caption-sequence-format::("text" | "category-and-value" | "caption"))? ;
xforms-bind-attlist ::= (xforms:bind::string)? ;
draw-opacity ::= draw:opacity::(common-draw-gradient-attlist draw-opacity-attlist) ;
table-linked-source-attlist ::= (xlink:type::"simple")? (xlink:actuate::"onRequest")? xlink:href::anyURI ;
 table-linked-source-attlist ::= (table:filter-name::string)? ;
 table-linked-source-attlist ::= (table:filter-options::string)? ;
 table-linked-source-attlist ::= (table:refresh-delay::duration)? ;
form-column ::= form:column::(form-column-attlist column-controls+) ;
table-data-pilot-groups-attlist ::= table:source-field-name::string ;
 table-data-pilot-groups-attlist ::= (table:date-start::(dateOrDateTime | "auto")) | (table:start::(double | "auto")) ;
 table-data-pilot-groups-attlist ::= (table:date-end::(dateOrDateTime | "auto")) | (table:end::(double | "auto")) ;
 table-data-pilot-groups-attlist ::= table:step::double ;
 table-data-pilot-groups-attlist ::= table:grouped-by::("seconds" | "minutes" | "hours" | "days" | "months" | "quarters" | "years") ;
text-outline-level-style ::= text:outline-level-style::(text-outline-level-style-attlist style-list-level-properties? style-text-properties?) ;
table-data-pilot-subtotal ::= table:data-pilot-subtotal::table-data-pilot-subtotal-attlist ;
text-note-class ::= text:note-class::("footnote" | "endnote") ;
text-list-style-attr ::= style:name::styleName ;
 text-list-style-attr ::= (style:display-name::string)? ;
 text-list-style-attr ::= (text:consecutive-numbering::boolean)? ;
common-presentation-header-footer-attlist ::= (presentation:use-header-name::string)? ;
 common-presentation-header-footer-attlist ::= (presentation:use-footer-name::string)? ;
 common-presentation-header-footer-attlist ::= (presentation:use-date-time-name::string)? ;
text-index-source-styles ::= text:index-source-styles::(text:outline-level::positiveInteger text-index-source-style*) ;
text-section-attr ::= sectionAttr ;
 text-section-attr ::= (text:display::("true" | "none")) | (text:display::"condition" text:condition::string) | ε ;
number-day-of-week ::= number:day-of-week::(number-day-of-week-attlist common-calendar-attlist) ;
draw-opacity-attlist ::= (draw:start::percent)? (draw:end::percent)? ;
common-anim-named-target-attlist ::= smil:attributeName::string ;
target-location ::= (xlink:href::anyURI)? ;
current-selected ::= (form:current-selected::boolean)? ;
text-decls ::= (text:variable-decls::(text-variable-decl*))? (text:sequence-decls::(text-sequence-decl*))? (text:user-field-decls::(text-user-field-decl*))? (text:dde-connection-decls::(text-dde-connection-decl*))? text-alphabetical-index-auto-mark-file? ;
office-binary-data ::= office:binary-data::base64Binary ;
table-movement-cut-off ::= table:movement-cut-off::table-movement-cut-off-attlist ;
form-number-attlist ::= (form:value::double)? ;
 form-number-attlist ::= (form:current-value::double)? ;
 form-number-attlist ::= (form:min-value::double)? ;
 form-number-attlist ::= (form:max-value::double)? ;
draw-glue-points-attlist ::= draw:escape-direction::("auto" | "left" | "right" | "up" | "down" | "horizontal" | "vertical") ;
text-list-style ::= text:list-style::(text-list-style-attr text-list-style-content*) ;
text-illustration-index-entry-template-attrs ::= text:style-name::styleNameRef ;
common-dde-connection-decl-attlist ::= office:dde-application::string ;
 common-dde-connection-decl-attlist ::= office:dde-topic::string ;
 common-dde-connection-decl-attlist ::= office:dde-item::string ;
 common-dde-connection-decl-attlist ::= (office:automatic-update::boolean)? ;
text-time-attlist ::= common-field-fixed-attlist common-field-data-style-name-attlist ;
 text-time-attlist ::= (text:time-value::timeOrDateTime)? ;
 text-time-attlist ::= (text:time-adjust::duration)? ;
common-number-attlist ::= (number:min-integer-digits::integer)? ;
 common-number-attlist ::= (number:grouping::boolean)? ;
presentation-footer-decl-attlist ::= presentation:name::string ;
svg-desc ::= svg:desc::string() ;
form-combobox-attlist ::= form-control-attlist common-current-value-attlist common-disabled-attlist dropdown common-maxlength-attlist common-printable-attlist common-readonly-attlist size common-tab-attlist common-title-attlist common-value-attlist common-convert-empty-attlist common-data-field-attlist list-source list-source-type ;
 form-combobox-attlist ::= (form:auto-complete::boolean)? ;
common-page-number-attlist ::= (style:page-number::(positiveInteger | "auto"))? ;
text-database-next-attlist ::= common-field-database-table ;
 text-database-next-attlist ::= (text:condition::formula)? ;
common-vertical-rel-attlist ::= (style:vertical-rel::("page" | "page-content" | "frame" | "frame-content" | "paragraph" | "paragraph-content" | "char" | "line" | "baseline" | "text"))? ;
draw-ellipse ::= draw:ellipse::(common-draw-circle-ellipse-attlist draw-ellipse-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text) ;
common-draw-id-attlist ::= (draw:id::ID)? ;
table-data-pilot-member ::= table:data-pilot-member::table-data-pilot-member-attlist ;
number-currency-symbol ::= number:currency-symbol::(number-currency-symbol-attlist string()) ;
common-field-display-value-formula-none-attlist ::= (text:display::("value" | "formula" | "none"))? ;
common-repeat-timing-attlist ::= (smil:repeatDur::string)? (smil:repeatCount::(nonNegativeInteger | "indefinite"))? ;
form-value-range-attlist ::= form-control-attlist common-disabled-attlist common-printable-attlist common-tab-attlist common-title-attlist common-value-attlist ;
 form-value-range-attlist ::= (form:max-value::string)? ;
 form-value-range-attlist ::= (form:min-value::string)? ;
 form-value-range-attlist ::= (form:step-size::positiveInteger)? ;
 form-value-range-attlist ::= (form:page-step-size::positiveInteger)? ;
 form-value-range-attlist ::= (form:delay-for-repeat::duration)? ;
 form-value-range-attlist ::= (form:orientation::("horizontal" | "vertical"))? ;
number-boolean-style ::= number:boolean-style::(common-data-style-attlist style-text-properties? number-text? (number-boolean number-text?)? style-map*) ;
table-error-macro ::= table:error-macro::((table:execute::boolean)?) ;
config-config-item-set ::= config:config-item-set::(config-config-item-set-attlist config-items) ;
presentation-dim-attlist ::= draw:shape-id::IDREF ;
 presentation-dim-attlist ::= draw:color::color ;
text-bibliography-source ::= text:bibliography-source::(text-index-title-template? text-bibliography-entry-template*) ;
text-sort-key-attlist ::= text:key::("address" | "annote" | "author" | "bibliography-type" | "booktitle" | "chapter" | "custom1" | "custom2" | "custom3" | "custom4" | "custom5" | "edition" | "editor" | "howpublished" | "identifier" | "institution" | "isbn" | "issn" | "journal" | "month" | "note" | "number" | "organizations" | "pages" | "publisher" | "report-type" | "school" | "series" | "title" | "url" | "volume" | "year") (text:sort-ascending::boolean)? ;
style-list-level-properties-attlist ::= common-text-align ;
 style-list-level-properties-attlist ::= (text:space-before::nonNegativeLength)? ;
 style-list-level-properties-attlist ::= (text:min-label-width::nonNegativeLength)? ;
 style-list-level-properties-attlist ::= (text:min-label-distance::nonNegativeLength)? ;
 style-list-level-properties-attlist ::= (style:font-name::string)? ;
 style-list-level-properties-attlist ::= (fo:width::positiveLength)? (fo:height::positiveLength)? ;
 style-list-level-properties-attlist ::= common-vertical-rel-attlist common-vertical-pos-attlist ;
number-year ::= number:year::(number-year-attlist common-calendar-attlist) ;
table-body ::= table:body::common-table-template-attlist ;
text-index-entry-span ::= text:index-entry-span::((text:style-name::styleNameRef)? string()) ;
text-date-attlist ::= common-field-fixed-attlist common-field-data-style-name-attlist ;
 text-date-attlist ::= (text:date-value::dateOrDateTime)? ;
 text-date-attlist ::= (text:date-adjust::duration)? ;
text-user-field-decl ::= text:user-field-decl::(common-field-name-attlist common-field-formula-attlist? common-value-and-type-attlist) ;
table-sort ::= table:sort::(table-sort-attlist table-sort-by+) ;
dc-date ::= dc:date::dateTime ;
text-database-row-select-attlist ::= common-field-database-table ;
 text-database-row-select-attlist ::= (text:condition::formula)? ;
 text-database-row-select-attlist ::= (text:row-number::nonNegativeInteger)? ;
chart-axis ::= chart:axis::(chart-axis-attlist chart-title? chart-categories? chart-grid*) ;
table-database-source-sql ::= table:database-source-sql::table-database-source-sql-attlist ;
draw-custom-shape ::= draw:custom-shape::(draw-custom-shape-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text draw-enhanced-geometry?) ;
form-form ::= form:form::(common-form-control-attlist form-form-attlist form-properties? office-event-listeners? (controls | form-form)* form-connection-resource?) ;
common-table-cell-range-address-attlist ::= table:start-column::integer table:start-row::integer table:start-table::integer table:end-column::integer table:end-row::integer table:end-table::integer ;
list-source ::= (form:list-source::string)? ;
common-draw-gradient-attlist ::= (draw:name::styleName)? ;
 common-draw-gradient-attlist ::= (draw:display-name::string)? ;
 common-draw-gradient-attlist ::= draw:style::gradient-style ;
 common-draw-gradient-attlist ::= (draw:cx::percent)? (draw:cy::percent)? ;
 common-draw-gradient-attlist ::= (draw:angle::integer)? ;
 common-draw-gradient-attlist ::= (draw:border::percent)? ;
draw-polyline ::= draw:polyline::(common-draw-points-attlist common-draw-position-attlist common-draw-size-attlist common-draw-viewbox-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text) ;
text-numbered-paragraph ::= text:numbered-paragraph::(text-numbered-paragraph-attr text-number? text-p | text-h) ;
text-list-level-style-bullet-attr ::= (text:style-name::styleNameRef)? ;
 text-list-level-style-bullet-attr ::= text:bullet-char::character ;
 text-list-level-style-bullet-attr ::= common-num-format-prefix-suffix-attlist ;
 text-list-level-style-bullet-attr ::= (text:bullet-relative-size::percent)? ;
number-quarter ::= number:quarter::(number-quarter-attlist common-calendar-attlist) ;
config-config-item-map-entry ::= config:config-item-map-entry::(config-config-item-map-entry-attlist config-items) ;
anim-transition-filter-attlist ::= smil:type::string ;
 anim-transition-filter-attlist ::= (smil:subtype::string)? ;
 anim-transition-filter-attlist ::= (smil:direction::("forward" | "reverse"))? ;
 anim-transition-filter-attlist ::= (smil:fadeColor::("forward" | "reverse"))? ;
 anim-transition-filter-attlist ::= (smil:mode::("in" | "out"))? ;
text-alphabetical-index-entry-template ::= text:alphabetical-index-entry-template::(text-alphabetical-index-entry-template-attrs (text-index-entry-chapter | text-index-entry-page-number | text-index-entry-text | text-index-entry-span | text-index-entry-tab-stop)*) ;
common-table-change-attlist ::= table:id::string ;
 common-table-change-attlist ::= (table:acceptance-state::("accepted" | "rejected" | "pending"))? ;
 common-table-change-attlist ::= (table:rejecting-change-id::string)? ;
common-field-formula-attlist ::= (text:formula::formula)? ;
text-set-page-variable-attlist ::= (text:active::boolean)? ;
 text-set-page-variable-attlist ::= (text:page-adjust::integer)? ;
table-data-pilot-field ::= table:data-pilot-field::(table-data-pilot-field-attlist table-data-pilot-level? table-data-pilot-field-reference? table-data-pilot-groups?) ;
draw-glue-point ::= draw:glue-point::draw-glue-point-attlist ;
chart-chart-attlist ::= chart:class::namespacedToken ;
 chart-chart-attlist ::= common-draw-size-attlist ;
 chart-chart-attlist ::= (chart:column-mapping::string)? ;
 chart-chart-attlist ::= (chart:row-mapping::string)? ;
 chart-chart-attlist ::= (chart:style-name::styleNameRef)? ;
draw-custom-shape-attlist ::= (draw:engine::namespacedToken)? ;
 draw-custom-shape-attlist ::= (draw:data::string)? ;
table-highlighted-range-attlist-invalid ::= table:marked-invalid::boolean ;
table-data-pilot-tables ::= table:data-pilot-tables::(table-data-pilot-table*) ;
table-table-row ::= table:table-row::(table-table-row-attlist (table-table-cell | table-covered-table-cell)+) ;
table-operation-attlist ::= table:name::("trace-dependents" | "remove-dependents" | "trace-precedents" | "remove-precedents" | "trace-errors") ;
 table-operation-attlist ::= table:index::nonNegativeInteger ;
table-detective ::= table:detective::(table-highlighted-range* table-operation*) ;
office-settings ::= (office:settings::(config-config-item-set+))? ;
table-tracked-changes-attlist ::= (table:track-changes::boolean)? ;
text-table-of-content-entry-template-attlist ::= text:outline-level::positiveInteger ;
 text-table-of-content-entry-template-attlist ::= text:style-name::styleNameRef ;
common-num-format-prefix-suffix-attlist ::= (style:num-prefix::string)? (style:num-suffix::string)? ;
dropdown ::= (form:dropdown::boolean)? ;
common-disabled-attlist ::= (form:disabled::boolean)? ;
common-svg-gradient-attlist ::= (svg:gradientUnits::"objectBoundingBox")? (svg:gradientTransform::string)? (svg:spreadMethod::("pad" | "reflect" | "repeat"))? ;
 common-svg-gradient-attlist ::= draw:name::styleName ;
 common-svg-gradient-attlist ::= (draw:display-name::string)? ;
draw-a-attlist ::= xlink:href::anyURI (xlink:type::"simple")? (xlink:actuate::"onRequest")? ;
 draw-a-attlist ::= (office:target-frame-name::targetFrameName)? (xlink:show::("new" | "replace"))? ;
 draw-a-attlist ::= (office:name::string)? ;
 draw-a-attlist ::= (office:title::string)? ;
 draw-a-attlist ::= (office:server-map::boolean)? ;
style-default-style ::= style:default-style::style-style-content ;
table-named-expressions ::= table:named-expressions::((table-named-range | table-named-expression)*) ;
number-fraction ::= number:fraction::(number-fraction-attlist common-number-attlist) ;
common-draw-area-attlist ::= (xlink:href::anyURI)? (xlink:type::"simple")? (office:target-frame-name::targetFrameName)? (xlink:show::("new" | "replace"))? ;
 common-draw-area-attlist ::= (office:name::string)? ;
 common-draw-area-attlist ::= (draw:nohref::"nohref")? ;
common-draw-name-attlist ::= (draw:name::string)? ;
text-bibliography ::= text:bibliography::(sectionAttr text-bibliography-source text-index-body) ;
table-dde-link ::= table:dde-link::(office-dde-source table-table) ;
size ::= (form:size::nonNegativeInteger)? ;
table-table-attlist ::= (table:name::string)? ;
 table-table-attlist ::= (table:style-name::styleNameRef)? ;
 table-table-attlist ::= (table:protected::boolean)? (table:protection-key::string())? ;
 table-table-attlist ::= (table:print::boolean)? ;
 table-table-attlist ::= (table:print-ranges::cellRangeAddressList)? ;
 table-table-attlist ::= (table:is-sub-table::boolean)? ;
--------------------odf::opendoc-1.1.bgf--------------------
style-font-face ::= style:font-face::(style-font-face-attlist svg-font-face-src? svg-definition-src?) ;
svg-linearGradient ::= svg:linearGradient::(common-svg-gradient-attlist (svg:x1::(coordinate | percent))? (svg:y1::(coordinate | percent))? (svg:x2::(coordinate | percent))? (svg:y2::(coordinate | percent))? svg-stop*) ;
style-page-layout-attlist ::= style:name::styleName ;
 style-page-layout-attlist ::= (style:page-usage::("all" | "left" | "right" | "mirrored"))? ;
number-seconds ::= number:seconds::number-seconds-attlist ;
number-currency-style ::= number:currency-style::(common-data-style-attlist common-auto-reorder-attlist style-text-properties? number-text? ((number-and-text currency-symbol-and-text?) | (currency-symbol-and-text number-and-text?))? style-map*) ;
number-fraction-attlist ::= (number:min-numerator-digits::integer)? ;
 number-fraction-attlist ::= (number:min-denominator-digits::integer)? ;
 number-fraction-attlist ::= (number:denominator-value::integer)? ;
table-covered-table-cell ::= table:covered-table-cell::(table-table-cell-attlist table-table-cell-content) ;
text-notes-configuration-content ::= text-note-class ;
 text-notes-configuration-content ::= (text:citation-style-name::styleNameRef)? ;
 text-notes-configuration-content ::= (text:citation-body-style-name::styleNameRef)? ;
 text-notes-configuration-content ::= (text:default-style-name::styleNameRef)? ;
 text-notes-configuration-content ::= (text:master-page-name::styleNameRef)? ;
 text-notes-configuration-content ::= (text:start-value::nonNegativeInteger)? ;
 text-notes-configuration-content ::= common-num-format-prefix-suffix-attlist common-num-format-attlist? ;
 text-notes-configuration-content ::= (text:start-numbering-at::("document" | "chapter" | "page"))? ;
 text-notes-configuration-content ::= (text:footnotes-position::("text" | "page" | "section" | "document"))? ;
 text-notes-configuration-content ::= (text:note-continuation-notice-forward::string())? ;
 text-notes-configuration-content ::= (text:note-continuation-notice-backward::string())? ;
draw-applet-attlist ::= (draw:code::string())? ;
 draw-applet-attlist ::= (draw:object::string())? ;
 draw-applet-attlist ::= (draw:archive::string())? ;
 draw-applet-attlist ::= (draw:may-script::boolean)? ;
number-scientific-number ::= number:scientific-number::(number-scientific-number-attlist common-decimal-places-attlist common-number-attlist) ;
presentation-hide-shape ::= presentation:hide-shape::(common-presentation-effect-attlist presentation-sound?) ;
text-number ::= text:number::string ;
common-title-attlist ::= (form:title::string())? ;
draw-object ::= draw:object::(draw-object-attlist common-draw-data-attlist | office-document | math-math) ;
table-sort-by ::= table:sort-by::table-sort-by-attlist ;
table-data-pilot-table-attlist ::= table:name::string ;
 table-data-pilot-table-attlist ::= (table:application-data::string)? ;
 table-data-pilot-table-attlist ::= (table:grand-total::("none" | "row" | "column" | "both"))? ;
 table-data-pilot-table-attlist ::= (table:ignore-empty-rows::boolean)? ;
 table-data-pilot-table-attlist ::= (table:identify-categories::boolean)? ;
 table-data-pilot-table-attlist ::= table:target-range-address::cellRangeAddress ;
 table-data-pilot-table-attlist ::= (table:buttons::cellRangeAddressList)? ;
 table-data-pilot-table-attlist ::= (table:show-filter-button::boolean)? ;
 table-data-pilot-table-attlist ::= (table:drill-down-on-double-click::boolean)? ;
presentation-hide-text ::= presentation:hide-text::(common-presentation-effect-attlist presentation-sound?) ;
style-tab-stop-char-attlist ::= style:char::character ;
table-deletion-attlist ::= table:type::("row" | "column" | "table") ;
 table-deletion-attlist ::= table:position::integer ;
 table-deletion-attlist ::= (table:table::integer)? ;
 table-deletion-attlist ::= (table:multi-deletion-spanned::integer)? ;
number-text-content ::= number:text-content::ε ;
draw-plugin ::= draw:plugin::(draw-plugin-attlist common-draw-data-attlist draw-param*) ;
table-database-source-query-attlist ::= table:database-name::string ;
 table-database-source-query-attlist ::= table:query-name::string ;
draw-area-rectangle ::= draw:area-rectangle::(common-draw-area-attlist svg:x::coordinate svg:y::coordinate svg:width::length svg:height::length svg-title? svg-desc? office-event-listeners?) ;
table-table-rows ::= table:table-rows::((text-soft-page-break? table-table-row)+) ;
style-tab-stop ::= style:tab-stop::style-tab-stop-attlist ;
number-date-style ::= number:date-style::(common-data-style-attlist common-auto-reorder-attlist common-format-source-attlist style-text-properties? number-text? (any-date number-text?)+ style-map*) ;
draw-marker-attlist ::= draw:name::styleName ;
 draw-marker-attlist ::= (draw:display-name::string)? ;
chart-grid ::= chart:grid::chart-grid-attlist ;
table-table-cell-attlist-extra ::= (table:number-columns-spanned::positiveInteger)? (table:number-rows-spanned::positiveInteger)? ;
 table-table-cell-attlist-extra ::= (table:number-matrix-columns-spanned::positiveInteger)? (table:number-matrix-rows-spanned::positiveInteger)? ;
common-text-spreadsheet-shape-attlist ::= (table:end-cell-address::cellAddress)? (table:end-x::coordinate)? (table:end-y::coordinate)? ;
 common-text-spreadsheet-shape-attlist ::= (table:table-background::boolean)? ;
 common-text-spreadsheet-shape-attlist ::= common-text-anchor-attlist ;
common-draw-text-style-name-attlist ::= (draw:text-style-name::styleNameRef)? ;
table-shapes ::= table:shapes::(shape+) ;
text-p ::= text:p::(paragraph-attrs paragraph-content*) ;
common-style-header-footer-attlist ::= (style:display::boolean)? ;
draw-line-attlist ::= svg:x1::coordinate svg:y1::coordinate ;
 draw-line-attlist ::= svg:x2::coordinate svg:y2::coordinate ;
table-movement ::= table:movement::(common-table-change-attlist table-source-range-address table-target-range-address office-change-info table-dependencies? table-deletions?) ;
script-event-listener ::= script:event-listener::script-event-listener-attlist ;
style-tab-stop-attlist ::= style:position::nonNegativeLength ;
 style-tab-stop-attlist ::= ((style:type::("left" | "center" | "right"))?) | (style:type::"char" style-tab-stop-char-attlist) ;
 style-tab-stop-attlist ::= (style:leader-type::lineType)? ;
 style-tab-stop-attlist ::= (style:leader-style::lineStyle)? ;
 style-tab-stop-attlist ::= (style:leader-width::lineWidth)? ;
 style-tab-stop-attlist ::= (style:leader-color::("font-color" | color))? ;
 style-tab-stop-attlist ::= (style:leader-text::string)? ;
 style-tab-stop-attlist ::= (style:leader-text-style::styleNameRef)? ;
text-h ::= text:h::(heading-attrs paragraph-attrs text-number? paragraph-content*) ;
text-outline-style ::= text:outline-style::(text-outline-level-style+) ;
draw-control-attlist ::= draw:control::IDREF ;
table-table-column-attlist ::= (table:number-columns-repeated::positiveInteger)? ;
 table-table-column-attlist ::= (table:style-name::styleNameRef)? ;
 table-table-column-attlist ::= (table:visibility::table-visibility-value)? ;
 table-table-column-attlist ::= (table:default-cell-style-name::styleNameRef)? ;
text-placeholder-attlist ::= text:placeholder-type::("text" | "table" | "text-box" | "image" | "object") ;
 text-placeholder-attlist ::= common-field-description-attlist ;
office-document-settings ::= office:document-settings::(office-document-common-attrs office-settings) ;
draw-handle-attlist ::= (draw:handle-mirror-vertical::boolean)? ;
 draw-handle-attlist ::= (draw:handle-mirror-horizontal::boolean)? ;
 draw-handle-attlist ::= (draw:handle-switched::boolean)? ;
 draw-handle-attlist ::= draw:handle-position::string ;
 draw-handle-attlist ::= (draw:handle-range-x-minimum::string)? ;
 draw-handle-attlist ::= (draw:handle-range-x-maximum::string)? ;
 draw-handle-attlist ::= (draw:handle-range-y-minimum::string)? ;
 draw-handle-attlist ::= (draw:handle-range-y-maximum::string)? ;
 draw-handle-attlist ::= (draw:handle-polar::string)? ;
 draw-handle-attlist ::= (draw:handle-radius-range-minimum::string)? ;
 draw-handle-attlist ::= (draw:handle-radius-range-maximum::string)? ;
presentation-show-attlist ::= presentation:name::string ;
 presentation-show-attlist ::= presentation:pages::string() ;
style-columns ::= (style:columns::(style-columns-attlist style-column-sep? style-column*))? ;
table-calculation-setting-attlist ::= (table:case-sensitive::boolean)? ;
 table-calculation-setting-attlist ::= (table:precision-as-shown::boolean)? ;
 table-calculation-setting-attlist ::= (table:search-criteria-must-apply-to-whole-cell::boolean)? ;
 table-calculation-setting-attlist ::= (table:automatic-find-labels::boolean)? ;
 table-calculation-setting-attlist ::= (table:use-regular-expressions::boolean)? ;
 table-calculation-setting-attlist ::= (table:null-year::positiveInteger)? ;
table-subtotal-rules-attlist ::= (table:bind-styles-to-content::boolean)? ;
 table-subtotal-rules-attlist ::= (table:case-sensitive::boolean)? ;
 table-subtotal-rules-attlist ::= (table:page-breaks-on-group-change::boolean)? ;
number-am-pm ::= number:am-pm::ε ;
number-time-style ::= number:time-style::(number-time-style-attlist common-data-style-attlist common-format-source-attlist style-text-properties? number-text? (any-time number-text?)+ style-map*) ;
text-dde-connection-decl ::= text:dde-connection-decl::(text-dde-connection-decl-attlist common-dde-connection-decl-attlist) ;
style-table-column-properties ::= style:table-column-properties::style-table-column-properties-content ;
chart-stock-range-line ::= chart:stock-range-line::common-stock-marker-attlist ;
chart-title ::= chart:title::(chart-title-attlist text-p?) ;
common-anim-attlist ::= (presentation:node-type::("default" | "on-click" | "with-previous" | "after-previous" | "timing-root" | "main-sequence" | "interactive-sequence"))? ;
 common-anim-attlist ::= (presentation:preset-id::string)? ;
 common-anim-attlist ::= (presentation:preset-sub-type::string)? ;
 common-anim-attlist ::= (presentation:preset-class::("custom" | "entrance" | "exit" | "emphasis" | "motion-path" | "ole-action" | "media-call"))? ;
 common-anim-attlist ::= (presentation:master-element::IDREF)? ;
 common-anim-attlist ::= (presentation:group-id::string)? ;
 common-anim-attlist ::= (anim:id::ID)? ;
common-tab-attlist ::= (form:tab-index::nonNegativeInteger)? ;
 common-tab-attlist ::= (form:tab-stop::boolean)? ;
config-config-item-attlist ::= config:name::string ;
 config-config-item-attlist ::= config:type::("boolean" | "short" | "int" | "long" | "double" | "string" | "datetime" | "base64Binary") ;
draw-frame ::= draw:frame::(common-draw-shape-with-text-and-styles-attlist common-draw-position-attlist common-draw-rel-size-attlist common-draw-caption-id-attlist presentation-shape-attlist draw-frame-attlist (draw-text-box | draw-image | draw-object | draw-object-ole | draw-applet | draw-floating-frame | draw-plugin)* office-event-listeners? draw-glue-point* draw-image-map? svg-title? svg-desc? (draw-contour-polygon | draw-contour-path)?) ;
table-iteration ::= table:iteration::((table:status::("enable" | "disable"))? (table:steps::positiveInteger)? (table:maximum-difference::double)?) ;
common-draw-caption-id-attlist ::= (draw:caption-id::IDREF)? ;
text-user-index-source ::= text:user-index-source::(text-user-index-source-attr text-index-title-template? text-user-index-entry-template* text-index-source-styles*) ;
text-index-entry-chapter ::= text:index-entry-chapter::((text:style-name::styleNameRef)? text-index-entry-chapter-attrs) ;
table-data-pilot-subtotals ::= table:data-pilot-subtotals::(table-data-pilot-subtotal*) ;
style-page-layout-properties ::= style:page-layout-properties::style-page-layout-properties-content ;
form-connection-resource ::= form:connection-resource::(xlink:href::anyURI) ;
draw-text-box ::= draw:text-box::(draw-text-box-attlist text-content*) ;
draw-image ::= draw:image::(draw-image-attlist common-draw-data-attlist | office-binary-data draw-text) ;
table-data-pilot-field-reference-attlist ::= table:field-name::string ;
 table-data-pilot-field-reference-attlist ::= (table:member-type::"named" table:member-name::string) | (table:member-type::("previous" | "next")) ;
 table-data-pilot-field-reference-attlist ::= table:type::("none" | "member-difference" | "member-percentage" | "member-percentage-difference" | "running-total" | "row-percentage" | "column-percentage" | "total-percentage" | "index") ;
common-break-attlist ::= (fo:break-before::("auto" | "column" | "page"))? (fo:break-after::("auto" | "column" | "page"))? ;
table-data-pilot-groups ::= table:data-pilot-groups::(table-data-pilot-groups-attlist table-data-pilot-group+) ;
chart-error-indicator-attlist ::= (chart:style-name::styleNameRef)? ;
number-hours ::= number:hours::number-hours-attlist ;
table-table-source-attlist ::= (table:mode::("copy-all" | "copy-results-only"))? ;
 table-table-source-attlist ::= (table:table-name::string)? ;
draw-layer ::= draw:layer::(draw-layer-attlist svg-title? svg-desc?) ;
common-text-align ::= (fo:text-align::("start" | "end" | "left" | "right" | "center" | "justify"))? ;
style-style-attlist ::= style:name::styleName ;
 style-style-attlist ::= (style:display-name::string)? ;
 style-style-attlist ::= (style:parent-style-name::styleNameRef)? ;
 style-style-attlist ::= (style:next-style-name::styleNameRef)? ;
 style-style-attlist ::= (style:list-style-name::(styleName | ε))? ;
 style-style-attlist ::= (style:master-page-name::styleNameRef)? ;
 style-style-attlist ::= (style:auto-update::boolean)? ;
 style-style-attlist ::= (style:data-style-name::styleNameRef)? ;
 style-style-attlist ::= (style:class::string)? ;
 style-style-attlist ::= (style:default-outline-level::positiveInteger)? ;
draw-image-attlist ::= (draw:filter-name::string)? ;
paragraph-attrs ::= (text:style-name::styleNameRef)? (text:class-names::styleNameRefs)? (text:cond-style-name::styleNameRef)? ;
 paragraph-attrs ::= text-id? ;
form-fixed-text-attlist ::= form-control-attlist for common-disabled-attlist label common-printable-attlist common-title-attlist ;
 form-fixed-text-attlist ::= (form:multi-line::boolean)? ;
draw-floating-frame-attlist ::= (draw:frame-name::string)? ;
presentation-decl ::= presentation:header-decl::(presentation-header-decl-attlist string()) ;
 presentation-decl ::= presentation:footer-decl::(presentation-footer-decl-attlist string()) ;
 presentation-decl ::= presentation:date-time-decl::(presentation-date-time-decl-attlist string()) ;
common-draw-size-attlist ::= (svg:width::length)? (svg:height::length)? ;
text-changed-region-content ::= text:insertion::office-change-info ;
 text-changed-region-content ::= text:deletion::(office-change-info text-content*) ;
 text-changed-region-content ::= text:format-change::office-change-info ;
table-table-template ::= table:table-template::(table-table-template-attlist table-first-row? table-last-row? table-first-column? table-last-column? table-body | (table-even-rows table-odd-rows) | (table-even-columns table-odd-columns)) ;
dr3d-extrude ::= dr3d:extrude::(common-draw-path-data-attlist common-draw-viewbox-attlist common-draw-id-attlist common-draw-z-index-attlist common-draw-layer-name-attlist common-draw-style-name-attlist common-dr3d-transform-attlist) ;
form-password-attlist ::= form-control-attlist common-disabled-attlist common-maxlength-attlist common-printable-attlist common-tab-attlist common-title-attlist common-value-attlist common-convert-empty-attlist ;
 form-password-attlist ::= (form:echo-char::character)? ;
common-style-direction-attlist ::= (style:direction::("ltr" | "ttb"))? ;
draw-regular-polygon-attlist ::= (draw:concave::"false") | (draw:concave::"true" draw-regular-polygon-sharpness-attlist) ;
 draw-regular-polygon-attlist ::= draw:corners::positiveInteger ;
text-sequence-ref-name ::= (text:ref-name::string)? ;
table-insertion ::= table:insertion::(table-insertion-attlist common-table-change-attlist office-change-info table-dependencies? table-deletions?) ;
table-label-ranges ::= table:label-ranges::(table-label-range*) ;
table-even-rows ::= table:even-rows::common-table-template-attlist ;
chart-categories ::= chart:categories::((table:cell-range-address::cellRangeAddress)?) ;
draw-page-attlist ::= (draw:name::string)? ;
 draw-page-attlist ::= (draw:style-name::styleNameRef)? ;
 draw-page-attlist ::= draw:master-page-name::styleNameRef ;
 draw-page-attlist ::= (presentation:presentation-page-layout-name::styleNameRef)? ;
 draw-page-attlist ::= (draw:id::ID)? ;
 draw-page-attlist ::= (draw:nav-order::IDREFS)? ;
table-database-ranges ::= table:database-ranges::(table-database-range*) ;
style-drawing-page-properties ::= style:drawing-page-properties::style-drawing-page-properties-content ;
config-config-item-map-indexed ::= config:config-item-map-indexed::(config-config-item-map-indexed-attlist config-config-item-map-entry+) ;
style-table-cell-properties ::= style:table-cell-properties::style-table-cell-properties-content ;
table-table-cell ::= table:table-cell::(table-table-cell-attlist table-table-cell-attlist-extra table-table-cell-content) ;
table-consolidation-attlist ::= table:function::("auto" | "average" | "count" | "countnums" | "max" | "min" | "product" | "stdev" | "stdevp" | "sum" | "var" | "varp" | string) ;
 table-consolidation-attlist ::= table:source-cell-range-addresses::cellRangeAddressList ;
 table-consolidation-attlist ::= table:target-cell-address::cellAddress ;
 table-consolidation-attlist ::= (table:use-labels::("none" | "row" | "column" | "both"))? ;
 table-consolidation-attlist ::= (table:link-to-source-data::boolean)? ;
style-tab-stops ::= (style:tab-stops::(style-tab-stop*))? ;
style-data-style-attlist ::= (style:display-name::string)? ;
dr3d-light-attlist ::= (dr3d:diffuse-color::color)? ;
 dr3d-light-attlist ::= dr3d:direction::vector3D ;
 dr3d-light-attlist ::= (dr3d:enabled::boolean)? ;
 dr3d-light-attlist ::= (dr3d:specular::boolean)? ;
style-drawing-page-properties-attlist ::= (presentation:transition-type::("manual" | "automatic" | "semi-automatic"))? ;
 style-drawing-page-properties-attlist ::= (presentation:transition-style::("none" | "fade-from-left" | "fade-from-top" | "fade-from-right" | "fade-from-bottom" | "fade-from-upperleft" | "fade-from-upperright" | "fade-from-lowerleft" | "fade-from-lowerright" | "move-from-left" | "move-from-top" | "move-from-right" | "move-from-bottom" | "move-from-upperleft" | "move-from-upperright" | "move-from-lowerleft" | "move-from-lowerright" | "uncover-to-left" | "uncover-to-top" | "uncover-to-right" | "uncover-to-bottom" | "uncover-to-upperleft" | "uncover-to-upperright" | "uncover-to-lowerleft" | "uncover-to-lowerright" | "fade-to-center" | "fade-from-center" | "vertical-stripes" | "horizontal-stripes" | "clockwise" | "counterclockwise" | "open-vertical" | "open-horizontal" | "close-vertical" | "close-horizontal" | "wavyline-from-left" | "wavyline-from-top" | "wavyline-from-right" | "wavyline-from-bottom" | "spiralin-left" | "spiralin-right" | "spiralout-left" | "spiralout-right" | "roll-from-top" | "roll-from-left" | "roll-from-right" | "roll-from-bottom" | "stretch-from-left" | "stretch-from-top" | "stretch-from-right" | "stretch-from-bottom" | "vertical-lines" | "horizontal-lines" | "dissolve" | "random" | "vertical-checkerboard" | "horizontal-checkerboard" | "interlocking-horizontal-left" | "interlocking-horizontal-right" | "interlocking-vertical-top" | "interlocking-vertical-bottom" | "fly-away" | "open" | "close" | "melt"))? ;
 style-drawing-page-properties-attlist ::= (presentation:transition-speed::presentationSpeeds)? ;
 style-drawing-page-properties-attlist ::= (smil:subtype::string)? ;
 style-drawing-page-properties-attlist ::= (smil:direction::("forward" | "reverse"))? ;
 style-drawing-page-properties-attlist ::= (smil:fadeColor::color)? ;
 style-drawing-page-properties-attlist ::= (presentation:duration::duration)? ;
 style-drawing-page-properties-attlist ::= (presentation:visibility::("visible" | "hidden"))? ;
 style-drawing-page-properties-attlist ::= (draw:background-size::("full" | "border"))? ;
 style-drawing-page-properties-attlist ::= (presentation:background-objects-visible::boolean)? ;
 style-drawing-page-properties-attlist ::= (presentation:background-visible::boolean)? ;
 style-drawing-page-properties-attlist ::= (presentation:display-header::boolean)? ;
 style-drawing-page-properties-attlist ::= (presentation:display-footer::boolean)? ;
 style-drawing-page-properties-attlist ::= (presentation:display-page-number::boolean)? ;
 style-drawing-page-properties-attlist ::= (presentation:display-date-time::boolean)? ;
 style-drawing-page-properties-attlist ::= (smil:type::string)? ;
table-data-pilot-layout-info ::= table:data-pilot-layout-info::table-data-pilot-layout-info-attlist ;
config-config-item-map-indexed-attlist ::= config:name::string ;
table-sort-groups-attlist ::= (table:data-type::("text" | "number" | "automatic" | string))? ;
 table-sort-groups-attlist ::= (table:order::("ascending" | "descending"))? ;
presentation-dim ::= presentation:dim::(presentation-dim-attlist presentation-sound?) ;
anim-animate-motion-attlist ::= (svg:path::pathData)? ;
 anim-animate-motion-attlist ::= (svg:origin::string)? ;
 anim-animate-motion-attlist ::= (smil:calcMode::("discrete" | "linear" | "paced" | "spline"))? ;
presentation-date-time-decl-attlist ::= presentation:name::string ;
 presentation-date-time-decl-attlist ::= presentation:source::("fixed" | "current-date") ;
 presentation-date-time-decl-attlist ::= (style:data-style-name::styleNameRef)? ;
text-template-name-attlist ::= (text:display::("full" | "path" | "name" | "name-and-extension" | "area" | "title"))? ;
draw-caption-attlist ::= (draw:caption-point-x::coordinate draw:caption-point-y::coordinate)? ;
 draw-caption-attlist ::= (draw:corner-radius::nonNegativeLength)? ;
form-button-attlist ::= form-control-attlist button-type common-disabled-attlist label image-data common-printable-attlist common-tab-attlist target-frame target-location common-title-attlist common-value-attlist common-form-relative-image-position-attlist ;
 form-button-attlist ::= (form:default-button::boolean)? ;
 form-button-attlist ::= (form:toggle::boolean)? ;
 form-button-attlist ::= (form:focus-on-click::boolean)? ;
 form-button-attlist ::= (form:xforms-submission::string)? ;
column-controls ::= form:text::(form-text-attlist common-form-control-content) ;
 column-controls ::= form:textarea::(form-textarea-attlist common-form-control-content text-p*) ;
 column-controls ::= form:formatted-text::(form-formatted-text-attlist common-form-control-content) ;
 column-controls ::= form:number::(form-number-attlist common-numeric-control-attlist common-form-control-content) ;
 column-controls ::= form:date::(form-date-attlist common-numeric-control-attlist common-form-control-content) ;
 column-controls ::= form:combobox::(form-combobox-attlist common-form-control-content form-item*) ;
 column-controls ::= form:listbox::(form-listbox-attlist common-form-control-content form-option*) ;
 column-controls ::= form:checkbox::(form-checkbox-attlist common-form-control-content) ;
chart-wall-attlist ::= (svg:width::length)? ;
 chart-wall-attlist ::= (chart:style-name::styleNameRef)? ;
text-index-title-template ::= text:index-title-template::((text:style-name::styleNameRef)? string()) ;
dr3d-rotate ::= dr3d:rotate::(common-draw-viewbox-attlist common-draw-path-data-attlist common-draw-z-index-attlist common-draw-id-attlist common-draw-layer-name-attlist common-draw-style-name-attlist common-dr3d-transform-attlist) ;
meta-date-string ::= meta:date-string::string ;
table-content-validations ::= table:content-validations::(table-content-validation+) ;
chart-series ::= chart:series::(chart-series-attlist chart-domain* chart-mean-value? chart-regression-curve? chart-error-indicator? chart-data-point*) ;
table-calculation-settings ::= table:calculation-settings::(table-calculation-setting-attlist table-null-date? table-iteration?) ;
common-field-display-value-none-attlist ::= (text:display::("value" | "none"))? ;
text-index-name ::= text:index-name::string ;
table-data-pilot-member-attlist ::= table:name::string ;
 table-data-pilot-member-attlist ::= (table:display::boolean)? ;
 table-data-pilot-member-attlist ::= (table:show-details::boolean)? ;
presentation-placeholder ::= presentation:placeholder::(presentation:object::presentation-classes svg:x::(coordinate | percent) svg:y::(coordinate | percent) svg:width::(length | percent) svg:height::(length | percent)) ;
style-map ::= style:map::style-map-attlist ;
number-number-attlist ::= (number:decimal-replacement::string())? ;
 number-number-attlist ::= (number:display-factor::double)? ;
text-index-source-style ::= text:index-source-style::(text:style-name::styleName) ;
common-field-description-attlist ::= (text:description::string())? ;
chart-series-attlist ::= (chart:values-cell-range-address::cellRangeAddress)? ;
 chart-series-attlist ::= (chart:label-cell-address::cellAddress)? ;
 chart-series-attlist ::= (chart:class::namespacedToken)? ;
 chart-series-attlist ::= (chart:attached-axis::string)? ;
 chart-series-attlist ::= (chart:style-name::styleNameRef)? ;
common-draw-transform-attlist ::= (draw:transform::string)? ;
common-shadow-attlist ::= (style:shadow::shadowType)? ;
common-num-format-attlist ::= (style:num-format::("1" | "i" | "I" | string | ε)) | (style:num-format::("a" | "A") style-num-letter-sync-attlist) | ε ;
text-page ::= text:page::text-page-attlist ;
common-data-field-attlist ::= (form:data-field::string)? ;
draw-regular-polygon-sharpness-attlist ::= draw:sharpness::percent ;
table-deletions ::= table:deletions::((table-cell-content-deletion | table-change-deletion)+) ;
text-list-level-style-attr ::= text:level::positiveInteger ;
table-data-pilot-sort-info ::= table:data-pilot-sort-info::table-data-pilot-sort-info-attlist ;
table-tracked-changes ::= table:tracked-changes::(table-tracked-changes-attlist (table-cell-content-change | table-insertion | table-deletion | table-movement)*) ;
table-database-source-sql-attlist ::= table:database-name::string ;
 table-database-source-sql-attlist ::= table:sql-statement::string ;
 table-database-source-sql-attlist ::= (table:parse-sql-statement::boolean)? ;
presentation-shape-attlist ::= (presentation:class::presentation-classes)? ;
 presentation-shape-attlist ::= (presentation:placeholder::boolean)? ;
 presentation-shape-attlist ::= (presentation:user-transformed::boolean)? ;
style-chart-properties ::= style:chart-properties::style-chart-properties-content ;
text-alphabetical-index ::= text:alphabetical-index::(sectionAttr text-alphabetical-index-source text-index-body) ;
office-change-info ::= office:change-info::(dc-creator dc-date text-p*) ;
paragraph-content ::= string() ;
 paragraph-content ::= text:s::((text:c::nonNegativeInteger)?) ;
 paragraph-content ::= text:tab::text-tab-attr ;
 paragraph-content ::= text:line-break::ε ;
 paragraph-content ::= text-soft-page-break ;
 paragraph-content ::= text:span::((text:style-name::styleNameRef)? (text:class-names::styleNameRefs)? paragraph-content*) ;
 paragraph-content ::= text:a::(text-a-attlist office-event-listeners? paragraph-content*) ;
 paragraph-content ::= (text:bookmark::(text:name::string)) | (text:bookmark-start::(text:name::string)) | (text:bookmark-end::(text:name::string)) ;
 paragraph-content ::= text:reference-mark::(text:name::string) ;
 paragraph-content ::= (text:reference-mark-start::(text:name::string)) | (text:reference-mark-end::(text:name::string)) ;
 paragraph-content ::= text:note::(text-note-class (text:id::string)? text:note-citation::((text:label::string)? string()) text:note-body::(text-content*)) ;
 paragraph-content ::= text:ruby::((text:style-name::styleNameRef)? text:ruby-base::paragraph-content text:ruby-text::((text:style-name::styleNameRef)? string())) ;
 paragraph-content ::= office-annotation ;
 paragraph-content ::= change-marks ;
 paragraph-content ::= shape | draw-a ;
 paragraph-content ::= text:date::(text-date-attlist string()) ;
 paragraph-content ::= text:time::(text-time-attlist string()) ;
 paragraph-content ::= text:page-number::(text-page-number-attlist string()) ;
 paragraph-content ::= text:page-continuation::(text-page-continuation-attlist string()) ;
 paragraph-content ::= text:sender-firstname::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-lastname::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-initials::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-title::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-position::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-email::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-phone-private::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-fax::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-company::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-phone-work::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-street::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-city::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-postal-code::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-country::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:sender-state-or-province::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:author-name::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:author-initials::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:chapter::(text-chapter-attlist string()) ;
 paragraph-content ::= text:file-name::(text-file-name-attlist string()) ;
 paragraph-content ::= text:template-name::(text-template-name-attlist string()) ;
 paragraph-content ::= text:sheet-name::string() ;
 paragraph-content ::= text:variable-set::(common-field-name-attlist common-field-formula-attlist common-value-and-type-attlist common-field-display-value-none-attlist common-field-data-style-name-attlist string()) ;
 paragraph-content ::= text:variable-get::(common-field-name-attlist common-field-display-value-formula-attlist common-field-data-style-name-attlist string()) ;
 paragraph-content ::= text:variable-input::(common-field-name-attlist common-field-description-attlist common-value-type-attlist common-field-display-value-none-attlist common-field-data-style-name-attlist string()) ;
 paragraph-content ::= text:user-field-get::(common-field-name-attlist common-field-display-value-formula-none-attlist common-field-data-style-name-attlist string()) ;
 paragraph-content ::= text:user-field-input::(common-field-name-attlist common-field-description-attlist common-field-data-style-name-attlist string()) ;
 paragraph-content ::= text:sequence::(common-field-name-attlist common-field-formula-attlist common-field-num-format-attlist text-sequence-ref-name string()) ;
 paragraph-content ::= text:expression::(common-field-formula-attlist common-value-and-type-attlist? common-field-display-value-formula-attlist common-field-data-style-name-attlist string()) ;
 paragraph-content ::= text:text-input::(common-field-description-attlist string()) ;
 paragraph-content ::= text:initial-creator::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:creation-date::(common-field-fixed-attlist common-field-data-style-name-attlist (text:date-value::dateOrDateTime)? string()) ;
 paragraph-content ::= text:creation-time::(common-field-fixed-attlist common-field-data-style-name-attlist (text:time-value::timeOrDateTime)? string()) ;
 paragraph-content ::= text:description::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:user-defined::(common-field-fixed-attlist text:name::string common-field-data-style-name-attlist (office:value::double)? (office:date-value::dateOrDateTime)? (office:time-value::duration)? (office:boolean-value::boolean)? (office:string-value::string)? string()) ;
 paragraph-content ::= text:print-time::(common-field-fixed-attlist common-field-data-style-name-attlist (text:time-value::time)? string()) ;
 paragraph-content ::= text:print-date::(common-field-fixed-attlist common-field-data-style-name-attlist (text:date-value::date)? string()) ;
 paragraph-content ::= text:printed-by::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:title::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:subject::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:keywords::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:editing-cycles::(common-field-fixed-attlist string()) ;
 paragraph-content ::= text:editing-duration::(common-field-fixed-attlist common-field-data-style-name-attlist (text:duration::duration)? string()) ;
 paragraph-content ::= text:modification-time::(common-field-fixed-attlist common-field-data-style-name-attlist (text:time-value::time)? string()) ;
 paragraph-content ::= text:modification-date::(common-field-fixed-attlist common-field-data-style-name-attlist (text:date-value::date)? string()) ;
 paragraph-content ::= text:creator::(common-field-fixed-attlist string()) ;
 paragraph-content ::= (text:page-count::(common-field-num-format-attlist string())) | (text:paragraph-count::(common-field-num-format-attlist string())) | (text:word-count::(common-field-num-format-attlist string())) | (text:character-count::(common-field-num-format-attlist string())) | (text:table-count::(common-field-num-format-attlist string())) | (text:image-count::(common-field-num-format-attlist string())) | (text:object-count::(common-field-num-format-attlist string())) ;
 paragraph-content ::= text:database-display::(text-database-display-attlist string()) ;
 paragraph-content ::= text:database-next::text-database-next-attlist ;
 paragraph-content ::= text:database-row-select::text-database-row-select-attlist ;
 paragraph-content ::= text:database-row-number::(common-field-database-table common-field-num-format-attlist (text:value::nonNegativeInteger)? string()) ;
 paragraph-content ::= text:database-name::(common-field-database-table string()) ;
 paragraph-content ::= text:page-variable-set::(text-set-page-variable-attlist string()) ;
 paragraph-content ::= text:page-variable-get::(text-get-page-variable-attlist string()) ;
 paragraph-content ::= text:placeholder::(text-placeholder-attlist string()) ;
 paragraph-content ::= text:conditional-text::(text-conditional-text-attlist string()) ;
 paragraph-content ::= text:hidden-text::(text-hidden-text-attlist string()) ;
 paragraph-content ::= (text:reference-ref::(text-common-ref-content text-ref-content)) | (text:bookmark-ref::(text-common-ref-content text-ref-content)) ;
 paragraph-content ::= text:note-ref::(text-common-ref-content text-note-ref-content text-ref-content) ;
 paragraph-content ::= text:sequence-ref::(text-common-ref-content text-sequence-ref-content) ;
 paragraph-content ::= text:script::((xlink:href::anyURI (xlink:type::"simple")?) | string() (script:language::string)?) ;
 paragraph-content ::= text:execute-macro::((text:name::string)? office-event-listeners? string()) ;
 paragraph-content ::= text:hidden-paragraph::(text-hidden-paragraph-attlist string()) ;
 paragraph-content ::= text:dde-connection::(text:connection-name::string string()) ;
 paragraph-content ::= text:measure::(text:kind::("value" | "unit" | "gap") string()) ;
 paragraph-content ::= text:table-formula::(common-field-formula-attlist common-field-display-value-formula-attlist common-field-data-style-name-attlist string()) ;
 paragraph-content ::= text:toc-mark-start::text-toc-mark-start-attrs ;
 paragraph-content ::= text:toc-mark-end::text-id ;
 paragraph-content ::= text:toc-mark::(text:string-value::string text-outline-level) ;
 paragraph-content ::= text:user-index-mark-start::(text-id text-outline-level text-index-name) ;
 paragraph-content ::= text:user-index-mark-end::(text-id text-outline-level) ;
 paragraph-content ::= text:user-index-mark::(text:string-value::string text-outline-level text-index-name) ;
 paragraph-content ::= text:alphabetical-index-mark-start::(text-id text-alphabetical-index-mark-attrs) ;
 paragraph-content ::= text:alphabetical-index-mark-end::text-id ;
 paragraph-content ::= text:alphabetical-index-mark::(text:string-value::string text-alphabetical-index-mark-attrs) ;
 paragraph-content ::= text:bibliography-mark::(text:bibliography-type::text-bibliography-types ((text:identifier::string) | (text:address::string) | (text:annote::string) | (text:author::string) | (text:booktitle::string) | (text:chapter::string) | (text:edition::string) | (text:editor::string) | (text:howpublished::string) | (text:institution::string) | (text:journal::string) | (text:month::string) | (text:note::string) | (text:number::string) | (text:organizations::string) | (text:pages::string) | (text:publisher::string) | (text:school::string) | (text:series::string) | (text:title::string) | (text:report-type::string) | (text:volume::string) | (text:year::string) | (text:url::string) | (text:custom1::string) | (text:custom2::string) | (text:custom3::string) | (text:custom4::string) | (text:custom5::string) | (text:isbn::string) | (text:issn::string))* string()) ;
 paragraph-content ::= presentation:header::ε ;
 paragraph-content ::= presentation:footer::ε ;
 paragraph-content ::= presentation:date-time::ε ;
config-config-item-map-entry-attlist ::= (config:name::string)? ;
number-day ::= number:day::(number-day-attlist common-calendar-attlist) ;
common-endsync-timing-attlist ::= (smil:endsync::("first" | "last" | "all" | "media"))? ;
change-mark-attr ::= text:change-id::IDREF ;
common-vertical-pos-attlist ::= (style:vertical-pos::("top" | "middle" | "bottom" | "from-top" | "below"))? (svg:y::coordinate)? ;
style-chart-properties-attlist ::= (chart:scale-text::boolean)? ;
 style-chart-properties-attlist ::= (chart:three-dimensional::boolean)? ;
 style-chart-properties-attlist ::= (chart:deep::boolean)? ;
 style-chart-properties-attlist ::= (chart:symbol-type::"none") | (chart:symbol-type::"automatic") | (chart:symbol-type::"named-symbol" chart:symbol-name::("square" | "diamond" | "arrow-down" | "arrow-up" | "arrow-right" | "arrow-left" | "bow-tie" | "hourglass" | "circle" | "star" | "x" | "plus" | "asterisk" | "horizontal-bar" | "vertical-bar")) | (chart:symbol-type::"image" chart:symbol-image::(xlink:href::anyURI)) | ε ;
 style-chart-properties-attlist ::= (chart:symbol-width::nonNegativeLength)? (chart:symbol-height::nonNegativeLength)? ;
 style-chart-properties-attlist ::= (chart:vertical::boolean)? ;
 style-chart-properties-attlist ::= (chart:connect-bars::boolean)? ;
 style-chart-properties-attlist ::= (chart:gap-width::integer)? (chart:overlap::integer)? ;
 style-chart-properties-attlist ::= (chart:japanese-candle-stick::boolean)? ;
 style-chart-properties-attlist ::= (chart:interpolation::("none" | "cubic-spline" | "b-spline"))? (chart:spline-order::positiveInteger)? (chart:spline-resolution::positiveInteger)? ;
 style-chart-properties-attlist ::= (chart:pie-offset::nonNegativeInteger)? ;
 style-chart-properties-attlist ::= (chart:lines::boolean)? ;
 style-chart-properties-attlist ::= (chart:solid-type::("cuboid" | "cylinder" | "cone" | "pyramid"))? ;
 style-chart-properties-attlist ::= (chart:stacked::boolean)? (chart:percentage::boolean)? ;
 style-chart-properties-attlist ::= (chart:link-data-style-to-source::boolean)? ;
 style-chart-properties-attlist ::= (chart:visible::boolean)? ;
 style-chart-properties-attlist ::= (chart:logarithmic::boolean)? ;
 style-chart-properties-attlist ::= (chart:maximum::double)? (chart:minimum::double)? (chart:origin::double)? (chart:interval-major::double)? (chart:interval-minor-divisor::positiveInteger)? ;
 style-chart-properties-attlist ::= (chart:tick-marks-major-inner::boolean)? (chart:tick-marks-major-outer::boolean)? (chart:tick-marks-minor-inner::boolean)? (chart:tick-marks-minor-outer::boolean)? ;
 style-chart-properties-attlist ::= (chart:display-label::boolean)? (chart:text-overlap::boolean)? (text:line-break::boolean)? (chart:label-arrangement::("side-by-side" | "stagger-even" | "stagger-odd"))? ;
 style-chart-properties-attlist ::= common-style-direction-attlist ;
 style-chart-properties-attlist ::= common-rotation-angle-attlist ;
 style-chart-properties-attlist ::= (chart:data-label-number::("none" | "value" | "percentage"))? ;
 style-chart-properties-attlist ::= (chart:data-label-text::boolean)? ;
 style-chart-properties-attlist ::= (chart:data-label-symbol::boolean)? ;
 style-chart-properties-attlist ::= (chart:mean-value::boolean)? ;
 style-chart-properties-attlist ::= (chart:error-category::("none" | "variance" | "standard-deviation" | "percentage" | "error-margin" | "constant"))? ;
 style-chart-properties-attlist ::= (chart:error-percentage::double)? ;
 style-chart-properties-attlist ::= (chart:error-margin::double)? ;
 style-chart-properties-attlist ::= (chart:error-lower-limit::double)? (chart:error-upper-limit::double)? ;
 style-chart-properties-attlist ::= (chart:error-upper-indicator::boolean)? (chart:error-lower-indicator::boolean)? ;
 style-chart-properties-attlist ::= (chart:series-source::("columns" | "rows"))? ;
 style-chart-properties-attlist ::= (chart:regression-type::("none" | "linear" | "logarithmic" | "exponential" | "power"))? ;
text-table-index-entry-template ::= text:table-index-entry-template::text-illustration-index-entry-content ;
text-linenumbering-configuration ::= text:linenumbering-configuration::(text-linenumbering-configuration-attlist text-linenumbering-separator?) ;
draw-path ::= draw:path::(common-draw-path-data-attlist common-draw-position-attlist common-draw-size-attlist common-draw-viewbox-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text) ;
number-embedded-text ::= number:embedded-text::(number-embedded-text-attlist string()) ;
style-handout-master ::= style:handout-master::(common-presentation-header-footer-attlist style-handout-master-attlist shape*) ;
presentation-show-text ::= presentation:show-text::(common-presentation-effect-attlist presentation-sound?) ;
draw-area-circle ::= draw:area-circle::(common-draw-area-attlist svg:cx::coordinate svg:cy::coordinate svg:r::length svg-title? svg-desc? office-event-listeners?) ;
text-user-index-source-attr ::= text-index-scope-attr text-relative-tab-stop-position-attr text:index-name::string ;
 text-user-index-source-attr ::= (text:use-index-marks::boolean)? (text:use-graphics::boolean)? (text:use-tables::boolean)? (text:use-floating-frames::boolean)? (text:use-objects::boolean)? ;
 text-user-index-source-attr ::= (text:copy-outline-levels::boolean)? ;
draw-connector ::= draw:connector::(draw-connector-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text) ;
table-highlighted-range ::= table:highlighted-range::(table-highlighted-range-attlist | table-highlighted-range-attlist-invalid) ;
style-column-sep ::= style:column-sep::style-column-sep-attlist ;
text-linenumbering-configuration-attlist ::= (text:number-lines::boolean)? ;
 text-linenumbering-configuration-attlist ::= common-num-format-attlist? ;
 text-linenumbering-configuration-attlist ::= (text:style-name::styleNameRef)? ;
 text-linenumbering-configuration-attlist ::= (text:increment::nonNegativeInteger)? ;
 text-linenumbering-configuration-attlist ::= (text:number-position::("left" | "right" | "inner" | "outer"))? ;
 text-linenumbering-configuration-attlist ::= (text:offset::nonNegativeLength)? ;
 text-linenumbering-configuration-attlist ::= (text:count-empty-lines::boolean)? ;
 text-linenumbering-configuration-attlist ::= (text:count-in-text-boxes::boolean)? ;
 text-linenumbering-configuration-attlist ::= (text:restart-on-page::boolean)? ;
draw-stroke-dash ::= draw:stroke-dash::draw-stroke-dash-attlist ;
text-object-index-entry-template ::= text:object-index-entry-template::text-illustration-index-entry-content ;
list-source-type ::= (form:list-source-type::("table" | "query" | "sql" | "sql-pass-through" | "value-list" | "table-fields"))? ;
number-month ::= number:month::(number-month-attlist common-calendar-attlist) ;
chart-data-point ::= chart:data-point::chart-data-point-attlist ;
office-scripts ::= (office:scripts::(office-script* office-event-listeners?))? ;
common-vertical-margin-attlist ::= (fo:margin-top::(nonNegativeLength | percent))? (fo:margin-bottom::(nonNegativeLength | percent))? ;
table-data-pilot-table ::= table:data-pilot-table::(table-data-pilot-table-attlist (table-database-source-sql | table-database-source-table | table-database-source-query | table-source-service | table-source-cell-range)? table-data-pilot-field+) ;
label ::= (form:label::string)? ;
style-header-footer-properties-attlist ::= (svg:height::length)? (fo:min-height::length)? ;
 style-header-footer-properties-attlist ::= common-horizontal-margin-attlist common-vertical-margin-attlist common-margin-attlist ;
 style-header-footer-properties-attlist ::= common-border-attlist ;
 style-header-footer-properties-attlist ::= common-border-line-width-attlist ;
 style-header-footer-properties-attlist ::= common-padding-attlist ;
 style-header-footer-properties-attlist ::= common-background-color-attlist ;
 style-header-footer-properties-attlist ::= common-shadow-attlist ;
 style-header-footer-properties-attlist ::= (style:dynamic-spacing::boolean)? ;
style-column ::= style:column::style-column-attlist ;
style-font-face-attlist ::= (svg:font-family::string)? (svg:font-style::fontStyle)? (svg:font-variant::fontVariant)? (svg:font-weight::fontWeight)? (svg:font-stretch::("normal" | "ultra-condensed" | "extra-condensed" | "condensed" | "semi-condensed" | "semi-expanded" | "expanded" | "extra-expanded" | "ultra-expanded"))? (svg:font-size::positiveLength)? (svg:unicode-range::string())? (svg:units-per-em::integer)? (svg:panose-1::string())? (svg:stemv::integer)? (svg:stemh::integer)? (svg:slope::integer)? (svg:cap-height::integer)? (svg:x-height::integer)? (svg:accent-height::integer)? (svg:ascent::integer)? (svg:descent::integer)? (svg:widths::string())? (svg:bbox::string())? (svg:ideographic::integer)? (svg:alphabetic::integer)? (svg:mathematical::integer)? (svg:hanging::integer)? (svg:v-ideographic::integer)? (svg:v-alphabetic::integer)? (svg:v-mathematical::integer)? (svg:v-hanging::integer)? (svg:underline-position::integer)? (svg:underline-thickness::integer)? (svg:strikethrough-position::integer)? (svg:strikethrough-thickness::integer)? (svg:overline-position::integer)? (svg:overline-thickness::integer)? ;
 style-font-face-attlist ::= style:name::string ;
 style-font-face-attlist ::= (style:font-adornments::string)? ;
 style-font-face-attlist ::= (style:font-family-generic::fontFamilyGeneric)? ;
 style-font-face-attlist ::= (style:font-pitch::fontPitch)? ;
 style-font-face-attlist ::= (style:font-charset::textEncoding)? ;
style-num-letter-sync-attlist ::= (style:num-letter-sync::boolean)? ;
common-field-fixed-attlist ::= (text:fixed::boolean)? ;
text-changed-region-attr ::= text:id::ID ;
draw-stroke-dash-attlist ::= draw:name::styleName ;
 draw-stroke-dash-attlist ::= (draw:display-name::string)? ;
 draw-stroke-dash-attlist ::= (draw:style::("rect" | "round"))? ;
 draw-stroke-dash-attlist ::= (draw:dots1::integer)? (draw:dots1-length::length)? (draw:dots2::integer)? (draw:dots2-length::length)? ;
 draw-stroke-dash-attlist ::= (draw:distance::length)? ;
table-last-column ::= table:last-column::common-table-template-attlist ;
table-cell-content-deletion ::= table:cell-content-deletion::((table:id::string)? table-cell-address? table-change-track-table-cell?) ;
office-script-attlist ::= script:language::string ;
config-config-item-map-named ::= config:config-item-map-named::(config-config-item-map-named-attlist config-config-item-map-entry+) ;
number-seconds-attlist ::= (number:style::("short" | "long"))? ;
 number-seconds-attlist ::= (number:decimal-places::integer)? ;
table-deletion ::= table:deletion::(table-deletion-attlist common-table-change-attlist office-change-info table-dependencies? table-deletions? table-cut-offs?) ;
text-index-entry-chapter-attrs ::= (text:display::("name" | "number" | "number-and-name"))? ;
style-ruby-properties ::= style:ruby-properties::style-ruby-properties-content ;
common-contour-attlist ::= draw:recreate-on-edit::boolean ;
change-marks ::= (text:change::change-mark-attr) | (text:change-start::change-mark-attr) | (text:change-end::change-mark-attr) ;
table-database-source-query ::= table:database-source-table::table-database-source-table-attlist ;
common-field-data-style-name-attlist ::= (style:data-style-name::styleNameRef)? ;
style-column-attlist ::= style:rel-width::relativeLength ;
 style-column-attlist ::= (fo:start-indent::length)? ;
 style-column-attlist ::= (fo:end-indent::length)? ;
 style-column-attlist ::= (fo:space-before::length)? ;
 style-column-attlist ::= (fo:space-after::length)? ;
common-fill-timing-attlist ::= (smil:fill::("remove" | "freeze" | "hold" | "auto" | "default" | "transition"))? ;
table-source-service ::= table:source-service::table-source-service-attlist ;
office-annotation ::= office:annotation::(office-annotation-attlist draw-caption-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist dc-creator? dc-date? meta-date-string? (text-p | text-list)*) ;
config-config-item-map-named-attlist ::= config:name::string ;
style-footer-left ::= style:footer-left::(common-style-header-footer-attlist header-footer-content) ;
common-anim-target-attlist ::= (smil:targetElement::IDREF)? ;
 common-anim-target-attlist ::= (anim:sub-item::string)? ;
draw-line ::= draw:line::(draw-line-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text) ;
style-ruby-properties-attlist ::= (style:ruby-position::("above" | "below"))? ;
 style-ruby-properties-attlist ::= (style:ruby-align::("left" | "center" | "right" | "distribute-letter" | "distribute-space"))? ;
table-sort-by-attlist ::= table:field-number::nonNegativeInteger ;
 table-sort-by-attlist ::= (table:data-type::("text" | "number" | "automatic" | string))? ;
 table-sort-by-attlist ::= (table:order::("ascending" | "descending"))? ;
draw-page-thumbnail ::= draw:page-thumbnail::(draw-page-thumbnail-attlist common-draw-position-attlist common-draw-size-attlist presentation-shape-attlist common-draw-shape-with-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc?) ;
table-odd-rows ::= table:odd-rows::common-table-template-attlist ;
style-graphic-properties ::= style:graphic-properties::style-graphic-properties-content ;
table-source-service-attlist ::= table:name::string ;
 table-source-service-attlist ::= table:source-name::string ;
 table-source-service-attlist ::= table:object-name::string ;
 table-source-service-attlist ::= (table:user-name::string)? ;
 table-source-service-attlist ::= (table:password::string)? ;
common-calendar-attlist ::= (number:calendar::("gregorian" | "gengou" | "ROC" | "hanja_yoil" | "hanja" | "hijri" | "jewish" | "buddhist" | string))? ;
draw-handle ::= draw:handle::draw-handle-attlist ;
table-cell-content-change ::= table:cell-content-change::(common-table-change-attlist table-cell-address office-change-info table-dependencies? table-deletions? table-previous) ;
table-subtotal-field ::= table:subtotal-field::table-subtotal-field-attlist ;
chart-legend-attlist ::= (chart:legend-position::("start" | "end" | "top" | "bottom") (chart:legend-align::("start" | "center" | "end"))?) | (chart:legend-position::("top-start" | "bottom-start" | "top-end" | "bottom-end")) | ε ;
 chart-legend-attlist ::= common-draw-position-attlist ;
 chart-legend-attlist ::= (style:legend-expansion::("wide" | "high" | "balanced")) | (style:legend-expansion::"custom" style:legend-expansion-aspect-ratio::double) | ε ;
 chart-legend-attlist ::= (chart:style-name::styleNameRef)? ;
table-subtotal-rules ::= table:subtotal-rules::(table-subtotal-rules-attlist table-sort-groups? table-subtotal-rule*) ;
chart-plot-area ::= chart:plot-area::(chart-plot-area-attlist dr3d-light* chart-axis* chart-series* chart-stock-gain-marker? chart-stock-loss-marker? chart-stock-range-line? chart-wall? chart-floor?) ;
draw-measure-attlist ::= svg:x1::coordinate svg:y1::coordinate ;
 draw-measure-attlist ::= svg:x2::coordinate svg:y2::coordinate ;
draw-param ::= draw:param::draw-param-attlist ;
draw-object-ole ::= draw:object-ole::(draw-object-ole-attlist common-draw-data-attlist | office-binary-data) ;
number-era-attlist ::= (number:style::("short" | "long"))? ;
number-percentage-style ::= number:percentage-style::(common-data-style-attlist style-text-properties? number-text? number-and-text? style-map*) ;
office-body-content ::= office:text::(office-text-attlist office-text-content-prelude office-text-content-main* office-text-content-epilogue) ;
 office-body-content ::= office:drawing::(office-drawing-attlist office-drawing-content-prelude office-drawing-content-main office-drawing-content-epilogue) ;
 office-body-content ::= office:presentation::(office-presentation-attlist office-presentation-content-prelude office-presentation-content-main office-presentation-content-epilogue) ;
 office-body-content ::= office:spreadsheet::(office-spreadsheet-attlist office-spreadsheet-content-prelude office-spreadsheet-content-main office-spreadsheet-content-epilogue) ;
 office-body-content ::= office:chart::(office-chart-attlist office-chart-content-prelude office-chart-content-main office-chart-content-epilogue) ;
 office-body-content ::= office:image::(office-image-attlist office-image-content-prelude office-image-content-main office-image-content-epilogue) ;
draw-contour-polygon ::= draw:contour-polygon::(common-contour-attlist common-draw-size-attlist common-draw-viewbox-attlist common-draw-points-attlist) ;
chart-plot-area-attlist ::= common-draw-position-attlist common-draw-size-attlist ;
 chart-plot-area-attlist ::= (chart:style-name::styleNameRef)? ;
 chart-plot-area-attlist ::= (table:cell-range-address::cellRangeAddress)? ;
 chart-plot-area-attlist ::= (chart:data-source-has-labels::("none" | "row" | "column" | "both"))? ;
 chart-plot-area-attlist ::= dr3d-scene-attlist common-dr3d-transform-attlist ;
form-formatted-text-attlist ::= form-control-attlist common-current-value-attlist common-disabled-attlist common-maxlength-attlist common-printable-attlist common-readonly-attlist common-tab-attlist common-title-attlist common-value-attlist common-convert-empty-attlist common-data-field-attlist ;
 form-formatted-text-attlist ::= (form:max-value::string)? ;
 form-formatted-text-attlist ::= (form:min-value::string)? ;
 form-formatted-text-attlist ::= (form:validation::boolean)? ;
chart-mean-value ::= chart:mean-value::chart-mean-value-attlist ;
style-section-properties ::= style:section-properties::style-section-properties-content ;
table-source-cell-range-attlist ::= table:cell-range-address::cellRangeAddress ;
controls ::= column-controls ;
 controls ::= form:password::(form-password-attlist common-form-control-content) ;
 controls ::= form:file::(form-file-attlist common-form-control-content) ;
 controls ::= form:time::(form-time-attlist common-numeric-control-attlist common-form-control-content) ;
 controls ::= form:fixed-text::(form-fixed-text-attlist common-form-control-content) ;
 controls ::= form:button::(form-button-attlist common-form-control-content) ;
 controls ::= form:image::(form-image-attlist common-form-control-content) ;
 controls ::= form:radio::(form-radio-attlist common-form-control-content) ;
 controls ::= form:frame::(form-frame-attlist common-form-control-content) ;
 controls ::= form:image-frame::(form-image-frame-attlist common-form-control-content) ;
 controls ::= form:hidden::(form-hidden-attlist common-form-control-content) ;
 controls ::= form:grid::(form-grid-attlist common-form-control-content form-column*) ;
 controls ::= form:value-range::(form-value-range-attlist common-form-control-content) ;
 controls ::= form:generic-control::(form-generic-control-attlist common-form-control-content) ;
text-illustration-index ::= text:illustration-index::(sectionAttr text-illustration-index-source text-index-body) ;
office-dde-source ::= office:dde-source::(office-dde-source-attlist common-dde-connection-decl-attlist) ;
table-scenario ::= table:scenario::table-scenario-attlist ;
common-table-template-attlist ::= text:style-name::styleNameRef text:paragraph-style-name::(styleNameRef?) ;
math-math ::= math:math::mathMarkup ;
common-current-value-attlist ::= (form:current-value::string)? ;
table-content-validation ::= table:content-validation::(table-validation-attlist table-help-message? (table-error-message | (table-error-macro office-event-listeners?))?) ;
table-data-pilot-level ::= table:data-pilot-level::(table-data-pilot-level-attlist table-data-pilot-subtotals? table-data-pilot-members? table-data-pilot-display-info? table-data-pilot-sort-info? table-data-pilot-layout-info?) ;
table-dependency ::= table:dependency::(table:id::string) ;
draw-equation-attlist ::= (draw:name::string)? ;
 draw-equation-attlist ::= (draw:formula::string)? ;
text-conditional-text-attlist ::= text:condition::formula ;
 text-conditional-text-attlist ::= text:string-value-if-true::string ;
 text-conditional-text-attlist ::= text:string-value-if-false::string ;
 text-conditional-text-attlist ::= (text:current-value::boolean)? ;
style-table-column-properties-attlist ::= (style:column-width::positiveLength)? (style:rel-column-width::relativeLength)? ;
 style-table-column-properties-attlist ::= (style:use-optimal-column-width::boolean)? ;
 style-table-column-properties-attlist ::= common-break-attlist ;
text-list-item-attr ::= (text:start-value::nonNegativeInteger)? ;
selected ::= (form:selected::boolean)? ;
common-draw-circle-ellipse-attlist ::= (svg:cx::coordinate svg:cy::coordinate)? ;
 common-draw-circle-ellipse-attlist ::= (draw:kind::("full" | "section" | "cut" | "arc"))? ;
 common-draw-circle-ellipse-attlist ::= (draw:start-angle::double)? ;
 common-draw-circle-ellipse-attlist ::= (draw:end-angle::double)? ;
text-page-number-attlist ::= common-field-num-format-attlist common-field-fixed-attlist ;
 text-page-number-attlist ::= (text:page-adjust::integer)? ;
 text-page-number-attlist ::= (text:select-page::("previous" | "current" | "next"))? ;
table-table-source ::= table:table-source::(table-table-source-attlist table-linked-source-attlist) ;
table-label-range-attlist ::= table:label-cell-range-address::cellRangeAddress ;
 table-label-range-attlist ::= table:data-cell-range-address::cellRangeAddress ;
 table-label-range-attlist ::= table:orientation::("column" | "row") ;
text-sequence-decl ::= text:sequence-decl::text-sequence-decl-attlist ;
style-style ::= style:style::(style-style-attlist style-style-content style-map*) ;
draw-enhanced-geometry-attlist ::= (draw:type::custom-shape-type)? ;
 draw-enhanced-geometry-attlist ::= (svg:viewBox::(integer integer integer integer))? ;
 draw-enhanced-geometry-attlist ::= (draw:mirror-vertical::boolean)? (draw:mirror-horizontal::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:text-rotate-angle::double)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-allowed::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:text-path-allowed::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:concentric-gradient-fill-allowed::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-brightness::percent)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-depth::(length double))? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-diffusion::percent)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-number-of-line-segments::integer)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-light-face::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-first-light-harsh::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-second-light-harsh::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-first-light-level::percent)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-second-light-level::percent)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-first-light-direction::vector3D)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-second-light-direction::vector3D)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-metal::boolean)? ;
 draw-enhanced-geometry-attlist ::= (dr3d:shade-mode::("flat" | "phong" | "gouraud" | "draft"))? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-rotation-angle::(double double))? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-rotation-center::vector3D)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-shininess::percent)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-skew::(double double))? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-specularity::percent)? ;
 draw-enhanced-geometry-attlist ::= (dr3d:projection::("parallel" | "perspective"))? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-viewpoint::point3D)? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-origin::(double double))? ;
 draw-enhanced-geometry-attlist ::= (draw:extrusion-color::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:enhanced-path::string)? ;
 draw-enhanced-geometry-attlist ::= (draw:path-stretchpoint-x::double)? (draw:path-stretchpoint-y::double)? ;
 draw-enhanced-geometry-attlist ::= (draw:text-areas::string)? ;
 draw-enhanced-geometry-attlist ::= (draw:glue-points::string)? ;
 draw-enhanced-geometry-attlist ::= (draw:glue-point-type::("none" | "segments" | "rectangle"))? ;
 draw-enhanced-geometry-attlist ::= (draw:glue-point-leaving-directions::string())? ;
 draw-enhanced-geometry-attlist ::= (draw:text-path::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:text-path-mode::("normal" | "path" | "shape"))? ;
 draw-enhanced-geometry-attlist ::= (draw:text-path-scale::("path" | "shape"))? ;
 draw-enhanced-geometry-attlist ::= (draw:text-path-same-letter-heights::boolean)? ;
 draw-enhanced-geometry-attlist ::= (draw:modifiers::string)? ;
common-field-name-attlist ::= text:name::variableName ;
style-presentation-page-layout ::= style:presentation-page-layout::(style:name::styleName (style:display-name::string)? presentation-placeholder*) ;
text-index-entry-page-number ::= text:index-entry-page-number::((text:style-name::styleNameRef)?) ;
presentation-sound-attlist ::= (presentation:play-full::boolean)? ;
text-alphabetical-index-auto-mark-file ::= text:alphabetical-index-auto-mark-file::(xlink:href::anyURI (xlink:type::"simple")?) ;
draw-gradient-attlist ::= (draw:start-color::color)? (draw:end-color::color)? ;
 draw-gradient-attlist ::= (draw:start-intensity::percent)? (draw:end-intensity::percent)? ;
style-background-image-attlist ::= (style:repeat::("no-repeat" | "repeat" | "stretch"))? ;
 style-background-image-attlist ::= (style:position::("left" | "center" | "right" | "top" | "bottom" | (horiBackPos vertBackPos) | (vertBackPos horiBackPos)))? ;
 style-background-image-attlist ::= (style:filter-name::string)? ;
 style-background-image-attlist ::= (draw:opacity::percent)? ;
svg-font-face-src ::= svg:font-face-src::((svg-font-face-uri | svg-font-face-name)+) ;
text-sequence-decl-attlist ::= common-field-name-attlist ;
 text-sequence-decl-attlist ::= text:display-outline-level::nonNegativeInteger ;
 text-sequence-decl-attlist ::= (text:separation-character::character)? ;
svg-font-face-name ::= svg:font-face-name::((svg:name::string())?) ;
bound-column ::= (form:bound-column::string)? ;
style-drop-cap-attlist ::= (style:length::("word" | positiveInteger))? ;
 style-drop-cap-attlist ::= (style:lines::positiveInteger)? ;
 style-drop-cap-attlist ::= (style:distance::length)? ;
 style-drop-cap-attlist ::= (style:style-name::styleNameRef)? ;
text-table-of-content ::= text:table-of-content::(sectionAttr text-table-of-content-source text-index-body) ;
anim-command-attlist ::= anim:command::string ;
table-data-pilot-members ::= table:data-pilot-members::(table-data-pilot-member*) ;
text-tracked-changes ::= (text:tracked-changes::(text-tracked-changes-attr text-changed-region*))? ;
text-index-entry-link-end ::= text:index-entry-link-end::((text:style-name::styleNameRef)?) ;
number-hours-attlist ::= (number:style::("short" | "long"))? ;
form-item ::= form:item::(form-item-attlist string()) ;
draw-hatch ::= draw:hatch::draw-hatch-attlist ;
sectionAttr ::= (text:style-name::styleNameRef)? ;
 sectionAttr ::= text:name::string ;
 sectionAttr ::= (text:protected::boolean)? ;
 sectionAttr ::= (text:protection-key::string)? ;
office-meta ::= (office:meta::office-meta-content)? ;
style-table-row-properties-attlist ::= (style:row-height::positiveLength)? (style:min-row-height::nonNegativeLength)? ;
 style-table-row-properties-attlist ::= (style:use-optimal-row-height::boolean)? ;
 style-table-row-properties-attlist ::= common-background-color-attlist ;
 style-table-row-properties-attlist ::= common-break-attlist ;
 style-table-row-properties-attlist ::= (fo:keep-together::("auto" | "always"))? ;
chart-regression-curve ::= chart:regression-curve::chart-regression-curve-attlist ;
common-auto-reorder-attlist ::= (number:automatic-order::boolean)? ;
table-consolidation ::= table:consolidation::table-consolidation-attlist ;
text-bibliography-configuration ::= text:bibliography-configuration::(text-bibliography-configuration-attlist text-sort-key*) ;
draw-circle-attlist ::= (svg:r::length)? ;
chart-footer ::= chart:footer::(chart-title-attlist text-p?) ;
table-subtotal-rule ::= table:subtotal-rule::(table-subtotal-rule-attlist table-subtotal-field*) ;
common-stock-marker-attlist ::= (chart:style-name::styleNameRef)? ;
chart-regression-curve-attlist ::= (chart:style-name::styleNameRef)? ;
common-value-and-type-attlist ::= (office:value-type::"float" office:value::double) | (office:value-type::"percentage" office:value::double) | (office:value-type::"currency" office:value::double (office:currency::string)?) | (office:value-type::"date" office:date-value::dateOrDateTime) | (office:value-type::"time" office:time-value::duration) | (office:value-type::"boolean" office:boolean-value::boolean) | (office:value-type::"string" (office:string-value::string)?) ;
draw-caption ::= draw:caption::(draw-caption-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text) ;
text-index-body ::= text:index-body::(index-content-main*) ;
common-decimal-places-attlist ::= (number:decimal-places::integer)? ;
number-minutes ::= number:minutes::number-minutes-attlist ;
chart-wall ::= chart:wall::chart-wall-attlist ;
text-index-entry-bibliography ::= text:index-entry-bibliography::text-index-entry-bibliography-attrs ;
table-subtotal-rule-attlist ::= table:group-by-field-number::nonNegativeInteger ;
table-filter ::= table:filter::(table-filter-attlist table-filter-condition | table-filter-and | table-filter-or) ;
form-listbox-attlist ::= form-control-attlist common-disabled-attlist dropdown common-printable-attlist size common-tab-attlist common-title-attlist bound-column common-data-field-attlist list-source list-source-type ;
 form-listbox-attlist ::= (form:multiple::boolean)? ;
 form-listbox-attlist ::= (form:xforms-list-source::string)? ;
style-table-cell-properties-attlist ::= (style:vertical-align::("top" | "middle" | "bottom" | "automatic"))? ;
 style-table-cell-properties-attlist ::= (style:text-align-source::("fix" | "value-type"))? ;
 style-table-cell-properties-attlist ::= common-style-direction-attlist ;
 style-table-cell-properties-attlist ::= (style:glyph-orientation-vertical::("auto" | "0"))? ;
 style-table-cell-properties-attlist ::= common-shadow-attlist ;
 style-table-cell-properties-attlist ::= common-background-color-attlist ;
 style-table-cell-properties-attlist ::= common-border-attlist ;
 style-table-cell-properties-attlist ::= (style:diagonal-tl-br::string)? (style:diagonal-tl-br-widths::borderWidths)? (style:diagonal-bl-tr::string)? (style:diagonal-bl-tr-widths::borderWidths)? ;
 style-table-cell-properties-attlist ::= common-border-line-width-attlist ;
 style-table-cell-properties-attlist ::= common-padding-attlist ;
 style-table-cell-properties-attlist ::= (fo:wrap-option::("no-wrap" | "wrap"))? ;
 style-table-cell-properties-attlist ::= common-rotation-angle-attlist ;
 style-table-cell-properties-attlist ::= (style:rotation-align::("none" | "bottom" | "top" | "center"))? ;
 style-table-cell-properties-attlist ::= (style:cell-protect::("none" | "hidden-and-protected" | (("protected" | "formula-hidden")+)))? ;
 style-table-cell-properties-attlist ::= (style:print-content::boolean)? ;
 style-table-cell-properties-attlist ::= (style:decimal-places::nonNegativeInteger)? ;
 style-table-cell-properties-attlist ::= (style:repeat-content::boolean)? ;
 style-table-cell-properties-attlist ::= (style:shrink-to-fit::boolean)? ;
text-alphabetical-index-mark-attrs ::= (text:key1::string)? (text:key2::string)? ;
 text-alphabetical-index-mark-attrs ::= (text:string-value-phonetic::string)? (text:key1-phonetic::string)? (text:key2-phonetic::string)? ;
 text-alphabetical-index-mark-attrs ::= (text:main-entry::boolean)? ;
text-sort-key ::= text:sort-key::text-sort-key-attlist ;
chart-floor-attlist ::= (svg:width::length)? ;
 chart-floor-attlist ::= (chart:style-name::styleNameRef)? ;
presentation-notes ::= presentation:notes::(common-presentation-header-footer-attlist presentation-notes-attlist office-forms shape*) ;
number-number ::= number:number::(number-number-attlist common-decimal-places-attlist common-number-attlist number-embedded-text*) ;
text-notes-configuration ::= text:notes-configuration::text-notes-configuration-content ;
table-database-range ::= table:database-range::(table-database-range-attlist (table-database-source-sql | table-database-source-table | table-database-source-query)? table-filter? table-sort? table-subtotal-rules?) ;
text-index-scope-attr ::= (text:index-scope::("document" | "chapter"))? ;
text-section ::= text:section::(text-section-attr text-section-source | text-section-source-dde | ε text-content*) ;
presentation-animation-group ::= presentation:animation-group::(presentation-animation-elements*) ;
text-relative-tab-stop-position-attr ::= (text:relative-tab-stop-position::boolean)? ;
number-currency-symbol-attlist ::= (number:language::languageCode)? (number:country::countryCode)? ;
text-list-item ::= text:list-item::(text-list-item-attr text-list-item-content) ;
text-list-level-style-number-attr ::= (text:style-name::styleNameRef)? ;
 text-list-level-style-number-attr ::= common-num-format-attlist common-num-format-prefix-suffix-attlist ;
 text-list-level-style-number-attr ::= (text:display-levels::positiveInteger)? ;
 text-list-level-style-number-attr ::= (text:start-value::positiveInteger)? ;
common-border-attlist ::= (fo:border::string)? (fo:border-top::string)? (fo:border-bottom::string)? (fo:border-left::string)? (fo:border-right::string)? ;
presentation-notes-attlist ::= (style:page-layout-name::styleNameRef)? ;
 presentation-notes-attlist ::= (draw:style-name::styleNameRef)? ;
table-database-range-attlist ::= (table:name::string)? ;
 table-database-range-attlist ::= (table:is-selection::boolean)? ;
 table-database-range-attlist ::= (table:on-update-keep-styles::boolean)? ;
 table-database-range-attlist ::= (table:on-update-keep-size::boolean)? ;
 table-database-range-attlist ::= (table:has-persistent-data::boolean)? ;
 table-database-range-attlist ::= (table:orientation::("column" | "row"))? ;
 table-database-range-attlist ::= (table:contains-header::boolean)? ;
 table-database-range-attlist ::= (table:display-filter-buttons::boolean)? ;
 table-database-range-attlist ::= table:target-range-address::cellRangeAddress ;
 table-database-range-attlist ::= (table:refresh-delay::boolean)? ;
form-property-name ::= form:property-name::string ;
config-config-item-set-attlist ::= config:name::string ;
text-object-index-source-attrs ::= text-index-scope-attr ;
 text-object-index-source-attrs ::= text-relative-tab-stop-position-attr ;
 text-object-index-source-attrs ::= (text:use-spreadsheet-objects::boolean)? ;
 text-object-index-source-attrs ::= (text:use-math-objects::boolean)? ;
 text-object-index-source-attrs ::= (text:use-draw-objects::boolean)? ;
 text-object-index-source-attrs ::= (text:use-chart-objects::boolean)? ;
 text-object-index-source-attrs ::= (text:use-other-objects::boolean)? ;
table-change-track-table-cell-attlist ::= (table:cell-address::cellAddress)? ;
 table-change-track-table-cell-attlist ::= (table:matrix-covered::boolean)? ;
 table-change-track-table-cell-attlist ::= (table:formula::string)? (table:number-matrix-columns-spanned::positiveInteger)? (table:number-matrix-rows-spanned::positiveInteger)? common-value-and-type-attlist? ;
text-illustration-index-source ::= text:illustration-index-source::(text-illustration-index-source-attrs text-index-title-template? text-illustration-index-entry-template?) ;
style-region-center ::= style:region-center::region-content ;
number-number-style ::= number:number-style::(common-data-style-attlist style-text-properties? number-text? (any-number number-text?)? style-map*) ;
target-frame ::= (office:target-frame::targetFrameName)? ;
form-property-value-and-type-attlist ::= common-value-and-type-attlist | (office:value-type::"void") ;
table-named-range ::= table:named-range::table-named-range-attlist ;
style-header ::= style:header::(common-style-header-footer-attlist header-footer-content) ;
form-time-attlist ::= (form:value::time)? ;
 form-time-attlist ::= (form:current-value::time)? ;
 form-time-attlist ::= (form:min-value::time)? ;
 form-time-attlist ::= (form:max-value::time)? ;
table-cell-address ::= table:cell-address::common-table-cell-address-attlist ;
table-operation ::= table:operation::table-operation-attlist ;
office-document-meta ::= office:document-meta::(office-document-common-attrs office-meta) ;
text-index-entry-text ::= text:index-entry-text::((text:style-name::styleNameRef)?) ;
common-draw-data-attlist ::= xlink:href::anyURI (xlink:type::"simple")? (xlink:show::"embed")? (xlink:actuate::"onLoad")? ;
chart-axis-attlist ::= chart:dimension::("x" | "y" | "z") ;
 chart-axis-attlist ::= (chart:name::string)? ;
 chart-axis-attlist ::= (chart:style-name::styleNameRef)? ;
text-page-attlist ::= text:master-page-name::styleNameRef ;
text-table-of-content-entry-template ::= text:table-of-content-entry-template::(text-table-of-content-entry-template-attlist text-table-of-content-children*) ;
draw-g ::= draw:g::(draw-g-attlist common-draw-z-index-attlist common-draw-name-attlist common-draw-id-attlist common-draw-style-name-attlist common-text-spreadsheet-shape-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* shape*) ;
common-draw-path-data-attlist ::= svg:d::pathData ;
table-named-range-attlist ::= table:name::string table:cell-range-address::cellRangeAddress (table:base-cell-address::cellAddress)? (table:range-usable-as::("none" | (("print-range" | "filter" | "repeat-row" | "repeat-column")+)))? ;
number-quarter-attlist ::= (number:style::("short" | "long"))? ;
draw-a ::= draw:a::(draw-a-attlist draw-frame) ;
table-filter-condition-attlist ::= table:field-number::nonNegativeInteger ;
 table-filter-condition-attlist ::= table:value::string ;
 table-filter-condition-attlist ::= table:operator::string ;
 table-filter-condition-attlist ::= (table:case-sensitive::string)? ;
 table-filter-condition-attlist ::= (table:data-type::("text" | "number"))? ;
table-previous ::= table:previous::((table:id::string)? table-change-track-table-cell) ;
number-text-style ::= number:text-style::(common-data-style-attlist style-text-properties? number-text? (number-text-content number-text?)* style-map*) ;
office-body ::= office:body::office-body-content ;
svg-font-face-uri ::= svg:font-face-uri::(common-svg-font-face-xlink-attlist svg-font-face-format*) ;
draw-g-attlist ::= (svg:y::coordinate)? ;
text-list-style-content ::= text:list-level-style-number::(text-list-level-style-attr text-list-level-style-number-attr style-list-level-properties? style-text-properties?) ;
 text-list-style-content ::= text:list-level-style-bullet::(text-list-level-style-attr text-list-level-style-bullet-attr style-list-level-properties? style-text-properties?) ;
 text-list-style-content ::= text:list-level-style-image::(text-list-level-style-attr text-list-level-style-image-attr style-list-level-properties?) ;
table-table-row-attlist ::= (table:number-rows-repeated::positiveInteger)? ;
 table-table-row-attlist ::= (table:style-name::styleNameRef)? ;
 table-table-row-attlist ::= (table:default-cell-style-name::styleNameRef)? ;
 table-table-row-attlist ::= (table:visibility::table-visibility-value)? ;
style-page-layout ::= style:page-layout::(style-page-layout-attlist style-page-layout-properties? style-header-style? style-footer-style?) ;
office-process-content ::= (office:process-content::boolean)? ;
form-date-attlist ::= (form:value::date)? ;
 form-date-attlist ::= (form:current-value::date)? ;
 form-date-attlist ::= (form:min-value::date)? ;
 form-date-attlist ::= (form:max-value::date)? ;
common-form-relative-image-position-attlist ::= ((form:image-position::"center")?) | (form:image-position::("start" | "end" | "top" | "bottom") (form:image-align::("start" | "center" | "end"))?) ;
presentation-play ::= presentation:play::presentation-play-attlist ;
table-insertion-cut-off ::= table:insertion-cut-off::table-insertion-cut-off-attlist ;
presentation-animations ::= presentation:animations::((presentation-animation-elements | presentation-animation-group)*) ;
style-header-footer-properties ::= style:header-footer-properties::style-header-footer-properties-content ;
common-value-attlist ::= (form:value::string)? ;
style-footnote-sep-attlist ::= (style:width::length)? (style:rel-width::percent)? (style:color::color)? (style:line-style::lineStyle)? (style:adjustment::("left" | "center" | "right"))? (style:distance-before-sep::length)? (style:distance-after-sep::length)? ;
table-first-row ::= table:first-row::common-table-template-attlist ;
text-list-header ::= text:list-header::text-list-item-content ;
style-column-sep-attlist ::= (style:style::("none" | "solid" | "dotted" | "dashed" | "dot-dashed"))? ;
 style-column-sep-attlist ::= style:width::length ;
 style-column-sep-attlist ::= (style:height::percent)? ;
 style-column-sep-attlist ::= (style:vertical-align::("top" | "middle" | "bottom"))? ;
 style-column-sep-attlist ::= (style:color::color)? ;
text-user-index-entry-template ::= text:user-index-entry-template::(text-user-index-entry-template-attrs (text-index-entry-chapter | text-index-entry-page-number | text-index-entry-text | text-index-entry-span | text-index-entry-tab-stop)*) ;
table-database-source-table ::= table:database-source-query::table-database-source-query-attlist ;
table-table-cell-range-source-attlist ::= table:name::string ;
 table-table-cell-range-source-attlist ::= table:last-column-spanned::positiveInteger table:last-row-spanned::positiveInteger ;
common-form-control-attlist ::= (form:name::string)? ;
 common-form-control-attlist ::= (form:control-implementation::namespacedToken)? ;
common-svg-font-face-xlink-attlist ::= xlink:href::anyURI (xlink:type::"simple")? (xlink:actuate::"onRequest")? ;
draw-area-polygon ::= draw:area-polygon::(common-draw-area-attlist svg:x::coordinate svg:y::coordinate svg:width::length svg:height::length common-draw-viewbox-attlist common-draw-points-attlist svg-title? svg-desc? office-event-listeners?) ;
chart-stock-gain-marker ::= chart:stock-gain-marker::common-stock-marker-attlist ;
office-forms ::= (office:forms::(office-forms-attlist (form-form | xforms-model)*))? ;
common-restart-timing-attlist ::= (smil:restart::("never" | "always" | "whenNotActive" | "default"))? ;
form-properties ::= form:properties::(form-property+) ;
common-maxlength-attlist ::= (form:max-length::nonNegativeInteger)? ;
draw-object-attlist ::= (draw:notify-on-update-of-ranges::string)? ;
common-rotation-angle-attlist ::= (style:rotation-angle::nonNegativeInteger)? ;
common-readonly-attlist ::= (form:readonly::boolean)? ;
draw-measure ::= draw:measure::(draw-measure-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text) ;
draw-control ::= draw:control::(draw-control-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? draw-glue-point*) ;
table-table-column ::= table:table-column::table-table-column-attlist ;
text-sequence-ref-content ::= (text:reference-format::("page" | "chapter" | "direction" | "text" | "category-and-value" | "caption" | "value"))? ;
table-data-pilot-display-info ::= table:data-pilot-display-info::table-data-pilot-display-info-attlist ;
table-source-range-address ::= table:source-range-address::common-table-range-attlist ;
presentation-show ::= presentation:show::presentation-show-attlist ;
office-forms-attlist ::= (form:automatic-focus::boolean)? ;
 office-forms-attlist ::= (form:apply-design-mode::boolean)? ;
draw-plugin-attlist ::= (draw:mime-type::string())? ;
svg-stop ::= svg:stop::(svg:offset::(double | percent) (svg:stop-color::color)? (svg:stop-opacity::double)?) ;
table-named-expression ::= table:named-expression::table-named-expression-attlist ;
table-validation-attlist ::= table:name::string ;
 table-validation-attlist ::= (table:condition::string)? ;
 table-validation-attlist ::= (table:base-cell-address::cellAddress)? ;
 table-validation-attlist ::= (table:allow-empty-cell::boolean)? ;
 table-validation-attlist ::= (table:display-list::("none" | "unsorted" | "sort-ascending"))? ;
table-even-columns ::= table:even-columns::common-table-template-attlist ;
draw-page-thumbnail-attlist ::= (draw:page-number::positiveInteger)? ;
text-tab-attr ::= (text:tab-ref::nonNegativeInteger)? ;
text-style-name ::= (form:text-style-name::styleNameRef)? ;
text-table-of-content-source ::= text:table-of-content-source::(text-table-of-content-source-attlist text-index-title-template? text-table-of-content-entry-template* text-index-source-styles*) ;
text-index-entry-tab-stop-attrs ::= (style:leader-char::character)? ;
 text-index-entry-tab-stop-attrs ::= (style:type::"right") | (style:type::"left" style:position::length) ;
table-source-cell-range ::= table:source-cell-range::(table-source-cell-range-attlist table-filter?) ;
table-data-pilot-display-info-attlist ::= table:enabled::boolean ;
 table-data-pilot-display-info-attlist ::= table:data-field::string ;
 table-data-pilot-display-info-attlist ::= table:member-count::nonNegativeInteger ;
 table-data-pilot-display-info-attlist ::= table:display-member-mode::("from-top" | "from-bottom") ;
common-field-database-table-attlist ::= text:table-name::string ;
 common-field-database-table-attlist ::= (text:table-type::("table" | "query" | "command"))? ;
common-margin-attlist ::= (fo:margin::(nonNegativeLength | percent))? ;
common-spline-anim-value-attlist ::= (smil:keyTimes::string)? ;
 common-spline-anim-value-attlist ::= (smil:keySplines::string)? ;
table-odd-columns ::= table:odd-columns::common-table-template-attlist ;
common-draw-layer-name-attlist ::= (draw:layer::string())? ;
draw-rect-attlist ::= (draw:corner-radius::nonNegativeLength)? ;
chart-stock-loss-marker ::= chart:stock-loss-marker::common-stock-marker-attlist ;
common-field-display-value-formula-attlist ::= (text:display::("value" | "formula"))? ;
office-event-listeners ::= office:event-listeners::((script-event-listener | presentation-event-listener)*) ;
dr3d-sphere ::= dr3d:sphere::(dr3d-sphere-attlist common-draw-z-index-attlist common-draw-id-attlist common-draw-layer-name-attlist common-draw-style-name-attlist common-dr3d-transform-attlist) ;
text-id ::= text:id::string ;
text-table-of-content-source-attlist ::= (text:outline-level::positiveInteger)? ;
 text-table-of-content-source-attlist ::= (text:use-outline-level::boolean)? ;
 text-table-of-content-source-attlist ::= (text:use-index-marks::boolean)? ;
 text-table-of-content-source-attlist ::= (text:use-index-source-styles::boolean)? ;
 text-table-of-content-source-attlist ::= (text:index-scope::("document" | "chapter"))? ;
 text-table-of-content-source-attlist ::= (text:relative-tab-stop-position::boolean)? ;
style-text-properties ::= style:text-properties::style-text-properties-content ;
draw-equation ::= draw:equation::draw-equation-attlist ;
draw-object-ole-attlist ::= (draw:class-id::string())? ;
text-table-index-source ::= text:table-index-source::(text-illustration-index-source-attrs text-index-title-template? text-table-index-entry-template?) ;
office-automatic-styles ::= (office:automatic-styles::(styles style-page-layout*))? ;
animation-element ::= anim:animate::(common-anim-target-attlist common-anim-named-target-attlist common-anim-values-attlist common-anim-spline-mode-attlist common-spline-anim-value-attlist common-timing-attlist common-anim-add-accum-attlist) ;
 animation-element ::= anim:set::(common-anim-target-attlist common-anim-named-target-attlist common-anim-set-values-attlist common-timing-attlist common-anim-add-accum-attlist) ;
 animation-element ::= anim:animateMotion::(anim-animate-motion-attlist common-anim-target-attlist common-anim-named-target-attlist common-anim-add-accum-attlist common-anim-values-attlist common-timing-attlist common-spline-anim-value-attlist) ;
 animation-element ::= anim:animateColor::(common-anim-target-attlist common-anim-named-target-attlist common-anim-add-accum-attlist common-anim-values-attlist common-anim-spline-mode-attlist common-spline-anim-value-attlist anim-animate-color-attlist common-timing-attlist) ;
 animation-element ::= anim:animateTransform::(common-anim-target-attlist common-anim-named-target-attlist common-anim-add-accum-attlist common-anim-values-attlist anim-animate-transform-attlist common-timing-attlist) ;
 animation-element ::= anim:transitionFilter::(common-anim-target-attlist common-anim-add-accum-attlist common-anim-values-attlist common-anim-spline-mode-attlist anim-transition-filter-attlist common-timing-attlist) ;
 animation-element ::= anim:par::(common-anim-attlist common-timing-attlist common-endsync-timing-attlist animation-element*) ;
 animation-element ::= anim:seq::(common-anim-attlist common-endsync-timing-attlist common-timing-attlist animation-element*) ;
 animation-element ::= anim:iterate::(common-anim-attlist anim-iterate-attlist common-timing-attlist common-endsync-timing-attlist animation-element*) ;
 animation-element ::= anim:audio::(common-anim-attlist anim-audio-attlist common-basic-timing-attlist) ;
 animation-element ::= anim:command::(common-anim-attlist anim-command-attlist common-begin-end-timing-attlist common-anim-target-attlist (anim:param::(anim:name::string() anim:value::string()))*) ;
draw-polygon ::= draw:polygon::(common-draw-points-attlist common-draw-position-attlist common-draw-size-attlist common-draw-viewbox-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text) ;
svg-title ::= svg:title::string() ;
anim-animate-color-attlist ::= (anim:color-interpolation::("rgb" | "hsl"))? ;
 anim-animate-color-attlist ::= (anim:color-interpolation-direction::("clockwise" | "counter-clockwise"))? ;
style-section-properties-attlist ::= common-background-color-attlist ;
 style-section-properties-attlist ::= common-horizontal-margin-attlist ;
 style-section-properties-attlist ::= (style:protect::boolean)? ;
 style-section-properties-attlist ::= (text:dont-balance-text-columns::boolean)? ;
 style-section-properties-attlist ::= common-writing-mode-attlist ;
table-data-pilot-group ::= table:data-pilot-group::(table-data-pilot-group-attlist table-data-pilot-group-member+) ;
table-label-range ::= table:label-range::table-label-range-attlist ;
number-boolean ::= number:boolean::ε ;
dr3d-cube ::= dr3d:cube::(dr3d-cube-attlist common-draw-z-index-attlist common-draw-id-attlist common-draw-layer-name-attlist common-draw-style-name-attlist common-dr3d-transform-attlist) ;
table-scenario-attlist ::= table:scenario-ranges::cellRangeAddressList ;
 table-scenario-attlist ::= table:is-active::boolean ;
 table-scenario-attlist ::= (table:display-border::boolean)? ;
 table-scenario-attlist ::= (table:border-color::color)? ;
 table-scenario-attlist ::= (table:copy-back::boolean)? ;
 table-scenario-attlist ::= (table:copy-styles::boolean)? ;
 table-scenario-attlist ::= (table:copy-formulas::boolean)? ;
 table-scenario-attlist ::= (table:comment::string)? ;
 table-scenario-attlist ::= (table:protected::boolean)? ;
common-control-id-attlist ::= form:id::ID ;
number-week-of-year ::= number:week-of-year::common-calendar-attlist ;
form-option ::= form:option::(form-option-attlist string()) ;
table-data-pilot-level-attlist ::= (table:show-empty::boolean)? ;
style-footer-style ::= style:footer-style::(style-header-footer-properties?) ;
presentation-event-listener ::= presentation:event-listener::(presentation-event-listener-attlist presentation-sound?) ;
draw-gradient ::= draw:gradient::(common-draw-gradient-attlist draw-gradient-attlist) ;
text-outline-level ::= (text:outline-level::positiveInteger)? ;
common-background-color-attlist ::= (fo:background-color::("transparent" | color))? ;
table-data-pilot-group-attlist ::= table:name::string ;
draw-frame-attlist ::= (draw:copy-of::string)? ;
common-restart-default-attlist ::= (smil:restartDefault::("never" | "always" | "whenNotActive" | "inherit"))? ;
chart-domain ::= chart:domain::((table:cell-range-address::cellRangeAddress)?) ;
table-data-pilot-group-member-attlist ::= table:name::string ;
office-text-attlist ::= (text:global::boolean)? ;
 office-text-attlist ::= (text:use-soft-page-breaks::boolean)? ;
style-paragraph-properties ::= style:paragraph-properties::style-paragraph-properties-content ;
table-table-row-group ::= table:table-row-group::(table-table-row-group-attlist table-rows-and-groups) ;
text-file-name-attlist ::= (text:display::("full" | "path" | "name" | "name-and-extension"))? ;
 text-file-name-attlist ::= common-field-fixed-attlist ;
text-illustration-index-entry-template ::= text:illustration-index-entry-template::text-illustration-index-entry-content ;
presentation-event-listener-attlist ::= script:event-name::string ;
 presentation-event-listener-attlist ::= presentation:action::("none" | "previous-page" | "next-page" | "first-page" | "last-page" | "hide" | "stop" | "execute" | "show" | "verb" | "fade-out" | "sound") ;
 presentation-event-listener-attlist ::= (presentation:effect::presentationEffects)? ;
 presentation-event-listener-attlist ::= (presentation:direction::presentationEffectDirections)? ;
 presentation-event-listener-attlist ::= (presentation:speed::presentationSpeeds)? ;
 presentation-event-listener-attlist ::= (presentation:start-scale::percent)? ;
 presentation-event-listener-attlist ::= (xlink:href::anyURI)? (xlink:type::"simple")? (xlink:show::"embed")? (xlink:actuate::"onRequest")? ;
 presentation-event-listener-attlist ::= (presentation:verb::nonNegativeInteger)? ;
common-fill-default-attlist ::= (smil:fillDefault::("remove" | "freeze" | "hold" | "transition" | "auto" | "inherit"))? ;
common-form-visual-effect-attlist ::= (form:visual-effect::("flat" | "3d"))? ;
style-page-layout-properties-attlist ::= (fo:page-width::length)? (fo:page-height::length)? ;
 style-page-layout-properties-attlist ::= common-num-format-attlist? common-num-format-prefix-suffix-attlist ;
 style-page-layout-properties-attlist ::= (style:paper-tray-name::("default" | string))? ;
 style-page-layout-properties-attlist ::= (style:print-orientation::("portrait" | "landscape"))? ;
 style-page-layout-properties-attlist ::= common-horizontal-margin-attlist common-vertical-margin-attlist common-margin-attlist ;
 style-page-layout-properties-attlist ::= common-border-attlist ;
 style-page-layout-properties-attlist ::= common-border-line-width-attlist ;
 style-page-layout-properties-attlist ::= common-padding-attlist ;
 style-page-layout-properties-attlist ::= common-shadow-attlist ;
 style-page-layout-properties-attlist ::= common-background-color-attlist ;
 style-page-layout-properties-attlist ::= (style:register-truth-ref-style-name::styleNameRef)? ;
 style-page-layout-properties-attlist ::= (style:print::(("headers" | "grid" | "annotations" | "objects" | "charts" | "drawings" | "formulas" | "zero-values")*))? ;
 style-page-layout-properties-attlist ::= (style:print-page-order::("ttb" | "ltr"))? ;
 style-page-layout-properties-attlist ::= (style:first-page-number::(positiveInteger | "continue"))? ;
 style-page-layout-properties-attlist ::= (style:scale-to::percent)? (style:scale-to-pages::positiveInteger)? ;
 style-page-layout-properties-attlist ::= (style:table-centering::("horizontal" | "vertical" | "both" | "none"))? ;
 style-page-layout-properties-attlist ::= (style:footnote-max-height::length)? ;
 style-page-layout-properties-attlist ::= common-writing-mode-attlist ;
 style-page-layout-properties-attlist ::= (style:layout-grid-mode::("none" | "line" | "both"))? ;
 style-page-layout-properties-attlist ::= (style:layout-grid-base-height::length)? ;
 style-page-layout-properties-attlist ::= (style:layout-grid-ruby-height::length)? ;
 style-page-layout-properties-attlist ::= (style:layout-grid-lines::positiveInteger)? ;
 style-page-layout-properties-attlist ::= (style:layout-grid-color::color)? ;
 style-page-layout-properties-attlist ::= (style:layout-grid-ruby-below::boolean)? ;
 style-page-layout-properties-attlist ::= (style:layout-grid-print::boolean)? ;
 style-page-layout-properties-attlist ::= (style:layout-grid-display::boolean)? ;
draw-text-box-attlist ::= (draw:chain-next-name::string)? ;
 draw-text-box-attlist ::= (draw:corner-radius::nonNegativeLength)? ;
 draw-text-box-attlist ::= (fo:min-height::(length | percent))? (fo:min-width::(length | percent))? ;
 draw-text-box-attlist ::= (fo:max-height::(length | percent))? (fo:max-width::(length | percent))? ;
 draw-text-box-attlist ::= text-id? ;
table-error-message ::= table:error-message::((table:title::string)? (table:display::boolean)? (table:message-type::("stop" | "warning" | "information"))? text-p*) ;
style-table-row-properties ::= style:table-row-properties::style-table-row-properties-content ;
style-paragraph-properties-attlist ::= (fo:line-height::("normal" | nonNegativeLength | percent))? ;
 style-paragraph-properties-attlist ::= (style:line-height-at-least::nonNegativeLength)? ;
 style-paragraph-properties-attlist ::= (style:line-spacing::length)? ;
 style-paragraph-properties-attlist ::= (style:font-independent-line-spacing::boolean)? ;
 style-paragraph-properties-attlist ::= common-text-align ;
 style-paragraph-properties-attlist ::= (fo:text-align-last::("start" | "center" | "justify"))? ;
 style-paragraph-properties-attlist ::= (style:justify-single-word::boolean)? ;
 style-paragraph-properties-attlist ::= (fo:keep-together::("auto" | "always"))? ;
 style-paragraph-properties-attlist ::= (fo:widows::nonNegativeInteger)? ;
 style-paragraph-properties-attlist ::= (fo:orphans::nonNegativeInteger)? ;
 style-paragraph-properties-attlist ::= (style:tab-stop-distance::nonNegativeLength)? ;
 style-paragraph-properties-attlist ::= (fo:hyphenation-keep::("auto" | "page"))? ;
 style-paragraph-properties-attlist ::= (fo:hyphenation-ladder-count::("no-limit" | positiveInteger))? ;
 style-paragraph-properties-attlist ::= (style:register-true::boolean)? ;
 style-paragraph-properties-attlist ::= common-horizontal-margin-attlist ;
 style-paragraph-properties-attlist ::= (fo:text-indent::(length | percent))? ;
 style-paragraph-properties-attlist ::= (style:auto-text-indent::boolean)? ;
 style-paragraph-properties-attlist ::= common-vertical-margin-attlist ;
 style-paragraph-properties-attlist ::= common-margin-attlist ;
 style-paragraph-properties-attlist ::= common-break-attlist ;
 style-paragraph-properties-attlist ::= common-background-color-attlist ;
 style-paragraph-properties-attlist ::= common-border-attlist ;
 style-paragraph-properties-attlist ::= common-border-line-width-attlist ;
 style-paragraph-properties-attlist ::= common-padding-attlist ;
 style-paragraph-properties-attlist ::= common-shadow-attlist ;
 style-paragraph-properties-attlist ::= common-keep-with-next-attlist ;
 style-paragraph-properties-attlist ::= (text:number-lines::boolean)? ;
 style-paragraph-properties-attlist ::= (text:line-number::nonNegativeInteger)? ;
 style-paragraph-properties-attlist ::= (style:text-autospace::("none" | "ideograph-alpha"))? ;
 style-paragraph-properties-attlist ::= (style:punctuation-wrap::("simple" | "hanging"))? ;
 style-paragraph-properties-attlist ::= (style:line-break::("normal" | "strict"))? ;
 style-paragraph-properties-attlist ::= (style:vertical-align::("top" | "middle" | "bottom" | "auto" | "baseline"))? ;
 style-paragraph-properties-attlist ::= common-writing-mode-attlist ;
 style-paragraph-properties-attlist ::= (style:writing-mode-automatic::boolean)? ;
 style-paragraph-properties-attlist ::= (style:snap-to-layout-grid::boolean)? ;
 style-paragraph-properties-attlist ::= common-page-number-attlist ;
 style-paragraph-properties-attlist ::= (style:background-transparency::percent)? ;
draw-regular-polygon ::= draw:regular-polygon::(draw-regular-polygon-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text) ;
table-table-row-group-attlist ::= (table:display::boolean)? ;
common-border-line-width-attlist ::= (style:border-line-width::borderWidths)? (style:border-line-width-top::borderWidths)? (style:border-line-width-bottom::borderWidths)? (style:border-line-width-left::borderWidths)? (style:border-line-width-right::borderWidths)? ;
draw-layer-attlist ::= draw:name::string ;
 draw-layer-attlist ::= (draw:protected::boolean)? ;
 draw-layer-attlist ::= (draw:display::("always" | "screen" | "printer" | "none"))? ;
draw-circle ::= draw:circle::(draw-circle-attlist common-draw-circle-ellipse-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text) ;
draw-page ::= draw:page::(common-presentation-header-footer-attlist draw-page-attlist office-forms? shape* (presentation-animations | animation-element)? presentation-notes?) ;
presentation-settings ::= (presentation:settings::(presentation-settings-attlist presentation-show*))? ;
text-table-index ::= text:table-index::(sectionAttr text-table-index-source text-index-body) ;
text-outline-level-style-attlist ::= text:level::positiveInteger ;
 text-outline-level-style-attlist ::= (text:style-name::styleNameRef)? ;
 text-outline-level-style-attlist ::= common-num-format-attlist common-num-format-prefix-suffix-attlist ;
 text-outline-level-style-attlist ::= (text:display-levels::positiveInteger)? ;
 text-outline-level-style-attlist ::= (text:start-value::positiveInteger)? ;
table-data-pilot-subtotal-attlist ::= table:function::("auto" | "average" | "count" | "countnums" | "max" | "min" | "product" | "stdev" | "stdevp" | "sum" | "var" | "varp" | string) ;
common-anim-values-attlist ::= (smil:values::string)? ;
 common-anim-values-attlist ::= (anim:formula::string)? ;
 common-anim-values-attlist ::= common-anim-set-values-attlist (smil:from::string)? (smil:by::string)? ;
table-table-template-attlist ::= text:name::string ;
 table-table-template-attlist ::= text:first-row-start-column::rowOrCol ;
 table-table-template-attlist ::= text:first-row-end-column::rowOrCol ;
 table-table-template-attlist ::= text:last-row-start-column::rowOrCol ;
 table-table-template-attlist ::= text:last-row-end-column::rowOrCol ;
draw-hatch-attlist ::= draw:name::styleName ;
 draw-hatch-attlist ::= (draw:display-name::string)? ;
 draw-hatch-attlist ::= draw:style::("single" | "double" | "triple") ;
 draw-hatch-attlist ::= (draw:color::color)? ;
 draw-hatch-attlist ::= (draw:distance::length)? ;
 draw-hatch-attlist ::= (draw:rotation::integer)? ;
presentation-settings-attlist ::= (presentation:start-page::string)? ;
 presentation-settings-attlist ::= (presentation:show::string)? ;
 presentation-settings-attlist ::= (presentation:full-screen::boolean)? ;
 presentation-settings-attlist ::= (presentation:endless::boolean)? ;
 presentation-settings-attlist ::= (presentation:pause::duration)? ;
 presentation-settings-attlist ::= (presentation:show-logo::boolean)? ;
 presentation-settings-attlist ::= (presentation:force-manual::boolean)? ;
 presentation-settings-attlist ::= (presentation:mouse-visible::boolean)? ;
 presentation-settings-attlist ::= (presentation:mouse-as-pen::boolean)? ;
 presentation-settings-attlist ::= (presentation:start-with-navigator::boolean)? ;
 presentation-settings-attlist ::= (presentation:animations::("enabled" | "disabled"))? ;
 presentation-settings-attlist ::= (presentation:transition-on-click::("enabled" | "disabled"))? ;
 presentation-settings-attlist ::= (presentation:stay-on-top::boolean)? ;
 presentation-settings-attlist ::= (presentation:show-end-of-presentation-slide::boolean)? ;
dr3d-light ::= dr3d:light::dr3d-light-attlist ;
number-day-of-week-attlist ::= (number:style::("short" | "long"))? ;
common-keep-with-next-attlist ::= (fo:keep-with-next::("auto" | "always"))? ;
common-text-anchor-attlist ::= (text:anchor-type::("page" | "frame" | "paragraph" | "char" | "as-char"))? ;
 common-text-anchor-attlist ::= (text:anchor-page-number::positiveInteger)? ;
presentation-show-shape ::= presentation:show-shape::(common-presentation-effect-attlist presentation-sound?) ;
table-sort-groups ::= table:sort-groups::table-sort-groups-attlist ;
text-object-index ::= text:object-index::(sectionAttr text-object-index-source text-index-body) ;
table-insertion-attlist ::= table:type::("row" | "column" | "table") ;
 table-insertion-attlist ::= table:position::integer ;
 table-insertion-attlist ::= (table:count::positiveInteger)? ;
 table-insertion-attlist ::= (table:table::integer)? ;
table-filter-and ::= table:filter-and::((table-filter-or | table-filter-condition)+) ;
office-document-common-attrs ::= (office:version::string)? ;
common-draw-style-name-attlist ::= ((draw:style-name::styleNameRef)? (draw:class-names::styleNameRefs)?) | ((presentation:style-name::styleNameRef)? (presentation:class-names::styleNameRefs)?) ;
text-bibliography-configuration-attlist ::= (text:prefix::string)? (text:suffix::string)? ;
 text-bibliography-configuration-attlist ::= (text:numbered-entries::boolean)? ;
 text-bibliography-configuration-attlist ::= (text:sort-by-position::boolean)? (fo:language::languageCode)? (fo:country::countryCode)? (text:sort-algorithm::string)? ;
chart-floor ::= chart:floor::chart-floor-attlist ;
office-master-styles ::= (office:master-styles::(style-master-page* style-handout-master? draw-layer-set?))? ;
table-table-header-rows ::= table:table-header-rows::((text-soft-page-break? table-table-row)+) ;
table-movement-cut-off-attlist ::= (table:position::integer) | (table:start-position::integer table:end-position::integer) ;
table-table-cell-attlist ::= (table:number-columns-repeated::positiveInteger)? ;
 table-table-cell-attlist ::= (table:style-name::styleNameRef)? ;
 table-table-cell-attlist ::= (table:content-validation-name::string)? ;
 table-table-cell-attlist ::= (table:formula::string)? ;
 table-table-cell-attlist ::= common-value-and-type-attlist? ;
 table-table-cell-attlist ::= (table:protect::boolean)? ;
style-list-level-properties ::= style:list-level-properties::style-list-level-properties-content ;
number-minutes-attlist ::= (number:style::("short" | "long"))? ;
table-change-deletion ::= table:change-deletion::((table:id::string)?) ;
table-data-pilot-layout-info-attlist ::= table:layout-mode::("tabular-layout" | "outline-subtotals-top" | "outline-subtotals-bottom") ;
 table-data-pilot-layout-info-attlist ::= table:add-empty-lines::boolean ;
table-filter-attlist ::= (table:target-range-address::cellRangeAddress)? ;
 table-filter-attlist ::= (table:condition-source::("self" | "cell-range"))? ;
 table-filter-attlist ::= (table:condition-source-range-address::cellRangeAddress)? ;
 table-filter-attlist ::= (table:display-duplicates::boolean)? ;
draw-ellipse-attlist ::= (svg:rx::length svg:ry::length)? ;
table-table-column-group ::= table:table-column-group::(table-table-column-group-attlist table-columns-and-groups) ;
text-index-entry-link-start ::= text:index-entry-link-start::((text:style-name::styleNameRef)?) ;
common-convert-empty-attlist ::= (form:convert-empty-to-null::boolean)? ;
table-last-row ::= table:last-row::common-table-template-attlist ;
style-style-content ::= style:family::"text" style-text-properties? ;
 style-style-content ::= style:family::"paragraph" style-paragraph-properties? style-text-properties? ;
 style-style-content ::= style:family::"section" style-section-properties? ;
 style-style-content ::= style:family::"ruby" style-ruby-properties? ;
 style-style-content ::= style:family::"table" style-table-properties? ;
 style-style-content ::= style:family::"table-column" style-table-column-properties? ;
 style-style-content ::= style:family::"table-row" style-table-row-properties? ;
 style-style-content ::= style:family::"table-cell" style-table-cell-properties? style-paragraph-properties? style-text-properties? ;
 style-style-content ::= style:family::("graphic" | "presentation") style-graphic-properties? style-paragraph-properties? style-text-properties? ;
 style-style-content ::= style:family::"drawing-page" style-drawing-page-properties? ;
 style-style-content ::= style:family::"chart" style-chart-properties? style-graphic-properties? style-paragraph-properties? style-text-properties? ;
common-format-source-attlist ::= (number:format-source::("fixed" | "language"))? ;
table-change-track-table-cell ::= table:change-track-table-cell::(table-change-track-table-cell-attlist text-p*) ;
text-list ::= text:list::(text-list-attr text-list-header? text-list-item*) ;
common-table-cell-address-attlist ::= table:column::integer table:row::integer table:table::integer ;
common-anim-set-values-attlist ::= (smil:to::string)? ;
table-table-column-group-attlist ::= (table:display::boolean)? ;
style-footer ::= style:footer::(common-style-header-footer-attlist header-footer-content) ;
text-bibliography-entry-template-attrs ::= text:bibliography-type::text-bibliography-types ;
 text-bibliography-entry-template-attrs ::= text:style-name::styleNameRef ;
number-year-attlist ::= (number:style::("short" | "long"))? ;
svg-font-face-format ::= svg:font-face-format::((svg:string::string())?) ;
style-map-attlist ::= style:condition::string ;
 style-map-attlist ::= style:apply-style-name::styleNameRef ;
 style-map-attlist ::= (style:base-cell-address::cellAddress)? ;
number-text ::= number:text::string() ;
text-index-entry-tab-stop ::= text:index-entry-tab-stop::((text:style-name::styleNameRef)? text-index-entry-tab-stop-attrs) ;
table-sort-attlist ::= (table:bind-styles-to-content::boolean)? ;
 table-sort-attlist ::= (table:target-range-address::cellRangeAddress)? ;
 table-sort-attlist ::= (table:case-sensitive::boolean)? ;
 table-sort-attlist ::= (table:language::languageCode)? ;
 table-sort-attlist ::= (table:country::countryCode)? ;
 table-sort-attlist ::= (table:algorithm::string)? ;
chart-chart ::= chart:chart::(chart-chart-attlist chart-title? chart-subtitle? chart-footer? chart-legend? chart-plot-area table-table?) ;
style-table-properties ::= style:table-properties::style-table-properties-content ;
office-spreadsheet-attlist ::= (table:structure-protected::boolean)? (table:protection-key::string)? ;
style-header-left ::= style:header-left::(common-style-header-footer-attlist header-footer-content) ;
common-value-type-attlist ::= office:value-type::valueType ;
common-field-database-name ::= (text:database-name::string)? ;
 common-field-database-name ::= form-connection-resource ;
chart-subtitle ::= chart:subtitle::(chart-title-attlist text-p?) ;
table-filter-condition ::= table:filter-condition::table-filter-condition-attlist ;
style-region-left ::= style:region-left::region-content ;
text-soft-page-break ::= text:soft-page-break::ε ;
common-draw-position-attlist ::= (svg:x::coordinate)? (svg:y::coordinate)? ;
common-padding-attlist ::= (fo:padding::nonNegativeLength)? (fo:padding-top::nonNegativeLength)? (fo:padding-bottom::nonNegativeLength)? (fo:padding-left::nonNegativeLength)? (fo:padding-right::nonNegativeLength)? ;
draw-contour-path ::= draw:contour-path::(common-contour-attlist common-draw-size-attlist common-draw-viewbox-attlist common-draw-path-data-attlist) ;
style-table-properties-attlist ::= (style:width::positiveLength)? (style:rel-width::percent)? ;
 style-table-properties-attlist ::= (table:align::("left" | "center" | "right" | "margins"))? ;
 style-table-properties-attlist ::= common-horizontal-margin-attlist ;
 style-table-properties-attlist ::= common-vertical-margin-attlist ;
 style-table-properties-attlist ::= common-margin-attlist ;
 style-table-properties-attlist ::= common-page-number-attlist ;
 style-table-properties-attlist ::= common-break-attlist ;
 style-table-properties-attlist ::= common-background-color-attlist ;
 style-table-properties-attlist ::= common-shadow-attlist ;
 style-table-properties-attlist ::= common-keep-with-next-attlist ;
 style-table-properties-attlist ::= (style:may-break-between-rows::boolean)? ;
 style-table-properties-attlist ::= (table:border-model::("collapsing" | "separating"))? ;
 style-table-properties-attlist ::= common-writing-mode-attlist ;
 style-table-properties-attlist ::= (table:display::boolean)? ;
text-alphabetical-index-source-attrs ::= text-index-scope-attr text-relative-tab-stop-position-attr ;
 text-alphabetical-index-source-attrs ::= (text:ignore-case::boolean)? ;
 text-alphabetical-index-source-attrs ::= (text:main-entry-style-name::styleNameRef)? ;
 text-alphabetical-index-source-attrs ::= (text:alphabetical-separators::boolean)? ;
 text-alphabetical-index-source-attrs ::= (text:combine-entries::boolean)? (text:combine-entries-with-dash::boolean)? (text:combine-entries-with-pp::boolean)? ;
 text-alphabetical-index-source-attrs ::= (text:use-keys-as-entries::boolean)? ;
 text-alphabetical-index-source-attrs ::= (text:capitalize-entries::boolean)? ;
 text-alphabetical-index-source-attrs ::= (text:comma-separated::boolean)? ;
 text-alphabetical-index-source-attrs ::= (fo:language::languageCode)? ;
 text-alphabetical-index-source-attrs ::= (fo:country::countryCode)? ;
 text-alphabetical-index-source-attrs ::= (text:sort-algorithm::string)? ;
text-list-attr ::= (text:style-name::styleNameRef)? ;
 text-list-attr ::= (text:continue-numbering::boolean)? ;
form-form-attlist ::= (xlink:href::anyURI (xlink:type::"simple")? (xlink:actuate::"onRequest")?)? ;
 form-form-attlist ::= (office:target-frame::targetFrameName)? ;
 form-form-attlist ::= (form:method::("get" | "post" | string))? ;
 form-form-attlist ::= (form:enctype::string)? ;
 form-form-attlist ::= (form:allow-deletes::boolean)? ;
 form-form-attlist ::= (form:allow-inserts::boolean)? ;
 form-form-attlist ::= (form:allow-updates::boolean)? ;
 form-form-attlist ::= (form:apply-filter::boolean)? ;
 form-form-attlist ::= (form:command-type::("table" | "query" | "command"))? ;
 form-form-attlist ::= (form:command::string())? ;
 form-form-attlist ::= (form:datasource::(anyURI | string))? ;
 form-form-attlist ::= (form:master-fields::string)? ;
 form-form-attlist ::= (form:detail-fields::string)? ;
 form-form-attlist ::= (form:escape-processing::boolean)? ;
 form-form-attlist ::= (form:filter::string)? ;
 form-form-attlist ::= (form:ignore-result::boolean)? ;
 form-form-attlist ::= (form:navigation-mode::navigation)? ;
 form-form-attlist ::= (form:order::string)? ;
 form-form-attlist ::= (form:tab-cycle::tab-cycles)? ;
table-table-columns ::= table:table-columns::(table-table-column+) ;
text-tracked-changes-attr ::= (text:track-changes::boolean)? ;
table-table-header-columns ::= table:table-header-columns::(table-table-column+) ;
table-help-message ::= table:help-message::((table:title::string)? (table:display::boolean)? text-p*) ;
table-filter-or ::= table:filter-or::((table-filter-and | table-filter-condition)+) ;
common-printable-attlist ::= (form:printable::boolean)? ;
heading-attrs ::= text:outline-level::positiveInteger ;
 heading-attrs ::= (text:restart-numbering::boolean)? ;
 heading-attrs ::= (text:start-value::nonNegativeInteger)? ;
 heading-attrs ::= (text:is-list-header::boolean)? ;
table-data-pilot-sort-info-attlist ::= (table:sort-mode::"data" table:data-field::string) | (table:sort-mode::("none" | "manual" | "name")) ;
 table-data-pilot-sort-info-attlist ::= table:order::("ascending" | "descending") ;
common-time-manip-attlist ::= (smil:accelerate::double)? ;
 common-time-manip-attlist ::= (smil:decelerate::double)? ;
 common-time-manip-attlist ::= (smil:autoReverse::boolean)? ;
text-numbered-paragraph-attr ::= (text:level::positiveInteger)? ;
 text-numbered-paragraph-attr ::= text-list-attr ;
 text-numbered-paragraph-attr ::= text-list-item-attr ;
draw-glue-point-attlist ::= draw:id::nonNegativeInteger ;
 draw-glue-point-attlist ::= svg:x::(distance | percent) svg:y::(distance | percent) ;
 draw-glue-point-attlist ::= (draw:align::("top-left" | "top" | "top-right" | "left" | "center" | "right" | "bottom-left" | "bottom-right"))? ;
table-data-pilot-field-attlist ::= table:source-field-name::string ;
 table-data-pilot-field-attlist ::= (table:orientation::("row" | "column" | "data" | "hidden")) | (table:orientation::"page" table:selected-page::string) ;
 table-data-pilot-field-attlist ::= (table:is-data-layout-field::string)? ;
 table-data-pilot-field-attlist ::= (table:function::("auto" | "average" | "count" | "countnums" | "max" | "min" | "product" | "stdev" | "stdevp" | "sum" | "var" | "varp" | string))? ;
 table-data-pilot-field-attlist ::= (table:used-hierarchy::integer)? ;
office-styles ::= (office:styles::(styles style-default-style* text-outline-style? text-notes-configuration* text-bibliography-configuration? text-linenumbering-configuration? draw-gradient* svg-linearGradient* svg-radialGradient* draw-hatch* draw-fill-image* draw-marker* draw-stroke-dash* draw-opacity* style-presentation-page-layout*))? ;
common-draw-viewbox-attlist ::= svg:viewBox::(integer integer integer integer) ;
table-table ::= table:table::(table-table-attlist table-table-source? office-dde-source? table-scenario? office-forms? table-shapes? table-columns-and-groups table-rows-and-groups) ;
style-footnote-sep ::= (style:footnote-sep::style-footnote-sep-attlist)? ;
style-header-style ::= style:header-style::(style-header-footer-properties?) ;
anim-audio-attlist ::= (xlink:href::anyURI)? ;
 anim-audio-attlist ::= (anim:audio-level::double)? ;
office-document ::= office:document::(office-document-attrs office-document-common-attrs office-meta office-settings office-scripts office-font-face-decls office-styles office-automatic-styles office-master-styles office-body) ;
number-day-attlist ::= (number:style::("short" | "long"))? ;
common-horizontal-margin-attlist ::= (fo:margin-left::(length | percent))? (fo:margin-right::(length | percent))? ;
text-user-index-entry-template-attrs ::= text:outline-level::positiveInteger ;
 text-user-index-entry-template-attrs ::= text:style-name::styleNameRef ;
text-page-continuation-attlist ::= text:select-page::("previous" | "next") ;
 text-page-continuation-attlist ::= (text:string-value::string)? ;
common-anim-add-accum-attlist ::= (smil:accumulate::("none" | "sum"))? ;
 common-anim-add-accum-attlist ::= (smil:additive::("replace" | "sum"))? ;
draw-applet ::= draw:applet::(draw-applet-attlist common-draw-data-attlist? draw-param*) ;
text-database-display-attlist ::= common-field-database-table ;
 text-database-display-attlist ::= common-field-data-style-name-attlist ;
 text-database-display-attlist ::= text:column-name::string ;
number-embedded-text-attlist ::= number:position::integer ;
style-master-page ::= style:master-page::(style-master-page-attlist (style-header style-header-left?)? (style-footer style-footer-left?)? office-forms? style-style* shape* presentation-notes?) ;
style-handout-master-attlist ::= (presentation:presentation-page-layout-name::styleNameRef)? ;
 style-handout-master-attlist ::= style:page-layout-name::styleNameRef ;
 style-handout-master-attlist ::= (draw:style-name::styleNameRef)? ;
text-linenumbering-separator ::= text:linenumbering-separator::((text:increment::nonNegativeInteger)? string()) ;
text-common-ref-content ::= string() ;
 text-common-ref-content ::= (text:ref-name::string)? ;
text-index-title ::= text:index-title::(sectionAttr index-content-main*) ;
office-script ::= office:script::(office-script-attlist string()? anyElements string()?) ;
text-alphabetical-index-entry-template-attrs ::= text:outline-level::("1" | "2" | "3" | "separator") ;
 text-alphabetical-index-entry-template-attrs ::= text:style-name::styleNameRef ;
presentation-play-attlist ::= draw:shape-id::IDREF (presentation:speed::presentationSpeeds)? ;
table-insertion-cut-off-attlist ::= table:id::string ;
 table-insertion-cut-off-attlist ::= table:position::integer ;
svg-radialGradient ::= svg:radialGradient::(common-svg-gradient-attlist (svg:cx::(coordinate | percent))? (svg:cy::(coordinate | percent))? (svg:r::(coordinate | percent))? (svg:fx::(coordinate | percent))? (svg:fy::(coordinate | percent))? svg-stop*) ;
common-anim-spline-mode-attlist ::= (smil:calcMode::("discrete" | "linear" | "paced" | "spline"))? ;
table-cell-range-source ::= table:cell-range-source::(table-table-cell-range-source-attlist table-linked-source-attlist) ;
draw-connector-attlist ::= (draw:type::("standard" | "lines" | "line" | "curve"))? ;
 draw-connector-attlist ::= (svg:x1::coordinate svg:y1::coordinate)? ;
 draw-connector-attlist ::= (draw:start-shape::IDREF)? ;
 draw-connector-attlist ::= (draw:start-glue-point::nonNegativeInteger)? ;
 draw-connector-attlist ::= (svg:x2::coordinate svg:y2::coordinate)? ;
 draw-connector-attlist ::= (draw:end-shape::IDREF)? ;
 draw-connector-attlist ::= (draw:end-glue-point::nonNegativeInteger)? ;
 draw-connector-attlist ::= (draw:line-skew::(length (length length?)?))? ;
table-highlighted-range-attlist ::= (table:cell-range-address::cellRangeAddress)? ;
 table-highlighted-range-attlist ::= table:direction::("from-another-table" | "to-another-table" | "from-same-table") ;
 table-highlighted-range-attlist ::= (table:contains-error::boolean)? ;
button-type ::= (form:button-type::types)? ;
table-null-date ::= table:null-date::((table:value-type::valueType)? (table:date-value::date)?) ;
svg-definition-src ::= svg:definition-src::common-svg-font-face-xlink-attlist ;
style-master-page-attlist ::= style:name::styleName ;
 style-master-page-attlist ::= (style:display-name::string)? ;
 style-master-page-attlist ::= style:page-layout-name::styleNameRef ;
 style-master-page-attlist ::= (draw:style-name::styleNameRef)? ;
 style-master-page-attlist ::= (style:next-style-name::styleNameRef)? ;
text-user-index ::= text:user-index::(sectionAttr text-user-index-source text-index-body) ;
number-month-attlist ::= (number:textual::boolean)? ;
 number-month-attlist ::= (number:possessive-form::boolean)? ;
 number-month-attlist ::= (number:style::("short" | "long"))? ;
chart-data-point-attlist ::= (chart:repeated::nonNegativeInteger)? ;
 chart-data-point-attlist ::= (chart:style-name::styleNameRef)? ;
text-index-entry-bibliography-attrs ::= (text:style-name::styleNameRef)? ;
 text-index-entry-bibliography-attrs ::= text:bibliography-data-field::("address" | "annote" | "author" | "bibliography-type" | "booktitle" | "chapter" | "custom1" | "custom2" | "custom3" | "custom4" | "custom5" | "edition" | "editor" | "howpublished" | "identifier" | "institution" | "isbn" | "issn" | "journal" | "month" | "note" | "number" | "organizations" | "pages" | "publisher" | "report-type" | "school" | "series" | "title" | "url" | "volume" | "year") ;
draw-marker ::= draw:marker::(draw-marker-attlist common-draw-viewbox-attlist common-draw-path-data-attlist) ;
common-data-style-attlist ::= style:name::styleName ;
 common-data-style-attlist ::= (number:language::languageCode)? ;
 common-data-style-attlist ::= (number:country::countryCode)? ;
 common-data-style-attlist ::= (number:title::string())? ;
 common-data-style-attlist ::= (style:volatile::boolean)? ;
 common-data-style-attlist ::= (number:transliteration-format::string)? ;
 common-data-style-attlist ::= (number:transliteration-language::countryCode)? ;
 common-data-style-attlist ::= (number:transliteration-country::countryCode)? ;
 common-data-style-attlist ::= (number:transliteration-style::("short" | "medium" | "long"))? ;
table-database-source-table-attlist ::= table:database-name::string ;
 table-database-source-table-attlist ::= table:database-table-name::string ;
dr3d-scene ::= dr3d:scene::(dr3d-scene-attlist common-draw-position-attlist common-draw-size-attlist common-draw-style-name-attlist common-draw-z-index-attlist common-draw-id-attlist common-draw-layer-name-attlist common-text-spreadsheet-shape-attlist common-dr3d-transform-attlist common-draw-caption-id-attlist svg-title? svg-desc? dr3d-light* shapes3d*) ;
dc-creator ::= dc:creator::string ;
image-data ::= (form:image-data::anyURI)? ;
chart-legend ::= chart:legend::chart-legend-attlist ;
number-scientific-number-attlist ::= (number:min-exponent-digits::integer)? ;
text-section-source-attr ::= (xlink:href::anyURI (xlink:type::"simple")? (xlink:show::"embed")?)? ;
 text-section-source-attr ::= (text:section-name::string)? ;
 text-section-source-attr ::= (text:filter-name::string)? ;
office-annotation-attlist ::= (office:display::boolean)? ;
common-dr3d-transform-attlist ::= (dr3d:transform::string())? ;
number-era ::= number:era::(number-era-attlist common-calendar-attlist) ;
dr3d-scene-attlist ::= (dr3d:vrp::vector3D)? (dr3d:vpn::vector3D)? (dr3d:vup::vector3D)? ;
 dr3d-scene-attlist ::= (dr3d:projection::("parallel" | "perspective"))? ;
 dr3d-scene-attlist ::= (dr3d:distance::length)? ;
 dr3d-scene-attlist ::= (dr3d:focal-length::length)? ;
 dr3d-scene-attlist ::= (dr3d:shadow-slant::nonNegativeInteger)? ;
 dr3d-scene-attlist ::= (dr3d:shade-mode::("flat" | "phong" | "gouraud" | "draft"))? ;
 dr3d-scene-attlist ::= (dr3d:ambient-color::color)? ;
 dr3d-scene-attlist ::= (dr3d:lighting-mode::boolean)? ;
draw-rect ::= draw:rect::(draw-rect-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text) ;
text-changed-region ::= text:changed-region::(text-changed-region-attr text-changed-region-content) ;
text-alphabetical-index-source ::= text:alphabetical-index-source::(text-alphabetical-index-source-attrs text-index-title-template? text-alphabetical-index-entry-template*) ;
common-draw-z-index-attlist ::= (draw:z-index::nonNegativeInteger)? ;
for ::= (form:for::string)? ;
table-dependencies ::= table:dependencies::(table-dependency+) ;
chart-grid-attlist ::= (chart:class::("major" | "minor"))? ;
 chart-grid-attlist ::= (chart:style-name::styleNameRef)? ;
table-target-range-address ::= table:target-range-address::common-table-range-attlist ;
style-graphic-properties-attlist ::= (draw:stroke::("none" | "dash" | "solid"))? ;
 style-graphic-properties-attlist ::= (draw:stroke-dash::styleNameRef)? ;
 style-graphic-properties-attlist ::= (draw:stroke-dash-names::styleNameRefs)? ;
 style-graphic-properties-attlist ::= (svg:stroke-width::length)? ;
 style-graphic-properties-attlist ::= (svg:stroke-color::color)? ;
 style-graphic-properties-attlist ::= (draw:marker-start::styleNameRef)? ;
 style-graphic-properties-attlist ::= (draw:marker-end::styleNameRef)? ;
 style-graphic-properties-attlist ::= (draw:marker-start-width::length)? ;
 style-graphic-properties-attlist ::= (draw:marker-end-width::length)? ;
 style-graphic-properties-attlist ::= (draw:marker-start-center::boolean)? ;
 style-graphic-properties-attlist ::= (draw:marker-end-center::boolean)? ;
 style-graphic-properties-attlist ::= (svg:stroke-opacity::(string() | percent))? ;
 style-graphic-properties-attlist ::= (draw:stroke-linejoin::("miter" | "round" | "bevel" | "middle" | "none" | "inherit"))? ;
 style-graphic-properties-attlist ::= (draw:symbol-color::color)? ;
 style-graphic-properties-attlist ::= (text:animation::("none" | "scroll" | "alternate" | "slide"))? ;
 style-graphic-properties-attlist ::= (text:animation-direction::("left" | "right" | "up" | "down"))? ;
 style-graphic-properties-attlist ::= (text:animation-start-inside::boolean)? ;
 style-graphic-properties-attlist ::= (text:animation-stop-inside::boolean)? ;
 style-graphic-properties-attlist ::= (text:animation-repeat::nonNegativeInteger)? ;
 style-graphic-properties-attlist ::= (text:animation-delay::duration)? ;
 style-graphic-properties-attlist ::= (text:animation-steps::length)? ;
 style-graphic-properties-attlist ::= (draw:auto-grow-width::boolean)? (draw:auto-grow-height::boolean)? ;
 style-graphic-properties-attlist ::= (draw:fit-to-size::boolean)? ;
 style-graphic-properties-attlist ::= (draw:fit-to-contour::boolean)? ;
 style-graphic-properties-attlist ::= (draw:textarea-vertical-align::("top" | "middle" | "bottom" | "justify"))? ;
 style-graphic-properties-attlist ::= (draw:textarea-horizontal-align::("left" | "center" | "right" | "justify"))? ;
 style-graphic-properties-attlist ::= (fo:wrap-option::("no-wrap" | "wrap"))? ;
 style-graphic-properties-attlist ::= (draw:color-mode::("greyscale" | "mono" | "watermark" | "standard"))? ;
 style-graphic-properties-attlist ::= (draw:color-inversion::boolean)? ;
 style-graphic-properties-attlist ::= (draw:luminance::percent)? ;
 style-graphic-properties-attlist ::= (draw:contrast::percent)? ;
 style-graphic-properties-attlist ::= (draw:gamma::percent)? ;
 style-graphic-properties-attlist ::= (draw:red::percent)? ;
 style-graphic-properties-attlist ::= (draw:green::percent)? ;
 style-graphic-properties-attlist ::= (draw:blue::percent)? ;
 style-graphic-properties-attlist ::= (draw:image-opacity::percent)? ;
 style-graphic-properties-attlist ::= (draw:shadow::("visible" | "hidden"))? ;
 style-graphic-properties-attlist ::= (draw:shadow-offset-x::length)? (draw:shadow-offset-y::length)? ;
 style-graphic-properties-attlist ::= (draw:shadow-color::color)? ;
 style-graphic-properties-attlist ::= (draw:shadow-opacity::percent)? ;
 style-graphic-properties-attlist ::= (draw:start-line-spacing-horizontal::distance)? (draw:start-line-spacing-vertical::distance)? ;
 style-graphic-properties-attlist ::= (draw:end-line-spacing-horizontal::distance)? (draw:end-line-spacing-vertical::distance)? ;
 style-graphic-properties-attlist ::= (draw:line-distance::distance)? ;
 style-graphic-properties-attlist ::= (draw:guide-overhang::length)? ;
 style-graphic-properties-attlist ::= (draw:guide-distance::distance)? ;
 style-graphic-properties-attlist ::= (draw:start-guide::length)? ;
 style-graphic-properties-attlist ::= (draw:end-guide::length)? ;
 style-graphic-properties-attlist ::= (draw:placing::("below" | "above"))? ;
 style-graphic-properties-attlist ::= (draw:parallel::boolean)? ;
 style-graphic-properties-attlist ::= (draw:measure-align::("automatic" | "left-outside" | "inside" | "right-outside"))? (draw:measure-vertical-align::("automatic" | "above" | "below" | "center"))? ;
 style-graphic-properties-attlist ::= (draw:unit::("automatic" | "mm" | "cm" | "m" | "km" | "pt" | "pc" | "inch" | "ft" | "mi"))? ;
 style-graphic-properties-attlist ::= (draw:show-unit::boolean)? ;
 style-graphic-properties-attlist ::= (draw:decimal-places::nonNegativeInteger)? ;
 style-graphic-properties-attlist ::= (draw:caption-type::("straight-line" | "angled-line" | "angled-connector-line"))? ;
 style-graphic-properties-attlist ::= (draw:caption-angle-type::("fixed" | "free"))? ;
 style-graphic-properties-attlist ::= (draw:caption-angle::nonNegativeInteger)? ;
 style-graphic-properties-attlist ::= (draw:caption-gap::distance)? ;
 style-graphic-properties-attlist ::= (draw:caption-escape-direction::("horizontal" | "vertical" | "auto"))? ;
 style-graphic-properties-attlist ::= (draw:caption-escape::(length | percent))? ;
 style-graphic-properties-attlist ::= (draw:caption-line-length::length)? ;
 style-graphic-properties-attlist ::= (draw:caption-fit-line-length::boolean)? ;
 style-graphic-properties-attlist ::= (dr3d:horizontal-segments::nonNegativeInteger)? ;
 style-graphic-properties-attlist ::= (dr3d:vertical-segments::nonNegativeInteger)? ;
 style-graphic-properties-attlist ::= (dr3d:edge-rounding::percent)? ;
 style-graphic-properties-attlist ::= (dr3d:edge-rounding-mode::("correct" | "attractive"))? ;
 style-graphic-properties-attlist ::= (dr3d:back-scale::percent)? ;
 style-graphic-properties-attlist ::= (dr3d:depth::length)? ;
 style-graphic-properties-attlist ::= (dr3d:backface-culling::("enabled" | "disabled"))? ;
 style-graphic-properties-attlist ::= (dr3d:end-angle::nonNegativeInteger)? ;
 style-graphic-properties-attlist ::= (dr3d:close-front::boolean)? ;
 style-graphic-properties-attlist ::= (dr3d:close-back::boolean)? ;
 style-graphic-properties-attlist ::= (dr3d:lighting-mode::("standard" | "double-sided"))? ;
 style-graphic-properties-attlist ::= (dr3d:normals-kind::("object" | "flat" | "sphere"))? ;
 style-graphic-properties-attlist ::= (dr3d:normals-direction::("normal" | "inverse"))? ;
 style-graphic-properties-attlist ::= (dr3d:texture-generation-mode-x::("object" | "parallel" | "sphere"))? (dr3d:texture-generation-mode-y::("object" | "parallel" | "sphere"))? ;
 style-graphic-properties-attlist ::= (dr3d:texture-kind::("luminance" | "intensity" | "color"))? ;
 style-graphic-properties-attlist ::= (dr3d:texture-filter::("enabled" | "disabled"))? ;
 style-graphic-properties-attlist ::= (dr3d:texture-mode::("replace" | "modulate" | "blend"))? ;
 style-graphic-properties-attlist ::= (dr3d:ambient-color::color)? (dr3d:emissive-color::color)? (dr3d:specular-color::color)? (dr3d:diffuse-color::color)? ;
 style-graphic-properties-attlist ::= (dr3d:shininess::percent)? ;
 style-graphic-properties-attlist ::= (dr3d:shadow::("visible" | "hidden"))? ;
 style-graphic-properties-attlist ::= common-draw-rel-size-attlist (fo:min-width::(length | percent))? ;
 style-graphic-properties-attlist ::= (fo:min-height::(length | percent))? ;
 style-graphic-properties-attlist ::= (fo:max-height::(length | percent))? (fo:max-width::(length | percent))? ;
 style-graphic-properties-attlist ::= common-horizontal-margin-attlist ;
 style-graphic-properties-attlist ::= common-vertical-margin-attlist ;
 style-graphic-properties-attlist ::= common-margin-attlist ;
 style-graphic-properties-attlist ::= (style:print-content::boolean)? ;
 style-graphic-properties-attlist ::= (style:protect::("none" | (("content" | "position" | "size")+)))? ;
 style-graphic-properties-attlist ::= (style:horizontal-pos::("left" | "center" | "right" | "from-left" | "inside" | "outside" | "from-inside"))? (svg:x::coordinate)? ;
 style-graphic-properties-attlist ::= (style:horizontal-rel::("page" | "page-content" | "page-start-margin" | "page-end-margin" | "frame" | "frame-content" | "frame-start-margin" | "frame-end-margin" | "paragraph" | "paragraph-content" | "paragraph-start-margin" | "paragraph-end-margin" | "char"))? ;
 style-graphic-properties-attlist ::= common-vertical-pos-attlist ;
 style-graphic-properties-attlist ::= common-vertical-rel-attlist ;
 style-graphic-properties-attlist ::= common-text-anchor-attlist ;
 style-graphic-properties-attlist ::= common-border-attlist ;
 style-graphic-properties-attlist ::= common-border-line-width-attlist ;
 style-graphic-properties-attlist ::= common-padding-attlist ;
 style-graphic-properties-attlist ::= common-shadow-attlist ;
 style-graphic-properties-attlist ::= common-background-color-attlist ;
 style-graphic-properties-attlist ::= (style:editable::boolean)? ;
 style-graphic-properties-attlist ::= (style:wrap::("none" | "left" | "right" | "parallel" | "dynamic" | "run-through" | "biggest"))? ;
 style-graphic-properties-attlist ::= (style:wrap-dynamic-threshold::nonNegativeLength)? ;
 style-graphic-properties-attlist ::= (style:number-wrapped-paragraphs::("no-limit" | positiveInteger))? ;
 style-graphic-properties-attlist ::= (style:wrap-contour::boolean)? ;
 style-graphic-properties-attlist ::= (style:wrap-contour-mode::("full" | "outside"))? ;
 style-graphic-properties-attlist ::= (style:run-through::("foreground" | "background"))? ;
 style-graphic-properties-attlist ::= (style:flow-with-text::boolean)? ;
 style-graphic-properties-attlist ::= (style:overflow-behavior::("clip" | "auto-create-new-frame"))? ;
 style-graphic-properties-attlist ::= (style:mirror::("none" | "vertical" | horizontal-mirror | ("vertical" horizontal-mirror) | (horizontal-mirror "vertical")))? ;
 style-graphic-properties-attlist ::= (fo:clip::string)? ;
 style-graphic-properties-attlist ::= (draw:wrap-influence-on-position::("iterative" | "once-concurrent" | "once-successive"))? ;
 style-graphic-properties-attlist ::= common-writing-mode-attlist ;
 style-graphic-properties-attlist ::= (draw:frame-display-scrollbar::boolean)? ;
 style-graphic-properties-attlist ::= (draw:frame-display-border::boolean)? ;
 style-graphic-properties-attlist ::= (draw:frame-margin-horizontal::nonNegativePixelLength)? (draw:frame-margin-vertical::nonNegativePixelLength)? ;
 style-graphic-properties-attlist ::= (draw:visible-area-left::nonNegativeLength)? (draw:visible-area-top::nonNegativeLength)? (draw:visible-area-width::positiveLength)? (draw:visible-area-height::positiveLength)? ;
 style-graphic-properties-attlist ::= (draw:ole-draw-aspect::nonNegativeInteger)? ;
office-font-face-decls ::= (office:font-face-decls::(style-font-face*))? ;
office-document-styles ::= office:document-styles::(office-document-common-attrs office-font-face-decls office-styles office-automatic-styles office-master-styles) ;
table-subtotal-field-attlist ::= table:field-number::nonNegativeInteger ;
 table-subtotal-field-attlist ::= table:function::("auto" | "average" | "count" | "countnums" | "max" | "min" | "product" | "stdev" | "stdevp" | "sum" | "var" | "varp" | string) ;
text-hidden-text-attlist ::= text:condition::formula ;
 text-hidden-text-attlist ::= text:string-value::string ;
 text-hidden-text-attlist ::= (text:is-hidden::boolean)? ;
form-property ::= form:property::(form-property-name form-property-value-and-type-attlist) ;
 form-property ::= form:list-property::(form-property-name form-property-type-and-value-list) ;
table-named-expression-attlist ::= table:name::string table:expression::string (table:base-cell-address::cellAddress)? ;
script-event-listener-attlist ::= script:event-name::string ;
 script-event-listener-attlist ::= script:language::string ;
 script-event-listener-attlist ::= (script:macro-name::string) | (xlink:href::anyURI (xlink:type::"simple")? (xlink:actuate::"onRequest")?) ;
text-variable-decl ::= text:variable-decl::(common-field-name-attlist common-value-type-attlist) ;
draw-fill-image ::= draw:fill-image::(draw-fill-image-attlist xlink:href::anyURI (xlink:type::"simple")? (xlink:show::"embed")? (xlink:actuate::"onLoad")?) ;
office-document-content ::= office:document-content::(office-document-common-attrs office-scripts office-font-face-decls office-automatic-styles office-body) ;
anim-animate-transform-attlist ::= svg:type::("translate" | "scale" | "rotate" | "skewX" | "skewY") ;
draw-param-attlist ::= (draw:name::string())? ;
 draw-param-attlist ::= (draw:value::string())? ;
common-begin-end-timing-attlist ::= (smil:begin::string)? ;
 common-begin-end-timing-attlist ::= (smil:end::string)? ;
common-presentation-effect-attlist ::= draw:shape-id::IDREF ;
 common-presentation-effect-attlist ::= (presentation:effect::presentationEffects)? ;
 common-presentation-effect-attlist ::= (presentation:direction::presentationEffectDirections)? ;
 common-presentation-effect-attlist ::= (presentation:speed::presentationSpeeds)? ;
 common-presentation-effect-attlist ::= (presentation:delay::duration)? ;
 common-presentation-effect-attlist ::= (presentation:start-scale::percent)? ;
 common-presentation-effect-attlist ::= (presentation:path-id::string())? ;
style-columns-attlist ::= fo:column-count::positiveInteger ;
 style-columns-attlist ::= (fo:column-gap::length)? ;
text-a-attlist ::= (office:name::string)? ;
 text-a-attlist ::= (office:title::string)? ;
 text-a-attlist ::= xlink:href::anyURI (xlink:type::"simple")? (xlink:actuate::"onRequest")? ;
 text-a-attlist ::= (office:target-frame-name::targetFrameName)? (xlink:show::("new" | "replace"))? ;
 text-a-attlist ::= (text:style-name::styleNameRef)? (text:visited-style-name::styleNameRef)? ;
config-config-item ::= config:config-item::(config-config-item-attlist string()) ;
table-first-column ::= table:first-column::common-table-template-attlist ;
anim-iterate-attlist ::= common-anim-target-attlist ;
 anim-iterate-attlist ::= (anim:iterate-type::string)? ;
 anim-iterate-attlist ::= (anim:iterate-interval::duration)? ;
style-graphic-fill-properties-attlist ::= (draw:fill::("none" | "solid" | "bitmap" | "gradient" | "hatch"))? ;
 style-graphic-fill-properties-attlist ::= (draw:fill-color::color)? ;
 style-graphic-fill-properties-attlist ::= (draw:secondary-fill-color::color)? ;
 style-graphic-fill-properties-attlist ::= (draw:fill-gradient-name::styleNameRef)? ;
 style-graphic-fill-properties-attlist ::= (draw:gradient-step-count::nonNegativeInteger)? ;
 style-graphic-fill-properties-attlist ::= (draw:fill-hatch-name::styleNameRef)? ;
 style-graphic-fill-properties-attlist ::= (draw:fill-hatch-solid::boolean)? ;
 style-graphic-fill-properties-attlist ::= (draw:fill-image-name::styleNameRef)? ;
 style-graphic-fill-properties-attlist ::= (style:repeat::("no-repeat" | "repeat" | "stretch"))? ;
 style-graphic-fill-properties-attlist ::= (draw:fill-image-width::(length | percent))? (draw:fill-image-height::(length | percent))? ;
 style-graphic-fill-properties-attlist ::= (draw:fill-image-ref-point-x::percent)? (draw:fill-image-ref-point-y::percent)? (draw:fill-image-ref-point::("top-left" | "top" | "top-right" | "left" | "center" | "right" | "bottom-left" | "bottom" | "bottom-right"))? ;
 style-graphic-fill-properties-attlist ::= (draw:tile-repeat-offset::string())? ;
 style-graphic-fill-properties-attlist ::= (draw:opacity::percent)? ;
 style-graphic-fill-properties-attlist ::= (draw:opacity-name::styleNameRef)? ;
 style-graphic-fill-properties-attlist ::= (svg:fill-rule::("nonzero" | "evenodd"))? ;
common-draw-rel-size-attlist ::= common-draw-size-attlist (style:rel-width::(percent | "scale" | "scale-min"))? (style:rel-height::(percent | "scale" | "scale-min"))? ;
table-cut-offs ::= table:cut-offs::((table-movement-cut-off+) | (table-insertion-cut-off table-movement-cut-off*)) ;
dr3d-sphere-attlist ::= (dr3d:center::vector3D)? ;
 dr3d-sphere-attlist ::= (dr3d:size::vector3D)? ;
draw-fill-image-attlist ::= draw:name::styleName ;
 draw-fill-image-attlist ::= (draw:display-name::string)? ;
 draw-fill-image-attlist ::= (svg:width::length)? (svg:height::length)? ;
common-dur-timing-attlist ::= (smil:dur::string)? ;
chart-mean-value-attlist ::= (chart:style-name::styleNameRef)? ;
style-text-properties-attlist ::= (fo:font-variant::fontVariant)? ;
 style-text-properties-attlist ::= (fo:text-transform::("none" | "lowercase" | "uppercase" | "capitalize"))? ;
 style-text-properties-attlist ::= (fo:color::color)? ;
 style-text-properties-attlist ::= (style:use-window-font-color::boolean)? ;
 style-text-properties-attlist ::= (style:text-outline::boolean)? ;
 style-text-properties-attlist ::= (style:text-line-through-type::lineType)? ;
 style-text-properties-attlist ::= (style:text-line-through-style::lineStyle)? ;
 style-text-properties-attlist ::= (style:text-line-through-width::lineWidth)? ;
 style-text-properties-attlist ::= (style:text-line-through-color::("font-color" | color))? ;
 style-text-properties-attlist ::= (style:text-line-through-text::string)? ;
 style-text-properties-attlist ::= (style:text-line-through-text-style::styleNameRef)? ;
 style-text-properties-attlist ::= (style:text-position::(percent | "super" | "sub" percent?))? ;
 style-text-properties-attlist ::= (style:font-name::string)? (style:font-name-asian::string)? (style:font-name-complex::string)? ;
 style-text-properties-attlist ::= (fo:font-family::string)? (style:font-family-asian::string)? (style:font-family-complex::string)? ;
 style-text-properties-attlist ::= (style:font-family-generic::fontFamilyGeneric)? (style:font-family-generic-asian::fontFamilyGeneric)? (style:font-family-generic-complex::fontFamilyGeneric)? ;
 style-text-properties-attlist ::= (style:font-style-name::string)? (style:font-style-name-asian::string)? (style:font-style-name-complex::string)? ;
 style-text-properties-attlist ::= (style:font-pitch::fontPitch)? (style:font-pitch-asian::fontPitch)? (style:font-pitch-complex::fontPitch)? ;
 style-text-properties-attlist ::= (style:font-charset::textEncoding)? (style:font-charset-asian::textEncoding)? (style:font-charset-complex::textEncoding)? ;
 style-text-properties-attlist ::= (fo:font-size::(positiveLength | percent))? (style:font-size-asian::(positiveLength | percent))? (style:font-size-complex::(positiveLength | percent))? ;
 style-text-properties-attlist ::= (style:font-size-rel::length)? (style:font-size-rel-asian::length)? (style:font-size-rel-complex::length)? ;
 style-text-properties-attlist ::= (style:script-type::("latin" | "asian" | "complex" | "ignore"))? ;
 style-text-properties-attlist ::= (fo:letter-spacing::(length | "normal"))? ;
 style-text-properties-attlist ::= (fo:language::languageCode)? (style:language-asian::languageCode)? (style:language-complex::languageCode)? ;
 style-text-properties-attlist ::= (fo:country::countryCode)? (style:country-asian::countryCode)? (style:country-complex::countryCode)? ;
 style-text-properties-attlist ::= (fo:font-style::fontStyle)? (style:font-style-asian::fontStyle)? (style:font-style-complex::fontStyle)? ;
 style-text-properties-attlist ::= (style:font-relief::("none" | "embossed" | "engraved"))? ;
 style-text-properties-attlist ::= (fo:text-shadow::shadowType)? ;
 style-text-properties-attlist ::= (style:text-underline-type::lineType)? ;
 style-text-properties-attlist ::= (style:text-underline-style::lineStyle)? ;
 style-text-properties-attlist ::= (style:text-underline-width::lineWidth)? ;
 style-text-properties-attlist ::= (style:text-underline-color::("font-color" | color))? ;
 style-text-properties-attlist ::= (fo:font-weight::fontWeight)? (style:font-weight-asian::fontWeight)? (style:font-weight-complex::fontWeight)? ;
 style-text-properties-attlist ::= (style:text-underline-mode::lineMode)? ;
 style-text-properties-attlist ::= (style:text-line-through-mode::lineMode)? ;
 style-text-properties-attlist ::= (style:letter-kerning::boolean)? ;
 style-text-properties-attlist ::= (style:text-blinking::boolean)? ;
 style-text-properties-attlist ::= common-background-color-attlist ;
 style-text-properties-attlist ::= (style:text-combine::("none" | "letters" | "lines"))? ;
 style-text-properties-attlist ::= (style:text-combine-start-char::character)? (style:text-combine-end-char::character)? ;
 style-text-properties-attlist ::= (style:text-emphasize::("none" | ("none" | "accent" | "dot" | "circle" | "disc" "above" | "below")))? ;
 style-text-properties-attlist ::= (style:text-scale::percent)? ;
 style-text-properties-attlist ::= (style:text-rotation-angle::integer)? ;
 style-text-properties-attlist ::= (style:text-rotation-scale::("fixed" | "line-height"))? ;
 style-text-properties-attlist ::= (fo:hyphenate::boolean)? ;
 style-text-properties-attlist ::= (fo:hyphenation-remain-char-count::positiveInteger)? ;
 style-text-properties-attlist ::= (fo:hyphenation-push-char-count::positiveInteger)? ;
 style-text-properties-attlist ::= (text:display::"true") | (text:display::"none") | (text:display::"condition" text:condition::"none") | ε ;
presentation-header-decl-attlist ::= presentation:name::string ;
number-time-style-attlist ::= (number:truncate-on-overflow::boolean)? ;
office-dde-source-attlist ::= (office:name::string)? ;
 office-dde-source-attlist ::= (office:conversion-mode::("into-default-style-data-style" | "into-english-number" | "keep-text"))? ;
text-object-index-source ::= text:object-index-source::(text-object-index-source-attrs text-index-title-template? text-object-index-entry-template?) ;
text-dde-connection-decl-attlist ::= office:name::string ;
text-section-source ::= text:section-source::text-section-source-attr ;
draw-image-map ::= draw:image-map::((draw-area-rectangle | draw-area-circle | draw-area-polygon)*) ;
table-data-pilot-group-member ::= table:data-pilot-group-member::table-data-pilot-group-member-attlist ;
office-meta-data ::= meta:generator::string ;
 office-meta-data ::= dc:title::string ;
 office-meta-data ::= dc:description::string ;
 office-meta-data ::= dc:subject::string ;
 office-meta-data ::= meta:keyword::string ;
 office-meta-data ::= meta:initial-creator::string ;
 office-meta-data ::= dc-creator ;
 office-meta-data ::= meta:printed-by::string ;
 office-meta-data ::= meta:creation-date::dateTime ;
 office-meta-data ::= dc-date ;
 office-meta-data ::= meta:print-date::dateTime ;
 office-meta-data ::= meta:template::(xlink:href::anyURI (xlink:type::"simple")? (xlink:actuate::"onRequest")? (xlink:title::string)? (meta:date::dateTime)?) ;
 office-meta-data ::= meta:auto-reload::((xlink:type::"simple")? (xlink:show::"replace")? (xlink:actuate::"onLoad")? (xlink:href::anyURI)? (meta:delay::duration)?) ;
 office-meta-data ::= meta:hyperlink-behaviour::((office:target-frame-name::targetFrameName)? (xlink:show::("new" | "replace"))?) ;
 office-meta-data ::= dc:language::language ;
 office-meta-data ::= meta:editing-cycles::nonNegativeInteger ;
 office-meta-data ::= meta:editing-duration::duration ;
 office-meta-data ::= meta:document-statistic::((meta:page-count::nonNegativeInteger)? (meta:table-count::nonNegativeInteger)? (meta:draw-count::nonNegativeInteger)? (meta:image-count::nonNegativeInteger)? (meta:ole-object-count::nonNegativeInteger)? (meta:object-count::nonNegativeInteger)? (meta:paragraph-count::nonNegativeInteger)? (meta:word-count::nonNegativeInteger)? (meta:character-count::nonNegativeInteger)? (frame-count::nonNegativeInteger)? (sentence-count::nonNegativeInteger)? (syllable-count::nonNegativeInteger)? (non-whitespace-character-count::nonNegativeInteger)? (meta:row-count::nonNegativeInteger)? (meta:cell-count::nonNegativeInteger)?) ;
 office-meta-data ::= meta:user-defined::(meta:name::string (meta:value-type::"float" double) | (meta:value-type::"date" dateOrDateTime) | (meta:value-type::"time" duration) | (meta:value-type::"boolean" boolean) | (meta:value-type::"string" string) | string()) ;
office-document-attrs ::= office:mimetype::string ;
draw-enhanced-geometry ::= draw:enhanced-geometry::(draw-enhanced-geometry-attlist draw-equation* draw-handle*) ;
text-bibliography-entry-template ::= text:bibliography-entry-template::(text-bibliography-entry-template-attrs (text-index-entry-span | text-index-entry-tab-stop | text-index-entry-bibliography)*) ;
style-region-right ::= style:region-right::region-content ;
table-data-pilot-field-reference ::= table:data-pilot-field-reference::table-data-pilot-field-reference-attlist ;
text-ref-content ::= (text:reference-format::("page" | "chapter" | "direction" | "text"))? ;
text-chapter-attlist ::= text:display::("name" | "number" | "number-and-name" | "plain-number-and-name" | "plain-number") ;
 text-chapter-attlist ::= text:outline-level::nonNegativeInteger ;
text-page-sequence ::= text:page-sequence::(text-page+) ;
form-checkbox-attlist ::= form-control-attlist common-disabled-attlist label common-printable-attlist common-tab-attlist common-title-attlist common-value-attlist common-data-field-attlist common-form-visual-effect-attlist common-form-relative-image-position-attlist ;
 form-checkbox-attlist ::= (form:current-state::states)? ;
 form-checkbox-attlist ::= (form:is-tristate::boolean)? ;
 form-checkbox-attlist ::= (form:state::states)? ;
draw-layer-set ::= draw:layer-set::(draw-layer*) ;
text-hidden-paragraph-attlist ::= text:condition::formula ;
 text-hidden-paragraph-attlist ::= (text:is-hidden::boolean)? ;
common-draw-points-attlist ::= draw:points::points ;
presentation-sound ::= presentation:sound::(presentation-sound-attlist xlink:href::anyURI (xlink:type::"simple")? (xlink:actuate::"onRequest")? (xlink:show::("new" | "replace"))?) ;
chart-error-indicator ::= chart:error-indicator::chart-error-indicator-attlist ;
chart-title-attlist ::= (table:cell-range::cellAddress)? ;
 chart-title-attlist ::= common-draw-position-attlist ;
 chart-title-attlist ::= (chart:style-name::styleNameRef)? ;
style-background-image ::= (style:background-image::(style-background-image-attlist common-draw-data-attlist | office-binary-data | ε))? ;
dr3d-cube-attlist ::= (dr3d:min-edge::vector3D)? (dr3d:max-edge::vector3D)? ;
form-property-type-and-value-list ::= (office:value-type::"float" (form:list-value::(office:value::double))*) | (office:value-type::"percentage" (form:list-value::(office:value::double))*) | (office:value-type::"currency" (form:list-value::(office:value::double (office:currency::string)?))*) | (office:value-type::"date" (form:list-value::(office:date-value::dateOrDateTime))*) | (office:value-type::"time" (form:list-value::(office:time-value::duration))*) | (office:value-type::"boolean" (form:list-value::(office:boolean-value::boolean))*) | (office:value-type::"string" (form:list-value::(office:string-value::string))*) | (office:value-type::"void") ;
xforms-model ::= xforms:model::anyAttListOrElements ;
table-dde-links ::= table:dde-links::(table-dde-link+) ;
style-drop-cap ::= (style:drop-cap::style-drop-cap-attlist)? ;
draw-floating-frame ::= draw:floating-frame::(draw-floating-frame-attlist common-draw-data-attlist) ;
common-writing-mode-attlist ::= (style:writing-mode::("lr-tb" | "rl-tb" | "tb-rl" | "tb-lr" | "lr" | "rl" | "tb" | "page"))? ;
text-illustration-index-source-attrs ::= text-index-scope-attr ;
 text-illustration-index-source-attrs ::= text-relative-tab-stop-position-attr ;
 text-illustration-index-source-attrs ::= (text:use-caption::boolean)? ;
 text-illustration-index-source-attrs ::= (text:caption-sequence-name::string)? ;
 text-illustration-index-source-attrs ::= (text:caption-sequence-format::("text" | "category-and-value" | "caption"))? ;
xforms-bind-attlist ::= (xforms:bind::string)? ;
draw-opacity ::= draw:opacity::(common-draw-gradient-attlist draw-opacity-attlist) ;
table-linked-source-attlist ::= (xlink:type::"simple")? (xlink:actuate::"onRequest")? xlink:href::anyURI ;
 table-linked-source-attlist ::= (table:filter-name::string)? ;
 table-linked-source-attlist ::= (table:filter-options::string)? ;
 table-linked-source-attlist ::= (table:refresh-delay::duration)? ;
form-column ::= form:column::(form-column-attlist column-controls+) ;
table-data-pilot-groups-attlist ::= table:source-field-name::string ;
 table-data-pilot-groups-attlist ::= (table:date-start::(dateOrDateTime | "auto")) | (table:start::(double | "auto")) ;
 table-data-pilot-groups-attlist ::= (table:date-end::(dateOrDateTime | "auto")) | (table:end::(double | "auto")) ;
 table-data-pilot-groups-attlist ::= table:step::double ;
 table-data-pilot-groups-attlist ::= table:grouped-by::("seconds" | "minutes" | "hours" | "days" | "months" | "quarters" | "years") ;
text-outline-level-style ::= text:outline-level-style::(text-outline-level-style-attlist style-list-level-properties? style-text-properties?) ;
table-data-pilot-subtotal ::= table:data-pilot-subtotal::table-data-pilot-subtotal-attlist ;
text-note-class ::= text:note-class::("footnote" | "endnote") ;
text-list-style-attr ::= style:name::styleName ;
 text-list-style-attr ::= (style:display-name::string)? ;
 text-list-style-attr ::= (text:consecutive-numbering::boolean)? ;
common-presentation-header-footer-attlist ::= (presentation:use-header-name::string)? ;
 common-presentation-header-footer-attlist ::= (presentation:use-footer-name::string)? ;
 common-presentation-header-footer-attlist ::= (presentation:use-date-time-name::string)? ;
text-index-source-styles ::= text:index-source-styles::(text:outline-level::positiveInteger text-index-source-style*) ;
text-section-attr ::= sectionAttr ;
 text-section-attr ::= (text:display::("true" | "none")) | (text:display::"condition" text:condition::string) | ε ;
number-day-of-week ::= number:day-of-week::(number-day-of-week-attlist common-calendar-attlist) ;
draw-opacity-attlist ::= (draw:start::percent)? (draw:end::percent)? ;
common-anim-named-target-attlist ::= smil:attributeName::string ;
target-location ::= (xlink:href::anyURI)? ;
current-selected ::= (form:current-selected::boolean)? ;
text-decls ::= (text:variable-decls::(text-variable-decl*))? (text:sequence-decls::(text-sequence-decl*))? (text:user-field-decls::(text-user-field-decl*))? (text:dde-connection-decls::(text-dde-connection-decl*))? text-alphabetical-index-auto-mark-file? ;
office-binary-data ::= office:binary-data::base64Binary ;
table-movement-cut-off ::= table:movement-cut-off::table-movement-cut-off-attlist ;
form-number-attlist ::= (form:value::double)? ;
 form-number-attlist ::= (form:current-value::double)? ;
 form-number-attlist ::= (form:min-value::double)? ;
 form-number-attlist ::= (form:max-value::double)? ;
draw-glue-points-attlist ::= draw:escape-direction::("auto" | "left" | "right" | "up" | "down" | "horizontal" | "vertical") ;
text-list-style ::= text:list-style::(text-list-style-attr text-list-style-content*) ;
text-illustration-index-entry-template-attrs ::= text:style-name::styleNameRef ;
common-dde-connection-decl-attlist ::= office:dde-application::string ;
 common-dde-connection-decl-attlist ::= office:dde-topic::string ;
 common-dde-connection-decl-attlist ::= office:dde-item::string ;
 common-dde-connection-decl-attlist ::= (office:automatic-update::boolean)? ;
text-time-attlist ::= common-field-fixed-attlist common-field-data-style-name-attlist ;
 text-time-attlist ::= (text:time-value::timeOrDateTime)? ;
 text-time-attlist ::= (text:time-adjust::duration)? ;
common-number-attlist ::= (number:min-integer-digits::integer)? ;
 common-number-attlist ::= (number:grouping::boolean)? ;
presentation-footer-decl-attlist ::= presentation:name::string ;
svg-desc ::= svg:desc::string() ;
form-combobox-attlist ::= form-control-attlist common-current-value-attlist common-disabled-attlist dropdown common-maxlength-attlist common-printable-attlist common-readonly-attlist size common-tab-attlist common-title-attlist common-value-attlist common-convert-empty-attlist common-data-field-attlist list-source list-source-type ;
 form-combobox-attlist ::= (form:auto-complete::boolean)? ;
common-page-number-attlist ::= (style:page-number::(positiveInteger | "auto"))? ;
text-database-next-attlist ::= common-field-database-table ;
 text-database-next-attlist ::= (text:condition::formula)? ;
common-vertical-rel-attlist ::= (style:vertical-rel::("page" | "page-content" | "frame" | "frame-content" | "paragraph" | "paragraph-content" | "char" | "line" | "baseline" | "text"))? ;
draw-ellipse ::= draw:ellipse::(common-draw-circle-ellipse-attlist draw-ellipse-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text) ;
common-draw-id-attlist ::= (draw:id::ID)? ;
table-data-pilot-member ::= table:data-pilot-member::table-data-pilot-member-attlist ;
number-currency-symbol ::= number:currency-symbol::(number-currency-symbol-attlist string()) ;
common-field-display-value-formula-none-attlist ::= (text:display::("value" | "formula" | "none"))? ;
common-repeat-timing-attlist ::= (smil:repeatDur::string)? (smil:repeatCount::(nonNegativeInteger | "indefinite"))? ;
form-value-range-attlist ::= form-control-attlist common-disabled-attlist common-printable-attlist common-tab-attlist common-title-attlist common-value-attlist ;
 form-value-range-attlist ::= (form:max-value::string)? ;
 form-value-range-attlist ::= (form:min-value::string)? ;
 form-value-range-attlist ::= (form:step-size::positiveInteger)? ;
 form-value-range-attlist ::= (form:page-step-size::positiveInteger)? ;
 form-value-range-attlist ::= (form:delay-for-repeat::duration)? ;
 form-value-range-attlist ::= (form:orientation::("horizontal" | "vertical"))? ;
number-boolean-style ::= number:boolean-style::(common-data-style-attlist style-text-properties? number-text? (number-boolean number-text?)? style-map*) ;
table-error-macro ::= table:error-macro::((table:execute::boolean)?) ;
config-config-item-set ::= config:config-item-set::(config-config-item-set-attlist config-items) ;
presentation-dim-attlist ::= draw:shape-id::IDREF ;
 presentation-dim-attlist ::= draw:color::color ;
text-bibliography-source ::= text:bibliography-source::(text-index-title-template? text-bibliography-entry-template*) ;
text-sort-key-attlist ::= text:key::("address" | "annote" | "author" | "bibliography-type" | "booktitle" | "chapter" | "custom1" | "custom2" | "custom3" | "custom4" | "custom5" | "edition" | "editor" | "howpublished" | "identifier" | "institution" | "isbn" | "issn" | "journal" | "month" | "note" | "number" | "organizations" | "pages" | "publisher" | "report-type" | "school" | "series" | "title" | "url" | "volume" | "year") (text:sort-ascending::boolean)? ;
style-list-level-properties-attlist ::= common-text-align ;
 style-list-level-properties-attlist ::= (text:space-before::nonNegativeLength)? ;
 style-list-level-properties-attlist ::= (text:min-label-width::nonNegativeLength)? ;
 style-list-level-properties-attlist ::= (text:min-label-distance::nonNegativeLength)? ;
 style-list-level-properties-attlist ::= (style:font-name::string)? ;
 style-list-level-properties-attlist ::= (fo:width::positiveLength)? (fo:height::positiveLength)? ;
 style-list-level-properties-attlist ::= common-vertical-rel-attlist common-vertical-pos-attlist ;
number-year ::= number:year::(number-year-attlist common-calendar-attlist) ;
table-body ::= table:body::common-table-template-attlist ;
text-index-entry-span ::= text:index-entry-span::((text:style-name::styleNameRef)? string()) ;
text-date-attlist ::= common-field-fixed-attlist common-field-data-style-name-attlist ;
 text-date-attlist ::= (text:date-value::dateOrDateTime)? ;
 text-date-attlist ::= (text:date-adjust::duration)? ;
text-user-field-decl ::= text:user-field-decl::(common-field-name-attlist common-field-formula-attlist? common-value-and-type-attlist) ;
table-sort ::= table:sort::(table-sort-attlist table-sort-by+) ;
dc-date ::= dc:date::dateTime ;
text-database-row-select-attlist ::= common-field-database-table ;
 text-database-row-select-attlist ::= (text:condition::formula)? ;
 text-database-row-select-attlist ::= (text:row-number::nonNegativeInteger)? ;
chart-axis ::= chart:axis::(chart-axis-attlist chart-title? chart-categories? chart-grid*) ;
table-database-source-sql ::= table:database-source-sql::table-database-source-sql-attlist ;
draw-custom-shape ::= draw:custom-shape::(draw-custom-shape-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text draw-enhanced-geometry?) ;
form-form ::= form:form::(common-form-control-attlist form-form-attlist form-properties? office-event-listeners? (controls | form-form)* form-connection-resource?) ;
common-table-cell-range-address-attlist ::= table:start-column::integer table:start-row::integer table:start-table::integer table:end-column::integer table:end-row::integer table:end-table::integer ;
list-source ::= (form:list-source::string)? ;
common-draw-gradient-attlist ::= (draw:name::styleName)? ;
 common-draw-gradient-attlist ::= (draw:display-name::string)? ;
 common-draw-gradient-attlist ::= draw:style::gradient-style ;
 common-draw-gradient-attlist ::= (draw:cx::percent)? (draw:cy::percent)? ;
 common-draw-gradient-attlist ::= (draw:angle::integer)? ;
 common-draw-gradient-attlist ::= (draw:border::percent)? ;
draw-polyline ::= draw:polyline::(common-draw-points-attlist common-draw-position-attlist common-draw-size-attlist common-draw-viewbox-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text) ;
text-numbered-paragraph ::= text:numbered-paragraph::(text-numbered-paragraph-attr text-number? text-p | text-h) ;
text-list-level-style-bullet-attr ::= (text:style-name::styleNameRef)? ;
 text-list-level-style-bullet-attr ::= text:bullet-char::character ;
 text-list-level-style-bullet-attr ::= common-num-format-prefix-suffix-attlist ;
 text-list-level-style-bullet-attr ::= (text:bullet-relative-size::percent)? ;
number-quarter ::= number:quarter::(number-quarter-attlist common-calendar-attlist) ;
config-config-item-map-entry ::= config:config-item-map-entry::(config-config-item-map-entry-attlist config-items) ;
anim-transition-filter-attlist ::= smil:type::string ;
 anim-transition-filter-attlist ::= (smil:subtype::string)? ;
 anim-transition-filter-attlist ::= (smil:direction::("forward" | "reverse"))? ;
 anim-transition-filter-attlist ::= (smil:fadeColor::("forward" | "reverse"))? ;
 anim-transition-filter-attlist ::= (smil:mode::("in" | "out"))? ;
text-alphabetical-index-entry-template ::= text:alphabetical-index-entry-template::(text-alphabetical-index-entry-template-attrs (text-index-entry-chapter | text-index-entry-page-number | text-index-entry-text | text-index-entry-span | text-index-entry-tab-stop)*) ;
common-table-change-attlist ::= table:id::string ;
 common-table-change-attlist ::= (table:acceptance-state::("accepted" | "rejected" | "pending"))? ;
 common-table-change-attlist ::= (table:rejecting-change-id::string)? ;
common-field-formula-attlist ::= (text:formula::formula)? ;
text-set-page-variable-attlist ::= (text:active::boolean)? ;
 text-set-page-variable-attlist ::= (text:page-adjust::integer)? ;
table-data-pilot-field ::= table:data-pilot-field::(table-data-pilot-field-attlist table-data-pilot-level? table-data-pilot-field-reference? table-data-pilot-groups?) ;
draw-glue-point ::= draw:glue-point::draw-glue-point-attlist ;
chart-chart-attlist ::= chart:class::namespacedToken ;
 chart-chart-attlist ::= common-draw-size-attlist ;
 chart-chart-attlist ::= (chart:column-mapping::string)? ;
 chart-chart-attlist ::= (chart:row-mapping::string)? ;
 chart-chart-attlist ::= (chart:style-name::styleNameRef)? ;
draw-custom-shape-attlist ::= (draw:engine::namespacedToken)? ;
 draw-custom-shape-attlist ::= (draw:data::string)? ;
table-highlighted-range-attlist-invalid ::= table:marked-invalid::boolean ;
table-data-pilot-tables ::= table:data-pilot-tables::(table-data-pilot-table*) ;
table-table-row ::= table:table-row::(table-table-row-attlist (table-table-cell | table-covered-table-cell)+) ;
table-operation-attlist ::= table:name::("trace-dependents" | "remove-dependents" | "trace-precedents" | "remove-precedents" | "trace-errors") ;
 table-operation-attlist ::= table:index::nonNegativeInteger ;
table-detective ::= table:detective::(table-highlighted-range* table-operation*) ;
office-settings ::= (office:settings::(config-config-item-set+))? ;
table-tracked-changes-attlist ::= (table:track-changes::boolean)? ;
text-table-of-content-entry-template-attlist ::= text:outline-level::positiveInteger ;
 text-table-of-content-entry-template-attlist ::= text:style-name::styleNameRef ;
common-num-format-prefix-suffix-attlist ::= (style:num-prefix::string)? (style:num-suffix::string)? ;
dropdown ::= (form:dropdown::boolean)? ;
common-disabled-attlist ::= (form:disabled::boolean)? ;
common-svg-gradient-attlist ::= (svg:gradientUnits::"objectBoundingBox")? (svg:gradientTransform::string)? (svg:spreadMethod::("pad" | "reflect" | "repeat"))? ;
 common-svg-gradient-attlist ::= draw:name::styleName ;
 common-svg-gradient-attlist ::= (draw:display-name::string)? ;
draw-a-attlist ::= xlink:href::anyURI (xlink:type::"simple")? (xlink:actuate::"onRequest")? ;
 draw-a-attlist ::= (office:target-frame-name::targetFrameName)? (xlink:show::("new" | "replace"))? ;
 draw-a-attlist ::= (office:name::string)? ;
 draw-a-attlist ::= (office:title::string)? ;
 draw-a-attlist ::= (office:server-map::boolean)? ;
style-default-style ::= style:default-style::style-style-content ;
table-named-expressions ::= table:named-expressions::((table-named-range | table-named-expression)*) ;
number-fraction ::= number:fraction::(number-fraction-attlist common-number-attlist) ;
common-draw-area-attlist ::= (xlink:href::anyURI)? (xlink:type::"simple")? (office:target-frame-name::targetFrameName)? (xlink:show::("new" | "replace"))? ;
 common-draw-area-attlist ::= (office:name::string)? ;
 common-draw-area-attlist ::= (draw:nohref::"nohref")? ;
common-draw-name-attlist ::= (draw:name::string)? ;
text-bibliography ::= text:bibliography::(sectionAttr text-bibliography-source text-index-body) ;
table-dde-link ::= table:dde-link::(office-dde-source table-table) ;
size ::= (form:size::nonNegativeInteger)? ;
table-table-attlist ::= (table:name::string)? ;
 table-table-attlist ::= (table:style-name::styleNameRef)? ;
 table-table-attlist ::= (table:protected::boolean)? (table:protection-key::string())? ;
 table-table-attlist ::= (table:print::boolean)? ;
 table-table-attlist ::= (table:print-ranges::cellRangeAddressList)? ;
 table-table-attlist ::= (table:is-sub-table::boolean)? ;
--------------------odf::opendoc-1.2-dsig.bgf--------------------
dsig-document-signatures-attlist ::= dsig:version::"1.2" ;
dsig-document-signatures ::= dsig:document-signatures::(dsig-document-signatures-attlist ds-signature+) ;
ds-signature ::= ds:Signature::dsMarkup ;
--------------------odf::opendoc-1.2-manifest.bgf--------------------
algorithm ::= manifest:algorithm::(algorithm-attlist anyElements) ;
manifest ::= manifest:manifest::(manifest-attlist file-entry+) ;
key-derivation-attlist ::= manifest:key-derivation-name::("PBKDF2" | anyURI) manifest:salt::base64Binary manifest:iteration-count::nonNegativeInteger (manifest:key-size::nonNegativeInteger)? ;
encryption-data-attlist ::= manifest:checksum-type::("SHA1/1K" | anyURI) manifest:checksum::base64Binary ;
key-derivation ::= manifest:key-derivation::key-derivation-attlist ;
encryption-data ::= manifest:encryption-data::(encryption-data-attlist algorithm start-key-generation? key-derivation) ;
start-key-generation-attlist ::= manifest:start-key-generation-name::("SHA1" | anyURI) (manifest:key-size::nonNegativeInteger)? ;
file-entry-attlist ::= manifest:full-path::string (manifest:size::nonNegativeInteger)? manifest:media-type::string (manifest:preferred-view-mode::("edit" | "presentation-slide-show" | "read-only" | namespacedToken))? (manifest:version::string)? ;
start-key-generation ::= manifest:start-key-generation::start-key-generation-attlist ;
algorithm-attlist ::= manifest:algorithm-name::("Blowfish CFB" | anyURI) manifest:initialisation-vector::base64Binary ;
file-entry ::= manifest:file-entry::(file-entry-attlist encryption-data?) ;
manifest-attlist ::= manifest:version::"1.2" ;
--------------------odf::opendoc-1.2.bgf--------------------
style-font-face ::= style:font-face::(style-font-face-attlist svg-font-face-src? svg-definition-src?) ;
svg-linearGradient ::= svg:linearGradient::(common-svg-gradient-attlist (svg:x1::(coordinate | percent))? (svg:y1::(coordinate | percent))? (svg:x2::(coordinate | percent))? (svg:y2::(coordinate | percent))? svg-stop*) ;
style-page-layout-attlist ::= style:name::styleName (style:page-usage::("all" | "left" | "right" | "mirrored"))? ;
number-seconds ::= number:seconds::number-seconds-attlist ;
number-currency-style ::= number:currency-style::(common-data-style-attlist common-auto-reorder-attlist style-text-properties? number-text? ((number-and-text currency-symbol-and-text?) | (currency-symbol-and-text number-and-text?))? style-map*) ;
common-editable-attlist ::= (style:editable::boolean)? ;
number-fraction-attlist ::= (number:min-numerator-digits::integer)? (number:min-denominator-digits::integer)? (number:denominator-value::integer)? ;
table-covered-table-cell ::= table:covered-table-cell::(table-table-cell-attlist table-table-cell-content) ;
text-notes-configuration-content ::= text-note-class (text:citation-style-name::styleNameRef)? (text:citation-body-style-name::styleNameRef)? (text:default-style-name::styleNameRef)? (text:master-page-name::styleNameRef)? (text:start-value::nonNegativeInteger)? common-num-format-prefix-suffix-attlist common-num-format-attlist? (text:start-numbering-at::("document" | "chapter" | "page"))? (text:footnotes-position::("text" | "page" | "section" | "document"))? (text:note-continuation-notice-forward::string())? (text:note-continuation-notice-backward::string())? ;
draw-applet-attlist ::= (draw:code::string)? (draw:object::string)? (draw:archive::string)? (draw:may-script::boolean)? xml-id? ;
common-section-attlist ::= (text:style-name::styleNameRef)? text:name::string (text:protected::boolean)? (text:protection-key::string)? (text:protection-key-digest-algorithm::anyIRI)? xml-id? ;
db-auto-increment-attlist ::= (db:additional-column-statement::string)? (db:row-retrieving-statement::string)? ;
number-scientific-number ::= number:scientific-number::(number-scientific-number-attlist common-decimal-places-attlist common-number-attlist) ;
presentation-hide-shape ::= presentation:hide-shape::(common-presentation-effect-attlist presentation-sound?) ;
text-number ::= text:number::string ;
common-title-attlist ::= (form:title::string)? ;
draw-object ::= draw:object::(draw-object-attlist common-draw-data-attlist | office-document | math-math) ;
table-sort-by ::= table:sort-by::table-sort-by-attlist ;
table-data-pilot-table-attlist ::= table:name::string (table:application-data::string)? (table:grand-total::("none" | "row" | "column" | "both"))? (table:ignore-empty-rows::boolean)? (table:identify-categories::boolean)? table:target-range-address::cellRangeAddress (table:buttons::cellRangeAddressList)? (table:show-filter-button::boolean)? (table:drill-down-on-double-click::boolean)? ;
presentation-hide-text ::= presentation:hide-text::(common-presentation-effect-attlist presentation-sound?) ;
style-tab-stop-char-attlist ::= style:char::character ;
table-deletion-attlist ::= table:type::("row" | "column" | "table") table:position::integer (table:table::integer)? (table:multi-deletion-spanned::integer)? ;
number-text-content ::= number:text-content::ε ;
draw-plugin ::= draw:plugin::(draw-plugin-attlist common-draw-data-attlist draw-param*) ;
table-database-source-query-attlist ::= table:database-name::string table:query-name::string ;
draw-area-rectangle ::= draw:area-rectangle::(common-draw-area-attlist svg:x::coordinate svg:y::coordinate svg:width::length svg:height::length svg-title? svg-desc? office-event-listeners?) ;
table-table-rows ::= table:table-rows::((text-soft-page-break? table-table-row)+) ;
style-tab-stop ::= style:tab-stop::style-tab-stop-attlist ;
number-date-style ::= number:date-style::(common-data-style-attlist common-auto-reorder-attlist common-format-source-attlist style-text-properties? number-text? (any-date number-text?)+ style-map*) ;
draw-marker-attlist ::= draw:name::styleName (draw:display-name::string)? ;
chart-grid ::= chart:grid::chart-grid-attlist ;
table-table-cell-attlist-extra ::= (table:number-columns-spanned::positiveInteger)? (table:number-rows-spanned::positiveInteger)? (table:number-matrix-columns-spanned::positiveInteger)? (table:number-matrix-rows-spanned::positiveInteger)? ;
common-text-spreadsheet-shape-attlist ::= (table:end-cell-address::cellAddress)? (table:end-x::coordinate)? (table:end-y::coordinate)? (table:table-background::boolean)? common-text-anchor-attlist ;
common-draw-text-style-name-attlist ::= (draw:text-style-name::styleNameRef)? ;
table-shapes ::= table:shapes::(shape+) ;
text-p ::= text:p::(paragraph-attrs paragraph-content-or-hyperlink*) ;
common-style-header-footer-attlist ::= (style:display::boolean)? ;
draw-line-attlist ::= svg:x1::coordinate svg:y1::coordinate svg:x2::coordinate svg:y2::coordinate ;
table-movement ::= table:movement::(common-table-change-attlist table-source-range-address table-target-range-address office-change-info table-dependencies? table-deletions?) ;
script-event-listener ::= script:event-listener::script-event-listener-attlist ;
style-tab-stop-attlist ::= style:position::length ((style:type::("left" | "center" | "right"))?) | (style:type::"char" style-tab-stop-char-attlist) (style:leader-type::lineType)? (style:leader-style::lineStyle)? (style:leader-width::lineWidth)? (style:leader-color::("font-color" | color))? (style:leader-text::character)? (style:leader-text-style::styleNameRef)? ;
text-h ::= text:h::(heading-attrs paragraph-attrs text-number? paragraph-content-or-hyperlink*) ;
text-bookmark-ref-content ::= (text:reference-format::(common-ref-format-values | "number-no-superior" | "number-all-superior" | "number"))? ;
text-outline-style ::= text:outline-style::(text-outline-style-attr text-outline-level-style+) ;
draw-control-attlist ::= draw:control::IDREF ;
table-table-column-attlist ::= (table:number-columns-repeated::positiveInteger)? (table:style-name::styleNameRef)? (table:visibility::table-visibility-value)? (table:default-cell-style-name::styleNameRef)? xml-id? ;
text-placeholder-attlist ::= text:placeholder-type::("text" | "table" | "text-box" | "image" | "object") common-field-description-attlist ;
office-document-settings ::= office:document-settings::(office-document-common-attrs office-settings) ;
draw-handle-attlist ::= (draw:handle-mirror-vertical::boolean)? (draw:handle-mirror-horizontal::boolean)? (draw:handle-switched::boolean)? draw:handle-position::string (draw:handle-range-x-minimum::string)? (draw:handle-range-x-maximum::string)? (draw:handle-range-y-minimum::string)? (draw:handle-range-y-maximum::string)? (draw:handle-polar::string)? (draw:handle-radius-range-minimum::string)? (draw:handle-radius-range-maximum::string)? ;
presentation-show-attlist ::= presentation:name::string presentation:pages::string ;
style-columns ::= (style:columns::(style-columns-attlist style-column-sep? style-column*))? ;
text-a ::= text:a::(text-a-attlist office-event-listeners? paragraph-content*) ;
table-calculation-setting-attlist ::= (table:case-sensitive::boolean)? (table:precision-as-shown::boolean)? (table:search-criteria-must-apply-to-whole-cell::boolean)? (table:automatic-find-labels::boolean)? (table:use-regular-expressions::boolean)? (table:use-wildcards::boolean)? (table:null-year::positiveInteger)? ;
table-subtotal-rules-attlist ::= (table:bind-styles-to-content::boolean)? (table:case-sensitive::boolean)? (table:page-breaks-on-group-change::boolean)? ;
common-repeat ::= (form:repeat::boolean)? ;
number-am-pm ::= number:am-pm::ε ;
number-time-style ::= number:time-style::(number-time-style-attlist common-data-style-attlist common-format-source-attlist style-text-properties? number-text? (any-time number-text?)+ style-map*) ;
common-linked-cell ::= (form:linked-cell::(cellAddress | string))? ;
text-dde-connection-decl ::= text:dde-connection-decl::(text-dde-connection-decl-attlist common-dde-connection-decl-attlist) ;
style-table-column-properties ::= style:table-column-properties::style-table-column-properties-content-strict ;
style-list-level-label-alignment ::= (style:list-level-label-alignment::style-list-level-label-alignment-attlist)? ;
db-query-attlist ::= db:command::string (db:escape-processing::boolean)? ;
chart-stock-range-line ::= chart:stock-range-line::common-stock-marker-attlist ;
chart-title ::= chart:title::(chart-title-attlist text-p?) ;
common-tab-attlist ::= (form:tab-index::nonNegativeInteger)? (form:tab-stop::boolean)? ;
common-anim-attlist ::= (presentation:node-type::("default" | "on-click" | "with-previous" | "after-previous" | "timing-root" | "main-sequence" | "interactive-sequence"))? (presentation:preset-id::string)? (presentation:preset-sub-type::string)? (presentation:preset-class::("custom" | "entrance" | "exit" | "emphasis" | "motion-path" | "ole-action" | "media-call"))? (presentation:master-element::IDREF)? (presentation:group-id::string)? (xml-id (anim:id::NCName)?)? ;
config-config-item-attlist ::= config:name::string config:type::("boolean" | "short" | "int" | "long" | "double" | "string" | "datetime" | "base64Binary") ;
draw-frame ::= draw:frame::(common-draw-shape-with-text-and-styles-attlist common-draw-position-attlist common-draw-rel-size-attlist common-draw-caption-id-attlist presentation-shape-attlist draw-frame-attlist (draw-text-box | draw-image | draw-object | draw-object-ole | draw-applet | draw-floating-frame | draw-plugin | table-table)* office-event-listeners? draw-glue-point* draw-image-map? svg-title? svg-desc? (draw-contour-polygon | draw-contour-path)?) ;
db-character-set-attlist ::= (db:encoding::textEncoding)? ;
style-list-level-label-alignment-attlist ::= text:label-followed-by::("listtab" | "space" | "nothing") (text:list-tab-stop-position::length)? (fo:text-indent::length)? (fo:margin-left::length)? ;
db-key-columns ::= db:key-columns::(db-key-columns-attlist db-key-column+) ;
table-iteration ::= table:iteration::((table:status::("enable" | "disable"))? (table:steps::positiveInteger)? (table:maximum-difference::double)?) ;
common-draw-caption-id-attlist ::= (draw:caption-id::IDREF)? ;
table-title ::= table:title::string() ;
text-outline-style-attr ::= style:name::styleName ;
text-user-index-source ::= text:user-index-source::(text-user-index-source-attr text-index-title-template? text-user-index-entry-template* text-index-source-styles*) ;
text-index-entry-chapter ::= text:index-entry-chapter::((text:style-name::styleNameRef)? text-index-entry-chapter-attrs) ;
table-data-pilot-subtotals ::= table:data-pilot-subtotals::(table-data-pilot-subtotal*) ;
style-page-layout-properties ::= style:page-layout-properties::style-page-layout-properties-content-strict ;
form-connection-resource ::= form:connection-resource::(xlink:href::anyIRI) ;
draw-text-box ::= draw:text-box::(draw-text-box-attlist text-content*) ;
db-index-column-attlist ::= db:name::string (db:is-ascending::boolean)? ;
draw-image ::= draw:image::(draw-image-attlist common-draw-data-attlist | office-binary-data draw-text) ;
table-data-pilot-field-reference-attlist ::= table:field-name::string (table:member-type::"named" table:member-name::string) | (table:member-type::("previous" | "next")) table:type::("none" | "member-difference" | "member-percentage" | "member-percentage-difference" | "running-total" | "row-percentage" | "column-percentage" | "total-percentage" | "index") ;
common-break-attlist ::= (fo:break-before::("auto" | "column" | "page"))? (fo:break-after::("auto" | "column" | "page"))? ;
db-column-definition-attlist ::= db:name::string (db:data-type::db-data-types)? (db:type-name::string)? (db:precision::positiveInteger)? (db:scale::positiveInteger)? (db:is-nullable::("no-nulls" | "nullable"))? (db:is-empty-allowed::boolean)? (db:is-autoincrement::boolean)? ;
table-data-pilot-groups ::= table:data-pilot-groups::(table-data-pilot-groups-attlist table-data-pilot-group+) ;
chart-error-indicator-attlist ::= (chart:style-name::styleNameRef)? chart:dimension::chart-dimension ;
number-hours ::= number:hours::number-hours-attlist ;
table-table-source-attlist ::= (table:mode::("copy-all" | "copy-results-only"))? (table:table-name::string)? ;
draw-layer ::= draw:layer::(draw-layer-attlist svg-title? svg-desc?) ;
common-text-align ::= (fo:text-align::("start" | "end" | "left" | "right" | "center" | "justify"))? ;
style-style-attlist ::= style:name::styleName (style:display-name::string)? (style:parent-style-name::styleNameRef)? (style:next-style-name::styleNameRef)? (style:list-level::(positiveInteger | ε))? (style:list-style-name::(styleName | ε))? (style:master-page-name::styleNameRef)? (style:auto-update::boolean)? (style:data-style-name::styleNameRef)? (style:percentage-data-style-name::styleNameRef)? (style:class::string)? (style:default-outline-level::(positiveInteger | ε))? ;
db-column ::= db:column::(db-column-attlist common-db-object-name common-db-object-title common-db-object-description common-db-default-value) ;
draw-image-attlist ::= (draw:filter-name::string)? xml-id? ;
paragraph-attrs ::= (text:style-name::styleNameRef)? (text:class-names::styleNameRefs)? (text:cond-style-name::styleNameRef)? (xml-id (text:id::NCName)?)? common-in-content-meta-attlist? ;
form-fixed-text-attlist ::= form-control-attlist for common-disabled-attlist label common-printable-attlist common-title-attlist (form:multi-line::boolean)? ;
draw-floating-frame-attlist ::= (draw:frame-name::string)? xml-id? ;
presentation-decl ::= (presentation:header-decl::(presentation-header-decl-attlist string())) | (presentation:footer-decl::(presentation-footer-decl-attlist string())) | (presentation:date-time-decl::(presentation-date-time-decl-attlist string())) ;
common-draw-size-attlist ::= (svg:width::length)? (svg:height::length)? ;
text-changed-region-content ::= (text:insertion::office-change-info) | (text:deletion::(office-change-info text-content*)) | (text:format-change::office-change-info) ;
table-table-template ::= table:table-template::(table-table-template-attlist table-first-row? table-last-row? table-first-column? table-last-column? table-body table-even-rows? table-odd-rows? table-even-columns? table-odd-columns? table-background?) ;
db-delimiter ::= db:delimiter::db-delimiter-attlist ;
dr3d-extrude ::= dr3d:extrude::(common-draw-path-data-attlist common-draw-viewbox-attlist common-draw-id-attlist common-draw-z-index-attlist common-draw-layer-name-attlist common-draw-style-name-attlist common-dr3d-transform-attlist) ;
form-password-attlist ::= form-control-attlist common-disabled-attlist common-maxlength-attlist common-printable-attlist common-tab-attlist common-title-attlist common-value-attlist common-convert-empty-attlist common-linked-cell (form:echo-char::character)? ;
common-style-direction-attlist ::= (style:direction::("ltr" | "ttb"))? ;
draw-regular-polygon-attlist ::= (draw:concave::"false") | (draw:concave::"true" draw-regular-polygon-sharpness-attlist) draw:corners::positiveInteger ;
text-sequence-ref-name ::= (text:ref-name::string)? ;
db-reports ::= db:reports::(db-reports-attlist (db-component | db-component-collection)*) ;
table-insertion ::= table:insertion::(table-insertion-attlist common-table-change-attlist office-change-info table-dependencies? table-deletions?) ;
table-label-ranges ::= table:label-ranges::(table-label-range*) ;
table-even-rows ::= table:even-rows::common-table-template-attlist ;
common-office-annotation-name-attlist ::= office:name::string ;
chart-categories ::= chart:categories::((table:cell-range-address::cellRangeAddressList)?) ;
draw-page-attlist ::= (draw:name::string)? (draw:style-name::styleNameRef)? draw:master-page-name::styleNameRef (presentation:presentation-page-layout-name::styleNameRef)? (xml-id (draw:id::NCName)?)? (draw:nav-order::IDREFS)? ;
table-database-ranges ::= table:database-ranges::(table-database-range*) ;
style-drawing-page-properties ::= style:drawing-page-properties::style-drawing-page-properties-content-strict ;
config-config-item-map-indexed ::= config:config-item-map-indexed::(config-config-item-map-indexed-attlist config-config-item-map-entry+) ;
style-table-cell-properties ::= style:table-cell-properties::style-table-cell-properties-content-strict ;
db-data-source-settings ::= db:data-source-settings::(db-data-source-settings-attlist db-data-source-setting+) ;
table-table-cell ::= table:table-cell::(table-table-cell-attlist table-table-cell-attlist-extra table-table-cell-content) ;
table-consolidation-attlist ::= table:function::("average" | "count" | "countnums" | "max" | "min" | "product" | "stdev" | "stdevp" | "sum" | "var" | "varp" | string) table:source-cell-range-addresses::cellRangeAddressList table:target-cell-address::cellAddress (table:use-labels::("none" | "row" | "column" | "both"))? (table:link-to-source-data::boolean)? ;
style-tab-stops ::= (style:tab-stops::(style-tab-stop*))? ;
db-component-collection ::= db:component-collection::(db-component-collection-attlist common-db-object-name common-db-object-title common-db-object-description (db-component | db-component-collection)*) ;
dr3d-light-attlist ::= (dr3d:diffuse-color::color)? dr3d:direction::vector3D (dr3d:enabled::boolean)? (dr3d:specular::boolean)? ;
style-drawing-page-properties-attlist ::= (presentation:transition-type::("manual" | "automatic" | "semi-automatic"))? (presentation:transition-style::("none" | "fade-from-left" | "fade-from-top" | "fade-from-right" | "fade-from-bottom" | "fade-from-upperleft" | "fade-from-upperright" | "fade-from-lowerleft" | "fade-from-lowerright" | "move-from-left" | "move-from-top" | "move-from-right" | "move-from-bottom" | "move-from-upperleft" | "move-from-upperright" | "move-from-lowerleft" | "move-from-lowerright" | "uncover-to-left" | "uncover-to-top" | "uncover-to-right" | "uncover-to-bottom" | "uncover-to-upperleft" | "uncover-to-upperright" | "uncover-to-lowerleft" | "uncover-to-lowerright" | "fade-to-center" | "fade-from-center" | "vertical-stripes" | "horizontal-stripes" | "clockwise" | "counterclockwise" | "open-vertical" | "open-horizontal" | "close-vertical" | "close-horizontal" | "wavyline-from-left" | "wavyline-from-top" | "wavyline-from-right" | "wavyline-from-bottom" | "spiralin-left" | "spiralin-right" | "spiralout-left" | "spiralout-right" | "roll-from-top" | "roll-from-left" | "roll-from-right" | "roll-from-bottom" | "stretch-from-left" | "stretch-from-top" | "stretch-from-right" | "stretch-from-bottom" | "vertical-lines" | "horizontal-lines" | "dissolve" | "random" | "vertical-checkerboard" | "horizontal-checkerboard" | "interlocking-horizontal-left" | "interlocking-horizontal-right" | "interlocking-vertical-top" | "interlocking-vertical-bottom" | "fly-away" | "open" | "close" | "melt"))? (presentation:transition-speed::presentationSpeeds)? (smil:type::string)? (smil:subtype::string)? (smil:direction::("forward" | "reverse"))? (smil:fadeColor::color)? (presentation:duration::duration)? (presentation:visibility::("visible" | "hidden"))? (draw:background-size::("full" | "border"))? (presentation:background-objects-visible::boolean)? (presentation:background-visible::boolean)? (presentation:display-header::boolean)? (presentation:display-footer::boolean)? (presentation:display-page-number::boolean)? (presentation:display-date-time::boolean)? ;
table-data-pilot-layout-info ::= table:data-pilot-layout-info::table-data-pilot-layout-info-attlist ;
config-config-item-map-indexed-attlist ::= config:name::string ;
common-db-object-title ::= (db:title::string)? ;
table-sort-groups-attlist ::= (table:data-type::("text" | "number" | "automatic" | string))? (table:order::("ascending" | "descending"))? ;
presentation-dim ::= presentation:dim::(presentation-dim-attlist presentation-sound?) ;
db-data-source-setting ::= db:data-source-setting::(db-data-source-setting-attlist db-data-source-setting-value+) ;
anim-animate-motion-attlist ::= (svg:path::pathData)? (svg:origin::string)? (smil:calcMode::("discrete" | "linear" | "paced" | "spline"))? ;
presentation-date-time-decl-attlist ::= presentation:name::string presentation:source::("fixed" | "current-date") (style:data-style-name::styleNameRef)? ;
text-template-name-attlist ::= (text:display::("full" | "path" | "name" | "name-and-extension" | "area" | "title"))? ;
draw-caption-attlist ::= (draw:caption-point-x::coordinate draw:caption-point-y::coordinate)? (draw:corner-radius::nonNegativeLength)? ;
form-button-attlist ::= form-control-attlist button-type common-disabled-attlist label image-data common-printable-attlist common-tab-attlist target-frame target-location common-title-attlist common-value-attlist common-form-relative-image-position-attlist common-repeat common-delay-for-repeat (form:default-button::boolean)? (form:toggle::boolean)? (form:focus-on-click::boolean)? (form:xforms-submission::string)? ;
column-controls ::= (form:text::(form-text-attlist common-form-control-content)) | (form:textarea::(form-textarea-attlist common-form-control-content text-p*)) | (form:formatted-text::(form-formatted-text-attlist common-form-control-content)) | (form:number::(form-number-attlist common-numeric-control-attlist common-form-control-content common-linked-cell common-spin-button common-repeat common-delay-for-repeat)) | (form:date::(form-date-attlist common-numeric-control-attlist common-form-control-content common-linked-cell common-spin-button common-repeat common-delay-for-repeat)) | (form:time::(form-time-attlist common-numeric-control-attlist common-form-control-content common-linked-cell common-spin-button common-repeat common-delay-for-repeat)) | (form:combobox::(form-combobox-attlist common-form-control-content form-item*)) | (form:listbox::(form-listbox-attlist common-form-control-content form-option*)) | (form:checkbox::(form-checkbox-attlist common-form-control-content)) ;
chart-equation-attlist ::= (chart:automatic-content::boolean)? (chart:display-r-square::boolean)? (chart:display-equation::boolean)? common-draw-position-attlist (chart:style-name::styleNameRef)? ;
chart-wall-attlist ::= (svg:width::length)? (chart:style-name::styleNameRef)? ;
text-index-title-template ::= text:index-title-template::((text:style-name::styleNameRef)? string()) ;
dr3d-rotate ::= dr3d:rotate::(common-draw-viewbox-attlist common-draw-path-data-attlist common-draw-z-index-attlist common-draw-id-attlist common-draw-layer-name-attlist common-draw-style-name-attlist common-dr3d-transform-attlist) ;
meta-date-string ::= meta:date-string::string ;
table-content-validations ::= table:content-validations::(table-content-validation+) ;
chart-series ::= chart:series::(chart-series-attlist chart-domain* chart-mean-value? chart-regression-curve* chart-error-indicator* chart-data-point* chart-data-label?) ;
db-table-filter ::= db:table-filter::(db-table-filter-attlist db-table-include-filter? db-table-exclude-filter?) ;
table-calculation-settings ::= table:calculation-settings::(table-calculation-setting-attlist table-null-date? table-iteration?) ;
common-field-display-value-none-attlist ::= (text:display::("value" | "none"))? ;
text-index-name ::= text:index-name::string ;
table-data-pilot-member-attlist ::= table:name::string (table:display::boolean)? (table:show-details::boolean)? ;
db-data-source-setting-attlist ::= (db:data-source-setting-is-list::boolean)? db:data-source-setting-name::string db:data-source-setting-type::db-data-source-setting-types ;
presentation-placeholder ::= presentation:placeholder::(presentation:object::presentation-classes svg:x::(coordinate | percent) svg:y::(coordinate | percent) svg:width::(length | percent) svg:height::(length | percent)) ;
style-map ::= style:map::style-map-attlist ;
number-number-attlist ::= (number:decimal-replacement::string)? (number:display-factor::double)? ;
text-index-source-style ::= text:index-source-style::(text:style-name::styleName) ;
common-field-description-attlist ::= (text:description::string)? ;
db-column-definitions ::= db:column-definitions::(db-column-definitions-attlist db-column-definition+) ;
chart-series-attlist ::= (chart:values-cell-range-address::cellRangeAddressList)? (chart:label-cell-address::cellRangeAddressList)? (chart:class::namespacedToken)? (chart:attached-axis::string)? (chart:style-name::styleNameRef)? xml-id? ;
common-draw-transform-attlist ::= (draw:transform::string)? ;
text-section-attlist ::= common-section-attlist (text:display::("true" | "none")) | (text:display::"condition" text:condition::string) | ε ;
db-data-source-setting-value ::= db:data-source-setting-value::(db-data-source-setting-value-attlist string) ;
common-shadow-attlist ::= (style:shadow::shadowType)? ;
db-key-column ::= db:key-column::db-key-column-attlist ;
common-num-format-attlist ::= (style:num-format::("1" | "i" | "I" | string | ε)) | (style:num-format::("a" | "A") style-num-letter-sync-attlist) | ε ;
text-page ::= text:page::text-page-attlist ;
common-data-field-attlist ::= (form:data-field::string)? ;
draw-regular-polygon-sharpness-attlist ::= draw:sharpness::percent ;
table-deletions ::= table:deletions::((table-cell-content-deletion | table-change-deletion)+) ;
text-list-level-style-attr ::= text:level::positiveInteger ;
table-data-pilot-sort-info ::= table:data-pilot-sort-info::table-data-pilot-sort-info-attlist ;
table-tracked-changes ::= table:tracked-changes::(table-tracked-changes-attlist (table-cell-content-change | table-insertion | table-deletion | table-movement)*) ;
table-database-source-sql-attlist ::= table:database-name::string table:sql-statement::string (table:parse-sql-statement::boolean)? ;
presentation-shape-attlist ::= (presentation:class::presentation-classes)? (presentation:placeholder::boolean)? (presentation:user-transformed::boolean)? ;
style-chart-properties ::= style:chart-properties::style-chart-properties-content-strict ;
text-alphabetical-index ::= text:alphabetical-index::(common-section-attlist text-alphabetical-index-source text-index-body) ;
office-change-info ::= office:change-info::(dc-creator dc-date text-p*) ;
paragraph-content ::= string() | (text:s::((text:c::nonNegativeInteger)?)) | (text:tab::text-tab-attr) | (text:line-break::ε) | text-soft-page-break | (text:span::((text:style-name::styleNameRef)? (text:class-names::styleNameRefs)? paragraph-content-or-hyperlink*)) | (text:meta::(text-meta-attlist paragraph-content-or-hyperlink*)) | text-bookmark | text-bookmark-start | text-bookmark-end | (text:reference-mark::(text:name::string)) | (text:reference-mark-start::(text:name::string)) | (text:reference-mark-end::(text:name::string)) | (text:note::(text-note-class (text:id::string)? text:note-citation::((text:label::string)? string()) text:note-body::(text-content*))) | (text:ruby::((text:style-name::styleNameRef)? text:ruby-base::(paragraph-content-or-hyperlink*) text:ruby-text::((text:style-name::styleNameRef)? string()))) | office-annotation | office-annotation-end | change-marks | shape | (text:date::(text-date-attlist string())) | (text:time::(text-time-attlist string())) | (text:page-number::(text-page-number-attlist string())) | (text:page-continuation::(text-page-continuation-attlist string())) | (text:sender-firstname::(common-field-fixed-attlist string())) | (text:sender-lastname::(common-field-fixed-attlist string())) | (text:sender-initials::(common-field-fixed-attlist string())) | (text:sender-title::(common-field-fixed-attlist string())) | (text:sender-position::(common-field-fixed-attlist string())) | (text:sender-email::(common-field-fixed-attlist string())) | (text:sender-phone-private::(common-field-fixed-attlist string())) | (text:sender-fax::(common-field-fixed-attlist string())) | (text:sender-company::(common-field-fixed-attlist string())) | (text:sender-phone-work::(common-field-fixed-attlist string())) | (text:sender-street::(common-field-fixed-attlist string())) | (text:sender-city::(common-field-fixed-attlist string())) | (text:sender-postal-code::(common-field-fixed-attlist string())) | (text:sender-country::(common-field-fixed-attlist string())) | (text:sender-state-or-province::(common-field-fixed-attlist string())) | (text:author-name::(common-field-fixed-attlist string())) | (text:author-initials::(common-field-fixed-attlist string())) | (text:chapter::(text-chapter-attlist string())) | (text:file-name::(text-file-name-attlist string())) | (text:template-name::(text-template-name-attlist string())) | (text:sheet-name::string()) | (text:variable-set::(common-field-name-attlist common-field-formula-attlist common-value-and-type-attlist common-field-display-value-none-attlist common-field-data-style-name-attlist string())) | (text:variable-get::(common-field-name-attlist common-field-display-value-formula-attlist common-field-data-style-name-attlist string())) | (text:variable-input::(common-field-name-attlist common-field-description-attlist common-value-type-attlist common-field-display-value-none-attlist common-field-data-style-name-attlist string())) | (text:user-field-get::(common-field-name-attlist common-field-display-value-formula-none-attlist common-field-data-style-name-attlist string())) | (text:user-field-input::(common-field-name-attlist common-field-description-attlist common-field-data-style-name-attlist string())) | (text:sequence::(common-field-name-attlist common-field-formula-attlist common-field-num-format-attlist text-sequence-ref-name string())) | (text:expression::(common-field-formula-attlist common-value-and-type-attlist? common-field-display-value-formula-attlist common-field-data-style-name-attlist string())) | (text:text-input::(common-field-description-attlist string())) | (text:initial-creator::(common-field-fixed-attlist string())) | (text:creation-date::(common-field-fixed-attlist common-field-data-style-name-attlist (text:date-value::dateOrDateTime)? string())) | (text:creation-time::(common-field-fixed-attlist common-field-data-style-name-attlist (text:time-value::timeOrDateTime)? string())) | (text:description::(common-field-fixed-attlist string())) | (text:user-defined::(common-field-fixed-attlist text:name::string common-field-data-style-name-attlist (office:value::double)? (office:date-value::dateOrDateTime)? (office:time-value::duration)? (office:boolean-value::boolean)? (office:string-value::string)? string())) | (text:print-time::(common-field-fixed-attlist common-field-data-style-name-attlist (text:time-value::time)? string())) | (text:print-date::(common-field-fixed-attlist common-field-data-style-name-attlist (text:date-value::date)? string())) | (text:printed-by::(common-field-fixed-attlist string())) | (text:title::(common-field-fixed-attlist string())) | (text:subject::(common-field-fixed-attlist string())) | (text:keywords::(common-field-fixed-attlist string())) | (text:editing-cycles::(common-field-fixed-attlist string())) | (text:editing-duration::(common-field-fixed-attlist common-field-data-style-name-attlist (text:duration::duration)? string())) | (text:modification-time::(common-field-fixed-attlist common-field-data-style-name-attlist (text:time-value::time)? string())) | (text:modification-date::(common-field-fixed-attlist common-field-data-style-name-attlist (text:date-value::date)? string())) | (text:creator::(common-field-fixed-attlist string())) | (text:page-count::(common-field-num-format-attlist string())) | (text:paragraph-count::(common-field-num-format-attlist string())) | (text:word-count::(common-field-num-format-attlist string())) | (text:character-count::(common-field-num-format-attlist string())) | (text:table-count::(common-field-num-format-attlist string())) | (text:image-count::(common-field-num-format-attlist string())) | (text:object-count::(common-field-num-format-attlist string())) | (text:database-display::(text-database-display-attlist string())) | (text:database-next::text-database-next-attlist) | (text:database-row-select::text-database-row-select-attlist) | (text:database-row-number::(common-field-database-table common-field-num-format-attlist (text:value::nonNegativeInteger)? string())) | (text:database-name::(common-field-database-table string())) | (text:page-variable-set::(text-set-page-variable-attlist string())) | (text:page-variable-get::(text-get-page-variable-attlist string())) | (text:placeholder::(text-placeholder-attlist string())) | (text:conditional-text::(text-conditional-text-attlist string())) | (text:hidden-text::(text-hidden-text-attlist string())) | (text:reference-ref::(text-common-ref-content text-bookmark-ref-content)) | (text:bookmark-ref::(text-common-ref-content text-bookmark-ref-content)) | (text:note-ref::(text-common-ref-content text-note-ref-content)) | (text:sequence-ref::(text-common-ref-content text-sequence-ref-content)) | (text:script::((xlink:type::"simple" xlink:href::anyIRI) | string() (script:language::string)?)) | (text:execute-macro::((text:name::string)? office-event-listeners? string())) | (text:hidden-paragraph::(text-hidden-paragraph-attlist string())) | (text:dde-connection::(text:connection-name::string string())) | (text:measure::(text:kind::("value" | "unit" | "gap") string())) | (text:table-formula::(common-field-formula-attlist common-field-display-value-formula-attlist common-field-data-style-name-attlist string())) | (text:meta-field::(text-meta-field-attlist paragraph-content-or-hyperlink*)) | (text:toc-mark-start::text-toc-mark-start-attrs) | (text:toc-mark-end::text-id) | (text:toc-mark::(text:string-value::string text-outline-level)) | (text:user-index-mark-start::(text-id text-outline-level text-index-name)) | (text:user-index-mark-end::text-id) | (text:user-index-mark::(text:string-value::string text-outline-level text-index-name)) | (text:alphabetical-index-mark-start::(text-id text-alphabetical-index-mark-attrs)) | (text:alphabetical-index-mark-end::text-id) | (text:alphabetical-index-mark::(text:string-value::string text-alphabetical-index-mark-attrs)) | (text:bibliography-mark::(text:bibliography-type::text-bibliography-types ((text:identifier::string) | (text:address::string) | (text:annote::string) | (text:author::string) | (text:booktitle::string) | (text:chapter::string) | (text:edition::string) | (text:editor::string) | (text:howpublished::string) | (text:institution::string) | (text:journal::string) | (text:month::string) | (text:note::string) | (text:number::string) | (text:organizations::string) | (text:pages::string) | (text:publisher::string) | (text:school::string) | (text:series::string) | (text:title::string) | (text:report-type::string) | (text:volume::string) | (text:year::string) | (text:url::string) | (text:custom1::string) | (text:custom2::string) | (text:custom3::string) | (text:custom4::string) | (text:custom5::string) | (text:isbn::string) | (text:issn::string))* string())) | (presentation:header::ε) | (presentation:footer::ε) | (presentation:date-time::ε) ;
config-config-item-map-entry-attlist ::= (config:name::string)? ;
number-day ::= number:day::(number-day-attlist common-calendar-attlist) ;
common-endsync-timing-attlist ::= (smil:endsync::("first" | "last" | "all" | "media" | IDREF))? ;
change-mark-attr ::= text:change-id::IDREF ;
db-table-definition-attlist ::= (db:type::string)? ;
common-db-table-style-name ::= (db:style-name::styleNameRef)? (db:default-row-style-name::styleNameRef)? ;
common-vertical-pos-attlist ::= (style:vertical-pos::("top" | "middle" | "bottom" | "from-top" | "below"))? (svg:y::coordinate)? ;
style-chart-properties-attlist ::= (chart:scale-text::boolean)? (chart:three-dimensional::boolean)? (chart:deep::boolean)? (chart:right-angled-axes::boolean)? (chart:symbol-type::"none") | (chart:symbol-type::"automatic") | (chart:symbol-type::"named-symbol" chart:symbol-name::("square" | "diamond" | "arrow-down" | "arrow-up" | "arrow-right" | "arrow-left" | "bow-tie" | "hourglass" | "circle" | "star" | "x" | "plus" | "asterisk" | "horizontal-bar" | "vertical-bar")) | (chart:symbol-type::"image" chart:symbol-image::(xlink:href::anyIRI)) | ε (chart:symbol-width::nonNegativeLength)? (chart:symbol-height::nonNegativeLength)? (chart:sort-by-x-values::boolean)? (chart:vertical::boolean)? (chart:connect-bars::boolean)? (chart:gap-width::integer)? (chart:overlap::integer)? (chart:group-bars-per-axis::boolean)? (chart:japanese-candle-stick::boolean)? (chart:interpolation::("none" | "cubic-spline" | "b-spline"))? (chart:spline-order::positiveInteger)? (chart:spline-resolution::positiveInteger)? (chart:pie-offset::nonNegativeInteger)? (chart:angle-offset::angle)? (chart:hole-size::percent)? (chart:lines::boolean)? (chart:solid-type::("cuboid" | "cylinder" | "cone" | "pyramid"))? (chart:stacked::boolean)? (chart:percentage::boolean)? (chart:treat-empty-cells::("use-zero" | "leave-gap" | "ignore"))? (chart:link-data-style-to-source::boolean)? (chart:logarithmic::boolean)? (chart:maximum::double)? (chart:minimum::double)? (chart:origin::double)? (chart:interval-major::double)? (chart:interval-minor-divisor::positiveInteger)? (chart:tick-marks-major-inner::boolean)? (chart:tick-marks-major-outer::boolean)? (chart:tick-marks-minor-inner::boolean)? (chart:tick-marks-minor-outer::boolean)? (chart:reverse-direction::boolean)? (chart:display-label::boolean)? (chart:text-overlap::boolean)? (text:line-break::boolean)? (chart:label-arrangement::("side-by-side" | "stagger-even" | "stagger-odd"))? common-style-direction-attlist common-rotation-angle-attlist (chart:data-label-number::("none" | "value" | "percentage" | "value-and-percentage"))? (chart:data-label-text::boolean)? (chart:data-label-symbol::boolean)? (chart:label-separator::text-p)? (chart:label-position::labelPositions)? (chart:label-position-negative::labelPositions)? (chart:visible::boolean)? (chart:auto-position::boolean)? (chart:auto-size::boolean)? (chart:mean-value::boolean)? (chart:error-category::("none" | "variance" | "standard-deviation" | "percentage" | "error-margin" | "constant" | "standard-error" | "cell-range"))? (chart:error-percentage::double)? (chart:error-margin::double)? (chart:error-lower-limit::double)? (chart:error-upper-limit::double)? (chart:error-upper-indicator::boolean)? (chart:error-lower-indicator::boolean)? (chart:error-lower-range::cellRangeAddressList)? (chart:error-upper-range::cellRangeAddressList)? (chart:series-source::("columns" | "rows"))? (chart:regression-type::("none" | "linear" | "logarithmic" | "exponential" | "power"))? (chart:axis-position::("start" | "end" | double))? (chart:axis-label-position::("near-axis" | "near-axis-other-side" | "outside-start" | "outside-end"))? (chart:tick-mark-position::("at-labels" | "at-axis" | "at-labels-and-axis"))? (chart:include-hidden-cells::boolean)? ;
text-table-index-entry-template ::= text:table-index-entry-template::text-illustration-index-entry-content ;
text-linenumbering-configuration ::= text:linenumbering-configuration::(text-linenumbering-configuration-attlist text-linenumbering-separator?) ;
draw-path ::= draw:path::(common-draw-path-data-attlist common-draw-position-attlist common-draw-size-attlist common-draw-viewbox-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text) ;
number-embedded-text ::= number:embedded-text::(number-embedded-text-attlist string()) ;
style-handout-master ::= style:handout-master::(common-presentation-header-footer-attlist style-handout-master-attlist shape*) ;
presentation-show-text ::= presentation:show-text::(common-presentation-effect-attlist presentation-sound?) ;
draw-area-circle ::= draw:area-circle::(common-draw-area-attlist svg:cx::coordinate svg:cy::coordinate svg:r::length svg-title? svg-desc? office-event-listeners?) ;
text-user-index-source-attr ::= text-index-scope-attr text-relative-tab-stop-position-attr (text:use-index-marks::boolean)? (text:use-index-source-styles::boolean)? (text:use-graphics::boolean)? (text:use-tables::boolean)? (text:use-floating-frames::boolean)? (text:use-objects::boolean)? (text:copy-outline-levels::boolean)? text:index-name::string ;
draw-connector ::= draw:connector::(draw-connector-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist common-draw-viewbox-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text) ;
table-highlighted-range ::= table:highlighted-range::(table-highlighted-range-attlist | table-highlighted-range-attlist-invalid) ;
style-column-sep ::= style:column-sep::style-column-sep-attlist ;
text-linenumbering-configuration-attlist ::= (text:number-lines::boolean)? common-num-format-attlist? (text:style-name::styleNameRef)? (text:increment::nonNegativeInteger)? (text:number-position::("left" | "right" | "inner" | "outer"))? (text:offset::nonNegativeLength)? (text:count-empty-lines::boolean)? (text:count-in-text-boxes::boolean)? (text:restart-on-page::boolean)? ;
draw-stroke-dash ::= draw:stroke-dash::draw-stroke-dash-attlist ;
text-object-index-entry-template ::= text:object-index-entry-template::text-illustration-index-entry-content ;
list-source-type ::= (form:list-source-type::("table" | "query" | "sql" | "sql-pass-through" | "value-list" | "table-fields"))? ;
number-month ::= number:month::(number-month-attlist common-calendar-attlist) ;
chart-data-point ::= chart:data-point::(chart-data-point-attlist chart-data-label?) ;
db-file-based-database ::= db:file-based-database::db-file-based-database-attlist ;
office-scripts ::= (office:scripts::(office-script* office-event-listeners?))? ;
common-vertical-margin-attlist ::= (fo:margin-top::(nonNegativeLength | percent))? (fo:margin-bottom::(nonNegativeLength | percent))? ;
table-data-pilot-table ::= table:data-pilot-table::(table-data-pilot-table-attlist (table-database-source-sql | table-database-source-table | table-database-source-query | table-source-service | table-source-cell-range)? table-data-pilot-field+) ;
label ::= (form:label::string)? ;
style-header-footer-properties-attlist ::= (svg:height::length)? (fo:min-height::length)? common-horizontal-margin-attlist common-vertical-margin-attlist common-margin-attlist common-border-attlist common-border-line-width-attlist common-padding-attlist common-background-color-attlist common-shadow-attlist (style:dynamic-spacing::boolean)? ;
style-column ::= style:column::style-column-attlist ;
style-font-face-attlist ::= (svg:font-family::string)? (svg:font-style::fontStyle)? (svg:font-variant::fontVariant)? (svg:font-weight::fontWeight)? (svg:font-stretch::("normal" | "ultra-condensed" | "extra-condensed" | "condensed" | "semi-condensed" | "semi-expanded" | "expanded" | "extra-expanded" | "ultra-expanded"))? (svg:font-size::positiveLength)? (svg:unicode-range::string)? (svg:units-per-em::integer)? (svg:panose-1::string)? (svg:stemv::integer)? (svg:stemh::integer)? (svg:slope::integer)? (svg:cap-height::integer)? (svg:x-height::integer)? (svg:accent-height::integer)? (svg:ascent::integer)? (svg:descent::integer)? (svg:widths::string)? (svg:bbox::string)? (svg:ideographic::integer)? (svg:alphabetic::integer)? (svg:mathematical::integer)? (svg:hanging::integer)? (svg:v-ideographic::integer)? (svg:v-alphabetic::integer)? (svg:v-mathematical::integer)? (svg:v-hanging::integer)? (svg:underline-position::integer)? (svg:underline-thickness::integer)? (svg:strikethrough-position::integer)? (svg:strikethrough-thickness::integer)? (svg:overline-position::integer)? (svg:overline-thickness::integer)? style:name::string (style:font-adornments::string)? (style:font-family-generic::fontFamilyGeneric)? (style:font-pitch::fontPitch)? (style:font-charset::textEncoding)? ;
style-num-letter-sync-attlist ::= (style:num-letter-sync::boolean)? ;
common-field-fixed-attlist ::= (text:fixed::boolean)? ;
text-changed-region-attr ::= xml-id (text:id::NCName)? ;
draw-stroke-dash-attlist ::= draw:name::styleName (draw:display-name::string)? (draw:style::("rect" | "round"))? (draw:dots1::integer)? (draw:dots1-length::(length | percent))? (draw:dots2::integer)? (draw:dots2-length::(length | percent))? (draw:distance::(length | percent))? ;
table-last-column ::= table:last-column::common-table-template-attlist ;
table-cell-content-deletion ::= table:cell-content-deletion::((table:id::string)? table-cell-address? table-change-track-table-cell?) ;
office-script-attlist ::= script:language::string ;
config-config-item-map-named ::= config:config-item-map-named::(config-config-item-map-named-attlist config-config-item-map-entry+) ;
number-seconds-attlist ::= (number:style::("short" | "long"))? (number:decimal-places::integer)? ;
table-deletion ::= table:deletion::(table-deletion-attlist common-table-change-attlist office-change-info table-dependencies? table-deletions? table-cut-offs?) ;
text-index-entry-chapter-attrs ::= (text:display::("name" | "number" | "number-and-name" | "plain-number" | "plain-number-and-name"))? (text:outline-level::positiveInteger)? ;
style-ruby-properties ::= style:ruby-properties::style-ruby-properties-content-strict ;
common-contour-attlist ::= draw:recreate-on-edit::boolean ;
change-marks ::= (text:change::change-mark-attr) | (text:change-start::change-mark-attr) | (text:change-end::change-mark-attr) ;
table-database-source-query ::= table:database-source-table::table-database-source-table-attlist ;
common-field-data-style-name-attlist ::= (style:data-style-name::styleNameRef)? ;
style-column-attlist ::= style:rel-width::relativeLength (fo:start-indent::length)? (fo:end-indent::length)? (fo:space-before::length)? (fo:space-after::length)? ;
common-fill-timing-attlist ::= (smil:fill::("remove" | "freeze" | "hold" | "auto" | "default" | "transition"))? ;
table-source-service ::= table:source-service::table-source-service-attlist ;
office-annotation ::= office:annotation::(office-annotation-attlist draw-caption-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist dc-creator? dc-date? meta-date-string? (text-p | text-list)*) ;
config-config-item-map-named-attlist ::= config:name::string ;
style-footer-left ::= style:footer-left::(common-style-header-footer-attlist header-footer-content) ;
common-anim-target-attlist ::= (smil:targetElement::IDREF)? (anim:sub-item::string)? ;
draw-line ::= draw:line::(draw-line-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text) ;
style-ruby-properties-attlist ::= (style:ruby-position::("above" | "below"))? (style:ruby-align::("left" | "center" | "right" | "distribute-letter" | "distribute-space"))? ;
table-sort-by-attlist ::= table:field-number::nonNegativeInteger (table:data-type::("text" | "number" | "automatic" | string))? (table:order::("ascending" | "descending"))? ;
draw-page-thumbnail ::= draw:page-thumbnail::(draw-page-thumbnail-attlist common-draw-position-attlist common-draw-size-attlist presentation-shape-attlist common-draw-shape-with-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc?) ;
table-odd-rows ::= table:odd-rows::common-table-template-attlist ;
style-graphic-properties ::= style:graphic-properties::style-graphic-properties-content-strict ;
table-source-service-attlist ::= table:name::string table:source-name::string table:object-name::string (table:user-name::string)? (table:password::string)? ;
db-index-columns ::= db:index-columns::(db-index-column+) ;
common-calendar-attlist ::= (number:calendar::("gregorian" | "gengou" | "ROC" | "hanja_yoil" | "hanja" | "hijri" | "jewish" | "buddhist" | string))? ;
draw-handle ::= draw:handle::draw-handle-attlist ;
table-cell-content-change ::= table:cell-content-change::(common-table-change-attlist table-cell-address office-change-info table-dependencies? table-deletions? table-previous) ;
table-subtotal-field ::= table:subtotal-field::table-subtotal-field-attlist ;
chart-legend-attlist ::= (chart:legend-position::("start" | "end" | "top" | "bottom") (chart:legend-align::("start" | "center" | "end"))?) | (chart:legend-position::("top-start" | "bottom-start" | "top-end" | "bottom-end")) | ε common-draw-position-attlist (style:legend-expansion::("wide" | "high" | "balanced")) | (style:legend-expansion::"custom" style:legend-expansion-aspect-ratio::double) | ε (chart:style-name::styleNameRef)? ;
table-subtotal-rules ::= table:subtotal-rules::(table-subtotal-rules-attlist table-sort-groups? table-subtotal-rule*) ;
chart-plot-area ::= chart:plot-area::(chart-plot-area-attlist dr3d-light* chart-axis* chart-series* chart-stock-gain-marker? chart-stock-loss-marker? chart-stock-range-line? chart-wall? chart-floor?) ;
db-filter-statement ::= db:filter-statement::(db-command db-apply-command) ;
draw-measure-attlist ::= svg:x1::coordinate svg:y1::coordinate svg:x2::coordinate svg:y2::coordinate ;
draw-param ::= draw:param::draw-param-attlist ;
db-index ::= db:index::(db-index-attlist db-index-columns+) ;
draw-object-ole ::= draw:object-ole::(draw-object-ole-attlist common-draw-data-attlist | office-binary-data) ;
number-era-attlist ::= (number:style::("short" | "long"))? ;
number-percentage-style ::= number:percentage-style::(common-data-style-attlist style-text-properties? number-text? number-and-text? style-map*) ;
office-body-content ::= (office:text::(office-text-attlist office-text-content-prelude office-text-content-main office-text-content-epilogue)) | (office:drawing::(office-drawing-attlist office-drawing-content-prelude office-drawing-content-main office-drawing-content-epilogue)) | (office:presentation::(office-presentation-attlist office-presentation-content-prelude office-presentation-content-main office-presentation-content-epilogue)) | (office:spreadsheet::(office-spreadsheet-attlist office-spreadsheet-content-prelude office-spreadsheet-content-main office-spreadsheet-content-epilogue)) | (office:chart::(office-chart-attlist office-chart-content-prelude office-chart-content-main office-chart-content-epilogue)) | (office:image::(office-image-attlist office-image-content-prelude office-image-content-main office-image-content-epilogue)) | office-database ;
draw-contour-polygon ::= draw:contour-polygon::(common-contour-attlist common-draw-size-attlist common-draw-viewbox-attlist common-draw-points-attlist) ;
chart-plot-area-attlist ::= common-draw-position-attlist common-draw-size-attlist (chart:style-name::styleNameRef)? (table:cell-range-address::cellRangeAddressList)? (chart:data-source-has-labels::("none" | "row" | "column" | "both"))? dr3d-scene-attlist common-dr3d-transform-attlist xml-id? ;
form-formatted-text-attlist ::= form-control-attlist common-current-value-attlist common-disabled-attlist common-maxlength-attlist common-printable-attlist common-readonly-attlist common-tab-attlist common-title-attlist common-value-attlist common-convert-empty-attlist common-data-field-attlist common-linked-cell common-spin-button common-repeat common-delay-for-repeat (form:max-value::string)? (form:min-value::string)? (form:validation::boolean)? ;
db-update-table ::= db:update-table::common-db-table-name-attlist ;
db-query ::= db:query::(db-query-attlist common-db-object-name common-db-object-title common-db-object-description common-db-table-style-name db-order-statement? db-filter-statement? db-columns? db-update-table?) ;
chart-mean-value ::= chart:mean-value::chart-mean-value-attlist ;
style-section-properties ::= style:section-properties::style-section-properties-content-strict ;
table-source-cell-range-attlist ::= table:cell-range-address::cellRangeAddress ;
controls ::= column-controls | (form:password::(form-password-attlist common-form-control-content)) | (form:file::(form-file-attlist common-form-control-content)) | (form:fixed-text::(form-fixed-text-attlist common-form-control-content)) | (form:button::(form-button-attlist common-form-control-content)) | (form:image::(form-image-attlist common-form-control-content)) | (form:radio::(form-radio-attlist common-form-control-content)) | (form:frame::(form-frame-attlist common-form-control-content)) | (form:image-frame::(form-image-frame-attlist common-form-control-content)) | (form:hidden::(form-hidden-attlist common-form-control-content)) | (form:grid::(form-grid-attlist common-form-control-content form-column*)) | (form:value-range::(form-value-range-attlist common-form-control-content)) | (form:generic-control::(form-generic-control-attlist common-form-control-content)) ;
text-illustration-index ::= text:illustration-index::(common-section-attlist text-illustration-index-source text-index-body) ;
office-dde-source ::= office:dde-source::(office-dde-source-attlist common-dde-connection-decl-attlist) ;
table-scenario ::= table:scenario::table-scenario-attlist ;
common-table-template-attlist ::= table:style-name::styleNameRef (table:paragraph-style-name::styleNameRef)? ;
math-math ::= math:math::mathMarkup ;
common-current-value-attlist ::= (form:current-value::string)? ;
table-content-validation ::= table:content-validation::(table-validation-attlist table-help-message? (table-error-message | (table-error-macro office-event-listeners))?) ;
table-data-pilot-level ::= table:data-pilot-level::(table-data-pilot-level-attlist table-data-pilot-subtotals? table-data-pilot-members? table-data-pilot-display-info? table-data-pilot-sort-info? table-data-pilot-layout-info?) ;
table-dependency ::= table:dependency::(table:id::string) ;
draw-equation-attlist ::= (draw:name::string)? (draw:formula::string)? ;
text-conditional-text-attlist ::= text:condition::string text:string-value-if-true::string text:string-value-if-false::string (text:current-value::boolean)? ;
common-source-cell-range ::= (form:source-cell-range::(cellRangeAddress | string))? ;
style-table-column-properties-attlist ::= (style:column-width::positiveLength)? (style:rel-column-width::relativeLength)? (style:use-optimal-column-width::boolean)? common-break-attlist ;
common-draw-circle-ellipse-pos-attlist ::= svg:cx::coordinate svg:cy::coordinate ;
text-list-item-attr ::= (text:start-value::nonNegativeInteger)? (text:style-override::styleNameRef)? xml-id? ;
selected ::= (form:selected::boolean)? ;
common-draw-circle-ellipse-attlist ::= (draw:kind::("full" | "section" | "cut" | "arc"))? (draw:start-angle::angle)? (draw:end-angle::angle)? ;
text-page-number-attlist ::= common-field-num-format-attlist common-field-fixed-attlist (text:page-adjust::integer)? (text:select-page::("previous" | "current" | "next"))? ;
table-table-source ::= table:table-source::(table-table-source-attlist table-linked-source-attlist) ;
table-label-range-attlist ::= table:label-cell-range-address::cellRangeAddress table:data-cell-range-address::cellRangeAddress table:orientation::("column" | "row") ;
text-sequence-decl ::= text:sequence-decl::text-sequence-decl-attlist ;
style-style ::= style:style::(style-style-attlist style-style-content style-map*) ;
draw-enhanced-geometry-attlist ::= (draw:type::custom-shape-type)? (svg:viewBox::(integer integer integer integer))? (draw:mirror-vertical::boolean)? (draw:mirror-horizontal::boolean)? (draw:text-rotate-angle::angle)? (draw:extrusion-allowed::boolean)? (draw:text-path-allowed::boolean)? (draw:concentric-gradient-fill-allowed::boolean)? (draw:extrusion::boolean)? (draw:extrusion-brightness::zeroToHundredPercent)? (draw:extrusion-depth::(length double))? (draw:extrusion-diffusion::percent)? (draw:extrusion-number-of-line-segments::integer)? (draw:extrusion-light-face::boolean)? (draw:extrusion-first-light-harsh::boolean)? (draw:extrusion-second-light-harsh::boolean)? (draw:extrusion-first-light-level::zeroToHundredPercent)? (draw:extrusion-second-light-level::zeroToHundredPercent)? (draw:extrusion-first-light-direction::vector3D)? (draw:extrusion-second-light-direction::vector3D)? (draw:extrusion-metal::boolean)? (dr3d:shade-mode::("flat" | "phong" | "gouraud" | "draft"))? (draw:extrusion-rotation-angle::(angle angle))? (draw:extrusion-rotation-center::vector3D)? (draw:extrusion-shininess::zeroToHundredPercent)? (draw:extrusion-skew::(double angle))? (draw:extrusion-specularity::zeroToHundredPercent)? (dr3d:projection::("parallel" | "perspective"))? (draw:extrusion-viewpoint::point3D)? (draw:extrusion-origin::(extrusionOrigin extrusionOrigin))? (draw:extrusion-color::boolean)? (draw:enhanced-path::string)? (draw:path-stretchpoint-x::double)? (draw:path-stretchpoint-y::double)? (draw:text-areas::string)? (draw:glue-points::string)? (draw:glue-point-type::("none" | "segments" | "rectangle"))? (draw:glue-point-leaving-directions::string)? (draw:text-path::boolean)? (draw:text-path-mode::("normal" | "path" | "shape"))? (draw:text-path-scale::("path" | "shape"))? (draw:text-path-same-letter-heights::boolean)? (draw:modifiers::string)? ;
common-field-name-attlist ::= text:name::variableName ;
style-presentation-page-layout ::= style:presentation-page-layout::(style:name::styleName (style:display-name::string)? presentation-placeholder*) ;
xml-id ::= xml:id::ID ;
text-index-entry-page-number ::= text:index-entry-page-number::((text:style-name::styleNameRef)?) ;
presentation-sound-attlist ::= (presentation:play-full::boolean)? xml-id? ;
text-alphabetical-index-auto-mark-file ::= text:alphabetical-index-auto-mark-file::(xlink:type::"simple" xlink:href::anyIRI) ;
draw-gradient-attlist ::= (draw:start-color::color)? (draw:end-color::color)? (draw:start-intensity::zeroToHundredPercent)? (draw:end-intensity::zeroToHundredPercent)? ;
style-background-image-attlist ::= (style:repeat::("no-repeat" | "repeat" | "stretch"))? (style:position::("left" | "center" | "right" | "top" | "bottom" | (horiBackPos vertBackPos) | (vertBackPos horiBackPos)))? (style:filter-name::string)? (draw:opacity::zeroToHundredPercent)? ;
svg-font-face-src ::= svg:font-face-src::((svg-font-face-uri | svg-font-face-name)+) ;
db-table-type ::= db:table-type::(db-table-type-attlist string) ;
text-sequence-decl-attlist ::= common-field-name-attlist text:display-outline-level::nonNegativeInteger (text:separation-character::character)? ;
svg-font-face-name ::= svg:font-face-name::((svg:name::string)?) ;
bound-column ::= (form:bound-column::string)? ;
style-drop-cap-attlist ::= (style:length::("word" | positiveInteger))? (style:lines::positiveInteger)? (style:distance::length)? (style:style-name::styleNameRef)? ;
db-key-attlist ::= (db:name::string)? db:type::("primary" | "unique" | "foreign") (db:referenced-table-name::string)? (db:update-rule::("cascade" | "restrict" | "set-null" | "no-action" | "set-default"))? (db:delete-rule::("cascade" | "restrict" | "set-null" | "no-action" | "set-default"))? ;
text-table-of-content ::= text:table-of-content::(common-section-attlist text-table-of-content-source text-index-body) ;
anim-command-attlist ::= anim:command::string ;
table-data-pilot-members ::= table:data-pilot-members::(table-data-pilot-member*) ;
text-tracked-changes ::= (text:tracked-changes::(text-tracked-changes-attr text-changed-region*))? ;
text-index-entry-link-end ::= text:index-entry-link-end::((text:style-name::styleNameRef)?) ;
number-hours-attlist ::= (number:style::("short" | "long"))? ;
form-item ::= form:item::(form-item-attlist string()) ;
common-meta-literal-attlist ::= (xhtml:datatype::CURIE)? (xhtml:content::string)? ;
draw-hatch ::= draw:hatch::draw-hatch-attlist ;
office-meta ::= (office:meta::office-meta-content-strict)? ;
style-table-row-properties-attlist ::= (style:row-height::positiveLength)? (style:min-row-height::nonNegativeLength)? (style:use-optimal-row-height::boolean)? common-background-color-attlist common-break-attlist (fo:keep-together::("auto" | "always"))? ;
db-table-definitions ::= db:table-definitions::(db-table-definitions-attlist db-table-definition*) ;
chart-regression-curve ::= chart:regression-curve::(chart-regression-curve-attlist chart-equation?) ;
common-auto-reorder-attlist ::= (number:automatic-order::boolean)? ;
db-component ::= db:component::(db-component-attlist common-db-object-name common-db-object-title common-db-object-description (office-document | math-math)?) ;
table-consolidation ::= table:consolidation::table-consolidation-attlist ;
text-bibliography-configuration ::= text:bibliography-configuration::(text-bibliography-configuration-attlist text-sort-key*) ;
draw-circle-attlist ::= svg:r::length ;
chart-footer ::= chart:footer::(chart-title-attlist text-p?) ;
table-subtotal-rule ::= table:subtotal-rule::(table-subtotal-rule-attlist table-subtotal-field*) ;
common-stock-marker-attlist ::= (chart:style-name::styleNameRef)? ;
chart-regression-curve-attlist ::= (chart:style-name::styleNameRef)? ;
db-order-statement ::= db:order-statement::(db-command db-apply-command) ;
db-component-attlist ::= (xlink:type::"simple" xlink:href::anyIRI (xlink:show::"none")? (xlink:actuate::"onRequest")?)? (db:as-template::boolean)? ;
common-value-and-type-attlist ::= (office:value-type::"float" office:value::double) | (office:value-type::"percentage" office:value::double) | (office:value-type::"currency" office:value::double (office:currency::string)?) | (office:value-type::"date" office:date-value::dateOrDateTime) | (office:value-type::"time" office:time-value::duration) | (office:value-type::"boolean" office:boolean-value::boolean) | (office:value-type::"string" (office:string-value::string)?) ;
db-table-type-filter ::= db:table-type-filter::(db-table-type-filter-attlist db-table-type*) ;
draw-caption ::= draw:caption::(draw-caption-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text) ;
text-index-body ::= text:index-body::(index-content-main*) ;
common-decimal-places-attlist ::= (number:decimal-places::integer)? ;
number-minutes ::= number:minutes::number-minutes-attlist ;
chart-wall ::= chart:wall::chart-wall-attlist ;
text-index-entry-bibliography ::= text:index-entry-bibliography::text-index-entry-bibliography-attrs ;
table-subtotal-rule-attlist ::= table:group-by-field-number::nonNegativeInteger ;
table-filter ::= table:filter::(table-filter-attlist table-filter-condition | table-filter-and | table-filter-or) ;
form-listbox-attlist ::= form-control-attlist common-disabled-attlist dropdown common-printable-attlist size common-tab-attlist common-title-attlist bound-column common-data-field-attlist list-source list-source-type common-linked-cell list-linkage-type common-source-cell-range (form:multiple::boolean)? (form:xforms-list-source::string)? ;
text-bookmark-end-attlist ::= text:name::string ;
style-table-cell-properties-attlist ::= (style:vertical-align::("top" | "middle" | "bottom" | "automatic"))? (style:text-align-source::("fix" | "value-type"))? common-style-direction-attlist (style:glyph-orientation-vertical::("auto" | "0" | "0deg" | "0rad" | "0grad"))? common-writing-mode-attlist common-shadow-attlist common-background-color-attlist common-border-attlist (style:diagonal-tl-br::string)? (style:diagonal-tl-br-widths::borderWidths)? (style:diagonal-bl-tr::string)? (style:diagonal-bl-tr-widths::borderWidths)? common-border-line-width-attlist common-padding-attlist (fo:wrap-option::("no-wrap" | "wrap"))? common-rotation-angle-attlist (style:rotation-align::("none" | "bottom" | "top" | "center"))? (style:cell-protect::("none" | "hidden-and-protected" | (("protected" | "formula-hidden")+)))? (style:print-content::boolean)? (style:decimal-places::nonNegativeInteger)? (style:repeat-content::boolean)? (style:shrink-to-fit::boolean)? ;
chart-data-label-attlist ::= common-draw-position-attlist (chart:style-name::styleNameRef)? ;
text-alphabetical-index-mark-attrs ::= (text:key1::string)? (text:key2::string)? (text:string-value-phonetic::string)? (text:key1-phonetic::string)? (text:key2-phonetic::string)? (text:main-entry::boolean)? ;
text-sort-key ::= text:sort-key::text-sort-key-attlist ;
chart-floor-attlist ::= (svg:width::length)? (chart:style-name::styleNameRef)? ;
presentation-notes ::= presentation:notes::(common-presentation-header-footer-attlist presentation-notes-attlist office-forms shape*) ;
db-connection-resource ::= db:connection-resource::db-connection-resource-attlist ;
number-number ::= number:number::(number-number-attlist common-decimal-places-attlist common-number-attlist number-embedded-text*) ;
text-notes-configuration ::= text:notes-configuration::text-notes-configuration-content ;
table-database-range ::= table:database-range::(table-database-range-attlist (table-database-source-sql | table-database-source-table | table-database-source-query)? table-filter? table-sort? table-subtotal-rules?) ;
text-index-scope-attr ::= (text:index-scope::("document" | "chapter"))? ;
text-section ::= text:section::(text-section-attlist text-section-source | text-section-source-dde | ε text-content*) ;
presentation-animation-group ::= presentation:animation-group::(presentation-animation-elements*) ;
text-relative-tab-stop-position-attr ::= (text:relative-tab-stop-position::boolean)? ;
number-currency-symbol-attlist ::= (number:language::languageCode)? (number:country::countryCode)? (number:script::scriptCode)? (number:rfc-language-tag::language)? ;
text-list-item ::= text:list-item::(text-list-item-attr text-list-item-content) ;
text-list-level-style-number-attr ::= (text:style-name::styleNameRef)? common-num-format-attlist common-num-format-prefix-suffix-attlist (text:display-levels::positiveInteger)? (text:start-value::positiveInteger)? ;
common-border-attlist ::= (fo:border::string)? (fo:border-top::string)? (fo:border-bottom::string)? (fo:border-left::string)? (fo:border-right::string)? ;
presentation-notes-attlist ::= (style:page-layout-name::styleNameRef)? (draw:style-name::styleNameRef)? ;
db-connection-resource-attlist ::= xlink:type::"simple" xlink:href::anyIRI (xlink:show::"none")? (xlink:actuate::"onRequest")? ;
table-database-range-attlist ::= (table:name::string)? (table:is-selection::boolean)? (table:on-update-keep-styles::boolean)? (table:on-update-keep-size::boolean)? (table:has-persistent-data::boolean)? (table:orientation::("column" | "row"))? (table:contains-header::boolean)? (table:display-filter-buttons::boolean)? table:target-range-address::cellRangeAddress (table:refresh-delay::boolean)? ;
common-spin-button ::= (form:spin-button::boolean)? ;
form-property-name ::= form:property-name::string ;
config-config-item-set-attlist ::= config:name::string ;
text-object-index-source-attrs ::= text-index-scope-attr text-relative-tab-stop-position-attr (text:use-spreadsheet-objects::boolean)? (text:use-math-objects::boolean)? (text:use-draw-objects::boolean)? (text:use-chart-objects::boolean)? (text:use-other-objects::boolean)? ;
db-show-deleted ::= (db:show-deleted::boolean)? ;
table-change-track-table-cell-attlist ::= (table:cell-address::cellAddress)? (table:matrix-covered::boolean)? (table:formula::string)? (table:number-matrix-columns-spanned::positiveInteger)? (table:number-matrix-rows-spanned::positiveInteger)? common-value-and-type-attlist? ;
text-illustration-index-source ::= text:illustration-index-source::(text-illustration-index-source-attrs text-index-title-template? text-illustration-index-entry-template?) ;
style-region-center ::= style:region-center::region-content ;
db-query-collection ::= db:query-collection::(db-query-collection-attlist common-db-object-name common-db-object-title common-db-object-description (db-query | db-query-collection)*) ;
number-number-style ::= number:number-style::(common-data-style-attlist style-text-properties? number-text? (any-number number-text?)? style-map*) ;
target-frame ::= (office:target-frame::targetFrameName)? ;
form-property-value-and-type-attlist ::= common-value-and-type-attlist | (office:value-type::"void") ;
db-host-and-port ::= db:hostname::string (db:port::positiveInteger)? ;
table-named-range ::= table:named-range::table-named-range-attlist ;
style-header ::= style:header::(common-style-header-footer-attlist header-footer-content) ;
form-time-attlist ::= (form:value::time)? (form:current-value::time)? (form:min-value::time)? (form:max-value::time)? ;
table-cell-address ::= table:cell-address::common-table-cell-address-attlist ;
table-operation ::= table:operation::table-operation-attlist ;
office-document-meta ::= office:document-meta::(office-document-common-attrs office-meta) ;
db-key-column-attlist ::= (db:name::string)? (db:related-column-name::string)? ;
text-index-entry-text ::= text:index-entry-text::((text:style-name::styleNameRef)?) ;
common-draw-data-attlist ::= xlink:type::"simple" xlink:href::anyIRI (xlink:show::"embed")? (xlink:actuate::"onLoad")? ;
chart-axis-attlist ::= chart:dimension::chart-dimension (chart:name::string)? (chart:style-name::styleNameRef)? ;
db-table-definition ::= db:table-definition::(common-db-table-name-attlist db-table-definition-attlist db-column-definitions db-keys? db-indices?) ;
text-page-attlist ::= text:master-page-name::styleNameRef ;
text-table-of-content-entry-template ::= text:table-of-content-entry-template::(text-table-of-content-entry-template-attlist text-table-of-content-children*) ;
db-forms ::= db:forms::(db-forms-attlist (db-component | db-component-collection)*) ;
draw-g ::= draw:g::(draw-g-attlist common-draw-z-index-attlist common-draw-name-attlist common-draw-id-attlist common-draw-style-name-attlist common-text-spreadsheet-shape-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* shape*) ;
common-draw-path-data-attlist ::= svg:d::pathData ;
table-named-range-attlist ::= table:name::string table:cell-range-address::cellRangeAddress (table:base-cell-address::cellAddress)? (table:range-usable-as::("none" | (("print-range" | "filter" | "repeat-row" | "repeat-column")+)))? ;
number-quarter-attlist ::= (number:style::("short" | "long"))? ;
draw-a ::= draw:a::(draw-a-attlist shape-instance) ;
table-filter-condition-attlist ::= table:field-number::nonNegativeInteger table:value::(string | double) table:operator::string (table:case-sensitive::string)? (table:data-type::("text" | "number"))? ;
table-previous ::= table:previous::((table:id::string)? table-change-track-table-cell) ;
number-text-style ::= number:text-style::(common-data-style-attlist style-text-properties? number-text? (number-text-content number-text?)* style-map*) ;
office-body ::= office:body::office-body-content ;
svg-font-face-uri ::= svg:font-face-uri::(common-svg-font-face-xlink-attlist svg-font-face-format*) ;
list-linkage-type ::= (form:list-linkage-type::("selection" | "selection-indices"))? ;
draw-g-attlist ::= (svg:y::coordinate)? ;
text-list-style-content ::= (text:list-level-style-number::(text-list-level-style-attr text-list-level-style-number-attr style-list-level-properties? style-text-properties?)) | (text:list-level-style-bullet::(text-list-level-style-attr text-list-level-style-bullet-attr style-list-level-properties? style-text-properties?)) | (text:list-level-style-image::(text-list-level-style-attr text-list-level-style-image-attr style-list-level-properties?)) ;
table-table-row-attlist ::= (table:number-rows-repeated::positiveInteger)? (table:style-name::styleNameRef)? (table:default-cell-style-name::styleNameRef)? (table:visibility::table-visibility-value)? xml-id? ;
style-page-layout ::= style:page-layout::(style-page-layout-attlist style-page-layout-content) ;
db-table-include-filter ::= db:table-include-filter::(db-table-include-filter-attlist db-table-filter-pattern+) ;
office-process-content ::= (office:process-content::boolean)? ;
form-date-attlist ::= (form:value::date)? (form:current-value::date)? (form:min-value::date)? (form:max-value::date)? ;
common-form-relative-image-position-attlist ::= ((form:image-position::"center")?) | (form:image-position::("start" | "end" | "top" | "bottom") (form:image-align::("start" | "center" | "end"))?) ;
presentation-play ::= presentation:play::presentation-play-attlist ;
table-insertion-cut-off ::= table:insertion-cut-off::table-insertion-cut-off-attlist ;
presentation-animations ::= presentation:animations::((presentation-animation-elements | presentation-animation-group)*) ;
style-header-footer-properties ::= style:header-footer-properties::style-header-footer-properties-content-strict ;
common-value-attlist ::= (form:value::string)? ;
db-auto-increment ::= db:auto-increment::db-auto-increment-attlist ;
style-footnote-sep-attlist ::= (style:width::length)? (style:rel-width::percent)? (style:color::color)? (style:line-style::lineStyle)? (style:adjustment::("left" | "center" | "right"))? (style:distance-before-sep::length)? (style:distance-after-sep::length)? ;
table-first-row ::= table:first-row::common-table-template-attlist ;
text-list-header ::= text:list-header::(text-list-header-attr text-list-item-content) ;
style-column-sep-attlist ::= (style:style::("none" | "solid" | "dotted" | "dashed" | "dot-dashed"))? style:width::length (style:height::zeroToHundredPercent)? (style:vertical-align::("top" | "middle" | "bottom"))? (style:color::color)? ;
text-user-index-entry-template ::= text:user-index-entry-template::(text-user-index-entry-template-attrs (text-index-entry-chapter | text-index-entry-page-number | text-index-entry-text | text-index-entry-span | text-index-entry-tab-stop)*) ;
table-database-source-table ::= table:database-source-query::table-database-source-query-attlist ;
db-connection-data ::= db:connection-data::(db-connection-data-attlist db-database-description | db-connection-resource db-login?) ;
table-table-cell-range-source-attlist ::= table:name::string table:last-column-spanned::positiveInteger table:last-row-spanned::positiveInteger ;
db-file-based-database-attlist ::= xlink:type::"simple" xlink:href::anyIRI db:media-type::string (db:extension::string)? ;
common-form-control-attlist ::= (form:name::string)? (form:control-implementation::namespacedToken)? ;
common-svg-font-face-xlink-attlist ::= xlink:type::"simple" xlink:href::anyIRI (xlink:actuate::"onRequest")? ;
db-keys ::= db:keys::(db-keys-attlist db-key+) ;
draw-area-polygon ::= draw:area-polygon::(common-draw-area-attlist svg:x::coordinate svg:y::coordinate svg:width::length svg:height::length common-draw-viewbox-attlist common-draw-points-attlist svg-title? svg-desc? office-event-listeners?) ;
chart-stock-gain-marker ::= chart:stock-gain-marker::common-stock-marker-attlist ;
office-forms ::= (office:forms::(office-forms-attlist (form-form | xforms-model)*))? ;
common-restart-timing-attlist ::= (smil:restart::("never" | "always" | "whenNotActive" | "default"))? ;
form-properties ::= form:properties::(form-property+) ;
common-maxlength-attlist ::= (form:max-length::nonNegativeInteger)? ;
draw-object-attlist ::= (draw:notify-on-update-of-ranges::(cellRangeAddressList | string))? xml-id? ;
common-rotation-angle-attlist ::= (style:rotation-angle::angle)? ;
common-readonly-attlist ::= (form:readonly::boolean)? ;
text-bookmark ::= text:bookmark::text-bookmark-attlist ;
draw-measure ::= draw:measure::(draw-measure-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text) ;
draw-control ::= draw:control::(draw-control-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? draw-glue-point*) ;
table-table-column ::= table:table-column::table-table-column-attlist ;
text-sequence-ref-content ::= (text:reference-format::(common-ref-format-values | "category-and-value" | "caption" | "value"))? ;
table-data-pilot-display-info ::= table:data-pilot-display-info::table-data-pilot-display-info-attlist ;
table-source-range-address ::= table:source-range-address::common-table-range-attlist ;
office-forms-attlist ::= (form:automatic-focus::boolean)? (form:apply-design-mode::boolean)? ;
presentation-show ::= presentation:show::presentation-show-attlist ;
draw-plugin-attlist ::= (draw:mime-type::string)? xml-id? ;
svg-stop ::= svg:stop::(svg:offset::(double | percent) (svg:stop-color::color)? (svg:stop-opacity::double)?) ;
db-driver-settings-attlist ::= db-show-deleted (db:system-driver-settings::string)? (db:base-dn::string)? db-is-first-row-header-line (db:parameter-name-substitution::boolean)? ;
table-named-expression ::= table:named-expression::table-named-expression-attlist ;
table-validation-attlist ::= table:name::string (table:condition::string)? (table:base-cell-address::cellAddress)? (table:allow-empty-cell::boolean)? (table:display-list::("none" | "unsorted" | "sort-ascending"))? ;
table-even-columns ::= table:even-columns::common-table-template-attlist ;
draw-page-thumbnail-attlist ::= (draw:page-number::positiveInteger)? ;
text-tab-attr ::= (text:tab-ref::nonNegativeInteger)? ;
text-bookmark-attlist ::= text:name::string xml-id? ;
text-style-name ::= (form:text-style-name::styleNameRef)? ;
text-table-of-content-source ::= text:table-of-content-source::(text-table-of-content-source-attlist text-index-title-template? text-table-of-content-entry-template* text-index-source-styles*) ;
text-index-entry-tab-stop-attrs ::= (style:leader-char::character)? (style:type::"right") | (style:type::"left" style:position::length) ;
table-source-cell-range ::= table:source-cell-range::(table-source-cell-range-attlist table-filter?) ;
table-data-pilot-display-info-attlist ::= table:enabled::boolean table:data-field::string table:member-count::nonNegativeInteger table:display-member-mode::("from-top" | "from-bottom") ;
common-field-database-table-attlist ::= text:table-name::string (text:table-type::("table" | "query" | "command"))? ;
common-margin-attlist ::= (fo:margin::(nonNegativeLength | percent))? ;
common-spline-anim-value-attlist ::= (smil:keyTimes::string)? (smil:keySplines::string)? ;
table-odd-columns ::= table:odd-columns::common-table-template-attlist ;
common-draw-layer-name-attlist ::= (draw:layer::string)? ;
draw-rect-attlist ::= ((draw:corner-radius::nonNegativeLength)?) | ((svg:rx::nonNegativeLength)? (svg:ry::nonNegativeLength)?) ;
chart-stock-loss-marker ::= chart:stock-loss-marker::common-stock-marker-attlist ;
common-field-display-value-formula-attlist ::= (text:display::("value" | "formula"))? ;
office-event-listeners ::= office:event-listeners::((script-event-listener | presentation-event-listener)*) ;
common-db-object-description ::= (db:description::string)? ;
dr3d-sphere ::= dr3d:sphere::(dr3d-sphere-attlist common-draw-z-index-attlist common-draw-id-attlist common-draw-layer-name-attlist common-draw-style-name-attlist common-dr3d-transform-attlist) ;
text-id ::= text:id::string ;
text-table-of-content-source-attlist ::= (text:outline-level::positiveInteger)? (text:use-outline-level::boolean)? (text:use-index-marks::boolean)? (text:use-index-source-styles::boolean)? (text:index-scope::("document" | "chapter"))? (text:relative-tab-stop-position::boolean)? ;
style-text-properties ::= style:text-properties::style-text-properties-content-strict ;
db-index-attlist ::= db:name::string (db:catalog-name::string)? (db:is-unique::boolean)? (db:is-clustered::boolean)? ;
draw-equation ::= draw:equation::draw-equation-attlist ;
draw-object-ole-attlist ::= (draw:class-id::string)? xml-id? ;
text-table-index-source ::= text:table-index-source::(text-illustration-index-source-attrs text-index-title-template? text-table-index-entry-template?) ;
office-automatic-styles ::= (office:automatic-styles::(styles style-page-layout*))? ;
db-local-socket-name ::= (db:local-socket::string)? ;
animation-element ::= (anim:animate::(common-anim-target-attlist common-anim-named-target-attlist common-anim-values-attlist common-anim-spline-mode-attlist common-spline-anim-value-attlist common-timing-attlist common-anim-add-accum-attlist)) | (anim:set::(common-anim-target-attlist common-anim-named-target-attlist common-anim-set-values-attlist common-timing-attlist common-anim-add-accum-attlist)) | (anim:animateMotion::(anim-animate-motion-attlist common-anim-target-attlist common-anim-named-target-attlist common-anim-add-accum-attlist common-anim-values-attlist common-timing-attlist common-spline-anim-value-attlist)) | (anim:animateColor::(common-anim-target-attlist common-anim-named-target-attlist common-anim-add-accum-attlist common-anim-values-attlist common-anim-spline-mode-attlist common-spline-anim-value-attlist anim-animate-color-attlist common-timing-attlist)) | (anim:animateTransform::(common-anim-target-attlist common-anim-named-target-attlist common-anim-add-accum-attlist common-anim-values-attlist anim-animate-transform-attlist common-timing-attlist)) | (anim:transitionFilter::(common-anim-target-attlist common-anim-add-accum-attlist common-anim-values-attlist common-anim-spline-mode-attlist anim-transition-filter-attlist common-timing-attlist)) | (anim:par::(common-anim-attlist common-timing-attlist common-endsync-timing-attlist animation-element*)) | (anim:seq::(common-anim-attlist common-endsync-timing-attlist common-timing-attlist animation-element*)) | (anim:iterate::(common-anim-attlist anim-iterate-attlist common-timing-attlist common-endsync-timing-attlist animation-element*)) | (anim:audio::(common-anim-attlist anim-audio-attlist common-basic-timing-attlist)) | (anim:command::(common-anim-attlist anim-command-attlist common-begin-end-timing-attlist common-anim-target-attlist (anim:param::(anim:name::string anim:value::string))*)) ;
draw-polygon ::= draw:polygon::(common-draw-points-attlist common-draw-position-attlist common-draw-size-attlist common-draw-viewbox-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text) ;
svg-title ::= svg:title::string() ;
anim-animate-color-attlist ::= (anim:color-interpolation::("rgb" | "hsl"))? (anim:color-interpolation-direction::("clockwise" | "counter-clockwise"))? ;
common-db-object-name ::= db:name::string ;
text-bookmark-start ::= text:bookmark-start::text-bookmark-start-attlist ;
style-section-properties-attlist ::= common-background-color-attlist common-horizontal-margin-attlist (style:protect::boolean)? common-editable-attlist (text:dont-balance-text-columns::boolean)? common-writing-mode-attlist ;
table-data-pilot-group ::= table:data-pilot-group::(table-data-pilot-group-attlist table-data-pilot-group-member+) ;
table-label-range ::= table:label-range::table-label-range-attlist ;
number-boolean ::= number:boolean::ε ;
dr3d-cube ::= dr3d:cube::(dr3d-cube-attlist common-draw-z-index-attlist common-draw-id-attlist common-draw-layer-name-attlist common-draw-style-name-attlist common-dr3d-transform-attlist) ;
table-scenario-attlist ::= table:scenario-ranges::cellRangeAddressList table:is-active::boolean (table:display-border::boolean)? (table:border-color::color)? (table:copy-back::boolean)? (table:copy-styles::boolean)? (table:copy-formulas::boolean)? (table:comment::string)? (table:protected::boolean)? ;
db-index-column ::= db:index-column::db-index-column-attlist ;
common-control-id-attlist ::= xml-id (form:id::NCName)? ;
number-week-of-year ::= number:week-of-year::common-calendar-attlist ;
form-option ::= form:option::(form-option-attlist string()) ;
table-data-pilot-level-attlist ::= (table:show-empty::boolean)? ;
style-footer-style ::= style:footer-style::(style-header-footer-properties?) ;
presentation-event-listener ::= presentation:event-listener::(presentation-event-listener-attlist presentation-sound?) ;
draw-gradient ::= draw:gradient::(common-draw-gradient-attlist draw-gradient-attlist) ;
text-outline-level ::= (text:outline-level::positiveInteger)? ;
common-background-color-attlist ::= (fo:background-color::("transparent" | color))? ;
table-data-pilot-group-attlist ::= table:name::string ;
draw-frame-attlist ::= (draw:copy-of::string)? ;
common-restart-default-attlist ::= (smil:restartDefault::("never" | "always" | "whenNotActive" | "inherit"))? ;
chart-domain ::= chart:domain::((table:cell-range-address::cellRangeAddressList)?) ;
table-data-pilot-group-member-attlist ::= table:name::string ;
common-in-content-meta-attlist ::= xhtml:about::URIorSafeCURIE xhtml:property::CURIEs common-meta-literal-attlist ;
office-text-attlist ::= (text:global::boolean)? (text:use-soft-page-breaks::boolean)? ;
style-paragraph-properties ::= style:paragraph-properties::style-paragraph-properties-content-strict ;
db-columns ::= db:columns::(db-columns-attlist db-column+) ;
table-table-row-group ::= table:table-row-group::(table-table-row-group-attlist table-rows-and-groups) ;
text-file-name-attlist ::= (text:display::("full" | "path" | "name" | "name-and-extension"))? common-field-fixed-attlist ;
text-illustration-index-entry-template ::= text:illustration-index-entry-template::text-illustration-index-entry-content ;
presentation-event-listener-attlist ::= script:event-name::string presentation:action::("none" | "previous-page" | "next-page" | "first-page" | "last-page" | "hide" | "stop" | "execute" | "show" | "verb" | "fade-out" | "sound" | "last-visited-page") (presentation:effect::presentationEffects)? (presentation:direction::presentationEffectDirections)? (presentation:speed::presentationSpeeds)? (presentation:start-scale::percent)? (xlink:type::"simple" xlink:href::anyIRI (xlink:show::"embed")? (xlink:actuate::"onRequest")?)? (presentation:verb::nonNegativeInteger)? ;
common-fill-default-attlist ::= (smil:fillDefault::("remove" | "freeze" | "hold" | "transition" | "auto" | "inherit"))? ;
common-form-visual-effect-attlist ::= (form:visual-effect::("flat" | "3d"))? ;
style-page-layout-properties-attlist ::= (fo:page-width::length)? (fo:page-height::length)? common-num-format-attlist? common-num-format-prefix-suffix-attlist (style:paper-tray-name::("default" | string))? (style:print-orientation::("portrait" | "landscape"))? common-horizontal-margin-attlist common-vertical-margin-attlist common-margin-attlist common-border-attlist common-border-line-width-attlist common-padding-attlist common-shadow-attlist common-background-color-attlist (style:register-truth-ref-style-name::styleNameRef)? (style:print::(("headers" | "grid" | "annotations" | "objects" | "charts" | "drawings" | "formulas" | "zero-values")*))? (style:print-page-order::("ttb" | "ltr"))? (style:first-page-number::(positiveInteger | "continue"))? (style:scale-to::percent)? (style:scale-to-pages::positiveInteger)? (style:table-centering::("horizontal" | "vertical" | "both" | "none"))? (style:footnote-max-height::length)? common-writing-mode-attlist (style:layout-grid-mode::("none" | "line" | "both"))? (style:layout-grid-standard-mode::boolean)? (style:layout-grid-base-height::length)? (style:layout-grid-ruby-height::length)? (style:layout-grid-lines::positiveInteger)? (style:layout-grid-base-width::length)? (style:layout-grid-color::color)? (style:layout-grid-ruby-below::boolean)? (style:layout-grid-print::boolean)? (style:layout-grid-display::boolean)? (style:layout-grid-snap-to::boolean)? ;
draw-text-box-attlist ::= (draw:chain-next-name::string)? (draw:corner-radius::nonNegativeLength)? (fo:min-height::(length | percent))? (fo:min-width::(length | percent))? (fo:max-height::(length | percent))? (fo:max-width::(length | percent))? (xml-id (text:id::NCName)?)? ;
table-error-message ::= table:error-message::((table:title::string)? (table:display::boolean)? (table:message-type::("stop" | "warning" | "information"))? text-p*) ;
style-table-row-properties ::= style:table-row-properties::style-table-row-properties-content-strict ;
style-paragraph-properties-attlist ::= (fo:line-height::("normal" | nonNegativeLength | percent))? (style:line-height-at-least::nonNegativeLength)? (style:line-spacing::length)? (style:font-independent-line-spacing::boolean)? common-text-align (fo:text-align-last::("start" | "center" | "justify"))? (style:justify-single-word::boolean)? (fo:keep-together::("auto" | "always"))? (fo:widows::nonNegativeInteger)? (fo:orphans::nonNegativeInteger)? (style:tab-stop-distance::nonNegativeLength)? (fo:hyphenation-keep::("auto" | "page"))? (fo:hyphenation-ladder-count::("no-limit" | positiveInteger))? (style:register-true::boolean)? common-horizontal-margin-attlist (fo:text-indent::(length | percent))? (style:auto-text-indent::boolean)? common-vertical-margin-attlist common-margin-attlist common-break-attlist common-background-color-attlist common-border-attlist common-border-line-width-attlist (style:join-border::boolean)? common-padding-attlist common-shadow-attlist common-keep-with-next-attlist (text:number-lines::boolean)? (text:line-number::nonNegativeInteger)? (style:text-autospace::("none" | "ideograph-alpha"))? (style:punctuation-wrap::("simple" | "hanging"))? (style:line-break::("normal" | "strict"))? (style:vertical-align::("top" | "middle" | "bottom" | "auto" | "baseline"))? common-writing-mode-attlist (style:writing-mode-automatic::boolean)? (style:snap-to-layout-grid::boolean)? common-page-number-attlist common-background-transparency-attlist ;
draw-regular-polygon ::= draw:regular-polygon::(draw-regular-polygon-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text) ;
table-table-row-group-attlist ::= (table:display::boolean)? ;
table-background-attlist ::= table:style-name::styleNameRef ;
common-border-line-width-attlist ::= (style:border-line-width::borderWidths)? (style:border-line-width-top::borderWidths)? (style:border-line-width-bottom::borderWidths)? (style:border-line-width-left::borderWidths)? (style:border-line-width-right::borderWidths)? ;
draw-layer-attlist ::= draw:name::string (draw:protected::boolean)? (draw:display::("always" | "screen" | "printer" | "none"))? ;
draw-circle ::= draw:circle::((draw-circle-attlist common-draw-circle-ellipse-pos-attlist) | (common-draw-position-attlist common-draw-size-attlist) common-draw-circle-ellipse-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text) ;
draw-page ::= draw:page::(common-presentation-header-footer-attlist draw-page-attlist svg-title? svg-desc? draw-layer-set? office-forms? shape* (presentation-animations | animation-element)? presentation-notes?) ;
db-server-database ::= db:server-database::db-server-database-attlist ;
presentation-settings ::= (presentation:settings::(presentation-settings-attlist presentation-show*))? ;
text-table-index ::= text:table-index::(common-section-attlist text-table-index-source text-index-body) ;
db-schema-definition ::= db:schema-definition::(db-schema-definition-attlist db-table-definitions) ;
text-outline-level-style-attlist ::= text:level::positiveInteger (text:style-name::styleNameRef)? common-num-format-attlist common-num-format-prefix-suffix-attlist (text:display-levels::positiveInteger)? (text:start-value::positiveInteger)? ;
table-data-pilot-subtotal-attlist ::= table:function::("auto" | "average" | "count" | "countnums" | "max" | "min" | "product" | "stdev" | "stdevp" | "sum" | "var" | "varp" | string) ;
common-anim-values-attlist ::= (smil:values::string)? (anim:formula::string)? common-anim-set-values-attlist (smil:from::string)? (smil:by::string)? ;
office-database ::= office:database::(db-data-source db-forms? db-reports? db-queries? db-table-presentations? db-schema-definition?) ;
table-table-template-attlist ::= table:name::string table:first-row-start-column::rowOrCol table:first-row-end-column::rowOrCol table:last-row-start-column::rowOrCol table:last-row-end-column::rowOrCol ;
db-delimiter-attlist ::= (db:field::string)? (db:string::string)? (db:decimal::string)? (db:thousand::string)? ;
draw-hatch-attlist ::= draw:name::styleName (draw:display-name::string)? draw:style::("single" | "double" | "triple") (draw:color::color)? (draw:distance::length)? (draw:rotation::angle)? ;
db-server-database-attlist ::= db:type::namespacedToken db-host-and-port | db-local-socket-name (db:database-name::string)? ;
presentation-settings-attlist ::= (presentation:start-page::string)? (presentation:show::string)? (presentation:full-screen::boolean)? (presentation:endless::boolean)? (presentation:pause::duration)? (presentation:show-logo::boolean)? (presentation:force-manual::boolean)? (presentation:mouse-visible::boolean)? (presentation:mouse-as-pen::boolean)? (presentation:start-with-navigator::boolean)? (presentation:animations::("enabled" | "disabled"))? (presentation:transition-on-click::("enabled" | "disabled"))? (presentation:stay-on-top::boolean)? (presentation:show-end-of-presentation-slide::boolean)? ;
dr3d-light ::= dr3d:light::dr3d-light-attlist ;
number-day-of-week-attlist ::= (number:style::("short" | "long"))? ;
common-keep-with-next-attlist ::= (fo:keep-with-next::("auto" | "always"))? ;
common-text-anchor-attlist ::= (text:anchor-type::("page" | "frame" | "paragraph" | "char" | "as-char"))? (text:anchor-page-number::positiveInteger)? ;
presentation-show-shape ::= presentation:show-shape::(common-presentation-effect-attlist presentation-sound?) ;
text-object-index ::= text:object-index::(common-section-attlist text-object-index-source text-index-body) ;
table-sort-groups ::= table:sort-groups::table-sort-groups-attlist ;
table-insertion-attlist ::= table:type::("row" | "column" | "table") table:position::integer (table:count::positiveInteger)? (table:table::integer)? ;
table-filter-and ::= table:filter-and::((table-filter-or | table-filter-condition)+) ;
office-document-common-attrs ::= office:version::"1.2" (grddl:transformation::(anyIRI*))? ;
common-draw-style-name-attlist ::= ((draw:style-name::styleNameRef)? (draw:class-names::styleNameRefs)?) | ((presentation:style-name::styleNameRef)? (presentation:class-names::styleNameRefs)?) ;
text-bibliography-configuration-attlist ::= (text:prefix::string)? (text:suffix::string)? (text:numbered-entries::boolean)? (text:sort-by-position::boolean)? (fo:language::languageCode)? (fo:country::countryCode)? (fo:script::scriptCode)? (style:rfc-language-tag::language)? (text:sort-algorithm::string)? ;
chart-floor ::= chart:floor::chart-floor-attlist ;
office-master-styles ::= (office:master-styles::(style-master-page* style-handout-master? draw-layer-set?))? ;
table-table-header-rows ::= table:table-header-rows::((text-soft-page-break? table-table-row)+) ;
db-login ::= db:login::db-login-attlist ;
db-indices ::= db:indices::(db-indices-attlist db-index+) ;
table-movement-cut-off-attlist ::= (table:position::integer) | (table:start-position::integer table:end-position::integer) ;
table-table-cell-attlist ::= (table:number-columns-repeated::positiveInteger)? (table:style-name::styleNameRef)? (table:content-validation-name::string)? (table:formula::string)? common-value-and-type-attlist? (table:protect::boolean)? (table:protected::boolean)? xml-id? common-in-content-meta-attlist? ;
style-list-level-properties ::= style:list-level-properties::style-list-level-properties-content-strict ;
number-minutes-attlist ::= (number:style::("short" | "long"))? ;
db-login-attlist ::= ((db:user-name::string) | (db:use-system-user::boolean))? (db:is-password-required::boolean)? (db:login-timeout::positiveInteger)? ;
table-change-deletion ::= table:change-deletion::((table:id::string)?) ;
common-delay-for-repeat ::= (form:delay-for-repeat::duration)? ;
table-data-pilot-layout-info-attlist ::= table:layout-mode::("tabular-layout" | "outline-subtotals-top" | "outline-subtotals-bottom") table:add-empty-lines::boolean ;
table-filter-attlist ::= (table:target-range-address::cellRangeAddress)? (table:condition-source::("self" | "cell-range"))? (table:condition-source-range-address::cellRangeAddress)? (table:display-duplicates::boolean)? ;
draw-ellipse-attlist ::= svg:rx::length svg:ry::length ;
table-table-column-group ::= table:table-column-group::(table-table-column-group-attlist table-columns-and-groups) ;
text-index-entry-link-start ::= text:index-entry-link-start::((text:style-name::styleNameRef)?) ;
common-convert-empty-attlist ::= (form:convert-empty-to-null::boolean)? ;
table-last-row ::= table:last-row::common-table-template-attlist ;
style-style-content ::= (style:family::"text" style-text-properties?) | (style:family::"paragraph" style-paragraph-properties? style-text-properties?) | (style:family::"section" style-section-properties?) | (style:family::"ruby" style-ruby-properties?) | (style:family::"table" style-table-properties?) | (style:family::"table-column" style-table-column-properties?) | (style:family::"table-row" style-table-row-properties?) | (style:family::"table-cell" style-table-cell-properties? style-paragraph-properties? style-text-properties?) | (style:family::("graphic" | "presentation") style-graphic-properties? style-paragraph-properties? style-text-properties?) | (style:family::"drawing-page" style-drawing-page-properties?) | (style:family::"chart" style-chart-properties? style-graphic-properties? style-paragraph-properties? style-text-properties?) ;
common-format-source-attlist ::= (number:format-source::("fixed" | "language"))? ;
table-change-track-table-cell ::= table:change-track-table-cell::(table-change-track-table-cell-attlist text-p*) ;
text-list ::= text:list::(text-list-attr text-list-header? text-list-item*) ;
common-table-cell-address-attlist ::= table:column::integer table:row::integer table:table::integer ;
common-anim-set-values-attlist ::= (smil:to::string)? ;
table-table-column-group-attlist ::= (table:display::boolean)? ;
style-footer ::= style:footer::(common-style-header-footer-attlist header-footer-content) ;
text-bibliography-entry-template-attrs ::= text:bibliography-type::text-bibliography-types text:style-name::styleNameRef ;
number-year-attlist ::= (number:style::("short" | "long"))? ;
svg-font-face-format ::= svg:font-face-format::((svg:string::string)?) ;
style-map-attlist ::= style:condition::string style:apply-style-name::styleNameRef (style:base-cell-address::cellAddress)? ;
number-text ::= number:text::string() ;
table-desc ::= table:desc::string() ;
text-index-entry-tab-stop ::= text:index-entry-tab-stop::((text:style-name::styleNameRef)? text-index-entry-tab-stop-attrs) ;
table-sort-attlist ::= (table:bind-styles-to-content::boolean)? (table:target-range-address::cellRangeAddress)? (table:case-sensitive::boolean)? (table:language::languageCode)? (table:country::countryCode)? (table:script::scriptCode)? (table:rfc-language-tag::language)? (table:algorithm::string)? (table:embedded-number-behavior::("alpha-numeric" | "integer" | "double"))? ;
chart-chart ::= chart:chart::(chart-chart-attlist chart-title? chart-subtitle? chart-footer? chart-legend? chart-plot-area table-table?) ;
style-table-properties ::= style:table-properties::style-table-properties-content-strict ;
office-spreadsheet-attlist ::= (table:structure-protected::boolean)? (table:protection-key::string)? (table:protection-key-digest-algorithm::anyIRI)? ;
style-header-left ::= style:header-left::(common-style-header-footer-attlist header-footer-content) ;
common-value-type-attlist ::= office:value-type::valueType ;
common-field-database-name ::= ((text:database-name::string)?) | form-connection-resource ;
chart-subtitle ::= chart:subtitle::(chart-title-attlist text-p?) ;
table-filter-condition ::= table:filter-condition::(table-filter-condition-attlist table-filter-set-item*) ;
style-region-left ::= style:region-left::region-content ;
text-soft-page-break ::= text:soft-page-break::ε ;
common-draw-position-attlist ::= (svg:x::coordinate)? (svg:y::coordinate)? ;
common-padding-attlist ::= (fo:padding::nonNegativeLength)? (fo:padding-top::nonNegativeLength)? (fo:padding-bottom::nonNegativeLength)? (fo:padding-left::nonNegativeLength)? (fo:padding-right::nonNegativeLength)? ;
draw-contour-path ::= draw:contour-path::(common-contour-attlist common-draw-size-attlist common-draw-viewbox-attlist common-draw-path-data-attlist) ;
style-table-properties-attlist ::= (style:width::positiveLength)? (style:rel-width::percent)? (table:align::("left" | "center" | "right" | "margins"))? common-horizontal-margin-attlist common-vertical-margin-attlist common-margin-attlist common-page-number-attlist common-break-attlist common-background-color-attlist common-shadow-attlist common-keep-with-next-attlist (style:may-break-between-rows::boolean)? (table:border-model::("collapsing" | "separating"))? common-writing-mode-attlist (table:display::boolean)? ;
text-alphabetical-index-source-attrs ::= text-index-scope-attr text-relative-tab-stop-position-attr (text:ignore-case::boolean)? (text:main-entry-style-name::styleNameRef)? (text:alphabetical-separators::boolean)? (text:combine-entries::boolean)? (text:combine-entries-with-dash::boolean)? (text:combine-entries-with-pp::boolean)? (text:use-keys-as-entries::boolean)? (text:capitalize-entries::boolean)? (text:comma-separated::boolean)? (fo:language::languageCode)? (fo:country::countryCode)? (fo:script::scriptCode)? (style:rfc-language-tag::language)? (text:sort-algorithm::string)? ;
text-list-attr ::= (text:style-name::styleNameRef)? (text:continue-numbering::boolean)? (text:continue-list::IDREF)? xml-id? ;
form-form-attlist ::= (xlink:type::"simple" xlink:href::anyIRI (xlink:actuate::"onRequest")?)? (office:target-frame::targetFrameName)? (form:method::("get" | "post" | string))? (form:enctype::string)? (form:allow-deletes::boolean)? (form:allow-inserts::boolean)? (form:allow-updates::boolean)? (form:apply-filter::boolean)? (form:command-type::("table" | "query" | "command"))? (form:command::string)? (form:datasource::(anyIRI | string))? (form:master-fields::string)? (form:detail-fields::string)? (form:escape-processing::boolean)? (form:filter::string)? (form:ignore-result::boolean)? (form:navigation-mode::navigation)? (form:order::string)? (form:tab-cycle::tab-cycles)? ;
table-table-columns ::= table:table-columns::(table-table-column+) ;
text-tracked-changes-attr ::= (text:track-changes::boolean)? ;
table-table-header-columns ::= table:table-header-columns::(table-table-column+) ;
table-help-message ::= table:help-message::((table:title::string)? (table:display::boolean)? text-p*) ;
table-filter-or ::= table:filter-or::((table-filter-and | table-filter-condition)+) ;
common-printable-attlist ::= (form:printable::boolean)? ;
db-queries ::= db:queries::(db-queries-attlist (db-query | db-query-collection)*) ;
heading-attrs ::= text:outline-level::positiveInteger (text:restart-numbering::boolean)? (text:start-value::nonNegativeInteger)? (text:is-list-header::boolean)? ;
table-data-pilot-sort-info-attlist ::= (table:sort-mode::"data" table:data-field::string) | (table:sort-mode::("none" | "manual" | "name")) table:order::("ascending" | "descending") ;
common-time-manip-attlist ::= (smil:accelerate::zeroToOneDecimal)? (smil:decelerate::zeroToOneDecimal)? (smil:autoReverse::boolean)? ;
text-numbered-paragraph-attr ::= text:list-id::NCName (text:level::positiveInteger)? (text:style-name::styleNameRef text:continue-numbering::boolean text:start-value::nonNegativeInteger)? xml-id? ;
draw-glue-point-attlist ::= draw:id::nonNegativeInteger svg:x::(distance | percent) svg:y::(distance | percent) (draw:align::("top-left" | "top" | "top-right" | "left" | "center" | "right" | "bottom-left" | "bottom-right"))? draw:escape-direction::("auto" | "left" | "right" | "up" | "down" | "horizontal" | "vertical") ;
table-data-pilot-field-attlist ::= table:source-field-name::string (table:orientation::("row" | "column" | "data" | "hidden")) | (table:orientation::"page" table:selected-page::string) (table:is-data-layout-field::string)? (table:function::("auto" | "average" | "count" | "countnums" | "max" | "min" | "product" | "stdev" | "stdevp" | "sum" | "var" | "varp" | string))? (table:used-hierarchy::integer)? ;
office-styles ::= (office:styles::(styles style-default-style* style-default-page-layout? text-outline-style? text-notes-configuration* text-bibliography-configuration? text-linenumbering-configuration? draw-gradient* svg-linearGradient* svg-radialGradient* draw-hatch* draw-fill-image* draw-marker* draw-stroke-dash* draw-opacity* style-presentation-page-layout* table-table-template*))? ;
common-draw-viewbox-attlist ::= svg:viewBox::(integer integer integer integer) ;
table-table ::= table:table::(table-table-attlist table-title? table-desc? table-table-source? office-dde-source? table-scenario? office-forms? table-shapes? table-columns-and-groups table-rows-and-groups table-named-expressions?) ;
style-footnote-sep ::= (style:footnote-sep::style-footnote-sep-attlist)? ;
style-header-style ::= style:header-style::(style-header-footer-properties?) ;
anim-audio-attlist ::= (xlink:href::anyIRI)? (anim:audio-level::double)? ;
office-document ::= office:document::(office-document-attrs office-document-common-attrs office-meta office-settings office-scripts office-font-face-decls office-styles office-automatic-styles office-master-styles office-body) ;
db-table-presentations ::= db:table-representations::(db-table-presentations-attlist db-table-presentation*) ;
number-day-attlist ::= (number:style::("short" | "long"))? ;
common-horizontal-margin-attlist ::= (fo:margin-left::(length | percent))? (fo:margin-right::(length | percent))? ;
text-user-index-entry-template-attrs ::= text:outline-level::positiveInteger text:style-name::styleNameRef ;
text-page-continuation-attlist ::= text:select-page::("previous" | "next") (text:string-value::string)? ;
common-anim-add-accum-attlist ::= (smil:accumulate::("none" | "sum"))? (smil:additive::("replace" | "sum"))? ;
draw-applet ::= draw:applet::(draw-applet-attlist common-draw-data-attlist? draw-param*) ;
text-database-display-attlist ::= common-field-database-table common-field-data-style-name-attlist text:column-name::string ;
number-embedded-text-attlist ::= number:position::integer ;
style-master-page ::= style:master-page::(style-master-page-attlist (style-header style-header-left?)? (style-footer style-footer-left?)? draw-layer-set? office-forms? shape* animation-element? presentation-notes?) ;
style-handout-master-attlist ::= (presentation:presentation-page-layout-name::styleNameRef)? style:page-layout-name::styleNameRef (draw:style-name::styleNameRef)? ;
text-linenumbering-separator ::= text:linenumbering-separator::((text:increment::nonNegativeInteger)? string()) ;
text-common-ref-content ::= string() (text:ref-name::string)? ;
text-index-title ::= text:index-title::(common-section-attlist index-content-main*) ;
db-command ::= db:command::string ;
office-script ::= office:script::(office-script-attlist string()? anyElements string()?) ;
text-alphabetical-index-entry-template-attrs ::= text:outline-level::("1" | "2" | "3" | "separator") text:style-name::styleNameRef ;
presentation-play-attlist ::= draw:shape-id::IDREF (presentation:speed::presentationSpeeds)? ;
table-insertion-cut-off-attlist ::= table:id::string table:position::integer ;
svg-radialGradient ::= svg:radialGradient::(common-svg-gradient-attlist (svg:cx::(coordinate | percent))? (svg:cy::(coordinate | percent))? (svg:r::(coordinate | percent))? (svg:fx::(coordinate | percent))? (svg:fy::(coordinate | percent))? svg-stop*) ;
common-anim-spline-mode-attlist ::= (smil:calcMode::("discrete" | "linear" | "paced" | "spline"))? ;
table-cell-range-source ::= table:cell-range-source::(table-table-cell-range-source-attlist table-linked-source-attlist) ;
draw-connector-attlist ::= (draw:type::("standard" | "lines" | "line" | "curve"))? (svg:x1::coordinate svg:y1::coordinate)? (draw:start-shape::IDREF)? (draw:start-glue-point::nonNegativeInteger)? (svg:x2::coordinate svg:y2::coordinate)? (draw:end-shape::IDREF)? (draw:end-glue-point::nonNegativeInteger)? (draw:line-skew::(length (length length?)?))? (svg:d::pathData)? ;
table-highlighted-range-attlist ::= (table:cell-range-address::cellRangeAddress)? table:direction::("from-another-table" | "to-another-table" | "from-same-table") (table:contains-error::boolean)? ;
button-type ::= (form:button-type::types)? ;
table-null-date ::= table:null-date::((table:value-type::"date")? (table:date-value::date)?) ;
svg-definition-src ::= svg:definition-src::common-svg-font-face-xlink-attlist ;
style-master-page-attlist ::= style:name::styleName (style:display-name::string)? style:page-layout-name::styleNameRef (draw:style-name::styleNameRef)? (style:next-style-name::styleNameRef)? ;
text-user-index ::= text:user-index::(common-section-attlist text-user-index-source text-index-body) ;
number-month-attlist ::= (number:textual::boolean)? (number:possessive-form::boolean)? (number:style::("short" | "long"))? ;
chart-data-point-attlist ::= (chart:repeated::positiveInteger)? (chart:style-name::styleNameRef)? xml-id? ;
text-index-entry-bibliography-attrs ::= (text:style-name::styleNameRef)? text:bibliography-data-field::("address" | "annote" | "author" | "bibliography-type" | "booktitle" | "chapter" | "custom1" | "custom2" | "custom3" | "custom4" | "custom5" | "edition" | "editor" | "howpublished" | "identifier" | "institution" | "isbn" | "issn" | "journal" | "month" | "note" | "number" | "organizations" | "pages" | "publisher" | "report-type" | "school" | "series" | "title" | "url" | "volume" | "year") ;
db-application-connection-settings ::= db:application-connection-settings::(db-application-connection-settings-attlist db-table-filter? db-table-type-filter? db-data-source-settings?) ;
draw-marker ::= draw:marker::(draw-marker-attlist common-draw-viewbox-attlist common-draw-path-data-attlist) ;
common-data-style-attlist ::= style:name::styleName (style:display-name::string)? (number:language::languageCode)? (number:country::countryCode)? (number:script::scriptCode)? (number:rfc-language-tag::language)? (number:title::string)? (style:volatile::boolean)? (number:transliteration-format::string)? (number:transliteration-language::countryCode)? (number:transliteration-country::countryCode)? (number:transliteration-style::("short" | "medium" | "long"))? ;
table-database-source-table-attlist ::= table:database-name::string table:database-table-name::string ;
dr3d-scene ::= dr3d:scene::(dr3d-scene-attlist common-draw-position-attlist common-draw-size-attlist common-draw-style-name-attlist common-draw-z-index-attlist common-draw-id-attlist common-draw-layer-name-attlist common-text-spreadsheet-shape-attlist common-dr3d-transform-attlist common-draw-caption-id-attlist svg-title? svg-desc? dr3d-light* shapes3d* draw-glue-point*) ;
dc-creator ::= dc:creator::string ;
db-apply-command ::= (db:apply-command::boolean)? ;
image-data ::= (form:image-data::anyIRI)? ;
chart-legend ::= chart:legend::(chart-legend-attlist text-p?) ;
number-scientific-number-attlist ::= (number:min-exponent-digits::integer)? ;
text-section-source-attr ::= (xlink:type::"simple" xlink:href::anyIRI (xlink:show::"embed")?)? (text:section-name::string)? (text:filter-name::string)? ;
db-driver-settings ::= db:driver-settings::(db-driver-settings-attlist db-auto-increment? db-delimiter? db-character-set? db-table-settings?) ;
db-application-connection-settings-attlist ::= (db:is-table-name-length-limited::boolean)? (db:enable-sql92-check::boolean)? (db:append-table-alias-name::boolean)? (db:ignore-driver-privileges::boolean)? (db:boolean-comparison-mode::("equal-integer" | "is-boolean" | "equal-boolean" | "equal-use-only-zero"))? (db:use-catalog::boolean)? (db:max-row-count::integer)? (db:suppress-version-columns::boolean)? ;
office-annotation-attlist ::= (office:display::boolean)? common-office-annotation-name-attlist? ;
common-dr3d-transform-attlist ::= (dr3d:transform::string)? ;
number-era ::= number:era::(number-era-attlist common-calendar-attlist) ;
dr3d-scene-attlist ::= (dr3d:vrp::vector3D)? (dr3d:vpn::vector3D)? (dr3d:vup::vector3D)? (dr3d:projection::("parallel" | "perspective"))? (dr3d:distance::length)? (dr3d:focal-length::length)? (dr3d:shadow-slant::angle)? (dr3d:shade-mode::("flat" | "phong" | "gouraud" | "draft"))? (dr3d:ambient-color::color)? (dr3d:lighting-mode::boolean)? ;
db-data-source ::= db:data-source::(db-data-source-attlist db-connection-data db-driver-settings? db-application-connection-settings?) ;
draw-rect ::= draw:rect::(draw-rect-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text) ;
text-changed-region ::= text:changed-region::(text-changed-region-attr text-changed-region-content) ;
text-alphabetical-index-source ::= text:alphabetical-index-source::(text-alphabetical-index-source-attrs text-index-title-template? text-alphabetical-index-entry-template*) ;
common-draw-z-index-attlist ::= (draw:z-index::nonNegativeInteger)? ;
for ::= (form:for::string)? ;
table-dependencies ::= table:dependencies::(table-dependency+) ;
chart-grid-attlist ::= (chart:class::("major" | "minor"))? (chart:style-name::styleNameRef)? ;
table-target-range-address ::= table:target-range-address::common-table-range-attlist ;
style-graphic-properties-attlist ::= (draw:stroke::("none" | "dash" | "solid"))? (draw:stroke-dash::styleNameRef)? (draw:stroke-dash-names::styleNameRefs)? (svg:stroke-width::length)? (svg:stroke-color::color)? (draw:marker-start::styleNameRef)? (draw:marker-end::styleNameRef)? (draw:marker-start-width::length)? (draw:marker-end-width::length)? (draw:marker-start-center::boolean)? (draw:marker-end-center::boolean)? (svg:stroke-opacity::(string() | zeroToHundredPercent))? (draw:stroke-linejoin::("miter" | "round" | "bevel" | "middle" | "none"))? (svg:stroke-linecap::("butt" | "square" | "round"))? (draw:symbol-color::color)? (text:animation::("none" | "scroll" | "alternate" | "slide"))? (text:animation-direction::("left" | "right" | "up" | "down"))? (text:animation-start-inside::boolean)? (text:animation-stop-inside::boolean)? (text:animation-repeat::nonNegativeInteger)? (text:animation-delay::duration)? (text:animation-steps::length)? (draw:auto-grow-width::boolean)? (draw:auto-grow-height::boolean)? (draw:fit-to-size::boolean)? (draw:fit-to-contour::boolean)? (draw:textarea-vertical-align::("top" | "middle" | "bottom" | "justify"))? (draw:textarea-horizontal-align::("left" | "center" | "right" | "justify"))? (fo:wrap-option::("no-wrap" | "wrap"))? (style:shrink-to-fit::boolean)? (draw:color-mode::("greyscale" | "mono" | "watermark" | "standard"))? (draw:color-inversion::boolean)? (draw:luminance::zeroToHundredPercent)? (draw:contrast::percent)? (draw:gamma::percent)? (draw:red::signedZeroToHundredPercent)? (draw:green::signedZeroToHundredPercent)? (draw:blue::signedZeroToHundredPercent)? (draw:image-opacity::zeroToHundredPercent)? (draw:shadow::("visible" | "hidden"))? (draw:shadow-offset-x::length)? (draw:shadow-offset-y::length)? (draw:shadow-color::color)? (draw:shadow-opacity::zeroToHundredPercent)? (draw:start-line-spacing-horizontal::distance)? (draw:start-line-spacing-vertical::distance)? (draw:end-line-spacing-horizontal::distance)? (draw:end-line-spacing-vertical::distance)? (draw:line-distance::distance)? (draw:guide-overhang::length)? (draw:guide-distance::distance)? (draw:start-guide::length)? (draw:end-guide::length)? (draw:placing::("below" | "above"))? (draw:parallel::boolean)? (draw:measure-align::("automatic" | "left-outside" | "inside" | "right-outside"))? (draw:measure-vertical-align::("automatic" | "above" | "below" | "center"))? (draw:unit::("automatic" | "mm" | "cm" | "m" | "km" | "pt" | "pc" | "inch" | "ft" | "mi"))? (draw:show-unit::boolean)? (draw:decimal-places::nonNegativeInteger)? (draw:caption-type::("straight-line" | "angled-line" | "angled-connector-line"))? (draw:caption-angle-type::("fixed" | "free"))? (draw:caption-angle::angle)? (draw:caption-gap::distance)? (draw:caption-escape-direction::("horizontal" | "vertical" | "auto"))? (draw:caption-escape::(length | percent))? (draw:caption-line-length::length)? (draw:caption-fit-line-length::boolean)? (dr3d:horizontal-segments::nonNegativeInteger)? (dr3d:vertical-segments::nonNegativeInteger)? (dr3d:edge-rounding::percent)? (dr3d:edge-rounding-mode::("correct" | "attractive"))? (dr3d:back-scale::percent)? (dr3d:depth::length)? (dr3d:backface-culling::("enabled" | "disabled"))? (dr3d:end-angle::angle)? (dr3d:close-front::boolean)? (dr3d:close-back::boolean)? (dr3d:lighting-mode::("standard" | "double-sided"))? (dr3d:normals-kind::("object" | "flat" | "sphere"))? (dr3d:normals-direction::("normal" | "inverse"))? (dr3d:texture-generation-mode-x::("object" | "parallel" | "sphere"))? (dr3d:texture-generation-mode-y::("object" | "parallel" | "sphere"))? (dr3d:texture-kind::("luminance" | "intensity" | "color"))? (dr3d:texture-filter::("enabled" | "disabled"))? (dr3d:texture-mode::("replace" | "modulate" | "blend"))? (dr3d:ambient-color::color)? (dr3d:emissive-color::color)? (dr3d:specular-color::color)? (dr3d:diffuse-color::color)? (dr3d:shininess::percent)? (dr3d:shadow::("visible" | "hidden"))? common-draw-rel-size-attlist (fo:min-width::(length | percent))? (fo:min-height::(length | percent))? (fo:max-height::(length | percent))? (fo:max-width::(length | percent))? common-horizontal-margin-attlist common-vertical-margin-attlist common-margin-attlist (style:print-content::boolean)? (style:protect::("none" | (("content" | "position" | "size")+)))? (style:horizontal-pos::("left" | "center" | "right" | "from-left" | "inside" | "outside" | "from-inside"))? (svg:x::coordinate)? (style:horizontal-rel::("page" | "page-content" | "page-start-margin" | "page-end-margin" | "frame" | "frame-content" | "frame-start-margin" | "frame-end-margin" | "paragraph" | "paragraph-content" | "paragraph-start-margin" | "paragraph-end-margin" | "char"))? common-vertical-pos-attlist common-vertical-rel-attlist common-text-anchor-attlist common-border-attlist common-border-line-width-attlist common-padding-attlist common-shadow-attlist common-background-color-attlist common-background-transparency-attlist common-editable-attlist (style:wrap::("none" | "left" | "right" | "parallel" | "dynamic" | "run-through" | "biggest"))? (style:wrap-dynamic-threshold::nonNegativeLength)? (style:number-wrapped-paragraphs::("no-limit" | positiveInteger))? (style:wrap-contour::boolean)? (style:wrap-contour-mode::("full" | "outside"))? (style:run-through::("foreground" | "background"))? (style:flow-with-text::boolean)? (style:overflow-behavior::("clip" | "auto-create-new-frame"))? (style:mirror::("none" | "vertical" | horizontal-mirror | ("vertical" horizontal-mirror) | (horizontal-mirror "vertical")))? (fo:clip::("auto" | clipShape))? (draw:wrap-influence-on-position::("iterative" | "once-concurrent" | "once-successive"))? common-writing-mode-attlist (draw:frame-display-scrollbar::boolean)? (draw:frame-display-border::boolean)? (draw:frame-margin-horizontal::nonNegativePixelLength)? (draw:frame-margin-vertical::nonNegativePixelLength)? (draw:visible-area-left::nonNegativeLength)? (draw:visible-area-top::nonNegativeLength)? (draw:visible-area-width::positiveLength)? (draw:visible-area-height::positiveLength)? (draw:draw-aspect::("content" | "thumbnail" | "icon" | "print-view"))? (draw:ole-draw-aspect::nonNegativeInteger)? ;
office-font-face-decls ::= (office:font-face-decls::(style-font-face*))? ;
office-document-styles ::= office:document-styles::(office-document-common-attrs office-font-face-decls office-styles office-automatic-styles office-master-styles) ;
table-subtotal-field-attlist ::= table:field-number::nonNegativeInteger table:function::("average" | "count" | "countnums" | "max" | "min" | "product" | "stdev" | "stdevp" | "sum" | "var" | "varp" | string) ;
text-hidden-text-attlist ::= text:condition::string text:string-value::string (text:is-hidden::boolean)? ;
form-property ::= (form:property::(form-property-name form-property-value-and-type-attlist)) | (form:list-property::(form-property-name form-property-type-and-value-list)) ;
table-named-expression-attlist ::= table:name::string table:expression::string (table:base-cell-address::cellAddress)? ;
script-event-listener-attlist ::= script:event-name::string script:language::string (script:macro-name::string) | (xlink:type::"simple" xlink:href::anyIRI (xlink:actuate::"onRequest")?) ;
text-variable-decl ::= text:variable-decl::(common-field-name-attlist common-value-type-attlist) ;
draw-fill-image ::= draw:fill-image::(draw-fill-image-attlist xlink:type::"simple" xlink:href::anyIRI (xlink:show::"embed")? (xlink:actuate::"onLoad")?) ;
office-document-content ::= office:document-content::(office-document-common-attrs office-scripts office-font-face-decls office-automatic-styles office-body) ;
anim-animate-transform-attlist ::= svg:type::("translate" | "scale" | "rotate" | "skewX" | "skewY") ;
draw-param-attlist ::= (draw:name::string)? (draw:value::string)? ;
common-begin-end-timing-attlist ::= (smil:begin::string)? (smil:end::string)? ;
common-presentation-effect-attlist ::= draw:shape-id::IDREF (presentation:effect::presentationEffects)? (presentation:direction::presentationEffectDirections)? (presentation:speed::presentationSpeeds)? (presentation:delay::duration)? (presentation:start-scale::percent)? (presentation:path-id::string)? ;
style-columns-attlist ::= fo:column-count::positiveInteger (fo:column-gap::length)? ;
text-a-attlist ::= (office:name::string)? (office:title::string)? xlink:type::"simple" xlink:href::anyIRI (xlink:actuate::"onRequest")? (office:target-frame-name::targetFrameName)? (xlink:show::("new" | "replace"))? (text:style-name::styleNameRef)? (text:visited-style-name::styleNameRef)? ;
config-config-item ::= config:config-item::(config-config-item-attlist string()) ;
table-first-column ::= table:first-column::common-table-template-attlist ;
anim-iterate-attlist ::= common-anim-target-attlist (anim:iterate-type::string)? (anim:iterate-interval::duration)? ;
db-is-first-row-header-line ::= (db:is-first-row-header-line::boolean)? ;
db-character-set ::= db:character-set::db-character-set-attlist ;
style-graphic-fill-properties-attlist ::= (draw:fill::("none" | "solid" | "bitmap" | "gradient" | "hatch"))? (draw:fill-color::color)? (draw:secondary-fill-color::color)? (draw:fill-gradient-name::styleNameRef)? (draw:gradient-step-count::nonNegativeInteger)? (draw:fill-hatch-name::styleNameRef)? (draw:fill-hatch-solid::boolean)? (draw:fill-image-name::styleNameRef)? (style:repeat::("no-repeat" | "repeat" | "stretch"))? (draw:fill-image-width::(length | percent))? (draw:fill-image-height::(length | percent))? (draw:fill-image-ref-point-x::percent)? (draw:fill-image-ref-point-y::percent)? (draw:fill-image-ref-point::("top-left" | "top" | "top-right" | "left" | "center" | "right" | "bottom-left" | "bottom" | "bottom-right"))? (draw:tile-repeat-offset::(zeroToHundredPercent "horizontal" | "vertical"))? (draw:opacity::zeroToHundredPercent)? (draw:opacity-name::styleNameRef)? (svg:fill-rule::("nonzero" | "evenodd"))? ;
common-draw-rel-size-attlist ::= common-draw-size-attlist (style:rel-width::(percent | "scale" | "scale-min"))? (style:rel-height::(percent | "scale" | "scale-min"))? ;
table-cut-offs ::= table:cut-offs::((table-movement-cut-off+) | (table-insertion-cut-off table-movement-cut-off*)) ;
dr3d-sphere-attlist ::= (dr3d:center::vector3D)? (dr3d:size::vector3D)? ;
draw-fill-image-attlist ::= draw:name::styleName (draw:display-name::string)? (svg:width::length)? (svg:height::length)? ;
common-dur-timing-attlist ::= (smil:dur::string)? ;
chart-mean-value-attlist ::= (chart:style-name::styleNameRef)? ;
style-text-properties-attlist ::= (fo:font-variant::fontVariant)? (fo:text-transform::("none" | "lowercase" | "uppercase" | "capitalize"))? (fo:color::color)? (style:use-window-font-color::boolean)? (style:text-outline::boolean)? (style:text-line-through-type::lineType)? (style:text-line-through-style::lineStyle)? (style:text-line-through-width::lineWidth)? (style:text-line-through-color::("font-color" | color))? (style:text-line-through-text::string)? (style:text-line-through-text-style::styleNameRef)? (style:text-position::(percent | "super" | "sub" percent?))? (style:font-name::string)? (style:font-name-asian::string)? (style:font-name-complex::string)? (fo:font-family::string)? (style:font-family-asian::string)? (style:font-family-complex::string)? (style:font-family-generic::fontFamilyGeneric)? (style:font-family-generic-asian::fontFamilyGeneric)? (style:font-family-generic-complex::fontFamilyGeneric)? (style:font-style-name::string)? (style:font-style-name-asian::string)? (style:font-style-name-complex::string)? (style:font-pitch::fontPitch)? (style:font-pitch-asian::fontPitch)? (style:font-pitch-complex::fontPitch)? (style:font-charset::textEncoding)? (style:font-charset-asian::textEncoding)? (style:font-charset-complex::textEncoding)? (fo:font-size::(positiveLength | percent))? (style:font-size-asian::(positiveLength | percent))? (style:font-size-complex::(positiveLength | percent))? (style:font-size-rel::length)? (style:font-size-rel-asian::length)? (style:font-size-rel-complex::length)? (style:script-type::("latin" | "asian" | "complex" | "ignore"))? (fo:letter-spacing::(length | "normal"))? (fo:language::languageCode)? (style:language-asian::languageCode)? (style:language-complex::languageCode)? (fo:country::countryCode)? (style:country-asian::countryCode)? (style:country-complex::countryCode)? (fo:script::scriptCode)? (style:script-asian::scriptCode)? (style:script-complex::scriptCode)? (style:rfc-language-tag::language)? (style:rfc-language-tag-asian::language)? (style:rfc-language-tag-complex::language)? (fo:font-style::fontStyle)? (style:font-style-asian::fontStyle)? (style:font-style-complex::fontStyle)? (style:font-relief::("none" | "embossed" | "engraved"))? (fo:text-shadow::shadowType)? (style:text-underline-type::lineType)? (style:text-underline-style::lineStyle)? (style:text-underline-width::lineWidth)? (style:text-underline-color::("font-color" | color))? (style:text-overline-type::lineType)? (style:text-overline-style::lineStyle)? (style:text-overline-width::lineWidth)? (style:text-overline-color::("font-color" | color))? (style:text-overline-mode::lineMode)? (fo:font-weight::fontWeight)? (style:font-weight-asian::fontWeight)? (style:font-weight-complex::fontWeight)? (style:text-underline-mode::lineMode)? (style:text-line-through-mode::lineMode)? (style:letter-kerning::boolean)? (style:text-blinking::boolean)? common-background-color-attlist (style:text-combine::("none" | "letters" | "lines"))? (style:text-combine-start-char::character)? (style:text-combine-end-char::character)? (style:text-emphasize::("none" | ("none" | "accent" | "dot" | "circle" | "disc" "above" | "below")))? (style:text-scale::percent)? (style:text-rotation-angle::angle)? (style:text-rotation-scale::("fixed" | "line-height"))? (fo:hyphenate::boolean)? (fo:hyphenation-remain-char-count::positiveInteger)? (fo:hyphenation-push-char-count::positiveInteger)? (text:display::"true") | (text:display::"none") | (text:display::"condition" text:condition::"none") | ε ;
presentation-header-decl-attlist ::= presentation:name::string ;
common-background-transparency-attlist ::= (style:background-transparency::zeroToHundredPercent)? ;
number-time-style-attlist ::= (number:truncate-on-overflow::boolean)? ;
office-dde-source-attlist ::= (office:name::string)? (office:conversion-mode::("into-default-style-data-style" | "into-english-number" | "keep-text"))? ;
text-object-index-source ::= text:object-index-source::(text-object-index-source-attrs text-index-title-template? text-object-index-entry-template?) ;
text-dde-connection-decl-attlist ::= office:name::string ;
text-section-source ::= text:section-source::text-section-source-attr ;
draw-image-map ::= draw:image-map::((draw-area-rectangle | draw-area-circle | draw-area-polygon)*) ;
table-data-pilot-group-member ::= table:data-pilot-group-member::table-data-pilot-group-member-attlist ;
office-meta-data ::= (meta:generator::string) | (dc:title::string) | (dc:description::string) | (dc:subject::string) | (meta:keyword::string) | (meta:initial-creator::string) | dc-creator | (meta:printed-by::string) | (meta:creation-date::dateTime) | dc-date | (meta:print-date::dateTime) | (meta:template::(xlink:type::"simple" xlink:href::anyIRI (xlink:actuate::"onRequest")? (xlink:title::string)? (meta:date::dateTime)?)) | (meta:auto-reload::((xlink:type::"simple" xlink:href::anyIRI (xlink:show::"replace")? (xlink:actuate::"onLoad")?)? (meta:delay::duration)?)) | (meta:hyperlink-behaviour::((office:target-frame-name::targetFrameName)? (xlink:show::("new" | "replace"))?)) | (dc:language::language) | (meta:editing-cycles::nonNegativeInteger) | (meta:editing-duration::duration) | (meta:document-statistic::((meta:page-count::nonNegativeInteger)? (meta:table-count::nonNegativeInteger)? (meta:draw-count::nonNegativeInteger)? (meta:image-count::nonNegativeInteger)? (meta:ole-object-count::nonNegativeInteger)? (meta:object-count::nonNegativeInteger)? (meta:paragraph-count::nonNegativeInteger)? (meta:word-count::nonNegativeInteger)? (meta:character-count::nonNegativeInteger)? (meta:frame-count::nonNegativeInteger)? (meta:sentence-count::nonNegativeInteger)? (meta:syllable-count::nonNegativeInteger)? (meta:non-whitespace-character-count::nonNegativeInteger)? (meta:row-count::nonNegativeInteger)? (meta:cell-count::nonNegativeInteger)?)) | (meta:user-defined::(meta:name::string (meta:value-type::"float" double) | (meta:value-type::"date" dateOrDateTime) | (meta:value-type::"time" duration) | (meta:value-type::"boolean" boolean) | (meta:value-type::"string" string) | string())) ;
office-document-attrs ::= office:mimetype::string ;
draw-enhanced-geometry ::= draw:enhanced-geometry::(draw-enhanced-geometry-attlist draw-equation* draw-handle*) ;
text-bibliography-entry-template ::= text:bibliography-entry-template::(text-bibliography-entry-template-attrs (text-index-entry-span | text-index-entry-tab-stop | text-index-entry-bibliography)*) ;
style-region-right ::= style:region-right::region-content ;
table-data-pilot-field-reference ::= table:data-pilot-field-reference::table-data-pilot-field-reference-attlist ;
text-chapter-attlist ::= text:display::("name" | "number" | "number-and-name" | "plain-number-and-name" | "plain-number") text:outline-level::nonNegativeInteger ;
text-page-sequence ::= text:page-sequence::(text-page+) ;
form-checkbox-attlist ::= form-control-attlist common-disabled-attlist label common-printable-attlist common-tab-attlist common-title-attlist common-value-attlist common-data-field-attlist common-form-visual-effect-attlist common-form-relative-image-position-attlist common-linked-cell (form:current-state::states)? (form:is-tristate::boolean)? (form:state::states)? ;
draw-layer-set ::= draw:layer-set::(draw-layer*) ;
text-hidden-paragraph-attlist ::= text:condition::string (text:is-hidden::boolean)? ;
text-bookmark-start-attlist ::= text:name::string xml-id? common-in-content-meta-attlist? ;
common-draw-points-attlist ::= draw:points::points ;
presentation-sound ::= presentation:sound::(presentation-sound-attlist xlink:type::"simple" xlink:href::anyIRI (xlink:actuate::"onRequest")? (xlink:show::("new" | "replace"))?) ;
db-column-definition ::= db:column-definition::(db-column-definition-attlist common-db-default-value) ;
chart-error-indicator ::= chart:error-indicator::chart-error-indicator-attlist ;
chart-title-attlist ::= (table:cell-range::cellRangeAddressList)? common-draw-position-attlist (chart:style-name::styleNameRef)? ;
db-database-description ::= db:database-description::(db-database-description-attlist db-file-based-database | db-server-database) ;
db-table-exclude-filter ::= db:table-exclude-filter::(db-table-exclude-filter-attlist db-table-filter-pattern+) ;
style-background-image ::= (style:background-image::(style-background-image-attlist common-draw-data-attlist | office-binary-data | ε))? ;
dr3d-cube-attlist ::= (dr3d:min-edge::vector3D)? (dr3d:max-edge::vector3D)? ;
form-property-type-and-value-list ::= (office:value-type::"float" (form:list-value::(office:value::double))*) | (office:value-type::"percentage" (form:list-value::(office:value::double))*) | (office:value-type::"currency" (form:list-value::(office:value::double (office:currency::string)?))*) | (office:value-type::"date" (form:list-value::(office:date-value::dateOrDateTime))*) | (office:value-type::"time" (form:list-value::(office:time-value::duration))*) | (office:value-type::"boolean" (form:list-value::(office:boolean-value::boolean))*) | (office:value-type::"string" (form:list-value::(office:string-value::string))*) | (office:value-type::"void") ;
xforms-model ::= xforms:model::anyAttListOrElements ;
table-dde-links ::= table:dde-links::(table-dde-link+) ;
style-drop-cap ::= (style:drop-cap::style-drop-cap-attlist)? ;
db-key ::= db:key::(db-key-attlist db-key-columns+) ;
draw-floating-frame ::= draw:floating-frame::(draw-floating-frame-attlist common-draw-data-attlist) ;
table-background ::= table:background::table-background-attlist ;
common-writing-mode-attlist ::= (style:writing-mode::("lr-tb" | "rl-tb" | "tb-rl" | "tb-lr" | "lr" | "rl" | "tb" | "page"))? ;
text-illustration-index-source-attrs ::= text-index-scope-attr text-relative-tab-stop-position-attr (text:use-caption::boolean)? (text:caption-sequence-name::string)? (text:caption-sequence-format::("text" | "category-and-value" | "caption"))? ;
xforms-bind-attlist ::= (xforms:bind::string)? ;
text-note-ref-content ::= (text:reference-format::common-ref-format-values)? text-note-class ;
draw-opacity ::= draw:opacity::(common-draw-gradient-attlist draw-opacity-attlist) ;
table-linked-source-attlist ::= xlink:type::"simple" xlink:href::anyIRI (xlink:actuate::"onRequest")? (table:filter-name::string)? (table:filter-options::string)? (table:refresh-delay::duration)? ;
style-default-page-layout ::= style:default-page-layout::style-page-layout-content ;
form-column ::= form:column::(form-column-attlist column-controls+) ;
table-data-pilot-groups-attlist ::= table:source-field-name::string (table:date-start::(dateOrDateTime | "auto")) | (table:start::(double | "auto")) (table:date-end::(dateOrDateTime | "auto")) | (table:end::(double | "auto")) table:step::double table:grouped-by::("seconds" | "minutes" | "hours" | "days" | "months" | "quarters" | "years") ;
text-outline-level-style ::= text:outline-level-style::(text-outline-level-style-attlist style-list-level-properties? style-text-properties?) ;
table-data-pilot-subtotal ::= table:data-pilot-subtotal::table-data-pilot-subtotal-attlist ;
text-note-class ::= text:note-class::("footnote" | "endnote") ;
text-list-style-attr ::= style:name::styleName (style:display-name::string)? (text:consecutive-numbering::boolean)? ;
common-presentation-header-footer-attlist ::= (presentation:use-header-name::string)? (presentation:use-footer-name::string)? (presentation:use-date-time-name::string)? ;
text-index-source-styles ::= text:index-source-styles::(text:outline-level::positiveInteger text-index-source-style*) ;
db-column-attlist ::= (db:visible::boolean)? (db:style-name::styleNameRef)? (db:default-cell-style-name::styleNameRef)? ;
number-day-of-week ::= number:day-of-week::(number-day-of-week-attlist common-calendar-attlist) ;
draw-opacity-attlist ::= (draw:start::zeroToHundredPercent)? (draw:end::zeroToHundredPercent)? ;
common-anim-named-target-attlist ::= smil:attributeName::string ;
target-location ::= (xlink:href::anyIRI)? ;
db-table-settings ::= db:table-settings::(db-table-setting*) ;
current-selected ::= (form:current-selected::boolean)? ;
office-annotation-end ::= office:annotation-end::office-annotation-end-attlist ;
common-db-table-name-attlist ::= db:name::string (db:catalog-name::string)? (db:schema-name::string)? ;
text-decls ::= (text:variable-decls::(text-variable-decl*))? (text:sequence-decls::(text-sequence-decl*))? (text:user-field-decls::(text-user-field-decl*))? (text:dde-connection-decls::(text-dde-connection-decl*))? text-alphabetical-index-auto-mark-file? ;
db-table-presentation ::= db:table-representation::(db-table-presentation-attlist common-db-table-name-attlist common-db-object-title common-db-object-description common-db-table-style-name db-order-statement? db-filter-statement? db-columns?) ;
office-binary-data ::= office:binary-data::base64Binary ;
table-movement-cut-off ::= table:movement-cut-off::table-movement-cut-off-attlist ;
form-number-attlist ::= (form:value::double)? (form:current-value::double)? (form:min-value::double)? (form:max-value::double)? ;
text-bookmark-end ::= text:bookmark-end::text-bookmark-end-attlist ;
text-list-style ::= text:list-style::(text-list-style-attr text-list-style-content*) ;
text-illustration-index-entry-template-attrs ::= text:style-name::styleNameRef ;
common-dde-connection-decl-attlist ::= office:dde-application::string office:dde-topic::string office:dde-item::string (office:automatic-update::boolean)? ;
chart-data-label ::= chart:data-label::(chart-data-label-attlist text-p?) ;
text-time-attlist ::= common-field-fixed-attlist common-field-data-style-name-attlist (text:time-value::timeOrDateTime)? (text:time-adjust::duration)? ;
common-number-attlist ::= (number:min-integer-digits::integer)? (number:grouping::boolean)? ;
chart-equation ::= chart:equation::(chart-equation-attlist text-p?) ;
presentation-footer-decl-attlist ::= presentation:name::string ;
svg-desc ::= svg:desc::string() ;
form-combobox-attlist ::= form-control-attlist common-current-value-attlist common-disabled-attlist dropdown common-maxlength-attlist common-printable-attlist common-readonly-attlist size common-tab-attlist common-title-attlist common-value-attlist common-convert-empty-attlist common-data-field-attlist list-source list-source-type common-linked-cell common-source-cell-range (form:auto-complete::boolean)? ;
common-page-number-attlist ::= (style:page-number::(positiveInteger | "auto"))? ;
text-database-next-attlist ::= common-field-database-table (text:condition::string)? ;
common-vertical-rel-attlist ::= (style:vertical-rel::("page" | "page-content" | "frame" | "frame-content" | "paragraph" | "paragraph-content" | "char" | "line" | "baseline" | "text"))? ;
draw-ellipse ::= draw:ellipse::((draw-ellipse-attlist common-draw-circle-ellipse-pos-attlist) | (common-draw-position-attlist common-draw-size-attlist) common-draw-circle-ellipse-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text) ;
common-draw-id-attlist ::= (xml-id (draw:id::NCName)?)? ;
table-filter-set-item ::= table:filter-set-item::(table:value::string) ;
table-data-pilot-member ::= table:data-pilot-member::table-data-pilot-member-attlist ;
number-currency-symbol ::= number:currency-symbol::(number-currency-symbol-attlist string()) ;
common-field-display-value-formula-none-attlist ::= (text:display::("value" | "formula" | "none"))? ;
common-repeat-timing-attlist ::= (smil:repeatDur::string)? (smil:repeatCount::(nonNegativeDecimal | "indefinite"))? ;
form-value-range-attlist ::= form-control-attlist common-disabled-attlist common-printable-attlist common-tab-attlist common-title-attlist common-value-attlist common-linked-cell common-repeat common-delay-for-repeat (form:max-value::integer)? (form:min-value::integer)? (form:step-size::positiveInteger)? (form:page-step-size::positiveInteger)? (form:orientation::("horizontal" | "vertical"))? ;
number-boolean-style ::= number:boolean-style::(common-data-style-attlist style-text-properties? number-text? (number-boolean number-text?)? style-map*) ;
table-error-macro ::= table:error-macro::((table:execute::boolean)?) ;
config-config-item-set ::= config:config-item-set::(config-config-item-set-attlist config-items) ;
presentation-dim-attlist ::= draw:shape-id::IDREF draw:color::color ;
text-bibliography-source ::= text:bibliography-source::(text-index-title-template? text-bibliography-entry-template*) ;
text-sort-key-attlist ::= text:key::("address" | "annote" | "author" | "bibliography-type" | "booktitle" | "chapter" | "custom1" | "custom2" | "custom3" | "custom4" | "custom5" | "edition" | "editor" | "howpublished" | "identifier" | "institution" | "isbn" | "issn" | "journal" | "month" | "note" | "number" | "organizations" | "pages" | "publisher" | "report-type" | "school" | "series" | "title" | "url" | "volume" | "year") (text:sort-ascending::boolean)? ;
db-table-setting ::= db:table-setting::(db-table-setting-attlist db-delimiter? db-character-set?) ;
style-list-level-properties-attlist ::= common-text-align (text:space-before::length)? (text:min-label-width::nonNegativeLength)? (text:min-label-distance::nonNegativeLength)? (style:font-name::string)? (fo:width::positiveLength)? (fo:height::positiveLength)? common-vertical-rel-attlist common-vertical-pos-attlist (text:list-level-position-and-space-mode::("label-width-and-position" | "label-alignment"))? ;
number-year ::= number:year::(number-year-attlist common-calendar-attlist) ;
table-body ::= table:body::common-table-template-attlist ;
text-index-entry-span ::= text:index-entry-span::((text:style-name::styleNameRef)? string()) ;
text-date-attlist ::= common-field-fixed-attlist common-field-data-style-name-attlist (text:date-value::dateOrDateTime)? (text:date-adjust::duration)? ;
text-user-field-decl ::= text:user-field-decl::(common-field-name-attlist common-field-formula-attlist? common-value-and-type-attlist) ;
table-sort ::= table:sort::(table-sort-attlist table-sort-by+) ;
dc-date ::= dc:date::dateTime ;
text-database-row-select-attlist ::= common-field-database-table (text:condition::string)? (text:row-number::nonNegativeInteger)? ;
chart-axis ::= chart:axis::(chart-axis-attlist chart-title? chart-categories? chart-grid*) ;
table-database-source-sql ::= table:database-source-sql::table-database-source-sql-attlist ;
draw-custom-shape ::= draw:custom-shape::(draw-custom-shape-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text draw-enhanced-geometry?) ;
form-form ::= form:form::(common-form-control-attlist form-form-attlist form-properties? office-event-listeners? (controls | form-form)* form-connection-resource?) ;
common-table-cell-range-address-attlist ::= table:start-column::integer table:start-row::integer table:start-table::integer table:end-column::integer table:end-row::integer table:end-table::integer ;
list-source ::= (form:list-source::string)? ;
common-draw-gradient-attlist ::= (draw:name::styleName)? (draw:display-name::string)? draw:style::gradient-style (draw:cx::percent)? (draw:cy::percent)? (draw:angle::angle)? (draw:border::percent)? ;
draw-polyline ::= draw:polyline::(common-draw-points-attlist common-draw-position-attlist common-draw-size-attlist common-draw-viewbox-attlist common-draw-shape-with-text-and-styles-attlist common-draw-caption-id-attlist svg-title? svg-desc? office-event-listeners? draw-glue-point* draw-text) ;
text-numbered-paragraph ::= text:numbered-paragraph::(text-numbered-paragraph-attr text-number? text-p | text-h) ;
text-list-level-style-bullet-attr ::= (text:style-name::styleNameRef)? text:bullet-char::character common-num-format-prefix-suffix-attlist (text:bullet-relative-size::percent)? ;
number-quarter ::= number:quarter::(number-quarter-attlist common-calendar-attlist) ;
config-config-item-map-entry ::= config:config-item-map-entry::(config-config-item-map-entry-attlist config-items) ;
anim-transition-filter-attlist ::= smil:type::string (smil:subtype::string)? (smil:direction::("forward" | "reverse"))? (smil:fadeColor::color)? (smil:mode::("in" | "out"))? ;
text-alphabetical-index-entry-template ::= text:alphabetical-index-entry-template::(text-alphabetical-index-entry-template-attrs (text-index-entry-chapter | text-index-entry-page-number | text-index-entry-text | text-index-entry-span | text-index-entry-tab-stop)*) ;
common-table-change-attlist ::= table:id::string (table:acceptance-state::("accepted" | "rejected" | "pending"))? (table:rejecting-change-id::string)? ;
common-field-formula-attlist ::= (text:formula::string)? ;
text-set-page-variable-attlist ::= (text:active::boolean)? (text:page-adjust::integer)? ;
table-data-pilot-field ::= table:data-pilot-field::(table-data-pilot-field-attlist table-data-pilot-level? table-data-pilot-field-reference? table-data-pilot-groups?) ;
draw-glue-point ::= draw:glue-point::draw-glue-point-attlist ;
chart-chart-attlist ::= chart:class::namespacedToken common-draw-size-attlist (chart:column-mapping::string)? (chart:row-mapping::string)? (chart:style-name::styleNameRef)? (xlink:type::"simple" xlink:href::anyIRI)? xml-id? ;
draw-custom-shape-attlist ::= (draw:engine::namespacedToken)? (draw:data::string)? ;
table-highlighted-range-attlist-invalid ::= table:marked-invalid::boolean ;
table-data-pilot-tables ::= table:data-pilot-tables::(table-data-pilot-table*) ;
table-table-row ::= table:table-row::(table-table-row-attlist (table-table-cell | table-covered-table-cell)+) ;
table-operation-attlist ::= table:name::("trace-dependents" | "remove-dependents" | "trace-precedents" | "remove-precedents" | "trace-errors") table:index::nonNegativeInteger ;
table-detective ::= table:detective::(table-highlighted-range* table-operation*) ;
office-settings ::= (office:settings::(config-config-item-set+))? ;
table-tracked-changes-attlist ::= (table:track-changes::boolean)? ;
text-table-of-content-entry-template-attlist ::= text:outline-level::positiveInteger text:style-name::styleNameRef ;
common-num-format-prefix-suffix-attlist ::= (style:num-prefix::string)? (style:num-suffix::string)? ;
dropdown ::= (form:dropdown::boolean)? ;
common-disabled-attlist ::= (form:disabled::boolean)? ;
common-svg-gradient-attlist ::= (svg:gradientUnits::"objectBoundingBox")? (svg:gradientTransform::string)? (svg:spreadMethod::("pad" | "reflect" | "repeat"))? draw:name::styleName (draw:display-name::string)? ;
draw-a-attlist ::= xlink:type::"simple" xlink:href::anyIRI (xlink:actuate::"onRequest")? (office:target-frame-name::targetFrameName)? (xlink:show::("new" | "replace"))? (office:name::string)? (office:title::string)? (office:server-map::boolean)? xml-id? ;
style-default-style ::= style:default-style::style-style-content ;
db-table-filter-pattern ::= db:table-filter-pattern::(db-table-filter-pattern-attlist string) ;
table-named-expressions ::= table:named-expressions::((table-named-range | table-named-expression)*) ;
number-fraction ::= number:fraction::(number-fraction-attlist common-number-attlist) ;
common-draw-area-attlist ::= (xlink:type::"simple" xlink:href::anyIRI (office:target-frame-name::targetFrameName)? (xlink:show::("new" | "replace"))?)? (office:name::string)? (draw:nohref::"nohref")? ;
common-draw-name-attlist ::= (draw:name::string)? ;
text-bibliography ::= text:bibliography::(common-section-attlist text-bibliography-source text-index-body) ;
table-dde-link ::= table:dde-link::(office-dde-source table-table) ;
size ::= (form:size::nonNegativeInteger)? ;
table-table-attlist ::= (table:name::string)? (table:style-name::styleNameRef)? (table:template-name::string)? (table:use-first-row-styles::boolean)? (table:use-last-row-styles::boolean)? (table:use-first-column-styles::boolean)? (table:use-last-column-styles::boolean)? (table:use-banding-rows-styles::boolean)? (table:use-banding-columns-styles::boolean)? (table:protected::boolean)? (table:protection-key::string)? (table:protection-key-digest-algorithm::anyIRI)? (table:print::boolean)? (table:print-ranges::cellRangeAddressList)? xml-id? (table:is-sub-table::boolean)? ;
--------------------pascal::bruneliere.bgf--------------------
Instruction ::= Calculation ;
 Instruction ::= Control ;
 Instruction ::= Assignment ;
 Instruction ::= Block ;
 Instruction ::= block::Block ;
Block ::= (instructions::Instruction)+ procedure::Procedure loop::Loop conditional::Conditional ;
Assignment ::= block::Block ;
Variable ::= Parameter ;
 Variable ::= name::String program::Program procedure::Procedure type::Type ;
Repeat ::= block_loop::Block ;
Type ::= name::String program::Program (variables::Variable)+ ;
For ::= block_loop::Block ;
Calculation ::= block::Block ;
Parameter ::= procedure_parameter::Procedure ;
Function ::= returnType::Type ;
Conditional ::= blocks::Block ;
Loop ::= For ;
 Loop ::= While ;
 Loop ::= Repeat ;
 Loop ::= block_loop::Block ;
Program ::= name::String (variables::Variable)+ (types::Type)+ (procedures::Procedure)+ ;
Procedure ::= Function ;
 Procedure ::= name::String program::Program (variables::Variable)+ (parameters::Parameter)+ block_procedure::Block ;
While ::= block_loop::Block ;
--------------------pl1::bruneliere.bgf--------------------
PLIElement ::= level::String name::String sharedType::PLIClassifier group::PLIComposedType initial::PLIElementInitialValue source::PLISourceText array::PLIArray ;
PLIComputationalType ::= alias::PLIAlias ;
PLIClassifier ::= PLISimpleType ;
 PLIClassifier ::= PLINamedType ;
 PLIClassifier ::= PLIComposedType ;
 PLIClassifier ::= name::String (typedElements::PLIElement)+ ;
PLIArray ::= PLIFixedBoundArray ;
 PLIArray ::= PLIFixedLboundArray ;
 PLIArray ::= PLIHBoundArray ;
 PLIArray ::= PLIVariableBoundArray ;
 PLIArray ::= arrayOf::PLIElement ;
PLIElementInitialValue ::= initialValue::String ;
PLINonComputationalType ::= alias::PLIAlias ;
PLIComposedType ::= (elements::PLIElement)+ ;
PLISimpleType ::= PLIComputationalType ;
 PLISimpleType ::= PLINonComputationalType ;
 PLISimpleType ::= alias::PLIAlias ;
PLIHBoundArray ::= uBound::Integer IBoundToAllocate::String referredTo::PLIElement ;
PLINamedType ::= name::String (typedElements::PLIElement)+ ;
PLISourceText ::= source::String fileName::String ;
PLIVariableBoundArray ::= IBoundToAllocate::String hBoundToAllocate::String referredTo::PLIElement ;
PLIAlias ::= type::PLISimpleType (contains::PLIAttribute)+ ;
PLIFixedBoundArray ::= IBound::Integer uBound::Integer referredTo::PLIElement ;
PLIFixedLboundArray ::= IBound::Integer uBoundToAllocate::String referredTo::PLIElement ;
--------------------uml::collab.bgf--------------------
Request ::= Operation ;
 Request ::= (message::Message)+ ;
Interface ::= (classifierRole::ClassifierRole)+ (feature::Operation)+ ;
Operation ::= (classifierRole::ClassifierRole)+ owner::Interface ;
Message ::= (message::Message)+ activator::Message (interaction::Interaction)+ receiver::ClassifierRole sender::ClassifierRole specification::Request ;
ClassifierRole ::= (associationEndRole::AssociationEndRole)+ receiverMess::Message senderMess::Message (availableFeature::Operation)+ base::Interface ;
AssociationRole ::= connection::AssociationEndRole ;
Package ::= ownedEltColl::CollaborationPackage (ownedEltInt::InteractionPackage)+ ;
Collaboration ::= (interaction::Interaction)+ ownedEltAss::AssociationRole ownedEltClass::ClassifierRole ;
InteractionPackage ::= providerClause::ProviderClause ownedElt::Interaction ;
Interaction ::= context::Collaboration (message::Message)+ ;
CollaborationPackage ::= ownedElt::Collaboration ;
AssociationEndRole ::= associationRole::AssociationRole type::ClassifierRole ;
ProviderClause ::= Package ;
 ProviderClause ::= ownedEltColl::CollaborationPackage (ownedEltInt::InteractionPackage)+ ;
--------------------uml::extended.bgf--------------------
Attribute ::= initialValue::Expression isKey::Boolean isUnique::Boolean ;
AssociationEnd ::= isNavigable::Boolean isOrdered::Boolean aggregation::AggregationKind multiplicity::Multiplicity changeable::ChangeableKind TargetScope::ScopeKind rfIntegrety::RlIntegretyKind rlIntegrety::RlIntegretyKind ;
Class ::= isActive::Boolean mutliplicity::Multiplicity (key::Key)+ ;
ModelElement ::= AssociationEnd ;
 ModelElement ::= Namespace ;
 ModelElement ::= Key ;
 ModelElement ::= Feature ;
 ModelElement ::= name::Name ;
--------------------uml::fragment.bgf--------------------
SimpleState ::= stateMachine::StateMachine internal::Transition ;
FinalState ::= stateMachine::StateMachine internal::Transition ;
Dependency ::= supplier::StateMachine client::Class stereotype::Stereotype ;
CompositeState ::= subvertex::StateVertex ;
Class ::= parent::Generalization child::Generalization dependency::Dependency ;
StateMachine ::= context::Class top::State ;
Transition ::= trigger::Event source::StateVertex target::StateVertex ;
StateVertex ::= State ;
 StateVertex ::= PseudoState ;
 StateVertex ::= compositeState::CompositeState ;
PseudoState ::= compositeState::CompositeState ;
Stereotype ::= baseClass::String extendedElement::Dependency ;
State ::= CompositeState ;
 State ::= SimpleState ;
 State ::= FinalState ;
 State ::= stateMachine::StateMachine internal::Transition ;
--------------------uml::oocm.bgf--------------------
Attribute ::= initialValue::String ;
NameSpace ::= Classifier ;
 NameSpace ::= name::String ;
BehavioralFeature ::= Operation ;
 BehavioralFeature ::= isQuery::Boolean ;
StructuralFeature ::= Attribute ;
 StructuralFeature ::= multiplicity::MultiplicityType isChangeable::Boolean targetScope::ScopeKind ;
GeneralizableElement ::= Classifier ;
 GeneralizableElement ::= isRoot::Boolean isLeaf::Boolean isAbstract::Boolean ;
MultiplicityType ::= lower::Integer upper::Integer isOrdered::Boolean isUnique::Boolean ;
Class ::= isActive::Boolean ;
ScopeKind ::= (sk_instance_level::ε) | (sk_classifier_level::ε) ;
Operation ::= isRoot::Boolean isLeaf::Boolean isAbstract::Boolean specification::String ;
Feature ::= StructuralFeature ;
 Feature ::= BehavioralFeature ;
 Feature ::= ownerScope::ScopeKind visibility::VisibilityKind owner::Classifier ;
VisibilityKind ::= (vk_public_vis::ε) | (vk_private_vis::ε) | (vk_protected_vis::ε) ;
ModelElement ::= Feature ;
 ModelElement ::= NameSpace ;
 ModelElement ::= GeneralizableElement ;
 ModelElement ::= name::String ;
Classifier ::= Class ;
 Classifier ::= (feature::Feature)+ ;
--------------------uml::reuse.bgf--------------------
Dependency ::= ReuseContract ;
 Dependency ::= owningDependency::Dependency (subDependency::Dependency)+ ;
CompositeProvider ::= subcontract::ReuseContract ;
ReuseContract ::= supplier::ProviderClause client::ReuserClause ;
CompositeReuser ::= (subreuser::ReuserClause)+ ;
--------------------uml::simple.bgf--------------------
Attribute ::= owner::Class type::Classifier ;
PrimitiveDataType ::= (typeOpposite::Attribute)+ ;
Class ::= (attribute::Attribute)+ (general::Class)+ (generalOpposite::Class)+ (reverse::Association)+ (forward::Association)+ ;
Package ::= (elements::PackageElement)+ ;
Association ::= source::Class destination::Class ;
--------------------uml::statecharts.bgf--------------------
Event ::= (evt_container::Transition)+ (targets::State)+ ;
CompositeState ::= (subVertexes::StateVertex)+ isConcurrent::Boolean ;
StateMachine ::= (transitions::Transition)+ (top::State)+ ;
Guard ::= gua_container::Transition expression::BooleanExpression ;
StateVertex ::= State ;
 StateVertex ::= sv_container::CompositeState (outgoing::Transition)+ (incoming::Transition)+ ;
Transition ::= transSM_container::StateMachine transS_container::State trigger::Event guard::Guard source::StateVertex target::StateVertex ;
State ::= CompositeState ;
 State ::= state_container::StateMachine (internalTransitions::Transition)+ (deferrableEvents::Event)+ ;
BooleanExpression ::= value::String ;
--------------------uml::stereo.bgf--------------------
Multiplicity ::= value::String ;
TagDefinition ::= tagType::String multiplicity::Multiplicity (typedValue::TaggedValue)+ owner::Stereotype ;
Constraint ::= (constrainedElement::ModelElement)+ constrainedStereotype::Stereotype ;
Name ::= value::String ;
TaggedValue ::= dataValue::String (referenceValue::ModelElement)+ type::TagDefinition ;
ModelElement ::= TagDefinition ;
 ModelElement ::= (referenceTag::TaggedValue)+ (stereotype::Stereotype)+ (constraint::Constraint)+ (taggedValue::TaggedValue)+ ;
Geometry ::= value::String ;
Stereotype ::= icon::Geometry (baseClass::Name)+ (definedTag::TagDefinition)+ (stereotypeConstraint::Constraint)+ (extendedElement::ModelElement)+ ;
--------------------uml::uml-uc.bgf--------------------
UseCaseInstance ::= (classifier::Classifier)+ ;
Extend ::= condition::BooleanExpression extension::UseCase base::UseCase (extensionPoint::ExtensionPoint)+ ;
Include ::= addition::UseCase base::UseCase ;
UseCase ::= (extensionPoint::String)+ includeAddition::Include includeBase::Include extendExtension::Extend extendBase::Extend (extensionPoints::ExtensionPoint)+ ;
LocationReference ::= value::String ;
Actor ::= (instance::Instance)+ ;
Instance ::= UseCaseInstance ;
 Instance ::= (classifier::Classifier)+ ;
ExtensionPoint ::= location::LocationReference (extend::Extend)+ (useCase::UseCase)+ ;
Classifier ::= Actor ;
 Classifier ::= UseCase ;
 Classifier ::= (instance::Instance)+ ;
BooleanExpression ::= value::String ;
--------------------uml::uml2.bgf--------------------
Constraint ::= InteractionConstraint ;
 Constraint ::= IntervalConstraint ;
 Constraint ::= context::Namespace namespace::Namespace specification::ValueSpecification (constrainedElement::Element)+ ;
CommunicationPath ::= isDerived::Boolean (ownedEnd::Property)+ (endType::Type)+ memberEnd::Property ;
ExecutionEnvironment ::= (nestedNode::Node)+ ;
RaiseExceptionAction ::= exception::InputPin ;
ReadSelfAction ::= result::OutputPin ;
ConnectableElementTemplateParameter ::= signature::TemplateSignature parameteredElement::ParameterableElement ownedParameteredElement::ParameterableElement default::ParameterableElement ownedDefault::ParameterableElement ;
Property ::= ExtensionEnd ;
 Property ::= Port ;
 Property ::= default::String isComposite::Boolean isDerived::Boolean class_::Class opposite::Property isDerivedUnion::Boolean owningAssociation::Association (redefinedProperty::Property)+ (subsettedProperty::Property)+ datatype::DataType association::Association aggregation::AggregationKind defaultValue::ValueSpecification (qualifier::Property)+ associationEnd::Property ;
Interaction ::= (lifeline::Lifeline)+ (message::Message)+ (fragment::InteractionFragment)+ (formalGate::Gate)+ ;
Artifact ::= DeploymentSpecification ;
 Artifact ::= fileName::String (nestedArtifact::Artifact)+ (manifestation::Manifestation)+ (ownedOperation::Operation)+ (ownedAttribute::Property)+ ;
Permission ::= (client::NamedElement)+ (supplier::NamedElement)+ ;
EventOccurrence ::= Stop ;
 EventOccurrence ::= (startExec::ExecutionOccurrence)+ (finishExec::ExecutionOccurrence)+ (toAfter::GeneralOrdering)+ (toBefore::GeneralOrdering)+ ;
Gate ::= receiveMessage::Message sendMessage::Message ;
ExecutionOccurrence ::= start::EventOccurrence finish::EventOccurrence (behavior::Behavior)+ ;
Message ::= messageKind::MessageKind messageSort::MessageSort receiveEvent::MessageEnd sendEvent::MessageEnd connector::Connector interaction::Interaction signature::NamedElement (argument::ValueSpecification)+ ;
TestIdentityAction ::= first::InputPin second::InputPin result::OutputPin ;
LoopNode ::= isTestedFirst::Boolean (bodyPart::ActivityNode)+ (setupPart::ActivityNode)+ decider::OutputPin (test::ActivityNode)+ (result::OutputPin)+ (loopVariable::OutputPin)+ (bodyOutput::OutputPin)+ (loopVariableInput::InputPin)+ ;
VisibilityKind ::= (package::ε) | (private::ε) | (protected::ε) | (public::ε) ;
Realization ::= Substitution ;
 Realization ::= Implementation ;
 Realization ::= abstraction::Component realizingClassifier::Classifier ;
Deployment ::= (deployedArtifact::DeployedArtifact)+ location::DeploymentTarget (configuration::DeploymentSpecification)+ ;
Interval ::= DurationInterval ;
 Interval ::= TimeInterval ;
 Interval ::= (min::ValueSpecification)+ (max::ValueSpecification)+ ;
Component ::= isIndirectlyInstantiated::Boolean (required::Interface)+ (provided::Interface)+ (realization::Realization)+ (ownedMember::PackageableElement)+ ;
FinalState ::= isComposite::Boolean isOrthogonal::Boolean isSimple::Boolean isSubmachineState::Boolean submachine::StateMachine (connection::ConnectionPointReference)+ redefinedState::State (deferrableTrigger::Trigger)+ (region::Region)+ entry::Activity exit::Activity doActivity::Activity stateInvariant::Constraint ;
ReadExtentAction ::= result::OutputPin classifier::Classifier ;
CollaborationOccurrence ::= type::Collaboration (roleBinding::Dependency)+ ;
Actor ::= (feature::Feature)+ isAbstract::Boolean (inheritedMember::NamedElement)+ (general::Classifier)+ (generalization::Generalization)+ (attribute::Property)+ (redefinedClassifier::Classifier)+ (substitution::Substitution)+ (powertypeExtent::GeneralizationSet)+ (ownedUseCase::UseCase)+ (useCase::UseCase)+ representation::CollaborationOccurrence (occurrence::CollaborationOccurrence)+ ;
ExpansionKind ::= (parallel::ε) | (iterative::ε) | (stream::ε) ;
TimeInterval ::= (min::ValueSpecification)+ (max::ValueSpecification)+ ;
Implementation ::= contract::Interface implementingClassifier::BehavioredClassifier ;
SignalTrigger ::= (signal::Signal)+ ;
ReclassifyObjectAction ::= isReplaceAll::Boolean (oldClassifier::Classifier)+ (newClassifier::Classifier)+ object::InputPin ;
TemplateParameterSubstitution ::= formal::TemplateParameter templateBinding::TemplateBinding (actual::ParameterableElement)+ (ownedActual::ParameterableElement)+ ;
OperationTemplateParameter ::= signature::TemplateSignature parameteredElement::ParameterableElement ownedParameteredElement::ParameterableElement default::ParameterableElement ownedDefault::ParameterableElement ;
Signal ::= (ownedAttribute::Property)+ ;
ChangeTrigger ::= changeExpression::ValueSpecification ;
SendSignalAction ::= target::InputPin signal::Signal ;
StructuredActivityNode ::= ConditionalNode ;
 StructuredActivityNode ::= LoopNode ;
 StructuredActivityNode ::= ExpansionRegion ;
 StructuredActivityNode ::= (variable::Variable)+ (containedNode::ActivityNode)+ (containedEdge::ActivityEdge)+ mustIsolate::Boolean ;
PrimitiveFunction ::= body::String language::String ;
ProtocolConformance ::= specificMachine::ProtocolStateMachine generalMachine::ProtocolStateMachine ;
GeneralOrdering ::= before::EventOccurrence after::EventOccurrence ;
InstanceValue ::= instance::InstanceSpecification ;
OpaqueExpression ::= Expression ;
 OpaqueExpression ::= body::String language::String result::Parameter behavior::Behavior ;
Expression ::= symbol::String (operand::ValueSpecification)+ ;
LiteralUnlimitedNatural ::= value::UnlimitedNatural ;
InteractionOperator ::= (consider::ε) | (par::ε) | (opt::ε) | (loop::ε) | (alt::ε) | (break::ε) | (assert::ε) | (strict::ε) | (seq::ε) | (ignore::ε) | (neg::ε) | (critical::ε) ;
ReadLinkObjectEndQualifierAction ::= object::InputPin result::OutputPin qualifier::Property ;
Duration ::= firstTime::Boolean event::NamedElement ;
RemoveStructuralFeatureValueAction ::= value::InputPin ;
PackageMerge ::= mergingPackage::Package mergedPackage::Package ;
ExtensionPoint ::= useCase::UseCase ;
Reception ::= signal::Signal ;
LiteralInteger ::= value::Integer ;
CreateLinkObjectAction ::= result::OutputPin ;
LinkEndData ::= LinkEndCreationData ;
 LinkEndData ::= value::InputPin end::Property (qualifier::QualifierValue)+ ;
AddVariableValueAction ::= isReplaceAll::Boolean insertAt::InputPin ;
ParameterDirectionKind ::= (in::ε) | (inout::ε) | (out::ε) | (return::ε) ;
TransitionKind ::= (internal::ε) | (local::ε) | (external::ε) ;
StringExpression ::= (subExpression::StringExpression)+ owningExpression::StringExpression ;
ReadIsClassifiedObjectAction ::= isDirect::Boolean classifier::Classifier result::OutputPin object::InputPin ;
RemoveVariableValueAction ::= value::InputPin ;
PseudostateKind ::= (deepHistory::ε) | (shallowHistory::ε) | (choice::ε) | (join::ε) | (exitPoint::ε) | (terminate::ε) | (fork::ε) | (junction::ε) | (initial::ε) | (entryPoint::ε) ;
Port ::= isBehavior::Boolean isService::Boolean (required::Interface)+ (redefinedPort::Port)+ (provided::Interface)+ protocol::ProtocolStateMachine ;
ElementImport ::= visibility::VisibilityKind alias::String importedElement::PackageableElement importingNamespace::Namespace ;
PrimitiveType ::= (ownedAttribute::Property)+ (ownedOperation::Operation)+ ;
ReplyAction ::= replyToCall::CallTrigger (replyValue::InputPin)+ returnInformation::InputPin ;
Variable ::= scope::StructuredActivityNode ;
Generalization ::= specific::Classifier general::Classifier isSubstitutable::Boolean (generalizationSet::GeneralizationSet)+ ;
DurationInterval ::= (min::ValueSpecification)+ (max::ValueSpecification)+ ;
LiteralBoolean ::= value::Boolean ;
AssociationClass ::= (ownedOperation::Operation)+ (superClass::Class)+ (extension::Extension)+ (nestedClassifier::Classifier)+ isActive::Boolean (ownedReception::Reception)+ isDerived::Boolean (ownedEnd::Property)+ (endType::Type)+ memberEnd::Property ;
StateMachine ::= ProtocolStateMachine ;
 StateMachine ::= (region::Region)+ (connectionPoint::Pseudostate)+ extendedStateMachine::StateMachine stateMachine_redefinitionContext::BehavioredClassifier ;
CombinedFragment ::= interactionOperator::InteractionOperator (operand::InteractionOperand)+ (cfragmentGate::Gate)+ ;
CreateObjectAction ::= classifier::Classifier result::OutputPin ;
Clause ::= (test::ActivityNode)+ (body::ActivityNode)+ (predecessorClause::Clause)+ (successorClause::Clause)+ decider::OutputPin (bodyOutput::OutputPin)+ ;
StartOwnedBehaviorAction ::= object::InputPin ;
TemplateBinding ::= boundElement::TemplateableElement signature::TemplateSignature (parameterSubstitution::TemplateParameterSubstitution)+ ;
Profile ::= (ownedStereotype::Stereotype)+ (metaclassReference::ElementImport)+ (metamodelReference::PackageImport)+ ;
Parameter ::= operation::Operation default::String direction::ParameterDirectionKind defaultValue::ValueSpecification isException::Boolean isStream::Boolean effect::ParameterEffectKind (parameterSet::ParameterSet)+ ;
ConditionalNode ::= isDeterminate::Boolean isAssured::Boolean (clause::Clause)+ (result::OutputPin)+ ;
Include ::= includingCase::UseCase addition::UseCase ;
EnumerationLiteral ::= enumeration::Enumeration ;
Abstraction ::= Realization ;
 Abstraction ::= Manifestation ;
 Abstraction ::= mapping::OpaqueExpression ;
ValuePin ::= value::ValueSpecification ;
ReadLinkObjectEndAction ::= object::InputPin end::Property result::OutputPin ;
Usage ::= (client::NamedElement)+ (supplier::NamedElement)+ ;
LiteralString ::= value::String ;
AcceptCallAction ::= returnInformation::OutputPin ;
ActivityPartition ::= isDimension::Boolean isExternal::Boolean (containedEdge::ActivityEdge)+ (containedNode::ActivityNode)+ (subgroup::ActivityPartition)+ superPartition::ActivityPartition represents::Element ;
InteractionOperand ::= guard::InteractionConstraint (fragment::InteractionFragment)+ ;
Device ::= (nestedNode::Node)+ ;
AggregationKind ::= (composite::ε) | (none::ε) | (shared::ε) ;
Transition ::= ProtocolTransition ;
 Transition ::= kind::TransitionKind container::Region source::Vertex target::Vertex redefinedTransition::Transition (trigger::Trigger)+ guard::Constraint effect::Activity ;
Pseudostate ::= kind::PseudostateKind ;
ExpansionRegion ::= mode::ExpansionKind (outputElement::ExpansionNode)+ (inputElement::ExpansionNode)+ ;
State ::= FinalState ;
 State ::= isComposite::Boolean isOrthogonal::Boolean isSimple::Boolean isSubmachineState::Boolean submachine::StateMachine (connection::ConnectionPointReference)+ redefinedState::State (deferrableTrigger::Trigger)+ (region::Region)+ entry::Activity exit::Activity doActivity::Activity stateInvariant::Constraint ;
InteractionConstraint ::= minint::ValueSpecification maxint::ValueSpecification ;
ConnectorEnd ::= definingEnd::Property role::ConnectableElement partWithPort::Property ;
JoinNode ::= isCombineDuplicate::Boolean joinSpec::ValueSpecification ;
Dependency ::= Permission ;
 Dependency ::= Usage ;
 Dependency ::= Abstraction ;
 Dependency ::= Deployment ;
 Dependency ::= (client::NamedElement)+ (supplier::NamedElement)+ ;
PackageImport ::= ProfileApplication ;
 PackageImport ::= visibility::VisibilityKind importedPackage::Package importingNamespace::Namespace ;
ClearAssociationAction ::= object::InputPin association::Association ;
CallConcurrencyKind ::= (guarded::ε) | (concurrent::ε) | (sequential::ε) ;
TimeExpression ::= firstTime::Boolean event::NamedElement ;
InteractionOccurrence ::= PartDecomposition ;
 InteractionOccurrence ::= refersTo::Interaction (actualGate::Gate)+ (argument::InputPin)+ ;
ConnectorKind ::= (delegation::ε) | (assembly::ε) ;
Association ::= Extension ;
 Association ::= CommunicationPath ;
 Association ::= AssociationClass ;
 Association ::= isDerived::Boolean (ownedEnd::Property)+ (endType::Type)+ memberEnd::Property ;
ClearVariableAction ::= variable::Variable ;
ActivityParameterNode ::= parameter::Parameter ;
CallTrigger ::= operation::Operation ;
InformationFlow ::= (realization::Relationship)+ (conveyed::Classifier)+ ;
ReadStructuralFeatureAction ::= result::OutputPin ;
InterruptibleActivityRegion ::= (interruptingEdge::ActivityEdge)+ (containedNode::ActivityNode)+ ;
Class ::= Stereotype ;
 Class ::= Behavior ;
 Class ::= Component ;
 Class ::= AssociationClass ;
 Class ::= Node ;
 Class ::= (ownedOperation::Operation)+ (superClass::Class)+ (extension::Extension)+ (nestedClassifier::Classifier)+ isActive::Boolean (ownedReception::Reception)+ ;
Continuation ::= setting::Boolean ;
Action ::= CreateObjectAction ;
 Action ::= DestroyObjectAction ;
 Action ::= TestIdentityAction ;
 Action ::= ReadSelfAction ;
 Action ::= StructuralFeatureAction ;
 Action ::= LinkAction ;
 Action ::= ClearAssociationAction ;
 Action ::= VariableAction ;
 Action ::= ApplyFunctionAction ;
 Action ::= InvocationAction ;
 Action ::= ReadExtentAction ;
 Action ::= ReclassifyObjectAction ;
 Action ::= ReadIsClassifiedObjectAction ;
 Action ::= StartOwnedBehaviorAction ;
 Action ::= ReadLinkObjectEndAction ;
 Action ::= ReadLinkObjectEndQualifierAction ;
 Action ::= AcceptEventAction ;
 Action ::= ReplyAction ;
 Action ::= RaiseExceptionAction ;
 Action ::= StructuredActivityNode ;
 Action ::= effect::String (output::OutputPin)+ (input::InputPin)+ context::Classifier (localPrecondition::Constraint)+ (localPostcondition::Constraint)+ ;
Stereotype ::= (ownedOperation::Operation)+ (superClass::Class)+ (extension::Extension)+ (nestedClassifier::Classifier)+ isActive::Boolean (ownedReception::Reception)+ ;
DestroyObjectAction ::= isDestroyLinks::Boolean isDestroyOwnedObjects::Boolean target::InputPin ;
StateInvariant ::= invariant::Constraint ;
ProtocolStateMachine ::= (conformance::ProtocolConformance)+ ;
InstanceSpecification ::= EnumerationLiteral ;
 InstanceSpecification ::= (slot::Slot)+ (classifier::Classifier)+ specification::ValueSpecification ;
Operation ::= (ownedParameter::Parameter)+ class_::Class isQuery::Boolean datatype::DataType (precondition::Constraint)+ (postcondition::Constraint)+ (redefinedOperation::Operation)+ bodyCondition::Constraint ;
CallBehaviorAction ::= behavior::Behavior ;
ExpansionNode ::= regionAsOutput::ExpansionRegion regionAsInput::ExpansionRegion ;
BroadcastSignalAction ::= signal::Signal ;
InformationItem ::= (represented::Classifier)+ ;
Comment ::= body::String (annotatedElement::Element)+ bodyExpression::StringExpression ;
TemplateSignature ::= RedefinableTemplateSignature ;
 TemplateSignature ::= (parameter::TemplateParameter)+ (ownedParameter::TemplateParameter)+ (nestedSignature::TemplateSignature)+ nestingSignature::TemplateSignature template::TemplateableElement ;
ExtensionEnd ::= default::String isComposite::Boolean isDerived::Boolean class_::Class opposite::Property isDerivedUnion::Boolean owningAssociation::Association (redefinedProperty::Property)+ (subsettedProperty::Property)+ datatype::DataType association::Association aggregation::AggregationKind defaultValue::ValueSpecification (qualifier::Property)+ associationEnd::Property ;
Extend ::= extendedCase::UseCase extension::UseCase condition::Constraint (extensionLocation::ExtensionPoint)+ ;
ConnectionPointReference ::= (entry::Pseudostate)+ (exit::Pseudostate)+ ;
UseCase ::= (include::Include)+ (extend::Extend)+ (extensionPoint::ExtensionPoint)+ (subject::Classifier)+ ;
PartDecomposition ::= refersTo::Interaction (actualGate::Gate)+ (argument::InputPin)+ ;
Activity ::= body::String language::String (edge::ActivityEdge)+ (group::ActivityGroup)+ (node::ActivityNode)+ (action::Action)+ (structuredNode::StructuredActivityNode)+ isSingleExecution::Boolean isReadOnly::Boolean ;
TemplateParameter ::= OperationTemplateParameter ;
 TemplateParameter ::= ClassifierTemplateParameter ;
 TemplateParameter ::= ConnectableElementTemplateParameter ;
 TemplateParameter ::= signature::TemplateSignature parameteredElement::ParameterableElement ownedParameteredElement::ParameterableElement default::ParameterableElement ownedDefault::ParameterableElement ;
ParameterEffectKind ::= (update::ε) | (read::ε) | (delete::ε) | (create::ε) ;
DurationObservationAction ::= (duration::Duration)+ ;
ProtocolTransition ::= postCondition::Constraint (referred::Operation)+ preCondition::Constraint ;
ObjectFlow ::= isMulticast::Boolean isMultireceive::Boolean transformation::Behavior selection::Behavior ;
Connector ::= type::Association (redefinedConnector::Connector)+ end::ConnectorEnd kind::ConnectorKind (contract::Behavior)+ ;
LinkEndCreationData ::= isReplaceAll::Boolean insertAt::InputPin ;
ObjectNodeOrderingKind ::= (FIFO::ε) | (unordered::ε) | (ordered::ε) | (LIFO::ε) ;
AcceptEventAction ::= AcceptCallAction ;
 AcceptEventAction ::= (trigger::Trigger)+ (result::OutputPin)+ ;
ReadVariableAction ::= result::OutputPin ;
Enumeration ::= (ownedLiteral::EnumerationLiteral)+ ;
ReadLinkAction ::= result::OutputPin ;
GeneralizationSet ::= isCovering::Boolean isDisjoint::Boolean powertype::Classifier (generalization::Generalization)+ ;
Package ::= Profile ;
 Package ::= Model ;
 Package ::= (nestedPackage::Package)+ nestingPackage::Package (ownedType::Type)+ (ownedMember::PackageableElement)+ (packageMerge::PackageMerge)+ (appliedProfile::ProfileApplication)+ (packageExtension::PackageMerge)+ ;
MessageSort ::= (synchSignal::ε) | (synchCall::ε) | (asynchCall::ε) | (asynchSignal::ε) ;
Collaboration ::= (collaborationRole::ConnectableElement)+ ;
DataType ::= Enumeration ;
 DataType ::= PrimitiveType ;
 DataType ::= (ownedAttribute::Property)+ (ownedOperation::Operation)+ ;
Node ::= Device ;
 Node ::= ExecutionEnvironment ;
 Node ::= (nestedNode::Node)+ ;
Stop ::= (startExec::ExecutionOccurrence)+ (finishExec::ExecutionOccurrence)+ (toAfter::GeneralOrdering)+ (toBefore::GeneralOrdering)+ ;
CallOperationAction ::= operation::Operation target::InputPin ;
Extension ::= isRequired::Boolean metaclass::Class ;
DeploymentSpecification ::= deploymentLocation::String executionLocation::String ;
DecisionNode ::= decisionInput::Behavior ;
Slot ::= owningInstance::InstanceSpecification (value::ValueSpecification)+ definingFeature::StructuralFeature ;
SendObjectAction ::= target::InputPin request::InputPin ;
Substitution ::= contract::Classifier substitutingClassifier::Classifier ;
ApplyFunctionAction ::= function::PrimitiveFunction (argument::InputPin)+ (result::OutputPin)+ ;
ExceptionHandler ::= protectedNode::ExecutableNode handlerBody::ExecutableNode exceptionInput::ObjectNode (exceptionType::Classifier)+ ;
MessageKind ::= (found::ε) | (lost::ε) | (unknown::ε) | (complete::ε) ;
ParameterSet ::= (parameter::Parameter)+ (condition::Constraint)+ ;
Interface ::= (ownedAttribute::Property)+ (ownedOperation::Operation)+ (redefinedInterface::Interface)+ (nestedClassifier::Classifier)+ (ownedReception::Reception)+ protocol::ProtocolStateMachine ;
TimeObservationAction ::= (now::TimeExpression)+ ;
Region ::= (subvertex::Vertex)+ (transition::Transition)+ stateMachine::StateMachine state::State extendedRegion::Region ;
Lifeline ::= (coveredBy::InteractionFragment)+ represents::ConnectableElement interaction::Interaction selector::OpaqueExpression decomposedAs::PartDecomposition ;
AddStructuralFeatureValueAction ::= isReplaceAll::Boolean insertAt::InputPin ;
ClassifierTemplateParameter ::= allowSubstitutable::Boolean ;
RedefinableTemplateSignature ::= (redefinitionContext::Classifier)+ isLeaf::Boolean (parameter::TemplateParameter)+ (ownedParameter::TemplateParameter)+ (nestedSignature::TemplateSignature)+ nestingSignature::TemplateSignature template::TemplateableElement ;
TimeTrigger ::= isRelative::Boolean when::ValueSpecification ;
ControlFlow ::= activity::Activity source::ActivityNode target::ActivityNode (inGroup::ActivityGroup)+ guard::ValueSpecification (redefinedElement::ActivityEdge)+ inStructuredNode::StructuredActivityNode (inPartition::ActivityPartition)+ weight::ValueSpecification interrupts::InterruptibleActivityRegion ;
Model ::= viewpoint::String ;
QualifierValue ::= qualifier::Property value::InputPin ;
ProfileApplication ::= importedProfile::Profile ;
Manifestation ::= utilizedElement::PackageableElement ;
ClearStructuralFeatureAction ::= structuralFeature::StructuralFeature object::InputPin ;
--------------------uml::umldi-2.0.bgf--------------------
SendAction ::= signal::Signal ;
Constraint ::= (constrainedElement::ModelElement)+ body::BooleanExpression ;
Attribute ::= associationEnd::AssociationEnd initialValue::Expression ;
ObjectSetExpression ::= language::String body::String ;
LinkObject ::= association::Association connection::LinkEnd ;
TemplateArgument ::= binding::Binding modelElement::ModelElement ;
AssociationRole ::= base::Association (conformingLink::Link)+ (message::Message)+ multiplicity::Multiplicity ;
ArgListsExpression ::= language::String body::String ;
AggregationKind ::= (ak_none::ε) | (ak_aggregate::ε) | (ak_composite::ε) ;
Property ::= key::String value::String ;
Transition ::= target::StateVertex trigger::Event stateMachine::StateMachine source::StateVertex effect::Action guard::Guard ;
Pseudostate ::= kind::PseudostateKind ;
Artifact ::= (powertypeRange::Generalization)+ (feature::Feature)+ ;
CreateAction ::= instantiation::Classifier ;
Interaction ::= (message::Message)+ context::Collaboration ;
Point ::= x::Double y::Double ;
Permission ::= (client::ModelElement)+ (supplier::ModelElement)+ ;
TextElement ::= text::String ;
TagDefinition ::= owner::Stereotype tagType::String multiplicity::Multiplicity ;
UseCaseInstance ::= (ownedInstance::Instance)+ (linkEnd::LinkEnd)+ (classifier::Classifier)+ componentInstance::ComponentInstance (slot::AttributeLink)+ (ownedLink::Link)+ ;
Dependency ::= Abstraction ;
 Dependency ::= Usage ;
 Dependency ::= Binding ;
 Dependency ::= Permission ;
 Dependency ::= (client::ModelElement)+ (supplier::ModelElement)+ ;
SimpleSemanticModelElement ::= typeInfo::String ;
ClassifierInState ::= (inState::State)+ type::Classifier ;
CompositeState ::= SubmachineState ;
 CompositeState ::= (subvertex::StateVertex)+ isConcurrent::Boolean ;
CallConcurrencyKind ::= (cck_sequential::ε) | (cck_guarded::ε) | (cck_concurrent::ε) ;
ScopeKind ::= (sk_instance::ε) | (sk_classifier::ε) ;
Message ::= interaction::Interaction (conformingStimulus::Stimulus)+ action::Action communicationConnection::AssociationRole activator::Message receiver::ClassifierRole sender::ClassifierRole (predecessor::Message)+ ;
MappingExpression ::= language::String body::String ;
VisibilityKind ::= (vk_public::ε) | (vk_protected::ε) | (vk_private::ε) | (vk_package::ε) ;
Binding ::= (argument::TemplateArgument)+ ;
TimeExpression ::= language::String body::String ;
ObjectFlowState ::= type::Classifier (parameter::Parameter)+ isSynch::Boolean ;
StubState ::= referenceState::String ;
Association ::= AssociationRole ;
 Association ::= AssociationClass ;
 Association ::= connection::AssociationEnd ;
LinkEnd ::= link::Link (qualifiedValue::AttributeLink)+ instance::Instance associationEnd::AssociationEnd ;
Polyline ::= waypoints::BezierPoint closed::Boolean ;
Object ::= LinkObject ;
 Object ::= (ownedInstance::Instance)+ (linkEnd::LinkEnd)+ (classifier::Classifier)+ componentInstance::ComponentInstance (slot::AttributeLink)+ (ownedLink::Link)+ ;
ActivityGraph ::= (partition::Partition)+ ;
MultiplicityRange ::= multiplicity::Multiplicity lower::Integer upper::Integer ;
ChangeableKind ::= (ck_changeable::ε) | (ck_frozen::ε) | (ck_addOnly::ε) ;
Component ::= (deploymentLocation::Node)+ (residentElement::ElementResidence)+ (implementation::Artifact)+ ;
Argument ::= action::Action value::Expression ;
FinalState ::= (deferrableEvent::Event)+ (internalTransition::Transition)+ exit::Action doActivity::Action entry::Action stateMachine::StateMachine ;
ActionState ::= CallState ;
 ActionState ::= isDynamic::Boolean dynamicArguments::ArgListsExpression dynamicMultiplicity::Multiplicity ;
Stimulus ::= (argument::Instance)+ communicationLink::Link receiver::Instance dispatchAction::Action sender::Instance ;
Class ::= AssociationClass ;
 Class ::= isActive::Boolean ;
NodeInstance ::= (resident::ComponentInstance)+ ;
TerminateAction ::= (actualArgument::Argument)+ actionSequence::ActionSequence recurrence::IterationExpression target::ObjectSetExpression isAsynchronous::Boolean script::ActionExpression ;
ClassifierRole ::= (availableContents::ModelElement)+ (base::Classifier)+ (conformingInstance::Instance)+ (availableFeature::Feature)+ multiplicity::Multiplicity ;
ProgrammingLanguageDataType ::= expression::TypeExpression ;
Actor ::= (powertypeRange::Generalization)+ (feature::Feature)+ ;
CallAction ::= operation::Operation ;
Stereotype ::= (stereotypeConstraint::Constraint)+ (definedTag::TagDefinition)+ icon::String (baseClass::String)+ ;
BezierPoint ::= base::Point control1::Point control2::Point ;
GraphNode ::= Diagram ;
 GraphNode ::= size::Dimension ;
AssociationEndRole ::= base::AssociationEnd (availableQualifier::Attribute)+ collaborationMultiplicity::Multiplicity ;
Subsystem ::= isInstantiable::Boolean ;
Flow ::= (source::ModelElement)+ (target::ModelElement)+ ;
DiagramLink ::= graphElement::GraphElement diagram::Diagram zoom::Double viewport::Point ;
Partition ::= (contents::ModelElement)+ activityGraph::ActivityGraph ;
Operation ::= concurrency::CallConcurrencyKind isRoot::Boolean isLeaf::Boolean isAbstract::Boolean specification::String ;
DataValue ::= (ownedInstance::Instance)+ (linkEnd::LinkEnd)+ (classifier::Classifier)+ componentInstance::ComponentInstance (slot::AttributeLink)+ (ownedLink::Link)+ ;
Dimension ::= width::Double height::Double ;
TaggedValue ::= type::TagDefinition (referenceValue::ModelElement)+ modelElement::ModelElement (dataValue::String)+ ;
BooleanExpression ::= language::String body::String ;
Comment ::= (annotatedElement::ModelElement)+ body::String ;
GraphConnector ::= graphElement::GraphElement (graphEdge::GraphEdge)+ position::Point ;
Ellipse ::= center::Point radiusX::Double radiusY::Double rotation::Double startAngle::Double endAngle::Double ;
CallEvent ::= operation::Operation ;
Image ::= uri::String mimeType::String ;
InteractionInstanceSet ::= interaction::Interaction context::CollaborationInstanceSet (participatingStimulus::Stimulus)+ ;
AssociationEnd ::= AssociationEndRole ;
 AssociationEnd ::= association::Association (specification::Classifier)+ participant::Classifier (qualifier::Attribute)+ isNavigable::Boolean ordering::OrderingKind aggregation::AggregationKind targetScope::ScopeKind multiplicity::Multiplicity changeability::ChangeableKind ;
Extend ::= (extensionPoint::ExtensionPoint)+ extension::UseCase base::UseCase condition::BooleanExpression ;
Expression ::= BooleanExpression ;
 Expression ::= TypeExpression ;
 Expression ::= MappingExpression ;
 Expression ::= ProcedureExpression ;
 Expression ::= ObjectSetExpression ;
 Expression ::= ActionExpression ;
 Expression ::= IterationExpression ;
 Expression ::= TimeExpression ;
 Expression ::= ArgListsExpression ;
 Expression ::= language::String body::String ;
UseCase ::= (include::Include)+ (extend::Extend)+ (extensionPoint::ExtensionPoint)+ ;
ActionSequence ::= (action::Action)+ ;
IterationExpression ::= language::String body::String ;
Diagram ::= owner::SemanticModelBridge (diagramLink::DiagramLink)+ name::String zoom::Double viewport::Point ;
CallState ::= isDynamic::Boolean dynamicArguments::ArgListsExpression dynamicMultiplicity::Multiplicity ;
SignalEvent ::= signal::Signal ;
ExtensionPoint ::= useCase::UseCase location::String ;
DestroyAction ::= (actualArgument::Argument)+ actionSequence::ActionSequence recurrence::IterationExpression target::ObjectSetExpression isAsynchronous::Boolean script::ActionExpression ;
TemplateParameter ::= template::ModelElement parameter::ModelElement defaultElement::ModelElement ;
Uml1SemanticModelBridge ::= element::Element ;
Reception ::= signal::Signal specification::String isRoot::Boolean isLeaf::Boolean isAbstract::Boolean ;
CoreSemanticModelBridge ::= diagram::Diagram graphElement::GraphElement presentation::String ;
TimeEvent ::= when::TimeExpression ;
Reference ::= referenced::DiagramElement ;
ProcedureExpression ::= language::String body::String ;
SubmachineState ::= SubactivityState ;
 SubmachineState ::= submachine::StateMachine ;
ChangeEvent ::= changeExpression::BooleanExpression ;
ParameterDirectionKind ::= (pdk_in::ε) | (pdk_inout::ε) | (pdk_out::ε) | (pdk_return::ε) ;
UninterpretedAction ::= (actualArgument::Argument)+ actionSequence::ActionSequence recurrence::IterationExpression target::ObjectSetExpression isAsynchronous::Boolean script::ActionExpression ;
OrderingKind ::= (ok_unordered::ε) | (ok_ordered::ε) ;
CollaborationInstanceSet ::= collaboration::Collaboration (constrainingElement::ModelElement)+ (participatingInstance::Instance)+ (interactionInstanceSet::InteractionInstanceSet)+ (participatingLink::Link)+ ;
Enumeration ::= (literal::EnumerationLiteral)+ ;
PseudostateKind ::= (pk_choice::ε) | (pk_deepHistory::ε) | (pk_fork::ε) | (pk_initial::ε) | (pk_join::ε) | (pk_junction::ε) | (pk_shallowHistory::ε) ;
Package ::= Model ;
 Package ::= Subsystem ;
 Package ::= (elementImport::ElementImport)+ ;
ReturnAction ::= (actualArgument::Argument)+ actionSequence::ActionSequence recurrence::IterationExpression target::ObjectSetExpression isAsynchronous::Boolean script::ActionExpression ;
Collaboration ::= (usedCollaboration::Collaboration)+ representedOperation::Operation representedClassifier::Classifier (interaction::Interaction)+ (constrainingElement::ModelElement)+ ;
Node ::= (deployedComponent::Component)+ ;
SubactivityState ::= isDynamic::Boolean dynamicArguments::ArgListsExpression dynamicMultiplicity::Multiplicity ;
ElementImport ::= package::Package importedElement::ModelElement visibility::VisibilityKind alias::String isSpecification::Boolean ;
Multiplicity ::= (range::MultiplicityRange)+ ;
Generalization ::= parent::GeneralizableElement powertype::Classifier child::GeneralizableElement discriminator::String ;
Link ::= LinkObject ;
 Link ::= association::Association connection::LinkEnd ;
Interface ::= (powertypeRange::Generalization)+ (feature::Feature)+ ;
AssociationClass ::= connection::AssociationEnd isActive::Boolean ;
StateMachine ::= ActivityGraph ;
 StateMachine ::= context::ModelElement (submachineState::SubmachineState)+ top::State (transitions::Transition)+ ;
AttributeLink ::= instance::Instance value::Instance linkEnd::LinkEnd attribute::Attribute ;
ComponentInstance ::= (resident::Instance)+ nodeInstance::NodeInstance ;
TypeExpression ::= language::String body::String ;
ActionExpression ::= language::String body::String ;
GraphEdge ::= anchor::GraphConnector waypoints::BezierPoint ;
ElementResidence ::= container::Component resident::ModelElement visibility::VisibilityKind ;
Model ::= (elementImport::ElementImport)+ ;
Parameter ::= type::Classifier behavioralFeature::BehavioralFeature defaultValue::Expression kind::ParameterDirectionKind ;
EnumerationLiteral ::= enumeration::Enumeration ;
Include ::= addition::UseCase base::UseCase ;
Abstraction ::= mapping::MappingExpression ;
Guard ::= transition::Transition expression::BooleanExpression ;
SynchState ::= bound::Integer ;
SubsystemInstance ::= (ownedInstance::Instance)+ (linkEnd::LinkEnd)+ (classifier::Classifier)+ componentInstance::ComponentInstance (slot::AttributeLink)+ (ownedLink::Link)+ ;
Usage ::= (client::ModelElement)+ (supplier::ModelElement)+ ;
Method ::= specification::Operation body::ProcedureExpression ;
--------------------uml::umldi-ag.bgf--------------------
SendAction ::= signal::Signal ;
CallEvent ::= operation::Operation ;
ObjectSetExpression ::= language::String body::String ;
Expression ::= BooleanExpression ;
 Expression ::= ObjectSetExpression ;
 Expression ::= ActionExpression ;
 Expression ::= IterationExpression ;
 Expression ::= TimeExpression ;
 Expression ::= ArgListsExpression ;
 Expression ::= language::String body::String ;
ArgListsExpression ::= language::String body::String ;
ActionSequence ::= (action::Action)+ ;
AggregationKind ::= (ak_none::ε) | (ak_aggregate::ε) | (ak_composite::ε) ;
Transition ::= target::StateVertex trigger::Event stateMachine::StateMachine source::StateVertex effect::Action guard::Guard ;
IterationExpression ::= language::String body::String ;
CallState ::= isDynamic::Boolean dynamicArguments::ArgListsExpression dynamicMultiplicity::Multiplicity ;
Pseudostate ::= kind::PseudostateKind ;
SignalEvent ::= signal::Signal ;
CreateAction ::= instantiation::Classifier ;
DestroyAction ::= (actualArgument::Argument)+ actionSequence::ActionSequence recurrence::IterationExpression target::ObjectSetExpression isAsynchronous::Boolean script::ActionExpression ;
TimeEvent ::= when::TimeExpression ;
ClassifierInState ::= (inState::State)+ type::Classifier ;
SubmachineState ::= SubactivityState ;
 SubmachineState ::= submachine::StateMachine ;
ChangeEvent ::= changeExpression::BooleanExpression ;
CompositeState ::= SubmachineState ;
 CompositeState ::= (subvertex::StateVertex)+ isConcurrent::Boolean ;
ParameterDirectionKind ::= (pdk_in::ε) | (pdk_inout::ε) | (pdk_out::ε) | (pdk_return::ε) ;
CallConcurrencyKind ::= (cck_sequential::ε) | (cck_guarded::ε) | (cck_concurrent::ε) ;
UninterpretedAction ::= (actualArgument::Argument)+ actionSequence::ActionSequence recurrence::IterationExpression target::ObjectSetExpression isAsynchronous::Boolean script::ActionExpression ;
ScopeKind ::= (sk_instance::ε) | (sk_classifier::ε) ;
OrderingKind ::= (ok_unordered::ε) | (ok_ordered::ε) ;
PseudostateKind ::= (pk_choice::ε) | (pk_deepHistory::ε) | (pk_fork::ε) | (pk_initial::ε) | (pk_join::ε) | (pk_junction::ε) | (pk_shallowHistory::ε) ;
VisibilityKind ::= (vk_public::ε) | (vk_protected::ε) | (vk_private::ε) | (vk_package::ε) ;
ReturnAction ::= (actualArgument::Argument)+ actionSequence::ActionSequence recurrence::IterationExpression target::ObjectSetExpression isAsynchronous::Boolean script::ActionExpression ;
TimeExpression ::= language::String body::String ;
ObjectFlowState ::= type::Classifier (parameter::Parameter)+ isSynch::Boolean ;
StubState ::= referenceState::String ;
SubactivityState ::= isDynamic::Boolean dynamicArguments::ArgListsExpression dynamicMultiplicity::Multiplicity ;
ActivityGraph ::= (partition::Partition)+ ;
Multiplicity ::= (range::MultiplicityRange)+ ;
ChangeableKind ::= (ck_changeable::ε) | (ck_frozen::ε) | (ck_addOnly::ε) ;
MultiplicityRange ::= multiplicity::Multiplicity lower::Integer upper::Integer ;
Argument ::= action::Action value::Expression ;
Generalization ::= parent::GeneralizableElement powertype::Classifier child::GeneralizableElement discriminator::String ;
ActionState ::= CallState ;
 ActionState ::= isDynamic::Boolean dynamicArguments::ArgListsExpression dynamicMultiplicity::Multiplicity ;
FinalState ::= (deferrableEvent::Event)+ (internalTransition::Transition)+ exit::Action doActivity::Action entry::Action stateMachine::StateMachine ;
TerminateAction ::= (actualArgument::Argument)+ actionSequence::ActionSequence recurrence::IterationExpression target::ObjectSetExpression isAsynchronous::Boolean script::ActionExpression ;
StateMachine ::= ActivityGraph ;
 StateMachine ::= context::ModelElement (submachineState::SubmachineState)+ top::State (transitions::Transition)+ ;
CallAction ::= operation::Operation ;
ActionExpression ::= language::String body::String ;
Partition ::= (contents::ModelElement)+ activityGraph::ActivityGraph ;
Parameter ::= type::Classifier behavioralFeature::BehavioralFeature defaultValue::Expression kind::ParameterDirectionKind ;
Operation ::= concurrency::CallConcurrencyKind isRoot::Boolean isLeaf::Boolean isAbstract::Boolean specification::String ;
Guard ::= transition::Transition expression::BooleanExpression ;
SynchState ::= bound::Integer ;
BooleanExpression ::= language::String body::String ;
--------------------uml::umldi-c.bgf--------------------
SendAction ::= signal::Signal ;
Attribute ::= associationEnd::AssociationEnd initialValue::Expression ;
InteractionInstanceSet ::= interaction::Interaction context::CollaborationInstanceSet (participatingStimulus::Stimulus)+ ;
ObjectSetExpression ::= language::String body::String ;
AssociationEnd ::= AssociationEndRole ;
 AssociationEnd ::= association::Association (specification::Classifier)+ participant::Classifier (qualifier::Attribute)+ isNavigable::Boolean ordering::OrderingKind aggregation::AggregationKind targetScope::ScopeKind multiplicity::Multiplicity changeability::ChangeableKind ;
LinkObject ::= association::Association connection::LinkEnd ;
Expression ::= BooleanExpression ;
 Expression ::= ObjectSetExpression ;
 Expression ::= ActionExpression ;
 Expression ::= IterationExpression ;
 Expression ::= language::String body::String ;
AssociationRole ::= base::Association (conformingLink::Link)+ (message::Message)+ multiplicity::Multiplicity ;
ActionSequence ::= (action::Action)+ ;
AggregationKind ::= (ak_none::ε) | (ak_aggregate::ε) | (ak_composite::ε) ;
IterationExpression ::= language::String body::String ;
Interaction ::= (message::Message)+ context::Collaboration ;
CreateAction ::= instantiation::Classifier ;
DestroyAction ::= (actualArgument::Argument)+ actionSequence::ActionSequence recurrence::IterationExpression target::ObjectSetExpression isAsynchronous::Boolean script::ActionExpression ;
Reception ::= signal::Signal specification::String isRoot::Boolean isLeaf::Boolean isAbstract::Boolean ;
ParameterDirectionKind ::= (pdk_in::ε) | (pdk_inout::ε) | (pdk_out::ε) | (pdk_return::ε) ;
CallConcurrencyKind ::= (cck_sequential::ε) | (cck_guarded::ε) | (cck_concurrent::ε) ;
UninterpretedAction ::= (actualArgument::Argument)+ actionSequence::ActionSequence recurrence::IterationExpression target::ObjectSetExpression isAsynchronous::Boolean script::ActionExpression ;
CollaborationInstanceSet ::= collaboration::Collaboration (constrainingElement::ModelElement)+ (participatingInstance::Instance)+ (interactionInstanceSet::InteractionInstanceSet)+ (participatingLink::Link)+ ;
ScopeKind ::= (sk_instance::ε) | (sk_classifier::ε) ;
OrderingKind ::= (ok_unordered::ε) | (ok_ordered::ε) ;
Message ::= interaction::Interaction (conformingStimulus::Stimulus)+ action::Action communicationConnection::AssociationRole activator::Message receiver::ClassifierRole sender::ClassifierRole (predecessor::Message)+ ;
ReturnAction ::= (actualArgument::Argument)+ actionSequence::ActionSequence recurrence::IterationExpression target::ObjectSetExpression isAsynchronous::Boolean script::ActionExpression ;
VisibilityKind ::= (vk_public::ε) | (vk_protected::ε) | (vk_private::ε) | (vk_package::ε) ;
Collaboration ::= (usedCollaboration::Collaboration)+ representedOperation::Operation representedClassifier::Classifier (interaction::Interaction)+ (constrainingElement::ModelElement)+ ;
LinkEnd ::= link::Link (qualifiedValue::AttributeLink)+ instance::Instance associationEnd::AssociationEnd ;
Association ::= AssociationRole ;
 Association ::= connection::AssociationEnd ;
Object ::= LinkObject ;
 Object ::= (ownedInstance::Instance)+ (linkEnd::LinkEnd)+ (classifier::Classifier)+ componentInstance::ComponentInstance (slot::AttributeLink)+ (ownedLink::Link)+ ;
Multiplicity ::= (range::MultiplicityRange)+ ;
MultiplicityRange ::= multiplicity::Multiplicity lower::Integer upper::Integer ;
ChangeableKind ::= (ck_changeable::ε) | (ck_frozen::ε) | (ck_addOnly::ε) ;
Argument ::= action::Action value::Expression ;
Generalization ::= parent::GeneralizableElement powertype::Classifier child::GeneralizableElement discriminator::String ;
Stimulus ::= (argument::Instance)+ communicationLink::Link receiver::Instance dispatchAction::Action sender::Instance ;
Link ::= LinkObject ;
 Link ::= association::Association connection::LinkEnd ;
ClassifierRole ::= (availableContents::ModelElement)+ (base::Classifier)+ (conformingInstance::Instance)+ (availableFeature::Feature)+ multiplicity::Multiplicity ;
NodeInstance ::= (resident::ComponentInstance)+ ;
TerminateAction ::= (actualArgument::Argument)+ actionSequence::ActionSequence recurrence::IterationExpression target::ObjectSetExpression isAsynchronous::Boolean script::ActionExpression ;
AttributeLink ::= instance::Instance value::Instance linkEnd::LinkEnd attribute::Attribute ;
CallAction ::= operation::Operation ;
ComponentInstance ::= (resident::Instance)+ nodeInstance::NodeInstance ;
AssociationEndRole ::= base::AssociationEnd (availableQualifier::Attribute)+ collaborationMultiplicity::Multiplicity ;
ActionExpression ::= language::String body::String ;
Parameter ::= type::Classifier behavioralFeature::BehavioralFeature defaultValue::Expression kind::ParameterDirectionKind ;
DataValue ::= (ownedInstance::Instance)+ (linkEnd::LinkEnd)+ (classifier::Classifier)+ componentInstance::ComponentInstance (slot::AttributeLink)+ (ownedLink::Link)+ ;
Operation ::= concurrency::CallConcurrencyKind isRoot::Boolean isLeaf::Boolean isAbstract::Boolean specification::String ;
SubsystemInstance ::= (ownedInstance::Instance)+ (linkEnd::LinkEnd)+ (classifier::Classifier)+ componentInstance::ComponentInstance (slot::AttributeLink)+ (ownedLink::Link)+ ;
BooleanExpression ::= language::String body::String ;
--------------------uml::umldi-mm.bgf--------------------
Subsystem ::= isInstantiable::Boolean ;
Generalization ::= parent::GeneralizableElement powertype::Classifier child::GeneralizableElement discriminator::String ;
Model ::= (elementImport::ElementImport)+ ;
ScopeKind ::= (sk_instance::ε) | (sk_classifier::ε) ;
VisibilityKind ::= (vk_public::ε) | (vk_protected::ε) | (vk_private::ε) | (vk_package::ε) ;
Package ::= Model ;
 Package ::= Subsystem ;
 Package ::= (elementImport::ElementImport)+ ;
ElementImport ::= package::Package importedElement::ModelElement visibility::VisibilityKind alias::String isSpecification::Boolean ;
--------------------uml::umldi-sm.bgf--------------------
SendAction ::= signal::Signal ;
CallEvent ::= operation::Operation ;
ObjectSetExpression ::= language::String body::String ;
Expression ::= BooleanExpression ;
 Expression ::= ObjectSetExpression ;
 Expression ::= ActionExpression ;
 Expression ::= IterationExpression ;
 Expression ::= TimeExpression ;
 Expression ::= language::String body::String ;
ActionSequence ::= (action::Action)+ ;
Transition ::= target::StateVertex trigger::Event stateMachine::StateMachine source::StateVertex effect::Action guard::Guard ;
IterationExpression ::= language::String body::String ;
Pseudostate ::= kind::PseudostateKind ;
SignalEvent ::= signal::Signal ;
CreateAction ::= instantiation::Classifier ;
DestroyAction ::= (actualArgument::Argument)+ actionSequence::ActionSequence recurrence::IterationExpression target::ObjectSetExpression isAsynchronous::Boolean script::ActionExpression ;
Reception ::= signal::Signal specification::String isRoot::Boolean isLeaf::Boolean isAbstract::Boolean ;
TimeEvent ::= when::TimeExpression ;
SubmachineState ::= submachine::StateMachine ;
ChangeEvent ::= changeExpression::BooleanExpression ;
CompositeState ::= SubmachineState ;
 CompositeState ::= (subvertex::StateVertex)+ isConcurrent::Boolean ;
ParameterDirectionKind ::= (pdk_in::ε) | (pdk_inout::ε) | (pdk_out::ε) | (pdk_return::ε) ;
CallConcurrencyKind ::= (cck_sequential::ε) | (cck_guarded::ε) | (cck_concurrent::ε) ;
UninterpretedAction ::= (actualArgument::Argument)+ actionSequence::ActionSequence recurrence::IterationExpression target::ObjectSetExpression isAsynchronous::Boolean script::ActionExpression ;
ScopeKind ::= (sk_instance::ε) | (sk_classifier::ε) ;
PseudostateKind ::= (pk_choice::ε) | (pk_deepHistory::ε) | (pk_fork::ε) | (pk_initial::ε) | (pk_join::ε) | (pk_junction::ε) | (pk_shallowHistory::ε) ;
VisibilityKind ::= (vk_public::ε) | (vk_protected::ε) | (vk_private::ε) | (vk_package::ε) ;
ReturnAction ::= (actualArgument::Argument)+ actionSequence::ActionSequence recurrence::IterationExpression target::ObjectSetExpression isAsynchronous::Boolean script::ActionExpression ;
TimeExpression ::= language::String body::String ;
StubState ::= referenceState::String ;
SimpleState ::= (deferrableEvent::Event)+ (internalTransition::Transition)+ exit::Action doActivity::Action entry::Action stateMachine::StateMachine ;
Argument ::= action::Action value::Expression ;
Generalization ::= parent::GeneralizableElement powertype::Classifier child::GeneralizableElement discriminator::String ;
FinalState ::= (deferrableEvent::Event)+ (internalTransition::Transition)+ exit::Action doActivity::Action entry::Action stateMachine::StateMachine ;
TerminateAction ::= (actualArgument::Argument)+ actionSequence::ActionSequence recurrence::IterationExpression target::ObjectSetExpression isAsynchronous::Boolean script::ActionExpression ;
StateMachine ::= context::ModelElement (submachineState::SubmachineState)+ top::State (transitions::Transition)+ ;
CallAction ::= operation::Operation ;
ActionExpression ::= language::String body::String ;
Parameter ::= type::Classifier behavioralFeature::BehavioralFeature defaultValue::Expression kind::ParameterDirectionKind ;
Operation ::= concurrency::CallConcurrencyKind isRoot::Boolean isLeaf::Boolean isAbstract::Boolean specification::String ;
Guard ::= transition::Transition expression::BooleanExpression ;
SynchState ::= bound::Integer ;
BooleanExpression ::= language::String body::String ;
--------------------uml::umldi-uc.bgf--------------------
Multiplicity ::= (range::MultiplicityRange)+ ;
MultiplicityRange ::= multiplicity::Multiplicity lower::Integer upper::Integer ;
ChangeableKind ::= (ck_changeable::ε) | (ck_frozen::ε) | (ck_addOnly::ε) ;
Attribute ::= associationEnd::AssociationEnd initialValue::Expression ;
Generalization ::= parent::GeneralizableElement powertype::Classifier child::GeneralizableElement discriminator::String ;
AssociationEnd ::= association::Association (specification::Classifier)+ participant::Classifier (qualifier::Attribute)+ isNavigable::Boolean ordering::OrderingKind aggregation::AggregationKind targetScope::ScopeKind multiplicity::Multiplicity changeability::ChangeableKind ;
Extend ::= (extensionPoint::ExtensionPoint)+ extension::UseCase base::UseCase condition::BooleanExpression ;
Link ::= association::Association connection::LinkEnd ;
Expression ::= BooleanExpression ;
 Expression ::= language::String body::String ;
UseCase ::= (include::Include)+ (extend::Extend)+ (extensionPoint::ExtensionPoint)+ ;
NodeInstance ::= (resident::ComponentInstance)+ ;
AggregationKind ::= (ak_none::ε) | (ak_aggregate::ε) | (ak_composite::ε) ;
AttributeLink ::= instance::Instance value::Instance linkEnd::LinkEnd attribute::Attribute ;
Actor ::= (powertypeRange::Generalization)+ (feature::Feature)+ ;
ComponentInstance ::= (resident::Instance)+ nodeInstance::NodeInstance ;
ExtensionPoint ::= useCase::UseCase location::String ;
UseCaseInstance ::= (ownedInstance::Instance)+ (linkEnd::LinkEnd)+ (classifier::Classifier)+ componentInstance::ComponentInstance (slot::AttributeLink)+ (ownedLink::Link)+ ;
ScopeKind ::= (sk_instance::ε) | (sk_classifier::ε) ;
OrderingKind ::= (ok_unordered::ε) | (ok_ordered::ε) ;
Include ::= addition::UseCase base::UseCase ;
VisibilityKind ::= (vk_public::ε) | (vk_protected::ε) | (vk_private::ε) | (vk_package::ε) ;
Association ::= connection::AssociationEnd ;
LinkEnd ::= link::Link (qualifiedValue::AttributeLink)+ instance::Instance associationEnd::AssociationEnd ;
BooleanExpression ::= language::String body::String ;
--------------------uml::yuml.bgf--------------------
NoteAssociation ::= note::Note ;
Cardinality ::= lowerBound::Integer upperBound::Integer ;
Attribute ::= type::String ;
ClassDefinition ::= (attributes::Attribute)+ (methods::Method)+ ;
AssociationType ::= (simpleAssociation::ε) | (aggregation::ε) | (composition::ε) ;
Inheritance ::= source::ClassReference target::ClassReference ;
Model ::= (classes::Class)+ (elements::ModelElement)+ ;
Class ::= name::String ;
ClassReference ::= class::Class stereotype::String definition::ClassDefinition ;
Note ::= (text::String)+ ;
Visibility ::= (unspecified::ε) | (public::ε) | (private::ε) | (protected::ε) | (package::ε) ;
Method ::= (arguments::String)+ ;
Association ::= type::AssociationType sourceCardinality::Cardinality sourceLabel::String navigableSource::Boolean sourceVisibility::Visibility targetCardinality::Cardinality targetLabel::String navigableTarget::Boolean targetVisibility::Visibility ;
--------------------xml::rosendal.bgf--------------------
Text ::= startLine::Integer startColumn::Integer endLine::Integer endColumn::Integer name::String value::String parent::Element ;
Element ::= Root ;
 Element ::= (children::Node)+ ;
Attribute ::= startLine::Integer startColumn::Integer endLine::Integer endColumn::Integer name::String value::String parent::Element ;
Root ::= (children::Node)+ ;
--------------------xml::rascal.bgf--------------------
Namespace ::= (namespace::(prefix::string() uri::string())) | (none::ε) ;
Node ::= (document::(root::Node)) | (attribute::(namespace::Namespace name::string() text::string())) | (element::(namespace::Namespace name::string() children::(Node*))) | (charData::(text::string())) | (cdata::(text::string())) | (comment::(text::string())) | (pi::(target::string() text::string())) | (entityRef::(name::string())) | (charRef::(code::integer())) ;
--------------------xquery::rosendal.bgf--------------------
AttributeNode ::= value::String ;
ElementNode ::= TextNode ;
 ElementNode ::= (nodes::Expression)+ ;
XPath ::= BooleanExp ;
 XPath ::= functionCall::FunctionCall for::For let::Let ;
Let ::= var::String flwor::FLWOR expression::XPath ;
Expression ::= ExecutableExpression ;
 Expression ::= Node ;
 Expression ::= ReturnXPath ;
 Expression ::= parentNode::ElementNode returnEx::Return ;
FunctionCall ::= name::String (parameters::XPath)+ ;
BooleanExp ::= where::Where ;
FLWOR ::= for::For let::Let where::Where orderBy::OrderBy return::Return ;
XQueryProgram ::= (expressions::ExecutableExpression)+ ;
Return ::= flwor::FLWOR (expressions::Expression)+ ;
TextNode ::= (nodes::Expression)+ ;
ReturnXPath ::= XPath ;
 ReturnXPath ::= value::String ;
For ::= var::String flwor::FLWOR expression::XPath ;
Where ::= flwor::FLWOR expression::BooleanExp ;
OrderBy ::= flwor::FLWOR ;
FunctionDeclaration ::= name::String (expression::ExecutableExpression)+ ;
Node ::= ElementNode ;
 Node ::= AttributeNode ;
 Node ::= name::String ;
ExecutableExpression ::= FLWOR ;
 ExecutableExpression ::= FunctionCall ;
 ExecutableExpression ::= FunctionDeclaration ;
 ExecutableExpression ::= xQueryProgram::XQueryProgram functionDeclaration::FunctionDeclaration ;
--------------------xslt::clark.bgf--------------------
attribute-set.element ::= attribute-set::(extension.atts name::qname.datatype (use-attribute-sets::qnames.datatype)? attribute.element*) ;
copy-of.element ::= copy-of::(extension.atts select::expression.datatype) ;
text.element ::= text::(extension.atts (disable-output-escaping::("yes" | "no"))? string()) ;
transform.element ::= transform::stylesheet.model ;
literal-result-element.atts ::= literal-result-element-no-version.atts (version::version)? ;
include.element ::= include::(extension.atts href::string()) ;
import.element ::= import::(extension.atts href::string()) ;
literal-result-element-no-version.atts ::= (avt.datatype | (extension-element-prefixes::prefixes.datatype) | (exclude-result-prefixes::prefixes.datatype) | (use-attribute-sets::qnames.datatype))* ;
fallback.element ::= fallback::(extension.atts template.model) ;
key.element ::= key::(extension.atts name::qname.datatype match::pattern.datatype use::expression.datatype) ;
comment.element ::= comment::(extension.atts template.model) ;
sort.element ::= sort::(extension.atts (select::expression.datatype)? (lang::(string() | expr-avt.datatype))? (data-type::("text" | "number" | qname-but-not-ncname.datatype | expr-avt.datatype))? (order::("ascending" | "descending" | expr-avt.datatype))? (case-order::("upper-first" | "lower-first" | expr-avt.datatype))?) ;
namespace-alias.element ::= namespace-alias::(extension.atts stylesheet-prefix::prefix.datatype result-prefix::prefix.datatype) ;
if.element ::= if::(extension.atts test::expression.datatype template.model) ;
attribute.element ::= attribute::(extension.atts name::(qname.datatype | expr-avt.datatype) (namespace::(string() | brace-avt.datatype))? template.model) ;
apply-templates.element ::= apply-templates::(extension.atts (select::expression.datatype)? (mode::qname.datatype)? (sort.element | with-param.element)*) ;
literal-result-element-as-stylesheet ::= version::version literal-result-element-no-version.atts template.model ;
choose.element ::= choose::(extension.atts when.element+ otherwise.element?) ;
processing-instruction.element ::= processing-instruction::(extension.atts name::(string() | expr-avt.datatype) template.model) ;
strip-space.element ::= strip-space::(extension.atts elements::wildcards.datatype) ;
apply-imports.element ::= apply-imports::extension.atts ;
stylesheet.element ::= stylesheet::stylesheet.model ;
param.element ::= param::(extension.atts name::qname.datatype (select::expression.datatype) | template.model) ;
number.element ::= number::(extension.atts (level::("single" | "multiple" | "any"))? (count::pattern.datatype)? (from::pattern.datatype)? (value::expression.datatype)? (format::avt.datatype)? (lang::(string() | expr-avt.datatype))? (letter-value::("alphabetic" | "traditional" | expr-avt.datatype))? (grouping-separator::(char.datatype | expr-avt.datatype))? (grouping-size::(number.datatype | expr-avt.datatype))?) ;
call-template.element ::= call-template::(extension.atts name::qname.datatype with-param.element*) ;
message.element ::= message::(extension.atts (terminate::("yes" | "no"))? template.model) ;
with-param.element ::= with-param::(extension.atts name::qname.datatype (select::expression.datatype) | template.model) ;
preserve-space.element ::= preserve-space::(extension.atts elements::wildcards.datatype) ;
for-each.element ::= for-each::(extension.atts select::expression.datatype sort.element* template.model) ;
output.element ::= output::(extension.atts (method::("xml" | "html" | "text" | qname-but-not-ncname.datatype))? (version::string())? (encoding::string())? (omit-xml-declaration::("yes" | "no"))? (standalone::("yes" | "no"))? (doctype-public::string())? (doctype-system::string())? (cdata-section-elements::qnames.datatype)? (indent::("yes" | "no"))? (media-type::string())?) ;
element.element ::= element::(extension.atts name::(qname.datatype | expr-avt.datatype) (namespace::(string() | brace-avt.datatype))? (use-attribute-sets::qnames.datatype)? template.model) ;
variable.element ::= variable::(extension.atts name::qname.datatype (select::expression.datatype) | template.model) ;
stylesheet.model ::= extension.atts (id::string())? (extension-element-prefixes::prefixes.datatype)? (exclude-result-prefixes::prefixes.datatype)? version::version import.element* top-level-elements.model ;
when.element ::= when::(extension.atts test::expression.datatype template.model) ;
template.element ::= template::(extension.atts (match::pattern.datatype)? (name::qname.datatype)? (priority::number.datatype)? (mode::qname.datatype)? param.element* template.model) ;
copy.element ::= copy::(extension.atts (use-attribute-sets::qnames.datatype)? template.model) ;
otherwise.element ::= otherwise::(extension.atts template.model) ;
decimal-format.element ::= decimal-format::(extension.atts (name::qname.datatype)? (decimal-separator::char.datatype)? (grouping-separator::char.datatype)? (infinity::string())? (minus-sign::char.datatype)? (NaN::string())? (percent::char.datatype)? (per-mille::char.datatype)? (zero-digit::char.datatype)? (digit::char.datatype)? (pattern-separator::char.datatype)?) ;
value-of.element ::= value-of::(extension.atts select::expression.datatype (disable-output-escaping::("yes" | "no"))?) ;
--------------------xslt::rosendal.bgf--------------------
TextNode ::= value::String ;
Sort ::= select::String ;
AttributeNode ::= name::String parentNode::ElementNode ;
ElementNode ::= RootNode ;
 ElementNode ::= TextNode ;
 ElementNode ::= XSLTNode ;
 ElementNode ::= (nodes::Node)+ ;
If ::= test::String ;
ApplyTemplates ::= select::String ;
Document ::= documentName::String document::RootNode ;
When ::= test::String ;
Template ::= match::String ;
ValueOf ::= select::String ;
Choose ::= when::When otherwise::Otherwise ;
XSLTRootNode ::= document::Document ;
RootNode ::= XSLTRootNode ;
 RootNode ::= document::Document ;
--------------------markup::atom.bgf--------------------
InLineXHTMLContent ::= type::String ;
Date ::= day::Integer month::Integer year::Integer hours::Integer minutes::Integer seconds::Integer ;
Category ::= term::String scheme::String label::String ;
Contributor ::= name::String uri::String email::String ;
Author ::= name::String uri::String email::String ;
Source ::= id::String icon::String logo::String rights::String title::String subtitle::String (links::Link)+ lastUpdate::Date generator::Generator (contributors::Contributor)+ (categories::Category)+ author::Author ;
Link ::= href::String rel::String type::String hreflang::String title::String lenght::Integer ;
Content ::= InLineXHTMLContent ;
 Content ::= InLineOtherContent ;
 Content ::= OutOfLineContent ;
 Content ::= type::String ;
Person ::= Author ;
 Person ::= Contributor ;
 Person ::= name::String uri::String email::String ;
Generator ::= uri::String version::String ;
InLineOtherContent ::= type::String ;
Entry ::= title::String id::String rights::String summary::String (links::Link)+ source::Source published::Date lastUpdate::Date content::Content (categories::Category)+ (authors::Author)+ (contibutors::Contributor)+ atom::ATOM ;
ATOM ::= title::String id::String subtitle::String rights::String icon::String logo::String (links::Link)+ lastUpdate::Date generator::Generator (categories::Category)+ (authors::Author)+ (contibutors::Contributor)+ (entries::Entry)+ ;
OutOfLineContent ::= src::String ;
--------------------markup::cml.bgf--------------------
Bond_Array ::= (any::Any)+ ;
_List ::= (any::Any)+ ;
AngleUnits ::= (degrees::ε) | (radians::ε) ;
Feature ::= (any::Any)+ ;
Crystal ::= (any::Any)+ ;
StringBuiltin ::= (id::ε) | (elementType::ε) | (atomId::ε) | (residueType::ε) | (residueId::ε) | (atomRef::ε) | (order::ε) | (stereo::ε) | (spaceground::ε) ;
Atom ::= (any::Any)+ ;
Atom_Array ::= (any::Any)+ ;
Reaction ::= (any::Any)+ ;
Coordinate2Builtin ::= xy2::ε ;
_StringArray ::= delimiter::String ;
Coordinate3Builtin ::= (xyz3::ε) | (xyzFract::ε) ;
FloatBuiltin ::= (x2::ε) | (y2::ε) | (x3::ε) | (y3::ε) | (z3::ε) | (xFract::ε) | (yFract::ε) | (zFract::ε) | (occupancy::ε) | (isotope::ε) | (formalCharge::ε) | (hydrogenCount::ε) | (nonHydrogenCount::ε) | (atomParity::ε) | (length::ε) | (acell::ε) | (bcell::ε) | (ccell::ε) | (alpha::ε) | (beta::ε) | (gamma::ε) | (z::ε) ;
Formula ::= (any::Any)+ ;
Molecule ::= (any::Any)+ ;
IntegerBuiltin ::= (isotope::ε) | (formalCharge::ε) | (hydrogenCount::ε) | (nonHydrogenCount::ε) | (atomParity::ε) | (z::ε) ;
Bond ::= (any::Any)+ ;
Electron ::= (any::Any)+ ;
Sequence ::= (any::Any)+ ;
--------------------markup::cnf.bgf--------------------
Dimacs ::= prologue::Prologue lines::({Line "\n"}+) "\n" ;
Line ::= [comment] comment::Comment ;
 Line ::= [disjunct] disjunct::Disjunct ;
--------------------markup::csv-rascal-abstract.bgf--------------------
Table ::= table::(records::(Record*)) ;
Field ::= (unquoted::(text::string())) | (quoted::(text::string())) ;
Record ::= record::(fields::(Field*)) ;
--------------------markup::ebxml.bgf--------------------
BusinessTransaction ::= pattern::String isGuaranteedDeliveryRequired::Boolean preCondition::String postCondition::String beginsWhen::String endsWhen::String requester::RequestingBusinessActivity responder::RespondingBusinessActivity ;
Transaction ::= onInitiation::String conditionGuard::String conditionExpression::String from::BusinessState to::BusinessState ;
BusinessPartnerRole ::= collaboration::MultyPartyCollaboration transition::Transaction (performers::Performs)+ ;
RespondingBusinessActivity ::= transaction::BusinessTransaction documentEnvelope::DocumentEnvelope ;
BusinessDocument ::= specificationLocation::String specificationElement::String conditionExpression::String (envelopes::DocumentEnvelope)+ (attachments::Attachment)+ ;
CompletionState ::= Failure ;
 CompletionState ::= Success ;
 CompletionState ::= guardCondition::String ;
CollaborationActivity ::= use::BinaryCollaboration ;
Performs ::= performedBy::BusinessPartnerRole collaboration::BinaryCollaboration role::AuthorizedRole ;
AuthorizedRole ::= isInitiator::Boolean (performers::Performs)+ ;
BusinessTransactionActivity ::= timeToPerform::String isConcurrent::Boolean isLegallyBinding::Boolean use::BusinessTransaction ;
DocumentEnvelope ::= isPositiveResponse::Boolean requesting::RequestingBusinessActivity responding::RespondingBusinessActivity (attachements::Attachment)+ document::BusinessDocument ;
Failure ::= guardCondition::String ;
Join ::= collaboration::BinaryCollaboration from::AuthorizedRole to::AuthorizedRole ;
MultyPartyCollaboration ::= (partners::BusinessPartnerRole)+ ;
BinaryCollaboration ::= pattern::String timeToPerform::String preCondition::String postCondition::String beginsWhen::String endsWhen::String (roles::Performs)+ (transitions::Transaction)+ (states::BusinessState)+ ;
Attachment ::= mimeType::String specification::String version::String envelope::DocumentEnvelope document::BusinessDocument ;
Success ::= guardCondition::String ;
Start ::= collaboration::BinaryCollaboration from::AuthorizedRole to::AuthorizedRole ;
Fork ::= waitForAll::String ;
RequestingBusinessActivity ::= timeToAcknowledgeAcceptance::String transaction::BusinessTransaction documentEnvelope::DocumentEnvelope ;
--------------------markup::docbook-touzet.bgf--------------------
Sect1 ::= (paras::Para)+ ;
Book ::= (articles::Article)+ ;
Article ::= (sections_1::Sect1)+ ;
DocBook ::= (books::Book)+ ;
Para ::= content::String ;
--------------------markup::docbook-walsh.bgf--------------------
subject.attlist ::= (weight::string())? common.attrib subject.role.attrib local.subject.attrib ;
publisher ::= publisher::(publisher.attlist publishername address*) ;
sect1info ::= sect1info::(sect1info.attlist info.class+) ;
link ::= link::(link.attlist para.char.mix*) ;
productname ::= productname::(productname.attlist para.char.mix*) ;
synopfragmentref ::= synopfragmentref::(synopfragmentref.attlist string()) ;
refentrytitle ::= refentrytitle::(refentrytitle.attlist para.char.mix*) ;
token ::= token::(token.attlist smallcptr.char.mix*) ;
synopfragment ::= synopfragment::(synopfragment.attlist (arg | group)+) ;
qandaentry ::= qandaentry::(qandaentry.attlist blockinfo? revhistory? question answer*) ;
appendixinfo ::= appendixinfo::(appendixinfo.attlist info.class+) ;
errorcode ::= errorcode::(errorcode.attlist smallcptr.char.mix*) ;
address ::= address::(address.attlist (string() | personname | person.ident.mix | street | pob | postcode | city | state | country | phone | fax | email | otheraddr)*) ;
part ::= part::(part.attlist beginpage? partinfo? bookcomponent.title.content partintro? partcontent.mix+) ;
width.attrib ::= (width::string())? ;
note ::= note::(note.attlist title? admon.mix+) ;
ulink ::= ulink::(ulink.attlist para.char.mix*) ;
itermset ::= itermset::(itermset.attlist indexterm+) ;
programlistingco ::= programlistingco::(programlistingco.attlist areaspec programlisting calloutlist*) ;
variablelist.attlist ::= (termlength::string())? common.attrib variablelist.role.attrib local.variablelist.attrib ;
inlinemediaobject ::= inlinemediaobject::(inlinemediaobject.attlist objectinfo? mediaobject.mix+) ;
keyword ::= keyword::(keyword.attlist string()) ;
hardware ::= hardware::(hardware.attlist cptr.char.mix*) ;
caption ::= caption::(caption.attlist textobject.mix*) ;
question ::= question::(question.attlist label? qandaset.mix+) ;
revremark ::= revremark::(revremark.attlist docinfo.char.mix*) ;
confnum ::= confnum::(confnum.attlist docinfo.char.mix*) ;
confdates ::= confdates::(confdates.attlist docinfo.char.mix*) ;
tocfront ::= tocfront::(tocfront.attlist para.char.mix*) ;
structname ::= structname::(structname.attlist smallcptr.char.mix*) ;
para ::= para::(para.attlist (para.char.mix | para.mix)*) ;
pubsnumber ::= pubsnumber::(pubsnumber.attlist docinfo.char.mix*) ;
envar ::= envar::(envar.attlist smallcptr.char.mix*) ;
modespec ::= modespec::(modespec.attlist docinfo.char.mix*) ;
classsynopsis.attlist ::= (language::string())? (class::("class" | "interface"))? common.attrib classsynopsis.role.attrib local.classsynopsis.attrib ;
bibliomset.attlist ::= (relation::string())? common.attrib bibliomset.role.attrib local.bibliomset.attrib ;
computeroutput ::= computeroutput::(computeroutput.attlist (cptr.char.mix | co)*) ;
revision ::= revision::(revision.attlist revnumber date authorinitials* (revremark | revdescription)?) ;
confgroup ::= confgroup::(confgroup.attlist (confdates | conftitle | confnum | address | confsponsor)*) ;
glosssee.attlist ::= (otherterm::string())? common.attrib glosssee.role.attrib local.glosssee.attrib ;
row ::= row::(row.attlist tbl.row.mdl) ;
keywordset ::= keywordset::(keywordset.attlist keyword+) ;
function ::= function::(function.attlist cptr.char.mix*) ;
filename.attlist ::= (class::("headerfile" | "partition" | "devicefile" | "libraryfile" | "directory" | "extension" | "symlink"))? (path::string())? moreinfo.attrib common.attrib filename.role.attrib local.filename.attrib ;
screenco ::= screenco::(screenco.attlist areaspec screen calloutlist*) ;
spanspec.attlist ::= namest::string() nameend::string() spanname::string() (colsep::yesorno)? (rowsep::yesorno)? (align::("left" | "right" | "center" | "justify" | "char"))? (char::string())? (charoff::string())? ;
property ::= property::(property.attlist cptr.char.mix*) ;
authorgroup ::= authorgroup::(authorgroup.attlist (author | editor | collab | corpauthor | othercredit)+) ;
mediaobjectco ::= mediaobjectco::(mediaobjectco.attlist objectinfo? imageobjectco (imageobjectco | textobject)*) ;
table ::= table::(table.attlist tbl.table.mdl) ;
glossaryinfo ::= glossaryinfo::(glossaryinfo.attlist info.class+) ;
informaltable.attlist ::= (frame::("top" | "bottom" | "topbot" | "all" | "sides" | "none"))? (colsep::yesorno.attvals)? (rowsep::yesorno.attvals)? common.table.attribs tbl.table.att local.informaltable.attrib ;
refsect3info ::= refsect3info::(refsect3info.attlist info.class+) ;
appendix ::= appendix::(appendix.attlist beginpage? appendixinfo? bookcomponent.title.content nav.class* tocchap? bookcomponent.content nav.class*) ;
contractsponsor ::= contractsponsor::(contractsponsor.attlist docinfo.char.mix*) ;
areaspec ::= areaspec::(areaspec.attlist (area | areaset)+) ;
sgmltag ::= sgmltag::(sgmltag.attlist smallcptr.char.mix*) ;
copyright ::= copyright::(copyright.attlist year+ holder*) ;
article.attlist ::= (class::("journalarticle" | "productsheet" | "whitepaper" | "techreport" | "specification" | "faq"))? (parentbook::string())? status.attrib common.attrib article.role.attrib local.article.attrib ;
wordasword ::= wordasword::(wordasword.attlist word.char.mix*) ;
acronym ::= acronym::(acronym.attlist word.char.mix*) ;
systemitem ::= systemitem::(systemitem.attlist (cptr.char.mix | acronym | co)*) ;
lotentry ::= lotentry::(lotentry.attlist para.char.mix*) ;
ulink.attlist ::= url::string() (type::string())? common.attrib ulink.role.attrib local.ulink.attrib ;
menuchoice ::= menuchoice::(menuchoice.attlist shortcut? (guibutton | guiicon | guilabel | guimenu | guimenuitem | guisubmenu | interface)+) ;
userlevel.attrib ::= (userlevel::string())? ;
refentry ::= refentry::(refentry.attlist beginpage? ndxterm.class* refentryinfo? refmeta? (remark | link.char.class)* refnamediv refsynopsisdiv? (refsect1+) | (refsection+)) ;
edition ::= edition::(edition.attlist docinfo.char.mix*) ;
answer ::= answer::(answer.attlist label? qandaset.mix* qandaentry*) ;
glossdef ::= glossdef::(glossdef.attlist glossdef.mix+ glossseealso*) ;
classsynopsisinfo ::= classsynopsisinfo::(classsynopsisinfo.attlist (cptr.char.mix | textobject | lineannotation)*) ;
refsynopsisdivinfo ::= refsynopsisdivinfo::(refsynopsisdivinfo.attlist info.class+) ;
subjectset ::= subjectset::(subjectset.attlist subject+) ;
corpauthor ::= corpauthor::(corpauthor.attlist docinfo.char.mix*) ;
figure.attlist ::= (float::yesorno.attvals)? (pgwide::yesorno.attvals)? label.attrib common.attrib figure.role.attrib local.figure.attrib ;
conftitle ::= conftitle::(conftitle.attlist docinfo.char.mix*) ;
tfoot.attlist ::= (valign::("top" | "middle" | "bottom"))? secur ;
setindex ::= setindex::(setindex.attlist setindexinfo? bookcomponent.title.content? component.mix* (indexdiv*) | (indexentry*)) ;
msginfo ::= msginfo::(msginfo.attlist (msglevel | msgorig | msgaud)*) ;
date ::= date::(date.attlist docinfo.char.mix*) ;
manvolnum ::= manvolnum::(manvolnum.attlist word.char.mix*) ;
invpartnumber ::= invpartnumber::(invpartnumber.attlist docinfo.char.mix*) ;
revnumber ::= revnumber::(revnumber.attlist docinfo.char.mix*) ;
holder ::= holder::(holder.attlist docinfo.char.mix*) ;
parameter ::= parameter::(parameter.attlist cptr.char.mix*) ;
alt ::= alt::(alt.attlist string()) ;
glosslist ::= glosslist::(glosslist.attlist glossentry+) ;
constant ::= constant::(constant.attlist smallcptr.char.mix*) ;
cmdsynopsis.attlist ::= label.attrib (sepchar::string())? (cmdlength::string())? common.attrib cmdsynopsis.role.attrib local.cmdsynopsis.attrib ;
xreflabel.attrib ::= (xreflabel::string())? ;
refname ::= refname::(refname.attlist refname.char.mix*) ;
step.attlist ::= (performance::("optional" | "required"))? common.attrib step.role.attrib local.step.attrib ;
refsect3 ::= refsect3::(refsect3.attlist refsect3info? refsect.title.content refcomponent.mix+) ;
email ::= email::(email.attlist docinfo.char.mix*) ;
refsect2 ::= refsect2::(refsect2.attlist refsect2info? refsect.title.content (refcomponent.mix+ refsect3*) | (refsect3+)) ;
warning ::= warning::(warning.attlist title? admon.mix+) ;
othername ::= othername::(othername.attlist docinfo.char.mix*) ;
refsect1 ::= refsect1::(refsect1.attlist refsect1info? refsect.title.content (refcomponent.mix+ refsect2*) | (refsect2+)) ;
symbol ::= symbol::(symbol.attlist smallcptr.char.mix*) ;
sgmltag.attlist ::= (class::("attribute" | "attvalue" | "element" | "endtag" | "emptytag" | "genentity" | "numcharref" | "paramentity" | "pi" | "xmlpi" | "starttag" | "sgmlcomment"))? common.attrib sgmltag.role.attrib local.sgmltag.attrib ;
ooclass ::= ooclass::(ooclass.attlist modifier* classname) ;
subjectterm ::= subjectterm::(subjectterm.attlist string()) ;
country ::= country::(country.attlist docinfo.char.mix*) ;
informalexample ::= informalexample::(informalexample.attlist blockinfo? example.mix+) ;
moreinfo.attrib ::= (moreinfo::("refentry" | "none"))? ;
void ::= void::(void.attlist ε) ;
synopsis ::= synopsis::(synopsis.attlist (para.char.mix | graphic | mediaobject | co | coref | textobject | lineannotation)*) ;
lotentry.attlist ::= linkend.attrib pagenum.attrib (srccredit::string())? common.attrib lotentry.role.attrib local.lotentry.attrib ;
msgentry ::= msgentry::(msgentry.attlist msg+ msginfo? msgexplan*) ;
medialabel ::= medialabel::(medialabel.attlist smallcptr.char.mix*) ;
secondaryie ::= secondaryie::(secondaryie.attlist ndxterm.char.mix*) ;
msgaud ::= msgaud::(msgaud.attlist para.char.mix*) ;
constructorsynopsis ::= constructorsynopsis::(constructorsynopsis.attlist modifier* methodname? (methodparam+) | void exceptionname*) ;
graphics.attrib ::= (entityref::string())? (fileref::string())? (format::notation.class)? (srccredit::string())? (width::string())? (contentwidth::string())? (depth::string())? (contentdepth::string())? (align::("left" | "right" | "center"))? (valign::("top" | "middle" | "bottom"))? (scale::string())? (scalefit::yesorno.attvals)? local.graphics.attrib ;
glossdef.attlist ::= (subject::string())? common.attrib glossdef.role.attrib local.glossdef.attrib ;
author ::= author::(author.attlist personname | (person.ident.mix+) (personblurb | email | address)*) ;
imagedata ::= imagedata::(imagedata.attlist ε) ;
keyaction.attrib ::= (action::("click" | "double-click" | "press" | "seq" | "simul" | "other"))? (otheraction::string())? local.keyaction.attrib ;
msg ::= msg::(msg.attlist title? msgmain (msgsub | msgrel)*) ;
remark ::= remark::(remark.attlist para.char.mix*) ;
programlisting ::= programlisting::(programlisting.attlist (para.char.mix | co | coref | lineannotation | textobject)*) ;
preface ::= preface::(preface.attlist beginpage? prefaceinfo? bookcomponent.title.content nav.class* tocchap? bookcomponent.content nav.class*) ;
sect2info ::= sect2info::(sect2info.attlist info.class+) ;
emphasis ::= emphasis::(emphasis.attlist para.char.mix*) ;
database ::= database::(database.attlist cptr.char.mix*) ;
linkendreq.attrib ::= linkend::string() ;
parameter.attlist ::= (class::("command" | "function" | "option"))? moreinfo.attrib common.attrib parameter.role.attrib local.parameter.attrib ;
videoobject ::= videoobject::(videoobject.attlist objectinfo? videodata) ;
bibliodiv ::= bibliodiv::(bibliodiv.attlist sect.title.content? component.mix* (biblioentry | bibliomixed)+) ;
revdescription ::= revdescription::(revdescription.attlist revdescription.mix+) ;
glossentry.attlist ::= (sortas::string())? common.attrib glossentry.role.attrib local.glossentry.attrib ;
msgrel ::= msgrel::(msgrel.attlist title? msgtext) ;
glossterm ::= glossterm::(glossterm.attlist para.char.mix*) ;
confsponsor ::= confsponsor::(confsponsor.attlist docinfo.char.mix*) ;
methodsynopsis ::= methodsynopsis::(methodsynopsis.attlist modifier* (type | void)? methodname (methodparam+) | void exceptionname* modifier*) ;
idreq.attrib ::= id::string() ;
secondary ::= secondary::(secondary.attlist ndxterm.char.mix*) ;
orgname ::= orgname::(orgname.attlist docinfo.char.mix*) ;
phone ::= phone::(phone.attlist docinfo.char.mix*) ;
editor ::= editor::(editor.attlist personname | (person.ident.mix+) (personblurb | email | address)*) ;
city ::= city::(city.attlist docinfo.char.mix*) ;
caution ::= caution::(caution.attlist title? admon.mix+) ;
example ::= example::(example.attlist blockinfo? formalobject.title.content example.mix+) ;
citebiblioid ::= citebiblioid::(citebiblioid.attlist docinfo.char.mix*) ;
screenshot ::= screenshot::(screenshot.attlist screeninfo? graphic | graphicco | mediaobject | mediaobjectco) ;
prompt ::= prompt::(prompt.attlist (smallcptr.char.mix | co)*) ;
bibliography ::= bibliography::(bibliography.attlist bibliographyinfo? bookcomponent.title.content? component.mix* (bibliodiv+) | ((biblioentry | bibliomixed)+)) ;
arch.attrib ::= (arch::string())? ;
citetitle ::= citetitle::(citetitle.attlist para.char.mix*) ;
optional ::= optional::(optional.attlist cptr.char.mix*) ;
personname ::= personname::(personname.attlist (honorific | firstname | surname | lineage | othername)+) ;
footnote ::= footnote::(footnote.attlist footnote.mix+) ;
fieldsynopsis.attlist ::= (language::string())? common.attrib fieldsynopsis.role.attrib local.fieldsynopsis.attrib ;
sidebar ::= sidebar::(sidebar.attlist sidebarinfo? formalobject.title.content? sidebar.mix+) ;
exceptionname ::= exceptionname::(exceptionname.attlist smallcptr.char.mix*) ;
oointerface ::= oointerface::(oointerface.attlist modifier* interfacename) ;
imagedata.attlist ::= (width::string())? (contentwidth::string())? (depth::string())? (contentdepth::string())? (align::("left" | "right" | "center"))? (valign::("top" | "middle" | "bottom"))? (scale::string())? (scalefit::yesorno.attvals)? objectdata.attrib common.attrib imagedata.role.attrib local.imagedata.attrib ;
qandadiv ::= qandadiv::(qandadiv.attlist blockinfo? formalobject.title.content? qandaset.mix* (qandadiv+) | (qandaentry+)) ;
graphicco ::= graphicco::(graphicco.attlist areaspec graphic calloutlist*) ;
lot ::= lot::(lot.attlist beginpage? bookcomponent.title.content? lotentry*) ;
application ::= application::(application.attlist para.char.mix*) ;
glossseealso ::= glossseealso::(glossseealso.attlist para.char.mix*) ;
simplelist ::= simplelist::(simplelist.attlist member+) ;
varlistentry ::= varlistentry::(varlistentry.attlist term+ listitem) ;
database.attlist ::= (class::("name" | "table" | "field" | "key1" | "key2" | "record"))? moreinfo.attrib common.attrib database.role.attrib local.database.attrib ;
equation ::= equation::(equation.attlist blockinfo? formalobject.title.content? informalequation | equation.content) ;
command ::= command::(command.attlist cptr.char.mix*) ;
biblioset ::= biblioset::(biblioset.attlist bibliocomponent.mix+) ;
reference ::= reference::(reference.attlist beginpage? referenceinfo? bookcomponent.title.content partintro? refentry.class+) ;
funcparams ::= funcparams::(funcparams.attlist cptr.char.mix*) ;
toc ::= toc::(toc.attlist beginpage? bookcomponent.title.content? tocfront* (tocpart | tocchap)* tocback*) ;
printhistory ::= printhistory::(printhistory.attlist para.class+) ;
methodsynopsis.attlist ::= (language::string())? common.attrib methodsynopsis.role.attrib local.methodsynopsis.attrib ;
colophon ::= colophon::(colophon.attlist sect.title.content? textobject.mix+) ;
interfacename ::= interfacename::(interfacename.attlist cptr.char.mix*) ;
bibliorelation.type.attrib ::= (type::("isversionof" | "hasversion" | "isreplacedby" | "replaces" | "isrequiredby" | "requires" | "ispartof" | "haspart" | "isreferencedby" | "references" | "isformatof" | "hasformat" | "othertype" | local.bibliorelation.types))? (othertype::string())? ;
simplemsgentry ::= simplemsgentry::(simplemsgentry.attlist msgtext msgexplan+) ;
conformance.attrib ::= (conformance::string())? ;
entry.attlist ::= (colname::string())? (namest::string())? (nameend::string())? (spanname::string())? (morerows::string())? (colsep::yesorno)? (rowsep::yesorno)? (align::("left" | "right" | "center" | "justify" | "char"))? (char::string())? (charoff::string())? (rotate::yesorno)? (valign::("top" | "middle" | "bottom"))? secur ;
errortype ::= errortype::(errortype.attlist smallcptr.char.mix*) ;
role.attrib ::= (role::string())? ;
msgorig ::= msgorig::(msgorig.attlist smallcptr.char.mix*) ;
msgset ::= msgset::(msgset.attlist blockinfo? formalobject.title.content? (msgentry+) | (simplemsgentry+)) ;
orgname.attlist ::= common.attrib (class::("corporation" | "nonprofit" | "consortium" | "informal" | "other"))? (otherclass::string())? orgname.role.attrib local.orgname.attrib ;
firstname ::= firstname::(firstname.attlist docinfo.char.mix*) ;
tocpart ::= tocpart::(tocpart.attlist tocentry+ tocchap*) ;
colspec ::= colspec::(colspec.attlist ε) ;
type ::= type::(type.attlist smallcptr.char.mix*) ;
interface ::= interface::(interface.attlist (smallcptr.char.mix | accel)*) ;
informalfigure ::= informalfigure::(informalfigure.attlist blockinfo? (figure.mix | link.char.class)+) ;
security.attrib ::= (security::string())? ;
simpara ::= simpara::(simpara.attlist para.char.mix*) ;
seealsoie ::= seealsoie::(seealsoie.attlist ndxterm.char.mix*) ;
errortext ::= errortext::(errortext.attlist smallcptr.char.mix*) ;
releaseinfo ::= releaseinfo::(releaseinfo.attlist docinfo.char.mix*) ;
corpname ::= corpname::(corpname.attlist docinfo.char.mix*) ;
contractnum ::= contractnum::(contractnum.attlist docinfo.char.mix*) ;
footnoteref ::= footnoteref::(footnoteref.attlist ε) ;
set.attlist ::= (fpi::string())? status.attrib common.attrib set.role.attrib local.set.attrib ;
citetitle.attlist ::= (pubwork::("article" | "book" | "chapter" | "part" | "refentry" | "section" | "journal" | "series" | "set" | "manuscript"))? common.attrib citetitle.role.attrib local.citetitle.attrib ;
guimenuitem ::= guimenuitem::(guimenuitem.attlist (smallcptr.char.mix | accel)*) ;
orgdiv ::= orgdiv::(orgdiv.attlist docinfo.char.mix*) ;
refmiscinfo ::= refmiscinfo::(refmiscinfo.attlist docinfo.char.mix*) ;
subject ::= subject::(subject.attlist subjectterm+) ;
refpurpose ::= refpurpose::(refpurpose.attlist refinline.char.mix*) ;
arg.attlist ::= (choice::("opt" | "req" | "plain"))? (rep::("norepeat" | "repeat"))? common.attrib arg.role.attrib local.arg.attrib ;
qandaset ::= qandaset::(qandaset.attlist blockinfo? formalobject.title.content? qandaset.mix* (qandadiv+) | (qandaentry+)) ;
thead.attlist ::= (valign::("top" | "middle" | "bottom"))? secur ;
tertiary.attlist ::= (sortas::string())? common.attrib primsecter.role.attrib local.primsecter.attrib ;
segtitle ::= segtitle::(segtitle.attlist title.char.mix*) ;
bibliomisc ::= bibliomisc::(bibliomisc.attlist para.char.mix*) ;
sect5.attlist ::= (renderas::("sect1" | "sect2" | "sect3" | "sect4"))? label.attrib status.attrib common.attrib sect5.role.attrib local.sect5.attrib ;
sect3.attlist ::= (renderas::("sect1" | "sect2" | "sect4" | "sect5"))? label.attrib status.attrib common.attrib sect3.role.attrib local.sect3.attrib ;
partinfo ::= partinfo::(partinfo.attlist info.class+) ;
msgsub ::= msgsub::(msgsub.attlist title? msgtext) ;
sect1.attlist ::= (renderas::("sect2" | "sect3" | "sect4" | "sect5"))? label.attrib status.attrib common.attrib sect1.role.attrib local.sect1.attrib ;
fax ::= fax::(fax.attlist docinfo.char.mix*) ;
methodparam.attlist ::= (choice::("opt" | "req" | "plain"))? (rep::("norepeat" | "repeat"))? common.attrib methodparam.role.attrib local.methodparam.attrib ;
msgexplan ::= msgexplan::(msgexplan.attlist title? component.mix+) ;
firstterm ::= firstterm::(firstterm.attlist word.char.mix*) ;
biblioset.attlist ::= (relation::string())? common.attrib biblioset.role.attrib local.biblioset.attrib ;
xref ::= xref::(xref.attlist ε) ;
biblioentry ::= biblioentry::(biblioentry.attlist (articleinfo | bibliocomponent.mix)+) ;
guimenu ::= guimenu::(guimenu.attlist (smallcptr.char.mix | accel)*) ;
screeninfo ::= screeninfo::(screeninfo.attlist para.char.mix*) ;
variablelist ::= variablelist::(variablelist.attlist blockinfo? formalobject.title.content? listpreamble.mix* varlistentry+) ;
refmeta ::= refmeta::(refmeta.attlist ndxterm.class* refentrytitle manvolnum? refmiscinfo* ndxterm.class*) ;
bookinfo ::= bookinfo::(bookinfo.attlist info.class+) ;
simplemsgentry.attlist ::= (audience::string())? (level::string())? (origin::string())? common.attrib simplemsgentry.role.attrib local.simplemsgentry.attrib ;
keycap ::= keycap::(keycap.attlist cptr.char.mix*) ;
sectioninfo ::= sectioninfo::(sectioninfo.attlist info.class+) ;
biblioid ::= biblioid::(biblioid.attlist docinfo.char.mix*) ;
bibliographyinfo ::= bibliographyinfo::(bibliographyinfo.attlist info.class+) ;
indexterm.attlist ::= pagenum.attrib (scope::("all" | "global" | "local"))? (significance::("preferred" | "normal"))? (class::("singular" | "startofrange" | "endofrange"))? (startref::string())? (zone::string())? common.attrib indexterm.role.attrib local.indexterm.attrib ;
classsynopsis ::= classsynopsis::(classsynopsis.attlist (ooclass | oointerface | ooexception)+ (classsynopsisinfo | fieldsynopsis | method.synop.class)*) ;
bibliomset ::= bibliomset::(bibliomset.attlist (string() | bibliocomponent.mix | bibliomset)*) ;
colspec.attlist ::= (colnum::string())? (colname::string())? (colwidth::string())? (colsep::yesorno)? (rowsep::yesorno)? (align::("left" | "right" | "center" | "justify" | "char"))? (char::string())? (charoff::string())? ;
subscript ::= subscript::(subscript.attlist (string() | link.char.class | emphasis | replaceable | symbol | inlinegraphic | inlinemediaobject | base.char.class | other.char.class)*) ;
mark.attrib ::= (mark::string())? local.mark.attrib ;
funcsynopsisinfo ::= funcsynopsisinfo::(funcsynopsisinfo.attlist (cptr.char.mix | textobject | lineannotation)*) ;
issn ::= issn::(issn.attlist docinfo.char.mix*) ;
label.attrib ::= (label::string())? ;
otheraddr ::= otheraddr::(otheraddr.attlist docinfo.char.mix*) ;
callout.attlist ::= arearefs::string() common.attrib callout.role.attrib local.callout.attrib ;
refmiscinfo.attlist ::= (class::string())? common.attrib refmiscinfo.role.attrib local.refmiscinfo.attrib ;
sect3info ::= sect3info::(sect3info.attlist info.class+) ;
condition.attrib ::= (condition::string())? ;
id.attrib ::= (id::string())? ;
informaltable ::= informaltable::(informaltable.attlist blockinfo? textobject* (graphic+) | (mediaobject+) | (tgroup+)) ;
titleabbrev ::= titleabbrev::(titleabbrev.attlist title.char.mix*) ;
productnumber ::= productnumber::(productnumber.attlist docinfo.char.mix*) ;
qandaset.attlist ::= (defaultlabel::("qanda" | "number" | "none"))? common.attrib qandaset.role.attrib local.qandaset.attrib ;
isbn ::= isbn::(isbn.attlist docinfo.char.mix*) ;
article ::= article::(article.attlist div.title.content? articleinfo? tocchap? lot* bookcomponent.content (nav.class | appendix.class | ackno)*) ;
simplesect ::= simplesect::(simplesect.attlist sect.title.content divcomponent.mix+) ;
label ::= label::(label.attlist word.char.mix*) ;
refsection ::= refsection::(refsection.attlist refsectioninfo? refsect.title.content (refcomponent.mix+ refsection*) | (refsection+)) ;
affiliation ::= affiliation::(affiliation.attlist shortaffil? jobtitle* orgname? orgdiv* address*) ;
epigraph ::= epigraph::(epigraph.attlist attribution? (para.class | literallayout)+) ;
objectdata.attrib ::= (entityref::string())? (fileref::string())? (format::notation.class)? (srccredit::string())? local.objectdata.attrib ;
tertiaryie ::= tertiaryie::(tertiaryie.attlist ndxterm.char.mix*) ;
tbl.tgroup.att ::= (tgroupstyle::string())? ;
refentryinfo ::= refentryinfo::(refentryinfo.attlist info.class+) ;
xref.attlist ::= (endterm::string())? linkendreq.attrib common.attrib xref.role.attrib local.xref.attrib ;
methodname ::= methodname::(methodname.attlist smallcptr.char.mix*) ;
olink ::= olink::(olink.attlist para.char.mix*) ;
bridgehead ::= bridgehead::(bridgehead.attlist title.char.mix*) ;
book ::= book::(book.attlist div.title.content? bookinfo? (dedication | toc | lot | glossary | bibliography | preface | chapter.class | reference | part | article.class | appendix.class | index.class | colophon)*) ;
accel ::= accel::(accel.attlist smallcptr.char.mix*) ;
graphic ::= graphic::(graphic.attlist ε) ;
bookinfo.attlist ::= (contents::string())? common.attrib bookinfo.role.attrib local.bookinfo.attrib ;
citation ::= citation::(citation.attlist para.char.mix*) ;
substeps ::= substeps::(substeps.attlist step+) ;
tbody.attlist ::= (valign::("top" | "middle" | "bottom"))? secur ;
inlineequation ::= inlineequation::(inlineequation.attlist inlineequation.content) ;
section ::= section::(section.attlist sectioninfo? sect.title.content nav.class* (divcomponent.mix+ (refentry.class*) | (section.class*) | (simplesect*)) | (refentry.class+) | (section.class+) | (simplesect+) nav.class*) ;
figure ::= figure::(figure.attlist blockinfo? formalobject.title.content (figure.mix | link.char.class)+) ;
initializer ::= initializer::(initializer.attlist smallcptr.char.mix*) ;
tfoot ::= tfoot::(tfoot.attlist tbl.hdft.mdl) ;
setinfo.attlist ::= (contents::string())? common.attrib setinfo.role.attrib local.setinfo.attrib ;
indexentry ::= indexentry::(indexentry.attlist primaryie (seeie | seealsoie)* (secondaryie (seeie | seealsoie | tertiaryie)*)*) ;
userinput ::= userinput::(userinput.attlist (cptr.char.mix | co)*) ;
replaceable.attlist ::= (class::("command" | "function" | "option" | "parameter"))? common.attrib replaceable.role.attrib local.replaceable.attrib ;
funcprototype ::= funcprototype::(funcprototype.attlist funcdef void | varargs | (paramdef+)) ;
entrytbl.attlist ::= cols::string() tbl.tgroup.att (colname::string())? (spanname::string())? (namest::string())? (nameend::string())? (colsep::yesorno)? (rowsep::yesorno)? (align::("left" | "right" | "center" | "justify" | "char"))? (char::string())? (charoff::string())? secur ;
surname ::= surname::(surname.attlist docinfo.char.mix*) ;
biblio.class.attrib ::= (class::("uri" | "doi" | "isbn" | "issn" | "libraryofcongress" | "pubnumber" | "other"))? (otherclass::string())? ;
modifier ::= modifier::(modifier.attlist smallcptr.char.mix*) ;
primary.attlist ::= (sortas::string())? common.attrib primsecter.role.attrib local.primsecter.attrib ;
procedure ::= procedure::(procedure.attlist blockinfo? formalobject.title.content? component.mix* step+) ;
index ::= index::(index.attlist indexinfo? bookcomponent.title.content? component.mix* (indexdiv*) | (indexentry*)) ;
legalnotice ::= legalnotice::(legalnotice.attlist blockinfo? title? legalnotice.mix+) ;
revisionflag.attrib ::= (revisionflag::("changed" | "added" | "deleted" | "off"))? ;
cmdsynopsis ::= cmdsynopsis::(cmdsynopsis.attlist (command | arg | group | sbr)+ synopfragment*) ;
calloutlist ::= calloutlist::(calloutlist.attlist formalobject.title.content? callout+) ;
keycode ::= keycode::(keycode.attlist smallcptr.char.mix*) ;
step ::= step::(step.attlist title? (component.mix+ (substeps component.mix*)?) | (substeps component.mix*)) ;
link.attlist ::= (endterm::string())? linkendreq.attrib (type::string())? common.attrib link.role.attrib local.link.attrib ;
productname.attlist ::= (class::("service" | "trade" | "registered" | "copyright"))? common.attrib productname.role.attrib local.productname.attrib ;
lang.attrib ::= (lang::string())? ;
refsect1info ::= refsect1info::(refsect1info.attlist info.class+) ;
shortaffil ::= shortaffil::(shortaffil.attlist docinfo.char.mix*) ;
refclass ::= refclass::(refclass.attlist refclass.char.mix*) ;
funcdef ::= funcdef::(funcdef.attlist (string() | type | replaceable | function)*) ;
pagenums ::= pagenums::(pagenums.attlist docinfo.char.mix*) ;
jobtitle ::= jobtitle::(jobtitle.attlist docinfo.char.mix*) ;
blockinfo ::= blockinfo::(blockinfo.attlist info.class+) ;
olink.attlist ::= (targetdocent::string())? (linkmode::string())? (localinfo::string())? (type::string())? (targetdoc::string())? (targetptr::string())? common.attrib olink.role.attrib local.olink.attrib ;
bridgehead.attlist ::= (renderas::("other" | "sect1" | "sect2" | "sect3" | "sect4" | "sect5"))? common.attrib bridgehead.role.attrib local.bridgehead.attrib ;
msgmain ::= msgmain::(msgmain.attlist title? msgtext) ;
book.attlist ::= (fpi::string())? label.attrib status.attrib common.attrib book.role.attrib local.book.attrib ;
phrase ::= phrase::(phrase.attlist para.char.mix*) ;
beginpage ::= beginpage::(beginpage.attlist ε) ;
substeps.attlist ::= (performance::("optional" | "required"))? common.attrib substeps.role.attrib local.substeps.attrib ;
dedication ::= dedication::(dedication.attlist sect.title.content? legalnotice.mix+) ;
linkend.attrib ::= (linkend::string())? ;
anchor ::= anchor::(anchor.attlist ε) ;
areaset ::= areaset::(areaset.attlist area+) ;
bibliorelation ::= bibliorelation::(bibliorelation.attlist docinfo.char.mix*) ;
listitem ::= listitem::(listitem.attlist component.mix+) ;
segmentedlist ::= segmentedlist::(segmentedlist.attlist formalobject.title.content? segtitle+ seglistitem+) ;
literal ::= literal::(literal.attlist cptr.char.mix*) ;
modespec.attlist ::= (application::notation.class)? common.attrib modespec.role.attrib local.modespec.attrib ;
seeie ::= seeie::(seeie.attlist ndxterm.char.mix*) ;
textobject ::= textobject::(textobject.attlist objectinfo? phrase | textdata | (textobject.mix+)) ;
row.attlist ::= (rowsep::yesorno)? (valign::("top" | "middle" | "bottom"))? secur ;
seriesvolnums ::= seriesvolnums::(seriesvolnums.attlist docinfo.char.mix*) ;
glossentry ::= glossentry::(glossentry.attlist glossterm acronym? abbrev? ndxterm.class* revhistory? glosssee | (glossdef+)) ;
coref ::= coref::(coref.attlist ε) ;
personblurb ::= personblurb::(personblurb.attlist title? para.class+) ;
videodata ::= videodata::(videodata.attlist ε) ;
articleinfo ::= articleinfo::(articleinfo.attlist info.class+) ;
bibliomixed ::= bibliomixed::(bibliomixed.attlist (string() | bibliocomponent.mix | bibliomset)*) ;
msglevel ::= msglevel::(msglevel.attlist smallcptr.char.mix*) ;
abbrev ::= abbrev::(abbrev.attlist word.char.mix*) ;
informalequation ::= informalequation::(informalequation.attlist blockinfo? equation.content) ;
refsectioninfo ::= refsectioninfo::(refsectioninfo.attlist info.class+) ;
bibliocoverage ::= bibliocoverage::(bibliocoverage.attlist docinfo.char.mix*) ;
table.attlist ::= (frame::("top" | "bottom" | "topbot" | "all" | "sides" | "none"))? (colsep::yesorno)? (rowsep::yesorno)? tbl.table.att bodyatt secur ;
primaryie ::= primaryie::(primaryie.attlist ndxterm.char.mix*) ;
tocchap ::= tocchap::(tocchap.attlist tocentry+ toclevel1*) ;
tip ::= tip::(tip.attlist title? admon.mix+) ;
seealso ::= seealso::(seealso.attlist ndxterm.char.mix*) ;
member ::= member::(member.attlist para.char.mix*) ;
guilabel ::= guilabel::(guilabel.attlist (smallcptr.char.mix | accel)*) ;
contrib ::= contrib::(contrib.attlist docinfo.char.mix*) ;
literallayout ::= literallayout::(literallayout.attlist (para.char.mix | co | coref | textobject | lineannotation)*) ;
areaspec.attlist ::= (units::("calspair" | "linecolumn" | "linerange" | "linecolumnpair" | "other"))? (otherunits::string())? common.attrib areaspec.role.attrib local.areaspec.attrib ;
audioobject ::= audioobject::(audioobject.attlist objectinfo? audiodata) ;
systemitem.attlist ::= (class::("constant" | "event" | "eventhandler" | "domainname" | "fqdomainname" | "ipaddress" | "netmask" | "etheraddress" | "groupname" | "library" | "macro" | "osname" | "filesystem" | "resource" | "systemname" | "username" | "newsgroup"))? moreinfo.attrib common.attrib systemitem.role.attrib local.systemitem.attrib ;
errorname ::= errorname::(errorname.attlist smallcptr.char.mix*) ;
bibliosource ::= bibliosource::(bibliosource.attlist docinfo.char.mix*) ;
linespecific.attrib ::= (format::"linespecific")? (linenumbering::("numbered" | "unnumbered"))? ;
revhistory ::= revhistory::(revhistory.attlist revision+) ;
state ::= state::(state.attlist docinfo.char.mix*) ;
keycombo ::= keycombo::(keycombo.attlist (keycap | keycombo | keysym | mousebutton)+) ;
fieldsynopsis ::= fieldsynopsis::(fieldsynopsis.attlist modifier* type? varname initializer?) ;
foreignphrase ::= foreignphrase::(foreignphrase.attlist para.char.mix*) ;
postcode ::= postcode::(postcode.attlist docinfo.char.mix*) ;
destructorsynopsis ::= destructorsynopsis::(destructorsynopsis.attlist modifier* methodname? (methodparam+) | void exceptionname*) ;
area ::= area::(area.attlist ε) ;
lineage ::= lineage::(lineage.attlist docinfo.char.mix*) ;
orderedlist ::= orderedlist::(orderedlist.attlist blockinfo? formalobject.title.content? listpreamble.mix* listitem+) ;
tgroup ::= tgroup::(tgroup.attlist tbl.tgroup.mdl) ;
publishername ::= publishername::(publishername.attlist docinfo.char.mix*) ;
subjectset.attlist ::= (scheme::string())? common.attrib subjectset.role.attrib local.subjectset.attrib ;
areaset.attlist ::= label.attrib (units::("calspair" | "linecolumn" | "linerange" | "linecolumnpair" | "other"))? (otherunits::string())? coords::string() idreq.common.attrib areaset.role.attrib local.areaset.attrib ;
varargs ::= varargs::(varargs.attlist ε) ;
listitem.attlist ::= (override::string())? common.attrib listitem.role.attrib local.listitem.attrib ;
audiodata ::= audiodata::(audiodata.attlist ε) ;
indexinfo ::= indexinfo::(indexinfo.attlist info.class+) ;
group ::= group::(group.attlist (arg | group | option | synopfragmentref | replaceable | sbr)+) ;
attribution ::= attribution::(attribution.attlist para.char.mix*) ;
indexdiv ::= indexdiv::(indexdiv.attlist sect.title.content? indexdivcomponent.mix* (indexentry+) | segmentedlist) ;
sect4info ::= sect4info::(sect4info.attlist info.class+) ;
quote ::= quote::(quote.attlist para.char.mix*) ;
chapterinfo ::= chapterinfo::(chapterinfo.attlist info.class+) ;
referenceinfo ::= referenceinfo::(referenceinfo.attlist info.class+) ;
toclevel5 ::= toclevel5::(toclevel5.attlist tocentry+) ;
toclevel4 ::= toclevel4::(toclevel4.attlist tocentry+ toclevel5*) ;
toclevel3 ::= toclevel3::(toclevel3.attlist tocentry+ toclevel4*) ;
videodata.attlist ::= (width::string())? (contentwidth::string())? (depth::string())? (contentdepth::string())? (align::("left" | "right" | "center"))? (valign::("top" | "middle" | "bottom"))? (scale::string())? (scalefit::yesorno.attvals)? objectdata.attrib common.attrib videodata.role.attrib local.videodata.attrib ;
toclevel2 ::= toclevel2::(toclevel2.attlist tocentry+ toclevel3*) ;
option ::= option::(option.attlist cptr.char.mix*) ;
constant.attlist ::= (class::"limit")? common.attrib constant.role.attrib local.constant.attrib ;
toclevel1 ::= toclevel1::(toclevel1.attlist tocentry+ toclevel2*) ;
entry ::= entry::(entry.attlist tbl.entry.mdl*) ;
bibliocoverage.attlist ::= (spatial::("dcmipoint" | "iso3166" | "dcmibox" | "tgn" | "otherspatial"))? (otherspatial::string())? (temporal::("dcmiperiod" | "w3c-dtf" | "othertemporal"))? (othertemporal::string())? common.attrib bibliocoverage.role.attrib local.bibliocoverage.attrib ;
ooexception ::= ooexception::(ooexception.attlist modifier* exceptionname) ;
objectinfo ::= objectinfo::(objectinfo.attlist info.class+) ;
co ::= co::(co.attlist ε) ;
screen ::= screen::(screen.attlist (para.char.mix | co | coref | textobject | lineannotation)*) ;
term ::= term::(term.attlist para.char.mix*) ;
literallayout.attlist ::= width.attrib linespecific.attrib (class::("monospaced" | "normal"))? common.attrib literallayout.role.attrib local.literallayout.attrib ;
symbol.attlist ::= (class::"limit")? common.attrib symbol.role.attrib local.symbol.attrib ;
set ::= set::(set.attlist div.title.content? setinfo? toc? book.class+ setindex?) ;
medialabel.attlist ::= (class::("cartridge" | "cdrom" | "disk" | "tape"))? common.attrib medialabel.role.attrib local.medialabel.attrib ;
honorific ::= honorific::(honorific.attlist docinfo.char.mix*) ;
constructorsynopsis.attlist ::= (language::string())? common.attrib constructorsynopsis.role.attrib local.constructorsynopsis.attrib ;
destructorsynopsis.attlist ::= (language::string())? common.attrib destructorsynopsis.role.attrib local.destructorsynopsis.attrib ;
area.attlist ::= label.attrib linkends.attrib (units::("calspair" | "linecolumn" | "linerange" | "linecolumnpair" | "other"))? (otherunits::string())? coords::string() idreq.common.attrib area.role.attrib local.area.attrib ;
setindexinfo ::= setindexinfo::(setindexinfo.attlist info.class+) ;
orderedlist.attlist ::= (numeration::("arabic" | "upperalpha" | "loweralpha" | "upperroman" | "lowerroman"))? (inheritnum::("inherit" | "ignore"))? (continuation::("continues" | "restarts"))? (spacing::("normal" | "compact"))? common.attrib orderedlist.role.attrib local.orderedlist.attrib ;
tgroup.attlist ::= cols::string() tbl.tgroup.att (colsep::yesorno)? (rowsep::yesorno)? (align::("left" | "right" | "center" | "justify" | "char"))? (char::string())? (charoff::string())? secur ;
imageobject ::= imageobject::(imageobject.attlist objectinfo? imagedata) ;
partintro ::= partintro::(partintro.attlist div.title.content? bookcomponent.content) ;
paramdef ::= paramdef::(paramdef.attlist (string() | type | replaceable | parameter | funcparams)*) ;
funcsynopsis ::= funcsynopsis::(funcsynopsis.attlist (funcsynopsisinfo | funcprototype)+) ;
title ::= title::(title.attlist title.char.mix*) ;
textdata ::= textdata::(textdata.attlist ε) ;
arg ::= arg::(arg.attlist (string() | arg | group | option | synopfragmentref | replaceable | sbr)*) ;
seg ::= seg::(seg.attlist para.char.mix*) ;
thead ::= thead::(thead.attlist tbl.hdft.mdl) ;
see ::= see::(see.attlist ndxterm.char.mix*) ;
tertiary ::= tertiary::(tertiary.attlist ndxterm.char.mix*) ;
sect5 ::= sect5::(sect5.attlist sect5info? sect.title.content nav.class* (divcomponent.mix+ (refentry.class*) | (simplesect*)) | (refentry.class+) | (simplesect+) nav.class*) ;
sect4 ::= sect4::(sect4.attlist sect4info? sect.title.content nav.class* (divcomponent.mix+ (refentry.class*) | (sect5*) | (simplesect*)) | (refentry.class+) | (sect5+) | (simplesect+) nav.class*) ;
tbl.table.att ::= (tabstyle::string())? (tocentry::yesorno)? (shortentry::yesorno)? (orient::("port" | "land"))? (pgwide::yesorno)? ;
group.attlist ::= (choice::("opt" | "req" | "plain"))? (rep::("norepeat" | "repeat"))? common.attrib group.role.attrib local.group.attrib ;
sect3 ::= sect3::(sect3.attlist sect3info? sect.title.content nav.class* (divcomponent.mix+ (refentry.class*) | (sect4*) | (simplesect*)) | (refentry.class+) | (sect4+) | (simplesect+) nav.class*) ;
formalpara ::= formalpara::(formalpara.attlist title ndxterm.class* para) ;
sect2 ::= sect2::(sect2.attlist sect2info? sect.title.content nav.class* (divcomponent.mix+ (refentry.class*) | (sect3*) | (simplesect*)) | (refentry.class+) | (sect3+) | (simplesect+) nav.class*) ;
sect1 ::= sect1::(sect1.attlist sect1info? sect.title.content nav.class* (divcomponent.mix+ (refentry.class*) | (sect2*) | (simplesect*)) | (refentry.class+) | (sect2+) | (simplesect+) nav.class*) ;
chapter ::= chapter::(chapter.attlist beginpage? chapterinfo? bookcomponent.title.content nav.class* tocchap? bookcomponent.content nav.class*) ;
methodparam ::= methodparam::(methodparam.attlist modifier* type? (parameter initializer?) | funcparams modifier*) ;
refsect2info ::= refsect2info::(refsect2info.attlist info.class+) ;
glossterm.attlist ::= linkend.attrib (baseform::string())? common.attrib glossterm.role.attrib local.glossterm.attrib ;
glossdiv ::= glossdiv::(glossdiv.attlist sect.title.content component.mix* glossentry+) ;
shortcut ::= shortcut::(shortcut.attlist (keycap | keycombo | keysym | mousebutton)+) ;
imageobjectco ::= imageobjectco::(imageobjectco.attlist areaspec imageobject calloutlist*) ;
linkends.attrib ::= (linkends::string())? ;
status.attrib ::= (status::string())? local.status.attrib ;
secondary.attlist ::= (sortas::string())? common.attrib primsecter.role.attrib local.primsecter.attrib ;
structfield ::= structfield::(structfield.attlist smallcptr.char.mix*) ;
pob ::= pob::(pob.attlist docinfo.char.mix*) ;
refdescriptor ::= refdescriptor::(refdescriptor.attlist refname.char.mix*) ;
returnvalue ::= returnvalue::(returnvalue.attlist smallcptr.char.mix*) ;
itemizedlist ::= itemizedlist::(itemizedlist.attlist blockinfo? formalobject.title.content? listpreamble.mix* listitem+) ;
highlights ::= highlights::(highlights.attlist highlights.mix+) ;
indexterm ::= indexterm::(indexterm.attlist primary? ((secondary ((tertiary (see | (seealso+))?) | see | (seealso+))?) | see | (seealso+))?) ;
year ::= year::(year.attlist docinfo.char.mix*) ;
revision.attrib ::= (revision::string())? ;
authorinitials ::= authorinitials::(authorinitials.attlist docinfo.char.mix*) ;
action ::= action::(action.attlist cptr.char.mix*) ;
guiicon ::= guiicon::(guiicon.attlist (smallcptr.char.mix | accel)*) ;
refnamediv ::= refnamediv::(refnamediv.attlist refdescriptor? refname+ refpurpose refclass* (remark | link.char.class)*) ;
varname ::= varname::(varname.attlist smallcptr.char.mix*) ;
trademark ::= trademark::(trademark.attlist (string() | link.char.class | tech.char.class | base.char.class | other.char.class | inlinegraphic | inlinemediaobject | emphasis)*) ;
callout ::= callout::(callout.attlist component.mix+) ;
authorblurb ::= authorblurb::(authorblurb.attlist title? para.class+) ;
vendor.attrib ::= (vendor::string())? ;
inlinegraphic ::= inlinegraphic::(inlinegraphic.attlist ε) ;
tocback ::= tocback::(tocback.attlist para.char.mix*) ;
msgtext ::= msgtext::(msgtext.attlist component.mix+) ;
prefaceinfo ::= prefaceinfo::(prefaceinfo.attlist info.class+) ;
guibutton ::= guibutton::(guibutton.attlist (smallcptr.char.mix | accel)*) ;
volumenum ::= volumenum::(volumenum.attlist docinfo.char.mix*) ;
pubdate ::= pubdate::(pubdate.attlist docinfo.char.mix*) ;
tocentry ::= tocentry::(tocentry.attlist para.char.mix*) ;
markup ::= markup::(markup.attlist smallcptr.char.mix*) ;
textdata.attlist ::= (encoding::string())? objectdata.attrib common.attrib textdata.role.attrib local.textdata.attrib ;
lineannotation ::= lineannotation::(lineannotation.attlist para.char.mix*) ;
mediaobject ::= mediaobject::(mediaobject.attlist objectinfo? mediaobject.mix+ caption?) ;
important ::= important::(important.attlist title? admon.mix+) ;
abstract ::= abstract::(abstract.attlist title? para.class+) ;
sect4.attlist ::= (renderas::("sect1" | "sect2" | "sect3" | "sect5"))? label.attrib status.attrib common.attrib sect4.role.attrib local.sect4.attrib ;
application.attlist ::= (class::("hardware" | "software"))? moreinfo.attrib common.attrib application.role.attrib local.application.attrib ;
glossseealso.attlist ::= (otherterm::string())? common.attrib glossseealso.role.attrib local.glossseealso.attrib ;
simplelist.attlist ::= (columns::string())? (type::("inline" | "vert" | "horiz"))? common.attrib simplelist.role.attrib local.simplelist.attrib ;
sect2.attlist ::= (renderas::("sect1" | "sect3" | "sect4" | "sect5"))? label.attrib status.attrib common.attrib sect2.role.attrib local.sect2.attrib ;
artpagenums ::= artpagenums::(artpagenums.attlist docinfo.char.mix*) ;
glossary ::= glossary::(glossary.attlist glossaryinfo? bookcomponent.title.content? component.mix* (glossdiv+) | (glossentry+) bibliography?) ;
collabname ::= collabname::(collabname.attlist docinfo.char.mix*) ;
subtitle ::= subtitle::(subtitle.attlist title.char.mix*) ;
mousebutton ::= mousebutton::(mousebutton.attlist smallcptr.char.mix*) ;
citerefentry ::= citerefentry::(citerefentry.attlist refentrytitle manvolnum?) ;
tbody ::= tbody::(tbody.attlist row+) ;
os.attrib ::= (os::string())? ;
itemizedlist.attlist ::= (spacing::("normal" | "compact"))? mark.attrib common.attrib itemizedlist.role.attrib local.itemizedlist.attrib ;
setinfo ::= setinfo::(setinfo.attlist info.class+) ;
blockquote ::= blockquote::(blockquote.attlist title? attribution? component.mix+) ;
remap.attrib ::= (remap::string())? ;
replaceable ::= replaceable::(replaceable.attlist (string() | link.char.class | optional | base.char.class | other.char.class | inlinegraphic | inlinemediaobject | co)*) ;
issuenum ::= issuenum::(issuenum.attlist docinfo.char.mix*) ;
collab ::= collab::(collab.attlist collabname affiliation*) ;
entrytbl ::= entrytbl::(entrytbl.attlist tbl.entrytbl.mdl) ;
ackno ::= ackno::(ackno.attlist docinfo.char.mix*) ;
sidebarinfo ::= sidebarinfo::(sidebarinfo.attlist info.class+) ;
refsynopsisdiv ::= refsynopsisdiv::(refsynopsisdiv.attlist refsynopsisdivinfo? refsect.title.content? (refcomponent.mix+ refsect2*) | (refsect2+)) ;
othercredit ::= othercredit::(othercredit.attlist personname | (person.ident.mix+) (personblurb | email | address)*) ;
informalfigure.attlist ::= (float::yesorno.attvals)? (pgwide::yesorno.attvals)? label.attrib common.attrib informalfigure.role.attrib local.informalfigure.attrib ;
glosssee ::= glosssee::(glosssee.attlist para.char.mix*) ;
keysym ::= keysym::(keysym.attlist smallcptr.char.mix*) ;
filename ::= filename::(filename.attlist cptr.char.mix*) ;
superscript ::= superscript::(superscript.attlist (string() | link.char.class | emphasis | replaceable | symbol | inlinegraphic | inlinemediaobject | base.char.class | other.char.class)*) ;
seglistitem ::= seglistitem::(seglistitem.attlist seg+) ;
spanspec ::= spanspec::(spanspec.attlist ε) ;
guisubmenu ::= guisubmenu::(guisubmenu.attlist (smallcptr.char.mix | accel)*) ;
classname ::= classname::(classname.attlist smallcptr.char.mix*) ;
street ::= street::(street.attlist docinfo.char.mix*) ;
sbr ::= sbr::(sbr.attlist ε) ;
primary ::= primary::(primary.attlist ndxterm.char.mix*) ;
trademark.attlist ::= (class::("service" | "trade" | "registered" | "copyright"))? common.attrib trademark.role.attrib local.trademark.attrib ;
pagenum.attrib ::= (pagenum::string())? ;
sect5info ::= sect5info::(sect5info.attlist info.class+) ;
--------------------markup::kml.bgf--------------------
Key ::= value::String ;
Tessellate ::= value::String ;
RefreshMode ::= value::String ;
LineStyle ::= id::String ;
FlyToView ::= value::Boolean ;
Visibility ::= value::String ;
OverlayXY ::= x::String y::String xunits::String yunits::String ;
TextNode ::= (nodes::Node)+ ;
South ::= value::Double ;
RefreshVisibility ::= value::String ;
AltitudeModeValue ::= (clampedToGround::ε) | (relativeToGround::ε) | (absolute::ε) ;
Name ::= value::String ;
Scale ::= value::String ;
MinRefreshPeriod ::= value::String ;
Open ::= value::String ;
Width ::= value::Double ;
North ::= value::Double ;
ScreenOverlay ::= id::String ;
Fill ::= value::Boolean ;
Outline ::= value::String ;
Heading ::= value::Double ;
Size ::= x::String y::String xunits::String yunits::String ;
RefreshInterval ::= value::String ;
StyleUrl ::= value::String ;
Rotation ::= value::String ;
AttributeNode ::= value::String ;
Tilt ::= value::String ;
Range ::= value::String ;
East ::= value::Double ;
ViewFormat ::= value::String ;
Description ::= value::String ;
Type ::= value::String ;
Y ::= value::Integer ;
ViewRefreshMode ::= value::String ;
X ::= value::Integer ;
W ::= value::Integer ;
TextColor ::= value::String ;
Address ::= value::String ;
ViewBoundScale ::= value::String ;
Style ::= id::String ;
West ::= value::Double ;
Longitude ::= value::Double ;
ScreenXY ::= x::String y::String xunits::String yunits::String ;
Latitude ::= value::Double ;
Href ::= value::String ;
ColorModeValue ::= (normal::ε) | (random::ε) ;
Parent ::= value::String ;
DrawOrder ::= value::Integer ;
H ::= value::Integer ;
ColorMode ::= value::ColorModeValue ;
LinkName ::= value::String ;
Extrude ::= value::Boolean ;
AltitudeMode ::= value::AltitudeModeValue ;
Cookie ::= value::String ;
ViewRefreshTime ::= value::Integer ;
Color ::= value::String ;
LinkDescription ::= value::String ;
--------------------markup::graphml-doux.bgf--------------------
Key ::= for::ElemType attrName::String type::AttrType defValue::String ;
Graph ::= (contents::Element)+ edgeDefault::EdgeType ;
Edge ::= source::Node target::Node sourceport::Port targetport::Port ;
Element ::= Key ;
 Element ::= Graph ;
 Element ::= Edge ;
 Element ::= HyperEdge ;
 Element ::= Node ;
 Element ::= id::String (datas::Data)+ ;
AttrType ::= (double::ε) | (string::ε) | (integer::ε) | (boolean::ε) ;
Data ::= key::String value::String ;
ElemType ::= (edge::ε) | (node::ε) | (graph::ε) ;
HyperEdge ::= (endpoints::EndPoint)+ ;
EdgeType ::= (directed::ε) | (undirected::ε) ;
EndPoint ::= node::Node port::Port ;
Node ::= subgraph::Graph (ports::Port)+ ;
Root ::= (keys::Key)+ (graphs::Graph)+ ;
Port ::= name::String ;
--------------------markup::json-rascal-abstract.bgf--------------------
Value ::= (null::ε) | (object::(members::((memberName::string() memberValue::Value)*))) | (array::(values::(Value*))) | (integer::(n::integer())) | (float::(r::integer())) | (string::(s::string())) | (boolean::(b::("true" | "false"))) ;
--------------------markup::json-rascal-concrete.bgf--------------------
Object ::= [Object] "{" members::({Member ","}*) "}" ;
Member ::= [Member] memberName::StringLiteral ":" memberValue::Value ;
Array ::= [Array] "[" values::({Value ","}*) "]" ;
--------------------markup::json-zaytsev-abstract.bgf--------------------
JSO ::= (jsnumber::(n::integer())) | (jsstring::(s::string())) | (jsboolean::(b::("true" | "false"))) | (jsarray::(xs::(JSO*))) | (jsobject::(kvs::((JSO JSO)*))) | (jsnull::ε) ;
--------------------markup::json-zaytsev-concrete.bgf--------------------
JSONKeyValue ::= key::JSONBasicType ":" val::JSONBasicType ;
--------------------markup::mathml-furubayashi.bgf--------------------
mml.mrow.qname ::= mrow::(mml.PresExpression mml.Common.attrib) ;
mml.sec.qname ::= sec::(ε mml.operators.common.attrib) ;
mml.floor.qname ::= floor::(ε mml.operators.common.attrib) ;
mml.att-depth ::= (depth::mml.length.datatype)? ;
mml.att-groupalign ::= (groupalign::mml.groupalign.datatype)? ;
mml.cot.qname ::= cot::(ε mml.operators.common.attrib) ;
mml.maligngroup.qname ::= maligngroup::(ε mml.Common.attrib mml.att-groupalign) ;
mml.vector.qname ::= vector::(mml.ContentExpression mml.Common.attrib) ;
mml.ln.qname ::= ln::(ε mml.operators.common.attrib) ;
mml.matrix.qname ::= matrix::(mml.ContentExpression mml.Common.attrib) ;
mml.msubsup.qname ::= msubsup::(mml.PresExpression mml.Common.attrib mml.att-subscriptshift mml.att-superscriptshift) ;
mml.msub.qname ::= msub::(mml.PresExpression mml.Common.attrib mml.att-subscriptshift) ;
mml.att-columnwidth ::= (columnwidth::mml.columnwidth.datatype)? ;
mml.annotation.qname ::= annotation::(mml.Annotation.datatype mml.Common.attrib mml.att-encoding) ;
mml.att-occurrence ::= (occurrence::("prefix" | "infix" | "function-model"))? ;
mml.att-mediummathspace ::= (mediummathspace::mml.length.datatype)? ;
mml.apply.qname ::= apply::(mml.ContentExpression mml.Common.attrib) ;
mml.att-accent ::= (accent::("true" | "false"))? ;
mml.mtr.qname ::= mtr::(mml.PresExpression mml.Common.attrib mml.att-rowalign mml.att-columnalign mml.att-groupalign) ;
mml.ci.qname ::= ci::((mml.MathMLCharacters | mml.PresInCont)* mml.Common.attrib mml.att-type mml.att-definition mml.att-encoding) ;
mml.att-baseline ::= (baseline::string())? ;
mml.false.qname ::= false::(ε mml.operators.common.attrib) ;
mml.arcsinh.qname ::= arcsinh::(ε mml.operators.common.attrib) ;
mml.att-veryverythinmathspace ::= (veryverythinmathspace::mml.length.datatype)? ;
mml.intersect.qname ::= intersect::(ε mml.operators.common.attrib) ;
mml.att-superscriptshift ::= (superscriptshift::mml.length.datatype)? ;
mml.att-type ::= (type::("e-notation" | "integer" | "rational" | "real" | "float" | "complex-polar" | "complex-cartesian" | "constant"))? ;
mml.primes.qname ::= primes::(ε mml.operators.common.attrib) ;
mml.lcm.qname ::= lcm::(ε mml.operators.common.attrib) ;
mml.reals.qname ::= reals::(ε mml.operators.common.attrib) ;
mml.logbase.qname ::= logbase::(mml.ContentExpression mml.Common.attrib) ;
mml.arctan.qname ::= arctan::(ε mml.operators.common.attrib) ;
mml.att-linebreak ::= (linebreak::("auto" | "newline" | "indentingnewline" | "nobreak" | "goodbreak" | "badbreak"))? ;
mml.att-thinmathspace ::= (thinmathspace::mml.length.datatype)? ;
mml.arcsin.qname ::= arcsin::(ε mml.operators.common.attrib) ;
mml.malignmark.qname ::= malignmark::(ε mml.att-edge) ;
mml.diff.qname ::= diff::(ε mml.operators.common.attrib) ;
mml.times.qname ::= times::(ε mml.operators.common.attrib) ;
mml.mtable.qname ::= mtable::(mml.PresExpression mml.Common.attrib mml.att-tableinfo) ;
mml.att-columnspan ::= (columnspan::mml.columnspan.datatype)? ;
mml.integers.qname ::= integers::(ε mml.operators.common.attrib) ;
mml.matrixrow.qname ::= matrixrow::(mml.ContentExpression mml.Common.attrib) ;
mml.notprsubset.qname ::= notprsubset::(ε mml.operators.common.attrib) ;
mml.att-stretchy ::= (stretchy::("true" | "false"))? ;
mml.eq.qname ::= eq::(ε mml.operators.common.attrib) ;
mml.semantics.qname ::= semantics::(mml.ContentExpression mml.Common.attrib mml.att-definition mml.att-encoding) ;
mml.att-fontweight ::= (fontweight::("normal" | "bold"))? ;
mml.setdiff.qname ::= setdiff::(ε mml.operators.common.attrib) ;
mml.or.qname ::= or::(ε mml.operators.common.attrib) ;
mml.subset.qname ::= subset::(ε mml.operators.common.attrib) ;
mml.att-overflow ::= (overflow::("scroll" | "elide" | "truncate" | "scale"))? ;
mml.list.qname ::= list::(mml.ContentExpression mml.Common.attrib mml.att-order) ;
mml.att-mathcolor ::= (mathcolor::mml.color.datatype)? ;
mml.approx.qname ::= approx::(ε mml.operators.common.attrib) ;
mml.plus.qname ::= plus::(ε mml.operators.common.attrib) ;
mml.rem.qname ::= rem::(ε mml.operators.common.attrib) ;
mml.att-scope ::= (scope::("local" | "global"))? ;
mml.domainofapplication.qname ::= domainofapplication::(mml.ContentExpression mml.Common.attrib) ;
mml.geq.qname ::= geq::(ε mml.operators.common.attrib) ;
mml.compose.qname ::= compose::(ε mml.operators.common.attrib) ;
mml.att-nargs ::= (nargs::("nary" | mml.number.datatype))? ;
mml.att-veryverythickmathspace ::= (veryverythickmathspace::mml.length.datatype)? ;
mml.lt.qname ::= lt::(ε mml.operators.common.attrib) ;
mml.lambda.qname ::= lambda::(mml.ContentExpression mml.Common.attrib) ;
mml.mean.qname ::= mean::(ε mml.operators.common.attrib) ;
mml.interval.qname ::= interval::(mml.ContentExpression mml.Common.attrib mml.att-closure) ;
mml.mlabeledtr.qname ::= mlabeledtr::(mml.PresExpression mml.Common.attrib mml.att-rowalign mml.att-columnalign mml.att-groupalign) ;
mml.att-display ::= (display::string())? ;
mml.gcd.qname ::= gcd::(ε mml.operators.common.attrib) ;
mml.msup.qname ::= msup::(mml.PresExpression mml.Common.attrib mml.att-superscriptshift) ;
mml.uplimit.qname ::= uplimit::(mml.ContentExpression mml.Common.attrib) ;
mml.att-symmetric ::= (symmetric::("true" | "false"))? ;
mml.notanumber.qname ::= notanumber::(ε mml.operators.common.attrib) ;
mml.att-subscriptshift ::= (subscriptshift::mml.length.datatype)? ;
mml.att-fence ::= (fence::("true" | "false"))? ;
mml.att-definition ::= (definitionURL::mml.uri.datatype)? ;
mml.att-columnspacing ::= (columnspacing::mml.columnspacing.datatype)? ;
mml.att-alignmentscope ::= (alignmentscope::mml.alignmentscope.datatype)? ;
mml.att-base ::= (base::mml.number.datatype)? ;
mml.abs.qname ::= abs::(ε mml.operators.common.attrib) ;
mml.minus.qname ::= minus::(ε mml.operators.common.attrib) ;
mml.att-alt ::= (alt::string())? ;
mml.att-scriptminsize ::= (scriptminsize::mml.length.datatype)? ;
mml.piece.qname ::= piece::(mml.ContentExpression mml.Common.attrib) ;
mml.cartesianproduct.qname ::= cartesianproduct::(ε mml.operators.common.attrib) ;
mml.declare.qname ::= declare::(mml.ContentExpression mml.Common.attrib mml.att-type mml.att-scope mml.att-nargs mml.att-occurrence mml.att-definition mml.att-encoding) ;
mml.factorof.qname ::= factorof::(ε mml.operators.common.attrib) ;
mml.in.qname ::= in::(ε mml.operators.common.attrib) ;
mml.mstyle.qname ::= mstyle::(mml.PresExpression mml.Common.attrib mml.att-fontinfo mml.att-opinfo mml.att-lquote mml.att-rquote mml.att-linethickness mml.att-scriptlevel mml.att-scriptsizemultiplier mml.att-scriptminsize mml.att-background mml.att-veryverythinmathspace mml.att-verythinmathspace mml.att-thinmathspace mml.att-mediummathspace mml.att-thickmathspace mml.att-verythickmathspace mml.att-veryverythickmathspace mml.att-open mml.att-close mml.att-separators mml.att-subscriptshift mml.att-superscriptshift mml.att-accentunder mml.att-tableinfo mml.att-rowspan mml.att-columnspan mml.att-edge mml.att-actiontype) ;
mml.att-form ::= (form::("prefix" | "infix" | "postfix"))? ;
mml.coth.qname ::= coth::(ε mml.operators.common.attrib) ;
mml.eulergamma.qname ::= eulergamma::(ε mml.operators.common.attrib) ;
mml.set.qname ::= set::(mml.ContentExpression mml.Common.attrib mml.att-type) ;
mml.tan.qname ::= tan::(ε mml.operators.common.attrib) ;
mml.att-scriptlevel ::= (scriptlevel::mml.number.datatype)? ;
mml.att-mathbackground ::= (mathbackground::mml.color.datatype)? ;
mml.sin.qname ::= sin::(ε mml.operators.common.attrib) ;
mml.att-verythinmathspace ::= (verythinmathspace::mml.length.datatype)? ;
mml.att-equalrows ::= (equalrows::("true" | "false"))? ;
mml.min.qname ::= min::(ε mml.operators.common.attrib) ;
mml.grad.qname ::= grad::(ε mml.operators.common.attrib) ;
mml.att-background ::= (background::mml.color.datatype)? ;
mml.munder.qname ::= munder::(mml.PresExpression mml.Common.attrib mml.att-accentunder) ;
mml.att-movablelimits ::= (movablelimits::("true" | "false"))? ;
mml.att-rowspacing ::= (rowspacing::mml.rowspacing.datatype)? ;
mml.att-macros ::= (macros::string())? ;
mml.bvar.qname ::= bvar::(mml.ContentExpression mml.Common.attrib) ;
mml.att-linethickness ::= (linethickness::(mml.length.datatype | "thin" | "medium" | "thick"))? ;
mml.rationals.qname ::= rationals::(ε mml.operators.common.attrib) ;
mml.exponentiale.qname ::= exponentiale::(ε mml.operators.common.attrib) ;
mml.att-close ::= (close::string())? ;
mml.pi.qname ::= pi::(ε mml.operators.common.attrib) ;
mml.att-lspace ::= (lspace::mml.namedspace.datatype)? ;
mml.forall.qname ::= forall::(ε mml.operators.common.attrib) ;
mml.arccos.qname ::= arccos::(ε mml.operators.common.attrib) ;
mml.att-columnalign ::= (columnalign::mml.columnalign.datatype)? ;
mml.arccoth.qname ::= arccoth::(ε mml.operators.common.attrib) ;
mml.gt.qname ::= gt::(ε mml.operators.common.attrib) ;
mml.product.qname ::= product::(ε mml.operators.common.attrib) ;
mml.int.qname ::= int::(ε mml.operators.common.attrib) ;
mml.att-columnlines ::= (columnlines::mml.lines.datatype)? ;
mml.att-name ::= (name::string())? ;
mml.att-separator ::= (separator::("true" | "false"))? ;
mml.tanh.qname ::= tanh::(ε mml.operators.common.attrib) ;
mml.ms.qname ::= ms::((mml.MathMLCharacters | mml.malignmark.qname)* mml.Common.attrib mml.att-fontinfo mml.att-lquote mml.att-rquote) ;
mml.tendsto.qname ::= tendsto::(ε mml.operators.common.attrib mml.att-type) ;
mml.att-thickmathspace ::= (thickmathspace::mml.length.datatype)? ;
mml.selector.qname ::= selector::(ε mml.operators.common.attrib) ;
mml.laplacian.qname ::= laplacian::(ε mml.operators.common.attrib) ;
mml.att-largeop ::= (largeop::("true" | "false"))? ;
mml.att-alttext ::= (alttext::string())? ;
mml.and.qname ::= and::(ε mml.operators.common.attrib) ;
mml.determinant.qname ::= determinant::(ε mml.operators.common.attrib) ;
mml.not.qname ::= not::(ε mml.operators.common.attrib) ;
mml.piecewise.qname ::= piecewise::(mml.piece.qname* mml.otherwise.qname? mml.Common.attrib) ;
mml.att-rowalign ::= (rowalign::mml.rowalign.datatype)? ;
mml.att-width ::= (width::mml.namedspace.datatype)? ;
mml.att-fontstyle ::= (fontstyle::("normal" | "italic"))? ;
mml.att-rowlines ::= (rowlines::mml.lines.datatype)? ;
mml.partialdiff.qname ::= partialdiff::(ε mml.operators.common.attrib) ;
mml.moment.qname ::= moment::(ε mml.operators.common.attrib) ;
mml.mover.qname ::= mover::(mml.PresExpression mml.Common.attrib mml.att-accent) ;
mml.att-closure ::= (closure::("open" | "closed" | "open-closed" | "closed-open"))? ;
mml.mpadded.qname ::= mpadded::(mml.PresExpression mml.Common.attrib mml.att-sizeinfo mml.att-lspace) ;
mml.mspace.qname ::= mspace::(ε mml.Common.attrib mml.att-sizeinfo mml.att-linebreak) ;
mml.csymbol.qname ::= csymbol::((mml.MathMLCharacters | mml.PresInCont)* mml.Common.attrib mml.att-type mml.att-definition mml.att-encoding) ;
mml.arctanh.qname ::= arctanh::(ε mml.operators.common.attrib) ;
mml.implies.qname ::= implies::(ε mml.operators.common.attrib) ;
mml.att-rspace ::= (rspace::mml.namedspace.datatype)? ;
mml.notsubset.qname ::= notsubset::(ε mml.operators.common.attrib) ;
mml.att-encoding ::= (encoding::string())? ;
mml.att-bevelled ::= (bevelled::("true" | "false"))? ;
mml.ident.qname ::= ident::(ε mml.operators.common.attrib) ;
mml.equivalent.qname ::= equivalent::(ε mml.operators.common.attrib) ;
mml.att-open ::= (open::string())? ;
mml.att-rowspan ::= (rowspan::("top" | "bottom" | "center" | "baseline" | "axis"))? ;
mml.mode.qname ::= mode::(ε mml.operators.common.attrib) ;
mml.menclose.qname ::= menclose::(mml.PresExpression mml.Common.attrib (notation::("longdiv" | "actuarial" | "radical"))?) ;
mml.root.qname ::= root::(ε mml.operators.common.attrib) ;
mml.mn.qname ::= mn::((mml.MathMLCharacters | mml.malignmark.qname)* mml.Common.attrib mml.att-fontinfo) ;
mml.factorial.qname ::= factorial::(ε mml.operators.common.attrib) ;
mml.max.qname ::= max::(ε mml.operators.common.attrib) ;
mml.complexes.qname ::= complexes::(ε mml.operators.common.attrib) ;
mml.exp.qname ::= exp::(ε mml.operators.common.attrib) ;
mml.condition.qname ::= condition::(mml.ContentExpression mml.Common.attrib) ;
mml.att-verythickmathspace ::= (verythickmathspace::mml.length.datatype)? ;
mml.att-framespacing ::= (framespacing::mml.framespacing.datatype)? ;
mml.att-displaystyle ::= (displaystyle::("true" | "false"))? ;
mml.degree.qname ::= degree::(mml.ContentExpression mml.Common.attrib) ;
mml.fn.qname ::= fn::(mml.ContentExpression mml.operators.common.attrib) ;
mml.att-equalcolumns ::= (equalcolumns::("true" | "false"))? ;
mml.domain.qname ::= domain::(ε mml.operators.common.attrib) ;
mml.cos.qname ::= cos::(ε mml.operators.common.attrib) ;
mml.sdev.qname ::= sdev::(ε mml.operators.common.attrib) ;
mml.log.qname ::= log::(ε mml.operators.common.attrib) ;
mml.annotation-xml.qname ::= annotation-xml::(mml.Annotation-xml.datatype mml.Common.attrib mml.att-encoding) ;
mml.divide.qname ::= divide::(ε mml.operators.common.attrib) ;
mml.none.qname ::= none::ε ;
mml.reln.qname ::= reln::(mml.ContentExpression mml.Common.attrib) ;
mml.emptyset.qname ::= emptyset::(ε mml.operators.common.attrib) ;
mml.otherwise.qname ::= otherwise::(mml.ContentExpression mml.Common.attrib) ;
mml.codomain.qname ::= codomain::(ε mml.operators.common.attrib) ;
mml.att-frame ::= (frame::("none" | "solid" | "dashed"))? ;
mml.att-lquote ::= (lquote::string())? ;
mml.curl.qname ::= curl::(ε mml.operators.common.attrib) ;
mml.inverse.qname ::= inverse::(ε mml.operators.common.attrib) ;
mml.att-scriptsizemultiplier ::= (scriptsizemultiplier::mml.nonnegativefloat.datatype)? ;
mml.quotient.qname ::= quotient::(ε mml.operators.common.attrib) ;
mml.infinity.qname ::= infinity::(ε mml.operators.common.attrib) ;
mml.att-mathsize ::= (mathsize::("small" | "normal" | "big" | mml.length.datatype))? ;
mml.att-color ::= (color::mml.color.datatype)? ;
mml.arccsc.qname ::= arccsc::(ε mml.operators.common.attrib) ;
mml.munderover.qname ::= munderover::(mml.PresExpression mml.Common.attrib mml.att-accent mml.att-accentunder) ;
mml.mglyph.qname ::= mglyph::(ε mml.att-alt mml.att-fontfamily mml.att-index) ;
mml.real.qname ::= real::(ε mml.operators.common.attrib) ;
mml.mi.qname ::= mi::((mml.MathMLCharacters | mml.malignmark.qname)* mml.Common.attrib mml.att-fontinfo) ;
mml.mmultiscripts.qname ::= mmultiscripts::(mml.PresExpression mml.Common.attrib mml.att-subscriptshift mml.att-superscriptshift) ;
mml.att-altimg ::= (altimg::mml.uri.datatype)? ;
mml.mfrac.qname ::= mfrac::(mml.PresExpression mml.Common.attrib mml.att-bevelled mml.att-linethickness) ;
mml.xor.qname ::= xor::(ε mml.operators.common.attrib) ;
mml.neq.qname ::= neq::(ε mml.operators.common.attrib) ;
mml.mtext.qname ::= mtext::((mml.MathMLCharacters | mml.malignmark.qname)* mml.Common.attrib mml.att-fontinfo) ;
mml.csch.qname ::= csch::(ε mml.operators.common.attrib) ;
mml.leq.qname ::= leq::(ε mml.operators.common.attrib) ;
mml.outerproduct.qname ::= outerproduct::(ε mml.operators.common.attrib) ;
mml.conjugate.qname ::= conjugate::(ε mml.operators.common.attrib) ;
mml.att-fontfamily ::= (fontfamily::string())? ;
mml.card.qname ::= card::(ε mml.operators.common.attrib) ;
mml.att-order ::= (order::("lexicographic" | "numeric"))? ;
mml.true.qname ::= true::(ε mml.operators.common.attrib) ;
mml.att-actiontype ::= ((actiontype::"toggle" selection::mml.positiveinteger.datatype) | (actiontype::"statusline") | (actiontype::"tooltip") | (actiontype::"highlight" mml.color.datatype*) | (actiontype::"menu" selection::mml.positiveinteger.datatype))? ;
mml.mroot.qname ::= mroot::(mml.PresExpression mml.Common.attrib) ;
mml.union.qname ::= union::(ε mml.operators.common.attrib) ;
mml.median.qname ::= median::(ε mml.operators.common.attrib) ;
mml.math.qname ::= math::(mml.MathExpression mml.att-topinfo mml.att-browif) ;
mml.sum.qname ::= sum::(ε mml.operators.common.attrib) ;
mml.cosh.qname ::= cosh::(ε mml.operators.common.attrib) ;
mml.mphantom.qname ::= mphantom::(mml.PresExpression mml.Common.attrib) ;
mml.arcsec.qname ::= arcsec::(ε mml.operators.common.attrib) ;
mml.mfenced.qname ::= mfenced::(mml.PresExpression mml.Common.attrib mml.att-open mml.att-close mml.att-separators) ;
mml.merror.qname ::= merror::(mml.PresExpression mml.Common.attrib) ;
mml.Common.attrib ::= (xlink:href::mml.uri.datatype)? (class::string())? (style::string())? (id::mml.id.datatype)? (xref::mml.idref.datatype)? (other::string())? ;
mml.ceiling.qname ::= ceiling::(ε mml.operators.common.attrib) ;
mml.limit.qname ::= limit::(ε mml.operators.common.attrib) ;
mml.sech.qname ::= sech::(ε mml.operators.common.attrib) ;
mml.arccot.qname ::= arccot::(ε mml.operators.common.attrib) ;
mml.transpose.qname ::= transpose::(ε mml.operators.common.attrib) ;
mml.divergence.qname ::= divergence::(ε mml.operators.common.attrib) ;
mml.imaginaryi.qname ::= imaginaryi::(ε mml.operators.common.attrib) ;
mml.att-fontsize ::= (fontsize::mml.length.datatype)? ;
mml.att-rquote ::= (rquote::string())? ;
mml.arccsch.qname ::= arccsch::(ε mml.operators.common.attrib) ;
mml.exists.qname ::= exists::(ε mml.operators.common.attrib) ;
mml.att-edge ::= (edge::("left" | "right"))? ;
mml.sep.qname ::= sep::ε ;
mml.mtd.qname ::= mtd::(mml.PresExpression mml.Common.attrib mml.att-rowalign mml.att-columnalign mml.att-groupalign mml.att-rowspan mml.att-columnspan) ;
mml.imaginary.qname ::= imaginary::(ε mml.operators.common.attrib) ;
mml.arg.qname ::= arg::(ε mml.operators.common.attrib) ;
mml.arccosh.qname ::= arccosh::(ε mml.operators.common.attrib) ;
mml.att-separators ::= (separators::string())? ;
mml.msqrt.qname ::= msqrt::(mml.PresExpression mml.Common.attrib) ;
mml.momentabout.qname ::= momentabout::(mml.ContentExpression mml.Common.attrib) ;
mml.vectorproduct.qname ::= vectorproduct::(ε mml.operators.common.attrib) ;
mml.att-align ::= (align::mml.align.datatype)? ;
mml.arcsech.qname ::= arcsech::(ε mml.operators.common.attrib) ;
mml.att-height ::= (height::mml.length.datatype)? ;
mml.naturalnumbers.qname ::= naturalnumbers::(ε mml.operators.common.attrib) ;
mml.att-mode ::= (mode::string())? ;
mml.power.qname ::= power::(ε mml.operators.common.attrib) ;
mml.att-mathvariant ::= (mathvariant::("normal" | "bold" | "italic" | "bold-italic" | "double-struck" | "bold-fraktur" | "script" | "bold-script" | "fraktur" | "sans-serif" | "bold-sans-serif" | "sans-serif-italic" | "sans-serif-bold-italic" | "monospace"))? ;
mml.scalarproduct.qname ::= scalarproduct::(ε mml.operators.common.attrib) ;
mml.notin.qname ::= notin::(ε mml.operators.common.attrib) ;
mml.variance.qname ::= variance::(ε mml.operators.common.attrib) ;
mml.csc.qname ::= csc::(ε mml.operators.common.attrib) ;
mml.mprescripts.qname ::= mprescripts::ε ;
mml.cn.qname ::= cn::((mml.MathMLCharacters | mml.PresInCont | mml.sep.qname)* mml.Common.attrib mml.att-type mml.att-base mml.att-definition mml.att-encoding) ;
mml.lowlimit.qname ::= lowlimit::(mml.ContentExpression mml.Common.attrib) ;
mml.att-maxsize ::= (maxsize::(mml.namedspace.datatype | "infinity"))? ;
mml.prsubset.qname ::= prsubset::(ε mml.operators.common.attrib) ;
mml.mo.qname ::= mo::((mml.MathMLCharacters | mml.malignmark.qname)* mml.Common.attrib mml.att-fontinfo mml.att-opinfo) ;
mml.maction.qname ::= maction::(mml.PresExpression mml.Common.attrib mml.att-actiontype) ;
mml.image.qname ::= image::(ε mml.operators.common.attrib) ;
mml.att-minsize ::= (minsize::mml.namedspace.datatype)? ;
mml.att-index ::= (index::mml.number.datatype)? ;
mml.att-accentunder ::= (accentunder::("true" | "false"))? ;
mml.sinh.qname ::= sinh::(ε mml.operators.common.attrib) ;
--------------------markup::pnml-arbitrarydeclarations.bgf--------------------
Unparsed ::= unparsed::(Declaration.content anyElement*) ;
ArbitraryOperator ::= arbitraryoperator::(OperatorDeclaration.content (input::Sort)* output::Sort) ;
ArbitrarySort ::= arbitrarysort::SortDeclaration.content ;
--------------------markup::pnml-booleans.bgf--------------------
Inequality ::= inequality::Operator.content ;
BooleanConstant ::= booleanconstant::(value::("true" | "false") BuiltInConstant.content) ;
Equality ::= equality::Operator.content ;
Bool ::= bool::ε ;
Imply ::= imply::BooleanOperator.content ;
And ::= and::BooleanOperator.content ;
Not ::= not::BooleanOperator.content ;
Or ::= or::BooleanOperator.content ;
--------------------markup::pnml-conventions.bgf--------------------
positiveintegerlabel.content ::= text::integer() annotationstandard.content ;
nonnegativeintegerlabel.content ::= text::integer() annotationstandard.content ;
--------------------markup::pnml-cyclicenumerations.bgf--------------------
CyclicEnumeration ::= cyclicenumeration::FiniteEnumeration.content ;
Predecessor ::= predecessor::CyclicEnumOperator.content ;
Successor ::= successor::CyclicEnumOperator.content ;
--------------------markup::pnml-dots.bgf--------------------
DotConstant ::= dotconstant::ε ;
Dot ::= dot::ε ;
--------------------markup::r2ml.bgf--------------------
DerivationRuleSet ::= (rules::Rules/DerivationRule)+ ;
RuleBase ::= vocabularies::Vocabulary/VocBasic/Vocabulary (externalVocabulaires::Vocabulary/VocBuiltin/ExternalVocabulary)+ (rules::RuleSet)+ ruleBaseID::String ;
ProductionRuleSet ::= (rules::Rules/ProductionRule)+ ;
ReactionRuleSet ::= (rules::Rules/ReactionRule)+ ;
CollectionTypes ::= (individual::ε) | (set::ε) | (orderedSet::ε) | (bag::ε) | (sequence::ε) ;
IntegrityRuleSet ::= (rules::Rules/IntegrityRule)+ ;
ExternalVocabularyLanguage ::= (RDFS::ε) | (UML::ε) | (OWL::ε) ;
PredicateCategory ::= (closed::ε) | (open::ε) | (partial::ε) ;
EventType ::= eventTypeID::String ;
PredicateType ::= (ObjectClassificationPredicate::ε) | (AttributionPredicate::ε) | (AssociationPredicate::ε) | (ReferencePropertyPredicate::ε) | (EqualityPredicate::ε) | (InequalityPredicate::ε) | (DatatypePredicate::ε) | (DataClassificationPredicate::ε) ;
--------------------markup::pnml-ext-inhibitor.bgf--------------------
refplace.content ::= referencePlace::refnode.content ;
font.element ::= font::((family::string())? (style::string())? (weight::string())? (size::string())? (decoration::("underline" | "overline" | "line-through"))? (align::("left" | "center" | "right"))? (rotation::integer())?) ;
arc.content ::= arc::(identifier.content source::string() target::string() Name? arc.labels (graphics::edgegraphics.content)? toolspecific.element*) ;
PTArcAnnotation ::= inscription::positiveintegerlabel.content ;
page.content ::= page::(identifier.content basicobject.content page.labels netobject.content* (graphics::pagegraphics.content)?) ;
positiveintegerlabel.content ::= text::integer() annotationstandard.content ;
toolspecific.element ::= toolspecific::(tool::string() version::string() anyElement*) ;
position.element ::= position::coordinate.attributes ;
annotationstandard.content ::= (graphics::annotationgraphics.content)? toolspecific.element* ;
nettype.uri ::= type::"http://www.pnml.org/version-2009/grammar/ptnet" ;
 nettype.uri ::= type::"http://www.pnml.org/version-2009/grammar/pnmlcoremodel" ;
dimension.element ::= dimension::(x::positiveDecimal.content y::positiveDecimal.content) ;
identifier.content ::= id::string() ;
place.content ::= place::(identifier.content basicobject.content place.labels node.content) ;
fill.element ::= fill::((color::color.type)? (gradient-color::color.type)? (gradient-rotation::("vertical" | "horizontal" | "diagonal"))? (image::string())?) ;
PTMarking ::= initialMarking::nonnegativeintegerlabel.content ;
coordinate.attributes ::= x::integer() y::integer() ;
node.content ::= (graphics::nodegraphics.content)? ;
ArcType ::= arctype::specialarc.value ;
Name ::= name::simpletextlabel.content ;
reference ::= ref::string() ;
net.element ::= net::(identifier.content nettype.uri Name? net.labels page.content+ toolspecific.element*) ;
pnml.element ::= pnml::(pnml.content+) ;
simpletext.content ::= (text::string())? ;
nonnegativeintegerlabel.content ::= text::integer() annotationstandard.content ;
line.element ::= line::((shape::("line" | "curve"))? (color::color.type)? (width::positiveDecimal.content)? (style::("solid" | "dash" | "dot"))?) ;
offset.element ::= offset::coordinate.attributes ;
reftrans.content ::= referenceTransition::refnode.content ;
transition.content ::= transition::(identifier.content basicobject.content transition.labels node.content) ;
--------------------markup::pnml-ext-reset.bgf--------------------
refplace.content ::= referencePlace::refnode.content ;
font.element ::= font::((family::string())? (style::string())? (weight::string())? (size::string())? (decoration::("underline" | "overline" | "line-through"))? (align::("left" | "center" | "right"))? (rotation::integer())?) ;
arc.content ::= arc::(identifier.content source::string() target::string() Name? arc.labels (graphics::edgegraphics.content)? toolspecific.element*) ;
PTArcAnnotation ::= inscription::positiveintegerlabel.content ;
page.content ::= page::(identifier.content basicobject.content page.labels netobject.content* (graphics::pagegraphics.content)?) ;
positiveintegerlabel.content ::= text::integer() annotationstandard.content ;
toolspecific.element ::= toolspecific::(tool::string() version::string() anyElement*) ;
position.element ::= position::coordinate.attributes ;
annotationstandard.content ::= (graphics::annotationgraphics.content)? toolspecific.element* ;
nettype.uri ::= type::"http://www.pnml.org/version-2009/grammar/ptnet" ;
 nettype.uri ::= type::"http://www.pnml.org/version-2009/grammar/pnmlcoremodel" ;
dimension.element ::= dimension::(x::positiveDecimal.content y::positiveDecimal.content) ;
identifier.content ::= id::string() ;
place.content ::= place::(identifier.content basicobject.content place.labels node.content) ;
fill.element ::= fill::((color::color.type)? (gradient-color::color.type)? (gradient-rotation::("vertical" | "horizontal" | "diagonal"))? (image::string())?) ;
PTMarking ::= initialMarking::nonnegativeintegerlabel.content ;
coordinate.attributes ::= x::integer() y::integer() ;
node.content ::= (graphics::nodegraphics.content)? ;
ArcType ::= arctype::specialarc.value ;
Name ::= name::simpletextlabel.content ;
reference ::= ref::string() ;
net.element ::= net::(identifier.content nettype.uri Name? net.labels page.content+ toolspecific.element*) ;
pnml.element ::= pnml::(pnml.content+) ;
simpletext.content ::= (text::string())? ;
nonnegativeintegerlabel.content ::= text::integer() annotationstandard.content ;
line.element ::= line::((shape::("line" | "curve"))? (color::color.type)? (width::positiveDecimal.content)? (style::("solid" | "dash" | "dot"))?) ;
offset.element ::= offset::coordinate.attributes ;
reftrans.content ::= referenceTransition::refnode.content ;
transition.content ::= transition::(identifier.content basicobject.content transition.labels node.content) ;
--------------------markup::pnml-ext-resetinhibitor.bgf--------------------
refplace.content ::= referencePlace::refnode.content ;
font.element ::= font::((family::string())? (style::string())? (weight::string())? (size::string())? (decoration::("underline" | "overline" | "line-through"))? (align::("left" | "center" | "right"))? (rotation::integer())?) ;
arc.content ::= arc::(identifier.content source::string() target::string() Name? arc.labels (graphics::edgegraphics.content)? toolspecific.element*) ;
PTArcAnnotation ::= inscription::positiveintegerlabel.content ;
page.content ::= page::(identifier.content basicobject.content page.labels netobject.content* (graphics::pagegraphics.content)?) ;
positiveintegerlabel.content ::= text::integer() annotationstandard.content ;
toolspecific.element ::= toolspecific::(tool::string() version::string() anyElement*) ;
position.element ::= position::coordinate.attributes ;
annotationstandard.content ::= (graphics::annotationgraphics.content)? toolspecific.element* ;
nettype.uri ::= type::"http://www.pnml.org/version-2009/grammar/ptnet" ;
 nettype.uri ::= type::"http://www.pnml.org/version-2009/grammar/pnmlcoremodel" ;
dimension.element ::= dimension::(x::positiveDecimal.content y::positiveDecimal.content) ;
identifier.content ::= id::string() ;
place.content ::= place::(identifier.content basicobject.content place.labels node.content) ;
fill.element ::= fill::((color::color.type)? (gradient-color::color.type)? (gradient-rotation::("vertical" | "horizontal" | "diagonal"))? (image::string())?) ;
PTMarking ::= initialMarking::nonnegativeintegerlabel.content ;
coordinate.attributes ::= x::integer() y::integer() ;
node.content ::= (graphics::nodegraphics.content)? ;
ArcType ::= arctype::specialarc.value ;
Name ::= name::simpletextlabel.content ;
reference ::= ref::string() ;
net.element ::= net::(identifier.content nettype.uri Name? net.labels page.content+ toolspecific.element*) ;
pnml.element ::= pnml::(pnml.content+) ;
simpletext.content ::= (text::string())? ;
nonnegativeintegerlabel.content ::= text::integer() annotationstandard.content ;
line.element ::= line::((shape::("line" | "curve"))? (color::color.type)? (width::positiveDecimal.content)? (style::("solid" | "dash" | "dot"))?) ;
offset.element ::= offset::coordinate.attributes ;
reftrans.content ::= referenceTransition::refnode.content ;
transition.content ::= transition::(identifier.content basicobject.content transition.labels node.content) ;
--------------------markup::pnml-ext-specialarcs.bgf--------------------
ArcType ::= arctype::specialarc.value ;
--------------------markup::pnml-finiteenumerations.bgf--------------------
FiniteEnumeration ::= finiteenumeration::FiniteEnumeration.content ;
FEConstant ::= feconstant::OperatorDeclaration.content ;
--------------------markup::pnml-finiteintranges.bgf--------------------
FiniteIntRange ::= finiteintrange::(start::integer() end::integer()) ;
FIRGreaterThan ::= greaterthan::FiniteIntRangeOperator.content ;
FIRLessThan ::= lessthan::FiniteIntRangeOperator.content ;
FIRLessThanOrEqual ::= lessthanorequal::FiniteIntRangeOperator.content ;
FIRGreaterThanOrEqual ::= greaterthanorequal::FiniteIntRangeOperator.content ;
FiniteIntRangeConstant ::= finiteintrangeconstant::(value::integer() FiniteIntRange BuiltInConstant.content) ;
--------------------markup::pnml-guyard-basic.bgf--------------------
NetElement ::= type::URI document::PNMLDocument (contents::NetContent)+ (tools::ToolSpecific)+ netgraphics::NetGraphics name::Name ;
AlignType ::= (atleft::ε) | (atcenter::ε) | (atright::ε) ;
ShapeType ::= (shtline::ε) | (shtcurve::ε) ;
AnnotationGraphics ::= namedelement::LabeledElement offset::Offset font::Font fill::Fill line::Line ;
Inscription ::= arc::Arc ;
PNMLDocument ::= xmlns::URI (nets::NetElement)+ ;
RotationType ::= (rtvertical::ε) | (rthorizontal::ε) | (rtdiagonal::ε) ;
Transition ::= node::Node ;
Line ::= color::Color width::Integer shape::ShapeType style::StyleType nodegraphics::NodeGraphics edgegraphics::EdgeGraphics annotationgraphics::AnnotationGraphics ;
Label ::= text::String namedelement::LabeledElement ;
Offset ::= annotationgraphics::AnnotationGraphics ;
Arc ::= source::NetContentElement target::NetContentElement (tools::ToolSpecific)+ edgegraphics::EdgeGraphics inscription::Inscription ;
InitialMarking ::= place::Place ;
AnyElement ::= name::String text::String ;
Font ::= family::String style::String weight::String size::String decoration::DecorationType align::AlignType rotation::Integer annotationgraphics::AnnotationGraphics ;
NodeGraphics ::= node::Node position::Position dimension::Dimension fill::Fill line::Line ;
URI ::= value::String ;
StyleType ::= (sttsolid::ε) | (sttdash::ε) | (sttdot::ε) ;
Name ::= net::NetElement netcontent::NetContent ;
ToolSpecific ::= tool::String version::String (anyelement::AnyElement)+ net::NetElement arc::Arc node::Node ;
DecorationType ::= (dtunderligne::ε) | (dtoverligne::ε) | (dtlinethrough::ε) ;
Position ::= nodegraphics::NodeGraphics edgegraphics::EdgeGraphics ;
EdgeGraphics ::= arc::Arc (position::Position)+ fill::Fill line::Line ;
NetGraphics ::= net::NetElement ;
Place ::= initialmarking::InitialMarking ;
Dimension ::= width::Integer height::Integer nodegraphics::NodeGraphics ;
Fill ::= gradientrotation::RotationType interiorcolor::Color gradientcolor::Color image::URI nodegraphics::NodeGraphics edgegraphics::EdgeGraphics annotationgraphics::AnnotationGraphics ;
Node ::= netcontentelement::NetContentElement (tools::ToolSpecific)+ nodegraphics::NodeGraphics ;
--------------------markup::pnml-guyard-modular.bgf--------------------
NetElement ::= type::URI document::PNMLDocument (contents::NetContent)+ (tools::ToolSpecific)+ netgraphics::NetGraphics name::Name ;
AlignType ::= (atleft::ε) | (atcenter::ε) | (atright::ε) ;
AnnotationGraphics ::= namedelement::LabeledElement offset::Offset font::Font fill::Fill line::Line ;
Inscription ::= arc::Arc ;
RotationType ::= (rtvertical::ε) | (rthorizontal::ε) | (rtdiagonal::ε) ;
Transition ::= node::Node ;
Instance ::= ref::URI (importplace::ImportNode)+ (importtransition::ImportNode)+ ;
Offset ::= annotationgraphics::AnnotationGraphics ;
Arc ::= source::NetContentElement target::NetContentElement (tools::ToolSpecific)+ edgegraphics::EdgeGraphics inscription::Inscription ;
InitialMarking ::= place::Place ;
Font ::= family::String style::String weight::String size::String decoration::DecorationType align::AlignType rotation::Integer annotationgraphics::AnnotationGraphics ;
Page ::= (contents::NetContent)+ (tools::ToolSpecific)+ pagegraphics::PageGraphics ;
StyleType ::= (sttsolid::ε) | (sttdash::ε) | (sttdot::ε) ;
Name ::= net::NetElement netcontent::NetContent ;
DecorationType ::= (dtunderligne::ε) | (dtoverligne::ε) | (dtlinethrough::ε) ;
NetGraphics ::= net::NetElement ;
Place ::= initialmarking::InitialMarking ;
ImportNode ::= parameter::NCName ref::Reference instanceplace::Instance instancetransition::Instance ;
Fill ::= gradientrotation::RotationType interiorcolor::Color gradientcolor::Color image::URI nodegraphics::NodeGraphics edgegraphics::EdgeGraphics annotationgraphics::AnnotationGraphics ;
Node ::= Reference ;
 Node ::= netcontentelement::NetContentElement (tools::ToolSpecific)+ nodegraphics::NodeGraphics ;
ReferenceTransition ::= net::NetElement name::Name page::Page module::Module instance::Node ref::NCName importnode::ImportNode ;
NCName ::= value::String ;
ReferencePlace ::= net::NetElement name::Name page::Page module::Module instance::Node ref::NCName importnode::ImportNode ;
ShapeType ::= (shtline::ε) | (shtcurve::ε) ;
PageGraphics ::= page::Page ;
Interface ::= module::Module (importplace::Node)+ (exportplace::Reference)+ (importtransition::Node)+ (exporttransition::Reference)+ ;
PNMLDocument ::= xmlns::URI (nets::NetElement)+ (modules::Module)+ ;
Line ::= color::Color width::Integer shape::ShapeType style::StyleType nodegraphics::NodeGraphics edgegraphics::EdgeGraphics annotationgraphics::AnnotationGraphics ;
Label ::= text::String namedelement::LabeledElement ;
AnyElement ::= name::String text::String ;
NodeGraphics ::= node::Node position::Position dimension::Dimension fill::Fill line::Line ;
Module ::= (interfaces::Interface)+ (netcontents::NetContent)+ document::PNMLDocument ;
URI ::= value::String ;
ToolSpecific ::= tool::String version::String (anyelement::AnyElement)+ net::NetElement arc::Arc node::Node page::Page ;
Position ::= nodegraphics::NodeGraphics edgegraphics::EdgeGraphics ;
EdgeGraphics ::= arc::Arc (position::Position)+ fill::Fill line::Line ;
Dimension ::= width::Integer height::Integer nodegraphics::NodeGraphics ;
--------------------markup::pnml-guyard-simplified.bgf--------------------
NetElement ::= type::URI document::PNMLDocument (contents::NetContent)+ name::Name ;
URI ::= value::String ;
Name ::= net::NetElement netContent::NetContent ;
PNMLDocument ::= xmlns::URI (nets::NetElement)+ ;
Label ::= text::String labeledElement::LabeledElement ;
Arc ::= source::NetContentElement target::NetContentElement ;
--------------------markup::pnml-guyard-structured.bgf--------------------
NetElement ::= type::URI document::PNMLDocument (contents::NetContent)+ (tools::ToolSpecific)+ netgraphics::NetGraphics name::Name ;
AlignType ::= (atleft::ε) | (atcenter::ε) | (atright::ε) ;
ReferencePlace ::= net::NetElement name::Name page::Page ref::Node ;
ShapeType ::= (shtline::ε) | (shtcurve::ε) ;
PageGraphics ::= page::Page ;
AnnotationGraphics ::= namedelement::LabeledElement offset::Offset font::Font fill::Fill line::Line ;
Inscription ::= arc::Arc ;
PNMLDocument ::= xmlns::URI (nets::NetElement)+ ;
RotationType ::= (rtvertical::ε) | (rthorizontal::ε) | (rtdiagonal::ε) ;
Transition ::= node::Node ;
Line ::= color::Color width::Integer shape::ShapeType style::StyleType nodegraphics::NodeGraphics edgegraphics::EdgeGraphics annotationgraphics::AnnotationGraphics ;
Label ::= text::String namedelement::LabeledElement ;
Offset ::= annotationgraphics::AnnotationGraphics ;
Arc ::= source::NetContentElement target::NetContentElement (tools::ToolSpecific)+ edgegraphics::EdgeGraphics inscription::Inscription ;
InitialMarking ::= place::Place ;
AnyElement ::= name::String text::String ;
Font ::= family::String style::String weight::String size::String decoration::DecorationType align::AlignType rotation::Integer annotationgraphics::AnnotationGraphics ;
Page ::= (contents::NetContent)+ (tools::ToolSpecific)+ pagegraphics::PageGraphics ;
NodeGraphics ::= node::Node position::Position dimension::Dimension fill::Fill line::Line ;
URI ::= value::String ;
StyleType ::= (sttsolid::ε) | (sttdash::ε) | (sttdot::ε) ;
Name ::= net::NetElement netcontent::NetContent ;
ToolSpecific ::= tool::String version::String (anyelement::AnyElement)+ net::NetElement arc::Arc node::Node page::Page ;
DecorationType ::= (dtunderligne::ε) | (dtoverligne::ε) | (dtlinethrough::ε) ;
Position ::= nodegraphics::NodeGraphics edgegraphics::EdgeGraphics ;
EdgeGraphics ::= arc::Arc (position::Position)+ fill::Fill line::Line ;
NetGraphics ::= net::NetElement ;
Place ::= initialmarking::InitialMarking ;
Dimension ::= width::Integer height::Integer nodegraphics::NodeGraphics ;
Fill ::= gradientrotation::RotationType interiorcolor::Color gradientcolor::Color image::URI nodegraphics::NodeGraphics edgegraphics::EdgeGraphics annotationgraphics::AnnotationGraphics ;
Node ::= Reference ;
 Node ::= netcontentelement::NetContentElement (tools::ToolSpecific)+ nodegraphics::NodeGraphics ;
ReferenceTransition ::= net::NetElement name::Name page::Page ref::Node ;
--------------------markup::pnml-highlevelnet.bgf--------------------
FiniteIntRange ::= finiteintrange::(start::integer() end::integer()) ;
Condition ::= condition::(simpletextlabel.content (structure::Term)?) ;
LessThan ::= lt::IntegerOperator ;
FiniteEnumeration ::= finiteenumeration::FiniteEnumeration.content ;
ListAppend ::= listappend::ListOperator.content ;
annotationstandard.content ::= (graphics::annotationgraphics.content)? toolspecific.element* ;
StringLength ::= stringlength::StringOperator.content ;
GreaterThanOrEqual ::= geq::IntegerOperator ;
StringConstant ::= stringconstant::(StringConstant.content BuiltInConstant.content) ;
dimension.element ::= dimension::(x::positiveDecimal.content y::positiveDecimal.content) ;
Cardinality ::= cardinality::BuiltInOperator.content ;
DotConstant ::= dotconstant::ε ;
EmptyList ::= emptylist::(Sort BuiltInConstant.content) ;
simpletext.content ::= (text::string())? ;
FIRLessThan ::= lessthan::FiniteIntRangeOperator.content ;
Predecessor ::= predecessor::CyclicEnumOperator.content ;
FIRLessThanOrEqual ::= lessthanorequal::FiniteIntRangeOperator.content ;
MultisetSort ::= multisetsort::Sort ;
StringGreaterThanOrEqual ::= geqs::StringOperator.content ;
StringLessThanOrEqual ::= leqs::StringOperator.content ;
Declaration.content ::= id::string() name::string() ;
CardinalityOf ::= cardinalityof::BuiltInOperator.content ;
transition.content ::= transition::(identifier.content basicobject.content transition.labels node.content) ;
refplace.content ::= referencePlace::refnode.content ;
font.element ::= font::((family::string())? (style::string())? (weight::string())? (size::string())? (decoration::("underline" | "overline" | "line-through"))? (align::("left" | "center" | "right"))? (rotation::integer())?) ;
arc.content ::= arc::(identifier.content source::string() target::string() Name? arc.labels (graphics::edgegraphics.content)? toolspecific.element*) ;
NamedOperator ::= namedoperator::(OperatorDeclaration.content parameter::(VariableDeclaration*) def::Term) ;
Type ::= type::(simpletextlabel.content (structure::Sort)?) ;
Declarations ::= declarations::(Declaration*) ;
toolspecific.element ::= toolspecific::(tool::string() version::string() anyElement*) ;
NamedSort ::= namedsort::(SortDeclaration.content Sort) ;
HLDeclaration ::= declaration::(simpletextlabel.content (structure::Declarations)?) ;
nettype.uri ::= type::"http://www.pnml.org/version-2009/grammar/highlevelnet" ;
 nettype.uri ::= type::"http://www.pnml.org/version-2009/grammar/symmetricnet" ;
 nettype.uri ::= type::"http://www.pnml.org/version-2009/grammar/pnmlcoremodel" ;
Subtraction ::= subtraction::IntegerOperator ;
HLAnnotation ::= hlinscription::(simpletextlabel.content (structure::Term)?) ;
PartitionElement ::= partitionelement::(OperatorDeclaration.content Term+) ;
HLMarking ::= hlinitialMarking::(simpletextlabel.content (structure::Term)?) ;
Operator.content ::= (subterm::Term)* ;
Division ::= div::IntegerOperator ;
BooleanConstant ::= booleanconstant::(value::("true" | "false") BuiltInConstant.content) ;
FIRGreaterThan ::= greaterthan::FiniteIntRangeOperator.content ;
MakeList ::= makelist::(Sort ListOperator.content) ;
reference ::= ref::string() ;
Partition ::= partition::(SortDeclaration.content Sort PartitionElement+) ;
StringGreaterThan ::= gts::StringOperator.content ;
PartitionElementOf ::= partitionelementof::(refpartition::string() PartitionOperator.content) ;
MemberAtIndex ::= memberatindex::(index::integer() ListOperator.content) ;
PartitionLessThan ::= ltp::PartitionOperator.content ;
ListLength ::= listlength::ListOperator.content ;
ScalarProduct ::= scalarproduct::MultisetOperator.content ;
FiniteIntRangeConstant ::= finiteintrangeconstant::(value::integer() FiniteIntRange BuiltInConstant.content) ;
Contains ::= contains::BuiltInOperator.content ;
Inequality ::= inequality::Operator.content ;
VariableDeclaration ::= variabledecl::(Declaration.content Sort) ;
Sublist ::= sublist::(start::integer() length::integer() ListOperator.content) ;
List ::= list::Sort ;
ListConcatenation ::= listconcatenation::ListOperator.content ;
Imply ::= imply::BooleanOperator.content ;
position.element ::= position::coordinate.attributes ;
And ::= and::BooleanOperator.content ;
LessThanOrEqual ::= leq::IntegerOperator ;
identifier.content ::= id::string() ;
Subtract ::= subtract::MultisetOperator.content ;
Not ::= not::BooleanOperator.content ;
Substring ::= substring::(start::integer() length::integer() StringOperator.content) ;
String ::= string::ε ;
UserOperator ::= useroperator::(declaration::string() Operator.content) ;
CyclicEnumeration ::= cyclicenumeration::FiniteEnumeration.content ;
NumberConstant ::= numberconstant::(value::integer() BuiltInConstant.content Number) ;
Empty ::= empty::(MultisetOperator.content Sort) ;
Name ::= name::simpletextlabel.content ;
net.element ::= net::(identifier.content nettype.uri Name? net.labels page.content+ toolspecific.element*) ;
pnml.element ::= pnml::(pnml.content+) ;
StringLessThan ::= lts::StringOperator.content ;
StringAppend ::= stringappend::StringOperator.content ;
UserSort ::= usersort::(declaration::string()) ;
Dot ::= dot::ε ;
Tuple ::= tuple::Operator.content ;
StringConcatenation ::= stringconcatenation::StringOperator.content ;
Multiplication ::= mult::IntegerOperator ;
FIRGreaterThanOrEqual ::= greaterthanorequal::FiniteIntRangeOperator.content ;
offset.element ::= offset::coordinate.attributes ;
NumberOf ::= numberof::MultisetOperator.content ;
Integer ::= integer::ε ;
Variable ::= variable::(refvariable::string()) ;
Addition ::= addition::IntegerOperator ;
GreaterThan ::= gt::IntegerOperator ;
page.content ::= page::(identifier.content basicobject.content page.labels netobject.content* (graphics::pagegraphics.content)?) ;
Equality ::= equality::Operator.content ;
Positive ::= positive::ε ;
Modulo ::= mod::IntegerOperator ;
ArbitraryOperator ::= arbitraryoperator::(OperatorDeclaration.content (input::Sort)* output::Sort) ;
place.content ::= place::(identifier.content basicobject.content place.labels node.content) ;
fill.element ::= fill::((color::color.type)? (gradient-color::color.type)? (gradient-rotation::("vertical" | "horizontal" | "diagonal"))? (image::string())?) ;
PartitionGreaterThan ::= gtp::PartitionOperator.content ;
ArbitrarySort ::= arbitrarysort::SortDeclaration.content ;
coordinate.attributes ::= x::integer() y::integer() ;
node.content ::= (graphics::nodegraphics.content)? ;
ProductSort ::= productsort::(Sort*) ;
Unparsed ::= unparsed::(Declaration.content anyElement*) ;
Bool ::= bool::ε ;
Natural ::= natural::ε ;
Successor ::= successor::CyclicEnumOperator.content ;
Or ::= or::BooleanOperator.content ;
FEConstant ::= feconstant::OperatorDeclaration.content ;
line.element ::= line::((shape::("line" | "curve"))? (color::color.type)? (width::positiveDecimal.content)? (style::("solid" | "dash" | "dot"))?) ;
Add ::= add::MultisetOperator.content ;
All ::= all::(MultisetOperator.content Sort) ;
reftrans.content ::= referenceTransition::refnode.content ;
StringConstant.content ::= value::string() ;
--------------------markup::pnml-hlcorestructure.bgf--------------------
Condition ::= condition::(simpletextlabel.content (structure::Term)?) ;
Type ::= type::(simpletextlabel.content (structure::Sort)?) ;
HLDeclaration ::= declaration::(simpletextlabel.content (structure::Declarations)?) ;
HLAnnotation ::= hlinscription::(simpletextlabel.content (structure::Term)?) ;
HLMarking ::= hlinitialMarking::(simpletextlabel.content (structure::Term)?) ;
--------------------markup::pnml-hlpng.bgf--------------------
Contains ::= contains::BuiltInOperator.content ;
Inequality ::= inequality::Operator.content ;
VariableDeclaration ::= variabledecl::(Declaration.content Sort) ;
Condition ::= condition::(simpletextlabel.content (structure::Term)?) ;
Imply ::= imply::BooleanOperator.content ;
position.element ::= position::coordinate.attributes ;
annotationstandard.content ::= (graphics::annotationgraphics.content)? toolspecific.element* ;
And ::= and::BooleanOperator.content ;
dimension.element ::= dimension::(x::positiveDecimal.content y::positiveDecimal.content) ;
identifier.content ::= id::string() ;
Subtract ::= subtract::MultisetOperator.content ;
Not ::= not::BooleanOperator.content ;
UserOperator ::= useroperator::(declaration::string() Operator.content) ;
Cardinality ::= cardinality::BuiltInOperator.content ;
Empty ::= empty::(MultisetOperator.content Sort) ;
DotConstant ::= dotconstant::ε ;
Name ::= name::simpletextlabel.content ;
net.element ::= net::(identifier.content nettype.uri Name? net.labels page.content+ toolspecific.element*) ;
pnml.element ::= pnml::(pnml.content+) ;
simpletext.content ::= (text::string())? ;
UserSort ::= usersort::(declaration::string()) ;
Dot ::= dot::ε ;
Tuple ::= tuple::Operator.content ;
MultisetSort ::= multisetsort::Sort ;
Declaration.content ::= id::string() name::string() ;
CardinalityOf ::= cardinalityof::BuiltInOperator.content ;
offset.element ::= offset::coordinate.attributes ;
transition.content ::= transition::(identifier.content basicobject.content transition.labels node.content) ;
NumberOf ::= numberof::MultisetOperator.content ;
refplace.content ::= referencePlace::refnode.content ;
font.element ::= font::((family::string())? (style::string())? (weight::string())? (size::string())? (decoration::("underline" | "overline" | "line-through"))? (align::("left" | "center" | "right"))? (rotation::integer())?) ;
arc.content ::= arc::(identifier.content source::string() target::string() Name? arc.labels (graphics::edgegraphics.content)? toolspecific.element*) ;
NamedOperator ::= namedoperator::(OperatorDeclaration.content parameter::(VariableDeclaration*) def::Term) ;
Variable ::= variable::(refvariable::string()) ;
Type ::= type::(simpletextlabel.content (structure::Sort)?) ;
page.content ::= page::(identifier.content basicobject.content page.labels netobject.content* (graphics::pagegraphics.content)?) ;
Equality ::= equality::Operator.content ;
Declarations ::= declarations::(Declaration*) ;
toolspecific.element ::= toolspecific::(tool::string() version::string() anyElement*) ;
NamedSort ::= namedsort::(SortDeclaration.content Sort) ;
HLDeclaration ::= declaration::(simpletextlabel.content (structure::Declarations)?) ;
nettype.uri ::= type::"http://www.pnml.org/version-2009/grammar/pt-hlpng" ;
 nettype.uri ::= type::"http://www.pnml.org/version-2009/grammar/pnmlcoremodel" ;
HLAnnotation ::= hlinscription::(simpletextlabel.content (structure::Term)?) ;
place.content ::= place::(identifier.content basicobject.content place.labels node.content) ;
HLMarking ::= hlinitialMarking::(simpletextlabel.content (structure::Term)?) ;
fill.element ::= fill::((color::color.type)? (gradient-color::color.type)? (gradient-rotation::("vertical" | "horizontal" | "diagonal"))? (image::string())?) ;
Operator.content ::= (subterm::Term)* ;
coordinate.attributes ::= x::integer() y::integer() ;
node.content ::= (graphics::nodegraphics.content)? ;
ProductSort ::= productsort::(Sort*) ;
BooleanConstant ::= booleanconstant::(value::("true" | "false") BuiltInConstant.content) ;
reference ::= ref::string() ;
Bool ::= bool::ε ;
ScalarProduct ::= scalarproduct::MultisetOperator.content ;
Or ::= or::BooleanOperator.content ;
line.element ::= line::((shape::("line" | "curve"))? (color::color.type)? (width::positiveDecimal.content)? (style::("solid" | "dash" | "dot"))?) ;
All ::= all::(MultisetOperator.content Sort) ;
Add ::= add::MultisetOperator.content ;
reftrans.content ::= referenceTransition::refnode.content ;
--------------------markup::pnml-integers.bgf--------------------
Integer ::= integer::ε ;
Division ::= div::IntegerOperator ;
NumberConstant ::= numberconstant::(value::integer() BuiltInConstant.content Number) ;
Addition ::= addition::IntegerOperator ;
GreaterThan ::= gt::IntegerOperator ;
LessThan ::= lt::IntegerOperator ;
Positive ::= positive::ε ;
Natural ::= natural::ε ;
LessThanOrEqual ::= leq::IntegerOperator ;
Modulo ::= mod::IntegerOperator ;
Multiplication ::= mult::IntegerOperator ;
GreaterThanOrEqual ::= geq::IntegerOperator ;
Subtraction ::= subtraction::IntegerOperator ;
--------------------markup::pnml-lists.bgf--------------------
Sublist ::= sublist::(start::integer() length::integer() ListOperator.content) ;
List ::= list::Sort ;
MakeList ::= makelist::(Sort ListOperator.content) ;
EmptyList ::= emptylist::(Sort BuiltInConstant.content) ;
ListConcatenation ::= listconcatenation::ListOperator.content ;
ListAppend ::= listappend::ListOperator.content ;
MemberAtIndex ::= memberatindex::(index::integer() ListOperator.content) ;
ListLength ::= listlength::ListOperator.content ;
--------------------markup::pnml-multisets.bgf--------------------
Contains ::= contains::BuiltInOperator.content ;
Cardinality ::= cardinality::BuiltInOperator.content ;
Empty ::= empty::(MultisetOperator.content Sort) ;
CardinalityOf ::= cardinalityof::BuiltInOperator.content ;
Subtract ::= subtract::MultisetOperator.content ;
ScalarProduct ::= scalarproduct::MultisetOperator.content ;
All ::= all::(MultisetOperator.content Sort) ;
Add ::= add::MultisetOperator.content ;
NumberOf ::= numberof::MultisetOperator.content ;
--------------------markup::rss.bgf--------------------
Date ::= eDay::DayKind day::Integer month::Integer year::Integer hours::Integer minutes::Integer seconds::Integer ;
Category ::= domain::String value::String ;
TextInput ::= title::String description::String name::String link::String channel::Channel ;
Source ::= url::String value::String ;
Image ::= url::String title::String link::String description::String width::Integer height::Integer channel::Channel ;
Cloud ::= domain::String port::Integer path::String registerProcedure::String protocol::String channel::Channel ;
Item ::= title::String link::String description::String author::String comments::String guid::String source::Source pubDate::Date enclosure::Enclosure category::Category channel::Channel ;
Channel ::= title::String link::String description::String language::String copyright::String managingEditor::String webmaster::String generator::String docs::String ttl::Integer rating::String (skipHours::Integer)+ (skipDays::DayKind)+ rss::RSS pubDate::Date lastBuildDate::Date image::Image textInput::TextInput cloud::Cloud category::Category (items::Item)+ ;
Enclosure ::= url::String lenght::Integer type::String ;
RSS ::= version::String channel::Channel ;
DayKind ::= (Monday::ε) | (Tuesday::ε) | (Wednesday::ε) | (Thursday::ε) | (Friday::ε) | (Saturday::ε) | (Sunday::ε) ;
--------------------markup::pnml-partitions.bgf--------------------
Partition ::= partition::(SortDeclaration.content Sort PartitionElement+) ;
PartitionElementOf ::= partitionelementof::(refpartition::string() PartitionOperator.content) ;
PartitionLessThan ::= ltp::PartitionOperator.content ;
PartitionElement ::= partitionelement::(OperatorDeclaration.content Term+) ;
PartitionGreaterThan ::= gtp::PartitionOperator.content ;
--------------------markup::pnml-pnmlcoremodel.bgf--------------------
refplace.content ::= referencePlace::refnode.content ;
font.element ::= font::((family::string())? (style::string())? (weight::string())? (size::string())? (decoration::("underline" | "overline" | "line-through"))? (align::("left" | "center" | "right"))? (rotation::integer())?) ;
arc.content ::= arc::(identifier.content source::string() target::string() Name? arc.labels (graphics::edgegraphics.content)? toolspecific.element*) ;
page.content ::= page::(identifier.content basicobject.content page.labels netobject.content* (graphics::pagegraphics.content)?) ;
toolspecific.element ::= toolspecific::(tool::string() version::string() anyElement*) ;
position.element ::= position::coordinate.attributes ;
annotationstandard.content ::= (graphics::annotationgraphics.content)? toolspecific.element* ;
nettype.uri ::= type::"http://www.pnml.org/version-2009/grammar/pnmlcoremodel" ;
dimension.element ::= dimension::(x::positiveDecimal.content y::positiveDecimal.content) ;
identifier.content ::= id::string() ;
place.content ::= place::(identifier.content basicobject.content place.labels node.content) ;
fill.element ::= fill::((color::color.type)? (gradient-color::color.type)? (gradient-rotation::("vertical" | "horizontal" | "diagonal"))? (image::string())?) ;
coordinate.attributes ::= x::integer() y::integer() ;
node.content ::= (graphics::nodegraphics.content)? ;
Name ::= name::simpletextlabel.content ;
reference ::= ref::string() ;
net.element ::= net::(identifier.content nettype.uri Name? net.labels page.content+ toolspecific.element*) ;
pnml.element ::= pnml::(pnml.content+) ;
simpletext.content ::= (text::string())? ;
line.element ::= line::((shape::("line" | "curve"))? (color::color.type)? (width::positiveDecimal.content)? (style::("solid" | "dash" | "dot"))?) ;
offset.element ::= offset::coordinate.attributes ;
reftrans.content ::= referenceTransition::refnode.content ;
transition.content ::= transition::(identifier.content basicobject.content transition.labels node.content) ;
--------------------markup::pnml-ptnet.bgf--------------------
refplace.content ::= referencePlace::refnode.content ;
font.element ::= font::((family::string())? (style::string())? (weight::string())? (size::string())? (decoration::("underline" | "overline" | "line-through"))? (align::("left" | "center" | "right"))? (rotation::integer())?) ;
arc.content ::= arc::(identifier.content source::string() target::string() Name? arc.labels (graphics::edgegraphics.content)? toolspecific.element*) ;
PTArcAnnotation ::= inscription::positiveintegerlabel.content ;
page.content ::= page::(identifier.content basicobject.content page.labels netobject.content* (graphics::pagegraphics.content)?) ;
positiveintegerlabel.content ::= text::integer() annotationstandard.content ;
toolspecific.element ::= toolspecific::(tool::string() version::string() anyElement*) ;
position.element ::= position::coordinate.attributes ;
annotationstandard.content ::= (graphics::annotationgraphics.content)? toolspecific.element* ;
nettype.uri ::= type::"http://www.pnml.org/version-2009/grammar/ptnet" ;
 nettype.uri ::= type::"http://www.pnml.org/version-2009/grammar/pnmlcoremodel" ;
dimension.element ::= dimension::(x::positiveDecimal.content y::positiveDecimal.content) ;
identifier.content ::= id::string() ;
place.content ::= place::(identifier.content basicobject.content place.labels node.content) ;
fill.element ::= fill::((color::color.type)? (gradient-color::color.type)? (gradient-rotation::("vertical" | "horizontal" | "diagonal"))? (image::string())?) ;
PTMarking ::= initialMarking::nonnegativeintegerlabel.content ;
coordinate.attributes ::= x::integer() y::integer() ;
node.content ::= (graphics::nodegraphics.content)? ;
Name ::= name::simpletextlabel.content ;
reference ::= ref::string() ;
net.element ::= net::(identifier.content nettype.uri Name? net.labels page.content+ toolspecific.element*) ;
pnml.element ::= pnml::(pnml.content+) ;
simpletext.content ::= (text::string())? ;
nonnegativeintegerlabel.content ::= text::integer() annotationstandard.content ;
line.element ::= line::((shape::("line" | "curve"))? (color::color.type)? (width::positiveDecimal.content)? (style::("solid" | "dash" | "dot"))?) ;
offset.element ::= offset::coordinate.attributes ;
reftrans.content ::= referenceTransition::refnode.content ;
transition.content ::= transition::(identifier.content basicobject.content transition.labels node.content) ;
--------------------markup::pnml-strings.bgf--------------------
StringAppend ::= stringappend::StringOperator.content ;
StringLessThan ::= lts::StringOperator.content ;
StringGreaterThan ::= gts::StringOperator.content ;
StringLength ::= stringlength::StringOperator.content ;
StringConcatenation ::= stringconcatenation::StringOperator.content ;
StringGreaterThanOrEqual ::= geqs::StringOperator.content ;
StringLessThanOrEqual ::= leqs::StringOperator.content ;
StringConstant ::= stringconstant::(StringConstant.content BuiltInConstant.content) ;
Substring ::= substring::(start::integer() length::integer() StringOperator.content) ;
String ::= string::ε ;
StringConstant.content ::= value::string() ;
--------------------markup::pnml-symmetricnet.bgf--------------------
FiniteIntRange ::= finiteintrange::(start::integer() end::integer()) ;
Condition ::= condition::(simpletextlabel.content (structure::Term)?) ;
LessThan ::= lt::IntegerOperator ;
FiniteEnumeration ::= finiteenumeration::FiniteEnumeration.content ;
annotationstandard.content ::= (graphics::annotationgraphics.content)? toolspecific.element* ;
GreaterThanOrEqual ::= geq::IntegerOperator ;
dimension.element ::= dimension::(x::positiveDecimal.content y::positiveDecimal.content) ;
Cardinality ::= cardinality::BuiltInOperator.content ;
DotConstant ::= dotconstant::ε ;
simpletext.content ::= (text::string())? ;
Predecessor ::= predecessor::CyclicEnumOperator.content ;
FIRLessThan ::= lessthan::FiniteIntRangeOperator.content ;
FIRLessThanOrEqual ::= lessthanorequal::FiniteIntRangeOperator.content ;
MultisetSort ::= multisetsort::Sort ;
CardinalityOf ::= cardinalityof::BuiltInOperator.content ;
Declaration.content ::= id::string() name::string() ;
transition.content ::= transition::(identifier.content basicobject.content transition.labels node.content) ;
refplace.content ::= referencePlace::refnode.content ;
font.element ::= font::((family::string())? (style::string())? (weight::string())? (size::string())? (decoration::("underline" | "overline" | "line-through"))? (align::("left" | "center" | "right"))? (rotation::integer())?) ;
arc.content ::= arc::(identifier.content source::string() target::string() Name? arc.labels (graphics::edgegraphics.content)? toolspecific.element*) ;
NamedOperator ::= namedoperator::(OperatorDeclaration.content parameter::(VariableDeclaration*) def::Term) ;
Type ::= type::(simpletextlabel.content (structure::Sort)?) ;
Declarations ::= declarations::(Declaration*) ;
toolspecific.element ::= toolspecific::(tool::string() version::string() anyElement*) ;
NamedSort ::= namedsort::(SortDeclaration.content Sort) ;
HLDeclaration ::= declaration::(simpletextlabel.content (structure::Declarations)?) ;
nettype.uri ::= type::"http://www.pnml.org/version-2009/grammar/symmetricnet" ;
 nettype.uri ::= type::"http://www.pnml.org/version-2009/grammar/pnmlcoremodel" ;
Subtraction ::= subtraction::IntegerOperator ;
HLAnnotation ::= hlinscription::(simpletextlabel.content (structure::Term)?) ;
PartitionElement ::= partitionelement::(OperatorDeclaration.content Term+) ;
HLMarking ::= hlinitialMarking::(simpletextlabel.content (structure::Term)?) ;
Operator.content ::= (subterm::Term)* ;
Division ::= div::IntegerOperator ;
BooleanConstant ::= booleanconstant::(value::("true" | "false") BuiltInConstant.content) ;
FIRGreaterThan ::= greaterthan::FiniteIntRangeOperator.content ;
reference ::= ref::string() ;
Partition ::= partition::(SortDeclaration.content Sort PartitionElement+) ;
PartitionElementOf ::= partitionelementof::(refpartition::string() PartitionOperator.content) ;
PartitionLessThan ::= ltp::PartitionOperator.content ;
ScalarProduct ::= scalarproduct::MultisetOperator.content ;
FiniteIntRangeConstant ::= finiteintrangeconstant::(value::integer() FiniteIntRange BuiltInConstant.content) ;
Contains ::= contains::BuiltInOperator.content ;
Inequality ::= inequality::Operator.content ;
VariableDeclaration ::= variabledecl::(Declaration.content Sort) ;
Imply ::= imply::BooleanOperator.content ;
position.element ::= position::coordinate.attributes ;
LessThanOrEqual ::= leq::IntegerOperator ;
And ::= and::BooleanOperator.content ;
identifier.content ::= id::string() ;
Subtract ::= subtract::MultisetOperator.content ;
Not ::= not::BooleanOperator.content ;
UserOperator ::= useroperator::(declaration::string() Operator.content) ;
CyclicEnumeration ::= cyclicenumeration::FiniteEnumeration.content ;
NumberConstant ::= numberconstant::(value::integer() BuiltInConstant.content Number) ;
Empty ::= empty::(MultisetOperator.content Sort) ;
Name ::= name::simpletextlabel.content ;
net.element ::= net::(identifier.content nettype.uri Name? net.labels page.content+ toolspecific.element*) ;
pnml.element ::= pnml::(pnml.content+) ;
Dot ::= dot::ε ;
UserSort ::= usersort::(declaration::string()) ;
Tuple ::= tuple::Operator.content ;
Multiplication ::= mult::IntegerOperator ;
FIRGreaterThanOrEqual ::= greaterthanorequal::FiniteIntRangeOperator.content ;
offset.element ::= offset::coordinate.attributes ;
NumberOf ::= numberof::MultisetOperator.content ;
Integer ::= integer::ε ;
Variable ::= variable::(refvariable::string()) ;
Addition ::= addition::IntegerOperator ;
GreaterThan ::= gt::IntegerOperator ;
page.content ::= page::(identifier.content basicobject.content page.labels netobject.content* (graphics::pagegraphics.content)?) ;
Equality ::= equality::Operator.content ;
Positive ::= positive::ε ;
Modulo ::= mod::IntegerOperator ;
place.content ::= place::(identifier.content basicobject.content place.labels node.content) ;
fill.element ::= fill::((color::color.type)? (gradient-color::color.type)? (gradient-rotation::("vertical" | "horizontal" | "diagonal"))? (image::string())?) ;
PartitionGreaterThan ::= gtp::PartitionOperator.content ;
coordinate.attributes ::= x::integer() y::integer() ;
node.content ::= (graphics::nodegraphics.content)? ;
ProductSort ::= productsort::(Sort*) ;
Bool ::= bool::ε ;
Natural ::= natural::ε ;
Successor ::= successor::CyclicEnumOperator.content ;
Or ::= or::BooleanOperator.content ;
FEConstant ::= feconstant::OperatorDeclaration.content ;
line.element ::= line::((shape::("line" | "curve"))? (color::color.type)? (width::positiveDecimal.content)? (style::("solid" | "dash" | "dot"))?) ;
Add ::= add::MultisetOperator.content ;
All ::= all::(MultisetOperator.content Sort) ;
reftrans.content ::= referenceTransition::refnode.content ;
--------------------markup::pnml-terms.bgf--------------------
UserOperator ::= useroperator::(declaration::string() Operator.content) ;
Operator.content ::= (subterm::Term)* ;
VariableDeclaration ::= variabledecl::(Declaration.content Sort) ;
ProductSort ::= productsort::(Sort*) ;
NamedOperator ::= namedoperator::(OperatorDeclaration.content parameter::(VariableDeclaration*) def::Term) ;
Variable ::= variable::(refvariable::string()) ;
UserSort ::= usersort::(declaration::string()) ;
Declarations ::= declarations::(Declaration*) ;
Tuple ::= tuple::Operator.content ;
MultisetSort ::= multisetsort::Sort ;
NamedSort ::= namedsort::(SortDeclaration.content Sort) ;
Declaration.content ::= id::string() name::string() ;
--------------------markup::pnml-touzet.bgf--------------------
TransToPlaceArc ::= source::Transition target::Place ;
PlaceToTransArc ::= source::Place target::Transition ;
Place ::= (incoming::TransToPlaceArc)+ (outgoing::PlaceToTransArc)+ ;
PetriNet ::= (places::Place)+ (transitions::Transition)+ (arcs::Arc)+ ;
Transition ::= (incoming::PlaceToTransArc)+ (outgoing::TransToPlaceArc)+ ;
--------------------markup::svg-furubayashi-basic.bgf--------------------
SVG.clipPath ::= clipPath::(SVG.Description.class* (SVG.Animation.class | SVG.Use.class)* SVG.Shape.class? SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Text.attrib SVG.TextContent.attrib SVG.Font.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.Cursor.attrib SVG.External.attrib (transform::SVG.TransformList.datatype)? (clipPathUnits::("userSpaceOnUse" | "objectBoundingBox"))?) ;
SVG.visibility.attrib ::= (visibility::("visible" | "hidden" | "inherit"))? ;
SVG.desc ::= desc::(string() SVG.Core.attrib SVG.Style.attrib) ;
SVG.onbegin.attrib ::= (onbegin::SVG.Script.datatype)? ;
SVG.stroke-miterlimit.attrib ::= (stroke-miterlimit::SVG.StrokeMiterLimitValue.datatype)? ;
SVG.opacity.attrib ::= (opacity::SVG.OpacityValue.datatype)? ;
SVG.feTile ::= feTile::((SVG.animate | SVG.set)* SVG.Core.attrib SVG.FilterColor.attrib SVG.FilterPrimitiveWithIn.attrib) ;
SVG.animateTransform ::= animateTransform::(SVG.Description.class* SVG.Core.attrib SVG.Conditional.attrib SVG.AnimationEvents.attrib SVG.External.attrib SVG.Animation.attrib SVG.AnimationAttribute.attrib SVG.AnimationTiming.attrib SVG.AnimationValue.attrib SVG.AnimationAddtion.attrib (type::("translate" | "scale" | "rotate" | "skewX" | "skewY"))?) ;
SVG.font-face ::= font-face::(SVG.Description.class* SVG.font-face-src? SVG.definition-src? SVG.Core.attrib (font-family::string())? (font-style::string())? (font-variant::string())? (font-weight::string())? (font-stretch::string())? (font-size::string())? (unicode-range::string())? (units-per-em::SVG.Number.datatype)? (panose-1::string())? (stemv::SVG.Number.datatype)? (stemh::SVG.Number.datatype)? (slope::SVG.Number.datatype)? (cap-height::SVG.Number.datatype)? (x-height::SVG.Number.datatype)? (accent-height::SVG.Number.datatype)? (ascent::SVG.Number.datatype)? (descent::SVG.Number.datatype)? (widths::string())? (bbox::string())? (ideographic::SVG.Number.datatype)? (alphabetic::SVG.Number.datatype)? (mathematical::SVG.Number.datatype)? (hanging::SVG.Number.datatype)? (v-ideographic::SVG.Number.datatype)? (v-alphabetic::SVG.Number.datatype)? (v-mathematical::SVG.Number.datatype)? (v-hanging::SVG.Number.datatype)? (underline-position::SVG.Number.datatype)? (underline-thickness::SVG.Number.datatype)? (strikethrough-position::SVG.Number.datatype)? (strikethrough-thickness::SVG.Number.datatype)? (overline-position::SVG.Number.datatype)? (overline-thickness::SVG.Number.datatype)?) ;
SVG.stroke-linejoin.attrib ::= (stroke-linejoin::("miter" | "round" | "bevel" | "inherit"))? ;
SVG.fill-opacity.attrib ::= (fill-opacity::SVG.OpacityValue.datatype)? ;
SVG.fill.attrib ::= (fill::SVG.Paint.datatype)? ;
SVG.mpath ::= mpath::(SVG.Description.class* SVG.Core.attrib SVG.XLinkRequired.attrib SVG.External.attrib) ;
SVG.XLinkEmbed.attrib ::= (xlink:type::"simple")? xlink:href::SVG.URI.datatype (xlink:role::SVG.URI.datatype)? (xlink:arcrole::SVG.URI.datatype)? (xlink:title::string())? (xlink:show::"embed")? (xlink:actuate::"onLoad")? SVG.XLinkEmbed.extra.attrib ;
SVG.font-face-name ::= font-face-name::(ε SVG.Core.attrib (name::string())?) ;
SVG.pattern ::= pattern::((SVG.Description.class | SVG.Animation.class | SVG.Structure.class | SVG.Conditional.class | SVG.Image.class | SVG.Style.class | SVG.Shape.class | SVG.Text.class | SVG.Marker.class | SVG.Profile.class | SVG.Gradient.class | SVG.Pattern.class | SVG.Clip.class | SVG.Mask.class | SVG.Filter.class | SVG.Cursor.class | SVG.Hyperlink.class | SVG.View.class | SVG.Script.class | SVG.Font.class)* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Presentation.attrib SVG.XLink.attrib SVG.External.attrib (x::SVG.Coordinate.datatype)? (y::SVG.Coordinate.datatype)? (width::SVG.Length.datatype)? (height::SVG.Length.datatype)? (patternUnits::("userSpaceOnUse" | "objectBoundingBox"))? (patternContentUnits::("userSpaceOnUse" | "objectBoundingBox"))? (patternTransform::SVG.TransformList.datatype)? (viewBox::SVG.ViewBoxSpec.datatype)? (preserveAspectRatio::SVG.PreserveAspectRatioSpec.datatype)?) ;
SVG.onmouseout.attrib ::= (onmouseout::SVG.Script.datatype)? ;
SVG.feFuncR ::= feFuncR::((SVG.animate | SVG.set)* SVG.Core.attrib type::("identity" | "table" | "discrete" | "linear" | "gamma") (tableValues::string())? (slope::SVG.Number.datatype)? (intercept::SVG.Number.datatype)? (amplitude::SVG.Number.datatype)? (exponent::SVG.Number.datatype)? (offset::SVG.Number.datatype)?) ;
SVG.onfocusin.attrib ::= (onfocusin::SVG.Script.datatype)? ;
SVG.onscroll.attrib ::= (onscroll::SVG.Script.datatype)? ;
SVG.text-rendering.attrib ::= (text-rendering::("auto" | "optimizeSpeed" | "optimizeLegibility" | "geometricPrecision" | "inherit"))? ;
SVG.Text.attrib ::= ε ;
 SVG.Text.attrib ::= (writing-mode::("lr-tb" | "rl-tb" | "tb-rl" | "lr" | "rl" | "tb" | "inherit"))? SVG.Text.extra.attrib ;
SVG.feComposite ::= feComposite::((SVG.animate | SVG.set)* SVG.Core.attrib SVG.FilterColor.attrib SVG.FilterPrimitiveWithIn.attrib in2::string() (operator::("over" | "in" | "out" | "atop" | "xor" | "arithmetic"))? (k1::SVG.Number.datatype)? (k2::SVG.Number.datatype)? (k3::SVG.Number.datatype)? (k4::SVG.Number.datatype)?) ;
SVG.use ::= use::(SVG.Description.class* SVG.Animation.class* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Presentation.attrib SVG.GraphicalEvents.attrib SVG.XLinkEmbed.attrib SVG.External.attrib (x::SVG.Coordinate.datatype)? (y::SVG.Coordinate.datatype)? (width::SVG.Length.datatype)? (height::SVG.Length.datatype)? (transform::SVG.TransformList.datatype)?) ;
SVG.base.attrib ::= (xml:base::SVG.URI.datatype)? ;
SVG.stroke-dasharray.attrib ::= (stroke-dasharray::SVG.StrokeDashArrayValue.datatype)? ;
SVG.onzoom.attrib ::= (onzoom::SVG.Script.datatype)? ;
SVG.missing-glyph ::= missing-glyph::((SVG.Description.class | SVG.Animation.class | SVG.Structure.class | SVG.Conditional.class | SVG.Image.class | SVG.Style.class | SVG.Shape.class | SVG.Text.class | SVG.Marker.class | SVG.Profile.class | SVG.Gradient.class | SVG.Pattern.class | SVG.Clip.class | SVG.Mask.class | SVG.Filter.class | SVG.Cursor.class | SVG.Hyperlink.class | SVG.View.class | SVG.Script.class | SVG.Font.class)* SVG.Core.attrib SVG.Style.attrib SVG.Presentation.attrib (d::SVG.PathData.datatype)? (horiz-adv-x::SVG.Number.datatype)? (vert-origin-x::SVG.Number.datatype)? (vert-origin-y::SVG.Number.datatype)? (vert-adv-y::SVG.Number.datatype)?) ;
SVG.feFuncG ::= feFuncG::((SVG.animate | SVG.set)* SVG.Core.attrib type::("identity" | "table" | "discrete" | "linear" | "gamma") (tableValues::string())? (slope::SVG.Number.datatype)? (intercept::SVG.Number.datatype)? (amplitude::SVG.Number.datatype)? (exponent::SVG.Number.datatype)? (offset::SVG.Number.datatype)?) ;
SVG.feFuncB ::= feFuncB::((SVG.animate | SVG.set)* SVG.Core.attrib type::("identity" | "table" | "discrete" | "linear" | "gamma") (tableValues::string())? (slope::SVG.Number.datatype)? (intercept::SVG.Number.datatype)? (amplitude::SVG.Number.datatype)? (exponent::SVG.Number.datatype)? (offset::SVG.Number.datatype)?) ;
SVG.feFlood ::= feFlood::((SVG.animate | SVG.set | SVG.animateColor)* SVG.Core.attrib SVG.Style.attrib SVG.Color.attrib SVG.FilterColor.attrib SVG.FilterPrimitiveWithIn.attrib (flood-color::SVG.SVGColor.datatype)? (flood-opacity::SVG.OpacityValue.datatype)?) ;
SVG.feFuncA ::= feFuncA::((SVG.animate | SVG.set)* SVG.Core.attrib type::("identity" | "table" | "discrete" | "linear" | "gamma") (tableValues::string())? (slope::SVG.Number.datatype)? (intercept::SVG.Number.datatype)? (amplitude::SVG.Number.datatype)? (exponent::SVG.Number.datatype)? (offset::SVG.Number.datatype)?) ;
SVG.AnimationTiming.attrib ::= (begin::string())? (dur::string())? (end::string())? (min::string())? (max::string())? (restart::("always" | "never" | "whenNotActive"))? (repeatCount::string())? (repeatDur::string())? (fill::("remove" | "freeze"))? SVG.AnimationTiming.extra.attrib ;
SVG.id.attrib ::= (id::SVG.ID.datatype)? ;
SVG.animateMotion ::= animateMotion::(SVG.Description.class* SVG.mpath? SVG.Core.attrib SVG.Conditional.attrib SVG.AnimationEvents.attrib SVG.External.attrib SVG.Animation.attrib SVG.AnimationTiming.attrib SVG.AnimationAddtion.attrib (calcMode::("discrete" | "linear" | "paced" | "spline"))? (values::string())? (keyTimes::string())? (Splines::string())? (from::string())? (to::string())? (by::string())? (path::string())? (keyPoints::string())? (rotate::string())? (origin::string())?) ;
SVG.onend.attrib ::= (onend::SVG.Script.datatype)? ;
SVG.stroke-width.attrib ::= (stroke-width::SVG.StrokeWidthValue.datatype)? ;
SVG.svg ::= svg::((SVG.Description.class | SVG.Animation.class | SVG.Structure.class | SVG.Conditional.class | SVG.Image.class | SVG.Style.class | SVG.Shape.class | SVG.Text.class | SVG.Marker.class | SVG.Profile.class | SVG.Gradient.class | SVG.Pattern.class | SVG.Clip.class | SVG.Mask.class | SVG.Filter.class | SVG.Cursor.class | SVG.Hyperlink.class | SVG.View.class | SVG.Script.class | SVG.Font.class)* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Presentation.attrib SVG.DocumentEvents.attrib SVG.GraphicalEvents.attrib SVG.External.attrib (x::SVG.Coordinate.datatype)? (y::SVG.Coordinate.datatype)? (width::SVG.Length.datatype)? (height::SVG.Length.datatype)? (viewBox::SVG.ViewBoxSpec.datatype)? (preserveAspectRatio::SVG.PreserveAspectRatioSpec.datatype)? (zoomAndPan::("disable" | "magnify"))? version::SVG.Number.datatype (baseProfile::SVG.Text.datatype)? (contentScriptType::SVG.ContentType.datatype)? (contentStyleType::SVG.ContentType.datatype)?) ;
SVG.circle ::= circle::(SVG.Description.class* SVG.Animation.class* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.GraphicalEvents.attrib SVG.Cursor.attrib SVG.External.attrib (cx::SVG.Coordinate.datatype)? (cy::SVG.Coordinate.datatype)? r::SVG.Length.datatype (transform::SVG.TransformList.datatype)?) ;
SVG.font ::= font::(SVG.Description.class* SVG.font-face SVG.missing-glyph (SVG.glyph | SVG.hkern | SVG.vkern)* SVG.Core.attrib SVG.Style.attrib SVG.Presentation.attrib SVG.External.attrib (horiz-origin-x::SVG.Number.datatype)? (horiz-origin-y::SVG.Number.datatype)? horiz-adv-x::SVG.Number.datatype (vert-origin-x::SVG.Number.datatype)? (vert-origin-y::SVG.Number.datatype)? (vert-adv-y::SVG.Number.datatype)?) ;
SVG.onerror.attrib ::= (onerror::SVG.Script.datatype)? ;
SVG.Profile.attrib ::= ε ;
 SVG.Profile.attrib ::= (color-profile::string())? SVG.Profile.extra.attrib ;
SVG.set ::= set::(SVG.Description.class* SVG.Core.attrib SVG.Conditional.attrib SVG.AnimationEvents.attrib SVG.External.attrib SVG.Animation.attrib SVG.AnimationAttribute.attrib SVG.AnimationTiming.attrib (to::string())?) ;
SVG.Filter.attrib ::= (filter::SVG.FilterValue.datatype)? SVG.Filter.extra.attrib ;
 SVG.Filter.attrib ::= ε ;
SVG.AnimationAttribute.attrib ::= attributeName::string() (attributeType::string())? SVG.AnimationAttribute.extra.attrib ;
SVG.script ::= script::(string() SVG.Core.attrib SVG.XLink.attrib SVG.External.attrib type::SVG.ContentType.datatype) ;
SVG.feMergeNode ::= feMergeNode::((SVG.animate | SVG.set)* SVG.Core.attrib (in::string())?) ;
SVG.XLinkReplace.attrib ::= (xlink:type::"simple")? xlink:href::SVG.URI.datatype (xlink:role::SVG.URI.datatype)? (xlink:arcrole::SVG.URI.datatype)? (xlink:title::string())? (xlink:show::("new" | "replace"))? (xlink:actuate::"onRequest")? SVG.XLinkReplace.extra.attrib ;
SVG.feOffset ::= feOffset::((SVG.animate | SVG.set)* SVG.Core.attrib SVG.FilterColor.attrib SVG.FilterPrimitiveWithIn.attrib (dx::SVG.Number.datatype)? (dy::SVG.Number.datatype)?) ;
SVG.feColorMatrix ::= feColorMatrix::((SVG.animate | SVG.set)* SVG.Core.attrib SVG.FilterColor.attrib SVG.FilterPrimitiveWithIn.attrib (type::("matrix" | "saturate" | "hueRotate" | "luminanceToAlpha"))? (values::string())?) ;
SVG.onmousedown.attrib ::= (onmousedown::SVG.Script.datatype)? ;
SVG.metadata ::= metadata::(string() SVG.Core.attrib) ;
SVG.text ::= text::((string() | SVG.Description.class | SVG.Animation.class | SVG.TextContent.class | SVG.Hyperlink.class)* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Text.attrib SVG.TextContent.attrib SVG.Font.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.GraphicalEvents.attrib SVG.Cursor.attrib SVG.External.attrib (x::SVG.Coordinates.datatype)? (y::SVG.Coordinates.datatype)? (dx::SVG.Lengths.datatype)? (dy::SVG.Lengths.datatype)? (rotate::SVG.Numbers.datatype)? (textLength::SVG.Length.datatype)? (lengthAdjust::("spacing" | "spacingAndGlyphs"))? (transform::SVG.TransformList.datatype)?) ;
SVG.tspan ::= tspan::((string() | SVG.tspan | SVG.tref | SVG.altGlyph | SVG.animate | SVG.set | SVG.animateColor | SVG.Description.class | SVG.Hyperlink.class)* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.TextContent.attrib SVG.Font.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.GraphicalEvents.attrib SVG.Cursor.attrib SVG.External.attrib (x::SVG.Coordinates.datatype)? (y::SVG.Coordinates.datatype)? (dx::SVG.Lengths.datatype)? (dy::SVG.Lengths.datatype)? (rotate::SVG.Numbers.datatype)? (textLength::SVG.Length.datatype)? (lengthAdjust::("spacing" | "spacingAndGlyphs"))?) ;
SVG.XLinkRequired.attrib ::= (xlink:type::"simple")? xlink:href::SVG.URI.datatype (xlink:role::SVG.URI.datatype)? (xlink:arcrole::SVG.URI.datatype)? (xlink:title::string())? (xlink:show::"other")? (xlink:actuate::"onLoad")? SVG.XLinkRequired.extra.attrib ;
SVG.onabort.attrib ::= (onabort::SVG.Script.datatype)? ;
SVG.polygon ::= polygon::(SVG.Description.class* SVG.Animation.class* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Marker.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.GraphicalEvents.attrib SVG.Cursor.attrib SVG.External.attrib points::SVG.Points.datatype (transform::SVG.TransformList.datatype)?) ;
SVG.font-face-uri ::= font-face-uri::(SVG.font-face-format* SVG.Core.attrib SVG.XLinkRequired.attrib) ;
SVG.path ::= path::(SVG.Description.class* SVG.Animation.class* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Marker.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.GraphicalEvents.attrib SVG.Cursor.attrib SVG.External.attrib d::SVG.PathData.datatype (pathLength::SVG.Number.datatype)? (transform::SVG.TransformList.datatype)?) ;
SVG.overflow.attrib ::= (overflow::("visible" | "hidden" | "scroll" | "auto" | "inherit"))? ;
SVG.onmousemove.attrib ::= (onmousemove::SVG.Script.datatype)? ;
SVG.image-rendering.attrib ::= (image-rendering::("auto" | "optimizeSpeed" | "optimizeQuality" | "inherit"))? ;
SVG.style ::= style::(string() SVG.Core.attrib type::SVG.ContentType.datatype (media::SVG.MediaDesc.datatype)? (title::SVG.Text.datatype)?) ;
SVG.pointer-events.attrib ::= (pointer-events::("visiblePainted" | "visibleFill" | "visibleStroke" | "visible" | "painted" | "fill" | "stroke" | "all" | "none" | "inherit"))? ;
SVG.symbol ::= symbol::((SVG.Description.class | SVG.Animation.class | SVG.Structure.class | SVG.Conditional.class | SVG.Image.class | SVG.Style.class | SVG.Shape.class | SVG.Text.class | SVG.Marker.class | SVG.Profile.class | SVG.Gradient.class | SVG.Pattern.class | SVG.Clip.class | SVG.Mask.class | SVG.Filter.class | SVG.Cursor.class | SVG.Hyperlink.class | SVG.View.class | SVG.Script.class | SVG.Font.class)* SVG.Core.attrib SVG.Style.attrib SVG.Presentation.attrib SVG.GraphicalEvents.attrib SVG.External.attrib (viewBox::SVG.ViewBoxSpec.datatype)? (preserveAspectRatio::SVG.PreserveAspectRatioSpec.datatype)?) ;
SVG.onmouseup.attrib ::= (onmouseup::SVG.Script.datatype)? ;
SVG.color-rendering.attrib ::= (color-rendering::("auto" | "optimizeSpeed" | "optimizeQuality" | "inherit"))? ;
SVG.Font.attrib ::= ε ;
 SVG.Font.attrib ::= (font-family::SVG.FontFamilyValue.datatype)? (font-size::SVG.FontSizeValue.datatype)? (font-size-adjust::SVG.FontSizeAdjustValue.datatype)? (font-stretch::("normal" | "wider" | "narrower" | "ultra-condensed" | "extra-condensed" | "condensed" | "semi-condensed" | "semi-expanded" | "expanded" | "extra-expanded" | "ultra-expanded" | "inherit"))? (font-style::("normal" | "italic" | "oblique" | "inherit"))? (font-variant::("normal" | "small-caps" | "inherit"))? (font-weight::("normal" | "bold" | "bolder" | "lighter" | "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" | "900" | "inherit"))? SVG.Font.extra.attrib ;
SVG.clip.attrib ::= (clip::SVG.ClipValue.datatype)? ;
SVG.Gradient.attrib ::= ε ;
 SVG.Gradient.attrib ::= (stop-color::SVG.SVGColor.datatype)? (stop-opacity::SVG.OpacityValue.datatype)? SVG.Gradient.extra.attrib ;
SVG.AnimationAddtion.attrib ::= (additive::("replace" | "sum"))? (accumulate::("none" | "sum"))? SVG.AnimationAddition.extra.attrib ;
SVG.defs ::= defs::((SVG.Description.class | SVG.Animation.class | SVG.Structure.class | SVG.Conditional.class | SVG.Image.class | SVG.Style.class | SVG.Shape.class | SVG.Text.class | SVG.Marker.class | SVG.Profile.class | SVG.Gradient.class | SVG.Pattern.class | SVG.Clip.class | SVG.Mask.class | SVG.Filter.class | SVG.Cursor.class | SVG.Hyperlink.class | SVG.View.class | SVG.Script.class | SVG.Font.class)* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Presentation.attrib SVG.GraphicalEvents.attrib SVG.External.attrib (transform::SVG.TransformList.datatype)?) ;
SVG.TextContent.attrib ::= ε ;
 SVG.TextContent.attrib ::= (alignment-baseline::("baseline" | "top" | "before-edge" | "text-top" | "text-before-edge" | "middle" | "bottom" | "after-edge" | "text-bottom" | "text-after-edge" | "ideographic" | "lower" | "hanging" | "mathematical" | "inherit"))? (baseline-shift::SVG.BaselineShiftValue.datatype)? (direction::("ltr" | "rtl" | "inherit"))? (dominant-baseline::("auto" | "autosense-script" | "no-change" | "reset" | "ideographic" | "lower" | "hanging" | "mathematical" | "inherit"))? (glyph-orientation-horizontal::SVG.GlyphOrientationHorizontalValue.datatype)? (glyph-orientation-vertical::SVG.GlyphOrientationVerticalValue.datatype)? (kerning::SVG.KerningValue.datatype)? (letter-spacing::SVG.SpacingValue.datatype)? (text-anchor::("start" | "middle" | "end" | "inherit"))? (text-decoration::SVG.TextDecorationValue.datatype)? (unicode-bidi::("normal" | "embed" | "bidi-override" | "inherit"))? (word-spacing::SVG.SpacingValue.datatype)? SVG.TextContent.extra.attrib ;
SVG.onunload.attrib ::= (onunload::SVG.Script.datatype)? ;
SVG.altGlyph ::= altGlyph::(string() SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.TextContent.attrib SVG.Font.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.GraphicalEvents.attrib SVG.Cursor.attrib SVG.XLink.attrib SVG.External.attrib (x::SVG.Coordinates.datatype)? (y::SVG.Coordinates.datatype)? (dx::SVG.Lengths.datatype)? (dy::SVG.Lengths.datatype)? (glyphRef::string())? (format::string())? (rotate::SVG.Numbers.datatype)?) ;
SVG.stop ::= stop::((SVG.animate | SVG.set | SVG.animateColor)* SVG.Core.attrib SVG.Style.attrib SVG.Color.attrib SVG.Gradient.attrib offset::SVG.NumberOrPercentage.datatype) ;
SVG.animateColor ::= animateColor::(SVG.Description.class* SVG.Core.attrib SVG.Conditional.attrib SVG.AnimationEvents.attrib SVG.External.attrib SVG.Animation.attrib SVG.AnimationAttribute.attrib SVG.AnimationTiming.attrib SVG.AnimationValue.attrib SVG.AnimationAddtion.attrib) ;
SVG.onload.attrib ::= (onload::SVG.Script.datatype)? ;
SVG.externalResourcesRequired.attrib ::= (externalResourcesRequired::SVG.Boolean.datatype)? ;
SVG.color-interpolation.attrib ::= (color-interpolation::("auto" | "sRGB" | "linearRGB" | "inherit"))? ;
SVG.stroke-linecap.attrib ::= (stroke-linecap::("butt" | "round" | "square" | "inherit"))? ;
SVG.vkern ::= vkern::(ε SVG.Core.attrib (u1::string())? (g1::string())? (u2::string())? (g2::string())? k::SVG.Number.datatype) ;
SVG.filter ::= filter::(SVG.Description.class* (SVG.animate | SVG.set | SVG.FilterPrimitive.class)* SVG.Core.attrib SVG.Style.attrib SVG.Presentation.attrib SVG.XLink.attrib SVG.External.attrib (x::SVG.Coordinate.datatype)? (y::SVG.Coordinate.datatype)? (width::SVG.Length.datatype)? (height::SVG.Length.datatype)? (filterRes::SVG.NumberOptionalNumber.datatype)? (filterUnits::("userSpaceOnUse" | "objectBoundingBox"))? (primitiveUnits::("userSpaceOnUse" | "objectBoundingBox"))?) ;
SVG.display.attrib ::= (display::("inline" | "block" | "list-item" | "run-in" | "compact" | "marker" | "table" | "inline-table" | "table-row-group" | "table-header-group" | "table-footer-group" | "table-row" | "table-column-group" | "table-column" | "table-cell" | "table-caption" | "none" | "inherit"))? ;
SVG.linearGradient ::= linearGradient::(SVG.Description.class* (SVG.stop | SVG.animate | SVG.set | SVG.animateTransform)* SVG.Core.attrib SVG.Style.attrib SVG.Color.attrib SVG.Gradient.attrib SVG.XLink.attrib SVG.External.attrib (x1::SVG.Coordinate.datatype)? (y1::SVG.Coordinate.datatype)? (x2::SVG.Coordinate.datatype)? (y2::SVG.Coordinate.datatype)? (gradientUnits::("userSpaceOnUse" | "objectBoundingBox"))? (gradientTransform::SVG.TransformList.datatype)? (spreadMethod::("pad" | "reflect" | "repeat"))?) ;
SVG.feComponentTransfer ::= feComponentTransfer::(SVG.feFuncR? SVG.feFuncG? SVG.feFuncB? SVG.feFuncA? SVG.Core.attrib SVG.FilterColor.attrib SVG.FilterPrimitiveWithIn.attrib) ;
SVG.line ::= line::(SVG.Description.class* SVG.Animation.class* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Marker.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.GraphicalEvents.attrib SVG.Cursor.attrib SVG.External.attrib (x1::SVG.Coordinate.datatype)? (y1::SVG.Coordinate.datatype)? (x2::SVG.Coordinate.datatype)? (y2::SVG.Coordinate.datatype)? (transform::SVG.TransformList.datatype)?) ;
SVG.Clip.attrib ::= (clip-path::SVG.ClipPathValue.datatype)? (clip-rule::SVG.ClipFillRule.datatype)? SVG.Clip.extra.attrib ;
 SVG.Clip.attrib ::= ε ;
SVG.textPath ::= textPath::((string() | SVG.tspan | SVG.tref | SVG.altGlyph | SVG.animate | SVG.set | SVG.animateColor | SVG.Description.class | SVG.Hyperlink.class)* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.TextContent.attrib SVG.Font.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.GraphicalEvents.attrib SVG.Cursor.attrib SVG.XLinkRequired.attrib SVG.External.attrib (startOffset::SVG.Length.datatype)? (textLength::SVG.Length.datatype)? (lengthAdjust::("spacing" | "spacingAndGlyphs"))? (method::("align" | "stretch"))? (spacing::("auto" | "exact"))?) ;
SVG.onfocusout.attrib ::= (onfocusout::SVG.Script.datatype)? ;
SVG.radialGradient ::= radialGradient::(SVG.Description.class* (SVG.stop | SVG.animate | SVG.set | SVG.animateTransform)* SVG.Core.attrib SVG.Style.attrib SVG.Color.attrib SVG.Gradient.attrib SVG.XLink.attrib SVG.External.attrib (cx::SVG.Coordinate.datatype)? (cy::SVG.Coordinate.datatype)? (r::SVG.Length.datatype)? (fx::SVG.Coordinate.datatype)? (fy::SVG.Coordinate.datatype)? (gradientUnits::("userSpaceOnUse" | "objectBoundingBox"))? (gradientTransform::SVG.TransformList.datatype)? (spreadMethod::("pad" | "reflect" | "repeat"))?) ;
SVG.altGlyphDef ::= altGlyphDef::((SVG.glyphRef+) | (SVG.altGlyphItem+) SVG.Core.attrib) ;
SVG.FilterColor.attrib ::= (color-interpolation-filters::("auto" | "sRGB" | "linearRGB" | "inherit"))? SVG.FilterColor.extra.attrib ;
 SVG.FilterColor.attrib ::= ε ;
SVG.mask ::= mask::((SVG.Description.class | SVG.Animation.class | SVG.Structure.class | SVG.Conditional.class | SVG.Image.class | SVG.Style.class | SVG.Shape.class | SVG.Text.class | SVG.Marker.class | SVG.Profile.class | SVG.Gradient.class | SVG.Pattern.class | SVG.Clip.class | SVG.Mask.class | SVG.Filter.class | SVG.Cursor.class | SVG.Hyperlink.class | SVG.View.class | SVG.Script.class | SVG.Font.class)* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Presentation.attrib SVG.External.attrib (x::SVG.Coordinate.datatype)? (y::SVG.Coordinate.datatype)? (width::SVG.Length.datatype)? (height::SVG.Length.datatype)? (maskUnits::("userSpaceOnUse" | "objectBoundingBox"))? (maskContentUnits::("userSpaceOnUse" | "objectBoundingBox"))?) ;
SVG.onrepeat.attrib ::= (onrepeat::SVG.Script.datatype)? ;
SVG.Presentation.attrib ::= SVG.Container.attrib SVG.Viewport.attrib SVG.Text.attrib SVG.TextContent.attrib SVG.Font.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Marker.attrib SVG.Profile.attrib SVG.Gradient.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.FilterColor.attrib SVG.Cursor.attrib (flood-color::SVG.SVGColor.datatype)? (flood-opacity::SVG.OpacityValue.datatype)? (lighting-color::SVG.SVGColor.datatype)? SVG.Presentation.extra.attrib ;
SVG.hkern ::= hkern::(ε SVG.Core.attrib (u1::string())? (g1::string())? (u2::string())? (g2::string())? k::SVG.Number.datatype) ;
SVG.definition-src ::= definition-src::(ε SVG.Core.attrib SVG.XLinkRequired.attrib) ;
SVG.font-face-format ::= font-face-format::(ε SVG.Core.attrib (string::string())?) ;
SVG.FilterPrimitive.attrib ::= (x::SVG.Coordinate.datatype)? (y::SVG.Coordinate.datatype)? (width::SVG.Length.datatype)? (height::SVG.Length.datatype)? (result::string())? SVG.FilterPrimitive.extra.attrib ;
SVG.rect ::= rect::(SVG.Description.class* SVG.Animation.class* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.GraphicalEvents.attrib SVG.Cursor.attrib SVG.External.attrib (x::SVG.Coordinate.datatype)? (y::SVG.Coordinate.datatype)? width::SVG.Length.datatype height::SVG.Length.datatype (rx::SVG.Length.datatype)? (ry::SVG.Length.datatype)? (transform::SVG.TransformList.datatype)?) ;
SVG.feGaussianBlur ::= feGaussianBlur::((SVG.animate | SVG.set)* SVG.Core.attrib SVG.FilterColor.attrib SVG.FilterPrimitiveWithIn.attrib (stdDeviation::SVG.NumberOptionalNumber.datatype)?) ;
SVG.stroke-dashoffset.attrib ::= (stroke-dashoffset::SVG.StrokeDashOffsetValue.datatype)? ;
SVG.Mask.attrib ::= ε ;
 SVG.Mask.attrib ::= (mask::SVG.MaskValue.datatype)? SVG.Mask.extra.attrib ;
SVG.AnimationValue.attrib ::= (calcMode::("discrete" | "linear" | "paced" | "spline"))? (values::string())? (keyTimes::string())? (keySplines::string())? (from::string())? (to::string())? (by::string())? SVG.AnimationValue.extra.attrib ;
SVG.g ::= g::((SVG.Description.class | SVG.Animation.class | SVG.Structure.class | SVG.Conditional.class | SVG.Image.class | SVG.Style.class | SVG.Shape.class | SVG.Text.class | SVG.Marker.class | SVG.Profile.class | SVG.Gradient.class | SVG.Pattern.class | SVG.Clip.class | SVG.Mask.class | SVG.Filter.class | SVG.Cursor.class | SVG.Hyperlink.class | SVG.View.class | SVG.Script.class | SVG.Font.class)* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Presentation.attrib SVG.GraphicalEvents.attrib SVG.External.attrib (transform::SVG.TransformList.datatype)?) ;
SVG.onactivate.attrib ::= (onactivate::SVG.Script.datatype)? ;
SVG.Conditional.attrib ::= (requiredFeatures::SVG.FeatureList.datatype)? (requiredExtensions::SVG.ExtensionList.datatype)? (systemLanguage::SVG.LanguageCodes.datatype)? SVG.Conditional.extra.attrib ;
 SVG.Conditional.attrib ::= ε ;
SVG.onclick.attrib ::= (onclick::SVG.Script.datatype)? ;
SVG.a ::= a::((string() | SVG.Description.class | SVG.Animation.class | SVG.Structure.class | SVG.Conditional.class | SVG.Image.class | SVG.Style.class | SVG.Shape.class | SVG.Text.class | SVG.Marker.class | SVG.Profile.class | SVG.Gradient.class | SVG.Pattern.class | SVG.Clip.class | SVG.Mask.class | SVG.Filter.class | SVG.Cursor.class | SVG.Hyperlink.class | SVG.View.class | SVG.Script.class | SVG.Font.class)* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Presentation.attrib SVG.GraphicalEvents.attrib SVG.XLinkReplace.attrib SVG.External.attrib (transform::SVG.TransformList.datatype)? (target::SVG.LinkTarget.datatype)?) ;
SVG.animate ::= animate::(SVG.Description.class* SVG.Core.attrib SVG.Conditional.attrib SVG.AnimationEvents.attrib SVG.External.attrib SVG.Animation.attrib SVG.AnimationAttribute.attrib SVG.AnimationTiming.attrib SVG.AnimationValue.attrib SVG.AnimationAddtion.attrib) ;
SVG.ellipse ::= ellipse::(SVG.Description.class* SVG.Animation.class* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.GraphicalEvents.attrib SVG.Cursor.attrib SVG.External.attrib (cx::SVG.Coordinate.datatype)? (cy::SVG.Coordinate.datatype)? rx::SVG.Length.datatype ry::SVG.Length.datatype (transform::SVG.TransformList.datatype)?) ;
SVG.feImage ::= feImage::((SVG.animate | SVG.set | SVG.animateTransform)* SVG.Core.attrib SVG.Style.attrib SVG.Presentation.attrib SVG.FilterPrimitive.attrib SVG.XLinkEmbed.attrib SVG.External.attrib (preserveAspectRatio::SVG.PreserveAspectRatioSpec.datatype)?) ;
SVG.glyphRef ::= glyphRef::(ε SVG.Core.attrib SVG.Style.attrib SVG.Font.attrib SVG.XLink.attrib (x::SVG.Coordinates.datatype)? (y::SVG.Coordinates.datatype)? (dx::SVG.Lengths.datatype)? (dy::SVG.Lengths.datatype)? (glyphRef::string())? (format::string())?) ;
SVG.Style.attrib ::= ε ;
 SVG.Style.attrib ::= (style::SVG.StyleSheet.datatype)? (class::SVG.ClassList.datatype)? SVG.Style.extra.attrib ;
SVG.image ::= image::(SVG.Description.class* SVG.Animation.class* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Viewport.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Profile.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.GraphicalEvents.attrib SVG.Cursor.attrib SVG.XLinkEmbed.attrib SVG.External.attrib (x::SVG.Coordinate.datatype)? (y::SVG.Coordinate.datatype)? width::SVG.Length.datatype height::SVG.Length.datatype (preserveAspectRatio::SVG.PreserveAspectRatioSpec.datatype)? (transform::SVG.TransformList.datatype)?) ;
SVG.XLink.attrib ::= ε ;
 SVG.XLink.attrib ::= (xlink:type::"simple")? (xlink:href::SVG.URI.datatype)? (xlink:role::SVG.URI.datatype)? (xlink:arcrole::SVG.URI.datatype)? (xlink:title::string())? (xlink:show::"other")? (xlink:actuate::"onLoad")? SVG.XLink.extra.attrib ;
SVG.title ::= title::(string() SVG.Core.attrib SVG.Style.attrib) ;
SVG.polyline ::= polyline::(SVG.Description.class* SVG.Animation.class* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Marker.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.GraphicalEvents.attrib SVG.Cursor.attrib SVG.External.attrib points::SVG.Points.datatype (transform::SVG.TransformList.datatype)?) ;
SVG.onmouseover.attrib ::= (onmouseover::SVG.Script.datatype)? ;
SVG.feBlend ::= feBlend::((SVG.animate | SVG.set)* SVG.Core.attrib SVG.FilterColor.attrib SVG.FilterPrimitiveWithIn.attrib in2::string() (mode::("normal" | "multiply" | "screen" | "darken" | "lighten"))?) ;
SVG.altGlyphItem ::= altGlyphItem::(SVG.glyphRef+ SVG.Core.attrib) ;
SVG.lang.attrib ::= (xml:lang::SVG.LanguageCode.datatype)? ;
SVG.color.attrib ::= (color::SVG.Color.datatype)? ;
SVG.switch ::= switch::(SVG.Description.class* (SVG.svg | SVG.g | SVG.use | SVG.text | SVG.text | SVG.Animation.class | SVG.Conditional.class | SVG.Image.class | SVG.Shape.class | SVG.Hyperlink.class | SVG.Extensibility.class)* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Presentation.attrib SVG.GraphicalEvents.attrib SVG.External.attrib (transform::SVG.TransformList.datatype)?) ;
SVG.space.attrib ::= (xml:space::("default" | "preserve"))? ;
SVG.fill-rule.attrib ::= (fill-rule::SVG.ClipFillRule.datatype)? ;
SVG.onresize.attrib ::= (onresize::SVG.Script.datatype)? ;
SVG.stroke-opacity.attrib ::= (stroke-opacity::SVG.OpacityValue.datatype)? ;
SVG.stroke.attrib ::= (stroke::SVG.Paint.datatype)? ;
SVG.color-profile ::= color-profile::(SVG.Description.class* SVG.Core.attrib SVG.XLink.attrib (local::string())? name::string() (rendering-intent::("auto" | "perceptual" | "relative-colorimetric" | "saturation" | "absolute-colorimetric"))?) ;
SVG.view ::= view::(SVG.Description.class* SVG.Core.attrib SVG.External.attrib (viewBox::SVG.ViewBoxSpec.datatype)? (preserveAspectRatio::SVG.PreserveAspectRatioSpec.datatype)? (zoomAndPan::("disable" | "magnify"))? (viewTarget::string())?) ;
SVG.feMerge ::= feMerge::(SVG.feMergeNode* SVG.Core.attrib SVG.FilterColor.attrib SVG.FilterPrimitive.attrib) ;
SVG.tref ::= tref::((SVG.animate | SVG.set | SVG.animateColor | SVG.Description.class)* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.TextContent.attrib SVG.Font.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.GraphicalEvents.attrib SVG.Cursor.attrib SVG.XLinkRequired.attrib SVG.External.attrib (x::SVG.Coordinates.datatype)? (y::SVG.Coordinates.datatype)? (dx::SVG.Lengths.datatype)? (dy::SVG.Lengths.datatype)? (rotate::SVG.Numbers.datatype)? (textLength::SVG.Length.datatype)? (lengthAdjust::("spacing" | "spacingAndGlyphs"))?) ;
SVG.foreignObject ::= foreignObject::(SVG.foreignObject.content SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Presentation.attrib SVG.GraphicalEvents.attrib SVG.External.attrib (x::SVG.Coordinate.datatype)? (y::SVG.Coordinate.datatype)? width::SVG.Length.datatype height::SVG.Length.datatype (transform::SVG.TransformList.datatype)?) ;
SVG.font-face-src ::= font-face-src::((SVG.font-face-uri | SVG.font-face-name)+ SVG.Core.attrib) ;
SVG.FilterPrimitiveWithIn.attrib ::= SVG.FilterPrimitive.attrib (in::string())? SVG.FilterPrimitiveWithIn.extra.attrib ;
SVG.shape-rendering.attrib ::= (shape-rendering::("auto" | "optimizeSpeed" | "crispEdges" | "geometricPrecision" | "inherit"))? ;
SVG.glyph ::= glyph::((SVG.Description.class | SVG.Animation.class | SVG.Structure.class | SVG.Conditional.class | SVG.Image.class | SVG.Style.class | SVG.Shape.class | SVG.Text.class | SVG.Marker.class | SVG.Profile.class | SVG.Gradient.class | SVG.Pattern.class | SVG.Clip.class | SVG.Mask.class | SVG.Filter.class | SVG.Cursor.class | SVG.Hyperlink.class | SVG.View.class | SVG.Script.class | SVG.Font.class)* SVG.Core.attrib SVG.Style.attrib SVG.Presentation.attrib (unicode::string())? (glyph-name::string())? (d::SVG.PathData.datatype)? (orientation::string())? (arabic-form::string())? (lang::SVG.LanguageCodes.datatype)? (horiz-adv-x::SVG.Number.datatype)? (vert-origin-x::SVG.Number.datatype)? (vert-origin-y::SVG.Number.datatype)? (vert-adv-y::SVG.Number.datatype)?) ;
--------------------markup::svg-furubayashi-tiny.bgf--------------------
SVG.Font.attrib ::= (font-family::SVG.FontFamilyValue.datatype)? (font-size::SVG.FontSizeValue.datatype)? (font-style::("normal" | "italic" | "oblique" | "inherit"))? (font-weight::("normal" | "bold" | "bolder" | "lighter" | "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" | "900" | "inherit"))? SVG.Font.extra.attrib ;
 SVG.Font.attrib ::= ε ;
SVG.AnimationAddtion.attrib ::= (additive::("replace" | "sum"))? (accumulate::("none" | "sum"))? SVG.AnimationAddition.extra.attrib ;
SVG.visibility.attrib ::= (visibility::("visible" | "hidden" | "inherit"))? ;
SVG.desc ::= desc::(string() SVG.Core.attrib SVG.Style.attrib) ;
SVG.defs ::= defs::((SVG.Description.class | SVG.Animation.class | SVG.Structure.class | SVG.Conditional.class | SVG.Image.class | SVG.Style.class | SVG.Shape.class | SVG.Text.class | SVG.Marker.class | SVG.Profile.class | SVG.Gradient.class | SVG.Pattern.class | SVG.Clip.class | SVG.Mask.class | SVG.Filter.class | SVG.Cursor.class | SVG.Hyperlink.class | SVG.View.class | SVG.Script.class | SVG.Font.class)* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Presentation.attrib SVG.GraphicalEvents.attrib SVG.External.attrib (transform::SVG.TransformList.datatype)?) ;
SVG.stroke-miterlimit.attrib ::= (stroke-miterlimit::SVG.StrokeMiterLimitValue.datatype)? ;
SVG.TextContent.attrib ::= (text-anchor::("start" | "middle" | "end" | "inherit"))? SVG.TextContent.extra.attrib ;
 SVG.TextContent.attrib ::= ε ;
SVG.animateTransform ::= animateTransform::(SVG.Description.class* SVG.Core.attrib SVG.Conditional.attrib SVG.AnimationEvents.attrib SVG.External.attrib SVG.Animation.attrib SVG.AnimationAttribute.attrib SVG.AnimationTiming.attrib SVG.AnimationValue.attrib SVG.AnimationAddtion.attrib (type::("translate" | "scale" | "rotate" | "skewX" | "skewY"))?) ;
SVG.font-face ::= font-face::(SVG.Description.class* SVG.font-face-src? SVG.Core.attrib (font-family::string())? (font-style::string())? (font-variant::string())? (font-weight::string())? (font-stretch::string())? (font-size::string())? (unicode-range::string())? (units-per-em::SVG.Number.datatype)? (panose-1::string())? (stemv::SVG.Number.datatype)? (stemh::SVG.Number.datatype)? (slope::SVG.Number.datatype)? (cap-height::SVG.Number.datatype)? (x-height::SVG.Number.datatype)? (accent-height::SVG.Number.datatype)? (ascent::SVG.Number.datatype)? (descent::SVG.Number.datatype)? (widths::string())? (bbox::string())? (ideographic::SVG.Number.datatype)? (alphabetic::SVG.Number.datatype)? (mathematical::SVG.Number.datatype)? (hanging::SVG.Number.datatype)? (underline-position::SVG.Number.datatype)? (underline-thickness::SVG.Number.datatype)? (strikethrough-position::SVG.Number.datatype)? (strikethrough-thickness::SVG.Number.datatype)? (overline-position::SVG.Number.datatype)? (overline-thickness::SVG.Number.datatype)?) ;
SVG.stroke-linejoin.attrib ::= (stroke-linejoin::("miter" | "round" | "bevel" | "inherit"))? ;
SVG.animateColor ::= animateColor::(SVG.Description.class* SVG.Core.attrib SVG.Conditional.attrib SVG.AnimationEvents.attrib SVG.External.attrib SVG.Animation.attrib SVG.AnimationAttribute.attrib SVG.AnimationTiming.attrib SVG.AnimationValue.attrib SVG.AnimationAddtion.attrib) ;
SVG.fill.attrib ::= (fill::SVG.Paint.datatype)? ;
SVG.externalResourcesRequired.attrib ::= (externalResourcesRequired::SVG.Boolean.datatype)? ;
SVG.mpath ::= mpath::(SVG.Description.class* SVG.Core.attrib SVG.XLinkRequired.attrib SVG.External.attrib) ;
SVG.XLinkEmbed.attrib ::= (xlink:type::"simple")? xlink:href::SVG.URI.datatype (xlink:role::SVG.URI.datatype)? (xlink:arcrole::SVG.URI.datatype)? (xlink:title::string())? (xlink:show::"embed")? (xlink:actuate::"onLoad")? SVG.XLinkEmbed.extra.attrib ;
SVG.font-face-name ::= font-face-name::(ε SVG.Core.attrib (name::string())?) ;
SVG.stroke-linecap.attrib ::= (stroke-linecap::("butt" | "round" | "square" | "inherit"))? ;
SVG.display.attrib ::= (display::("inline" | "block" | "list-item" | "run-in" | "compact" | "marker" | "table" | "inline-table" | "table-row-group" | "table-header-group" | "table-footer-group" | "table-row" | "table-column-group" | "table-column" | "table-cell" | "table-caption" | "none" | "inherit"))? ;
SVG.line ::= line::(SVG.Description.class* SVG.Animation.class* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Marker.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.GraphicalEvents.attrib SVG.Cursor.attrib SVG.External.attrib (x1::SVG.Coordinate.datatype)? (y1::SVG.Coordinate.datatype)? (x2::SVG.Coordinate.datatype)? (y2::SVG.Coordinate.datatype)? (transform::SVG.TransformList.datatype)?) ;
SVG.base.attrib ::= (xml:base::SVG.URI.datatype)? ;
SVG.use ::= use::(SVG.Description.class* SVG.Animation.class* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Presentation.attrib SVG.GraphicalEvents.attrib SVG.XLinkEmbed.attrib SVG.External.attrib (x::SVG.Coordinate.datatype)? (y::SVG.Coordinate.datatype)? (width::SVG.Length.datatype)? (height::SVG.Length.datatype)? (transform::SVG.TransformList.datatype)?) ;
SVG.stroke-dasharray.attrib ::= (stroke-dasharray::SVG.StrokeDashArrayValue.datatype)? ;
SVG.missing-glyph ::= missing-glyph::(SVG.Description.class* SVG.Core.attrib SVG.Style.attrib (d::SVG.PathData.datatype)? (horiz-adv-x::SVG.Number.datatype)?) ;
SVG.Presentation.attrib ::= SVG.Container.attrib SVG.Viewport.attrib SVG.Text.attrib SVG.TextContent.attrib SVG.Font.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Marker.attrib SVG.Profile.attrib SVG.Gradient.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.FilterColor.attrib SVG.Cursor.attrib (flood-color::SVG.SVGColor.datatype)? (flood-opacity::SVG.OpacityValue.datatype)? (lighting-color::SVG.SVGColor.datatype)? SVG.Presentation.extra.attrib ;
SVG.hkern ::= hkern::(ε SVG.Core.attrib (u1::string())? (g1::string())? (u2::string())? (g2::string())? k::SVG.Number.datatype) ;
SVG.AnimationTiming.attrib ::= (begin::string())? (dur::string())? (end::string())? (min::string())? (max::string())? (restart::("always" | "never" | "whenNotActive"))? (repeatCount::string())? (repeatDur::string())? (fill::("remove" | "freeze"))? SVG.AnimationTiming.extra.attrib ;
SVG.id.attrib ::= (id::SVG.ID.datatype)? ;
SVG.rect ::= rect::(SVG.Description.class* SVG.Animation.class* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.GraphicalEvents.attrib SVG.Cursor.attrib SVG.External.attrib (x::SVG.Coordinate.datatype)? (y::SVG.Coordinate.datatype)? width::SVG.Length.datatype height::SVG.Length.datatype (rx::SVG.Length.datatype)? (ry::SVG.Length.datatype)? (transform::SVG.TransformList.datatype)?) ;
SVG.animateMotion ::= animateMotion::(SVG.Description.class* SVG.mpath? SVG.Core.attrib SVG.Conditional.attrib SVG.AnimationEvents.attrib SVG.External.attrib SVG.Animation.attrib SVG.AnimationTiming.attrib SVG.AnimationAddtion.attrib (calcMode::("discrete" | "linear" | "paced" | "spline"))? (values::string())? (keyTimes::string())? (Splines::string())? (from::string())? (to::string())? (by::string())? (path::string())? (keyPoints::string())? (rotate::string())? (origin::string())?) ;
SVG.stroke-dashoffset.attrib ::= (stroke-dashoffset::SVG.StrokeDashOffsetValue.datatype)? ;
SVG.AnimationValue.attrib ::= (calcMode::("discrete" | "linear" | "paced" | "spline"))? (values::string())? (keyTimes::string())? (keySplines::string())? (from::string())? (to::string())? (by::string())? SVG.AnimationValue.extra.attrib ;
SVG.stroke-width.attrib ::= (stroke-width::SVG.StrokeWidthValue.datatype)? ;
SVG.g ::= g::((SVG.Description.class | SVG.Animation.class | SVG.Structure.class | SVG.Conditional.class | SVG.Image.class | SVG.Style.class | SVG.Shape.class | SVG.Text.class | SVG.Marker.class | SVG.Profile.class | SVG.Gradient.class | SVG.Pattern.class | SVG.Clip.class | SVG.Mask.class | SVG.Filter.class | SVG.Cursor.class | SVG.Hyperlink.class | SVG.View.class | SVG.Script.class | SVG.Font.class)* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Presentation.attrib SVG.GraphicalEvents.attrib SVG.External.attrib (transform::SVG.TransformList.datatype)?) ;
SVG.Conditional.attrib ::= (requiredFeatures::SVG.FeatureList.datatype)? (requiredExtensions::SVG.ExtensionList.datatype)? (systemLanguage::SVG.LanguageCodes.datatype)? SVG.Conditional.extra.attrib ;
 SVG.Conditional.attrib ::= ε ;
SVG.circle ::= circle::(SVG.Description.class* SVG.Animation.class* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.GraphicalEvents.attrib SVG.Cursor.attrib SVG.External.attrib (cx::SVG.Coordinate.datatype)? (cy::SVG.Coordinate.datatype)? r::SVG.Length.datatype (transform::SVG.TransformList.datatype)?) ;
SVG.svg ::= svg::((SVG.Description.class | SVG.Animation.class | SVG.Structure.class | SVG.Conditional.class | SVG.Image.class | SVG.Style.class | SVG.Shape.class | SVG.Text.class | SVG.Marker.class | SVG.Profile.class | SVG.Gradient.class | SVG.Pattern.class | SVG.Clip.class | SVG.Mask.class | SVG.Filter.class | SVG.Cursor.class | SVG.Hyperlink.class | SVG.View.class | SVG.Script.class | SVG.Font.class)* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Presentation.attrib SVG.DocumentEvents.attrib SVG.GraphicalEvents.attrib SVG.External.attrib (x::SVG.Coordinate.datatype)? (y::SVG.Coordinate.datatype)? (width::SVG.Length.datatype)? (height::SVG.Length.datatype)? (viewBox::SVG.ViewBoxSpec.datatype)? (preserveAspectRatio::SVG.PreserveAspectRatioSpec.datatype)? (zoomAndPan::("disable" | "magnify"))? version::SVG.Number.datatype (baseProfile::SVG.Text.datatype)?) ;
SVG.font ::= font::(SVG.Description.class* SVG.font-face SVG.missing-glyph (SVG.glyph | SVG.hkern)* SVG.Core.attrib SVG.Style.attrib SVG.External.attrib (horiz-origin-x::SVG.Number.datatype)? horiz-adv-x::SVG.Number.datatype) ;
SVG.set ::= set::(SVG.Description.class* SVG.Core.attrib SVG.Conditional.attrib SVG.AnimationEvents.attrib SVG.External.attrib SVG.Animation.attrib SVG.AnimationAttribute.attrib SVG.AnimationTiming.attrib (to::string())?) ;
SVG.a ::= a::((string() | SVG.Description.class | SVG.Animation.class | SVG.Structure.class | SVG.Conditional.class | SVG.Image.class | SVG.Style.class | SVG.Shape.class | SVG.Text.class | SVG.Marker.class | SVG.Profile.class | SVG.Gradient.class | SVG.Pattern.class | SVG.Clip.class | SVG.Mask.class | SVG.Filter.class | SVG.Cursor.class | SVG.Hyperlink.class | SVG.View.class | SVG.Script.class | SVG.Font.class)* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Presentation.attrib SVG.GraphicalEvents.attrib SVG.XLinkReplace.attrib SVG.External.attrib (transform::SVG.TransformList.datatype)? (target::SVG.LinkTarget.datatype)?) ;
SVG.animate ::= animate::(SVG.Description.class* SVG.Core.attrib SVG.Conditional.attrib SVG.AnimationEvents.attrib SVG.External.attrib SVG.Animation.attrib SVG.AnimationAttribute.attrib SVG.AnimationTiming.attrib SVG.AnimationValue.attrib SVG.AnimationAddtion.attrib) ;
SVG.AnimationAttribute.attrib ::= attributeName::string() (attributeType::string())? SVG.AnimationAttribute.extra.attrib ;
SVG.script ::= script::(string() SVG.Core.attrib SVG.XLink.attrib SVG.External.attrib type::SVG.ContentType.datatype) ;
SVG.ellipse ::= ellipse::(SVG.Description.class* SVG.Animation.class* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.GraphicalEvents.attrib SVG.Cursor.attrib SVG.External.attrib (cx::SVG.Coordinate.datatype)? (cy::SVG.Coordinate.datatype)? rx::SVG.Length.datatype ry::SVG.Length.datatype (transform::SVG.TransformList.datatype)?) ;
SVG.Style.attrib ::= ε ;
 SVG.Style.attrib ::= (style::SVG.StyleSheet.datatype)? (class::SVG.ClassList.datatype)? SVG.Style.extra.attrib ;
SVG.image ::= image::(SVG.Description.class* SVG.Animation.class* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Viewport.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Profile.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.GraphicalEvents.attrib SVG.Cursor.attrib SVG.XLinkEmbed.attrib SVG.External.attrib (x::SVG.Coordinate.datatype)? (y::SVG.Coordinate.datatype)? width::SVG.Length.datatype height::SVG.Length.datatype (preserveAspectRatio::SVG.PreserveAspectRatioSpec.datatype)? (transform::SVG.TransformList.datatype)?) ;
SVG.XLink.attrib ::= ε ;
 SVG.XLink.attrib ::= (xlink:type::"simple")? (xlink:href::SVG.URI.datatype)? (xlink:role::SVG.URI.datatype)? (xlink:arcrole::SVG.URI.datatype)? (xlink:title::string())? (xlink:show::"other")? (xlink:actuate::"onLoad")? SVG.XLink.extra.attrib ;
SVG.title ::= title::(string() SVG.Core.attrib SVG.Style.attrib) ;
SVG.XLinkReplace.attrib ::= (xlink:type::"simple")? xlink:href::SVG.URI.datatype (xlink:role::SVG.URI.datatype)? (xlink:arcrole::SVG.URI.datatype)? (xlink:title::string())? (xlink:show::("new" | "replace"))? (xlink:actuate::"onRequest")? SVG.XLinkReplace.extra.attrib ;
SVG.polyline ::= polyline::(SVG.Description.class* SVG.Animation.class* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Marker.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.GraphicalEvents.attrib SVG.Cursor.attrib SVG.External.attrib points::SVG.Points.datatype (transform::SVG.TransformList.datatype)?) ;
SVG.lang.attrib ::= (xml:lang::SVG.LanguageCode.datatype)? ;
SVG.color.attrib ::= (color::SVG.Color.datatype)? ;
SVG.switch ::= switch::(SVG.Description.class* (SVG.svg | SVG.g | SVG.use | SVG.text | SVG.text | SVG.Animation.class | SVG.Conditional.class | SVG.Image.class | SVG.Shape.class | SVG.Hyperlink.class | SVG.Extensibility.class)* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Presentation.attrib SVG.GraphicalEvents.attrib SVG.External.attrib (transform::SVG.TransformList.datatype)?) ;
SVG.fill-rule.attrib ::= (fill-rule::SVG.ClipFillRule.datatype)? ;
SVG.space.attrib ::= (xml:space::("default" | "preserve"))? ;
SVG.metadata ::= metadata::(string() SVG.Core.attrib) ;
SVG.text ::= text::((string() | SVG.Description.class | SVG.Animation.class | SVG.Hyperlink.class)* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.TextContent.attrib SVG.Font.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.GraphicalEvents.attrib SVG.Cursor.attrib SVG.External.attrib (x::SVG.Coordinates.datatype)? (y::SVG.Coordinates.datatype)? (rotate::SVG.Numbers.datatype)? (transform::SVG.TransformList.datatype)?) ;
SVG.stroke.attrib ::= (stroke::SVG.Paint.datatype)? ;
SVG.XLinkRequired.attrib ::= (xlink:type::"simple")? xlink:href::SVG.URI.datatype (xlink:role::SVG.URI.datatype)? (xlink:arcrole::SVG.URI.datatype)? (xlink:title::string())? (xlink:show::"other")? (xlink:actuate::"onLoad")? SVG.XLinkRequired.extra.attrib ;
SVG.polygon ::= polygon::(SVG.Description.class* SVG.Animation.class* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Marker.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.GraphicalEvents.attrib SVG.Cursor.attrib SVG.External.attrib points::SVG.Points.datatype (transform::SVG.TransformList.datatype)?) ;
SVG.view ::= view::(SVG.Description.class* SVG.Core.attrib SVG.External.attrib (viewBox::SVG.ViewBoxSpec.datatype)? (preserveAspectRatio::SVG.PreserveAspectRatioSpec.datatype)? (zoomAndPan::("disable" | "magnify"))? (viewTarget::string())?) ;
SVG.path ::= path::(SVG.Description.class* SVG.Animation.class* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Marker.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.GraphicalEvents.attrib SVG.Cursor.attrib SVG.External.attrib d::SVG.PathData.datatype (pathLength::SVG.Number.datatype)? (transform::SVG.TransformList.datatype)?) ;
SVG.foreignObject ::= foreignObject::(SVG.foreignObject.content SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Presentation.attrib SVG.GraphicalEvents.attrib SVG.External.attrib (x::SVG.Coordinate.datatype)? (y::SVG.Coordinate.datatype)? width::SVG.Length.datatype height::SVG.Length.datatype (transform::SVG.TransformList.datatype)?) ;
SVG.font-face-src ::= font-face-src::(SVG.font-face-name+ SVG.Core.attrib) ;
SVG.style ::= style::(string() SVG.Core.attrib type::SVG.ContentType.datatype (media::SVG.MediaDesc.datatype)? (title::SVG.Text.datatype)?) ;
SVG.glyph ::= glyph::(SVG.Description.class* SVG.Core.attrib SVG.Style.attrib (unicode::string())? (glyph-name::string())? (d::SVG.PathData.datatype)? (arabic-form::string())? (lang::SVG.LanguageCodes.datatype)? (horiz-adv-x::SVG.Number.datatype)?) ;
SVG.color-rendering.attrib ::= (color-rendering::("auto" | "optimizeSpeed" | "optimizeQuality" | "inherit"))? ;
--------------------markup::svg-furubayashi.bgf--------------------
SVG.clipPath ::= clipPath::(SVG.Description.class* (SVG.Animation.class | SVG.Use.class | SVG.Shape.class | SVG.Text.class)* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Text.attrib SVG.TextContent.attrib SVG.Font.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.Cursor.attrib SVG.External.attrib (transform::SVG.TransformList.datatype)? (clipPathUnits::("userSpaceOnUse" | "objectBoundingBox"))?) ;
SVG.visibility.attrib ::= (visibility::("visible" | "hidden" | "inherit"))? ;
SVG.desc ::= desc::(string() SVG.Core.attrib SVG.Style.attrib) ;
SVG.onbegin.attrib ::= (onbegin::SVG.Script.datatype)? ;
SVG.stroke-miterlimit.attrib ::= (stroke-miterlimit::SVG.StrokeMiterLimitValue.datatype)? ;
SVG.opacity.attrib ::= (opacity::SVG.OpacityValue.datatype)? ;
SVG.feTile ::= feTile::((SVG.animate | SVG.set)* SVG.Core.attrib SVG.FilterColor.attrib SVG.FilterPrimitiveWithIn.attrib) ;
SVG.animateTransform ::= animateTransform::(SVG.Description.class* SVG.Core.attrib SVG.Conditional.attrib SVG.AnimationEvents.attrib SVG.External.attrib SVG.Animation.attrib SVG.AnimationAttribute.attrib SVG.AnimationTiming.attrib SVG.AnimationValue.attrib SVG.AnimationAddtion.attrib (type::("translate" | "scale" | "rotate" | "skewX" | "skewY"))?) ;
SVG.font-face ::= font-face::(SVG.Description.class* SVG.font-face-src? SVG.definition-src? SVG.Core.attrib (font-family::string())? (font-style::string())? (font-variant::string())? (font-weight::string())? (font-stretch::string())? (font-size::string())? (unicode-range::string())? (units-per-em::SVG.Number.datatype)? (panose-1::string())? (stemv::SVG.Number.datatype)? (stemh::SVG.Number.datatype)? (slope::SVG.Number.datatype)? (cap-height::SVG.Number.datatype)? (x-height::SVG.Number.datatype)? (accent-height::SVG.Number.datatype)? (ascent::SVG.Number.datatype)? (descent::SVG.Number.datatype)? (widths::string())? (bbox::string())? (ideographic::SVG.Number.datatype)? (alphabetic::SVG.Number.datatype)? (mathematical::SVG.Number.datatype)? (hanging::SVG.Number.datatype)? (v-ideographic::SVG.Number.datatype)? (v-alphabetic::SVG.Number.datatype)? (v-mathematical::SVG.Number.datatype)? (v-hanging::SVG.Number.datatype)? (underline-position::SVG.Number.datatype)? (underline-thickness::SVG.Number.datatype)? (strikethrough-position::SVG.Number.datatype)? (strikethrough-thickness::SVG.Number.datatype)? (overline-position::SVG.Number.datatype)? (overline-thickness::SVG.Number.datatype)?) ;
SVG.stroke-linejoin.attrib ::= (stroke-linejoin::("miter" | "round" | "bevel" | "inherit"))? ;
SVG.fePointLight ::= fePointLight::((SVG.animate | SVG.set)* SVG.Core.attrib (x::SVG.Number.datatype)? (y::SVG.Number.datatype)? (z::SVG.Number.datatype)?) ;
SVG.fill-opacity.attrib ::= (fill-opacity::SVG.OpacityValue.datatype)? ;
SVG.fill.attrib ::= (fill::SVG.Paint.datatype)? ;
SVG.mpath ::= mpath::(SVG.Description.class* SVG.Core.attrib SVG.XLinkRequired.attrib SVG.External.attrib) ;
SVG.XLinkEmbed.attrib ::= (xlink:type::"simple")? xlink:href::SVG.URI.datatype (xlink:role::SVG.URI.datatype)? (xlink:arcrole::SVG.URI.datatype)? (xlink:title::string())? (xlink:show::"embed")? (xlink:actuate::"onLoad")? SVG.XLinkEmbed.extra.attrib ;
SVG.font-face-name ::= font-face-name::(ε SVG.Core.attrib (name::string())?) ;
SVG.pattern ::= pattern::((SVG.Description.class | SVG.Animation.class | SVG.Structure.class | SVG.Conditional.class | SVG.Image.class | SVG.Style.class | SVG.Shape.class | SVG.Text.class | SVG.Marker.class | SVG.Profile.class | SVG.Gradient.class | SVG.Pattern.class | SVG.Clip.class | SVG.Mask.class | SVG.Filter.class | SVG.Cursor.class | SVG.Hyperlink.class | SVG.View.class | SVG.Script.class | SVG.Font.class)* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Presentation.attrib SVG.XLink.attrib SVG.External.attrib (x::SVG.Coordinate.datatype)? (y::SVG.Coordinate.datatype)? (width::SVG.Length.datatype)? (height::SVG.Length.datatype)? (patternUnits::("userSpaceOnUse" | "objectBoundingBox"))? (patternContentUnits::("userSpaceOnUse" | "objectBoundingBox"))? (patternTransform::SVG.TransformList.datatype)? (viewBox::SVG.ViewBoxSpec.datatype)? (preserveAspectRatio::SVG.PreserveAspectRatioSpec.datatype)?) ;
SVG.onmouseout.attrib ::= (onmouseout::SVG.Script.datatype)? ;
SVG.feFuncR ::= feFuncR::((SVG.animate | SVG.set)* SVG.Core.attrib type::("identity" | "table" | "discrete" | "linear" | "gamma") (tableValues::string())? (slope::SVG.Number.datatype)? (intercept::SVG.Number.datatype)? (amplitude::SVG.Number.datatype)? (exponent::SVG.Number.datatype)? (offset::SVG.Number.datatype)?) ;
SVG.onfocusin.attrib ::= (onfocusin::SVG.Script.datatype)? ;
SVG.text-rendering.attrib ::= (text-rendering::("auto" | "optimizeSpeed" | "optimizeLegibility" | "geometricPrecision" | "inherit"))? ;
SVG.onscroll.attrib ::= (onscroll::SVG.Script.datatype)? ;
SVG.Text.attrib ::= ε ;
 SVG.Text.attrib ::= (writing-mode::("lr-tb" | "rl-tb" | "tb-rl" | "lr" | "rl" | "tb" | "inherit"))? SVG.Text.extra.attrib ;
SVG.feComposite ::= feComposite::((SVG.animate | SVG.set)* SVG.Core.attrib SVG.FilterColor.attrib SVG.FilterPrimitiveWithIn.attrib in2::string() (operator::("over" | "in" | "out" | "atop" | "xor" | "arithmetic"))? (k1::SVG.Number.datatype)? (k2::SVG.Number.datatype)? (k3::SVG.Number.datatype)? (k4::SVG.Number.datatype)?) ;
SVG.use ::= use::(SVG.Description.class* SVG.Animation.class* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Presentation.attrib SVG.GraphicalEvents.attrib SVG.XLinkEmbed.attrib SVG.External.attrib (x::SVG.Coordinate.datatype)? (y::SVG.Coordinate.datatype)? (width::SVG.Length.datatype)? (height::SVG.Length.datatype)? (transform::SVG.TransformList.datatype)?) ;
SVG.base.attrib ::= (xml:base::SVG.URI.datatype)? ;
SVG.stroke-dasharray.attrib ::= (stroke-dasharray::SVG.StrokeDashArrayValue.datatype)? ;
SVG.onzoom.attrib ::= (onzoom::SVG.Script.datatype)? ;
SVG.feDisplacementMap ::= feDisplacementMap::((SVG.animate | SVG.set)* SVG.Core.attrib SVG.FilterColor.attrib SVG.FilterPrimitiveWithIn.attrib in2::string() (scale::SVG.Number.datatype)? (xChannelSelector::("R" | "G" | "B" | "A"))? (yChannelSelector::("R" | "G" | "B" | "A"))?) ;
SVG.missing-glyph ::= missing-glyph::((SVG.Description.class | SVG.Animation.class | SVG.Structure.class | SVG.Conditional.class | SVG.Image.class | SVG.Style.class | SVG.Shape.class | SVG.Text.class | SVG.Marker.class | SVG.Profile.class | SVG.Gradient.class | SVG.Pattern.class | SVG.Clip.class | SVG.Mask.class | SVG.Filter.class | SVG.Cursor.class | SVG.Hyperlink.class | SVG.View.class | SVG.Script.class | SVG.Font.class)* SVG.Core.attrib SVG.Style.attrib SVG.Presentation.attrib (d::SVG.PathData.datatype)? (horiz-adv-x::SVG.Number.datatype)? (vert-origin-x::SVG.Number.datatype)? (vert-origin-y::SVG.Number.datatype)? (vert-adv-y::SVG.Number.datatype)?) ;
SVG.feFuncG ::= feFuncG::((SVG.animate | SVG.set)* SVG.Core.attrib type::("identity" | "table" | "discrete" | "linear" | "gamma") (tableValues::string())? (slope::SVG.Number.datatype)? (intercept::SVG.Number.datatype)? (amplitude::SVG.Number.datatype)? (exponent::SVG.Number.datatype)? (offset::SVG.Number.datatype)?) ;
SVG.feFuncB ::= feFuncB::((SVG.animate | SVG.set)* SVG.Core.attrib type::("identity" | "table" | "discrete" | "linear" | "gamma") (tableValues::string())? (slope::SVG.Number.datatype)? (intercept::SVG.Number.datatype)? (amplitude::SVG.Number.datatype)? (exponent::SVG.Number.datatype)? (offset::SVG.Number.datatype)?) ;
SVG.feFlood ::= feFlood::((SVG.animate | SVG.set | SVG.animateColor)* SVG.Core.attrib SVG.Style.attrib SVG.Color.attrib SVG.FilterColor.attrib SVG.FilterPrimitiveWithIn.attrib (flood-color::SVG.SVGColor.datatype)? (flood-opacity::SVG.OpacityValue.datatype)?) ;
SVG.feFuncA ::= feFuncA::((SVG.animate | SVG.set)* SVG.Core.attrib type::("identity" | "table" | "discrete" | "linear" | "gamma") (tableValues::string())? (slope::SVG.Number.datatype)? (intercept::SVG.Number.datatype)? (amplitude::SVG.Number.datatype)? (exponent::SVG.Number.datatype)? (offset::SVG.Number.datatype)?) ;
SVG.AnimationTiming.attrib ::= (begin::string())? (dur::string())? (end::string())? (min::string())? (max::string())? (restart::("always" | "never" | "whenNotActive"))? (repeatCount::string())? (repeatDur::string())? (fill::("remove" | "freeze"))? SVG.AnimationTiming.extra.attrib ;
SVG.id.attrib ::= (id::SVG.ID.datatype)? ;
SVG.animateMotion ::= animateMotion::(SVG.Description.class* SVG.mpath? SVG.Core.attrib SVG.Conditional.attrib SVG.AnimationEvents.attrib SVG.External.attrib SVG.Animation.attrib SVG.AnimationTiming.attrib SVG.AnimationAddtion.attrib (calcMode::("discrete" | "linear" | "paced" | "spline"))? (values::string())? (keyTimes::string())? (Splines::string())? (from::string())? (to::string())? (by::string())? (path::string())? (keyPoints::string())? (rotate::string())? (origin::string())?) ;
SVG.onend.attrib ::= (onend::SVG.Script.datatype)? ;
SVG.stroke-width.attrib ::= (stroke-width::SVG.StrokeWidthValue.datatype)? ;
SVG.svg ::= svg::((SVG.Description.class | SVG.Animation.class | SVG.Structure.class | SVG.Conditional.class | SVG.Image.class | SVG.Style.class | SVG.Shape.class | SVG.Text.class | SVG.Marker.class | SVG.Profile.class | SVG.Gradient.class | SVG.Pattern.class | SVG.Clip.class | SVG.Mask.class | SVG.Filter.class | SVG.Cursor.class | SVG.Hyperlink.class | SVG.View.class | SVG.Script.class | SVG.Font.class)* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Presentation.attrib SVG.DocumentEvents.attrib SVG.GraphicalEvents.attrib SVG.External.attrib (x::SVG.Coordinate.datatype)? (y::SVG.Coordinate.datatype)? (width::SVG.Length.datatype)? (height::SVG.Length.datatype)? (viewBox::SVG.ViewBoxSpec.datatype)? (preserveAspectRatio::SVG.PreserveAspectRatioSpec.datatype)? (zoomAndPan::("disable" | "magnify"))? version::SVG.Number.datatype (baseProfile::SVG.Text.datatype)? (contentScriptType::SVG.ContentType.datatype)? (contentStyleType::SVG.ContentType.datatype)?) ;
SVG.circle ::= circle::(SVG.Description.class* SVG.Animation.class* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.GraphicalEvents.attrib SVG.Cursor.attrib SVG.External.attrib (cx::SVG.Coordinate.datatype)? (cy::SVG.Coordinate.datatype)? r::SVG.Length.datatype (transform::SVG.TransformList.datatype)?) ;
SVG.font ::= font::(SVG.Description.class* SVG.font-face SVG.missing-glyph (SVG.glyph | SVG.hkern | SVG.vkern)* SVG.Core.attrib SVG.Style.attrib SVG.Presentation.attrib SVG.External.attrib (horiz-origin-x::SVG.Number.datatype)? (horiz-origin-y::SVG.Number.datatype)? horiz-adv-x::SVG.Number.datatype (vert-origin-x::SVG.Number.datatype)? (vert-origin-y::SVG.Number.datatype)? (vert-adv-y::SVG.Number.datatype)?) ;
SVG.onerror.attrib ::= (onerror::SVG.Script.datatype)? ;
SVG.Profile.attrib ::= ε ;
 SVG.Profile.attrib ::= (color-profile::string())? SVG.Profile.extra.attrib ;
SVG.set ::= set::(SVG.Description.class* SVG.Core.attrib SVG.Conditional.attrib SVG.AnimationEvents.attrib SVG.External.attrib SVG.Animation.attrib SVG.AnimationAttribute.attrib SVG.AnimationTiming.attrib (to::string())?) ;
SVG.Filter.attrib ::= ε ;
 SVG.Filter.attrib ::= (filter::SVG.FilterValue.datatype)? SVG.Filter.extra.attrib ;
SVG.AnimationAttribute.attrib ::= attributeName::string() (attributeType::string())? SVG.AnimationAttribute.extra.attrib ;
SVG.script ::= script::(string() SVG.Core.attrib SVG.XLink.attrib SVG.External.attrib type::SVG.ContentType.datatype) ;
SVG.Marker.attrib ::= ε ;
 SVG.Marker.attrib ::= (marker-start::SVG.MarkerValue.datatype)? (marker-mid::SVG.MarkerValue.datatype)? (marker-end::SVG.MarkerValue.datatype)? SVG.Marker.extra.attrib ;
SVG.feMergeNode ::= feMergeNode::((SVG.animate | SVG.set)* SVG.Core.attrib (in::string())?) ;
SVG.XLinkReplace.attrib ::= (xlink:type::"simple")? xlink:href::SVG.URI.datatype (xlink:role::SVG.URI.datatype)? (xlink:arcrole::SVG.URI.datatype)? (xlink:title::string())? (xlink:show::("new" | "replace"))? (xlink:actuate::"onRequest")? SVG.XLinkReplace.extra.attrib ;
SVG.feDiffuseLighting ::= feDiffuseLighting::(SVG.feDistantLight | SVG.fePointLight | SVG.feSpotLight (SVG.animate | SVG.set | SVG.animateColor)* SVG.Core.attrib SVG.Style.attrib SVG.Color.attrib SVG.FilterColor.attrib SVG.FilterPrimitiveWithIn.attrib (lighting-color::SVG.SVGColor.datatype)? (surfaceScale::SVG.Number.datatype)? (diffuseConstant::SVG.Number.datatype)? (kernelUnitLength::SVG.NumberOptionalNumber.datatype)?) ;
SVG.feOffset ::= feOffset::((SVG.animate | SVG.set)* SVG.Core.attrib SVG.FilterColor.attrib SVG.FilterPrimitiveWithIn.attrib (dx::SVG.Number.datatype)? (dy::SVG.Number.datatype)?) ;
SVG.feColorMatrix ::= feColorMatrix::((SVG.animate | SVG.set)* SVG.Core.attrib SVG.FilterColor.attrib SVG.FilterPrimitiveWithIn.attrib (type::("matrix" | "saturate" | "hueRotate" | "luminanceToAlpha"))? (values::string())?) ;
SVG.onmousedown.attrib ::= (onmousedown::SVG.Script.datatype)? ;
SVG.metadata ::= metadata::(string() SVG.Core.attrib) ;
SVG.text ::= text::((string() | SVG.Description.class | SVG.Animation.class | SVG.TextContent.class | SVG.Hyperlink.class)* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Text.attrib SVG.TextContent.attrib SVG.Font.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.GraphicalEvents.attrib SVG.Cursor.attrib SVG.External.attrib (x::SVG.Coordinates.datatype)? (y::SVG.Coordinates.datatype)? (dx::SVG.Lengths.datatype)? (dy::SVG.Lengths.datatype)? (rotate::SVG.Numbers.datatype)? (textLength::SVG.Length.datatype)? (lengthAdjust::("spacing" | "spacingAndGlyphs"))? (transform::SVG.TransformList.datatype)?) ;
SVG.tspan ::= tspan::((string() | SVG.tspan | SVG.tref | SVG.altGlyph | SVG.animate | SVG.set | SVG.animateColor | SVG.Description.class | SVG.Hyperlink.class)* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.TextContent.attrib SVG.Font.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.GraphicalEvents.attrib SVG.Cursor.attrib SVG.External.attrib (x::SVG.Coordinates.datatype)? (y::SVG.Coordinates.datatype)? (dx::SVG.Lengths.datatype)? (dy::SVG.Lengths.datatype)? (rotate::SVG.Numbers.datatype)? (textLength::SVG.Length.datatype)? (lengthAdjust::("spacing" | "spacingAndGlyphs"))?) ;
SVG.XLinkRequired.attrib ::= (xlink:type::"simple")? xlink:href::SVG.URI.datatype (xlink:role::SVG.URI.datatype)? (xlink:arcrole::SVG.URI.datatype)? (xlink:title::string())? (xlink:show::"other")? (xlink:actuate::"onLoad")? SVG.XLinkRequired.extra.attrib ;
SVG.onabort.attrib ::= (onabort::SVG.Script.datatype)? ;
SVG.polygon ::= polygon::(SVG.Description.class* SVG.Animation.class* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Marker.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.GraphicalEvents.attrib SVG.Cursor.attrib SVG.External.attrib points::SVG.Points.datatype (transform::SVG.TransformList.datatype)?) ;
SVG.font-face-uri ::= font-face-uri::(SVG.font-face-format* SVG.Core.attrib SVG.XLinkRequired.attrib) ;
SVG.path ::= path::(SVG.Description.class* SVG.Animation.class* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Marker.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.GraphicalEvents.attrib SVG.Cursor.attrib SVG.External.attrib d::SVG.PathData.datatype (pathLength::SVG.Number.datatype)? (transform::SVG.TransformList.datatype)?) ;
SVG.overflow.attrib ::= (overflow::("visible" | "hidden" | "scroll" | "auto" | "inherit"))? ;
SVG.onmousemove.attrib ::= (onmousemove::SVG.Script.datatype)? ;
SVG.feSpotLight ::= feSpotLight::((SVG.animate | SVG.set)* SVG.Core.attrib (x::SVG.Number.datatype)? (y::SVG.Number.datatype)? (z::SVG.Number.datatype)? (pointsAtX::SVG.Number.datatype)? (pointsAtY::SVG.Number.datatype)? (pointsAtZ::SVG.Number.datatype)? (specularExponent::SVG.Number.datatype)? (limitingConeAngle::SVG.Number.datatype)?) ;
SVG.image-rendering.attrib ::= (image-rendering::("auto" | "optimizeSpeed" | "optimizeQuality" | "inherit"))? ;
SVG.style ::= style::(string() SVG.Core.attrib type::SVG.ContentType.datatype (media::SVG.MediaDesc.datatype)? (title::SVG.Text.datatype)?) ;
SVG.pointer-events.attrib ::= (pointer-events::("visiblePainted" | "visibleFill" | "visibleStroke" | "visible" | "painted" | "fill" | "stroke" | "all" | "none" | "inherit"))? ;
SVG.symbol ::= symbol::((SVG.Description.class | SVG.Animation.class | SVG.Structure.class | SVG.Conditional.class | SVG.Image.class | SVG.Style.class | SVG.Shape.class | SVG.Text.class | SVG.Marker.class | SVG.Profile.class | SVG.Gradient.class | SVG.Pattern.class | SVG.Clip.class | SVG.Mask.class | SVG.Filter.class | SVG.Cursor.class | SVG.Hyperlink.class | SVG.View.class | SVG.Script.class | SVG.Font.class)* SVG.Core.attrib SVG.Style.attrib SVG.Presentation.attrib SVG.GraphicalEvents.attrib SVG.External.attrib (viewBox::SVG.ViewBoxSpec.datatype)? (preserveAspectRatio::SVG.PreserveAspectRatioSpec.datatype)?) ;
SVG.onmouseup.attrib ::= (onmouseup::SVG.Script.datatype)? ;
SVG.color-rendering.attrib ::= (color-rendering::("auto" | "optimizeSpeed" | "optimizeQuality" | "inherit"))? ;
SVG.Font.attrib ::= ε ;
 SVG.Font.attrib ::= (font-family::SVG.FontFamilyValue.datatype)? (font-size::SVG.FontSizeValue.datatype)? (font-size-adjust::SVG.FontSizeAdjustValue.datatype)? (font-stretch::("normal" | "wider" | "narrower" | "ultra-condensed" | "extra-condensed" | "condensed" | "semi-condensed" | "semi-expanded" | "expanded" | "extra-expanded" | "ultra-expanded" | "inherit"))? (font-style::("normal" | "italic" | "oblique" | "inherit"))? (font-variant::("normal" | "small-caps" | "inherit"))? (font-weight::("normal" | "bold" | "bolder" | "lighter" | "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" | "900" | "inherit"))? SVG.Font.extra.attrib ;
SVG.clip.attrib ::= (clip::SVG.ClipValue.datatype)? ;
SVG.Gradient.attrib ::= ε ;
 SVG.Gradient.attrib ::= (stop-color::SVG.SVGColor.datatype)? (stop-opacity::SVG.OpacityValue.datatype)? SVG.Gradient.extra.attrib ;
SVG.AnimationAddtion.attrib ::= (additive::("replace" | "sum"))? (accumulate::("none" | "sum"))? SVG.AnimationAddition.extra.attrib ;
SVG.defs ::= defs::((SVG.Description.class | SVG.Animation.class | SVG.Structure.class | SVG.Conditional.class | SVG.Image.class | SVG.Style.class | SVG.Shape.class | SVG.Text.class | SVG.Marker.class | SVG.Profile.class | SVG.Gradient.class | SVG.Pattern.class | SVG.Clip.class | SVG.Mask.class | SVG.Filter.class | SVG.Cursor.class | SVG.Hyperlink.class | SVG.View.class | SVG.Script.class | SVG.Font.class)* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Presentation.attrib SVG.GraphicalEvents.attrib SVG.External.attrib (transform::SVG.TransformList.datatype)?) ;
SVG.TextContent.attrib ::= ε ;
 SVG.TextContent.attrib ::= (alignment-baseline::("baseline" | "top" | "before-edge" | "text-top" | "text-before-edge" | "middle" | "bottom" | "after-edge" | "text-bottom" | "text-after-edge" | "ideographic" | "lower" | "hanging" | "mathematical" | "inherit"))? (baseline-shift::SVG.BaselineShiftValue.datatype)? (direction::("ltr" | "rtl" | "inherit"))? (dominant-baseline::("auto" | "autosense-script" | "no-change" | "reset" | "ideographic" | "lower" | "hanging" | "mathematical" | "inherit"))? (glyph-orientation-horizontal::SVG.GlyphOrientationHorizontalValue.datatype)? (glyph-orientation-vertical::SVG.GlyphOrientationVerticalValue.datatype)? (kerning::SVG.KerningValue.datatype)? (letter-spacing::SVG.SpacingValue.datatype)? (text-anchor::("start" | "middle" | "end" | "inherit"))? (text-decoration::SVG.TextDecorationValue.datatype)? (unicode-bidi::("normal" | "embed" | "bidi-override" | "inherit"))? (word-spacing::SVG.SpacingValue.datatype)? SVG.TextContent.extra.attrib ;
SVG.onunload.attrib ::= (onunload::SVG.Script.datatype)? ;
SVG.altGlyph ::= altGlyph::(string() SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.TextContent.attrib SVG.Font.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.GraphicalEvents.attrib SVG.Cursor.attrib SVG.XLink.attrib SVG.External.attrib (x::SVG.Coordinates.datatype)? (y::SVG.Coordinates.datatype)? (dx::SVG.Lengths.datatype)? (dy::SVG.Lengths.datatype)? (glyphRef::string())? (format::string())? (rotate::SVG.Numbers.datatype)?) ;
SVG.stop ::= stop::((SVG.animate | SVG.set | SVG.animateColor)* SVG.Core.attrib SVG.Style.attrib SVG.Color.attrib SVG.Gradient.attrib offset::SVG.NumberOrPercentage.datatype) ;
SVG.animateColor ::= animateColor::(SVG.Description.class* SVG.Core.attrib SVG.Conditional.attrib SVG.AnimationEvents.attrib SVG.External.attrib SVG.Animation.attrib SVG.AnimationAttribute.attrib SVG.AnimationTiming.attrib SVG.AnimationValue.attrib SVG.AnimationAddtion.attrib) ;
SVG.feConvolveMatrix ::= feConvolveMatrix::((SVG.animate | SVG.set)* SVG.Core.attrib SVG.FilterColor.attrib SVG.FilterPrimitiveWithIn.attrib order::SVG.NumberOptionalNumber.datatype kernelMatrix::string() (divisor::SVG.Number.datatype)? (bias::SVG.Number.datatype)? (targetX::SVG.Integer.datatype)? (targetY::SVG.Integer.datatype)? (edgeMode::("duplicate" | "wrap" | "none"))? (kernelUnitLength::SVG.NumberOptionalNumber.datatype)? (preserveAlpha::SVG.Boolean.datatype)?) ;
SVG.onload.attrib ::= (onload::SVG.Script.datatype)? ;
SVG.externalResourcesRequired.attrib ::= (externalResourcesRequired::SVG.Boolean.datatype)? ;
SVG.color-interpolation.attrib ::= (color-interpolation::("auto" | "sRGB" | "linearRGB" | "inherit"))? ;
SVG.stroke-linecap.attrib ::= (stroke-linecap::("butt" | "round" | "square" | "inherit"))? ;
SVG.filter ::= filter::(SVG.Description.class* (SVG.animate | SVG.set | SVG.FilterPrimitive.class)* SVG.Core.attrib SVG.Style.attrib SVG.Presentation.attrib SVG.XLink.attrib SVG.External.attrib (x::SVG.Coordinate.datatype)? (y::SVG.Coordinate.datatype)? (width::SVG.Length.datatype)? (height::SVG.Length.datatype)? (filterRes::SVG.NumberOptionalNumber.datatype)? (filterUnits::("userSpaceOnUse" | "objectBoundingBox"))? (primitiveUnits::("userSpaceOnUse" | "objectBoundingBox"))?) ;
SVG.vkern ::= vkern::(ε SVG.Core.attrib (u1::string())? (g1::string())? (u2::string())? (g2::string())? k::SVG.Number.datatype) ;
SVG.display.attrib ::= (display::("inline" | "block" | "list-item" | "run-in" | "compact" | "marker" | "table" | "inline-table" | "table-row-group" | "table-header-group" | "table-footer-group" | "table-row" | "table-column-group" | "table-column" | "table-cell" | "table-caption" | "none" | "inherit"))? ;
SVG.linearGradient ::= linearGradient::(SVG.Description.class* (SVG.stop | SVG.animate | SVG.set | SVG.animateTransform)* SVG.Core.attrib SVG.Style.attrib SVG.Color.attrib SVG.Gradient.attrib SVG.XLink.attrib SVG.External.attrib (x1::SVG.Coordinate.datatype)? (y1::SVG.Coordinate.datatype)? (x2::SVG.Coordinate.datatype)? (y2::SVG.Coordinate.datatype)? (gradientUnits::("userSpaceOnUse" | "objectBoundingBox"))? (gradientTransform::SVG.TransformList.datatype)? (spreadMethod::("pad" | "reflect" | "repeat"))?) ;
SVG.feComponentTransfer ::= feComponentTransfer::(SVG.feFuncR? SVG.feFuncG? SVG.feFuncB? SVG.feFuncA? SVG.Core.attrib SVG.FilterColor.attrib SVG.FilterPrimitiveWithIn.attrib) ;
SVG.line ::= line::(SVG.Description.class* SVG.Animation.class* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Marker.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.GraphicalEvents.attrib SVG.Cursor.attrib SVG.External.attrib (x1::SVG.Coordinate.datatype)? (y1::SVG.Coordinate.datatype)? (x2::SVG.Coordinate.datatype)? (y2::SVG.Coordinate.datatype)? (transform::SVG.TransformList.datatype)?) ;
SVG.feDistantLight ::= feDistantLight::((SVG.animate | SVG.set)* SVG.Core.attrib (azimuth::SVG.Number.datatype)? (elevation::SVG.Number.datatype)?) ;
SVG.Clip.attrib ::= (clip-path::SVG.ClipPathValue.datatype)? (clip-rule::SVG.ClipFillRule.datatype)? SVG.Clip.extra.attrib ;
 SVG.Clip.attrib ::= ε ;
SVG.textPath ::= textPath::((string() | SVG.tspan | SVG.tref | SVG.altGlyph | SVG.animate | SVG.set | SVG.animateColor | SVG.Description.class | SVG.Hyperlink.class)* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.TextContent.attrib SVG.Font.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.GraphicalEvents.attrib SVG.Cursor.attrib SVG.XLinkRequired.attrib SVG.External.attrib (startOffset::SVG.Length.datatype)? (textLength::SVG.Length.datatype)? (lengthAdjust::("spacing" | "spacingAndGlyphs"))? (method::("align" | "stretch"))? (spacing::("auto" | "exact"))?) ;
SVG.onfocusout.attrib ::= (onfocusout::SVG.Script.datatype)? ;
SVG.radialGradient ::= radialGradient::(SVG.Description.class* (SVG.stop | SVG.animate | SVG.set | SVG.animateTransform)* SVG.Core.attrib SVG.Style.attrib SVG.Color.attrib SVG.Gradient.attrib SVG.XLink.attrib SVG.External.attrib (cx::SVG.Coordinate.datatype)? (cy::SVG.Coordinate.datatype)? (r::SVG.Length.datatype)? (fx::SVG.Coordinate.datatype)? (fy::SVG.Coordinate.datatype)? (gradientUnits::("userSpaceOnUse" | "objectBoundingBox"))? (gradientTransform::SVG.TransformList.datatype)? (spreadMethod::("pad" | "reflect" | "repeat"))?) ;
SVG.altGlyphDef ::= altGlyphDef::((SVG.glyphRef+) | (SVG.altGlyphItem+) SVG.Core.attrib) ;
SVG.FilterColor.attrib ::= ε ;
 SVG.FilterColor.attrib ::= (color-interpolation-filters::("auto" | "sRGB" | "linearRGB" | "inherit"))? SVG.FilterColor.extra.attrib ;
SVG.mask ::= mask::((SVG.Description.class | SVG.Animation.class | SVG.Structure.class | SVG.Conditional.class | SVG.Image.class | SVG.Style.class | SVG.Shape.class | SVG.Text.class | SVG.Marker.class | SVG.Profile.class | SVG.Gradient.class | SVG.Pattern.class | SVG.Clip.class | SVG.Mask.class | SVG.Filter.class | SVG.Cursor.class | SVG.Hyperlink.class | SVG.View.class | SVG.Script.class | SVG.Font.class)* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Presentation.attrib SVG.External.attrib (x::SVG.Coordinate.datatype)? (y::SVG.Coordinate.datatype)? (width::SVG.Length.datatype)? (height::SVG.Length.datatype)? (maskUnits::("userSpaceOnUse" | "objectBoundingBox"))? (maskContentUnits::("userSpaceOnUse" | "objectBoundingBox"))?) ;
SVG.onrepeat.attrib ::= (onrepeat::SVG.Script.datatype)? ;
SVG.Presentation.attrib ::= SVG.Container.attrib SVG.Viewport.attrib SVG.Text.attrib SVG.TextContent.attrib SVG.Font.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Marker.attrib SVG.Profile.attrib SVG.Gradient.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.FilterColor.attrib SVG.Cursor.attrib (flood-color::SVG.SVGColor.datatype)? (flood-opacity::SVG.OpacityValue.datatype)? (lighting-color::SVG.SVGColor.datatype)? SVG.Presentation.extra.attrib ;
SVG.hkern ::= hkern::(ε SVG.Core.attrib (u1::string())? (g1::string())? (u2::string())? (g2::string())? k::SVG.Number.datatype) ;
SVG.definition-src ::= definition-src::(ε SVG.Core.attrib SVG.XLinkRequired.attrib) ;
SVG.FilterPrimitive.attrib ::= (x::SVG.Coordinate.datatype)? (y::SVG.Coordinate.datatype)? (width::SVG.Length.datatype)? (height::SVG.Length.datatype)? (result::string())? SVG.FilterPrimitive.extra.attrib ;
SVG.font-face-format ::= font-face-format::(ε SVG.Core.attrib (string::string())?) ;
SVG.rect ::= rect::(SVG.Description.class* SVG.Animation.class* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.GraphicalEvents.attrib SVG.Cursor.attrib SVG.External.attrib (x::SVG.Coordinate.datatype)? (y::SVG.Coordinate.datatype)? width::SVG.Length.datatype height::SVG.Length.datatype (rx::SVG.Length.datatype)? (ry::SVG.Length.datatype)? (transform::SVG.TransformList.datatype)?) ;
SVG.feGaussianBlur ::= feGaussianBlur::((SVG.animate | SVG.set)* SVG.Core.attrib SVG.FilterColor.attrib SVG.FilterPrimitiveWithIn.attrib (stdDeviation::SVG.NumberOptionalNumber.datatype)?) ;
SVG.stroke-dashoffset.attrib ::= (stroke-dashoffset::SVG.StrokeDashOffsetValue.datatype)? ;
SVG.Mask.attrib ::= ε ;
 SVG.Mask.attrib ::= (mask::SVG.MaskValue.datatype)? SVG.Mask.extra.attrib ;
SVG.AnimationValue.attrib ::= (calcMode::("discrete" | "linear" | "paced" | "spline"))? (values::string())? (keyTimes::string())? (keySplines::string())? (from::string())? (to::string())? (by::string())? SVG.AnimationValue.extra.attrib ;
SVG.cursor ::= cursor::(SVG.Description.class* SVG.Core.attrib SVG.Conditional.attrib SVG.XLinkRequired.attrib SVG.External.attrib (x::SVG.Coordinate.datatype)? (y::SVG.Coordinate.datatype)?) ;
SVG.g ::= g::((SVG.Description.class | SVG.Animation.class | SVG.Structure.class | SVG.Conditional.class | SVG.Image.class | SVG.Style.class | SVG.Shape.class | SVG.Text.class | SVG.Marker.class | SVG.Profile.class | SVG.Gradient.class | SVG.Pattern.class | SVG.Clip.class | SVG.Mask.class | SVG.Filter.class | SVG.Cursor.class | SVG.Hyperlink.class | SVG.View.class | SVG.Script.class | SVG.Font.class)* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Presentation.attrib SVG.GraphicalEvents.attrib SVG.External.attrib (transform::SVG.TransformList.datatype)?) ;
SVG.onactivate.attrib ::= (onactivate::SVG.Script.datatype)? ;
SVG.Conditional.attrib ::= (requiredFeatures::SVG.FeatureList.datatype)? (requiredExtensions::SVG.ExtensionList.datatype)? (systemLanguage::SVG.LanguageCodes.datatype)? SVG.Conditional.extra.attrib ;
 SVG.Conditional.attrib ::= ε ;
SVG.onclick.attrib ::= (onclick::SVG.Script.datatype)? ;
SVG.feSpecularLighting ::= feSpecularLighting::(SVG.feDistantLight | SVG.fePointLight | SVG.feSpotLight (SVG.animate | SVG.set | SVG.animateColor)* SVG.Core.attrib SVG.Style.attrib SVG.Color.attrib SVG.FilterColor.attrib SVG.FilterPrimitiveWithIn.attrib (lighting-color::SVG.SVGColor.datatype)? (surfaceScale::SVG.Number.datatype)? (specularConstant::SVG.Number.datatype)? (specularExponent::SVG.Number.datatype)? (kernelUnitLength::SVG.NumberOptionalNumber.datatype)?) ;
SVG.a ::= a::((string() | SVG.Description.class | SVG.Animation.class | SVG.Structure.class | SVG.Conditional.class | SVG.Image.class | SVG.Style.class | SVG.Shape.class | SVG.Text.class | SVG.Marker.class | SVG.Profile.class | SVG.Gradient.class | SVG.Pattern.class | SVG.Clip.class | SVG.Mask.class | SVG.Filter.class | SVG.Cursor.class | SVG.Hyperlink.class | SVG.View.class | SVG.Script.class | SVG.Font.class)* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Presentation.attrib SVG.GraphicalEvents.attrib SVG.XLinkReplace.attrib SVG.External.attrib (transform::SVG.TransformList.datatype)? (target::SVG.LinkTarget.datatype)?) ;
SVG.animate ::= animate::(SVG.Description.class* SVG.Core.attrib SVG.Conditional.attrib SVG.AnimationEvents.attrib SVG.External.attrib SVG.Animation.attrib SVG.AnimationAttribute.attrib SVG.AnimationTiming.attrib SVG.AnimationValue.attrib SVG.AnimationAddtion.attrib) ;
SVG.ellipse ::= ellipse::(SVG.Description.class* SVG.Animation.class* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.GraphicalEvents.attrib SVG.Cursor.attrib SVG.External.attrib (cx::SVG.Coordinate.datatype)? (cy::SVG.Coordinate.datatype)? rx::SVG.Length.datatype ry::SVG.Length.datatype (transform::SVG.TransformList.datatype)?) ;
SVG.feImage ::= feImage::((SVG.animate | SVG.set | SVG.animateTransform)* SVG.Core.attrib SVG.Style.attrib SVG.Presentation.attrib SVG.FilterPrimitive.attrib SVG.XLinkEmbed.attrib SVG.External.attrib (preserveAspectRatio::SVG.PreserveAspectRatioSpec.datatype)?) ;
SVG.glyphRef ::= glyphRef::(ε SVG.Core.attrib SVG.Style.attrib SVG.Font.attrib SVG.XLink.attrib (x::SVG.Coordinates.datatype)? (y::SVG.Coordinates.datatype)? (dx::SVG.Lengths.datatype)? (dy::SVG.Lengths.datatype)? (glyphRef::string())? (format::string())?) ;
SVG.image ::= image::(SVG.Description.class* SVG.Animation.class* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Viewport.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Profile.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.GraphicalEvents.attrib SVG.Cursor.attrib SVG.XLinkEmbed.attrib SVG.External.attrib (x::SVG.Coordinate.datatype)? (y::SVG.Coordinate.datatype)? width::SVG.Length.datatype height::SVG.Length.datatype (preserveAspectRatio::SVG.PreserveAspectRatioSpec.datatype)? (transform::SVG.TransformList.datatype)?) ;
SVG.Style.attrib ::= ε ;
 SVG.Style.attrib ::= (style::SVG.StyleSheet.datatype)? (class::SVG.ClassList.datatype)? SVG.Style.extra.attrib ;
SVG.XLink.attrib ::= ε ;
 SVG.XLink.attrib ::= (xlink:type::"simple")? (xlink:href::SVG.URI.datatype)? (xlink:role::SVG.URI.datatype)? (xlink:arcrole::SVG.URI.datatype)? (xlink:title::string())? (xlink:show::"other")? (xlink:actuate::"onLoad")? SVG.XLink.extra.attrib ;
SVG.title ::= title::(string() SVG.Core.attrib SVG.Style.attrib) ;
SVG.polyline ::= polyline::(SVG.Description.class* SVG.Animation.class* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Marker.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.GraphicalEvents.attrib SVG.Cursor.attrib SVG.External.attrib points::SVG.Points.datatype (transform::SVG.TransformList.datatype)?) ;
SVG.onmouseover.attrib ::= (onmouseover::SVG.Script.datatype)? ;
SVG.feBlend ::= feBlend::((SVG.animate | SVG.set)* SVG.Core.attrib SVG.FilterColor.attrib SVG.FilterPrimitiveWithIn.attrib in2::string() (mode::("normal" | "multiply" | "screen" | "darken" | "lighten"))?) ;
SVG.feMorphology ::= feMorphology::((SVG.animate | SVG.set)* SVG.Core.attrib SVG.FilterColor.attrib SVG.FilterPrimitiveWithIn.attrib (operator::("erode" | "dilate"))? (radius::SVG.NumberOptionalNumber.datatype)?) ;
SVG.marker ::= marker::((SVG.Description.class | SVG.Animation.class | SVG.Structure.class | SVG.Conditional.class | SVG.Image.class | SVG.Style.class | SVG.Shape.class | SVG.Text.class | SVG.Marker.class | SVG.Profile.class | SVG.Gradient.class | SVG.Pattern.class | SVG.Clip.class | SVG.Mask.class | SVG.Filter.class | SVG.Cursor.class | SVG.Hyperlink.class | SVG.View.class | SVG.Script.class | SVG.Font.class)* SVG.Core.attrib SVG.Style.attrib SVG.Presentation.attrib SVG.External.attrib (refX::SVG.Coordinate.datatype)? (refY::SVG.Coordinate.datatype)? (markerUnits::("strokeWidth" | "userSpaceOnUse"))? (markerWidth::SVG.Length.datatype)? (markerHeight::SVG.Length.datatype)? (orient::string())? (viewBox::SVG.ViewBoxSpec.datatype)? (preserveAspectRatio::SVG.PreserveAspectRatioSpec.datatype)?) ;
SVG.altGlyphItem ::= altGlyphItem::(SVG.glyphRef+ SVG.Core.attrib) ;
SVG.lang.attrib ::= (xml:lang::SVG.LanguageCode.datatype)? ;
SVG.color.attrib ::= (color::SVG.Color.datatype)? ;
SVG.switch ::= switch::(SVG.Description.class* (SVG.svg | SVG.g | SVG.use | SVG.text | SVG.text | SVG.Animation.class | SVG.Conditional.class | SVG.Image.class | SVG.Shape.class | SVG.Hyperlink.class | SVG.Extensibility.class)* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Presentation.attrib SVG.GraphicalEvents.attrib SVG.External.attrib (transform::SVG.TransformList.datatype)?) ;
SVG.fill-rule.attrib ::= (fill-rule::SVG.ClipFillRule.datatype)? ;
SVG.feTurbulence ::= feTurbulence::((SVG.animate | SVG.set)* SVG.Core.attrib SVG.FilterColor.attrib SVG.FilterPrimitive.attrib (baseFrequency::SVG.NumberOptionalNumber.datatype)? (numOctaves::SVG.Integer.datatype)? (seed::SVG.Number.datatype)? (stitchTiles::("stitch" | "noStitch"))? (type::("fractalNoise" | "turbulence"))?) ;
SVG.space.attrib ::= (xml:space::("default" | "preserve"))? ;
SVG.onresize.attrib ::= (onresize::SVG.Script.datatype)? ;
SVG.stroke-opacity.attrib ::= (stroke-opacity::SVG.OpacityValue.datatype)? ;
SVG.stroke.attrib ::= (stroke::SVG.Paint.datatype)? ;
SVG.color-profile ::= color-profile::(SVG.Description.class* SVG.Core.attrib SVG.XLink.attrib (local::string())? name::string() (rendering-intent::("auto" | "perceptual" | "relative-colorimetric" | "saturation" | "absolute-colorimetric"))?) ;
SVG.view ::= view::(SVG.Description.class* SVG.Core.attrib SVG.External.attrib (viewBox::SVG.ViewBoxSpec.datatype)? (preserveAspectRatio::SVG.PreserveAspectRatioSpec.datatype)? (zoomAndPan::("disable" | "magnify"))? (viewTarget::string())?) ;
SVG.feMerge ::= feMerge::(SVG.feMergeNode* SVG.Core.attrib SVG.FilterColor.attrib SVG.FilterPrimitive.attrib) ;
SVG.tref ::= tref::((SVG.animate | SVG.set | SVG.animateColor | SVG.Description.class)* SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.TextContent.attrib SVG.Font.attrib SVG.Paint.attrib SVG.Color.attrib SVG.Opacity.attrib SVG.Graphics.attrib SVG.Clip.attrib SVG.Mask.attrib SVG.Filter.attrib SVG.GraphicalEvents.attrib SVG.Cursor.attrib SVG.XLinkRequired.attrib SVG.External.attrib (x::SVG.Coordinates.datatype)? (y::SVG.Coordinates.datatype)? (dx::SVG.Lengths.datatype)? (dy::SVG.Lengths.datatype)? (rotate::SVG.Numbers.datatype)? (textLength::SVG.Length.datatype)? (lengthAdjust::("spacing" | "spacingAndGlyphs"))?) ;
SVG.foreignObject ::= foreignObject::(SVG.foreignObject.content SVG.Core.attrib SVG.Conditional.attrib SVG.Style.attrib SVG.Presentation.attrib SVG.GraphicalEvents.attrib SVG.External.attrib (x::SVG.Coordinate.datatype)? (y::SVG.Coordinate.datatype)? width::SVG.Length.datatype height::SVG.Length.datatype (transform::SVG.TransformList.datatype)?) ;
SVG.font-face-src ::= font-face-src::((SVG.font-face-uri | SVG.font-face-name)+ SVG.Core.attrib) ;
SVG.FilterPrimitiveWithIn.attrib ::= SVG.FilterPrimitive.attrib (in::string())? SVG.FilterPrimitiveWithIn.extra.attrib ;
SVG.shape-rendering.attrib ::= (shape-rendering::("auto" | "optimizeSpeed" | "crispEdges" | "geometricPrecision" | "inherit"))? ;
SVG.glyph ::= glyph::((SVG.Description.class | SVG.Animation.class | SVG.Structure.class | SVG.Conditional.class | SVG.Image.class | SVG.Style.class | SVG.Shape.class | SVG.Text.class | SVG.Marker.class | SVG.Profile.class | SVG.Gradient.class | SVG.Pattern.class | SVG.Clip.class | SVG.Mask.class | SVG.Filter.class | SVG.Cursor.class | SVG.Hyperlink.class | SVG.View.class | SVG.Script.class | SVG.Font.class)* SVG.Core.attrib SVG.Style.attrib SVG.Presentation.attrib (unicode::string())? (glyph-name::string())? (d::SVG.PathData.datatype)? (orientation::string())? (arabic-form::string())? (lang::SVG.LanguageCodes.datatype)? (horiz-adv-x::SVG.Number.datatype)? (vert-origin-x::SVG.Number.datatype)? (vert-origin-y::SVG.Number.datatype)? (vert-adv-y::SVG.Number.datatype)?) ;
--------------------markup::svg-palies.bgf--------------------
Tref ::= xlinkHref::TextElement ;
AbsoluteCoord ::= x::Double y::Double ;
Tspan ::= content::String ;
Rotate ::= angle::Double cx::Double cy::Double ;
Image ::= (referee::ReferencedFile)+ ;
Marker ::= markerUnits::String refX::Double refY::Double markerWidth::Double markerHeight::Double orient::String (drawing::Element)+ ;
Polygon ::= (waypoints::Point)+ markerEnd::String markerStart::String ;
Symbol ::= (groupContent::Element)+ ;
Line ::= between::Point markerEnd::String markerStart::String ;
Visibility ::= visible::Boolean ;
Translate ::= tx::Double ty::Double ;
Defs ::= (groupContent::Element)+ ;
Text ::= lengthAdjust::String content::String ;
Scale ::= sx::Double sy::Double ;
RelativeCoord ::= x::Double y::Double ;
FontWeight ::= bold::Boolean ;
Use ::= (use::Element)+ ;
G ::= name::String ;
Dimension ::= width::Double height::Double ;
Path ::= pathLength::Double d::String markerEnd::String markerStart::String ;
Rect ::= rx::Double ry::Double ;
Svg ::= (owner_SVG::SvgFile)+ (children::Element)+ namespace::String version::String baseProfile::String ;
FontStyle ::= italic::Boolean ;
SvgFile ::= tag::Svg (elements::Element)+ ;
Polyline ::= (waypoints::Point)+ strokeDashArray::String markerEnd::String markerStart::String ;
--------------------markup::uiml.bgf--------------------
Call ::= name::String (params::Parameter)+ ;
WhereKind ::= (first::ε) | (last::ε) | (before::ε) | (after::ε) ;
Event ::= class::String (parts::Part)+ ;
EqualToOperation ::= op::Operation ;
Property ::= name::String how::HowKind export::ExportKind (values::String)+ (parts::Part)+ (events::Event)+ source::Source (constants::Constant)+ (properties::Property)+ (references::Reference)+ (calls::Call)+ (iterators::Iterator)+ ;
EqualToConstant ::= constant::Constant ;
ContentTemplate ::= content::Content ;
Behavior ::= id::String how::HowKind export::ExportKind source::Source (rules::Rule)+ ;
MetaData ::= name::String content::String ;
StructureTemplate ::= structure::Structure ;
Script ::= id::String type::String how::HowKind export::ExportKind value::String source::String ;
WhenFalse ::= (properties::Property)+ (calls::Call)+ restructure::Restructure op::Operation equal::Equal event::Event ;
EqualCondition ::= equal::Equal ;
HowKind ::= (append::ε) | (cascade::ε) | (replace::ε) | (union::ε) | (delete::ε) ;
ConstantTemplate ::= constant::Constant ;
EqualToReference ::= reference::Reference ;
TextIterator ::= value::Integer ;
Content ::= id::String how::HowKind export::ExportKind source::Source (constants::Constant)+ ;
LogicTemplate ::= logic::Logic ;
PresentationTemplate ::= presentation::Presentation ;
Listener ::= class::String attacher::String ;
Structure ::= id::String how::HowKind export::ExportKind source::Source (parts::Part)+ ;
ConstantIterator ::= constant::Constant ;
EventParameter ::= event::Event ;
CallParameter ::= call::Call ;
ByDefault ::= (properties::Property)+ (calls::Call)+ restructure::Restructure op::Operation equal::Equal event::Event ;
Operation ::= name::String (constants::Constant)+ (properties::Property)+ (references::Reference)+ (calls::Call)+ (ops::Operation)+ (events::Event)+ ;
LocalSource ::= source::ExtensibleElement ;
ConstantParameter ::= constant::Constant ;
MapsTypeKind ::= (attribute::ε) | (getMethod::ε) | (setMethod::ε) | (method::ε) ;
DMethod ::= id::String how::HowKind export::ExportKind mapsTo::String returnType::String source::Source (dParams::DParam)+ script::Script ;
Constant ::= id::String how::HowKind export::ExportKind model::String value::String source::Source (constants::Constant)+ ;
Branch ::= WhenTrue ;
 Branch ::= WhenFalse ;
 Branch ::= ByDefault ;
 Branch ::= (properties::Property)+ (calls::Call)+ restructure::Restructure op::Operation equal::Equal event::Event ;
EventCondition ::= event::Event ;
ReferenceParameter ::= reference::Reference ;
Logic ::= id::String how::HowKind export::ExportKind source::Source (dComponents::DComponent)+ ;
IteratorParameter ::= iterator::Iterator ;
Repeat ::= iterator::Iterator (parts::Part)+ ;
Presentation ::= id::String how::HowKind export::ExportKind base::String source::Source (dClasses::DClass)+ ;
DProperty ::= id::String mapsType::MapsTypeKind mapsTo::String returnType::String (dMethods::DMethod)+ (dParams::DParam)+ ;
RuleTemplate ::= rule::Rule ;
PropertyParameter ::= property::Property ;
DComponentTemplate ::= dComponent::DComponent ;
InterfaceTemplate ::= interface::Interface ;
UIML ::= head::Header (templates::Template)+ (interfaces::Interface)+ (peers::Peer)+ ;
DClassTemplate ::= dClass::DClass ;
PartTemplate ::= part::Part ;
Header ::= (metas::MetaData)+ ;
StyleTemplate ::= style::Style ;
Reference ::= constant::Constant ;
DParam ::= id::String type::String value::String ;
EqualToProperty ::= property::Property ;
OperationParameter ::= op::Operation ;
RemoteSource ::= location::String ;
PeerTemplate ::= peer::Peer ;
Rule ::= id::String how::HowKind export::ExportKind source::Source condition::Condition action::Action ;
RestructureTemplate ::= restructure::Restructure ;
OpCondition ::= op::Operation ;
Interface ::= id::String how::HowKind export::ExportKind source::Source (structure::Structure)+ (style::Style)+ (content::Content)+ (behavior::Behavior)+ ;
DComponent ::= id::String how::HowKind export::ExportKind mapsTo::String location::String source::Source (dMethods::DMethod)+ ;
DClass ::= id::String how::HowKind export::ExportKind mapsTo::String mapsType::String source::Source (dMethods::DMethod)+ (dProperties::DProperty)+ (events::Event)+ (listeners::Listener)+ ;
Part ::= id::String how::HowKind export::ExportKind class::String wherePart::String source::Source style::Style content::Content behavior::Behavior (parts::Part)+ (repeats::Repeat)+ ;
Style ::= id::String how::HowKind export::ExportKind source::Source (properties::Property)+ ;
PropertyTemplate ::= property::Property ;
BehaviorTemplate ::= behavior::Behavior ;
CallIterator ::= call::Call ;
UsedInTagKind ::= (event::ε) | (listener::ε) | (part::ε) ;
Action_2 ::= whenTrue::WhenTrue whenFalse::WhenFalse byDefault::ByDefault ;
ExportKind ::= (hidden::ε) | (optional::ε) | (required::ε) ;
WhenTrue ::= (properties::Property)+ (calls::Call)+ restructure::Restructure op::Operation equal::Equal event::Event ;
Action_1 ::= event::Event (properties::Property)+ (calls::Call)+ (restructures::Restructure)+ ;
ScriptTemplate ::= script::Script ;
PropertyIterator ::= property::Property ;
Peer ::= id::String how::HowKind export::ExportKind source::Source (presentations::Presentation)+ (logics::Logic)+ ;
Restructure ::= how::HowKind atPart::Part wherePart::Part source::Source template::Template ;
--------------------markup::wiki-simple.bgf--------------------
WikiLink ::= [barred] "[[" destination::PageName "|" description::(MWWord+) "]]" ;
 WikiLink ::= [simple] "[[" destination::PageName "]]" ;
--------------------markup::wiki-table.bgf--------------------
Table ::= border::Integer style::String class::String caption::Caption (rows::Row)+ ;
Row ::= (cells::Cell)+ ;
Caption ::= content::String ;
Cell ::= isHeading::Boolean align::String style::String content::String ;
--------------------fl::antlr.bgf--------------------
apply ::= i::ID (a::atom)+ ;
function ::= n::ID (a::ID)+ "=" e::expr NEWLINE+ ;
expr ::= (b::binary) | (a::apply) | (i::ifThenElse) ;
program ::= (f::function)+ ;
ifThenElse ::= "if" c::expr "then" e1::expr "else" e2::expr ;
atom ::= ID | INT | ("(" e::expr ")") ;
binary ::= l::atom (o::ops r::atom)* ;
--------------------fl::ecore.bgf--------------------
ApplyExp ::= function::Function (argument::Exp)+ ;
LiteralExp ::= value::integer() ;
MinusExp ::= left::Exp right::Exp ;
Argument ::= name::string() ;
IfThenElseExp ::= if::Exp then::Exp else::Exp ;
EqualExp ::= left::Exp right::Exp ;
Function ::= name::string() (argument::Argument)+ definition::Exp ;
Program ::= (function::Function)+ ;
PlusExp ::= left::Exp right::Exp ;
ArgumentExp ::= argument::Argument ;
--------------------fl::emf.bgf--------------------
Literal ::= info::integer() ;
ProgramType ::= (function::Function)+ ;
Apply ::= name::string() (arg::Expr)+ ;
Argument ::= name::string() ;
Function ::= name::string() (arg::string())+ rhs::Expr ;
IfThenElse ::= ifExpr::Expr thenExpr::Expr elseExpr::Expr ;
Ops ::= (Equal::ε) | (Plus::ε) | (Minus::ε) ;
Binary ::= ops::Ops left::Expr right::Expr ;
--------------------fl::jaxb.bgf--------------------
Literal ::= Info::integer() ;
Apply ::= Name::string() Arg::(Expr*) ;
Argument ::= Name::string() ;
Function ::= Name::string() Arg::(string()*) Rhs::Expr ;
Program ::= Function::(Function*) ;
IfThenElse ::= IfExpr::Expr ThenExpr::Expr ElseExpr::Expr ;
Ops ::= (EQUAL::ε) | (PLUS::ε) | (MINUS::ε) ;
Binary ::= Ops::Ops Left::Expr Right::Expr ;
--------------------fl::om.bgf--------------------
Literal ::= info::integer() ;
Apply ::= name::string() args::(Expr*) ;
Argument ::= name::string() ;
Function ::= name::string() args::(string()*) rhs::Expr ;
Program ::= functions::(Function*) ;
IfThenElse ::= ifExpr::Expr thenExpr::Expr elseExpr::Expr ;
Ops ::= (Equal::ε) | (Plus::ε) | (Minus::ε) ;
Binary ::= ops::Ops left::Expr right::Expr ;
--------------------fl::rascal-a.bgf--------------------
FLPrg ::= [prg] fs::(FLFun*) ;
FLExpr ::= (binary::(e1::FLExpr op::FLOp e2::FLExpr)) | (apply::(f::string() vargs::(FLExpr*))) | (ifThenElse::(c::FLExpr t::FLExpr e::FLExpr)) | (argument::(a::string())) | (literal::(i::integer())) ;
FLFun ::= [fun] f::string() args::(str*) body::FLExpr ;
FLOp ::= (minus::ε) | (plus::ε) | (equal::ε) ;
--------------------fl::rascal-c.bgf--------------------
Function ::= [fun] f::Name args::(Name+) "=" body::Expr ;
Expr ::= [ifThenElse] "if" cond::Expr "then" thenbranch::Expr "else" elsebranch::Expr ;
 Expr ::= "(" e::Expr ")" ;
 Expr ::= [literal] i::Int ;
 Expr ::= [argument] a::Name ;
 Expr ::= [binary] lexpr::Expr op::Ops rexpr::Expr ;
 Expr ::= [apply] f::Name vargs::(Expr+) ;
Program ::= [prg] functions::({Function "\n"}+) ;
--------------------fl::xsd.bgf--------------------
Literal ::= info::integer() ;
Apply ::= name::string() (arg::Expr)+ ;
Argument ::= name::string() ;
Function ::= name::string() (arg::string())+ rhs::Expr ;
Program ::= (function::Function)+ ;
IfThenElse ::= ifExpr::Expr thenExpr::Expr elseExpr::Expr ;
Ops ::= (Equal::ε) | (Plus::ε) | (Minus::ε) ;
Binary ::= ops::Ops left::Expr right::Expr ;
--------------------metasyntax::ebnf-bgf.bgf--------------------
selectable-expression ::= selector::string() "::" expression ;
--------------------metasyntax::relaxng.bgf--------------------
except-name-class ::= other (except::open-name-classes)? ;
define-element ::= define::(name::string() combine-att common-atts open-patterns) ;
name-class ::= (name::(common-atts string())) | (anyName::(common-atts except-name-class)) | (nsName::(common-atts except-name-class)) | (choice::(common-atts open-name-classes)) ;
common-atts ::= (ns::string())? (datatypeLibrary::string())? α* ;
include-content ::= other (start-element | define-element | (div::(common-atts include-content)))* ;
combine-att ::= (combine::("choice" | "interleave"))? ;
grammar-content ::= other (start-element | define-element | (div::(common-atts grammar-content)) | (include::(href::string() common-atts include-content)))* ;
start-element ::= start::(combine-att common-atts open-pattern) ;
pattern ::= (element::((name::string()) | open-name-class common-atts open-patterns)) | (attribute::(common-atts (name::string()) | open-name-class other pattern?)) | (group::(common-atts open-patterns)) | (interleave::(common-atts open-patterns)) | (choice::(common-atts open-patterns)) | (optional::(common-atts open-patterns)) | (zeroOrMore::(common-atts open-patterns)) | (oneOrMore::(common-atts open-patterns)) | (list::(common-atts open-patterns)) | (mixed::(common-atts open-patterns)) | (ref::(name::string() common-atts other)) | (parentRef::(name::string() common-atts other)) | (empty::(common-atts other)) | (text::(common-atts other)) | (value::((type::string())? common-atts string())) | (data::(type::string() common-atts other (param::(name::string() common-atts string()))* (except::(common-atts open-patterns))?)) | (notAllowed::(common-atts other)) | (externalRef::(href::string() common-atts other)) | (grammar::(common-atts grammar-content)) ;
--------------------metasyntax::xsd-guyard.bgf--------------------
Group ::= (references::GroupRef)+ ;
ApplicationInfo ::= text::String ;
ComplexTypeSimpleContent ::= base::SimpleType ;
Attribute ::= use::AttributeUseType (references::AttributeRef)+ ;
Element ::= (references::ElementRef)+ ;
Documentation ::= text::String ;
XSchema ::= namespace::String (contents::XSchemaContentElement)+ ;
AttributeRef ::= referencedAttribute::Attribute ;
ElementRef ::= referencedElement::Element ;
GroupRef ::= referencedGroup::Group ;
ComplexTypeComplexContent ::= base::ComplexType ;
AttributeGroupRef ::= referencedAttributeGroup::AttributeGroup ;
Annotation ::= (documentations::Documentation)+ (applicationInfos::ApplicationInfo)+ annotedElement::AnnotedElement ;
SimpleType ::= (extensions::ComplexTypeSimpleContent)+ ;
ComplexType ::= ComplexTypeSimpleContent ;
 ComplexType ::= ComplexTypeComplexContent ;
 ComplexType ::= (extensions::ComplexTypeComplexContent)+ content::AbstractContent (attributes::AbstractAttributeGroupContent)+ ;
AttributeUseType ::= (null::ε) | (optional::ε) | (prohibited::ε) | (required::ε) ;
AttributeGroup ::= (contents::AbstractAttributeGroupContent)+ (references::AttributeGroupRef)+ ;
Sequence ::= (contents::AbstractContent)+ ;
Choice ::= (contents::AbstractContent)+ ;
All ::= (contents::AbstractContent)+ ;
--------------------metasyntax::xsd-tennison.bgf--------------------
element ::= annotated fixedOrDefault ((nillable::("true" | "false")) | (block::blockSet))* ε | (type::string()) | localSimpleType | localComplexType identityConstraint* ;
complexRestriction ::= restriction::(annotated base::string() typeDefParticle? attrDecls) ;
field ::= field::(annotated xpath::string()) ;
rangeFacet ::= facet value::(integer() | string() | "UNKNOWN data") ;
attributeType ::= ε | (type::string()) | localSimpleType ;
localAttribute ::= attribute::(annotated (use::("optional" | "prohibited" | "required"))? fixedOrDefault (ref::string()) | (name::string() (form::formChoice)? attributeType)) ;
complexExtension ::= extension::(extensionType typeDefParticle? attrDecls) ;
minExclusive ::= minExclusive::rangeFacet ;
any ::= any::(wildcard occurs) ;
maxLength ::= maxLength::numFacet ;
maxInclusive ::= maxInclusive::rangeFacet ;
simpleContent ::= simpleContent::(annotated simpleRestriction | simpleExtension) ;
length ::= length::numFacet ;
selector ::= selector::(annotated xpath::string()) ;
key ::= key::keybase ;
whiteSpace ::= whiteSpace::(facet value::("preserve" | "replace" | "collapse")) ;
namedAttributeGroup ::= attributeGroup::(annotated name::string() attrDecls) ;
topLevelComplexType ::= complexType::(complexType name::string() ((abstract::("true" | "false")) | (block::derivationSet) | (final::derivationSet))*) ;
wildcard ::= annotated ((namespace::("##any" | "##other" | ((string() | "##targetNamespace" | "##local")*))) | (processContents::("lax" | "skip" | "strict")))* ;
minLength ::= minLength::numFacet ;
localSimpleType ::= simpleType::simpleType ;
importRequiredNamespace ::= import::(import namespace::string()) ;
keyref ::= keyref::(keybase refer::string()) ;
unique ::= unique::keybase ;
numFacet ::= facet value::integer() ;
attributeGroupRef ::= attributeGroup::(annotated ref::string()) ;
union ::= union::(annotated (memberTypes::(string()+) localSimpleType*) | ((memberTypes::ε)? localSimpleType+)) ;
appinfo ::= appinfo::((source::string())? appinfoContent) ;
topLevelElement ::= element::(element name::string() ((substitutionGroup::string()) | (abstract::("true" | "false")) | (final::derivationSet))*) ;
totalDigits ::= totalDigits::(facet value::integer()) ;
fixedOrDefault ::= ε | (fixed::string()) | (default::string()) ;
enumeration ::= enumeration::noFixedFacet ;
namedGroup ::= group::(annotated name::string() (all::allModel) | (choice::simpleExplicitGroup) | (sequence::simpleExplicitGroup)) ;
noFixedFacet ::= annotated value::string() ;
sequence ::= sequence::explicitGroup ;
complexTypeModel ::= simpleContent | ((mixed::("true" | "false"))? complexContent | (typeDefParticle? attrDecls)) ;
documentation ::= documentation::(((source::string()) | (xml:lang::string()))* documentationContent) ;
minInclusive ::= minInclusive::rangeFacet ;
simpleRestriction ::= restriction::(annotated simpleRestrictionModel attrDecls) ;
facet ::= annotated (fixed::("true" | "false"))? ;
importOptionalNamespace ::= import::(import (namespace::string())?) ;
keybase ::= annotated name::string() selector field+ ;
annotation ::= annotation::(openAttrs (id::string())? (documentation | appinfo)*) ;
redefine ::= redefine::(openAttrs (id::string())? schemaLocation::string() (annotation | redefinable)*) ;
simpleExtension ::= extension::(extensionType attrDecls) ;
topLevelAttribute ::= attribute::(annotated name::string() fixedOrDefault attributeType) ;
whiteSpaceCollapse ::= whiteSpace::(facet value::"collapse") ;
complexContent ::= complexContent::(annotated (mixed::("true" | "false"))? complexRestriction | complexExtension) ;
include ::= include::(annotated schemaLocation::string()) ;
whiteSpaceReplaceOrCollapse ::= whiteSpace::(facet value::("replace" | "collapse")) ;
import ::= annotated (schemaLocation::string())? ;
choice ::= choice::explicitGroup ;
all ::= all::(allModel ((minOccurs::("0" | "1")) | (maxOccurs::"1"))*) ;
localComplexType ::= complexType::complexType ;
list ::= list::(annotated localSimpleType | (itemType::string())) ;
topLevelSimpleType ::= simpleType::(simpleType name::string() (final::simpleDerivationSet)?) ;
maxExclusive ::= maxExclusive::rangeFacet ;
extensionType ::= annotated base::string() ;
annotated ::= openAttrs (id::string())? annotation? ;
groupRef ::= group::(annotated occurs ref::string()) ;
localElement ::= element::(occurs (ref::string()) | (element name::string() (form::formChoice)?)) ;
pattern ::= pattern::noFixedFacet ;
anyAttribute ::= anyAttribute::wildcard ;
simpleRestrictionModel ::= (base::"xs:anySimpleType" rangeFacets digitFacets lengthFacets whiteSpace? enumeration* pattern*) | (base::"xs:string" lengthFacets whiteSpace? enumeration* pattern*) | (base::"xs:normalizedString" lengthFacets whiteSpaceReplaceOrCollapse? enumeration* pattern*) | (base::("xs:token" | "xs:language" | "xs:Name" | "xs:NCName" | "xs:ID" | "xs:IDREF" | "xs:IDREFS" | "xs:NMTOKEN" | "xs:NMTOKENS" | "xs:ENTITY" | "xs:ENTITIES" | "xs:hexBinary" | "xs:base64Binary" | "xs:anyURI" | "xs:QName" | "xs:NOTATION") lengthFacets commonFacets) | (base::"xs:boolean" whiteSpaceCollapse? pattern*) | (base::("xs:decimal" | "xs:integer" | "xs:nonPositiveInteger" | "xs:nonNegativeInteger" | "xs:positiveInteger" | "xs:negativeInteger" | "xs:unsignedLong" | "xs:unsignedInt" | "xs:unsignedShort" | "xs:unsignedByte" | "xs:long" | "xs:int" | "xs:short" | "xs:byte") digitFacets rangeFacets commonFacets) | (base::("xs:float" | "xs:double" | "xs:duration" | "xs:dateTime" | "xs:time" | "xs:date" | "xs:gYearMonth" | "xs:gYear" | "xs:gMonthDay" | "xs:gMonth" | "xs:gDay") rangeFacets commonFacets) | ((base::string()) | localSimpleType rangeFacets digitFacets lengthFacets whiteSpace? enumeration* pattern*) ;
fractionDigits ::= fractionDigits::numFacet ;
allModel ::= annotated (element::(((minOccurs::("0" | "1")) | (maxOccurs::("0" | "1")))* (ref::string()) | (element name::string() (form::formChoice)?)))* ;
occurs ::= ((minOccurs::integer()) | (maxOccurs::allNNI))* ;
notation ::= notation::(annotated name::string() public::string() (system::string())?) ;
--------------------metasyntax::box-rascal.bgf--------------------
BoxOperator ::= "HOV" options::(SpaceOption*) ;
 BoxOperator ::= "WD" ;
 BoxOperator ::= "A" alignments::AlignmentOptions options::(SpaceOption*) ;
 BoxOperator ::= "HV" options::(SpaceOption*) ;
 BoxOperator ::= "R" ;
 BoxOperator ::= "H" options::(SpaceOption*) ;
 BoxOperator ::= "I" options::(SpaceOption*) ;
 BoxOperator ::= "V" options::(SpaceOption*) ;
Boxx ::= "REF" "[" StrCon "," Boxx "]" ;
 Boxx ::= "LBL" "[" StrCon "," Boxx "]" ;
 Boxx ::= operator::BoxOperator "[" list::(Boxx*) "]" ;
 Boxx ::= StrCon ;
 Boxx ::= "CNT" "[" StrCon "," StrCon "]" ;
 Boxx ::= operator::FontOperator "[" list::(Boxx*) "]" ;
AlignmentOption ::= "r" options::(SpaceOption*) ;
 AlignmentOption ::= "l" options::(SpaceOption*) ;
 AlignmentOption ::= "c" options::(SpaceOption*) ;
--------------------metasyntax::sdf-rascal.bgf--------------------
ModuleName ::= [Parameterized] id::ModuleId "[" actuals::Syms "]" ;
 ModuleName ::= [Unparameterized] ε ;
SDF ::= [Definition] "definition" def::Definition ;
Lookahead ::= [Class] class::Class ;
 Lookahead ::= [Seq] class::Class "." las::Lookaheads ;
--------------------tescol::00000.bgf--------------------
constdec ::= CONST id1::CONSTID COLON t1::type ASSIGN a1::arithexp SEMI ;
assignment ::= id1::ID ASSIGN a1::arithexp SEMI ;
parexp ::= literal | (id2::CONSTID) | (id1::ID) | (LPAR arithexp RPAR) ;
procdec ::= PROC id1::ID LPAR p1::paralist RPAR COLON t1::type ASSIGN s1::statement ;
vardec ::= VAR id1::ID COLON t1::type SEMI ;
parameter ::= id1::ID COLON type ;
loop ::= WHILE a1::arithexp DO s1::statement ;
program ::= TROLLEY n1::CONSTID CONTAINS d1::(declaration*) CHECKOUT s1::statement DONE SEMI ;
cond ::= IF a1::arithexp THEN s1::statement ELSE s2::statement ;
connexp ::= c1::compexp (co1::compoperator c2::compexp)* ;
--------------------tescol::00010.bgf--------------------
parameter ::= i::VAR_ID COLON t::type (COMMA parameter)* ;
condExpr ::= testPart e1::arithmeticExpr COLON e2::arithmeticExpr ;
loop ::= WHILE LPAR b::booleanExpr RPAR DO s::stat ;
cond ::= IF LPAR b::booleanExpr RPAR THEN ts::stat (ELSE es::stat)? ;
--------------------tescol::00011.bgf--------------------
expression ::= atom (operator expression) | (MIXFIX l::expression COLON r::expression) | (OPARAN functionparamlist CPARAN) | ε ;
ifstatement ::= IF expression THEN s1::statement (ELSE s2::statement) | ε ;
--------------------tescol::00101.bgf--------------------
if_statement ::= IF expr THEN a::statement ELSE b::statement ;
boolean_OR ::= a::boolean_AND (OR b::boolean_AND)* ;
proc_call ::= id OPENPAR (a::expr (COMMA b::expr)*)? CLOSEPAR ;
arith_expo ::= a::arith_atom (EXPONENTIAL b::arith_atom)* ;
expr ::= a::boolean_expr (MIXFIX b::expr COLON c::expr)? ;
arith_addsub ::= a::arith_muldiv (ADDITION | SUBTRACTION b::arith_muldiv)* ;
arith_muldiv ::= a::arith_expo (MULTIPLICATION | DIVISION b::arith_expo)* ;
boolean_predicate ::= a::arith_expr (relationals b::arith_expr)? ;
boolean_AND ::= a::boolean_predicate (AND b::boolean_predicate)* ;
--------------------tescol::00110.bgf--------------------
procedureApplication ::= VAR_ID LEFT_PAREN p::procedureParams RIGHT_PAREN ;
term ::= (LEFT_PAREN expression RIGHT_PAREN) | procedureApplication | (v2::VAR_ID) | CONST_ID | INTEGER | DOUBLE ;
ifStatement ::= IF expression THEN s1::statement ELSE s2::statement ;
--------------------tescol::00111.bgf--------------------
parameterList ::= firstID::identifier COLON firstType::type (COMMA followID::identifier COLON followType::type)* ;
--------------------tescol::01000.bgf--------------------
param ::= (l::id COL ltype::type (COMMA r::id COL rtype::type)*)? ;
--------------------tescol::01001.bgf--------------------
p_id ::= idname::(VAR_ID | CONST_ID) ;
v_id ::= idname::(VAR_ID | CONST_ID) ;
--------------------tescol::01100.bgf--------------------
procdec ::= PROCEDURE id::identifier LEFTPARENTHESIS (RIGHTPARENTHESIS COLON type DEFINE statements) | (ids::identifier COLON type (COMA ids::identifier COLON type)* RIGHTPARENTHESIS COLON type DEFINE statements) ;
condExp ::= disjunct (QUESTIONMARK exp1::condExp COLON exp2::condExp) | ε ;
comparison ::= (a2::addition booleanSymbols a1::addition) | addition ;
cond ::= IF expression THEN dothen::statements ELSE doelse::statements ;
--------------------tescol::01110.bgf--------------------
constDec ::= CONST name::CID COLON t::type COLON_EQUALS c::mixFix SEMI ;
procDec ::= PROC name::ID LPAREN (a::ID COLON a_t::type (COMMA b::ID COLON b_t::type)*)? RPAREN COLON r_t::type COLON_EQUALS c::statement ;
varDec ::= VAR name::ID COLON t::type SEMI ;
mixFix ::= (a::conjDisjunExpr QUESTION b::conjDisjunExpr COLON c::conjDisjunExpr) | conjDisjunExpr ;
loopStat ::= WHILE a::mixFix DO b::statement ;
procCall ::= (name::ID) | (name::CID) LPAREN (a::mixFix (COMMA b::mixFix)*)? RPAREN ;
ifStat ::= (IF a::mixFix THEN b::statement ELSE c::statement) | (IF a::mixFix THEN b::statement) ;
--------------------tescol::01111.bgf--------------------
constDec ::= c::CONSTID COLON number DEFINEDAS arithmeticExpression ;
procDec ::= p::VARANDPROCID OPAR paramList? CPAR COLON number DEFINEDAS stat ;
varDec ::= v::VARANDPROCID COLON number ;
--------------------tescol::10000.bgf--------------------
assign ::= a::(CID | ID) COLON_EQUALS condExpr ;
decl ::= (VAR ID COLON INT | DOUBLE SEMI NEWLINE*) | (CONST CID COLON INT | DOUBLE COLON_EQUALS condExpr SEMI NEWLINE*) | (PROC a::ID LPAREN (decl (COMMA decl)*)? RPAREN COLON_EQUALS stat SEMI NEWLINE*) ;
atom ::= INT_NUMBER | DOUBLE_NUMBER | (a::(CID | ID) (LPAREN (expr (COMMA expr)*)? RPAREN)?) | (LPAREN condExpr RPAREN) ;
--------------------tescol::10001.bgf--------------------
cid ::= i::CIDENT ;
id ::= i::IDENT ;
whilestat ::= WHILE e::condExpr DO s::stat ;
def ::= (CONST n::cid COLON t::type COLON_EQUALS e::expr SEMI) | (VAR vartypedef SEMI) | (procedure SEMI) ;
proccall ::= i::id LPAREN (a::atom (COMMA a::atom)*)? RPAREN ;
procedure ::= PROC i::id LPAREN (a::vartypedef (COMMA a::vartypedef)*)? RPAREN COLON_EQUALS s::stat ;
ifstat ::= IF e::condExpr THEN ts::stat ELSE es::stat ;
--------------------tescol::10101.bgf--------------------
proceduredec ::= PROCEDURE pid1::ID PARENOPEN (pid2::ID COLON type (COMMA pid3::ID COLON type)*)* PARENCLOSE COLON type ASSIGN mainstatement SEMI ;
procedureList ::= ID PARENOPEN id1::condExpr (COMMA id2::condExpr)* PARENCLOSE ;
--------------------tescol::10111.bgf--------------------
statement ::= (KW_SKIP SYM_SEMI) | (a::varproc_id SYM_ASS c::mixfix SYM_SEMI) | (SYM_OPEN_BRACE statement+ SYM_CLOSE_BRACE SYM_SEMI) | (KW_IF mixfix KW_THEN statement KW_ELSE statement) | (KW_WHILE mixfix KW_DO statement) ;
proc_call ::= id::varproc_id l::arg_list ;
const_decl ::= KW_CONST id::ID_GENERAL SYM_COLON t::type SYM_ASS e::expr ;
proc_decl ::= KW_PROC id::varproc_id param_decl_list SYM_COLON type SYM_ASS statement ;
var_decl ::= KW_VAR id::varproc_id SYM_COLON t::type (SYM_ASS expr)? ;
atom ::= immediate | (v::varproc_id) | proc_call | parenthesised ;
--------------------tescol::11001.bgf--------------------
whilestatement ::= WHILE exp::expression DO statement ;
id ::= name::(CONSTID | VARID) ;
argumentlist ::= (exp::expression (COMMA args::argumentlist)?) | ε ;
exp_exp ::= l::atom_exp (EXP r::atom_exp)* ;
addition_exp ::= l::multiply_exp ((o::PLUS) | (o::MINUS) r::multiply_exp)* ;
mixfix ::= e::conjunction (QUESTION t::mixfix COLON f::mixfix)? ;
expression ::= e::mixfix ;
constdeclaration ::= CONST name::CONSTID COLON t::type DEFINEDAS exp::expression ;
conjunction ::= l::disjunction (AND r::disjunction)* ;
proccall ::= proc::varid LPAREN args::argumentlist RPAREN ;
vardeclaration ::= VAR name::varid COLON t::type ;
ifstatement ::= IF exp::expression THEN statement ELSE statement ;
atom_exp ::= (e::unary_exp) | (LPAREN exp::expression RPAREN) | (proc::proccall) ;
unary_exp ::= MINUS? (num::number) | (var::id) ;
assignment ::= name::id DEFINEDAS exp::expression ;
number ::= (f::FLOAT) | (i::INT) | (u::UINT) ;
comparison ::= l::addition_exp (c::conditional r::addition_exp)? ;
parameterlist ::= (name::varid COLON t::type (COMMA params::parameterlist)?) | ε ;
conditional ::= (t::EQUALITY) | (t::INEQUALITY) | (t::LANGLE) | (t::RANGLE) | (t::LTEQUALS) | (t::GTEQUALS) ;
procdeclaration ::= PROC name::varid LPAREN params::parameterlist RPAREN COLON t::type DEFINEDAS content::statement ;
disjunction ::= l::comparison (OR r::comparison)* ;
multiply_exp ::= l::exp_exp ((o::MUL) | (o::FSLASH) r::exp_exp)* ;
--------------------tescol::11010.bgf--------------------
procDec ::= p1::smallId LEFTPAR paramList RIGHTPAR COLON type DEFINEDAS stat ;
varDec ::= v1::smallId COLON type ;
--------------------tescol::11100.bgf--------------------
unary ::= (t::MINUS)* atom ;
addition ::= t::mult (addop mult)* ;
expression ::= boolexp (QMARK t::mult COLON f::mult)? ;
predicate ::= t::addition (COMPARISON u::addition)? ;
boolexp ::= t::predicate (BOOLOPERATOR u::predicate)* ;
mult ::= t::unary (MULTIPLIER unary)* ;
--------------------tescol::11101.bgf--------------------
andexpression ::= c1::compexpression (CONJUNCTION compexpression)* ;
assignment ::= varprocidentifier DEFINED ae::expression SEMI ;
multdivexpression ::= a1::atom (EXPONENTIATION | DIVISION | MULTIPLICATION a2::atom)* ;
expression ::= (p1::procedureapplication) | (b1::booleanexpression (QUESTION expression COLON expression)?) ;
compexpression ::= ar1::arithexpression (ROP arithexpression)? ;
arguments ::= e1::expression (COMMA e2::expression)* ;
arithexpression ::= m1::multdivexpression (ADDITION | SUBTRACTION m2::multdivexpression)* ;
booleanexpression ::= an1::andexpression (DISJUNCTION andexpression)* ;
--------------------tescol::11110.bgf--------------------
arithmeticExpr ::= conditionalExpr | (a::applyProcedure) ;
statement ::= (e::singleStatement) | (b::listofStatement) ;
proDeclaration ::= PROC ID LPAREN p1::parameterList RPAREN COLON t::type COLON_EQUALS s1::statement SEMI ;
condStm ::= IF LPAREN? a::booleanExpr RPAREN? THEN? b::statement (ELSE c::statement)? ;
listofStatement ::= "{" singleStatement (SEMI s::singleStatement)+ "}" ;
loopStm ::= WHILE LPAREN? e::booleanExpr RPAREN? DO? s::statement ;
singleStatement ::= skipStm | loopStm | condStm | (a::assgStm) ;
constDeclaration ::= CONST CONSTID COLON t::type COLON_EQUALS ar::arithmeticExpr SEMI ;
compilationUnit ::= TROLLEY CONSTID CONTAINS de::declarations CHECKOUT s::statement SEMI DONE SEMI ;
assgStm ::= ID COLON_EQUALS a1::arithmeticExpr ;
parameterElement ::= id::ID COLON t::type ;
varDeclaration ::= VAR ID COLON t::type SEMI ;
--------------------tescol::reference.bgf--------------------
appList ::= ε | (e::expression (COMMA f::expression)*) ;
exp ::= a::unary (EXP unary)* ;
relation ::= a::add (RELOP b::add)? ;
disj ::= a::equality (DISJUNC b::equality)* ;
equality ::= a::relation (EQOP b::relation)? ;
expression ::= a::conj (TE b::expression COLON c::expression)? ;
varDecl ::= VAR (a::ID) | (a::CONSTID) COLON t::type ;
mult ::= a::exp (MULTOP b::exp)* ;
assign ::= (a::ID) | (a::CONSTID) DEFAS e::expression ;
constDecl ::= CONST CONSTID COLON t::type DEFAS e::expression ;
term ::= (LPAR expression RPAR) | (CONSTID p::procApp) | (ID p::procApp) ;
paramList ::= ε | (p::paramElem (COMMA q::paramElem)*) ;
conj ::= a::disj (CONJUNC b::disj)* ;
stmtList ::= LBRACE s::stmtElem (SEMI t::stmtElem)* RBRACE ;
loop ::= WHILE e::expression DO statement ;
condSt ::= IF e::expression THEN statement ELSE statement ;
add ::= a::mult (ADD | SUB b::mult)* ;
procDecl ::= PROC (a::ID) | (a::CONSTID) LPAR p::paramList RPAR COLON t::type DEFAS st::statement ;
--------------------hats::abs.bgf--------------------
SqlTupleCaseBranches ::= l::SqlTupleCaseBranches b::SqlTupleCaseBranch ;
 SqlTupleCaseBranches ::= [b] SqlTupleCaseBranch ;
TypesynDecl ::= (al::AnnotationList)? TYPE lhs::TYPE_IDENTIFIER ASSIGN rhs::Datatypeuse SEMICOLON ;
OoModifier ::= REMOVES CLASS id::TypeName SEMICOLON ;
 OoModifier ::= MODIFIES INTERFACE id::TypeName LBRACE (fragments::InfModifierFragmentList)? RBRACE ;
 OoModifier ::= ADDS ifacedecl::QualifiedInterfaceDecl ;
 OoModifier ::= MODIFIES CLASS id::TypeName (ifadd::ImplementInterfacesAdd)? (ifremove::ImplementInterfacesRemove)? LBRACE (fragments::ModifierFragmentList)? RBRACE ;
 OoModifier ::= ADDS classdecl::QualifiedClassDecl ;
Deltaparam ::= [i] INTLITERAL ;
 Deltaparam ::= [c] TYPE_IDENTIFIER ;
 Deltaparam ::= fid::TYPE_IDENTIFIER DOT aid::IDENTIFIER ;
ParamDeclList ::= l::ParamDeclList COMMA i::ParamDecl ;
 ParamDeclList ::= [i] ParamDecl ;
SqlTupleScalarFunctionConcat ::= f1::SqlTupleScalarFunctionConcat CONCAT f2::SqlTupleScalarFunctionSum ;
 SqlTupleScalarFunctionConcat ::= SqlTupleScalarFunctionSum ;
MimplExp ::= MeqExp ;
 MimplExp ::= e1::MimplExp IMPLIES e2::MeqExp ;
 MimplExp ::= e1::MimplExp EQUIV e2::MeqExp ;
OriginalCall ::= ORIGINAL LPAREN (params::DataExpList)? RPAREN ;
 OriginalCall ::= delta::DeltaId DOTORIGINAL LPAREN (params::DataExpList)? RPAREN ;
 OriginalCall ::= CORE DOTORIGINAL LPAREN (params::DataExpList)? RPAREN ;
MethodsigList ::= m::Methodsig SEMICOLON ;
 MethodsigList ::= l::MethodsigList m::Methodsig SEMICOLON ;
SqlAttrAssignment ::= e::DataExp EQ f::SqlTupleScalarFunction ;
SqlOrCondition ::= c1::SqlOrCondition op::OR c2::SqlAndCondition ;
 SqlOrCondition ::= SqlAndCondition ;
Stmt ::= (al::AnnotationList)? s::CompoundStmt ;
 Stmt ::= (al::AnnotationList)? s::StmtWithoutAnnotations SEMICOLON ;
InfModifierFragmentList ::= l::InfModifierFragmentList f::InfModifierFragment ;
 InfModifierFragmentList ::= [f] InfModifierFragment ;
AndExp ::= e1::AndExp ANDAND e2::EqualityExp ;
 AndExp ::= EqualityExp ;
ConstructorExp ::= [f] TypeName ;
 ConstructorExp ::= f::TypeName LPAREN (l::DataExpList)? RPAREN ;
WhenCondition ::= TO ac::Appcond ;
 WhenCondition ::= WHEN ac::Appcond ;
MmultExp ::= e1::MmultExp MULT e2::MfactorExp ;
 MmultExp ::= [e] MfactorExp ;
 MmultExp ::= e1::MmultExp DIV e2::MfactorExp ;
 MmultExp ::= e1::MmultExp MOD e2::MfactorExp ;
AddExp ::= e1::AddExp PLUS e2::MultExp ;
 AddExp ::= [e] MultExp ;
 AddExp ::= e1::AddExp MINUS e2::MultExp ;
DeltaAccessList ::= [t] DeltaAccess ;
 DeltaAccessList ::= l::DeltaAccessList t::DeltaAccess ;
ConstructorArgList ::= l::ConstructorArgList COMMA a::ConstructorArg ;
 ConstructorArgList ::= [a] ConstructorArg ;
AsyncCall ::= callee::PureExpPrefix BANG method::IDENTIFIER LPAREN (params::DataExpList)? RPAREN ;
 AsyncCall ::= callee::THIS BANG method::IDENTIFIER LPAREN (params::DataExpList)? RPAREN ;
SqlOrderingAttributeList ::= l::SqlOrderingAttributeList COMMA a::SqlOrderingAttribute ;
 SqlOrderingAttributeList ::= [a] SqlOrderingAttribute ;
PureExpPrefix ::= LPAREN e::IfExp RPAREN ;
 PureExpPrefix ::= PureExpNoIf ;
Feature ::= id::TYPE_IDENTIFIER PRIME (attrs::AttrAssignments)? ;
 Feature ::= id::TYPE_IDENTIFIER (attrs::AttrAssignments)? ;
Export ::= EXPORT MULT SEMICOLON ;
 Export ::= EXPORT l::AnyNameList SEMICOLON ;
 Export ::= EXPORT MULT FROM m::ModuleName SEMICOLON ;
 Export ::= EXPORT l::AnyNameList FROM m::ModuleName SEMICOLON ;
SqlAndCondition ::= c1::SqlAndCondition op::AND c2::SqlCondition ;
 SqlAndCondition ::= SqlCondition ;
SqlTupleScalarFunctionProduct ::= f1::SqlTupleScalarFunctionProduct MULT f2::SqlTupleScalarFunctionQuotient ;
 SqlTupleScalarFunctionProduct ::= SqlTupleScalarFunctionQuotient ;
 SqlTupleScalarFunctionProduct ::= f1::SqlTupleScalarFunctionProduct MULT LPAREN f2::SqlTupleScalarFunctionSum RPAREN ;
DataConstructor ::= co::TYPE_IDENTIFIER (p::DataConstructorParams)? ;
CaseBranchList ::= l::CaseBranchList b::CaseBranch ;
 CaseBranchList ::= [b] CaseBranch ;
Product ::= PRODUCT id::TYPE_IDENTIFIER LPAREN (l::FeatureList)? RPAREN SEMICOLON ;
 Product ::= PRODUCT id::TYPE_IDENTIFIER LPAREN (l::FeatureList)? RPAREN LBRACE al::AdaptationList RBRACE ;
DatatypeDecl ::= (al::AnnotationList)? DATA id::TYPE_IDENTIFIER (p::DatatypeparamListDecl)? SEMICOLON ;
 DatatypeDecl ::= (al::AnnotationList)? DATA id::TYPE_IDENTIFIER (p::DatatypeparamListDecl)? ASSIGN l::DataConstructorList SEMICOLON ;
SqlTupleScalarFunctionQuotient ::= f1::SqlTupleScalarFunctionQuotient DIV LPAREN f2::SqlTupleScalarFunctionSum RPAREN ;
 SqlTupleScalarFunctionQuotient ::= f1::SqlTupleScalarFunctionQuotient DIV f2::AtomicSqlTupleScalarFunction ;
 SqlTupleScalarFunctionQuotient ::= AtomicSqlTupleScalarFunction ;
CompilationUnit ::= (m::ModuleDeclList)? (d::DeltaDeclList)? (pl::ProductLine)? (p::ProductList)? fm::Featuremodeldecl ;
SqlAttrDef ::= fun::SqlAggregateFunction AS e::DataExp ;
 SqlAttrDef ::= [f] Factor ;
Import ::= IMPORT l::AnyNameList FROM m::ModuleName SEMICOLON ;
 Import ::= IMPORT l::AnyNameList SEMICOLON ;
 Import ::= IMPORT MULT FROM m::ModuleName SEMICOLON ;
FunctionDecl ::= (al::AnnotationList)? DEF t::Datatypeuse fn::IDENTIFIER p::DatatypeparamListDecl LPAREN (l::ParamDeclList)? RPAREN ASSIGN ef::ExpFunctionDef SEMICOLON ;
 FunctionDecl ::= (al::AnnotationList)? DEF t::Datatypeuse fn::IDENTIFIER LPAREN (l::ParamDeclList)? RPAREN ASSIGN ef::ExpFunctionDef SEMICOLON ;
 FunctionDecl ::= (al::AnnotationList)? DEF t::Datatypeuse fn::IDENTIFIER LPAREN (l::ParamDeclList)? RPAREN ASSIGN BUILTIN SEMICOLON ;
 FunctionDecl ::= (al::AnnotationList)? DEF t::Datatypeuse fn::IDENTIFIER p::DatatypeparamListDecl LPAREN (l::ParamDeclList)? RPAREN ASSIGN BUILTIN SEMICOLON ;
HasCondition ::= HASFIELD f::FieldDecl ;
 HasCondition ::= HASMETHOD ms::Methodsig ;
 HasCondition ::= HASINTERFACE n::TypeName ;
ModuleModifierList ::= l::ModuleModifierList m::ModuleModifier ;
 ModuleModifierList ::= [m] ModuleModifier ;
IncompleteExp ::= callee::PureExpPrefix b::BANG (method::IDENTIFIER)? ;
 IncompleteExp ::= callee::PureExpPrefix d::DOT (method::IDENTIFIER)? ;
 IncompleteExp ::= NEW (c::Cog)? ;
AfterCondition ::= AFTER l::DeltaList ;
AttrAssignment ::= n::IDENTIFIER ASSIGN i::INTLITERAL ;
 AttrAssignment ::= n::IDENTIFIER ASSIGN c::TYPE_IDENTIFIER ;
ImplementInterfaces ::= IMPLEMENTS i::IfnameList ;
IfThenElseStmt ::= IF LPAREN e1::DataExp RPAREN s1::Stmt ELSE s2::Stmt ;
 IfThenElseStmt ::= IF LPAREN e1::DataExp RPAREN s1::Stmt ;
SyncCall ::= callee::PureExpPrefix DOT method::IDENTIFIER LPAREN (params::DataExpList)? RPAREN ;
 SyncCall ::= callee::THIS DOT method::IDENTIFIER LPAREN (params::DataExpList)? RPAREN ;
Fextension ::= f::TYPE_IDENTIFIER LBRACE (g::Group)? acl::AttributeConstraintList RBRACE ;
AttributeConstraintList ::= acl::AttributeConstraintList t::TYPE_IDENTIFIER id::IDENTIFIER IN LBRACKET b1::BoundaryInt UNTIL b2::BoundaryInt RBRACKET SEMICOLON ;
 AttributeConstraintList ::= acl::AttributeConstraintList t::TYPE_IDENTIFIER id::IDENTIFIER SEMICOLON "/"* Constraints* "/" ;
 AttributeConstraintList ::= acl::AttributeConstraintList EXCLUDE COLON f::Featvar SEMICOLON ;
 AttributeConstraintList ::= acl::AttributeConstraintList t::TYPE_IDENTIFIER id::IDENTIFIER IN LBRACE il::IntList RBRACE SEMICOLON ;
 AttributeConstraintList ::= acl::AttributeConstraintList t::TYPE_IDENTIFIER LBRACKET b1::BoundaryInt UNTIL b2::BoundaryInt RBRACKET id::IDENTIFIER SEMICOLON ;
 AttributeConstraintList ::= acl::AttributeConstraintList e::Mexp SEMICOLON ;
 AttributeConstraintList ::= "/"* Attributes* "/" ;
 AttributeConstraintList ::= acl::AttributeConstraintList REQUIRE COLON f::Featvar SEMICOLON ;
 AttributeConstraintList ::= acl::AttributeConstraintList IFIN COLON e::Mexp SEMICOLON ;
 AttributeConstraintList ::= acl::AttributeConstraintList IFOUT COLON e::Mexp SEMICOLON ;
ParamDecl ::= (an::AnnotationList)? t::TypeExp i::IDENTIFIER ;
AnyNameList ::= [n] AnyName ;
 AnyNameList ::= l::AnyNameList COMMA n::AnyName ;
ExtendsInterfaces ::= EXTENDS i::IfnameList ;
Mexp ::= e1::Mexp OROR e2::MandExp ;
 Mexp ::= MandExp ;
CaseExp ::= CASE caseterm::DataExp LBRACE (branches::CaseBranchList)? RBRACE ;
MultExp ::= e1::MultExp MULT e2::Factor ;
 MultExp ::= e1::MultExp MOD e2::Factor ;
 MultExp ::= [f] Factor ;
 MultExp ::= e1::MultExp DIV e2::Factor ;
SqlAttrAssignmentList ::= [a] SqlAttrAssignment ;
 SqlAttrAssignmentList ::= l::SqlAttrAssignmentList COMMA a::SqlAttrAssignment ;
SqlAggregateFunction ::= COUNT LPAREN MULT RPAREN ;
 SqlAggregateFunction ::= [f] SqlTupleScalarFunction ;
 SqlAggregateFunction ::= i::IDENTIFIER LPAREN f::SqlTupleScalarFunction RPAREN ;
StmtList ::= l::StmtList i::Stmt ;
 StmtList ::= [i] Stmt ;
ModifierFragmentList ::= [f] ModifierFragment ;
 ModifierFragmentList ::= l::ModifierFragmentList f::ModifierFragment ;
MeqExp ::= MrelExp ;
 MeqExp ::= e1::MeqExp NOTEQ e2::MrelExp ;
 MeqExp ::= e1::MeqExp EQEQ e2::MrelExp ;
ImplementInterfacesAdd ::= ADDS i::IfnameList ;
FieldDecl ::= (an::AnnotationList)? PORT t::TypeExp i::IDENTIFIER ;
 FieldDecl ::= (an::AnnotationList)? t::TypeExp i::IDENTIFIER ;
 FieldDecl ::= (an::AnnotationList)? PORT t::TypeExp i::IDENTIFIER ASSIGN e::DataExp ;
 FieldDecl ::= (an::AnnotationList)? t::TypeExp i::IDENTIFIER ASSIGN e::DataExp ;
EqualityExp ::= e1::EqualityExp EQEQ e2::RelationalExp ;
 EqualityExp ::= RelationalExp ;
 EqualityExp ::= e1::EqualityExp NOTEQ e2::RelationalExp ;
VarOrFieldRef ::= callee::THIS b::BANG (method::IDENTIFIER)? ;
 VarOrFieldRef ::= [n] IDENTIFIER ;
 VarOrFieldRef ::= callee::THIS d::DOT ;
 VarOrFieldRef ::= THIS DOT id::IDENTIFIER ;
MfactorExp ::= MINUS e::MfactorExp ;
 MfactorExp ::= MlitExp ;
 MfactorExp ::= NEGATION e::MfactorExp ;
 MfactorExp ::= LPAREN e::Mexp RPAREN ;
ImplementInterfacesRemove ::= REMOVES i::IfnameList ;
IfExp ::= IF e::DataExp THEN c::DataExp ELSE a::DataExp ;
FeatureDecl ::= [f] TYPE_IDENTIFIER ;
 FeatureDecl ::= f::TYPE_IDENTIFIER LBRACE (g::Group)? acl::AttributeConstraintList RBRACE ;
ParamDecls ::= LPAREN (f::ParamDeclList)? RPAREN ;
SqlOrderingAttributes ::= ε ;
 SqlOrderingAttributes ::= ORDER BY l::SqlOrderingAttributeList ;
CorefeatureList ::= ε ;
 CorefeatureList ::= COREFEATURES l::FeatureList SEMICOLON ;
FeatureList ::= [f] Feature ;
 FeatureList ::= l::FeatureList COMMA f::Feature ;
MlitExp ::= [i] INTLITERAL ;
 MlitExp ::= [id] IDENTIFIER ;
 MlitExp ::= f::TYPE_IDENTIFIER DOT a::IDENTIFIER ;
 MlitExp ::= [id] TYPE_IDENTIFIER ;
ExportList ::= [t] Export ;
 ExportList ::= l::ExportList t::Export ;
DatatypeparamListDecl ::= LT l::DatatypeparamList GT ;
SqlExp ::= INSERT INTO r::SqlRelationRef LPAREN a::SqlAttrRefList RPAREN VALUES LPAREN v::SqlTupleConstantList RPAREN ;
 SqlExp ::= UPDATE r::SqlRelationRef SET a::SqlAttrAssignmentList c::OptSqlCondition ;
 SqlExp ::= SELECT a::SqlAttrsDef FROM r::SqlRelationRef c::OptSqlCondition g::SqlGroupingAttributes o::SqlOrderingAttributes ;
 SqlExp ::= SELECT DISTINCT a::SqlAttrsDef FROM r::SqlRelationRef c::OptSqlCondition g::SqlGroupingAttributes o::SqlOrderingAttributes ;
DataConstructorList ::= [i] DataConstructor ;
 DataConstructorList ::= l::DataConstructorList BAR i::DataConstructor ;
AnnotationList ::= l::AnnotationList a::Annotation ;
 AnnotationList ::= [a] Annotation ;
BlockWithoutAnnotations ::= LBRACE (s::StmtList)? RBRACE ;
DeclList ::= l::DeclList t::Decl ;
 DeclList ::= [t] Decl ;
Guard ::= [e] DataExp ;
 Guard ::= r::VarOrFieldRef QMARK ;
 Guard ::= BAR e::Exp BAR ;
 Guard ::= DURATION LPAREN min::DataExp COMMA max::DataExp RPAREN ;
 Guard ::= g1::Guard GUARDAND g2::Guard ;
SqlAttrDefList ::= [a] SqlAttrDef ;
 SqlAttrDefList ::= l::SqlAttrDefList COMMA a::SqlAttrDef ;
QualifiedTypeName ::= qn::TypeName DOT n::TYPE_IDENTIFIER ;
ModuleNameDecl ::= MODULE n::ModuleName SEMICOLON ;
SqlTupleConstant ::= [i] IntLiteral ;
 SqlTupleConstant ::= [s] SqlStringLiteral ;
 SqlTupleConstant ::= TRUE ;
 SqlTupleConstant ::= MINUS i::IntLiteral ;
 SqlTupleConstant ::= FALSE ;
 SqlTupleConstant ::= [r] VarOrFieldRef ;
NewExp ::= NEW (c::Cog)? i::TypeName LPAREN (l::DataExpList)? RPAREN ;
AttrAssignmentList ::= [a] AttrAssignment ;
 AttrAssignmentList ::= l::AttrAssignmentList COMMA a::AttrAssignment ;
WhileStmt ::= WHILE LPAREN e1::DataExp RPAREN s1::Stmt ;
DataConstructorParams ::= LPAREN (l::ConstructorArgList)? RPAREN ;
AttrAssignments ::= LBRACE l::AttrAssignmentList RBRACE ;
AdaptationList ::= l::AdaptationList ad::Adaptation ;
 AdaptationList ::= [ad] Adaptation ;
FromCondition ::= FROM ac::Appcond ;
Factor ::= NEGATION b::Factor ;
 Factor ::= MINUS e::Factor ;
 Factor ::= Literal ;
 Factor ::= PureExp ;
 Factor ::= LPAREN e::OrExp RPAREN ;
Cardinality ::= ONEOF ;
 Cardinality ::= LBRACKET i1::INTLITERAL UNTIL i2::INTLITERAL RBRACKET ;
 Cardinality ::= ALLOF ;
 Cardinality ::= LBRACKET i::INTLITERAL UNTIL MULT RBRACKET ;
Block ::= (al::AnnotationList)? b::BlockWithoutAnnotations ;
SqlRelationRef ::= r1::SqlRelationRef JOIN r2::SqlAtomicRelationRef ;
 SqlRelationRef ::= r1::SqlRelationRef RIGHT JOIN r2::SqlAtomicRelationRef ;
 SqlRelationRef ::= SqlAtomicRelationRef ;
 SqlRelationRef ::= r1::SqlRelationRef LEFT JOIN r2::SqlAtomicRelationRef ;
QualifiedInterfaceDecl ::= (al::AnnotationList)? INTERFACE id::TypeName (i::ExtendsInterfaces)? LBRACE (l::MethodsigList)? RBRACE ;
ModifierFragment ::= REMOVES f::FieldDecl SEMICOLON ;
 ModifierFragment ::= MODIFIES m::Method ;
 ModifierFragment ::= ADDS f::FieldDecl SEMICOLON ;
 ModifierFragment ::= REMOVES ms::Methodsig SEMICOLON ;
 ModifierFragment ::= ADDS m::Method ;
InterfaceDecl ::= (al::AnnotationList)? INTERFACE id::TYPE_IDENTIFIER (i::ExtendsInterfaces)? LBRACE (l::MethodsigList)? RBRACE ;
ProductLine ::= PRODUCTLINE id::TYPE_IDENTIFIER SEMICOLON o::OptfeatureList c::CorefeatureList d::DeltaclauseList ;
TypeExp ::= [n] TypeName ;
 TypeExp ::= n::TypeName LT p::DatatypeuseList GT ;
FieldDeclList ::= i::FieldDecl SEMICOLON ;
 FieldDeclList ::= l::FieldDeclList i::FieldDecl SEMICOLON ;
DeltaDecl ::= DELTA id::TYPE_IDENTIFIER (params::DeltaParamDecls)? SEMICOLON (uses::DeltaAccessList)? (modifiers::ModuleModifierList)? ;
Group ::= GROUP c::Cardinality LBRACE fs::FnodeList RBRACE ;
DeltaParamDeclList ::= [i] DeltaParamDecl ;
 DeltaParamDeclList ::= l::DeltaParamDeclList COMMA i::DeltaParamDecl ;
Cog ::= (annotations::AnnotationList)? COG ;
ModuleDecl ::= n::ModuleNameDecl (el::ExportList)? (il::ImportList)? (dl::DeclList)? (b::MainBlock)? ;
RelationalExp ::= e1::RelationalExp LTEQ e2::AddExp ;
 RelationalExp ::= AddExp ;
 RelationalExp ::= e1::RelationalExp LT e2::AddExp ;
 RelationalExp ::= e1::RelationalExp GT e2::AddExp ;
 RelationalExp ::= e1::RelationalExp GTEQ e2::AddExp ;
DeltaList ::= l::DeltaList COMMA id::Delta ;
 DeltaList ::= [id] Delta ;
ConstructorPattern ::= co::TypeName (p::PatternParams)? ;
FactorAppcond ::= LPAREN ac::Appcond RPAREN ;
 FactorAppcond ::= [f] Feature ;
 FactorAppcond ::= NEGATION ac::FactorAppcond ;
Deltaspec ::= id::TYPE_IDENTIFIER (params::Deltaparams)? ;
MandExp ::= MimplExp ;
 MandExp ::= e1::MandExp ANDAND e2::MimplExp ;
MrelExp ::= e1::MrelExp GTEQ e2::MaddExp ;
 MrelExp ::= e1::MrelExp GT e2::MaddExp ;
 MrelExp ::= e1::MrelExp LT e2::MaddExp ;
 MrelExp ::= MaddExp ;
 MrelExp ::= e1::MrelExp LTEQ e2::MaddExp ;
VarDecl ::= t::TypeExp i::IDENTIFIER ASSIGN e::Exp ;
 VarDecl ::= t::TypeExp i::IDENTIFIER ;
Annotation ::= LBRACKET type::TypeExp COLON exp::DataExp RBRACKET ;
 Annotation ::= LBRACKET exp::DataExp RBRACKET ;
SqlTupleCaseBranch ::= WHEN c::SqlOrCondition THEN f::SqlTupleScalarFunction ;
ListLiteralExp ::= LBRACKET (l::DataExpList)? RBRACKET ;
MaddExp ::= e1::MaddExp MINUS e2::MmultExp ;
 MaddExp ::= [e] MmultExp ;
 MaddExp ::= e1::MaddExp PLUS e2::MmultExp ;
Fnode ::= OPT f::FeatureDecl ;
 Fnode ::= [f] FeatureDecl ;
DatatypeparamList ::= l::DatatypeparamList COMMA p::Datatypeparam ;
 DatatypeparamList ::= [p] Datatypeparam ;
BoundaryInt ::= [i] INTLITERAL ;
 BoundaryInt ::= MULT ;
 BoundaryInt ::= MINUS i::INTLITERAL ;
DeltaclauseList ::= ε ;
 DeltaclauseList ::= l::DeltaclauseList dc::DeltaClause SEMICOLON ;
StmtWithoutAnnotations ::= REBIND field::IDENTIFIER ASSIGN e::Exp ;
 StmtWithoutAnnotations ::= r::VarOrFieldRef ASSIGN e::Exp ;
 StmtWithoutAnnotations ::= SKIP ;
 StmtWithoutAnnotations ::= REBIND obj::Exp COLON field::IDENTIFIER ASSIGN e::Exp ;
 StmtWithoutAnnotations ::= [e] EffExp ;
 StmtWithoutAnnotations ::= [vd] VarDecl ;
 StmtWithoutAnnotations ::= DURATION LPAREN min::DataExp COMMA max::DataExp RPAREN ;
 StmtWithoutAnnotations ::= SUBLOC sub::PureExp IN father::PureExp ;
 StmtWithoutAnnotations ::= ASSERT e::DataExp ;
 StmtWithoutAnnotations ::= AWAIT Guard ;
 StmtWithoutAnnotations ::= SUSPEND ;
 StmtWithoutAnnotations ::= RETURN e::Exp ;
 StmtWithoutAnnotations ::= MOVECOGTO DataExp ;
DatatypeuseList ::= [i] Datatypeuse ;
 DatatypeuseList ::= l::DatatypeuseList COMMA i::Datatypeuse ;
OptfeatureList ::= OPTFEATURES l::FeatureList SEMICOLON ;
 OptfeatureList ::= ε ;
OrAppcond ::= ac1::OrAppcond OROR ac2::AndAppcond ;
 OrAppcond ::= AndAppcond ;
MethodList ::= l::MethodList i::Method ;
 MethodList ::= [i] Method ;
Featuremodeldecl ::= l::Featuremodeldecl EXTENSION ext::Fextension ;
 Featuremodeldecl ::= l::Featuremodeldecl ROOT f::FeatureDecl ;
 Featuremodeldecl ::= ε ;
SqlTupleConstantList ::= [c] SqlTupleConstant ;
 SqlTupleConstantList ::= l::SqlTupleConstantList COMMA c::SqlTupleConstant ;
MainBlock ::= (al::AnnotationList)? LBRACE (s::StmtList)? RBRACE ;
DeltaParamDecls ::= LPAREN (f::DeltaParamDeclList)? RPAREN ;
Adaptation ::= product::TYPE_IDENTIFIER BY update::TYPE_IDENTIFIER SEMICOLON ;
DeltaparamList ::= l::DeltaparamList COMMA p::Deltaparam ;
 DeltaparamList ::= [p] Deltaparam ;
DataExpList ::= l::DataExpList COMMA i::DataExp ;
 DataExpList ::= [i] DataExp ;
Methodsig ::= (al::AnnotationList)? returntype::TypeExp id::IDENTIFIER LPAREN (params::ParamDeclList)? RPAREN ;
PatternList ::= l::PatternList COMMA i::Pattern ;
 PatternList ::= [i] Pattern ;
SqlTupleScalarFunctionSum ::= f1::SqlTupleScalarFunctionSum MINUS f2::SqlTupleScalarFunctionProduct ;
 SqlTupleScalarFunctionSum ::= f1::SqlTupleScalarFunctionSum PLUS f2::SqlTupleScalarFunctionProduct ;
 SqlTupleScalarFunctionSum ::= f1::SqlTupleScalarFunctionSum MINUS LPAREN f2::SqlTupleScalarFunctionSum RPAREN ;
 SqlTupleScalarFunctionSum ::= SqlTupleScalarFunctionProduct ;
InfModifierFragment ::= REMOVES ms::Methodsig SEMICOLON ;
 InfModifierFragment ::= ADDS ms::Methodsig SEMICOLON ;
QualifiedName ::= qn::TypeName DOT n::IDENTIFIER ;
DeltaClause ::= DELTA d::Deltaspec (a::AfterCondition)? (f::FromCondition)? (w::WhenCondition)? ;
QualifiedClassDecl ::= (annotations::AnnotationList)? CLASS id::TypeName (params::ParamDecls)? (i::ImplementInterfaces)? LBRACE (fields::FieldDeclList)? (initBlock::InitBlock)? (methods::MethodList)? RBRACE ;
FnappListExp ::= f::Name l::ListLiteralExp ;
FnappExp ::= f::Name LPAREN (l::DataExpList)? RPAREN ;
ClassDecl ::= (annotations::AnnotationList)? CLASS id::TYPE_IDENTIFIER (params::ParamDecls)? (i::ImplementInterfaces)? LBRACE (fields::FieldDeclList)? (initBlock::InitBlock)? (methods::MethodList)? RBRACE ;
LetExp ::= LET LPAREN var::ParamDecl RPAREN ASSIGN val::DataExp IN exp::DataExp ;
OptSqlCondition ::= WHERE c::SqlOrCondition ;
 OptSqlCondition ::= ε ;
DeltaDeclList ::= [t] DeltaDecl ;
 DeltaDeclList ::= l::DeltaDeclList t::DeltaDecl ;
DeltaParamDecl ::= [p] ParamDecl ;
 DeltaParamDecl ::= id::TYPE_IDENTIFIER c::HasCondition ;
Deltaparams ::= LPAREN l::DeltaparamList RPAREN ;
DeltaAccess ::= USES m::ModuleName SEMICOLON ;
ConstructorArg ::= [u] Datatypeuse ;
 ConstructorArg ::= u::Datatypeuse id::IDENTIFIER ;
SqlOrderingAttribute ::= e::DataExp DESC ;
 SqlOrderingAttribute ::= [e] DataExp ;
 SqlOrderingAttribute ::= e::DataExp ASC ;
OrExp ::= AndExp ;
 OrExp ::= e1::OrExp OROR e2::AndExp ;
FunctionalModifier ::= ADDS typesyndecl::TypesynDecl ;
 FunctionalModifier ::= MODIFIES typesyndecl::TypesynDecl ;
 FunctionalModifier ::= ADDS datatypedecl::DatatypeDecl ;
 FunctionalModifier ::= ADDS functiondecl::FunctionDecl ;
 FunctionalModifier ::= MODIFIES datatypedecl::DatatypeDecl ;
EffExp ::= AsyncCall ;
 EffExp ::= NewlocExp "/"* Component* "/" ;
 EffExp ::= NewExp ;
 EffExp ::= IncompleteExp ;
 EffExp ::= SyncCall ;
 EffExp ::= SQL LPAREN e::SqlExp RPAREN ;
 EffExp ::= OriginalCall ;
 EffExp ::= p::PureExpPrefix DOT GET ;
PatternParams ::= LPAREN (l::PatternList)? RPAREN ;
ModuleDeclList ::= l::ModuleDeclList t::ModuleDecl ;
 ModuleDeclList ::= [t] ModuleDecl ;
CaseBranch ::= lhs::Pattern RARROW rhs::DataExp SEMICOLON ;
SqlAttrRefList ::= l::SqlAttrRefList COMMA a::SqlAttrRef ;
 SqlAttrRefList ::= [a] SqlAttrRef ;
SqlCondition ::= NOT c::SqlCondition ;
 SqlCondition ::= f1::SqlTupleScalarFunction r::SqlComparisonRelation f2::SqlTupleScalarFunction ;
 SqlCondition ::= a::StringLiteral IS NULL ;
 SqlCondition ::= LPAREN c::SqlOrCondition RPAREN ;
IntList ::= MINUS i::INTLITERAL ;
 IntList ::= il::IntList COMMA MINUS i::INTLITERAL ;
 IntList ::= il::IntList COMMA i::INTLITERAL ;
 IntList ::= [i] INTLITERAL ;
ProductList ::= [p] Product ;
 ProductList ::= l::ProductList p::Product ;
AndAppcond ::= ac1::AndAppcond ANDAND ac2::FactorAppcond ;
 AndAppcond ::= FactorAppcond ;
SqlGroupingAttributes ::= ε ;
 SqlGroupingAttributes ::= GROUP BY a::SqlAttrRefList ;
LocationExp ::= LOC LPAREN param::PureExp RPAREN ;
IfnameList ::= l::IfnameList COMMA i::Ifname ;
 IfnameList ::= [i] Ifname ;
FnodeList ::= ε ;
 FnodeList ::= l::FnodeList COMMA f::Fnode ;
 FnodeList ::= [f] Fnode ;
Datatypeuse ::= (l::AnnotationList)? n::TypeName LT p::DatatypeuseList GT ;
 Datatypeuse ::= (l::AnnotationList)? n::TypeName ;
ImportList ::= [t] Import ;
 ImportList ::= l::ImportList t::Import ;
SqlTupleCaseFunction ::= CASE b::SqlTupleCaseBranches ELSE f::SqlTupleScalarFunction END ;
FatherExp ::= FATHER LPAREN param::PureExp RPAREN ;
Method ::= CRITICAL ms::Methodsig b::Block ;
 Method ::= ms::Methodsig b::Block ;
--------------------metamodels::ACG.bgf--------------------
PushDStat ::= operand::Expression ;
ForEachStat ::= iterator::VariableDecl collection::Expression ;
ASMNode ::= name::Expression ;
SequenceExp ::= (elements::Expression)+ ;
Attribute ::= context::String name::String body::Expression ;
OperatorCallExp ::= (arguments::Expression)+ ;
OperationStat ::= context::Expression name::Expression ;
LoadStat ::= operand::Expression ;
Function ::= context::String name::String (parameters::Parameter)+ body::Expression ;
GotoStat ::= label::LabelStat ;
SetStat ::= operand::Expression ;
BooleanExp ::= value::Boolean ;
StoreStat ::= operand::Expression ;
SimpleNode ::= element::String mode::String guard::Expression ;
CallStat ::= operand::Expression ;
IfStat ::= label::LabelStat ;
IteratorExp ::= iterator::VariableDecl body::Expression ;
LetStat ::= variable::VariableDecl value::Expression ;
CodeNode ::= element::String mode::String guard::Expression ;
PushStat ::= operand::Expression ;
StringExp ::= value::String ;
GetStat ::= operand::Expression ;
IsAExp ::= source::Expression type::String ;
VariableDecl ::= Parameter ;
 VariableDecl ::= name::String ;
ACG ::= metamodel::String startsWith::String (elements::ACGElement)+ ;
LetExp ::= variable::VariableDecl value::Expression in::Expression ;
VariableExp ::= variable::VariableDecl ;
ParamStat ::= name::Expression type::Expression ;
IfExp ::= condition::Expression thenExp::Expression elseExp::Expression ;
AnalyzeStat ::= target::Expression mode::String ;
IntegerExp ::= value::Integer ;
Severity ::= (critic::ε) | (error::ε) | (warning::ε) ;
ConditionalStat ::= condition::Expression (elseStatements::Statement)+ ;
OperationCallExp ::= OperatorCallExp ;
 OperationCallExp ::= (arguments::Expression)+ ;
VariableStat ::= definition::Expression name::Expression ;
FieldStat ::= name::Expression type::Expression ;
SuperCallStat ::= operand::Expression ;
NavigationExp ::= source::Expression name::String ;
Parameter ::= name::String ;
LabelStat ::= name::String id::Expression ;
ReportStat ::= severity::Severity message::Expression ;
PushIStat ::= operand::Expression ;
PCallStat ::= operand::Expression ;
--------------------metamodels::ACME.bgf--------------------
System ::= (componentDeclaration::ComponentInstance)+ (connectorDeclaration::Connector)+ (attachments::Link)+ (bindings::Link)+ ;
Connector ::= (roles::Role)+ system::System ;
Representation ::= (systems::System)+ ;
Type ::= name::String (representations::Representation)+ (property::Property)+ ;
ComponentType ::= extend::String ;
Role ::= name::String (representations::Representation)+ (property::Property)+ ;
ACMEFile ::= (entries::ACMEEntry)+ ;
Binding ::= compSrc::String portSrc::String compDest::String portDest::String ;
Property ::= name::String val::String ;
Attachment ::= comp::String port::String con::String role::String ;
ComponentInstance ::= instanceOf::String ;
Port ::= name::String (representations::Representation)+ (property::Property)+ ;
--------------------metamodels::ADELFE.bgf--------------------
Incomprehension ::= cooperationRules::CooperationRules ;
Incompetence ::= cooperationRules::CooperationRules ;
NCS ::= Incomprehension ;
 NCS ::= Ambiguity ;
 NCS ::= Incompetence ;
 NCS ::= Unproductiveness ;
 NCS ::= Concurrency ;
 NCS ::= Conflict ;
 NCS ::= Uselessness ;
 NCS ::= cooperationRules::CooperationRules ;
Ambiguity ::= cooperationRules::CooperationRules ;
Representation ::= cooperativeAgentR::CooperativeAgent element::Element ;
CooperationRules ::= (detects::NCS)+ ;
Element ::= environnement::Environnement action::CooperativeAgent perception::CooperativeAgent ;
Characteristic ::= cooperativeAgentCha::CooperativeAgent ;
CooperativeAgent ::= elementA::Element elementP::Element (representation::Representation)+ (skill::Skill)+ (aptitude::Aptitude)+ (characteristic::Characteristic)+ (communication::Communication)+ (observes::CooperationRules)+ ;
Environnement ::= element::Element ;
Unproductiveness ::= cooperationRules::CooperationRules ;
Uselessness ::= cooperationRules::CooperationRules ;
Communication ::= cooperativeAgentCom::CooperativeAgent (aip::AIP)+ ;
Aptitude ::= cooperativeAgentA::CooperativeAgent ;
Concurrency ::= cooperationRules::CooperationRules ;
Conflict ::= cooperationRules::CooperationRules ;
Skill ::= cooperativeAgentS::CooperativeAgent ;
--------------------metamodels::ASM.bgf--------------------
Extension ::= (elements::VariableDecl)+ universe::Universe ;
DoForallRule ::= id::VariableDecl inSet::Universe condition::Term (doRule::Rule)+ ;
XAsmSpec ::= (Asm::Asm)+ ;
Argument ::= type::String ;
SkipRule ::= inSequence::Boolean ;
Asm ::= signature::Signature returnType::String metaInformation::MetaInformation body::Body ;
Function ::= (parameters::Parameter)+ returnType::String initTerm::Term isExternal::Boolean ;
Signature ::= isMain::Boolean name::String (arguments::Argument)+ ;
ExtendRule ::= (extensions::Extension)+ (rules::Rule)+ ;
ElseIf ::= condition::Term (thenRule::Rule)+ elseRule::Rule elseIfRule::ElseIf ;
AsmType ::= (function::ε) | (subasm::ε) ;
StringConstant ::= value::String ;
ChooseRule ::= chooseId::VariableDecl inSet::Universe guard::Term (ifChoosenRules::Rule)+ ifNotChoosenRule::Rule ;
OperatorTerm ::= opName::String leftExp::Term rightExp::Term ;
ReturnRule ::= term::Term ;
BooleanConstant ::= value::Boolean ;
AsmInvocation ::= asmName::String (arguments::Term)+ ;
Parameter ::= name::String type::String ;
AccessUpdateType ::= (access::ε) | (update::ε) ;
MetaInformation ::= (usedAsIn::Signature)+ usedAs::AsmType (accessUpdateFunctions::AccessUpdateFunction)+ ;
UpdateRule ::= function::FunctionOrVariableTerm updateTerm::Term ;
Universe ::= name::String (contents::String)+ (superUniverses::Universe)+ ;
AccessUpdateFunction ::= type::AccessUpdateType (functions::Function)+ ;
FunctionOrVariableTerm ::= declaration::ElementDecl (terms::Term)+ ;
ConditionalRule ::= condition::Term (thenRule::Rule)+ elseRule::Rule elseIfRule::ElseIf ;
IntegerConstant ::= value::Integer ;
Body ::= (declarations::Declaration)+ initialization::Initialization (rules::Rule)+ ;
Initialization ::= (rules::Rule)+ ;
--------------------metamodels::ATL.bgf--------------------
RealExp ::= realSymbol::Double ;
VariableDeclaration ::= PatternElement ;
 VariableDeclaration ::= RuleVariableDeclaration ;
 VariableDeclaration ::= TuplePart ;
 VariableDeclaration ::= Iterator ;
 VariableDeclaration ::= Parameter ;
 VariableDeclaration ::= id::String varName::String type::OclType initExpression::OclExpression letExp::LetExp baseExp::IterateExp (variableExp::VariableExp)+ ;
Attribute ::= name::String initExpression::OclExpression type::OclType ;
SequenceExp ::= (elements::OclExpression)+ ;
SequenceType ::= elementType::OclType ;
OperatorCallExp ::= (arguments::OclExpression)+ operationName::String ;
SetExp ::= (elements::OclExpression)+ ;
TuplePart ::= tuple::TupleExp ;
TupleTypeAttribute ::= type::OclType tupleType::TupleType name::String ;
NavigationOrAttributeCallExp ::= name::String ;
CalledRule ::= (parameters::Parameter)+ isEntrypoint::Boolean isEndpoint::Boolean ;
LibraryRef ::= unit::Unit name::String ;
BooleanExp ::= booleanSymbol::Boolean ;
IfStat ::= condition::OclExpression (thenStatements::Statement)+ (elseStatements::Statement)+ ;
OrderedSetType ::= elementType::OclType ;
IteratorExp ::= name::String ;
EnumLiteralExp ::= name::String ;
OclAnyType ::= name::String definitions::OclContextDefinition oclExpression::OclExpression operation::Operation mapType2::MapType attribute::Attribute mapType::MapType collectionTypes::CollectionType tupleTypeAttribute::TupleTypeAttribute variableDeclaration::VariableDeclaration ;
ExpressionStat ::= expression::OclExpression ;
StringExp ::= stringSymbol::String ;
OclModelElement ::= model::OclModel ;
Query ::= body::OclExpression (helpers::Helper)+ ;
Binding ::= value::OclExpression outPatternElement::OutPatternElement propertyName::String isAssignment::Boolean ;
Unit ::= Library ;
 Unit ::= Query ;
 Unit ::= Module ;
 Unit ::= (libraries::LibraryRef)+ name::String ;
IterateExp ::= result::VariableDeclaration ;
LetExp ::= variable::VariableDeclaration in_::OclExpression ;
RuleVariableDeclaration ::= rule::Rule ;
VariableExp ::= referredVariable::VariableDeclaration ;
IfExp ::= thenExpression::OclExpression condition::OclExpression elseExpression::OclExpression ;
MapElement ::= map::MapExp key::OclExpression value::OclExpression ;
MatchedRule ::= LazyMatchedRule ;
 MatchedRule ::= inPattern::InPattern (children::MatchedRule)+ superRule::MatchedRule isAbstract::Boolean isRefining::Boolean isNoDefault::Boolean ;
IntegerExp ::= integerSymbol::Integer ;
ForStat ::= iterator::Iterator collection::OclExpression (statements::Statement)+ ;
SetType ::= elementType::OclType ;
Library ::= (helpers::Helper)+ ;
BindingStat ::= source::OclExpression propertyName::String isAssignment::Boolean value::OclExpression ;
CollectionType ::= BagType ;
 CollectionType ::= OrderedSetType ;
 CollectionType ::= SequenceType ;
 CollectionType ::= SetType ;
 CollectionType ::= elementType::OclType ;
OperationCallExp ::= OperatorCallExp ;
 OperationCallExp ::= CollectionOperationCallExp ;
 OperationCallExp ::= (arguments::OclExpression)+ operationName::String ;
ActionBlock ::= rule::Rule (statements::Statement)+ ;
MapType ::= valueType::OclType keyType::OclType ;
CollectionOperationCallExp ::= (arguments::OclExpression)+ operationName::String ;
BagExp ::= (elements::OclExpression)+ ;
TupleExp ::= (tuplePart::TuplePart)+ ;
OclType ::= CollectionType ;
 OclType ::= Primitive ;
 OclType ::= OclAnyType ;
 OclType ::= TupleType ;
 OclType ::= OclModelElement ;
 OclType ::= MapType ;
 OclType ::= name::String definitions::OclContextDefinition oclExpression::OclExpression operation::Operation mapType2::MapType attribute::Attribute mapType::MapType collectionTypes::CollectionType tupleTypeAttribute::TupleTypeAttribute variableDeclaration::VariableDeclaration ;
OclModel ::= name::String metamodel::OclModel (elements::OclModelElement)+ (model::OclModel)+ ;
OclFeatureDefinition ::= feature::OclFeature context_::OclContextDefinition ;
ForEachOutPatternElement ::= collection::OclExpression iterator::Iterator ;
Iterator ::= loopExpr::LoopExp ;
Helper ::= query::Query library::Library definition::OclFeatureDefinition ;
LazyMatchedRule ::= isUnique::Boolean ;
Module ::= isRefining::Boolean (inModels::OclModel)+ (outModels::OclModel)+ (elements::ModuleElement)+ ;
InPattern ::= (elements::InPatternElement)+ rule::MatchedRule filter::OclExpression ;
OclContextDefinition ::= definition::OclFeatureDefinition context_::OclType ;
Parameter ::= operation::Operation ;
SimpleOutPatternElement ::= (reverseBindings::OclExpression)+ ;
OrderedSetExp ::= (elements::OclExpression)+ ;
Operation ::= name::String (parameters::Parameter)+ returnType::OclType body::OclExpression ;
OclUndefinedExp ::= type::OclType ifExp3::IfExp appliedProperty::PropertyCallExp collection::CollectionExp letExp::LetExp loopExp::LoopExp parentOperation::OperationCallExp initializedVariable::VariableDeclaration ifExp2::IfExp owningOperation::Operation ifExp1::IfExp owningAttribute::Attribute ;
SimpleInPatternElement ::= mapsTo::OutPatternElement inPattern::InPattern (models::OclModel)+ ;
TupleType ::= (attributes::TupleTypeAttribute)+ ;
BagType ::= elementType::OclType ;
SuperExp ::= type::OclType ifExp3::IfExp appliedProperty::PropertyCallExp collection::CollectionExp letExp::LetExp loopExp::LoopExp parentOperation::OperationCallExp initializedVariable::VariableDeclaration ifExp2::IfExp owningOperation::Operation ifExp1::IfExp owningAttribute::Attribute ;
OutPattern ::= rule::Rule (elements::OutPatternElement)+ ;
MapExp ::= (elements::MapElement)+ ;
--------------------metamodels::AWKPrograms.bgf--------------------
AWKProgram ::= name::String input::File output::File script::Script ;
Instruction ::= value::String i_action::Action ;
Rule ::= InitialRule ;
 Rule ::= FinalRule ;
 Rule ::= r_script::Script pattern::Pattern action::Action ;
File ::= name::String (records::Record)+ ;
Script ::= name::String (rules::Rule)+ ;
Field ::= value::String f_record::Record ;
Action ::= (instructions::Instruction)+ ;
FinalRule ::= r_script::Script pattern::Pattern action::Action ;
Record ::= r_file::File (fields::Field)+ ;
InitialRule ::= r_script::Script pattern::Pattern action::Action ;
Pattern ::= regularExpression::String ;
--------------------metamodels::Agate.bgf--------------------
ReferenceLogicalComponent ::= (composedOf::ReferenceLogicalComponent)+ ;
FunctionalRelation ::= necessaryObjectOF::OperationalFunction dependentObjectOF::OperationalFunction necessaryObjectOO::OrganizationObject dependentObjectOO::OrganizationObject necessaryObjectP::Package dependentObjectP::Package ;
TelecomOperator ::= contractType::String (interfaces::Interface)+ ;
Event ::= notice::String description::String sensitivity::Integer name::String comment::String isValidIn::OperationalContext isAssociatedWith::Stake ;
Threat ::= nature::String DCSSI::String (clarifies::Vulnerability)+ ;
Project ::= moi::Role moa::Role director::Role (defines::ProjectContextElement)+ (associatedISs::InformationSystem)+ ;
Protocol ::= isoLevel::Integer ;
Center ::= (deployedObjects::ReusableObject)+ ;
Procedure ::= (isCoveredByP::Package)+ (isCoveredByS::Service)+ ;
OperationalRequirement ::= criticality::Integer priority::String state::String (isCoveredBy::ArchitectureObject)+ (characterizes::ArchitectureObject)+ ;
Other ::= type::String ;
Activity ::= (isCoveredByP::Package)+ (isisCoveredByS::Service)+ ;
Risk ::= disponibilityLevel::Integer integrityLevel::Integer confidencialityLevel::Integer isCoveredByCR::CountermeasureRequirement isCoveredByAO::ArchitectureObject isCoveredByMO::MADIOSObject isCoveredByDR::DomainRelation relatesToRO::ReusableObject relatesToCO::CommunicationObject isGeneratedBy::Threat ;
ReferenceTechnicalComponent ::= (composedOf::ReferenceTechnicalComponent)+ ;
OperationalFunction ::= (composedOf::OperationalFunction)+ (isCoveredByP::Package)+ (isCoveredByS::Service)+ ;
Site ::= type::String localization::String (deployedObjects::ReusableObject)+ ;
Package ::= (subPackage::Package)+ (time::Role)+ (groupedObjects::ReusableObject)+ isCoveredByLC::LogicalComponent isCoveredByTC::TechnicalComponent (composedOf::Interface)+ ;
ProjectContextElement ::= type::String ;
CountermeasureRequirement ::= type::String residualVulnerability::String ;
ConfidentialityLevel ::= type::String ;
Traffic ::= sequence::String type::String interoperabilityLevel::Integer trafficClass::TrafficClass dataClass::DataClass receiverP::Package transmitterP::Package receiverIS::InformationSystem transmitterIS::InformationSystem receiverC::Center transmitterC::Center receiverTO::TelecomOperator transmitterTO::TelecomOperator receiverLC::LogicalComponent transmitterLC::LogicalComponent receiverTC::TechnicalComponent transmitterTC::TechnicalComponent ;
Standard ::= (caracterizeIC::InterfaceCharacteristic)+ (caracterizeTC::TechnicalComponent)+ (caracterizeLC::LogicalComponent)+ (caracterizeP::Package)+ (caracterizeR::Requirement)+ ;
OperationalContext ::= notice::String description::String sensitivity::Integer name::String comment::String isValidIn::OperationalContext isAssociatedWith::Stake ;
InformationSystem ::= nature::String version::String membershipCountry::String currentLocation::String startServiceDate::String stopServiceDate::String isGeneric::Boolean functionalDomain::String type::String (composedOf::InformationSystem)+ (associatedProjects::Project)+ (defines::Objective)+ (fulfills::Role)+ (fixes::OperationalContext)+ (usedBy::Actor)+ (interfaces::Interface)+ ;
TrafficClass ::= (traffic::Traffic)+ ;
InformationFlow ::= priority::Integer frequency::String media::String continuity::String myContainer::String time::String availabilityRatio::String integrity::Integer interoperabilityLevel::Integer mediumFlow::String maximumFlow::String duration::String unitMediumFlow::String averageEvent::String maximumFlowOverOneDuration::String transports::Information receiverP::Package transmitterP::Package receiverOO::OrganizationObject transmitterOO::OrganizationObject receiverOF::OperationalFunction transmitterOF::OperationalFunction ;
Interconnection ::= linkType::String between::Interface ;
Stake ::= type::String relativeDate::String unit::String date::String (events::Event)+ ;
Interface ::= (characteristics::InterfaceCharacteristic)+ (composedOf::Interface)+ ;
Objective ::= type::String priority::Integer indicator::String traceability::String ;
ServiceReferenceFrame ::= (composedOfRS::ReferenceService)+ (composedOfRLC::ReferenceLogicalComponent)+ ;
Dependence ::= type::String necessaryObjectS::Service dependentObjectS::Service necessaryObjectLC::LogicalComponent dependentObjectLC::LogicalComponent necessaryObjectP::Package dependentObjectP::Package necessaryObjectC::Center dependentObjectC::Center necessaryObjectIS::InformationSystem dependentObjectIS::InformationSystem ;
Role ::= type::String ;
Service ::= Statut::String isASpecializationOf::ReferenceService isCoveredBy::LogicalComponent ;
LogicalComponent ::= type::String statut::String (composedOf::LogicalComponent)+ isASpecializationOf::ReferenceLogicalComponent (interfaces::Interface)+ isCoveredBy::TechnicalComponent ;
PerformanceRequirement ::= criticality::Integer priority::String state::String (isCoveredBy::ArchitectureObject)+ (characterizes::ArchitectureObject)+ ;
Process ::= (isCoveredByP::Package)+ (isCoveredByS::Service)+ ;
Flow ::= unit::String ;
DataClass ::= notice::String description::String sensitivity::Integer name::String comment::String isValidIn::OperationalContext isAssociatedWith::Stake ;
Information ::= format::String storageSupport::String persistence::String DataType::DataClass ;
ReferenceService ::= (composedOf::ReferenceObject)+ ;
Operation ::= (isCoveredByP::Package)+ (isCoveredByS::Service)+ ;
TechnicalRequirement ::= criticality::Integer priority::String state::String (isCoveredBy::ArchitectureObject)+ (characterizes::ArchitectureObject)+ ;
SecurityRequirement ::= criticality::Integer priority::String state::String (isCoveredBy::ArchitectureObject)+ (characterizes::ArchitectureObject)+ ;
InteroperabilityRequirement ::= criticality::Integer priority::String state::String (isCoveredBy::ArchitectureObject)+ (characterizes::ArchitectureObject)+ ;
TechnicalComponentReferenceFrame ::= (composedOf::ReferenceTechnicalComponent)+ ;
TechnicalComponent ::= type::String cots::Boolean editor::Boolean constructor::Boolean version::String technology::String definedExtension::String statut::String (composedOf::TechnicalComponent)+ isASpecializationOf::ReferenceTechnicalComponent (interfaces::Interface)+ ;
--------------------metamodels::Amble.bgf--------------------
Process ::= minId::Integer maxId::Integer instancesNb::Integer (states::State)+ (transitions::Transition)+ initial::Action (variables::Variable)+ (connectedTo::Network)+ ;
Network ::= (channels::Channel)+ ;
Variable ::= type::String initValue::String ;
Transall ::= waitFor::Message ;
Trans ::= waitFor::Message ;
Message ::= name::String ;
Action ::= name::String ;
Guard ::= name::String ;
Strans ::= guard::Guard action::Action source::State target::State ;
Program ::= (processes::Process)+ (networks::Network)+ ;
Channel ::= (messages::Message)+ source::Process target::Process ;
State ::= isInitial::Boolean (incoming::Transition)+ (outgoing::Transition)+ ;
--------------------metamodels::AntScripts.bgf--------------------
Attribute ::= value::String ;
Project ::= (properties::Property)+ (targets::Target)+ defaultTarget::Target ;
Task ::= (attributes::Attribute)+ (elements::TaskElement)+ ;
Property ::= name::String value::String location::String refid::String resource::String file::String url::String environment::String classpath::String classpathref::String prefix::String ;
TaskParameter ::= (attributes::Attribute)+ (elements::TaskElement)+ ;
Target ::= if::String unless::String (tasks::Task)+ (depends::Target)+ ;
--------------------metamodels::AnyLogic.bgf--------------------
Control ::= Button ;
 Control ::= width::Integer height::Integer asObject::Boolean embeddedIcon::Boolean fillColor::Integer textColor::Integer enableExpression::String actionCode::String labelText::String font::Font ;
ActiveObjectClass ::= clientAreaTopLeft::Point presentationTopGroupPersistent::Boolean iconTopGroupPersistent::Boolean generic::Boolean genericParameters::String agent::Boolean environmentDefinesInitialLocation::Boolean (connectors::Connector)+ (embeddedObjects::EmbeddedObject)+ (shapes::Shape)+ ;
VisualModelElement ::= Connector ;
 VisualModelElement ::= EmbeddedObject ;
 VisualModelElement ::= Shape ;
 VisualModelElement ::= Control ;
 VisualModelElement ::= position::Point label::Point publicFlag::Boolean presentationFlag::Boolean showLabel::Boolean ;
ModelElement ::= VisualModelElement ;
 ModelElement ::= Model ;
 ModelElement ::= ActiveObjectClass ;
 ModelElement ::= Experiment ;
 ModelElement ::= id::Integer name::String excludeFromBuild::Boolean ;
Button ::= width::Integer height::Integer asObject::Boolean embeddedIcon::Boolean fillColor::Integer textColor::Integer enableExpression::String actionCode::String labelText::String font::Font ;
Point ::= x::Integer y::Integer ;
Font ::= name::String size::Integer style::Integer ;
Frame ::= x::Integer y::Integer width::Integer height::Integer ;
Text ::= color::Integer text::String font::Font alignment::String ;
Connector ::= sourceEmbeddedObject::EmbeddedObject sourceConnectableName::String targetEmbeddedObject::EmbeddedObject targetConnectableName::String (points::Point)+ ;
Parameter ::= name::String value::String ;
EmbeddedObject ::= presentation::EmbeddedObjectPresentation activeObjectClass::ActiveObjectClassRef genericParametersSubstitute::String (parameters::Parameter)+ ;
Model ::= engineVersion::Integer javaPackageName::String (activeObjectClasses::ActiveObjectClass)+ (experiments::Experiment)+ ;
SimulationExperiment ::= activeObjectClass::ActiveObjectClass clientAreaTopLeft::Point presentationTopGroupPersistent::Boolean iconTopGroupPersistent::Boolean frame::Frame commandLineArguments::String maximumMemory::Integer randomSeed::Boolean seedValue::Integer vmArgs::String absoluteAccuracy::Double relativeAccuracy::Double timeAccuracy::Double fixedTimeStep::Double (shapes::Shape)+ (controls::Control)+ (parameters::Parameter)+ enableAdaptiveFrameManagement::Boolean enableAntiAliasing::Boolean enablePanning::Boolean enableZoom::Boolean executionMode::String cpuRatio::String title::String framesPerSecond::String realTimeScale::String (uiProperties::Parameter)+ useCalendar::Boolean stopOption::String initialDate::String initialTime::String finalDate::String finalTime::String modelTimeUnit::String ;
EmbeddedObjectPresentation ::= asObject::Boolean embeddedIcon::Boolean rotation::Double ;
Shape ::= EmbeddedObjectPresentation ;
 Shape ::= Text ;
 Shape ::= asObject::Boolean embeddedIcon::Boolean rotation::Double ;
ActiveObjectClassRef ::= packageName::String className::String ;
--------------------metamodels::Architectural_Description.bgf--------------------
MainView ::= (isProjectedOnto::ArchitectureView)+ (consistsOf::ModelElement)+ ;
ArchitectureDescription ::= (selects::ArchitectureView)+ (organizedBy::ArchitectureView)+ ;
ArchitectureViewPoint ::= defines::MainView (views::ArchitectureView)+ ;
ArchitectureView ::= (selectedBy::ArchitectureDescription)+ (constituents::ModelElement)+ (conformsTo::ArchitectureViewPoint)+ ;
Architecture ::= describedBy::ArchitectureDescription ;
--------------------metamodels::AsmL.bgf--------------------
RangeSequence ::= minval::Term maxval::Term ;
EnumerateSet ::= (vals::Term)+ ;
SequenceType ::= of::Type ;
SkipRule ::= ownerBody::Body ;
Namespace ::= name::String ;
StringConstant ::= val::String ;
NewInstance ::= name::String (parameters::Term)+ ;
ForallRule ::= (expressions::InWhereHolds)+ doRule::Body ;
NamedType ::= name::String ;
VarDeclaration ::= isConstant::Boolean isDeclaration::Boolean isLocal::Boolean name::String type::Type ;
MethodInvocation ::= called::MethodCallTerm ;
Initially ::= id::VarTerm val::Term ;
UpdateFieldRule ::= path::VarTerm ;
StepUntilFixPoint ::= name::String ;
AsmLFile ::= (elements::AsmLElement)+ main::Main ;
ReturnRule ::= term::Term ;
Enumeration ::= name::String (enumerators::Enumerator)+ ;
TupletType ::= types::Type ;
EnumerateSequence ::= (vals::Term)+ ;
StepWhile ::= expression::Term ;
Enumerator ::= name::String value::Term ;
PredicateTerm ::= ForAllTerm ;
 PredicateTerm ::= ExistsTerm ;
 PredicateTerm ::= AnyIn ;
 PredicateTerm ::= (expressions::InWhereHolds)+ ;
IntegerConstant ::= val::Integer ;
TulpletTerm ::= terms::Term ;
StepForEach ::= (expressions::InWhereHolds)+ ;
AddRule ::= val::Term set::VarTerm ;
SetType ::= of::Type ;
UpdateVarRule ::= updateVar::Term ;
Main ::= mainFile::AsmLFile (initialisations::Initially)+ ;
Class ::= name::String isAbstract::Boolean superClassName::String (varOrMethod::VarOrMethod)+ ;
MapType ::= ofType::Type toType::Type ;
ElseIf ::= condition::Term thenRule::Body elseRule::Body elseIfRule::ElseIf ;
AlgorithmSet ::= (expressions::InWhereHolds)+ ;
VarTerm ::= name::String ;
Structure ::= name::String (varOrCase::VarOrCase)+ superStructureName::String ;
ChooseRule ::= (expressions::InWhereHolds)+ ifChoosenRules::Body ifNotChoosenRule::Body ;
StepUntil ::= expression::Term ;
InWhereHolds ::= var::Term in::Term where::Term holds::Term ;
AnyIn ::= (expressions::InWhereHolds)+ ;
Case ::= name::String (variables::VarDeclaration)+ ;
UpdateMapRule ::= updateMap::VarTerm (parameters::Term)+ ;
BooleanConstant ::= val::Boolean ;
MethodCallTerm ::= NewInstance ;
 MethodCallTerm ::= name::String (parameters::Term)+ ;
VarOrMethod ::= Method ;
 VarOrMethod ::= ownerClass::Class ;
Parameter ::= name::String type::Type ownerMethod::Method ;
ExistsTerm ::= isUnique::Boolean ;
MapTerm ::= ofTerm::Term toTerm::Term separator::String ;
RangeSet ::= minval::Term maxval::Term ;
ForAllTerm ::= (expressions::InWhereHolds)+ ;
Operator ::= opName::String leftExp::Term rightExp::Term ;
ConditionalRule ::= ElseIf ;
 ConditionalRule ::= condition::Term thenRule::Body elseRule::Body elseIfRule::ElseIf ;
Body ::= (rules::Rule)+ ;
Method ::= isAbstract::Boolean isShared::Boolean isEntryPoint::Boolean isOverride::Boolean returnType::Type (parameters::Parameter)+ ;
RemoveRule ::= val::Term set::VarTerm ;
--------------------metamodels::Automaton.bgf--------------------
Transition ::= letter::String source::State target::State ;
State ::= name::String combination::State ;
FiniteAutomaton ::= (alphabet::String)+ (transitionSet::Transition)+ initialState::State (finalStateSet::State)+ (StateSet::State)+ ;
--------------------metamodels::BMM.bgf--------------------
BusinessRule ::= (businessRuleGuidesBusinessProcess::BusinessProcess)+ ;
FixedAsset ::= Offering ;
 FixedAsset ::= (fixedAssetProvidesResource::Resource)+ ;
InfluencerCategory ::= (influencerCategoryCategorizesInfluencer::Influencer)+ ;
Objective ::= (objectiveQuantifiesGoal::Goal)+ ;
Tactic ::= (tacticImplementsStrategy::Strategy)+ (tacticEffectsEnforcementLevelOfBusinessRule::BusinessRule)+ ;
DesiredResult ::= Goal ;
 DesiredResult ::= Objective ;
 DesiredResult ::= (broaderDesiredResultIncludesMoreSpecificDesiredResult::DesiredResult)+ ;
OrganizationUnit ::= (organizationUnitDefinesEnd::End)+ (organizationUnitEstablishesMeans::Means)+ (organizationUnitIsResponsibleForAsset::Asset)+ (organizationUnitIsResponsibleForLiability::Liability)+ (organizationUnitRecognizesInfluencer::Influencer)+ (organizationUnitActAsInfluencingOrganization::InfluencingOrganization)+ (organizationUnitMakesAssessment::Assessment)+ (organizationUnitIsResponsibleForBusinessProcess::BusinessProcess)+ ;
Goal ::= goalAmplidfiesVision::Vision ;
Strategy ::= (strategyIsAComponentOfThePlanForMission::Mission)+ (strategyDeterminesOrganizationUnit::OrganizationUnit)+ ;
BusinessPolicy ::= (businessPolicyIsBasisForBusinessRule::BusinessRule)+ (broaderBusinessPolicyIncludesMoreSpecificBusinessPolicy::BusinessPolicy)+ (businessPolicyGovernsBusinessProcess::BusinessProcess)+ ;
OrganizationCategory ::= (organizationCategoryCategorizesInfluencingOrganization::InfluencingOrganization)+ ;
Risk ::= (potentialImpactProvidesImpetusForDirective::Directive)+ ;
Directive ::= BusinessRule ;
 Directive ::= BusinessPolicy ;
 Directive ::= (directiveGovernsCourseOfAction::CourseOfAction)+ (directiveIsSourceOfCourseOfAction::CourseOfAction)+ (directiveActAsRegulation::Regulation)+ (directiveSupportsAchievementOfDesiredResult::DesiredResult)+ (directiveGovernsUseOfAsset::Asset)+ ;
BusinessProcess ::= (businessProcessRealizesCourseOfAction::CourseOfAction)+ (businessProcessManagerAsset::Asset)+ (businessProcessDeliversOfeering::Offering)+ ;
PotentialReward ::= (potentialImpactProvidesImpetusForDirective::Directive)+ ;
Liability ::= (liabilityClaimsResource::Resource)+ ;
Mission ::= Strategy ;
 Mission ::= missionMakesOperativeVision::Vision ;
CourseOfAction ::= Tactic ;
 CourseOfAction ::= (enablingCourseofActionEnablesEnabledCourseOfAction::CourseOfAction)+ (broaderCourseofActionIncludesMoreSpecificCourseOfAction::CourseOfAction)+ courseOfActionChanneIsEffortsTowardsDesiredResult::DesiredResult (courseOfActionDeployAsset::Asset)+ (courseOfActionDefiensOffering::Offering)+ ;
Offering ::= (offeringRequiresResource::Resource)+ (offeringUsesFixedAsset::FixedAsset)+ ;
MotivationElement ::= Assessment ;
 MotivationElement ::= End ;
 MotivationElement ::= Influencer ;
 MotivationElement ::= InfluencingOrganization ;
 MotivationElement ::= Means ;
 MotivationElement ::= PotentialImpact ;
 MotivationElement ::= AssessmentCategory ;
 MotivationElement ::= InfluencerCategory ;
 MotivationElement ::= OrganizationCategory ;
 MotivationElement ::= OrganizationUnit ;
 MotivationElement ::= BusinessProcess ;
 MotivationElement ::= Asset ;
 MotivationElement ::= Liability ;
 MotivationElement ::= name::String description::String ;
InfluencingOrganization ::= (influencingOrganizationIsSourceOfInfluencer::Influencer)+ ;
PotentialImpact ::= PotentialReward ;
 PotentialImpact ::= Risk ;
 PotentialImpact ::= (potentialImpactProvidesImpetusForDirective::Directive)+ ;
Assessment ::= (usingAssessmentUsesUsedAssessment::Assessment)+ (assessmentProvidesImpetusForDirective::Directive)+ (assessmentIdentifiesPotentialImpact::PotentialImpact)+ (assessmentJudgmentOfInfluencer::Influencer)+ ;
AssessmentCategory ::= (assessmentCategoryCategoriesAssessment::Assessment)+ ;
--------------------metamodels::BPEL.bgf--------------------
Condition ::= body::EJavaObject expressionLanguage::EString opaque::EBooleanObject ;
Property ::= qName::QName name::EString type::EJavaObject ID::EString ;
ExtensibilityElement ::= Property ;
 ExtensibilityElement ::= PropertyAlias ;
 ExtensibilityElement ::= messagepropertiesQuery ;
 ExtensibilityElement ::= PartnerLinkType ;
 ExtensibilityElement ::= Role ;
 ExtensibilityElement ::= Expression ;
 ExtensibilityElement ::= UnknownExtensibilityElement ;
 ExtensibilityElement ::= XSDSchemaExtensibilityElement ;
 ExtensibilityElement ::= required::EBoolean elementType::QName ;
XSDDisallowedSubstitutions ::= (extension::ε) | (substitution::ε) | (all::ε) | (restriction::ε) ;
XSDNumericFacet ::= value::EBoolean ;
PartnerLinks ::= (children::PartnerLink)+ ;
Branches ::= countCompletedBranchesOnly::EBooleanObject ;
XSDComplexFinal ::= (all::ε) | (restriction::ε) | (extension::ε) ;
FaultHandler ::= (catch::Catch)+ catchAll::CatchAll ;
Message ::= qName::QName undefined::EBoolean proxy::EBoolean resourceURI::EString (eParts::Part)+ ;
XSDWhiteSpace ::= (replace::ε) | (collapse::ε) | (preserve::ε) ;
Targets ::= (children::Target)+ joinCondition::Condition ;
XSDIdentityConstraintCategory ::= (keyref::ε) | (unique::ε) | (key::ε) ;
Sequence ::= (activities::Activity)+ ;
FromPart ::= part::EString to::To ;
OnEvent ::= activity::Activity variable::Variable partnerLink::PartnerLink correlations::Correlations operation::Operation portType::PortType messageType::Message (fromPart::FromPart)+ correlationSets::CorrelationSets ;
PartnerActivity ::= Invoke ;
 PartnerActivity ::= Receive ;
 PartnerActivity ::= Reply ;
 PartnerActivity ::= partnerLink::PartnerLink correlations::Correlations portType::PortType operation::Operation ;
XSDComplexTypeDefinition ::= derivationMethod::XSDDerivationMethod (final::XSDComplexFinal)+ abstract::EBoolean contentTypeCategory::XSDContentTypeCategory (prohibitedSubstitutions::XSDProhibitedSubstitutions)+ (lexicalFinal::XSDComplexFinal)+ (block::XSDProhibitedSubstitutions)+ mixed::EBoolean contentAnnotation::XSDAnnotation baseTypeDefinition::XSDTypeDefinition content::XSDComplexTypeContent contentType::XSDComplexTypeContent (attributeUses::XSDAttributeUse)+ (attributeContents::XSDAttributeGroupContent)+ attributeWildcard::XSDWildcard attributeWildcardContent::XSDWildcard rootTypeDefinition::XSDTypeDefinition syntheticParticle::XSDParticle syntheticWildcard::XSDWildcard ;
CorrelationSets ::= (children::CorrelationSet)+ ;
CorrelationPattern ::= (outin::ε) | (in::ε) | (out::ε) ;
From ::= opaque::EBooleanObject endpointReference::EndpointReferenceRole literal::EString unsafeLiteral::EBooleanObject expression::Expression serviceRef::ServiceRef type::XSDTypeDefinition ;
Reply ::= faultName::QName variable::Variable (toPart::ToPart)+ ;
XSDMinLengthFacet ::= value::EInt ;
XSDSimpleTypeDefinition ::= variety::XSDVariety (final::XSDSimpleFinal)+ (lexicalFinal::XSDSimpleFinal)+ (validFacets::EString)+ (contents::XSDSimpleTypeDefinition)+ (facetContents::XSDConstrainingFacet)+ (facets::XSDConstrainingFacet)+ (memberTypeDefinitions::XSDSimpleTypeDefinition)+ (fundamentalFacets::XSDFundamentalFacet)+ baseTypeDefinition::XSDSimpleTypeDefinition primitiveTypeDefinition::XSDSimpleTypeDefinition itemTypeDefinition::XSDSimpleTypeDefinition rootTypeDefinition::XSDSimpleTypeDefinition minFacet::XSDMinFacet maxFacet::XSDMaxFacet maxInclusiveFacet::XSDMaxInclusiveFacet minInclusiveFacet::XSDMinInclusiveFacet minExclusiveFacet::XSDMinExclusiveFacet maxExclusiveFacet::XSDMaxExclusiveFacet lengthFacet::XSDLengthFacet whiteSpaceFacet::XSDWhiteSpaceFacet (enumerationFacets::XSDEnumerationFacet)+ (patternFacets::XSDPatternFacet)+ cardinalityFacet::XSDCardinalityFacet numericFacet::XSDNumericFacet maxLengthFacet::XSDMaxLengthFacet minLengthFacet::XSDMinLengthFacet totalDigitsFacet::XSDTotalDigitsFacet fractionDigitsFacet::XSDFractionDigitsFacet orderedFacet::XSDOrderedFacet boundedFacet::XSDBoundedFacet effectiveMaxFacet::XSDMaxFacet effectiveWhiteSpaceFacet::XSDWhiteSpaceFacet effectiveMaxLengthFacet::XSDMaxLengthFacet effectiveFractionDigitsFacet::XSDFractionDigitsFacet effectivePatternFacet::XSDPatternFacet effectiveEnumerationFacet::XSDEnumerationFacet effectiveTotalDigitsFacet::XSDTotalDigitsFacet effectiveMinLengthFacet::XSDMinLengthFacet effectiveLengthFacet::XSDLengthFacet effectiveMinFacet::XSDMinFacet (syntheticFacets::XSDFacet)+ ;
BindingOutput ::= name::EString eOutput::Output ;
TerminationHandler ::= activity::Activity ;
Throw ::= faultName::QName faultVariable::Variable ;
Receive ::= createInstance::EBooleanObject variable::Variable (fromPart::FromPart)+ ;
PartnerLink ::= name::EString myRole::Role partnerRole::Role PartnerLinkType::PartnerLinkType initializePartnerRole::EBooleanObject ;
BooleanExpression ::= body::EJavaObject expressionLanguage::EString opaque::EBooleanObject ;
XSDProcessContents ::= (skip::ε) | (lax::ε) | (strict::ε) ;
XSDInclude ::= annotation::XSDAnnotation ;
XSDAttributeGroupDefinition ::= attributeGroupDefinitionReference::EBoolean annotation::XSDAnnotation (contents::XSDAttributeGroupContent)+ (attributeUses::XSDAttributeUse)+ attributeWildcardContent::XSDWildcard attributeWildcard::XSDWildcard resolvedAttributeGroupDefinition::XSDAttributeGroupDefinition syntheticWildcard::XSDWildcard ;
ServiceRef ::= referenceScheme::EString value::EJavaObject ;
BindingFault ::= name::EString eFault::Fault ;
Expression ::= BooleanExpression ;
 Expression ::= Condition ;
 Expression ::= Branches ;
 Expression ::= body::EJavaObject expressionLanguage::EString opaque::EBooleanObject ;
XSDAnnotation ::= (applicationInformation::XSDDOMElement)+ (userInformation::XSDDOMElement)+ (attributes::DOMAttr)+ ;
XSDAttributeUseCategory ::= (prohibited::ε) | (optional::ε) | (required::ε) ;
Target ::= Link::Link activity::Activity ;
XSDNotationDeclaration ::= systemIdentifier::EString publicIdentifier::EString annotation::XSDAnnotation ;
XSDImport ::= namespace::EString annotation::XSDAnnotation ;
EndpointReferenceRole ::= (partnerRole::ε) | (myRole::ε) ;
Input ::= name::EString eMessage::Message ;
XSDSchema ::= document::XSDDOMDocument schemaLocation::EString targetNamespace::EString attributeFormDefault::XSDForm elementFormDefault::XSDForm (finalDefault::XSDProhibitedSubstitutions)+ (blockDefault::XSDDisallowedSubstitutions)+ version::EString (contents::XSDSchemaContent)+ (elementDeclarations::XSDElementDeclaration)+ (attributeDeclarations::XSDAttributeDeclaration)+ (attributeGroupDefinitions::XSDAttributeGroupDefinition)+ (typeDefinitions::XSDTypeDefinition)+ (modelGroupDefinitions::XSDModelGroupDefinition)+ (identityConstraintDefinitions::XSDIdentityConstraintDefinition)+ (notationDeclarations::XSDNotationDeclaration)+ (annotations::XSDAnnotation)+ (allDiagnostics::XSDDiagnostic)+ (referencingDirectives::XSDSchemaDirective)+ rootVersion::XSDSchema originalVersion::XSDSchema (incorporatedVersions::XSDSchema)+ schemaForSchema::XSDSchema ;
XSDFractionDigitsFacet ::= value::EInt ;
XSDWildcard ::= namespaceConstraintCategory::XSDNamespaceConstraintCategory (namespaceConstraint::EString)+ processContents::XSDProcessContents (lexicalNamespaceConstraint::EString)+ annotation::XSDAnnotation (annotations::XSDAnnotation)+ ;
Port ::= name::EString eBinding::Binding ;
CorrelationSet ::= name::EString (properties::Property)+ ;
XSDSchemaExtensibilityElement ::= schema::XSDSchema ;
Variable ::= name::EString messageType::Message XSDElement::XSDElementDeclaration type::XSDTypeDefinition from::From ;
To ::= From ;
 To ::= variable::Variable part::Part partnerLink::PartnerLink property::Property query::BPELQuery ;
Catch ::= faultName::QName faultVariable::Variable activity::Activity faultMessageType::Message faultElement::XSDElementDeclaration ;
Documentation ::= lang::EString source::EString value::EString ;
Links ::= (children::Link)+ ;
Sources ::= (children::Source)+ ;
Invoke ::= outputVariable::Variable inputVariable::Variable compensationHandler::CompensationHandler faultHandler::FaultHandler (toPart::ToPart)+ (fromPart::FromPart)+ ;
Role ::= ID::EString name::EString portType::EJavaObject ;
Service ::= qName::QName undefined::EBoolean proxy::EBoolean resourceURI::EString (ePorts::Port)+ ;
Copy ::= to::To from::From keepSrcElementName::EBooleanObject ;
Wait ::= for::Expression until::Expression ;
XSDMaxExclusiveFacet ::= value::Value inclusive::EBoolean exclusive::EBoolean ;
Otherwise ::= activity::Activity ;
XSDAttributeUse ::= required::EBoolean value::Value constraint::XSDConstraint use::XSDAttributeUseCategory lexicalValue::EString attributeDeclaration::XSDAttributeDeclaration content::XSDAttributeDeclaration ;
XSDOrderedFacet ::= value::XSDOrdered ;
OnAlarm ::= activity::Activity for::Expression until::Expression repeatEvery::Expression ;
XSDCardinalityFacet ::= value::XSDCardinality ;
Iterator ::= finalCounterValue::Expression startCounterValue::Expression ;
BPELExtensibleElement ::= Process ;
 BPELExtensibleElement ::= PartnerLink ;
 BPELExtensibleElement ::= FaultHandler ;
 BPELExtensibleElement ::= Activity ;
 BPELExtensibleElement ::= CorrelationSet ;
 BPELExtensibleElement ::= Link ;
 BPELExtensibleElement ::= Catch ;
 BPELExtensibleElement ::= Case ;
 BPELExtensibleElement ::= OnAlarm ;
 BPELExtensibleElement ::= Copy ;
 BPELExtensibleElement ::= Extension ;
 BPELExtensibleElement ::= CompensationHandler ;
 BPELExtensibleElement ::= To ;
 BPELExtensibleElement ::= OnMessage ;
 BPELExtensibleElement ::= Correlation ;
 BPELExtensibleElement ::= EventHandler ;
 BPELExtensibleElement ::= Source ;
 BPELExtensibleElement ::= Target ;
 BPELExtensibleElement ::= PartnerLinks ;
 BPELExtensibleElement ::= Variables ;
 BPELExtensibleElement ::= CorrelationSets ;
 BPELExtensibleElement ::= Links ;
 BPELExtensibleElement ::= CatchAll ;
 BPELExtensibleElement ::= Correlations ;
 BPELExtensibleElement ::= Variable ;
 BPELExtensibleElement ::= Otherwise ;
 BPELExtensibleElement ::= OnEvent ;
 BPELExtensibleElement ::= Targets ;
 BPELExtensibleElement ::= Sources ;
 BPELExtensibleElement ::= Extensions ;
 BPELExtensibleElement ::= TerminationHandler ;
 BPELExtensibleElement ::= Then ;
 BPELExtensibleElement ::= ElseIf ;
 BPELExtensibleElement ::= Else ;
 BPELExtensibleElement ::= From ;
 BPELExtensibleElement ::= documentation::Documentation ;
XSDCompositor ::= (all::ε) | (choice::ε) | (sequence::ε) ;
XSDAttributeDeclaration ::= attributeDeclarationReference::EBoolean annotation::XSDAnnotation anonymousTypeDefinition::XSDSimpleTypeDefinition typeDefinition::XSDSimpleTypeDefinition resolvedAttributeDeclaration::XSDAttributeDeclaration ;
XSDOrdered ::= (total::ε) | (partial::ε) ;
BindingOperation ::= name::EString eOperation::Operation eBindingInput::BindingInput eBindingOutput::BindingOutput (eBindingFaults::BindingFault)+ ;
CompletionCondition ::= branches::Branches ;
UnknownExtensibilityAttribute ::= (children::UnknownExtensibilityElement)+ ;
PortType ::= qName::QName undefined::EBoolean proxy::EBoolean resourceURI::EString (eOperations::Operation)+ ;
XSDSimpleFinal ::= (list::ε) | (restriction::ε) | (all::ε) | (union::ε) ;
BPELImport ::= namespace::EString location::EString importType::EString ;
XSDEnumerationFacet ::= (value::Value)+ ;
XSDRedefine ::= (annotations::XSDAnnotation)+ (contents::XSDRedefineContent)+ ;
XSDMaxLengthFacet ::= value::EInt ;
XSDMinInclusiveFacet ::= value::Value inclusive::EBoolean exclusive::EBoolean ;
Definition ::= targetNamespace::EString location::EString qName::QName encoding::EString (eImports::WSDLImport)+ eTypes::Types (eMessages::Message)+ (ePortTypes::PortType)+ (eBindings::Binding)+ (eServices::Service)+ (eNamespaces::Namespace)+ ;
Rethrow ::= name::EString suppressJoinFailure::EBooleanObject targets::Targets sources::Sources ;
XSDWhiteSpaceFacet ::= value::XSDWhiteSpace ;
OpaqueActivity ::= name::EString suppressJoinFailure::EBooleanObject targets::Targets sources::Sources ;
EventHandler ::= (alarm::OnAlarm)+ (events::OnEvent)+ ;
CompensationHandler ::= activity::Activity ;
messagepropertiesQuery ::= queryLanguage::EString value::EString ;
XSDElementDeclaration ::= nillable::EBoolean (disallowedSubstitutions::XSDDisallowedSubstitutions)+ (substitutionGroupExclusions::XSDSubstitutionGroupExclusions)+ abstract::EBoolean (lexicalFinal::XSDProhibitedSubstitutions)+ (block::XSDDisallowedSubstitutions)+ elementDeclarationReference::EBoolean circular::EBoolean annotation::XSDAnnotation anonymousTypeDefinition::XSDTypeDefinition typeDefinition::XSDTypeDefinition (identityConstraintDefinitions::XSDIdentityConstraintDefinition)+ resolvedElementDeclaration::XSDElementDeclaration substitutionGroupAffiliation::XSDElementDeclaration (substitutionGroup::XSDElementDeclaration)+ ;
XSDConstraint ::= (fixed::ε) | (default::ε) ;
BindingInput ::= name::EString eInput::Input ;
Binding ::= qName::QName undefined::EBoolean proxy::EBoolean resourceURI::EString ePortType::PortType (eBindingOperations::BindingOperation)+ ;
RepeatUntil ::= activity::Activity condition::Condition ;
XSDBoundedFacet ::= value::EBoolean ;
Correlation ::= initiate::EString pattern::CorrelationPattern set::CorrelationSet ;
XSDVariety ::= (union::ε) | (list::ε) | (atomic::ε) ;
XSDModelGroup ::= compositor::XSDCompositor annotation::XSDAnnotation (contents::XSDParticle)+ (particles::XSDParticle)+ ;
PropertyAlias ::= messageType::EJavaObject part::EString propertyName::EJavaObject ID::EString wsdlPart::Part query::messagepropertiesQuery type::EJavaObject XSDElement::EJavaObject ;
Types ::= (eExtensibilityElements::ExtensibilityElement)+ ;
Else ::= activity::Activity ;
Compensate ::= scope::EObject ;
Variables ::= (children::Variable)+ ;
ElseIf ::= condition::Condition activity::Activity ;
XSDTotalDigitsFacet ::= value::EInt ;
Switch ::= (cases::Case)+ otherwise::Otherwise ;
BPELQuery ::= value::EString queryLanguage::EString ;
Correlations ::= (children::Correlation)+ ;
Case ::= activity::Activity condition::Condition ;
XSDPatternFacet ::= (value::EString)+ ;
Process ::= name::EString targetNamespace::EString queryLanguage::EString expressionLanguage::EString suppressJoinFailure::EBooleanObject variableAccessSerializable::EBooleanObject partnerLinks::PartnerLinks variables::Variables activity::Activity faultHandlers::FaultHandler eventHandlers::EventHandler correlationSets::CorrelationSets (imports::BPELImport)+ extensions::Extensions exitOnStandardFault::EBooleanObject ;
XSDParticle ::= minOccurs::EInt maxOccurs::EInt content::XSDParticleContent term::XSDTerm ;
ExtensionActivity ::= name::EString suppressJoinFailure::EBooleanObject targets::Targets sources::Sources ;
Flow ::= (activities::Activity)+ links::Links completionCondition::CompletionCondition ;
XSDNamespaceConstraintCategory ::= (set::ε) | (not::ε) | (any::ε) ;
XSDDiagnosticSeverity ::= (fatal::ε) | (warning::ε) | (error::ε) | (information::ε) ;
ForEach ::= parallel::EBooleanObject counterName::Variable completionCondition::CompletionCondition iterator::Iterator activity::Activity ;
Operation ::= style::OperationType name::EString undefined::EBoolean proxy::EBoolean resourceURI::EString eInput::Input eOutput::Output (eFaults::Fault)+ (eParameterOrdering::Part)+ ;
Pick ::= createInstance::EBooleanObject (messages::OnMessage)+ (alarm::OnAlarm)+ ;
XSDDerivationMethod ::= (extension::ε) | (restriction::ε) ;
Exit ::= name::EString suppressJoinFailure::EBooleanObject targets::Targets sources::Sources ;
Then ::= activity::Activity ;
If ::= condition::Condition then::Then (elseIf::ElseIf)+ else::Else ;
Namespace ::= URI::EString prefix::EString ;
Source ::= Link::Link activity::Activity transitionCondition::Condition ;
XSDIdentityConstraintDefinition ::= identityConstraintCategory::XSDIdentityConstraintCategory annotation::XSDAnnotation referencedKey::XSDIdentityConstraintDefinition selector::XSDXPathDefinition (fields::XSDXPathDefinition)+ ;
Validate ::= (variables::Variable)+ ;
Extensions ::= (children::Extension)+ ;
Scope ::= isolated::EBooleanObject faultHandlers::FaultHandler compensationHandler::CompensationHandler activity::Activity variables::Variables correlationSets::CorrelationSets eventHandlers::EventHandler partnerLinks::PartnerLinks terminationHandler::TerminationHandler ;
XSDDiagnostic ::= severity::XSDDiagnosticSeverity message::EString locationURI::EString line::EInt column::EInt node::DOMNode annotationURI::EString key::EString (substitutions::EString)+ (components::XSDConcreteComponent)+ primaryComponent::XSDConcreteComponent ;
Activity ::= PartnerActivity ;
 Activity ::= Exit ;
 Activity ::= Throw ;
 Activity ::= Wait ;
 Activity ::= Empty ;
 Activity ::= Sequence ;
 Activity ::= Switch ;
 Activity ::= While ;
 Activity ::= Pick ;
 Activity ::= Flow ;
 Activity ::= Assign ;
 Activity ::= Scope ;
 Activity ::= Compensate ;
 Activity ::= Rethrow ;
 Activity ::= ExtensionActivity ;
 Activity ::= OpaqueActivity ;
 Activity ::= ForEach ;
 Activity ::= RepeatUntil ;
 Activity ::= Validate ;
 Activity ::= If ;
 Activity ::= Reply ;
 Activity ::= name::EString suppressJoinFailure::EBooleanObject targets::Targets sources::Sources ;
ToPart ::= part::EString from::From ;
Empty ::= name::EString suppressJoinFailure::EBooleanObject targets::Targets sources::Sources ;
WSDLImport ::= namespaceURI::EString locationURI::EString eDefinition::Definition eSchema::XSDSchema ;
XSDCardinality ::= (countablyInfinite::ε) | (finite::ε) ;
Output ::= name::EString eMessage::Message ;
Extension ::= namespace::EString mustUnderstand::EBooleanObject ;
XSDSubstitutionGroupExclusions ::= (restriction::ε) | (extension::ε) ;
UnknownExtensibilityElement ::= UnknownExtensibilityAttribute ;
 UnknownExtensibilityElement ::= (children::UnknownExtensibilityElement)+ ;
PartnerLinkType ::= name::EString ID::EString (role::Role)+ ;
Link ::= name::EString (sources::Source)+ (targets::Target)+ ;
XSDXPathVariety ::= (field::ε) | (selector::ε) ;
Part ::= name::EString elementName::QName typeName::QName typeDefinition::XSDTypeDefinition elementDeclaration::XSDElementDeclaration eMessage::Message ;
XSDModelGroupDefinition ::= modelGroupDefinitionReference::EBoolean annotation::XSDAnnotation modelGroup::XSDModelGroup resolvedModelGroupDefinition::XSDModelGroupDefinition ;
While ::= activity::Activity condition::Condition ;
Assign ::= (copy::Copy)+ validate::EBooleanObject ;
XSDProhibitedSubstitutions ::= (extension::ε) | (restriction::ε) | (all::ε) ;
XSDForm ::= (unqualified::ε) | (qualified::ε) ;
OnMessage ::= variable::Variable activity::Activity portType::PortType partnerLink::PartnerLink correlations::Correlations operation::Operation (fromPart::FromPart)+ ;
XSDContentTypeCategory ::= (elementOnly::ε) | (mixed::ε) | (simple::ε) | (empty::ε) ;
XSDLengthFacet ::= value::EInt ;
XSDXPathDefinition ::= variety::XSDXPathVariety value::EString annotation::XSDAnnotation ;
CatchAll ::= activity::Activity ;
XSDMaxInclusiveFacet ::= value::Value inclusive::EBoolean exclusive::EBoolean ;
Fault ::= name::EString eMessage::Message ;
XSDMinExclusiveFacet ::= value::Value inclusive::EBoolean exclusive::EBoolean ;
--------------------metamodels::BPMN.bgf--------------------
Group ::= (activities::Activity)+ ;
SequenceEdge ::= graph::Graph isDefault::Boolean source::Vertex target::Vertex ;
TextAnnotation ::= (associations::Association)+ artifactsContainer::ArtifactsContainer ;
Pool ::= (lanes::Lane)+ bpmnDiagram::BpmnDiagram ;
DirectionType ::= (Both::ε) | (From::ε) | (To::ε) | (None::ε) ;
IdentifiableNode ::= Vertex ;
 IdentifiableNode ::= Graph ;
 IdentifiableNode ::= (associations::Association)+ ;
Identifiable ::= IdentifiableNode ;
 Identifiable ::= Artifact ;
 Identifiable ::= BpmnDiagram ;
 Identifiable ::= Lane ;
 Identifiable ::= MessagingEdge ;
 Identifiable ::= SequenceEdge ;
 Identifiable ::= iD::ID ;
Artifact ::= DataObject ;
 Artifact ::= Group ;
 Artifact ::= TextAnnotation ;
 Artifact ::= (associations::Association)+ artifactsContainer::ArtifactsContainer ;
SubProcess ::= (eventHandlers::Activity)+ isTransaction::Boolean ;
Activity ::= SubProcess ;
 Activity ::= (orderedMessages::MessagingEdge)+ (incomingMessages::MessagingEdge)+ (outgoingMessages::MessagingEdge)+ (groups::Group)+ activityType::ActivityType eventHandlerFor::SubProcess lane::Lane looping::Boolean ;
Graph ::= Pool ;
 Graph ::= SubProcess ;
 Graph ::= (vertices::Vertex)+ (sequenceEdges::SequenceEdge)+ ;
Lane ::= (activities::Activity)+ pool::Pool ;
DataObject ::= (associations::Association)+ artifactsContainer::ArtifactsContainer ;
ActivityType ::= (SubProcess::ε) | (EventEndMultiple::ε) | (EventEndMessage::ε) | (EventIntermediateMessage::ε) | (EventStartMultiple::ε) | (EventIntermediateMultiple::ε) | (GatewayParallel::ε) | (EventStartTimer::ε) | (EventStartEmpty::ε) | (EventIntermediateCancel::ε) | (EventEndError::ε) | (EventStartRule::ε) | (EventEndTerminate::ε) | (EventStartLink::ε) | (EventIntermediateLink::ε) | (EventEndCancel::ε) | (EventEndLink::ε) | (EventIntermediateEmpty::ε) | (EventIntermediateCompensation::ε) | (Task::ε) | (GatewayDataBasedExclusive::ε) | (GatewayComplex::ε) | (EventEndEmpty::ε) | (EventIntermediateError::ε) | (EventIntermediateTimer::ε) | (EventEndCompensation::ε) | (EventStartMessage::ε) | (GatewayDataBasedInclusive::ε) | (GatewayEventBasedExclusive::ε) | (EventIntermediateRule::ε) ;
NamedBpmnObject ::= ArtifactsContainer ;
 NamedBpmnObject ::= Activity ;
 NamedBpmnObject ::= Artifact ;
 NamedBpmnObject ::= Lane ;
 NamedBpmnObject ::= MessagingEdge ;
 NamedBpmnObject ::= Pool ;
 NamedBpmnObject ::= SequenceEdge ;
 NamedBpmnObject ::= documentation::String name::String ncname::String ;
Vertex ::= Activity ;
 Vertex ::= (outgoingEdges::SequenceEdge)+ (incomingEdges::SequenceEdge)+ graph::Graph ;
BpmnDiagram ::= (pools::Pool)+ (messages::MessagingEdge)+ author::String title::String ;
MessagingEdge ::= bpmnDiagram::BpmnDiagram source::Activity target::Activity ;
Association ::= direction::DirectionType source::Artifact target::IdentifiableNode ;
ArtifactsContainer ::= BpmnDiagram ;
 ArtifactsContainer ::= Graph ;
 ArtifactsContainer ::= (artifacts::Artifact)+ ;
--------------------metamodels::Book.bgf--------------------
Chapter ::= title::String nbPages::Integer author::String book::Book ;
Book ::= title::String (chapters::Chapter)+ ;
--------------------metamodels::Bossa.bgf--------------------
ForwardMoveStmt ::= isHead::Boolean isTail::Boolean moveExpr::MoveExpr ;
NonProcType ::= system::Boolean struct::Boolean id::Boolean nonProcType::String ;
BossaProgramm ::= scheduler::Scheduler ;
Timer_ProcessVarDecl ::= id::String processDef::ProcessDef schedulerDef::SchedulerDef ;
HandlerDef ::= id::String scheduler::Scheduler (onHandlerDef::OnHandlerDef)+ ;
Integer_Expression ::= theValue::Integer ;
ClassNameStorage ::= id::String className::ClassName storage::Storage ;
AssignStmt ::= locExpr::LocExpr assignUnop::AssignUnop assignBinop::AssignBinop expr::Expression ;
OrderDef ::= keyCritDecl::KeyCritDecls critDecls::CritDecls abstractSchedulerDecl::AbstractSchedulerDecl ;
TraceEvent ::= (eventName::EventName)+ ;
Etoile_Expression ::= expr::Expression ;
NormalScheduler ::= schedulerDecl::SchedulerDecl ;
In_Expression ::= in::Boolean expr::Expression classState::ClassState ;
CompoKeyCritDecls ::= critDecl::CritDecl ;
TypeExpr ::= id::String bossaTypeExpr::BossaTypeExpr ;
FunctionDef ::= (composantOfInterFunc::ComposantOfInterFunc)+ scheduler::Scheduler ;
SchedulerDef ::= (processVarDecl::ProcessVarDecl)+ ;
AssignUnop ::= doublePlus::Boolean doubleMoins::Boolean ;
SchedulerDecl ::= processDef::ProcessDef ;
FnName_Expression ::= (expr::Expression)+ ;
StateVisibility ::= public::Boolean private::Boolean ;
BossaTypeExpr ::= bossaTypeExpr::String ;
ParameterType ::= (typeExpr::TypeExpr)+ ;
StateRef ::= stateRef::String ;
NormalMoveStmt ::= stateRef::StateRef ;
ExpId_Expression ::= id::String expr::Expression ;
Parenthese_Expression ::= expr::Expression ;
AdmissionDef ::= (valDef::ValDef)+ admCrit::AdmCrit attachDetach::AttachDetach abstractSchedulerDecl::AbstractSchedulerDecl ;
Critop ::= lowest::Boolean highest::Boolean ;
System_ValDecl ::= nonProcType::NonProcType ;
Unop ::= plus::Boolean minus::Boolean excl::Boolean tild::Boolean ;
Normal_ProcessVarDecl ::= typeExpr::TypeExpr ;
AssignBinop ::= affect::Boolean plusEqual::Boolean moinsEqual::Boolean starEqual::Boolean slashEqual::Boolean percentageEqual::Boolean andEqual::Boolean orEqual::Boolean doubleLtEqual::Boolean doubleGtEqual::Boolean ;
IDTarget_MoveExpr ::= id::String ;
AttachDetach ::= procParam1::ProcParam procParam2::ProcParam seqStmt1::SeqStmt seqStmt2::SeqStmt ;
TraceTest ::= expr::Expression ;
ComposantOfInterFunc ::= id::String typeOrVoid::TypeOrVoid (paramVarDecl::ParamVarDecl)+ seqStmt::SeqStmt ;
StateDef ::= (classNameStorage::ClassNameStorage)+ abstractSchedulerDecl::AbstractSchedulerDecl ;
ErrorStmt ::= errorType::String ;
KeyCritDecls ::= (compoKeyCritDecls::CompoKeyCritDecls)+ ;
Binop_Expression ::= id_Expression::Id_Expression compo_Binop_Expression::Compo_Binop_Expression ;
ValDecl ::= Normal_ValDecl ;
 ValDecl ::= System_ValDecl ;
 ValDecl ::= Timer_ValDecl ;
 ValDecl ::= id::String abstractSchedulerDecl::AbstractSchedulerDecl ;
TypeDef ::= enumRang::EnumRange ;
State_Expression ::= theValue::String ;
SchedulerOf_Expression ::= expr::Expression ;
ParamVarDecl ::= id::String typeExpr::TypeExpr ;
ValDef ::= id::String typeExpr::TypeExpr expr::Expression ;
ConstDef ::= id::String expr::Expression bossaTypeExpr::BossaTypeExpr ;
CritDeclWhithoutId ::= expr::Expression ;
Unop_Expression ::= unop::Unop expr::Expression ;
SwitchStmt ::= locExpr::LocExpr (composantOfSwitchStmt::ComposantOfSwitchStmt)+ ;
Id_Expression ::= id::String ;
OnHandlerDef ::= (eventName::EventName)+ seqStmt::SeqStmt ;
DeferStmt ::= deferStmt::String ;
TraceExpr ::= (id::String)+ ;
ReturnStmt ::= expr::Expression ;
Scheduler_Storage ::= stateVisibility::StateVisibility ;
ProcParam ::= id::String process::Boolean scheduler::Boolean ;
ProcessDef ::= (processVarDecl::ProcessVarDecl)+ ;
LocExpr ::= stateName::String (id::String)+ ;
Timer_ValDecl ::= id::String abstractSchedulerDecl::AbstractSchedulerDecl ;
CritDecls ::= (critDecl::CritDecl)+ ;
PrimStmt ::= (expr::Expression)+ ;
ForEachDecreasingForStmt ::= id::String seqStmt::SeqStmt ;
InterfaceDef ::= (composantOfInterFunc::ComposantOfInterFunc)+ scheduler::Scheduler ;
ID_MoveExpr ::= id::String ;
FunDecl ::= parameterTypes::ParameterType nonProcType::NonProcType abstractSchedulerDecl::AbstractSchedulerDecl ;
RangeDef ::= expr::Expression ;
ComposantOfSwitchStmt ::= (classState::ClassState)+ seqStmt::SeqStmt ;
ForeachForStmt ::= id::String isIn::Boolean (classState::ClassState)+ seqStmt::SeqStmt ;
SeqStmt ::= (valDef::ValDef)+ (stmt::Statment)+ ;
EventName ::= eventNameLeft::String eventNameRight::String ;
IfStmt ::= expr::Expression seqStmt::SeqStmt ;
EnumDef ::= (theIds::String)+ ;
BagId ::= theValue::String ;
ProcessVarDecl ::= Timer_ProcessVarDecl ;
 ProcessVarDecl ::= System_ProcessVarDecl ;
 ProcessVarDecl ::= Normal_ProcessVarDecl ;
 ProcessVarDecl ::= id::String processDef::ProcessDef schedulerDef::SchedulerDef ;
TraceDef ::= traceEvent::TraceEvent traceExpr::TraceExpr traceTest::TraceTest abstractSchedulerDecl::AbstractSchedulerDecl ;
EnumRange ::= enumDef::EnumDef rangeDef::RangeDef ;
ClassState ::= state::Boolean className::ClassName ;
Normal_ValDecl ::= nonProcType::NonProcType ;
System_ProcessVarDecl ::= system::Boolean typeExpr::TypeExpr ;
TypeOrVoid ::= isVoid::Boolean typeExpr::TypeExpr ;
VSchdulerDecl ::= schedulerDef::SchedulerDef ;
VirtualScheduler ::= vschedulerDecl::VSchdulerDecl ;
IDSource_MoveExpr ::= id::String ;
Compo_Binop_Expression ::= binop::Binop id_Expression::Id_Expression ;
Queue_Storage ::= stateVisibility::StateVisibility queueType::QueueType ;
Empty_Expression ::= classState::ClassState ;
Binop ::= plus::Boolean minus::Boolean star::Boolean slash::Boolean percentage::Boolean doubleAnd::Boolean doubleVerticalBar::Boolean and::Boolean eq::Boolean ne::Boolean lt::Boolean gt::Boolean le::Boolean ge::Boolean doubleLt::Boolean doubleGt::Boolean ;
ForEachIncreasingForStmt ::= id::String seqStmt::SeqStmt ;
AdmCrit ::= (paramVarDecl::ParamVarDecl)+ expr::Expression ;
ClassName ::= className::String ;
CritDeclWhithId ::= id::String ;
--------------------metamodels::BusinessEntityModel.bgf--------------------
OrganisationalUnit ::= characterisedby::BusinessEntityPropertySet typ::Class (task::Task)+ (fille::BusinessEntity)+ ;
ArtifactRole ::= characterisedby::BusinessEntityPropertySet typ::Class (task::Task)+ (fille::BusinessEntity)+ ;
Task ::= (associatedWith::BusinessRole)+ (needs::ArtifactRole)+ ;
PerformerRole ::= perform::Task ;
BusinessEntity ::= (placehold::BusinessRole)+ ;
--------------------metamodels::BusinessProcessModel.bgf--------------------
InvokerTask ::= (invokes::Task)+ ;
MutliTask ::= (containsTask::Task)+ (containsFlow::Flow)+ realizes::BusinessProcess ;
CoumpoundTask ::= MutliTask ;
 CoumpoundTask ::= (containsTask::Task)+ (containsFlow::Flow)+ realizes::BusinessProcess ;
TerminatorTask ::= (terminates::Task)+ ;
Input ::= sink::DataFlow source::DataFlow ;
InputSet ::= (containsInput::Input)+ ;
ControlPoint ::= (sink::ControlFlow)+ ;
OutputSet ::= (containsOutput::Output)+ ;
--------------------metamodels::CADM.bgf--------------------
InfoExchRequirement ::= (isCitedIn::Document)+ (isSpecifiedInInfos::InformationAsset)+ ;
Standard ::= (isAssociatedWith::Agreement)+ (isCitedBy::Agreement)+ (appliesTo::InformationAsset)+ (implements::Guidance)+ ;
Element ::= Architecture ;
 Element ::= Organization ;
 Element ::= Guidance ;
 Element ::= Document ;
 Element ::= Action ;
 Element ::= Agreement ;
 Element ::= Task ;
 Element ::= InformationAsset ;
 Element ::= Network ;
 Element ::= MissionArea ;
 Element ::= System ;
 Element ::= Mission ;
 Element ::= FunctionalArea ;
 Element ::= Capability ;
 Element ::= MaterielItem ;
 Element ::= Facility ;
 Element ::= name::String content::String ;
Document ::= (isAssociatedWith::Document)+ describesArchitecture::Architecture (describesSystem::System)+ (isSpecifiedUsing::Agreement)+ (cites::InformationAsset)+ ;
SoftwareItem ::= (uses::EquipmentType)+ isSourceFor::Organization ;
ActivityModel ::= (isAssociatedWith::InformationAsset)+ ;
MissionArea ::= (supports::Task)+ ;
Capability ::= (specifiesRequired::Requirement)+ ;
Guidance ::= Requirement ;
 Guidance ::= (isAssocitatedWith::Guidance)+ (isImplementedBy::Architecture)+ (isSpecifiedIn::Document)+ (providesAuthorityFor::InformationAsset)+ (defines::MissionArea)+ ;
MaterielItem ::= EquipmentType ;
 MaterielItem ::= SoftwareItem ;
 MaterielItem ::= (establishedAs::MaterielItem)+ (conformsTo::Standard)+ (performsTo::Capability)+ ;
Action ::= mayBeA::Task (isAssociatedWith::Action)+ (involvedIn::ActivityModel)+ ;
Organization ::= (isAssociatedWith::Organization)+ (softwareItems::SoftwareItem)+ (owns::InformationAsset)+ (includes::Node)+ (performsTo::Capability)+ (hasRequirement::Requirement)+ (hasMissionArea::MissionArea)+ (associatedSystems::System)+ (isProponentOf::FunctionalArea)+ ;
Architecture ::= (isAssociatedWith::Architecture)+ (missions::Mission)+ (isFocusOf::FunctionalArea)+ (uses::Organization)+ ;
ExchangeNeedLineReq ::= (mayBeSatifiedBy::Architecture)+ (isSpecifiedUsing::InformationAsset)+ (specifiesNeedFor::MaterielItem)+ (cites::MissionArea)+ ;
FunctionalArea ::= (isPartOf::FunctionalArea)+ (supports::System)+ (cites::MissionArea)+ ;
System ::= (isAssociatedWith::System)+ (citedIn::Architecture)+ (compliesWith::Standard)+ (isDescribedBy::InformationAsset)+ (uses::MaterielItem)+ (operatesUsing::Network)+ (performsTo::Capability)+ (associatedOrganization::Organization)+ (appliesTo::Requirement)+ ;
Network ::= (isAssociatedWith::Network)+ (isDescribedIn::Document)+ (compliesWith::Standard)+ (has::Organization)+ (performsTo::Capability)+ ;
Mission ::= isCitedBy::Architecture (requires::Task)+ (isAssigned::Organization)+ (mayCite::FunctionalArea)+ ;
Agreement ::= Standard ;
 Agreement ::= (isAssociatedWith::Agreement)+ (isCitedBy::Agreement)+ (appliesTo::InformationAsset)+ (implements::Guidance)+ ;
EquipmentType ::= (establishedAs::MaterielItem)+ (conformsTo::Standard)+ (performsTo::Capability)+ ;
ConceptualDataModel ::= (isAssociatedWith::InformationAsset)+ ;
Task ::= (isAssociatedWith::Task)+ (isPerformedBy::Node)+ (isPerformedUsing::System)+ (specifies::Requirement)+ ;
InformationAsset ::= ConceptualDataModel ;
 InformationAsset ::= ActivityModel ;
 InformationAsset ::= (isAssociatedWith::InformationAsset)+ ;
Facility ::= name::String content::String ;
Requirement ::= InfoExchRequirement ;
 Requirement ::= ExchangeNeedLineReq ;
 Requirement ::= (mayBeSatifiedBy::Architecture)+ (isSpecifiedUsing::InformationAsset)+ (specifiesNeedFor::MaterielItem)+ (cites::MissionArea)+ ;
Node ::= (isAssociatedWith::Node)+ (describes::Architecture)+ (hasServicesProvidedBy::Facility)+ (involvedIn::ActivityModel)+ (uses::InformationAsset)+ (involves::InfoExchRequirement)+ (isParticipedInBy::Network)+ (supports::System)+ ;
--------------------metamodels::CDE.bgf--------------------
ICdeServer ::= (implements::ICdeComponent)+ ;
ICdeMemberExe ::= executionPerformance::String resourceNeeded::String executionDetails::String ;
ICdeComponentSpec ::= (members::IUmlMember)+ ;
IUmlType ::= ICdeComponentSpec ;
 IUmlType ::= IUmlClass ;
 IUmlType ::= (members::IUmlMember)+ ;
--------------------metamodels::CFG.bgf--------------------
Expression ::= expressionName::String ;
ConditionalNode ::= trueConditionNode::Node falseConditionNode::Node ;
Node ::= inNode::Node outNode::Node ;
--------------------metamodels::COBOL.bgf--------------------
COBOLComposedType ::= (elements::COBOLElement)+ ;
COBOLSimpleType ::= usageValue::COBOLUsageValue pictureString::String usage::Boolean ;
COBOLRedefiningElement ::= redefines::COBOLElement ;
COBOLSourceText ::= source::String fileName::String ;
COBOL66Element ::= name::String end::COBOLElement start::COBOLElement ;
COBOL88Element ::= name::String (has::COBOL88ElementValue)+ ;
COBOLElement ::= COBOLRedefiningElement ;
 COBOLElement ::= level::String refined::Boolean name::String sharedType::COBOLClassifier group::COBOLComposedType (initial::COBOLElementInitialValue)+ (contains::COBOL88Element)+ source::COBOLSourceText array::COBOLFixedLengthArray ;
COBOL88ElementValue ::= lowerLimit::String upperLimit::String range::Boolean ;
COBOLElementInitialValue ::= initVal::String valueKind::COBOLInitialValueKind ;
COBOLVariableLengthArray ::= minUpper::Integer dependingOn::COBOLElement ;
COBOLClassifier ::= COBOLSimpleType ;
 COBOLClassifier ::= COBOLComposedType ;
 COBOLClassifier ::= typeded::Boolean name::String (typedElements::COBOLElement)+ ;
COBOLInitialValueKind ::= (civk_string_value::ε) | (civk_low_value::ε) | (civk_high_value::ε) | (civk_zero_value::ε) | (civk_quotes::ε) | (civk_null::ε) | (civk_all_literal::ε) ;
COBOLUsageValue ::= (cuv_binary::ε) | (cuv_dbcs::ε) | (cuv_double::ε) | (cuv_display::ε) | (cuv_float::ε) | (cuv_index::ε) | (cuv_objectReference::ε) | (cuv_packedDecimal::ε) | (cuv_pointer::ε) | (cuv_procedurePointer::ε) ;
COBOLFixedLengthArray ::= COBOLVariableLengthArray ;
 COBOLFixedLengthArray ::= maxUpper::Integer ;
--------------------metamodels::CORBAComponent.bgf--------------------
FinderDef ::= fi_home::HomeDef ;
ConsumesDef ::= cd_home::ComponentDef ;
FactoryDef ::= fa_home::HomeDef ;
EventDef ::= EmitsDef ;
 EventDef ::= PublishesDef ;
 EventDef ::= ConsumesDef ;
 EventDef ::= type::ValueDef ;
UsesDef ::= multiple::Boolean uses::InterfaceDef ud_home::ComponentDef ;
PrimaryKeyDef ::= pkd_home::HomeDef type::ValueDef ;
PublishesDef ::= pud_home::ComponentDef ;
ComponentDef ::= isBasic::Boolean (facets::ProvidesDef)+ (receptacles::UsesDef)+ (supports::InterfaceDef)+ (emits::EmitsDef)+ (publishes::PublishesDef)+ (consumes::ConsumesDef)+ ;
HomeDef ::= manages::ComponentDef (factories::FactoryDef)+ (finders::FinderDef)+ key::PrimaryKeyDef ;
EmitsDef ::= ed_home::ComponentDef ;
ProvidesDef ::= provides::InterfaceDef prd_home::ComponentDef ;
--------------------metamodels::CPL.bgf--------------------
Reject ::= status::String reason::String ;
NoAnswer ::= contents::Node ;
CPL ::= (subActions::SubAction)+ outgoing::Outgoing incoming::Incoming ;
SubCall ::= ref::String ;
Redirect ::= permanent::String ;
Busy ::= contents::Node ;
PrioritySwitch ::= (priorities::SwitchedPriority)+ ;
SwitchedPriority ::= less::String greater::String equal::String ;
SubAction ::= id::String ;
Location ::= url::String priority::String clear::String ;
Otherwise ::= contents::Node ;
Proxy ::= timeout::String recurse::String ordering::String busy::Busy noAnswer::NoAnswer redirection::Redirection failure::Failure default::Default ;
LanguageSwitch ::= (languages::SwitchedLanguage)+ ;
Redirection ::= contents::Node ;
Outgoing ::= contents::Node ;
SwitchedLanguage ::= matches::String ;
Failure ::= contents::Node ;
AddressSwitch ::= field::String subField::String (addresses::SwitchedAddress)+ ;
NotPresent ::= contents::Node ;
Incoming ::= contents::Node ;
StringSwitch ::= field::String (strings::SwitchedString)+ ;
SwitchedString ::= is::String contains::String ;
TimeSwitch ::= tzid::String tzurl::String (times::SwitchedTime)+ ;
Default ::= contents::Node ;
SwitchedAddress ::= is::String contains::String subDomainOf::String ;
SwitchedTime ::= dtstart::String dtend::String duration::String freq::String until::String count::String interval::String bySecond::String byMinute::String byHour::String byDay::String byMonthDay::String byYearDay::String byWeekNo::String byMonth::String wkst::String bySetPos::String ;
--------------------metamodels::CPR.bgf--------------------
Resource ::= resource_action::Action ;
EvaluationCriteria ::= criteria_objective::Objective ;
Objective ::= objective_plan::Plan (criterias::EvaluationCriteria)+ ;
Plan ::= (sub_plans::Plan)+ super_plan::Plan (objectives::Objective)+ (actions::Action)+ ;
TimeSpec ::= timeSpec_action::Action ;
Action ::= action_plan::Plan (sub_actions::Action)+ super_action::Action actor::Actor (resources::Resource)+ (timeSpecs::TimeSpec)+ ;
Actor ::= actor_action::Action (sub_actors::Actor)+ super_actor::Actor ;
--------------------metamodels::CSM.bgf--------------------
Scenarion ::= Step ;
 Scenarion ::= (step::Step)+ (root::Start)+ ;
CSM ::= (step::Step)+ (generalResource::GeneralResource)+ (scenarion::Scenarion)+ ;
End ::= postPath::PathConnection prePath::PathConnection activeResource::ActiveResource ;
ResourceRelease ::= generalResource::GeneralResource ;
Merge ::= message::Message (post::Step)+ (pre::Step)+ ;
Workload ::= start::Start ;
GeneralResource ::= ActiveResource ;
 GeneralResource ::= PassiveResource ;
 GeneralResource ::= (resourceAcquire::ResourceAcquire)+ (resourceRelease::ResourceRelease)+ ;
ActiveResource ::= ProcessingResource ;
 ActiveResource ::= ExternalService ;
 ActiveResource ::= (step::Step)+ ;
Step ::= Start ;
 Step ::= End ;
 Step ::= ResourceAcquire ;
 Step ::= ResourceRelease ;
 Step ::= postPath::PathConnection prePath::PathConnection activeResource::ActiveResource ;
Seqence ::= message::Message (post::Step)+ (pre::Step)+ ;
Join ::= message::Message (post::Step)+ (pre::Step)+ ;
ExternalService ::= (step::Step)+ ;
ResourceAcquire ::= generalResource::GeneralResource ;
PathConnection ::= Join ;
 PathConnection ::= Fork ;
 PathConnection ::= Merge ;
 PathConnection ::= Branch ;
 PathConnection ::= Seqence ;
 PathConnection ::= message::Message (post::Step)+ (pre::Step)+ ;
Branch ::= message::Message (post::Step)+ (pre::Step)+ ;
Fork ::= message::Message (post::Step)+ (pre::Step)+ ;
Start ::= workload::Workload ;
ProcessingResource ::= (step::Step)+ ;
--------------------metamodels::CWMCore.bgf--------------------
Subsystem ::= (features::Feature)+ (importedElements::ModelElement)+ ;
Constraint ::= body::BooleanExpression (constrainedElements::ModelElement)+ ;
Attribute ::= type::Classifier ;
NameSpace ::= Classifier ;
 NameSpace ::= Package ;
 NameSpace ::= (ownedElements::ModelElement)+ ;
Dependency ::= kind::String (clients::ModelElement)+ (suppliers::ModelElement)+ ;
Model ::= (importedElements::ModelElement)+ ;
StructuralFeature ::= Attribute ;
 StructuralFeature ::= type::Classifier ;
Class ::= (features::Feature)+ ;
Package ::= Model ;
 Package ::= Subsystem ;
 Package ::= (importedElements::ModelElement)+ ;
Feature ::= StructuralFeature ;
 Feature ::= owner::Classifier ;
VisibilityKind ::= (vk_public_vis::ε) | (vk_private_vis::ε) | (vk_protected_vis::ε) ;
Datatype ::= (features::Feature)+ ;
ModelElement ::= Dependency ;
 ModelElement ::= Constraint ;
 ModelElement ::= Feature ;
 ModelElement ::= NameSpace ;
 ModelElement ::= name::String visibility::VisibilityKind (contraints::Constraint)+ (clientDependencies::Dependency)+ (supplierDependencies::Dependency)+ namespace::NameSpace (importers::Package)+ ;
Classifier ::= Class ;
 Classifier ::= Datatype ;
 Classifier ::= Subsystem ;
 Classifier ::= (features::Feature)+ ;
BooleanExpression ::= expresssion::String ;
--------------------metamodels::CWMRelationalData.bgf--------------------
Table ::= isTemporary::Boolean temporaryScope::String isSystem::Boolean (table_constraints::CheckConstraint)+ ;
ColumnSet ::= NamedColumnSet ;
 ColumnSet ::= QueryColumnSet ;
 ColumnSet ::= (features::Column)+ ;
SQLSimpleType ::= characterMaximumLength::Integer characterOctetLength::Integer numericPrecision::Integer numericPrecisionRadix::Integer numericScale::Integer dateTimePrecision::Integer (sqlDistinctTypes::SQLDistinctType)+ ;
Trigger ::= namedColumnSet::NamedColumnSet ;
Column ::= precision::Integer scale::Integer isNullable::Boolean length::Integer collectionName::String characterSetName::String (column_constraints::CheckConstraint)+ type::SQLDataType owner::ColumnSet optionScopeColumnSet::NamedColumnSet ;
View ::= isReadOnly::Boolean checkOption::Boolean queryExpression::QueryExpression ;
CheckConstraint ::= (constraintElements::Column)+ (constrainedElements::Table)+ ;
SQLDistinctType ::= length::Integer precision::Integer scale::Integer sqlSimpleType::SQLSimpleType ;
QueryColumnSet ::= query::QueryExpression ;
NamedColumnSet ::= Table ;
 NamedColumnSet ::= View ;
 NamedColumnSet ::= optionScopeColumn::Column (triggers::Trigger)+ ;
SQLDataType ::= SQLDistinctType ;
 SQLDataType ::= SQLSimpleType ;
 SQLDataType ::= typeNumber::Integer (structuralFeatures::Column)+ ;
QueryExpression ::= expresssion::String ;
--------------------metamodels::Class.bgf--------------------
Attribute ::= multiValued::Boolean type::Classifier owner::Class ;
Class ::= (super::Class)+ (attr::Attribute)+ isAbstract::Boolean ;
--------------------metamodels::ChocoModel.bgf--------------------
IntExp ::= op::OpConstraint left::Expression right::Expression ;
SymbolicTerm ::= term::Expression ;
OpConstraint ::= (eq::ε) | (and2::ε) | (or2::ε) | (gt::ε) | (ge::ε) | (lt::ε) | (le::ε) | (plus::ε) ;
PostConstraint ::= op::OpConstraint constraint::ConstraintDef ;
Constraint ::= op::OpConstraint left::Expression right::Expression ;
ChocoProblem ::= name::String (elements::Element)+ ;
IntVar ::= domain::Domain ;
ConstraintDef ::= op::OpConstraint left::Expression right::Expression ;
Package ::= name::String (import::Import)+ problem::ChocoProblem ;
Import ::= fqn::String ;
Domain ::= lower::Integer upper::Integer ;
IntConstant ::= val::Integer ;
IntValue ::= val::Integer ;
--------------------metamodels::ClassicModels.bgf--------------------
OrderDetail ::= order::Order product::Product quantityOrdered::Integer priceEach::Double ;
Product ::= productLine::ProductLine code::String name::String scale::String vendor::String description::String quantityInStock::Integer buyPrice::Double MSRP::Double ;
Order ::= customer::Customer (orderDetails::OrderDetail)+ number::Integer date::Date requiredDate::Date shippedDate::Date status::String comments::String ;
Customer ::= customerOwner::ClassicModels number::Integer (orders::Order)+ (payments::Payment)+ salesRepEmployee::Employee name::String contactLastName::String contactFirstName::String creditLimit::Double ;
Employee ::= office::Office number::Integer (employeeCustomers::Customer)+ lastName::String firstName::String extension::String email::String reportsTo::Employee jobTitle::String ;
Date ::= year::Integer month::Integer day::Integer ;
Office ::= officeOwner::ClassicModels code::String (employees::Employee)+ territory::String ;
ClassicModels ::= (offices::Office)+ (productLines::ProductLine)+ (customers::Customer)+ ;
Payment ::= customer::Customer checkNumber::String date::Date amount::Double ;
ProductLine ::= productLineOwner::ClassicModels (products::Product)+ name::String textDescription::String htmlDescription::String ;
--------------------metamodels::Cocus.owl.bgf--------------------
AssociatedChair ::= memberOfConference::Conference ;
Email_Template ::= define::Event ;
PaperFullVersion ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Conference ::= hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
Document ::= Review ;
 Document ::= Paper ;
 Document ::= Email ;
 Document ::= Submission ;
 Document ::= Template ;
 Document ::= recieved_by::User used_by::Person submited__by::User ;
Event ::= Workshop ;
 Event ::= Symposium ;
 Event ::= Conference ;
 Event ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator ;
ProgramCommittee ::= hasProgramCommitteeMember::ProgramCommitteeMember ;
Review ::= Meta-Review ;
 Review ::= writtenBy::Reviewer ;
ConferenceMember ::= Reviewer ;
 ConferenceMember ::= ConferenceChair ;
 ConferenceMember ::= AssociatedChair ;
 ConferenceMember ::= Author ;
 ConferenceMember ::= ProgramCommitteeMember ;
 ConferenceMember ::= Chairman ;
 ConferenceMember ::= memberOfConference::Conference ;
Head_Role ::= assigned_by::Administrator ;
Person ::= ConferenceMember ;
 Person ::= ExternalReviewer ;
 Person ::= User ;
 Person ::= ProgramCommitteeMember ;
 Person ::= Chairman ;
 Person ::= Administrator ;
 Person ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person hasConflictOfInterest::Document email::String ;
ProgramCommitteeMember ::= ProgramCommitteeChair ;
 ProgramCommitteeMember ::= memberOfProgramCommittee::ProgramCommittee maxPapers::Integer addedBy::Administrator ;
Reviewer_Role ::= assigned_by::Administrator ;
Activity ::= Event_Creation ;
 Activity ::= Request ;
 Activity ::= Event_Approval ;
 Activity ::= Registration ;
 Activity ::= (has_result::Thing)+ sent_by::Person ;
PaperAbstract ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Committe_Role ::= assigned_by::Administrator ;
Administrator ::= approve::Event assign::Role finalizePaperAssignment::Conference runPaperAssignmentTools::Conference enableVirtualMeeting::Conference startReviewerBidding::Conference assignReviewer::Reviewer rejectPaper::Paper enterConferenceDetails::Conference printHardcopyMailingManifests::Conference setMaxPapers::ProgramCommitteeMember enterReviewCriteria::Conference acceptPaper::Paper addProgramCommitteeMember::ProgramCommitteeMember ;
Submission ::= recieved_by::User used_by::Person submited__by::User ;
Paper ::= PaperAbstract ;
 Paper ::= PaperFullVersion ;
 Paper ::= Abstract ;
 Paper ::= Invited_Paper ;
 Paper ::= Short_Paper ;
 Paper ::= Full_Paper ;
 Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Co-author ::= co-writePaper::Paper ;
User ::= Committee ;
 User ::= Administrator ;
 User ::= Reviewer ;
 User ::= Author ;
 User ::= recieve::Document (create::Thing)+ submit::Document ;
Author ::= AuthorNotReviewer ;
 Author ::= Co-author ;
 Author ::= Corresponding_Author ;
 Author ::= submitPaper::Paper writePaper::Paper ;
Author_Role ::= assigned_by::Administrator ;
Paper_Typologies ::= define::Event ;
ConferenceChair ::= memberOfConference::Conference ;
Workshop ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator ;
Admin_Role ::= assigned_by::Administrator ;
Reviewer ::= Meta-Reviewer ;
 Reviewer ::= assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper writeReview::Review assignExternalReviewer::ExternalReviewer ;
Event_Creation ::= (has_result::Thing)+ sent_by::Person ;
Approval_Email ::= confirm::Event ;
Meta-Review ::= writtenBy::Reviewer ;
Committee ::= recieve::Document (create::Thing)+ submit::Document ;
Bid ::= adjustedBy::Reviewer ;
Full_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Template ::= recieved_by::User used_by::Person submited__by::User ;
Registration ::= (has_result::Thing)+ sent_by::Person ;
Event_Setup ::= Paper_Typologies ;
 Event_Setup ::= Review_Form ;
 Event_Setup ::= Submission_Template ;
 Event_Setup ::= Event_Tracks ;
 Event_Setup ::= Research_Topic ;
 Event_Setup ::= Email_Template ;
 Event_Setup ::= define::Event ;
Corresponding_Author ::= submitPaper::Paper writePaper::Paper ;
Role ::= Admin_Role ;
 Role ::= Author_Role ;
 Role ::= Committe_Role ;
 Role ::= Head_Role ;
 Role ::= Reviewer_Role ;
 Role ::= assigned_by::Administrator ;
Chairman ::= ConferenceChair ;
 Chairman ::= AssociatedChair ;
 Chairman ::= ProgramCommitteeChair ;
 Chairman ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person hasConflictOfInterest::Document email::String memberOfConference::Conference ;
Symposium ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator ;
ExternalReviewer ::= assignedByReviewer::Reviewer ;
Event_Tracks ::= define::Event ;
Submission_Template ::= define::Event ;
Account ::= registred_by::Person ;
AuthorNotReviewer ::= submitPaper::Paper writePaper::Paper ;
Meta-Reviewer ::= assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper writeReview::Review assignExternalReviewer::ExternalReviewer ;
ProgramCommitteeChair ::= endReview::Review ;
Research_Topic ::= define::Event ;
Event_URL ::= concerned::Event ;
Short_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Event_Approval ::= (has_result::Thing)+ sent_by::Person ;
Invited_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Abstract ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
--------------------metamodels::DSL.bgf--------------------
EnumerationLiteral ::= value::PrimitiveTypes/Integer ;
Relationship ::= isEmbedding::PrimitiveTypes/Boolean roles::Role ;
Class ::= isSerializationRoot::PrimitiveTypes/Boolean ;
Enumeration ::= (literals::EnumerationLiteral)+ ;
ValueProperty ::= owner::Classifier type::Type ;
Role ::= min::PrimitiveTypes/Integer max::PrimitiveTypes/Integer isUnbounded::PrimitiveTypes/Boolean accepts::PrimitiveTypes/String isOrdered::PrimitiveTypes/Boolean isNavigableFrom::PrimitiveTypes/Boolean isPropertyGenerator::PrimitiveTypes/Boolean source::Classifier type::Classifier relation::Relationship ;
DomainModel ::= (classifiers::Classifier)+ (types::Type)+ ;
--------------------metamodels::CompanyStructure.bgf--------------------
CorporateHQ ::= (manages::Store)+ corporateHQBackOffice::CorporateHQBackOffice ;
Company ::= corporateHQ::CorporateHQ (Store::Store)+ ;
Store ::= storeBackOffice::StoreBackOffice (employee::Employee)+ (cashRegister::CashRegister)+ ;
--------------------metamodels::ComponentUML.bgf--------------------
Attribute ::= entity::Entity ;
AssociationEnd ::= type::Entity association::Association ;
Entity ::= (methods::Method)+ (attributes::Attribute)+ (associationEnds::AssociationEnd)+ ;
Method ::= entity::Entity ;
Association ::= associationEnds::AssociationEnd ;
--------------------metamodels::Conference.owl.bgf--------------------
Tutorial ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Conference_volume ::= has_parts::Conference_part has_workshops::Workshop has_tracks::Track has_tutorials::Tutorial has_a_commtitee::Committee has_a_steering_committee::Steering_committee has_an_organizing_committee::Organizing_committee has_important_dates::Important_dates has_contributions::Conference_contribution has_a_location::String has_a_program_committee::Program_committee ;
Email_Template ::= define::Event ;
Conference_proceedings ::= has_an_ISBN::String has_a_publisher::Publisher has_a_volume::Integer ;
Event ::= Symposium ;
 Event ::= Conference ;
 Event ::= Workshop ;
 Event ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator ;
ProgramCommittee ::= hasProgramCommitteeMember::ProgramCommitteeMember ;
Review ::= Meta-Review ;
 Review ::= writtenBy::Reviewer reviews::Reviewed_contribution ;
ConferenceMember ::= Reviewer ;
 ConferenceMember ::= ConferenceChair ;
 ConferenceMember ::= AssociatedChair ;
 ConferenceMember ::= Author ;
 ConferenceMember ::= ProgramCommitteeMember ;
 ConferenceMember ::= Chairman ;
 ConferenceMember ::= memberOfConference::Conference ;
Head_Role ::= assigned_by::Administrator ;
Person ::= ConferenceMember ;
 Person ::= ExternalReviewer ;
 Person ::= User ;
 Person ::= Conference_participant ;
 Person ::= Conference_contributor ;
 Person ::= Committee_member ;
 Person ::= Conference_applicant ;
 Person ::= Track-workshop_chair ;
 Person ::= ProgramCommitteeMember ;
 Person ::= Chairman ;
 Person ::= Administrator ;
 Person ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String hasConflictOfInterest::Document email::String ;
Submitted_contribution ::= Reviewed_contribution ;
 Submitted_contribution ::= has_a_review_expertise::Review_expertise ;
ProgramCommitteeMember ::= ProgramCommitteeChair ;
 ProgramCommitteeMember ::= memberOfProgramCommittee::ProgramCommittee maxPapers::Integer addedBy::Administrator ;
Reviewer_Role ::= assigned_by::Administrator ;
Track-workshop_chair ::= was_a_track-workshop_chair_of::Conference_part ;
Committe_Role ::= assigned_by::Administrator ;
Poster ::= is_submitted_at::Conference_volume ;
Submission ::= recieved_by::User used_by::Person submited__by::User ;
Paper ::= PaperAbstract ;
 Paper ::= PaperFullVersion ;
 Paper ::= Abstract ;
 Paper ::= Invited_Paper ;
 Paper ::= Short_Paper ;
 Paper ::= Full_Paper ;
 Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Co-author ::= co-writePaper::Paper ;
User ::= Committee ;
 User ::= Administrator ;
 User ::= Author ;
 User ::= recieve::Document (create::Thing)+ submit::Document ;
Conference_announcement ::= has_authors::Person has_a_date_of_issue::date ;
ConferenceChair ::= memberOfConference::Conference ;
EEnum ::= (high::ε) | (medium::ε) | (low::ε) | (very high::ε) | (male::ε) | (female::ε) ;
Program_committee ::= was_a_program_committee_of::Conference_volume ;
Committee ::= Program_committee ;
 Committee ::= Organizing_committee ;
 Committee ::= Steering_committee ;
 Committee ::= has_members::Committee_member was_a_committee_of::Conference_volume has_a_committee_co-chair::Co-chair has_a_committee_chair::Chair ;
Bid ::= adjustedBy::Reviewer ;
Publisher ::= issues::Conference_proceedings ;
Full_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Registration ::= (has_result::Thing)+ sent_by::Person ;
Event_Setup ::= Paper_Typologies ;
 Event_Setup ::= Review_Form ;
 Event_Setup ::= Submission_Template ;
 Event_Setup ::= Event_Tracks ;
 Event_Setup ::= Research_Topic ;
 Event_Setup ::= Email_Template ;
 Event_Setup ::= define::Event ;
Corresponding_Author ::= submitPaper::Paper writePaper::Paper ;
Symposium ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator ;
Steering_committee ::= was_a_steering_committee_of::Conference_volume ;
AuthorNotReviewer ::= submitPaper::Paper writePaper::Paper ;
Meta-Reviewer ::= assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper writeReview::Review assignExternalReviewer::ExternalReviewer invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ ;
ProgramCommitteeChair ::= endReview::Review ;
Call_for_participation ::= has_authors::Person has_a_date_of_issue::date ;
Active_conference_participant ::= gives_presentations::Presentation ;
Short_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Co-chair ::= was_a_committe_co-chair_of::Committee ;
Abstract ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
 Abstract ::= (is_the_1th_part_of::Thing)+ ;
AssociatedChair ::= memberOfConference::Conference ;
Organizing_committee ::= was_an_organizing_committee_of::Conference_volume ;
Conference_document ::= Conference_contribution ;
 Conference_document ::= Information_for_participants ;
 Conference_document ::= Call_for_paper ;
 Conference_document ::= Conference_announcement ;
 Conference_document ::= Call_for_participation ;
 Conference_document ::= Conference_www ;
 Conference_document ::= Review ;
 Conference_document ::= has_authors::Person has_a_date_of_issue::date ;
PaperFullVersion ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Committee_member ::= Co-chair ;
 Committee_member ::= Chair ;
 Committee_member ::= was_a_member_of::Committee ;
Conference ::= Conference_volume ;
 Conference ::= hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
Document ::= Email ;
 Document ::= Submission ;
 Document ::= Template ;
 Document ::= Paper ;
 Document ::= Review ;
 Document ::= recieved_by::User used_by::Person submited__by::User ;
Presentation ::= Invited_talk ;
 Presentation ::= is_given_by::Active_conference_participant ;
Reviewed_contribution ::= Accepted_contribution ;
 Reviewed_contribution ::= Rejected_contribution ;
 Reviewed_contribution ::= has_a_review::Review ;
Conference_contribution ::= Poster ;
 Conference_contribution ::= Written_contribution ;
 Conference_contribution ::= Presentation ;
 Conference_contribution ::= is_submitted_at::Conference_volume ;
Activity ::= Event_Creation ;
 Activity ::= Request ;
 Activity ::= Event_Approval ;
 Activity ::= Registration ;
 Activity ::= (has_result::Thing)+ sent_by::Person ;
PaperAbstract ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Administrator ::= approve::Event assign::Role finalizePaperAssignment::Conference runPaperAssignmentTools::Conference enableVirtualMeeting::Conference startReviewerBidding::Conference assignReviewer::Reviewer rejectPaper::Paper enterConferenceDetails::Conference printHardcopyMailingManifests::Conference setMaxPapers::ProgramCommitteeMember enterReviewCriteria::Conference acceptPaper::Paper addProgramCommitteeMember::ProgramCommitteeMember ;
Track ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Author ::= AuthorNotReviewer ;
 Author ::= Co-author ;
 Author ::= Corresponding_Author ;
 Author ::= submitPaper::Paper writePaper::Paper ;
Author_Role ::= assigned_by::Administrator ;
Paper_Typologies ::= define::Event ;
Information_for_participants ::= has_authors::Person has_a_date_of_issue::date ;
Workshop ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator ;
Admin_Role ::= assigned_by::Administrator ;
Chair ::= was_a_committee_chair_of::Committee ;
Reviewer ::= Meta-Reviewer ;
 Reviewer ::= assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper writeReview::Review assignExternalReviewer::ExternalReviewer invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ ;
Event_Creation ::= (has_result::Thing)+ sent_by::Person ;
Approval_Email ::= confirm::Event ;
Meta-Review ::= writtenBy::Reviewer reviews::Reviewed_contribution ;
Template ::= recieved_by::User used_by::Person submited__by::User ;
Conference_part ::= Track ;
 Conference_part ::= Tutorial ;
 Conference_part ::= Workshop ;
 Conference_part ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Role ::= Admin_Role ;
 Role ::= Author_Role ;
 Role ::= Committe_Role ;
 Role ::= Head_Role ;
 Role ::= Reviewer_Role ;
 Role ::= assigned_by::Administrator ;
Call_for_paper ::= has_authors::Person has_a_date_of_issue::date ;
Chairman ::= ConferenceChair ;
 Chairman ::= AssociatedChair ;
 Chairman ::= ProgramCommitteeChair ;
 Chairman ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String hasConflictOfInterest::Document email::String memberOfConference::Conference ;
Conference_www ::= has_a_URL::String ;
Rejected_contribution ::= has_a_review::Review ;
Invited_talk ::= is_given_by::Active_conference_participant ;
ExternalReviewer ::= assignedByReviewer::Reviewer ;
Topic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
Account ::= registred_by::Person ;
Submission_Template ::= define::Event ;
Event_Tracks ::= define::Event ;
Research_Topic ::= define::Event ;
Review_expertise ::= has_a_submitted_contribution::Submitted_contribution has_an_expertise::EEnum ;
Event_URL ::= concerned::Event ;
Important_dates ::= is_an_abstract_submission_date::date is_a_full_paper_submission_date::date is_an_ending_date::date is_a_date_of_acceptance_announcement::date is_a_date_of_camera_ready_paper_submission::date is_a_starting_date::date belong_to_a_conference_volume::Conference_volume ;
Event_Approval ::= (has_result::Thing)+ sent_by::Person ;
Invited_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Review_preference ::= (has_a_topic_or_a_submission_contribution::Thing)+ has_a_degree::Integer ;
--------------------metamodels::Contact.bgf--------------------
Num_fixe ::= numero::String contact_fixe::Contact ;
Num_portable ::= numero::String contact_portable::Contact ;
Contact ::= nom::String prenom::String (num_fixes::Num_fixe)+ (num_portables::Num_portable)+ ;
--------------------metamodels::ControllerUML.bgf--------------------
ViewState ::= (substates::State)+ theContainer::State (outGoing::StateTransition)+ (incoming::StateTransition)+ ;
Controller ::= (controllerAttribute::ControllerAttribute)+ behavior::StateMachine ;
StateTransition ::= source::State target::State trigger::Event effect::StateMachineAction ;
StateMachine ::= (states::State)+ ;
SubControllerState ::= controller::Controller ;
State ::= SubControllerState ;
 State ::= ViewState ;
 State ::= (substates::State)+ theContainer::State (outGoing::StateTransition)+ (incoming::StateTransition)+ ;
ControllerAttribute ::= controller::Controller ;
--------------------metamodels::Cristal.bgf--------------------
ActCompositeMember ::= (activityDefinitions::ActivityDefinition)+ ;
ElementaryActDef ::= actCompositeMember::ActCompositeMember ;
PartCompositeMember ::= partDefinitions::PartDefinition ;
CompositeParDef ::= (partCompositeMember::PartCompositeMember)+ ;
Condition ::= (partCompositeMembers::PartCompositeMember)+ (actCompositeMembers::ActCompositeMember)+ ;
CompositeActDef ::= (actCompositeMembers::ActCompositeMember)+ ;
PartDefinition ::= CompositeParDef ;
 PartDefinition ::= ElementaryPartDef ;
 PartDefinition ::= (partCompositeMembers::PartCompositeMember)+ ;
ElementaryPartDef ::= (partCompositeMembers::PartCompositeMember)+ ;
ActivityDefinition ::= ElementaryActDef ;
 ActivityDefinition ::= CompositeActDef ;
 ActivityDefinition ::= actCompositeMember::ActCompositeMember ;
--------------------metamodels::DSLModel.bgf--------------------
ModelElementLink ::= (links::ReferenceLink)+ ;
BooleanValue ::= value::PrimitiveTypes/Boolean ;
Model ::= domainModel::PrimitiveTypes/String (contents::ModelElement)+ ;
Role ::= element::ModelElement owner::ReferenceLink ;
Property ::= owner::ModelElement value::Value ;
ReferenceLink ::= owner::ModelElement modelElement::ModelElementLink roles::Role ;
IntegerValue ::= value::PrimitiveTypes/Integer ;
ModelElement ::= ModelElementLink ;
 ModelElement ::= parentLink::EmbeddingLink (properties::Property)+ (embeddinglinks::EmbeddingLink)+ (referencelinks::ReferenceLink)+ ;
EmbeddingLink ::= owner::ModelElement (elements::ModelElement)+ ;
StringValue ::= value::PrimitiveTypes/String ;
DoubleValue ::= value::PrimitiveTypes/Double ;
--------------------metamodels::DSLtools.bgf--------------------
EnumerationLiteral ::= value::PrimitiveTypes/Integer ;
Relationship ::= isEmbedding::PrimitiveTypes/Boolean roles::Role ;
Class ::= isSerializationRoot::PrimitiveTypes/Boolean ;
Enumeration ::= (literals::EnumerationLiteral)+ ;
ValueProperty ::= owner::Classifier type::Type ;
Role ::= min::PrimitiveTypes/Integer max::PrimitiveTypes/Integer isUnbounded::PrimitiveTypes/Boolean accepts::PrimitiveTypes/String isOrdered::PrimitiveTypes/Boolean isNavigableFrom::PrimitiveTypes/Boolean isPropertyGenerator::PrimitiveTypes/Boolean source::Classifier type::Classifier relation::Relationship ;
DomainModel ::= (classifiers::Classifier)+ (types::Type)+ ;
--------------------metamodels::DTD.bgf--------------------
Leaf ::= elementName::String ;
Mixed ::= elements::String ;
AttributeList ::= (containsAttributes::AttributeDescription)+ ;
Enumeration ::= values::String ;
OtherAttributeTypeEnum ::= (cdata::ε) | (id::ε) | (idref::ε) | (entityType::ε) | (entities::ε) | (nmtoken::ε) | (nmtakens::ε) ;
Occurence ::= (zeroOrOne::ε) | (zeroOrMore::ε) | (oneOrMore::ε) | (one::ε) ;
OtherAttributeType ::= type::OtherAttributeTypeEnum ;
Entity ::= content::String isInternal::Boolean ;
Notation ::= content::String ;
NoDefaultValue ::= isRequired::Boolean ;
Choice ::= childrenChoice::Children ;
Sequence ::= children::Children ;
RestrictedElement ::= content::ElementContent ;
DefaultValue ::= value::String isFixed::Boolean ;
--------------------metamodels::DTMP.bgf--------------------
Parameter ::= (name::String)+ (type::String)+ state::State ;
Transition ::= (transProb::String)+ to::State from::State ;
State ::= name::String isStart::Boolean isEnd::Boolean isFail::Boolean (incoming::Transition)+ (outGoing::Transition)+ (formalParam::Parameter)+ ;
--------------------metamodels::DXF.bgf--------------------
Mesh ::= name::String (points::Point)+ ;
DXF ::= (meshes::Mesh)+ ;
Point ::= name::String mesh::Mesh x::Double y::Double z::Double ;
--------------------metamodels::DeploymentReport.bgf--------------------
SimpleName ::= value::String ;
DeploymentReport ::= (import::DeploymentImport)+ applications::Applications binding::Binding logicalServers::LogicalServers errors::ErrorCollection ;
SequenceReport ::= report::ReportObject setting::Setting (system::ReportSystem)+ (resource::ReportResource)+ (endpoint::ReportEndpoint)+ ;
ImportNamespaceIdentity ::= import::DeploymentImport ;
ReportObject ::= LogicalServer ;
 ReportObject ::= Application ;
 ReportObject ::= ReportSystem ;
 ReportObject ::= ReportResource ;
 ReportObject ::= ReportEndpoint ;
 ReportObject ::= (sequence::SequenceReport)+ name::String definition::String extends::String instanceId::Guid hostedOn::String ;
PublicKeyType ::= value::String ;
DocumentConstraintError ::= (failedInput::FailedInput)+ constraintMember::String constraintDefinition::String targetInstancePath::String ownerInstancePath::String constraintErrorCode::String constraintErrorMessage::String ;
Setting ::= (value::SettingInstanceValue)+ (facet::SettingFacet)+ settingAttributes::SettingAttributes ;
Application ::= (sequence::SequenceReport)+ name::String definition::String extends::String instanceId::Guid hostedOn::String ;
ProcessorArchitectures ::= (x86::ε) | (ia64::ε) | (amd64::ε) | (wow64::ε) | (msil::ε) | (shx::ε) | (arm::ε) | (data::ε) ;
BoundLogicalServer ::= (setting::Setting)+ (application::Application)+ name::String definition::String extends::String ;
FailedInput ::= (contents::String)+ ;
OuterSystem ::= (system::OuterSystem)+ (application::Application)+ name::String ;
DeploymentImport ::= alias::SimpleName identity::ImportNamespaceIdentity ;
Guid ::= value::String ;
SettingAttributes ::= name::String definition::String state::SettingState fixed::Boolean list::Boolean null::Boolean secure::Boolean failedToSerialize::Boolean ;
SettingFacet ::= value::SettingInstanceValue settingAttributes::SettingAttributes ;
LogicalServers ::= (zone::Zone)+ (logicalServer::LogicalServer)+ ;
ErrorCollection ::= (documentError::DocumentError)+ (documentResolutionError::DocumentResolutionError)+ (documentConstraintError::DocumentConstraintError)+ ;
Binding ::= (zone::Zone)+ (boundLogicalServer::BoundLogicalServer)+ ;
ReportSystem ::= (sequence::SequenceReport)+ name::String definition::String extends::String instanceId::Guid hostedOn::String ;
SettingValue ::= (contents::String)+ Null::Boolean Secure::Boolean ;
PublicKeyTokenType ::= value::String ;
Element ::= Guid ;
 Element ::= SimpleName ;
 Element ::= Path ;
 Element ::= FourPartVersionType ;
 Element ::= PublicKeyType ;
 Element ::= PublicKeyTokenType ;
 Element ::= Culture ;
 Element ::= CultureNeutral ;
 Element ::= value::String ;
Description ::= (contents::String)+ ;
CultureNeutral ::= value::String ;
NamespaceIdentity ::= ImportNamespaceIdentity ;
 NamespaceIdentity ::= name::Path version::FourPartVersionType publicKey::PublicKeyType publicKeyToken::PublicKeyTokenType culture::CultureNeutral platform::Platform ;
FourPartVersionType ::= value::String ;
Platform ::= (x86::ε) | (ia64::ε) | (amd64::ε) | (wow64::ε) | (msil::ε) | (shx::ε) | (arm::ε) | (data::ε) | (*::ε) | (neutral::ε) ;
Culture ::= value::String ;
DocumentError ::= DocumentResolutionError ;
 DocumentError ::= DocumentConstraintError ;
 DocumentError ::= (description::Description)+ Code::Integer Level::Integer File::String ;
SettingInstanceValue ::= (contents::String)+ null::Boolean ;
LogicalServer ::= (sequence::SequenceReport)+ name::String definition::String extends::String instanceId::Guid hostedOn::String ;
Zone ::= (zone::Zone)+ (boundLogicalServer::BoundLogicalServer)+ (logicalServer::LogicalServer)+ name::String ;
ReportEndpoint ::= (sequence::SequenceReport)+ name::String definition::String extends::String instanceId::Guid hostedOn::String ;
Path ::= value::String ;
Applications ::= (system::OuterSystem)+ (application::Application)+ ;
ReportResource ::= (sequence::SequenceReport)+ name::String definition::String extends::String instanceId::Guid hostedOn::String ;
SettingState ::= (Set::ε) | (NotSet::ε) | (Error::ε) ;
DocumentResolutionError ::= Statement::String ;
--------------------metamodels::DiagramInterchange.bgf--------------------
GraphConnector ::= position::Point gc_graphElement::GraphElement (graphEdges::GraphEdge)+ ;
Ellipse ::= center::Point radiusX::Double radiusY::Double rotation::Double startAngle::Double endAngle::Double ;
Image ::= uri::String mimeType::String ;
Property ::= key::String value::String ;
Diagram ::= name::String zoom::Double viewPort::Point (diagramLinks::DiagramLink)+ namespace::SemanticModelBridge ;
BezierPoint ::= controls::Point ;
GraphNode ::= Diagram ;
 GraphNode ::= size::Dimension ;
Point ::= BezierPoint ;
 Point ::= x::Double y::Double ;
UML1SemanticModelBridge ::= element::CoreElement ;
TextElement ::= text::String ;
CoreSemanticModelBridge ::= element::ElementsElement ;
DiagramLink ::= zoom::Double viewPort::Point dl_graphElement::GraphElement dl_diagram::Diagram ;
SimpleSemanticModelElement ::= typeInfo::String ;
GraphEdge ::= waypoints::Point anchors::GraphConnector ;
Reference ::= isIndividualRepresentation::Boolean referenced::DiagramElement ;
Dimension ::= width::Double heigth::Double ;
Polyline ::= waypoints::Point closed::Boolean ;
--------------------metamodels::DoDAF-OV5.bgf--------------------
InformationAssetDocument ::= name::String description::String view::String ;
AMIERole ::= Control ;
 AMIERole ::= Input ;
 AMIERole ::= Output ;
 AMIERole ::= Mechanism ;
 AMIERole ::= (defines::AMPA)+ ;
AMPA ::= (isOrdinateOf::AMPA)+ (isSubordinateOf::AMPA)+ (defines::AMIERole)+ ;
Control ::= source::String destination::String ;
MechanismFacility ::= source::String destination::String resourceType::String ;
IE ::= (isAssociatedWith::AMIERole)+ (isOrdinateOf::IE)+ (isSubordinateOf::IE)+ ;
Document ::= AMSpecification ;
 Document ::= type::String (cites::InformationAssetDocument)+ (records::ArchitectureDocument)+ (isTheReferenceFor::IE)+ (isThePrimaryReferenceFor::PA)+ ;
Mechanism ::= MechanismSystem ;
 Mechanism ::= MechanismReference ;
 Mechanism ::= MechanismFacility ;
 Mechanism ::= source::String destination::String resourceType::String ;
DOSCR ::= mayBeAn::Occupation (appliesTo::PersonType)+ (mayBeCitedFor::OperationalRole)+ ;
AMSpecification ::= (isSpecifiedUsing::AMSpecificationElement)+ ;
PATask ::= isCitedBy::InformationAsset ;
Organization ::= type::OrganizationType (supplies::InformationAsset)+ (providesStewardshipFor::InformationAsset)+ (owns::InformationAsset)+ (develops::IE)+ (isCitedAs::MechanismReference)+ ;
MechanismReference ::= source::String destination::String resourceType::String ;
Skill ::= (mayBeCitedFor::OperationalRole)+ ;
PA ::= (isTheProducerFor::PAExchangeRequirement)+ (isTheConsumerFor::PAExchangeRequirement)+ (isParentFor::PA)+ (isChildFor::PA)+ (has::PACapability)+ (isIncludedIn::AMPA)+ (correspondsTo::PATask)+ ;
PersonType ::= (mayBeCitedFor::OperationalRole)+ (can::Skill)+ ;
PAExchangeRequirement ::= (isTheSubjectOf::AMSpecificationElement)+ ;
ArchitectureDocument ::= name::String description::String view::String ;
OrganizationType ::= (isTheTypeOf::Organization)+ (isCitedAs::MechanismReference)+ ;
AM ::= type::String (specifies::AMSpecification)+ (includes::AMPA)+ (paTask::PATask)+ ;
Occupation ::= (mayBeCitedForOR::OperationalRole)+ (mayBeCitedForPT::PersonType)+ ;
DoDAFModel ::= (document::Document)+ (am::AM)+ (task::Task)+ (iaDocument::InformationAssetDocument)+ (amSpecification::AMSpecification)+ (doscr::DOSCR)+ (organizationType::OrganizationType)+ ;
Input ::= (isTheInputThatIsDefinedBy::Output)+ source::String destination::String information::String ;
PACapability ::= name::String description::String view::String ;
OperationalRole ::= (isCitedAs::MechanismReference)+ ;
MechanismSystem ::= source::String destination::String resourceType::String ;
Task ::= PATask ;
 Task ::= levelIdentifier::String references::String cost::String ;
AMSpecificationElement ::= subject::PAExchangeRequirement ;
Output ::= source::String destination::String information::String ;
--------------------metamodels::DoDAF-SV4.bgf--------------------
InformationAssetDocument ::= name::String description::String view::String ;
OrganizationTypeOperationalRole ::= name::String description::String view::String ;
Document ::= SystemFunctionalityDescription ;
 Document ::= FunctionalSpecification ;
 Document ::= AMSpecification ;
 Document ::= type::String (cites::InformationAssetDocument)+ (describes::SystemDocument)+ (records::ArchitectureDocument)+ (isTheReferenceFor::IE)+ (isThePrimaryReferenceFor::PA)+ ;
OperationalRolePA ::= name::String description::String view::String ;
DataStore ::= (isParentFor::PA)+ (isChildFor::PA)+ (isIncludedIn::AMPA)+ (isAssignedTo::SystemPA)+ (represents::ArchitectureBusinessSubFunction)+ (correspondsTo::PATask)+ (has::PACapability)+ (isPerformedBy::OperationalRolePA)+ ;
AMSpecification ::= (isUsedIn::FunctionalSpecification)+ ;
Skill ::= (mayBeCitedFor::OperationalRole)+ ;
PA ::= DataStore ;
 PA ::= SystemFunction ;
 PA ::= (isParentFor::PA)+ (isChildFor::PA)+ (isIncludedIn::AMPA)+ (isAssignedTo::SystemPA)+ (represents::ArchitectureBusinessSubFunction)+ (correspondsTo::PATask)+ (has::PACapability)+ (isPerformedBy::OperationalRolePA)+ ;
ArchitectureDocument ::= name::String description::String view::String ;
AM ::= type::String (isCitedBy::PATask)+ (specifies::AMSpecification)+ (includes::AMPA)+ (isUsedToDescribe::SystemFunctionalityDescription)+ (defines::LineOfBusiness)+ ;
Occupation ::= (mayBeCitedForOR::OperationalRole)+ (mayBeCitedForPT::PersonType)+ ;
LineOfBusiness ::= (appliesToTask::Task)+ (appliesToBS::BusinessSubfunction)+ ;
DoDAFModel ::= (document::Document)+ (sfd::SystemFunctionalityDescription)+ (amSpecification::AMSpecification)+ (sd::SystemDocument)+ (task::Task)+ (iaDocument::InformationAssetDocument)+ (position::Position)+ (occupation::Occupation)+ (ad::ArchitectureDocument)+ (system::System)+ (am::AM)+ (spas::SystemPAStandard)+ (its::InformationTechnologyStandard)+ (orpa::OperationalRolePA)+ (ptcn::PersonTypeCapabilityNorm)+ ;
AMIERoleGraphic ::= name::String description::String view::String ;
Input ::= (isTheInputThatIsDefinedBy::Output)+ source::String destination::String information::String ;
PACapability ::= name::String description::String view::String ;
ArchitectureBusinessSubFunction ::= name::String description::String view::String ;
Task ::= HumanBehaviourTask ;
 Task ::= OperationalCapabilityTask ;
 Task ::= TaskMissionArea ;
 Task ::= PATask ;
 Task ::= levelIdentifier::String references::String cost::String (correspondsTo::PATask)+ (supports::TaskMissionArea)+ ;
PersonTypeCapabilityNorm ::= name::String description::String view::String ;
Output ::= source::String destination::String information::String ;
FunctionalSpecification ::= mayBeA::SystemDocument ;
SystemFunctionalityDescription ::= type::String (cites::InformationAssetDocument)+ (describes::SystemDocument)+ (records::ArchitectureDocument)+ (isTheReferenceFor::IE)+ (isThePrimaryReferenceFor::PA)+ ;
AMIERole ::= Input ;
 AMIERole ::= Output ;
 AMIERole ::= (defines::AMPA)+ (isRepresentedBy::AMIERoleGraphic)+ ;
SystemPAStandard ::= (isUsedToDefine::InformationTechnologyStandard)+ ;
AMPA ::= (isOrdinateOf::AMPA)+ (isSubordinateOf::AMPA)+ (defines::AMIERole)+ (isRepresentedBy::AMPAGraphic)+ ;
IE ::= (isAssociatedWith::AMIERole)+ (isOrdinateOf::IE)+ (isSubordinateOf::IE)+ ;
BusinessSubfunction ::= (appliesTo::ArchitectureBusinessSubFunction)+ ;
PATask ::= levelIdentifier::String references::String cost::String (correspondsTo::PATask)+ (supports::TaskMissionArea)+ ;
OrganizationOperationalRole ::= name::String description::String view::String ;
HumanBehaviourTask ::= levelIdentifier::String references::String cost::String (correspondsTo::PATask)+ (supports::TaskMissionArea)+ ;
InformationTechnologyStandard ::= (isUsedToDefine::SystemPAStandard)+ ;
TaskMissionArea ::= (hasContributionFrom::OperationalCapabilityTask)+ ;
PersonType ::= (mayBeCitedFor::OperationalRole)+ (performsTo::PersonTypeCapabilityNorm)+ (can::Skill)+ ;
OperationalCapabilityTask ::= levelIdentifier::String references::String cost::String (correspondsTo::PATask)+ (supports::TaskMissionArea)+ ;
System ::= (isDesignedToProvide::SystemPA)+ (isDescribedBy::SystemDocument)+ ;
AMPAGraphic ::= name::String description::String view::String ;
SystemDocument ::= name::String description::String view::String ;
Position ::= (mayBeCitedFor::OperationalRole)+ ;
OperationalRole ::= (performs::OperationalRolePA)+ (isPerformedByOTOR::OrganizationTypeOperationalRole)+ (isPerformedByOOR::OrganizationOperationalRole)+ ;
SystemFunction ::= (isParentFor::PA)+ (isChildFor::PA)+ (isIncludedIn::AMPA)+ (isAssignedTo::SystemPA)+ (represents::ArchitectureBusinessSubFunction)+ (correspondsTo::PATask)+ (has::PACapability)+ (isPerformedBy::OperationalRolePA)+ ;
InformationAsset ::= AM ;
 InformationAsset ::= (isCitedIn::InformationAssetDocument)+ (describes::DataStore)+ ;
SystemPA ::= (isDefinedUsing::SystemPAStandard)+ ;
--------------------metamodels::DoDAF-SV5.bgf--------------------
AMPA ::= (isOrdinateOf::AMPA)+ (isSubordinateOf::AMPA)+ ;
Document ::= SystemFunctionTraceabilityMatrix ;
 Document ::= type::String (cites::CapabilityDocument)+ (describes::SystemDocument)+ (records::ArchitectureDocument)+ (isThePrimaryReferenceFor::PA)+ ;
SoftwareApplicationProcedurePA ::= name::String description::String view::String ;
Capability ::= NetworkCapability ;
 Capability ::= NodeLinkCapability ;
 Capability ::= MaterielItemCapabilityNorm ;
 Capability ::= OrganizationTypeCapabilityNorm ;
 Capability ::= RequiredInformationTechnologyCapability ;
 Capability ::= (isPerformedBy::SystemCapability)+ (isOrdinateFor::Capability)+ (isSubordinateOf::Capability)+ (isPerformedByNC::NetworkCapability)+ (isPerformedByNLC::NodeLinkCapability)+ (isPerformedBySC::SystemCapability)+ (isCitedInCD::CapabilityDocument)+ (isUsedInMICN::MaterielItemCapabilityNorm)+ (isUsedInOTCN::OrganizationTypeCapabilityNorm)+ (isAttainedFor::RequiredInformationTechnologyCapability)+ ;
ArchitectureTask ::= name::String description::String view::String ;
PATask ::= levelIdentifier::String references::String cost::String (correspondsTo::PATask)+ (isSupportedBy::ArchitectureTask)+ (isTheSourceOfNeedFor::InformationExchangeRequirement)+ (isTheDestinationOfNeedFor::InformationExchangeRequirement)+ (isCitedFor::SystemFunctionTraceabilityElement)+ ;
InformationExchangeRequirement ::= (specifies::RequiredInformationTechnologyCapability)+ ;
NodeLinkCapability ::= (isPerformedBy::SystemCapability)+ (isOrdinateFor::Capability)+ (isSubordinateOf::Capability)+ (isPerformedByNC::NetworkCapability)+ (isPerformedByNLC::NodeLinkCapability)+ (isPerformedBySC::SystemCapability)+ (isCitedInCD::CapabilityDocument)+ (isUsedInMICN::MaterielItemCapabilityNorm)+ (isUsedInOTCN::OrganizationTypeCapabilityNorm)+ (isAttainedFor::RequiredInformationTechnologyCapability)+ ;
CapabilityDocument ::= (isCitedIn::Capability)+ ;
RequiredInformationTechnologyCapability ::= (isPerformedBy::SystemCapability)+ (isOrdinateFor::Capability)+ (isSubordinateOf::Capability)+ (isPerformedByNC::NetworkCapability)+ (isPerformedByNLC::NodeLinkCapability)+ (isPerformedBySC::SystemCapability)+ (isCitedInCD::CapabilityDocument)+ (isUsedInMICN::MaterielItemCapabilityNorm)+ (isUsedInOTCN::OrganizationTypeCapabilityNorm)+ (isAttainedFor::RequiredInformationTechnologyCapability)+ ;
PA ::= SystemFunction ;
 PA ::= (isParentFor::PA)+ (isChildFor::PA)+ (correspondsTo::PATask)+ (isIncludedIn::AMPA)+ (isAssignedTo::SystemPA)+ (isSupportedBy::SoftwareApplicationProcedurePA)+ (isTheConsumerFor::PAExchangeRequirement)+ (isTheProducerFor::PAExchangeRequirement)+ ;
SystemFunctionTraceabilityElement ::= systemFunction::SystemFunction operationalActivity::Task systemProcessActivity::SystemPA system::System capability::Capability supportStatusCode::SupportStatusCode ;
PAExchangeRequirement ::= (isCitedIn::InformationExchangeRequirement)+ ;
OperationalCapabilityTask ::= isAccomplishedA::SystemOperationalCapabilityTask ;
System ::= (isDesignedToProvide::SystemPA)+ (isDescribedBy::SystemDocument)+ (performs::SystemCapability)+ (isUsedToAccomplish::SystemOperationalCapabilityTask)+ ;
SupportStatusCode ::= (red::ε) | (yellow::ε) | (green::ε) ;
ArchitectureDocument ::= name::String description::String view::String ;
SystemFunctionTraceabilityMatrix ::= (isDefinedBy::SystemFunctionTraceabilityElement)+ ;
AM ::= type::String (isCitedBy::PATask)+ (includes::AMPA)+ ;
InformationTechnologyRequirement ::= InformationExchangeRequirement ;
 InformationTechnologyRequirement ::= PAExchangeRequirement ;
 InformationTechnologyRequirement ::= (specifies::RequiredInformationTechnologyCapability)+ ;
DoDAFModel ::= (document::Document)+ (sftm::SystemFunctionTraceabilityMatrix)+ (sd::SystemDocument)+ (am::AM)+ (system::System)+ (task::Task)+ (capability::Capability)+ (capabilityDocument::CapabilityDocument)+ (systemCapability::SystemCapability)+ ;
MaterielItemCapabilityNorm ::= (isPerformedBy::SystemCapability)+ (isOrdinateFor::Capability)+ (isSubordinateOf::Capability)+ (isPerformedByNC::NetworkCapability)+ (isPerformedByNLC::NodeLinkCapability)+ (isPerformedBySC::SystemCapability)+ (isCitedInCD::CapabilityDocument)+ (isUsedInMICN::MaterielItemCapabilityNorm)+ (isUsedInOTCN::OrganizationTypeCapabilityNorm)+ (isAttainedFor::RequiredInformationTechnologyCapability)+ ;
SystemDocument ::= name::String description::String view::String ;
SystemCapability ::= (isCitedIn::Capability)+ ;
SystemFunction ::= (isCitedFor::SystemFunctionTraceabilityElement)+ ;
NetworkCapability ::= (isPerformedBy::SystemCapability)+ (isOrdinateFor::Capability)+ (isSubordinateOf::Capability)+ (isPerformedByNC::NetworkCapability)+ (isPerformedByNLC::NodeLinkCapability)+ (isPerformedBySC::SystemCapability)+ (isCitedInCD::CapabilityDocument)+ (isUsedInMICN::MaterielItemCapabilityNorm)+ (isUsedInOTCN::OrganizationTypeCapabilityNorm)+ (isAttainedFor::RequiredInformationTechnologyCapability)+ ;
Task ::= OperationalCapabilityTask ;
 Task ::= SystemOperationalCapabilityTask ;
 Task ::= PATask ;
 Task ::= levelIdentifier::String references::String cost::String (correspondsTo::PATask)+ (isSupportedBy::ArchitectureTask)+ (isTheSourceOfNeedFor::InformationExchangeRequirement)+ (isTheDestinationOfNeedFor::InformationExchangeRequirement)+ (isCitedFor::SystemFunctionTraceabilityElement)+ ;
OrganizationTypeCapabilityNorm ::= (isPerformedBy::SystemCapability)+ (isOrdinateFor::Capability)+ (isSubordinateOf::Capability)+ (isPerformedByNC::NetworkCapability)+ (isPerformedByNLC::NodeLinkCapability)+ (isPerformedBySC::SystemCapability)+ (isCitedInCD::CapabilityDocument)+ (isUsedInMICN::MaterielItemCapabilityNorm)+ (isUsedInOTCN::OrganizationTypeCapabilityNorm)+ (isAttainedFor::RequiredInformationTechnologyCapability)+ ;
SystemPA ::= (mayBeCitedFor::SystemFunctionTraceabilityElement)+ (provides::SystemCapability)+ (enables::SystemOperationalCapabilityTask)+ ;
SystemOperationalCapabilityTask ::= levelIdentifier::String references::String cost::String (correspondsTo::PATask)+ (isSupportedBy::ArchitectureTask)+ (isTheSourceOfNeedFor::InformationExchangeRequirement)+ (isTheDestinationOfNeedFor::InformationExchangeRequirement)+ (isCitedFor::SystemFunctionTraceabilityElement)+ ;
--------------------metamodels::DoDAF.bgf--------------------
ATO ::= timePeriod::String (cr::CollectionRequirement)+ mea::MunitionsEffectsAssesment (tn::TargetNomination)+ rr::RestrikeRecommendation ;
F2C2 ::= jfc::JFC ;
WSV ::= missionID::String weaponfSystemID::String videoType::String ;
JFSOCC ::= jfc::JFC ;
TargetMaterialsAnalysis ::= targetID::String target::Target ;
TargetNomination ::= (ato::ATO)+ (mea::MunitionsEffectsAssesment)+ rr::RestrikeRecommendation target::Target ;
Target ::= (cr::CollectionRequirement)+ tn::TargetNomination holds::MIDB (describes::TargetMaterialsAnalysis)+ ;
JFMCC ::= jfc::JFC ;
ComponentCommand ::= DJFLCC ;
 ComponentCommand ::= JFACC ;
 ComponentCommand ::= JFMCC ;
 ComponentCommand ::= JFSOCC ;
 ComponentCommand ::= jfc::JFC ;
SystemProductFlow ::= (transports::Product)+ originatesFrom::SystemFunction ;
Performer ::= (decomposes::Performer)+ (fulfills::OperationalRole)+ ;
SubordinateAirCommand ::= MAW ;
 SubordinateAirCommand ::= WOC ;
 SubordinateAirCommand ::= jfacc::JFACC ;
DJFLCC ::= jfc::JFC ;
WOC ::= jfacc::JFACC ;
AOCCID ::= name::String content::String ;
CombatReport ::= friendlyUnitsInvolved::String combatLocation::String resultsAssessment::String duration::String ;
MISREP ::= missionID::String missionObjectives::String missionAssesments::String ;
SystemsNode ::= (groups::SystemAtNode)+ ;
CollectionRequirement ::= sourceID::String collectionTargetID::String toBeDoneByTime::String specialNeeds::String (rd::ResultData)+ (ato::ATO)+ (isContainedIn::Target)+ ;
JFACC ::= subordinateAirCommand::SubordinateAirCommand (aoccid::AOCCID)+ (aoccpsc::AOCCombatPlanStrategyCells)+ ;
SystemRole ::= ServiceProvider ;
 SystemRole ::= (decomposes::SystemRole)+ (performs::SystemFunction)+ terminatesAt::SystemRoleInterface ;
HigherEchelon ::= dia::DIA jfc::JFC ;
OperationalActivity ::= (decomposes::OperationalRole)+ (supports::SystemFunction)+ ;
DataReference ::= defineBy::Data ;
RestrikeRecommendation ::= ato::ATO tn::TargetNomination ;
COI ::= (comprises::Performer)+ defines::Vocabulary ;
DIA ::= nmjic::NMJIC higherEchelon::HigherEchelon ;
MIDB ::= (target::Target)+ ;
Service ::= (decomposes::SystemFunction)+ (consumes::Product)+ (produces::Product)+ terminatesAt::SystemProductFlow (mesuredBy::ConstraintOrRequirement)+ ;
SystemAtNodeInterface ::= originatesFrom::SystemAtNode ;
SystemRoleInterface ::= ServiceDependency ;
 SystemRoleInterface ::= originatesFrom::SystemRole ;
BDAReport ::= targetID::String reportSourceID::String assesmentSumart::String validityDuration::String (rd::ResultData)+ mea::MunitionsEffectsAssesment ;
System ::= (decomposes::System)+ (fulfills::SystemRole)+ ;
AOCCombatPlanStrategyCells ::= name::String content::String ;
OperationalRole ::= (decomposes::OperationalRole)+ (accomplishes::OperationalActivity)+ ;
MunitionsEffectsAssesment ::= bdaReport::BDAReport ato::ATO tn::TargetNomination ;
ResultData ::= CombatReport ;
 ResultData ::= WSV ;
 ResultData ::= MISREP ;
 ResultData ::= Imagery ;
 ResultData ::= sourceID::String timeStamp::String (cr::CollectionRequirement)+ (bdaReport::BDAReport)+ ;
JFC ::= higherEchelon::HigherEchelon f2c2::F2C2 componentComand::ComponentCommand ;
SystemFunction ::= Service ;
 SystemFunction ::= (decomposes::SystemFunction)+ (consumes::Product)+ (produces::Product)+ terminatesAt::SystemProductFlow (mesuredBy::ConstraintOrRequirement)+ ;
Vocabulary ::= (comprises::DataReference)+ ;
NMJIC ::= dia::DIA ;
SystemAtNode ::= references::System terminatesAt::SystemAtNodeInterface ;
MAW ::= jfacc::JFACC ;
Imagery ::= imageType::String spectralData::String geospacialLocation::String imageSize::Integer ;
ServiceDependency ::= originatesFrom::SystemRole ;
--------------------metamodels::DotNET_SystemReflection.bgf--------------------
MemberTypes ::= (Constructor::ε) | (Event::ε) | (Field::ε) | (Method::ε) | (Property::ε) | (TypeInfo::ε) | (Custom::ε) | (NestedType::ε) | (All::ε) ;
ManifestResource ::= content::String assembly::Assembly ;
Type ::= namespace::String (genericParameterAttributes::GenericParameterAttributes)+ (typeAttributes::TypeAttributes)+ baseType::Type module::Module (interfaces::Type)+ (members::MemberInfo)+ ;
MethodAttributes ::= (Abstract::ε) | (Assembly::ε) | (ChekedAccessOnOverride::ε) | (FamADNAssem::ε) | (Family::ε) | (FamORAssem::ε) | (Final::ε) | (HasSecurity::ε) | (HideBySig::ε) | (MemberAccessMask::ε) | (NewSlot::ε) | (PInvokeImpl::ε) | (Private::ε) | (PrivateScope::ε) | (Public::ε) | (RequiredSecObject::ε) | (ReservedMask::ε) | (ReuseSlot::ε) | (RTSpecialName::ε) | (SpecialName::ε) | (Static::ε) | (UnmanagedExport::ε) | (Virtual::ε) | (VtableLayoutMask::ε) ;
ParameterInfo ::= defaultValue::String position::Integer (attributes::ParameterAttributes)+ parameterType::Type member::MethodBase ;
TypeAttributes ::= (Abstract::ε) | (AnsiClass::ε) | (AutoClass::ε) | (AutoLayout::ε) | (BeforFieldInit::ε) | (Class::ε) | (ClassSemanticsMask::ε) | (ExplicitLayout::ε) | (HasSecutity::ε) | (Import::ε) | (Interface::ε) | (LayoutMask::ε) | (NestedAssembly::ε) | (NestedFamADNAssem::ε) | (NestedFamily::ε) | (NestedFamORAssem::ε) | (NestedPrivate::ε) | (NestedPublic::ε) | (NotPublic::ε) | (Public::ε) | (ReservedMask::ε) | (RTSpecialName::ε) | (Sealed::ε) | (SequentialLayout::ε) | (Serializable::ε) | (SpecialName::ε) | (StringFormatMask::ε) | (UnicodeClass::ε) | (VisibilityMask::ε) ;
FieldAttributes ::= (FieldAccessMask::ε) | (PrivateScope::ε) | (Private::ε) | (Assembly::ε) | (Family::ε) | (FamANDAssem::ε) | (FamORAssem::ε) | (Public::ε) | (Shared::ε) | (InitOnly::ε) | (Literal::ε) | (NotSerialized::ε) | (SpecialName::ε) | (PinvokeImpl::ε) | (ReservedMask::ε) | (RTSpecialName::ε) | (HasFieldMarshal::ε) | (HasDefault::ε) | (HasFieldRVA::ε) | (Static::ε) ;
EventAttributes ::= (None::ε) | (ReservedMask::ε) | (RTSpecialName::ε) | (SpecialName::ε) ;
MethodInfo ::= returnType::Type ;
PropertyAttributes ::= (NotSupported::ε) | (Optional::ε) | (Read::ε) | (Required::ε) | (Write::ε) ;
Module ::= qualifiedName::String scopeName::String assembly::Assembly (types::Type)+ ;
GenericParameterAttributes ::= (HasElementType::ε) | (Abstract::ε) | (AnsiClass::ε) | (AutoClass::ε) | (AutoLayout::ε) | (ByRef::ε) | (Class::ε) | (COMObject::ε) | (Contextful::ε) | (Enum::ε) | (ExplicitLayout::ε) | (Import::ε) | (Interface::ε) | (LayoutSequential::ε) | (MarshalByRef::ε) | (NestedAssembly::ε) | (NestedFamADNAssem::ε) | (NestedFamily::ε) | (NestedFamORAssem::ε) | (NestedPrivate::ε) | (NestedPublic::ε) | (NotPublic::ε) | (Pointer::ε) | (Primitive::ε) | (Public::ε) | (Sealed::ε) | (Serializable::ε) | (SpecialName::ε) | (UnicodeClass::ε) | (ValueType::ε) ;
ConstructorInfo ::= (attributes::MethodAttributes)+ (parameters::ParameterInfo)+ ;
EventInfo ::= isMulticast::Boolean attributes::EventAttributes eventHandlerType::Type ;
FieldInfo ::= fieldType::Type (attributes::FieldAttributes)+ ;
Assembly ::= location::String imageRuntimeVersion::String evidence::String codeBase::String entryPoint::MethodInfo (modules::Module)+ manifestModule::Module (referencedAssembly::Assembly)+ manifest::ManifestResource ;
PropertyInfo ::= propertyType::Type (attributes::PropertyAttributes)+ ;
ParameterAttributes ::= (HasDefault::ε) | (HasDefaultMArshal::ε) | (In::ε) | (Lcid::ε) | (None::ε) | (Optional::ε) | (Out::ε) | (Reserved3::ε) | (Reserved4::ε) | (ReservedMask::ε) | (RetVal::ε) ;
--------------------metamodels::EAI.bgf--------------------
EAISource ::= (resources::EAIResource)+ ;
EAIQueue ::= maxLength::Integer name::String ;
EAISink ::= (resources::EAIResource)+ ;
--------------------metamodels::EG.bgf--------------------
Basic ::= (predecessor::Node)+ (successor::Node)+ executionGraph::ExecutionGraph (nested::ExecutionGraph)+ ;
End ::= (predecessor::Node)+ (successor::Node)+ executionGraph::ExecutionGraph (nested::ExecutionGraph)+ ;
ExecutionGraph ::= (node::Node)+ nodeNested::Node ;
Start ::= (predecessor::Node)+ (successor::Node)+ executionGraph::ExecutionGraph (nested::ExecutionGraph)+ ;
Node ::= Start ;
 Node ::= End ;
 Node ::= Control ;
 Node ::= Basic ;
 Node ::= (predecessor::Node)+ (successor::Node)+ executionGraph::ExecutionGraph (nested::ExecutionGraph)+ ;
--------------------metamodels::EQN.bgf--------------------
PassiveCenter ::= node::Node queuingNetwork::QueuingNetwork ;
ActiveCenter ::= node::Node queuingNetwork::QueuingNetwork ;
RoutingChain ::= (queuingNetwork::QueuingNetwork)+ ;
ExecutionGraph ::= nodeNested::Node (node::Node)+ ;
Center ::= Special ;
 Center ::= ActiveCenter ;
 Center ::= PassiveCenter ;
 Center ::= node::Node queuingNetwork::QueuingNetwork ;
Node ::= nested::ExecutionGraph executionGraph::ExecutionGraph (demand::Center)+ ;
QueuingNetwork ::= (center::Center)+ workLoad::RoutingChain ;
--------------------metamodels::EXPRESS.bgf--------------------
Express_metamodel::Core::ARRAYType ::= Express_metamodel::Core::ARRAYType::lo-index::Core/Express_metamodel%3A%3ACore%3A%3AArrayBound Express_metamodel::Core::ARRAYType::hi-index::Core/Express_metamodel%3A%3ACore%3A%3AArrayBound isOptional::MOF/Boolean ;
Express_metamodel::Core::ScopedId ::= localName::Core/Identifier definingScope::Core/Express_metamodel%3A%3ACore%3A%3AScope ;
Express_metamodel::Instances::AttributeValue ::= Express_metamodel::Instances::AttributeValue::actual-value::Core/Express_metamodel%3A%3ACore%3A%3AInstance Express_metamodel::Instances::AttributeValue::attribute::Core/Express_metamodel%3A%3ACore%3A%3AExplicitAttribute ;
Express_metamodel::Instances::SingleEntityValue ::= Express_metamodel::Instances::SingleEntityValue::equivalent::Instances/Express_metamodel%3A%3AInstances%3A%3APartialEntityValue Express_metamodel::Instances::SingleEntityValue::of-type::Core/Express_metamodel%3A%3ACore%3A%3ASingleEntityType (Express_metamodel::Instances::SingleEntityValue::properties::Instances/Express_metamodel%3A%3AInstances%3A%3AAttributeValue)+ ;
Express_metamodel::Core::InterfacedElement ::= Express_metamodel::Core::InterfacedElement::interfacing-schema::Core/Express_metamodel%3A%3ACore%3A%3ASchema Express_metamodel::Core::InterfacedElement::refers-to::Core/Express_metamodel%3A%3ACore%3A%3ASchemaElement isUSE::MOF/Boolean interfacedId::Core/Express_metamodel%3A%3ACore%3A%3AScopedId ;
Express_metamodel::Core::GenericType ::= Express_metamodel::Core::GenericType::constraint::Algorithms/Express_metamodel%3A%3AAlgorithms%3A%3AActualTypeConstraint isEntity::MOF/Boolean ;
Express_metamodel::Expressions::PartialEntityConstructor ::= Express_metamodel::Expressions::PartialEntityConstructor::result-value::Instances/Express_metamodel%3A%3AInstances%3A%3APartialEntityValue Express_metamodel::Expressions::PartialEntityConstructor::attribute-group::Core/Express_metamodel%3A%3ACore%3A%3ASingleEntityType (Express_metamodel::Expressions::PartialEntityConstructor::bindings::Expressions/Express_metamodel%3A%3AExpressions%3A%3AAttributeBinding)+ id::Core/Identifier ;
Express_metamodel::Statements::RepeatStatement ::= Express_metamodel::Statements::RepeatStatement::while-expression::Core/Express_metamodel%3A%3ACore%3A%3AExpression Express_metamodel::Statements::RepeatStatement::body::Algorithms/Express_metamodel%3A%3AAlgorithms%3A%3AStatement Express_metamodel::Statements::RepeatStatement::control-variable::Statements/Express_metamodel%3A%3AStatements%3A%3AControlVariable Express_metamodel::Statements::RepeatStatement::until-expression::Core/Express_metamodel%3A%3ACore%3A%3AExpression ;
Express_metamodel::Algorithms::InVariable ::= Express_metamodel::Algorithms::InVariable::source::Algorithms/Express_metamodel%3A%3AAlgorithms%3A%3AInParameter ;
Express_metamodel::Expressions::GroupRef ::= Express_metamodel::Expressions::GroupRef::refers-to::Core/Express_metamodel%3A%3ACore%3A%3ASingleEntityType id::Core/Identifier ;
Express_metamodel::Statements::ProcedureCall ::= Express_metamodel::Statements::ProcedureCall::invokes::Algorithms/Express_metamodel%3A%3AAlgorithms%3A%3AProcedure (Express_metamodel::Statements::ProcedureCall::actual-parameters::Expressions/Express_metamodel%3A%3AExpressions%3A%3AActualParameter)+ ;
Express_metamodel::Statements::VariableCell ::= Express_metamodel::Statements::VariableCell::refers-to::Algorithms/Express_metamodel%3A%3AAlgorithms%3A%3AVariable id::Core/Identifier ;
Express_metamodel::Rules::SubtypeConstraint ::= (Express_metamodel::Rules::SubtypeConstraint::constrained-subtypes::Rules/Express_metamodel%3A%3ARules%3A%3AExtent)+ Express_metamodel::Rules::SubtypeConstraint::equivalent-rule::Core/Express_metamodel%3A%3ACore%3A%3AExpression Express_metamodel::Rules::SubtypeConstraint::collection::Rules/Express_metamodel%3A%3ARules%3A%3ASupertypeRule ;
Express_metamodel::Core::SizeConstraint ::= Express_metamodel::Core::SizeConstraint::asserts::Core/Express_metamodel%3A%3ACore%3A%3AExpression bound::MOF/Integer ;
Express_metamodel::Core::EntityType ::= (Express_metamodel::Core::EntityType::plays-role::Core/Express_metamodel%3A%3ACore%3A%3ARole)+ (Express_metamodel::Core::EntityType::redeclarations::Core/Express_metamodel%3A%3ACore%3A%3ARedeclaration)+ (Express_metamodel::Core::EntityType::attributes::Core/Express_metamodel%3A%3ACore%3A%3AAttribute)+ (Express_metamodel::Core::EntityType::plays-range-role::Core/Express_metamodel%3A%3ACore%3A%3ARangeRole)+ Express_metamodel::Core::EntityType::declares::Core/Express_metamodel%3A%3ACore%3A%3ASingleEntityType (Express_metamodel::Core::EntityType::extension::Rules/Express_metamodel%3A%3ARules%3A%3AExtent)+ (Express_metamodel::Core::EntityType::invertible_attributes::Core/Express_metamodel%3A%3ACore%3A%3AInvertibleAttribute)+ (Express_metamodel::Core::EntityType::plays-domain-role::Core/Express_metamodel%3A%3ACore%3A%3ADomainRole)+ (Express_metamodel::Core::EntityType::instances::Instances/Express_metamodel%3A%3AInstances%3A%3AEntityInstance)+ (Express_metamodel::Core::EntityType::unique-rules::Core/Express_metamodel%3A%3ACore%3A%3AUniqueRule)+ (Express_metamodel::Core::EntityType::used-in::Core/Express_metamodel%3A%3ACore%3A%3AInvertibleAttribute)+ (Express_metamodel::Core::EntityType::subtype-of::Core/Express_metamodel%3A%3ACore%3A%3AEntityType)+ isAbstract::MOF/Boolean ;
Express_metamodel::Core::SpecializedType ::= Express_metamodel::Core::SpecializedType::underlying-type::Core/Express_metamodel%3A%3ACore%3A%3AConcreteType ;
Express_metamodel::Instances::TypeName ::= Express_metamodel::Instances::TypeName::refers-to::Core/Express_metamodel%3A%3ACore%3A%3ANamedType represents::Core/Express_metamodel%3A%3ACore%3A%3AScopedId ;
Express_metamodel::Core::EnumerationType ::= (Express_metamodel::Core::EnumerationType::values::Instances/Express_metamodel%3A%3AInstances%3A%3AEnumerationItem)+ (Express_metamodel::Core::EnumerationType::declared-items::Instances/Express_metamodel%3A%3AInstances%3A%3AEnumerationItem)+ (Express_metamodel::Core::EnumerationType::extension::Core/Express_metamodel%3A%3ACore%3A%3AEnumerationType)+ Express_metamodel::Core::EnumerationType::base::Core/Express_metamodel%3A%3ACore%3A%3AEnumerationType isExtensible::MOF/Boolean ;
Express_metamodel::Core::Relationship ::= Express_metamodel::Core::Relationship::domain::Core/Express_metamodel%3A%3ACore%3A%3ADomainRole Express_metamodel::Core::Relationship::roles::Core/Express_metamodel%3A%3ACore%3A%3ARole Express_metamodel::Core::Relationship::based-on::Core/Express_metamodel%3A%3ACore%3A%3AInvertibleAttribute Express_metamodel::Core::Relationship::range::Core/Express_metamodel%3A%3ACore%3A%3ARangeRole ;
Express_metamodel::Rules::Extent ::= (Express_metamodel::Rules::Extent::constraints::Rules/Express_metamodel%3A%3ARules%3A%3ASubtypeConstraint)+ (Express_metamodel::Rules::Extent::content::Instances/Express_metamodel%3A%3AInstances%3A%3AEntityInstance)+ Express_metamodel::Rules::Extent::within-population::Instances/Express_metamodel%3A%3AInstances%3A%3APopulation (Express_metamodel::Rules::Extent::constraint-rules::Rules/Express_metamodel%3A%3ARules%3A%3AGlobalRule)+ Express_metamodel::Rules::Extent::for-type::Core/Express_metamodel%3A%3ACore%3A%3AEntityType id::Core/Express_metamodel%3A%3ACore%3A%3AScopedId ;
Express_metamodel::Algorithms::InParameter ::= Express_metamodel::Algorithms::InParameter::variable::Algorithms/Express_metamodel%3A%3AAlgorithms%3A%3AInVariable ;
Express_metamodel::Algorithms::ActualGenericType ::= Express_metamodel::Algorithms::ActualGenericType::refers-to::Algorithms/Express_metamodel%3A%3AAlgorithms%3A%3AActualDataType isEntity::MOF/Boolean label::Core/Identifier ;
Express_metamodel::Core::PartialEntityType ::= (Express_metamodel::Core::PartialEntityType::components::Core/Express_metamodel%3A%3ACore%3A%3ASingleEntityType)+ ;
Express_metamodel::Algorithms::ActualStructureConstraint ::= Express_metamodel::Algorithms::ActualStructureConstraint::matching-structure::Core/Express_metamodel%3A%3ACore%3A%3AAGGREGATEType Express_metamodel::Algorithms::ActualStructureConstraint::required-structure::Algorithms/Express_metamodel%3A%3AAlgorithms%3A%3AActualStructure label::Core/Identifier ;
Express_metamodel::Core::AGGREGATEType ::= Express_metamodel::Core::AGGREGATEType::upper-bound::Core/Express_metamodel%3A%3ACore%3A%3ASizeConstraint Express_metamodel::Core::AGGREGATEType::member-type::Core/Express_metamodel%3A%3ACore%3A%3AParameterType Express_metamodel::Core::AGGREGATEType::constraint::Algorithms/Express_metamodel%3A%3AAlgorithms%3A%3AActualStructureConstraint Express_metamodel::Core::AGGREGATEType::lower-bound::Core/Express_metamodel%3A%3ACore%3A%3ASizeConstraint ;
Express_metamodel::Expressions::MemberBinding ::= Express_metamodel::Expressions::MemberBinding::repetition::Expressions/Express_metamodel%3A%3AExpressions%3A%3ARepeatCount (Express_metamodel::Expressions::MemberBinding::to-slot::Instances/Express_metamodel%3A%3AInstances%3A%3AListMember)+ Express_metamodel::Expressions::MemberBinding::member-value::Core/Express_metamodel%3A%3ACore%3A%3AExpression position::MOF/Integer ;
Express_metamodel::Expressions::ExtentRef ::= Express_metamodel::Expressions::ExtentRef::refers-to::Core/Express_metamodel%3A%3ACore%3A%3ANamedType id::Core/Identifier ;
Express_metamodel::Instances::EntityInstance ::= Express_metamodel::Instances::EntityInstance::state::Instances/Express_metamodel%3A%3AInstances%3A%3AEntityValue (Express_metamodel::Instances::EntityInstance::instance-of::Core/Express_metamodel%3A%3ACore%3A%3AEntityType)+ (Express_metamodel::Instances::EntityInstance::appears-in-population::Instances/Express_metamodel%3A%3AInstances%3A%3APopulation)+ id::Instances/EntityName ;
Express_metamodel::Instances::ARRAYValue ::= (Express_metamodel::Instances::ARRAYValue::of-type::Core/Express_metamodel%3A%3ACore%3A%3AARRAYType)+ (Express_metamodel::Instances::ARRAYValue::member-slot::Instances/Express_metamodel%3A%3AInstances%3A%3AArrayMember)+ ;
Express_metamodel::Statements::ControlVariable ::= Express_metamodel::Statements::ControlVariable::bound-value::Core/Express_metamodel%3A%3ACore%3A%3AExpression Express_metamodel::Statements::ControlVariable::initial-value::Core/Express_metamodel%3A%3ACore%3A%3AExpression Express_metamodel::Statements::ControlVariable::namespace::Statements/Express_metamodel%3A%3AStatements%3A%3ARepeatStatement Express_metamodel::Statements::ControlVariable::increment::Core/Express_metamodel%3A%3ACore%3A%3AExpression ;
Express_metamodel::Core::GeneralARRAYType ::= Express_metamodel::Core::GeneralARRAYType::hi-index::Core/Express_metamodel%3A%3ACore%3A%3AArrayBound Express_metamodel::Core::GeneralARRAYType::lo-index::Core/Express_metamodel%3A%3ACore%3A%3AArrayBound isOptional::MOF/Boolean ;
Express_metamodel::Algorithms::ActualTypeConstraint ::= Express_metamodel::Algorithms::ActualTypeConstraint::matching-type::Core/Express_metamodel%3A%3ACore%3A%3AGenericType Express_metamodel::Algorithms::ActualTypeConstraint::required-type::Algorithms/Express_metamodel%3A%3AAlgorithms%3A%3AActualDataType label::Core/Identifier ;
Express_metamodel::Expressions::UnaryOperation ::= Express_metamodel::Expressions::UnaryOperation::unary-operand::Core/Express_metamodel%3A%3ACore%3A%3AExpression operator::Expressions/UnaryOperator ;
Express_metamodel::Expressions::QueryExpression ::= Express_metamodel::Expressions::QueryExpression::select-condition::Core/Express_metamodel%3A%3ACore%3A%3AExpression Express_metamodel::Expressions::QueryExpression::query-variable::Expressions/Express_metamodel%3A%3AExpressions%3A%3AQueryVariable Express_metamodel::Expressions::QueryExpression::aggregate-operand::Core/Express_metamodel%3A%3ACore%3A%3AExpression ;
Express_metamodel::Instances::BagMember ::= Express_metamodel::Instances::BagMember::member-value::Core/Express_metamodel%3A%3ACore%3A%3AInstance count::MOF/Integer ;
Express_metamodel::Core::SingleEntityType ::= (Express_metamodel::Core::SingleEntityType::declares_ExplicitAttribute::Core/Express_metamodel%3A%3ACore%3A%3AExplicitAttribute)+ (Express_metamodel::Core::SingleEntityType::declares_Attribute::Core/Express_metamodel%3A%3ACore%3A%3AAttribute)+ Express_metamodel::Core::SingleEntityType::declared-in::Core/Express_metamodel%3A%3ACore%3A%3AEntityType Express_metamodel::Core::SingleEntityType::equivalent::Core/Express_metamodel%3A%3ACore%3A%3APartialEntityType id::Core/Express_metamodel%3A%3ACore%3A%3AScopedId ;
Express_metamodel::Core::ArrayBound ::= Express_metamodel::Core::ArrayBound::bound-expression::Core/Express_metamodel%3A%3ACore%3A%3AExpression bound::MOF/Integer ;
Express_metamodel::Statements::SkipStatement ::= Express_metamodel::Statements::SkipStatement::in-block::Algorithms/Express_metamodel%3A%3AAlgorithms%3A%3AStatement ;
Express_metamodel::Instances::PartialEntityValue ::= Express_metamodel::Instances::PartialEntityValue::of-type::Core/Express_metamodel%3A%3ACore%3A%3APartialEntityType (Express_metamodel::Instances::PartialEntityValue::components::Instances/Express_metamodel%3A%3AInstances%3A%3ASingleEntityValue)+ ;
Express_metamodel::Core::Schema ::= (Express_metamodel::Core::Schema::documentation::Core/Express_metamodel%3A%3ACore%3A%3ARemark)+ (Express_metamodel::Core::Schema::interfaces::Core/Express_metamodel%3A%3ACore%3A%3AInterfacedElement)+ (Express_metamodel::Core::Schema::schema-elements::Core/Express_metamodel%3A%3ACore%3A%3ASchemaElement)+ (Express_metamodel::Core::Schema::interfaced-elements::Core/Express_metamodel%3A%3ACore%3A%3ASchemaElement)+ name::Core/Identifier version::Core/Identifier ;
Express_metamodel::Statements::MemberCell ::= Express_metamodel::Statements::MemberCell::index-value::Core/Express_metamodel%3A%3ACore%3A%3AExpression Express_metamodel::Statements::MemberCell::base-aggregate::Statements/Express_metamodel%3A%3AStatements%3A%3AVARExpression ;
Express_metamodel::Statements::EscapeStatement ::= Express_metamodel::Statements::EscapeStatement::in-block::Algorithms/Express_metamodel%3A%3AAlgorithms%3A%3AStatement ;
Express_metamodel::Rules::NamedRule ::= Express_metamodel::Rules::NamedRule::namespace::Rules/Express_metamodel%3A%3ARules%3A%3AGlobalRule Express_metamodel::Rules::NamedRule::asserts-expression::Core/Express_metamodel%3A%3ACore%3A%3AExpression position::MOF/Integer ;
Express_metamodel::Instances::BAGValue ::= (Express_metamodel::Instances::BAGValue::member-slot::Instances/Express_metamodel%3A%3AInstances%3A%3ABagMember)+ (Express_metamodel::Instances::BAGValue::of-type::Core/Express_metamodel%3A%3ACore%3A%3ABAGType)+ ;
Express_metamodel::Instances::EnumerationItem ::= (Express_metamodel::Instances::EnumerationItem::of-type::Core/Express_metamodel%3A%3ACore%3A%3AEnumerationType)+ Express_metamodel::Instances::EnumerationItem::declared-in::Core/Express_metamodel%3A%3ACore%3A%3AEnumerationType position::MOF/Integer ;
Express_metamodel::Algorithms::Function ::= Express_metamodel::Algorithms::Function::result::Algorithms/Express_metamodel%3A%3AAlgorithms%3A%3AFunctionResult ;
Express_metamodel::Expressions::VariableRef ::= Express_metamodel::Expressions::VariableRef::refers-to::Algorithms/Express_metamodel%3A%3AAlgorithms%3A%3ANamedVariable id::Core/Identifier ;
Express_metamodel::Rules::SupertypeRule ::= Express_metamodel::Rules::SupertypeRule::named-supertype::Core/Express_metamodel%3A%3ACore%3A%3AEntityType (Express_metamodel::Rules::SupertypeRule::constraints::Rules/Express_metamodel%3A%3ARules%3A%3ASubtypeConstraint)+ assertsAbstract::MOF/Boolean ;
Express_metamodel::Algorithms::FunctionResult ::= Express_metamodel::Algorithms::FunctionResult::namespace::Algorithms/Express_metamodel%3A%3AAlgorithms%3A%3AFunction ;
Express_metamodel::Core::Expression ::= Express_metamodel::Core::Expression::evaluation::Core/Express_metamodel%3A%3ACore%3A%3AInstance Express_metamodel::Core::Expression::interpretation-context::Core/Express_metamodel%3A%3ACore%3A%3AScope Express_metamodel::Core::Expression::data-type::Core/Express_metamodel%3A%3ACore%3A%3ADataType text::Core/ExpressText ;
Express_metamodel::Expressions::UsedInRef ::= Express_metamodel::Expressions::UsedInRef::inverse-of::Core/Express_metamodel%3A%3ACore%3A%3AAttribute ;
Express_metamodel::Statements::CaseStatement ::= (Express_metamodel::Statements::CaseStatement::cases::Statements/Express_metamodel%3A%3AStatements%3A%3ACaseAction)+ Express_metamodel::Statements::CaseStatement::selection-expression::Core/Express_metamodel%3A%3ACore%3A%3AExpression ;
Express_metamodel::Statements::AttributeCell ::= Express_metamodel::Statements::AttributeCell::refers-to::Core/Express_metamodel%3A%3ACore%3A%3AExplicitAttribute Express_metamodel::Statements::AttributeCell::base-entity::Statements/Express_metamodel%3A%3AStatements%3A%3AVARExpression id::Core/Identifier ;
Express_metamodel::Instances::SingleLeafInstance ::= Express_metamodel::Instances::SingleLeafInstance::characterizing-type::Core/Express_metamodel%3A%3ACore%3A%3AEntityType ;
Express_metamodel::Expressions::Coercion ::= Express_metamodel::Expressions::Coercion::operand::Core/Express_metamodel%3A%3ACore%3A%3AExpression Express_metamodel::Expressions::Coercion::target-type::Core/Express_metamodel%3A%3ACore%3A%3AVariableType ;
Express_metamodel::Expressions::BinaryOperation ::= Express_metamodel::Expressions::BinaryOperation::left-operand::Core/Express_metamodel%3A%3ACore%3A%3AExpression Express_metamodel::Expressions::BinaryOperation::right-operand::Core/Express_metamodel%3A%3ACore%3A%3AExpression operator::Expressions/BinaryOperator ;
Express_metamodel::Statements::CaseAction ::= (Express_metamodel::Statements::CaseAction::label-value::Core/Express_metamodel%3A%3ACore%3A%3AExpression)+ Express_metamodel::Statements::CaseAction::action::Algorithms/Express_metamodel%3A%3AAlgorithms%3A%3AStatement isDefault::MOF/Boolean ;
Express_metamodel::Expressions::QueryVariable ::= Express_metamodel::Expressions::QueryVariable::namespace::Expressions/Express_metamodel%3A%3AExpressions%3A%3AQueryExpression ;
Express_metamodel::Expressions::IndeterminateRef ::= Express_metamodel::Expressions::IndeterminateRef::refers-to::Instances/Express_metamodel%3A%3AInstances%3A%3AIndeterminate ;
Express_metamodel::Expressions::AttributeRef ::= Express_metamodel::Expressions::AttributeRef::refers-to::Core/Express_metamodel%3A%3ACore%3A%3AAttribute id::Core/Identifier ;
Express_metamodel::Expressions::FunctionCall ::= (Express_metamodel::Expressions::FunctionCall::actual-parameters::Expressions/Express_metamodel%3A%3AExpressions%3A%3AActualParameter)+ Express_metamodel::Expressions::FunctionCall::invokes-function::Algorithms/Express_metamodel%3A%3AAlgorithms%3A%3AFunction Express_metamodel::Expressions::FunctionCall::/returns-result::Algorithms/Express_metamodel%3A%3AAlgorithms%3A%3AFunctionResult ;
Express_metamodel::Expressions::AggregateIndex ::= Express_metamodel::Expressions::AggregateIndex::index-value::Core/Express_metamodel%3A%3ACore%3A%3AExpression ;
Express_metamodel::Statements::IfStatement ::= Express_metamodel::Statements::IfStatement::if-condition::Core/Express_metamodel%3A%3ACore%3A%3AExpression Express_metamodel::Statements::IfStatement::else-actions::Algorithms/Express_metamodel%3A%3AAlgorithms%3A%3AStatement Express_metamodel::Statements::IfStatement::then-actions::Algorithms/Express_metamodel%3A%3AAlgorithms%3A%3AStatement ;
Express_metamodel::Instances::SETValue ::= (Express_metamodel::Instances::SETValue::member-value::Core/Express_metamodel%3A%3ACore%3A%3AInstance)+ (Express_metamodel::Instances::SETValue::of-type::Core/Express_metamodel%3A%3ACore%3A%3ASETType)+ ;
Express_metamodel::Statements::AliasStatement ::= Express_metamodel::Statements::AliasStatement::binds-to-reference::Statements/Express_metamodel%3A%3AStatements%3A%3AVARExpression Express_metamodel::Statements::AliasStatement::body::Algorithms/Express_metamodel%3A%3AAlgorithms%3A%3AStatement Express_metamodel::Statements::AliasStatement::alias-variable::Statements/Express_metamodel%3A%3AStatements%3A%3AAliasVariable ;
Express_metamodel::Core::Remark ::= (Express_metamodel::Core::Remark::describes-schema::Core/Express_metamodel%3A%3ACore%3A%3ASchema)+ Express_metamodel::Core::Remark::appears-in::Core/Express_metamodel%3A%3ACore%3A%3AScope (Express_metamodel::Core::Remark::describes-element::Core/Express_metamodel%3A%3ACore%3A%3ANamedElement)+ isTagged::MOF/Boolean isTail::MOF/Boolean text::Core/ExpressText ;
Express_metamodel::Core::DerivedAttribute ::= Express_metamodel::Core::DerivedAttribute::derivation::Core/Express_metamodel%3A%3ACore%3A%3AExpression ;
Express_metamodel::Core::Redeclaration ::= Express_metamodel::Core::Redeclaration::derivation::Core/Express_metamodel%3A%3ACore%3A%3AExpression Express_metamodel::Core::Redeclaration::restricted-type::Core/Express_metamodel%3A%3ACore%3A%3AAttributeType Express_metamodel::Core::Redeclaration::refines::Core/Express_metamodel%3A%3ACore%3A%3ARedeclaration Express_metamodel::Core::Redeclaration::upper-bound::Core/Express_metamodel%3A%3ACore%3A%3ASizeConstraint Express_metamodel::Core::Redeclaration::lower-bound::Core/Express_metamodel%3A%3ACore%3A%3ASizeConstraint Express_metamodel::Core::Redeclaration::scope::Core/Express_metamodel%3A%3ACore%3A%3AEntityType Express_metamodel::Core::Redeclaration::original-attribute::Core/Express_metamodel%3A%3ACore%3A%3AAttribute Express_metamodel::Core::Redeclaration::refined-role::Core/Express_metamodel%3A%3ACore%3A%3ARole position::MOF/Integer isMandatory::MOF/Boolean alias::Core/Express_metamodel%3A%3ACore%3A%3AScopedId ;
Express_metamodel::Instances::SpecializedValue ::= Express_metamodel::Instances::SpecializedValue::of-type::Core/Express_metamodel%3A%3ACore%3A%3ASpecializedType Express_metamodel::Instances::SpecializedValue::fundamental-value::Instances/Express_metamodel%3A%3AInstances%3A%3AConcreteValue ;
Express_metamodel::Expressions::AttributeBinding ::= Express_metamodel::Expressions::AttributeBinding::attribute-value::Core/Express_metamodel%3A%3ACore%3A%3AExpression Express_metamodel::Expressions::AttributeBinding::to-value::Instances/Express_metamodel%3A%3AInstances%3A%3AAttributeValue Express_metamodel::Expressions::AttributeBinding::attribute::Core/Express_metamodel%3A%3ACore%3A%3AExplicitAttribute position::MOF/Integer ;
Express_metamodel::Algorithms::LocalVariable ::= Express_metamodel::Algorithms::LocalVariable::initial-value::Core/Express_metamodel%3A%3ACore%3A%3AExpression ;
Express_metamodel::Instances::Constant ::= Express_metamodel::Instances::Constant::value-expression::Core/Express_metamodel%3A%3ACore%3A%3AExpression Express_metamodel::Instances::Constant::actual-value::Core/Express_metamodel%3A%3ACore%3A%3AInstance Express_metamodel::Instances::Constant::data-type::Core/Express_metamodel%3A%3ACore%3A%3AInstantiableType ;
Express_metamodel::Algorithms::ActualARRAYType ::= Express_metamodel::Algorithms::ActualARRAYType::hi-index::Core/Express_metamodel%3A%3ACore%3A%3AArrayBound Express_metamodel::Algorithms::ActualARRAYType::lo-index::Core/Express_metamodel%3A%3ACore%3A%3AArrayBound isOptional::MOF/Boolean ;
Express_metamodel::Core::RealType ::= precision::MOF/Integer ;
Express_metamodel::Expressions::BinaryIndex ::= Express_metamodel::Expressions::BinaryIndex::first-bit::Core/Express_metamodel%3A%3ACore%3A%3AExpression Express_metamodel::Expressions::BinaryIndex::last-bit::Core/Express_metamodel%3A%3ACore%3A%3AExpression ;
Express_metamodel::Instances::LISTValue ::= (Express_metamodel::Instances::LISTValue::of-type::Core/Express_metamodel%3A%3ACore%3A%3ALISTType)+ (Express_metamodel::Instances::LISTValue::member-slot::Instances/Express_metamodel%3A%3AInstances%3A%3AListMember)+ ;
Express_metamodel::Instances::ArrayMember ::= Express_metamodel::Instances::ArrayMember::member-value::Core/Express_metamodel%3A%3ACore%3A%3AInstance index::MOF/Integer ;
Express_metamodel::Instances::RoleName ::= Express_metamodel::Instances::RoleName::refers-to::Core/Express_metamodel%3A%3ACore%3A%3AAttribute represents::Core/Express_metamodel%3A%3ACore%3A%3AScopedId ;
Express_metamodel::Expressions::ConstantRef ::= Express_metamodel::Expressions::ConstantRef::refers-to::Instances/Express_metamodel%3A%3AInstances%3A%3AConstant id::Core/Identifier ;
Express_metamodel::Statements::GroupCell ::= Express_metamodel::Statements::GroupCell::base-entity::Statements/Express_metamodel%3A%3AStatements%3A%3AVARExpression Express_metamodel::Statements::GroupCell::refers-to::Core/Express_metamodel%3A%3ACore%3A%3ASingleEntityType id::Core/Identifier ;
Express_metamodel::Instances::EntityValue ::= (Express_metamodel::Instances::EntityValue::corresponds to::Core/Express_metamodel%3A%3ACore%3A%3AEntityType)+ (Express_metamodel::Instances::EntityValue::describes::Instances/Express_metamodel%3A%3AInstances%3A%3AEntityInstance)+ ;
Express_metamodel::Instances::ListMember ::= Express_metamodel::Instances::ListMember::member-value::Core/Express_metamodel%3A%3ACore%3A%3AInstance position::MOF/Integer ;
Express_metamodel::Core::UniqueRule ::= Express_metamodel::Core::UniqueRule::domain::Core/Express_metamodel%3A%3ACore%3A%3AEntityType (Express_metamodel::Core::UniqueRule::key-component::Core/Express_metamodel%3A%3ACore%3A%3AAttribute)+ position::MOF/Integer ;
Express_metamodel::Core::InvertibleAttribute ::= (Express_metamodel::Core::InvertibleAttribute::inverse::Core/Express_metamodel%3A%3ACore%3A%3AInverseAttribute)+ (Express_metamodel::Core::InvertibleAttribute::range-type::Core/Express_metamodel%3A%3ACore%3A%3AEntityType)+ Express_metamodel::Core::InvertibleAttribute::creates-relationship::Core/Express_metamodel%3A%3ACore%3A%3ARelationship (Express_metamodel::Core::InvertibleAttribute::referencing-type::Core/Express_metamodel%3A%3ACore%3A%3AEntityType)+ Express_metamodel::Core::InvertibleAttribute::models-role::Core/Express_metamodel%3A%3ACore%3A%3ARangeRole ;
Express_metamodel::Core::RangeRole ::= Express_metamodel::Core::RangeRole::domain-view::Core/Express_metamodel%3A%3ACore%3A%3AInvertibleAttribute Express_metamodel::Core::RangeRole::in-relationship::Core/Express_metamodel%3A%3ACore%3A%3ARelationship Express_metamodel::Core::RangeRole::range::Core/Express_metamodel%3A%3ACore%3A%3AEntityType id::Core/Express_metamodel%3A%3ACore%3A%3AScopedId ;
Express_metamodel::Core::StringType ::= Express_metamodel::Core::StringType::string-length-constraint::Core/Express_metamodel%3A%3ACore%3A%3ALengthConstraint ;
Express_metamodel::Expressions::StringIndex ::= Express_metamodel::Expressions::StringIndex::first-code::Core/Express_metamodel%3A%3ACore%3A%3AExpression Express_metamodel::Expressions::StringIndex::last-code::Core/Express_metamodel%3A%3ACore%3A%3AExpression ;
Express_metamodel::Expressions::EnumItemRef ::= Express_metamodel::Expressions::EnumItemRef::refers-to::Instances/Express_metamodel%3A%3AInstances%3A%3AEnumerationItem id::Core/Identifier ;
Express_metamodel::Core::LengthConstraint ::= maxLength::MOF/Integer isFixed::MOF/Boolean ;
Express_metamodel::Statements::StatementBlock ::= (Express_metamodel::Statements::StatementBlock::body-statements_Statement::Algorithms/Express_metamodel%3A%3AAlgorithms%3A%3AStatement)+ delimited::MOF/Boolean ;
Express_metamodel::Instances::Population ::= (Express_metamodel::Instances::Population::composition_EntityInstance::Instances/Express_metamodel%3A%3AInstances%3A%3AEntityInstance)+ (Express_metamodel::Instances::Population::composition_Instance::Core/Express_metamodel%3A%3ACore%3A%3AInstance)+ (Express_metamodel::Instances::Population::governing-schema::Core/Express_metamodel%3A%3ACore%3A%3ASchema)+ ;
Express_metamodel::Algorithms::Statement ::= Express_metamodel::Algorithms::Statement::in-block::Statements/Express_metamodel%3A%3AStatements%3A%3AStatementBlock (Express_metamodel::Algorithms::Statement::body-statements_SkipStatement::Statements/Express_metamodel%3A%3AStatements%3A%3ASkipStatement)+ (Express_metamodel::Algorithms::Statement::body-statements_EscapeStatement::Statements/Express_metamodel%3A%3AStatements%3A%3AEscapeStatement)+ Express_metamodel::Algorithms::Statement::controlled-by::Statements/Express_metamodel%3A%3AStatements%3A%3ARepeatStatement Express_metamodel::Algorithms::Statement::implements::Algorithms/Express_metamodel%3A%3AAlgorithms%3A%3AAlgorithm text::Core/ExpressText ;
Express_metamodel::Expressions::ActualParameter ::= Express_metamodel::Expressions::ActualParameter::in-ProcedureCall::Statements/Express_metamodel%3A%3AStatements%3A%3AProcedureCall Express_metamodel::Expressions::ActualParameter::in-FunctionCall::Expressions/Express_metamodel%3A%3AExpressions%3A%3AFunctionCall Express_metamodel::Expressions::ActualParameter::formal-parameter::Algorithms/Express_metamodel%3A%3AAlgorithms%3A%3AParameter Express_metamodel::Expressions::ActualParameter::actual-referent::Statements/Express_metamodel%3A%3AStatements%3A%3AVARExpression Express_metamodel::Expressions::ActualParameter::actual-value::Core/Express_metamodel%3A%3ACore%3A%3AExpression position::MOF/Integer ;
Express_metamodel::Core::ExplicitAttribute ::= Express_metamodel::Core::ExplicitAttribute::of-entity::Core/Express_metamodel%3A%3ACore%3A%3ASingleEntityType isOptional::MOF/Boolean ;
Express_metamodel::Core::DomainRule ::= Express_metamodel::Core::DomainRule::domain::Core/Express_metamodel%3A%3ACore%3A%3ANamedType position::MOF/Integer ;
Express_metamodel::Statements::AliasVariable ::= Express_metamodel::Statements::AliasVariable::namespace::Statements/Express_metamodel%3A%3AStatements%3A%3AAliasStatement Express_metamodel::Statements::AliasVariable::referent::Statements/Express_metamodel%3A%3AStatements%3A%3AVARExpression ;
Express_metamodel::Algorithms::ActualAGGREGATEType ::= Express_metamodel::Algorithms::ActualAGGREGATEType::upper-bound::Core/Express_metamodel%3A%3ACore%3A%3ASizeConstraint Express_metamodel::Algorithms::ActualAGGREGATEType::refers-to::Algorithms/Express_metamodel%3A%3AAlgorithms%3A%3AActualStructure Express_metamodel::Algorithms::ActualAGGREGATEType::member-type::Core/Express_metamodel%3A%3ACore%3A%3AVariableType Express_metamodel::Algorithms::ActualAGGREGATEType::lower-bound::Core/Express_metamodel%3A%3ACore%3A%3ASizeConstraint label::Core/Identifier ;
Express_metamodel::Expressions::ParameterRef ::= Express_metamodel::Expressions::ParameterRef::refers-to::Algorithms/Express_metamodel%3A%3AAlgorithms%3A%3AParameter id::Core/Identifier ;
Express_metamodel::Statements::VARCell ::= Express_metamodel::Statements::VARCell::refers-to::Algorithms/Express_metamodel%3A%3AAlgorithms%3A%3AVARVariable id::Core/Identifier ;
Express_metamodel::Core::BinaryType ::= Express_metamodel::Core::BinaryType::binary-length-constraint::Core/Express_metamodel%3A%3ACore%3A%3ALengthConstraint ;
Express_metamodel::Core::DomainRole ::= Express_metamodel::Core::DomainRole::range-view::Core/Express_metamodel%3A%3ACore%3A%3AInverseAttribute Express_metamodel::Core::DomainRole::domain::Core/Express_metamodel%3A%3ACore%3A%3AEntityType Express_metamodel::Core::DomainRole::in-relationship::Core/Express_metamodel%3A%3ACore%3A%3ARelationship id::Core/Express_metamodel%3A%3ACore%3A%3AScopedId ;
Express_metamodel::Expressions::RepeatCount ::= Express_metamodel::Expressions::RepeatCount::derivation::Core/Express_metamodel%3A%3ACore%3A%3AExpression ;
Express_metamodel::Core::SelectType ::= (Express_metamodel::Core::SelectType::allowed-types::Core/Express_metamodel%3A%3ACore%3A%3ANamedType)+ (Express_metamodel::Core::SelectType::extension::Core/Express_metamodel%3A%3ACore%3A%3ASelectType)+ Express_metamodel::Core::SelectType::base::Core/Express_metamodel%3A%3ACore%3A%3ASelectType (Express_metamodel::Core::SelectType::select-list::Core/Express_metamodel%3A%3ACore%3A%3ANamedType)+ isExtensible::MOF/Boolean isEntity::MOF/Boolean ;
Express_metamodel::Expressions::AggregateInitializer ::= Express_metamodel::Expressions::AggregateInitializer::result-value::Instances/Express_metamodel%3A%3AInstances%3A%3AGenericAggregate (Express_metamodel::Expressions::AggregateInitializer::bindings::Expressions/Express_metamodel%3A%3AExpressions%3A%3AMemberBinding)+ ;
Express_metamodel::Expressions::Literal ::= Express_metamodel::Expressions::Literal::refers-to::Instances/Express_metamodel%3A%3AInstances%3A%3ASimpleValue ;
Express_metamodel::Statements::ReturnStatement ::= Express_metamodel::Statements::ReturnStatement::return-value::Core/Express_metamodel%3A%3ACore%3A%3AExpression ;
Express_metamodel::Statements::Assignment ::= Express_metamodel::Statements::Assignment::assigned-value::Core/Express_metamodel%3A%3ACore%3A%3AExpression Express_metamodel::Statements::Assignment::variable::Statements/Express_metamodel%3A%3AStatements%3A%3AVARExpression ;
Express_metamodel::Rules::GlobalRule ::= Express_metamodel::Rules::GlobalRule::supporting-body::Algorithms/Express_metamodel%3A%3AAlgorithms%3A%3AStatement (Express_metamodel::Rules::GlobalRule::constrained-extents::Rules/Express_metamodel%3A%3ARules%3A%3AExtent)+ (Express_metamodel::Rules::GlobalRule::contains-rules::Rules/Express_metamodel%3A%3ARules%3A%3ANamedRule)+ ;
Express_metamodel::Core::InverseAttribute ::= Express_metamodel::Core::InverseAttribute::models-role::Core/Express_metamodel%3A%3ACore%3A%3ADomainRole Express_metamodel::Core::InverseAttribute::explicit::Core/Express_metamodel%3A%3ACore%3A%3AInvertibleAttribute isUnique::MOF/Boolean ;
--------------------metamodels::EXPRESSb.bgf--------------------
CaseStatement ::= (cases::statements/CaseAction)+ selectionExpression::core/Expression ;
ReturnStatement ::= returnValue::core/Expression ;
PartialEntityType ::= (components::core/SingleEntityType)+ ;
Coercion ::= operand::core/Expression targetType::core/VariableType ;
StatementBlock ::= (bodyStatements_Statement::algorithms/Statement)+ delimited::mof/Boolean ;
AttributeCell ::= refersTo::core/ExplicitAttribute baseEntity::statements/VARExpression id::core/Identifier ;
BinaryType ::= binaryLengthConstraint::core/LengthConstraint ;
DomainRole ::= rangeView::core/InverseAttribute domain::core/EntityType id::core/ScopedId ;
AGGREGATEType ::= upperBound::core/SizeConstraint memberType::core/ParameterType constraint::algorithms/ActualStructureConstraint lowerBound::core/SizeConstraint ;
ListMember ::= memberValue::core/Instance position::mof/Integer ;
Function ::= result::algorithms/FunctionResult ;
IndeterminateRef ::= refersTo::instances/Indeterminate ;
AttributeRef ::= refersTo::core/Attribute id::core/Identifier ;
SelectType ::= (allowedTypes::core/NamedType)+ (extension::core/SelectType)+ base::core/SelectType (selectList::core/NamedType)+ isExtensible::mof/Boolean isEntity::mof/Boolean ;
FunctionCall ::= (actualParameters::expressions/ActualParameter)+ invokesFunction::algorithms/Function returnsResult::algorithms/FunctionResult ;
RepeatStatement ::= whileExpression::core/Expression body::algorithms/Statement controlVariable::statements/ControlVariable untilExpression::core/Expression ;
LISTValue ::= (memberSlot::instances/ListMember)+ ;
AggregateIndex ::= indexValue::core/Expression ;
Population ::= (compositionEntityInstance::instances/EntityInstance)+ (compositionInstance::core/Instance)+ (governingSchema::core/Schema)+ ;
Assignment ::= assignedValue::core/Expression variable::statements/VARExpression ;
InverseAttribute ::= modelsRole::core/DomainRole explicit::core/InvertibleAttribute isUnique::mof/Boolean ;
ScopedId ::= localName::core/Identifier definingScope::core/Scope ;
MemberBinding ::= repetition::expressions/RepeatCount (toSlot::instances/ListMember)+ memberValue::core/Expression position::mof/Integer ;
BAGValue ::= (memberSlot::instances/BagMember)+ ;
ExtentRef ::= refersTo::core/NamedType id::core/Identifier ;
AttributeBinding ::= attributeValue::core/Expression toValue::instances/AttributeValue attribute::core/ExplicitAttribute position::mof/Integer ;
LocalVariable ::= initialValue::core/Expression ;
InParameter ::= variable::algorithms/InVariable ;
InVariable ::= source::algorithms/InParameter ;
GroupCell ::= baseEntity::statements/VARExpression refersTo::core/SingleEntityType id::core/Identifier ;
QueryExpression ::= selectCondition::core/Expression queryVariable::expressions/QueryVariable aggregateOperand::core/Expression ;
GlobalRule ::= supportingBody::algorithms/Statement (constrainedExtents::rules/Extent)+ (containsRules::rules/NamedRule)+ ;
SizeConstraint ::= bound::mof/Integer ;
EntityType ::= (playsRole::core/Role)+ (redeclarations::core/Redeclaration)+ (attributes::core/Attribute)+ (playsRangeRole::core/RangeRole)+ declares::core/SingleEntityType (extension::rules/Extent)+ (invertibleAttributes::core/InvertibleAttribute)+ (playsDomainRole::core/DomainRole)+ (uniqueRules::core/UniqueRule)+ (usedIn::core/InvertibleAttribute)+ (subtypeOf::core/EntityType)+ isAbstract::mof/Boolean ;
EnumerationItem ::= declaredIn::core/EnumerationType position::mof/Integer ;
ControlVariable ::= boundValue::core/Expression initialValue::core/Expression increment::core/Expression ;
Relationship ::= domain::core/DomainRole roles::core/Role basedOn::core/InvertibleAttribute range::core/RangeRole ;
VariableRef ::= refersTo::algorithms/NamedVariable id::core/Identifier ;
SubtypeConstraint ::= (constrainedSubtypes::rules/Extent)+ equivalentRule::core/Expression collection::rules/SupertypeRule ;
AttributeValue ::= actualValue::core/Instance attribute::core/ExplicitAttribute ;
UsedInRef ::= inverseOf::core/Attribute ;
SETValue ::= (memberValue::core/Instance)+ ;
Statement ::= inBlock::statements/StatementBlock (bodyStatementsSkipStatement::statements/SkipStatement)+ (bodyStatementsEscapeStatement::statements/EscapeStatement)+ controlledBy::statements/RepeatStatement implements::algorithms/Algorithm text::core/ExpressText ;
AliasVariable ::= referent::statements/VARExpression ;
GeneralARRAYType ::= hiIndex::core/ArrayBound loIndex::core/ArrayBound isOptional::mof/Boolean ;
ParameterRef ::= refersTo::algorithms/Parameter id::core/Identifier ;
Extent ::= (constraints::rules/SubtypeConstraint)+ (content::instances/EntityInstance)+ withinPopulation::instances/Population (constraintRules::rules/GlobalRule)+ forType::core/EntityType id::core/ScopedId ;
SpecializedValue ::= fundamentalValue::instances/ConcreteValue ;
Redeclaration ::= derivation::core/Expression restrictedType::core/AttributeType refines::core/Redeclaration upperBound::core/SizeConstraint lowerBound::core/SizeConstraint scope::core/EntityType originalAttribute::core/Attribute refinedRole::core/Role position::mof/Integer isMandatory::mof/Boolean alias::core/ScopedId ;
SingleEntityValue ::= equivalent::instances/PartialEntityValue ofType::core/SingleEntityType (properties::instances/AttributeValue)+ ;
BinaryOperation ::= leftOperand::core/Expression rightOperand::core/Expression operator::expressions/BinaryOperator ;
ArrayBound ::= boundExpression::core/Expression bound::mof/Integer ;
SingleEntityType ::= (declaresExplicitAttribute::core/ExplicitAttribute)+ (declaresAttribute::core/Attribute)+ declaredIn::core/EntityType equivalent::core/PartialEntityType id::core/ScopedId ;
Constant ::= valueExpression::core/Expression actualValue::core/Instance dataType::core/InstantiableType ;
AggregateInitializer ::= resultValue::instances/GenericAggregate (bindings::expressions/MemberBinding)+ ;
RoleName ::= refersTo::core/Attribute represents::core/ScopedId ;
Schema ::= (documentation::core/Remark)+ (interfaces::core/InterfacedElement)+ (schemaElements::core/SchemaElement)+ (interfacedElements::core/SchemaElement)+ name::core/Identifier version::core/Identifier ;
MemberCell ::= indexValue::core/Expression baseAggregate::statements/VARExpression ;
EntityInstance ::= state::instances/EntityValue (instanceOf::core/EntityType)+ id::instances/EntityName ;
ARRAYValue ::= (memberSlot::instances/ArrayMember)+ ;
Expression ::= evaluation::core/Instance interpretationContext::core/Scope dataType::core/DataType text::core/ExpressText ;
PartialEntityConstructor ::= resultValue::instances/PartialEntityValue attributeGroup::core/SingleEntityType (bindings::expressions/AttributeBinding)+ id::core/Identifier ;
NamedRule ::= assertsExpression::core/Expression position::mof/Integer ;
GroupRef ::= refersTo::core/SingleEntityType id::core/Identifier ;
InvertibleAttribute ::= (inverse::core/InverseAttribute)+ (rangeType::core/EntityType)+ createsRelationship::core/Relationship (referencingType::core/EntityType)+ modelsRole::core/RangeRole ;
ArrayMember ::= memberValue::core/Instance index::mof/Integer ;
RangeRole ::= domainView::core/InvertibleAttribute range::core/EntityType id::core/ScopedId ;
IfStatement ::= ifCondition::core/Expression elseActions::algorithms/Statement thenActions::algorithms/Statement ;
BinaryIndex ::= firstBit::core/Expression lastBit::core/Expression ;
ProcedureCall ::= invokes::algorithms/Procedure (actualParameters::expressions/ActualParameter)+ ;
SupertypeRule ::= namedSupertype::core/EntityType (constraints::rules/SubtypeConstraint)+ assertsAbstract::mof/Boolean ;
ConstantRef ::= refersTo::instances/Constant id::core/Identifier ;
EntityValue ::= (correspondsTo::core/EntityType)+ (describes::instances/EntityInstance)+ ;
PartialEntityValue ::= (components::instances/SingleEntityValue)+ ;
ExplicitAttribute ::= isOptional::mof/Boolean ;
CaseAction ::= (labelValue::core/Expression)+ action::algorithms/Statement isDefault::mof/Boolean ;
ActualARRAYType ::= hiIndex::core/ArrayBound loIndex::core/ArrayBound isOptional::mof/Boolean ;
ActualGenericType ::= refersTo::algorithms/ActualDataType isEntity::mof/Boolean label::core/Identifier ;
BagMember ::= memberValue::core/Instance count::mof/Integer ;
ActualStructureConstraint ::= matchingStructure::core/AGGREGATEType requiredStructure::algorithms/ActualStructure label::core/Identifier ;
StringIndex ::= firstCode::core/Expression lastCode::core/Expression ;
Remark ::= (describesSchema::core/Schema)+ appearsIn::core/Scope (describesElement::core/NamedElement)+ isTagged::mof/Boolean isTail::mof/Boolean text::core/ExpressText ;
AliasStatement ::= bindsToReference::statements/VARExpression body::algorithms/Statement aliasVariable::statements/AliasVariable ;
EnumItemRef ::= refersTo::instances/EnumerationItem id::core/Identifier ;
DerivedAttribute ::= derivation::core/Expression ;
VariableCell ::= refersTo::algorithms/Variable id::core/Identifier ;
SingleLeafInstance ::= characterizingType::core/EntityType ;
ActualParameter ::= inProcedureCall::statements/ProcedureCall inFunctionCall::expressions/FunctionCall formalParameter::algorithms/Parameter actualReferent::statements/VARExpression actualValue::core/Expression position::mof/Integer ;
RealType ::= precision::mof/Integer ;
UnaryOperation ::= unaryOperand::core/Expression operator::expressions/UnaryOperator ;
RepeatCount ::= derivation::core/Expression ;
ARRAYType ::= loIndex::core/ArrayBound hiIndex::core/ArrayBound isOptional::mof/Boolean ;
InterfacedElement ::= interfacingSchema::core/Schema refersTo::core/SchemaElement isUSE::mof/Boolean interfacedId::core/ScopedId ;
GenericType ::= constraint::algorithms/ActualTypeConstraint isEntity::mof/Boolean ;
Literal ::= refersTo::instances/SimpleValue ;
UniqueRule ::= domain::core/EntityType (keyComponent::core/Attribute)+ position::mof/Integer ;
ActualAGGREGATEType ::= upperBound::core/SizeConstraint refersTo::algorithms/ActualStructure memberType::core/VariableType lowerBound::core/SizeConstraint label::core/Identifier ;
StringType ::= stringLengthConstraint::core/LengthConstraint ;
VARCell ::= refersTo::algorithms/VARVariable id::core/Identifier ;
TypeName ::= refersTo::core/NamedType represents::core/ScopedId ;
ActualTypeConstraint ::= matchingType::core/GenericType requiredType::algorithms/ActualDataType label::core/Identifier ;
LengthConstraint ::= maxLength::mof/Integer isFixed::mof/Boolean ;
SpecializedType ::= underlyingType::core/ConcreteType ;
EnumerationType ::= (values::instances/EnumerationItem)+ (declaredItems::instances/EnumerationItem)+ (extension::core/EnumerationType)+ base::core/EnumerationType isExtensible::mof/Boolean ;
DomainRule ::= position::mof/Integer ;
--------------------metamodels::EclipseLaunchConfigurations.bgf--------------------
ListAttribute ::= (entries::ListEntry)+ ;
StringAttribute ::= MapEntry ;
 StringAttribute ::= value::String ;
MapEntry ::= mapAttribute::MapAttribute ;
ListEntry ::= listAttribute::ListAttribute value::String ;
BooleanAttribute ::= value::Boolean ;
LaunchConfiguration ::= type::String (attributes::Attribute)+ ;
MapAttribute ::= (entries::MapEntry)+ ;
--------------------metamodels::EclipsePlugIn.bgf--------------------
Extension ::= name::String id::String isConfiguredInto::ExtensionPoint ;
Librairy ::= name::String plugIn::PlugIn (classes::Class)+ ;
Description ::= xmlSchema::String (extensionPoints::ExtensionPoint)+ ;
Class ::= name::String librairy::Librairy ;
PlugIn ::= id::String displayableName::String version::String supplier::String (configures::Extension)+ (extensionPoints::ExtensionPoint)+ (requires::PlugIn)+ (uses::Librairy)+ ;
ExtensionPoint ::= name::String id::String application::Application (descriptions::Description)+ plugIn::PlugIn ;
Application ::= name::String version::String author::String (extensionPoints::ExtensionPoint)+ ;
--------------------metamodels::Family.bgf--------------------
Person ::= firstName::String closestFriend::Person (emailAddresses::String)+ ;
Family ::= name::String (members::Person)+ ;
--------------------metamodels::FeatureDiagrams.bgf--------------------
ORGroup ::= preliminary::Boolean name::String (no_src::Node)+ (co_dst::Child)+ ;
Child ::= (cn_src::Node)+ (cx_src::XORGroup)+ (co_src::ORGroup)+ ;
Attribute ::= description::String editable::Boolean key::Boolean value::String name::String node::Node ;
XORGroup ::= preliminary::Boolean name::String (nx_src::Node)+ (cx_dst::Child)+ ;
Root ::= description::String preliminary::Boolean object::String (attributes::Attribute)+ (no_dst::ORGroup)+ (nx_dst::XORGroup)+ (cn_dst::Child)+ ;
Node ::= Root ;
 Node ::= Child ;
 Node ::= description::String preliminary::Boolean object::String (attributes::Attribute)+ (no_dst::ORGroup)+ (nx_dst::XORGroup)+ (cn_dst::Child)+ ;
--------------------metamodels::GAIA.bgf--------------------
Permission ::= association::AssociationConnector ;
AgentType ::= (provides::Service)+ collaborates::AgentType agentType::AgentType (plays::Role)+ ;
Resource ::= name::String description::String (permitted_action::Action)+ environnement::Environnement ;
AssociationConnector ::= (actsOn::Resource)+ role::Role (permission::Permission)+ ;
Environnement ::= (resource::Resource)+ ;
Protocol ::= name::String initiator::String partner::String inputs::String outputs::String description::String ;
Communication ::= (observes::OrganizationalRule)+ protocol::Protocol ;
Action ::= type::String ;
Role ::= (activity::Activity)+ (communication::Communication)+ (responsibility::Responsibility)+ actsOn::AssociationConnector ;
Service ::= inputs::String outputs::String pre-conditions::String post-conditions::String ;
OrganizationalStructure ::= (organization::Organization)+ ;
Organization ::= collaborates::Organization interacts::Organization (member::AgentType)+ (observes::OrganizationalRule)+ ;
--------------------metamodels::FiniteStateMachine.bgf--------------------
StateMachine ::= rootFolder::RootFolder (state::State)+ (transition::Transition)+ ;
MgaObject ::= Transition ;
 MgaObject ::= State ;
 MgaObject ::= StateMachine ;
 MgaObject ::= name::String position::String ;
Transition ::= stateMachine::StateMachine associationStateState::AssociationStateState ;
AssociationStateState ::= transition::Transition (dstTransition::State)+ (srcTransition::State)+ ;
State ::= stateMachine::StateMachine (associationStateStatedst::AssociationStateState)+ (associationStateStatesrc::AssociationStateState)+ ;
RootFolder ::= name::String (rootFolders::RootFolder)+ (stateMachine::StateMachine)+ ;
--------------------metamodels::FlatSignalFlow.bgf--------------------
Receiver ::= name::String position::String actor::Actor associationReceiverQueue::AssociationReceiverQueue ;
RootContainer ::= name::String position::String rootFolder::RootFolder (actor::Actor)+ (inputSignal::InputSignal)+ (outputSignal::OutputSignal)+ (queue::Queue)+ ;
OutputSignal ::= name::String position::String rootContainer::RootContainer associationQueueTransmitter::AssociationQueueTransmitter ;
Actor ::= memory::String script::String file::String WCET::String name::String position::String rootContainer::RootContainer (transmitter::Transmitter)+ (receiver::Receiver)+ ;
InputSignal ::= name::String position::String rootContainer::RootContainer associationReceiverQueue::AssociationReceiverQueue ;
AssociationQueueTransmitter ::= (dstqueue::Queue)+ (srctransmitter::Transmitter)+ outputSignal::OutputSignal ;
AssociationReceiverQueue ::= (srcqueue::Queue)+ (dstreceiver::Receiver)+ inputSignal::InputSignal ;
Queue ::= name::String position::String rootContainer::RootContainer associationReceiverQueue::AssociationReceiverQueue associationQueueTransmitter::AssociationQueueTransmitter ;
Transmitter ::= name::String position::String actor::Actor associationQueueTransmitter::AssociationQueueTransmitter ;
RootFolder ::= (rootContainer::RootContainer)+ ;
--------------------metamodels::GUI.bgf--------------------
Group ::= title::String layout::Layout description::String tabGroup::Tab (composants::Composant)+ ;
Table ::= (tabColumns::Column)+ ;
ComboBox ::= (listRows::Row)+ ;
GUI ::= (guiTabs::Tab)+ ;
Row ::= rowList::ComboBox text::String (listItems::Item)+ ;
TextArea ::= text::String nbRows::Integer ;
Layout ::= (default::ε) | (horizontal::ε) | (vertical::ε) ;
Column ::= title::String columnTab::Table ;
Tab ::= title::String gui::GUI group::Group ;
Label ::= text::String ;
Item ::= itemList::Row text::String ;
Button ::= title::String ;
--------------------metamodels::GWPNV0.bgf--------------------
Net ::= (place::Place)+ (transition::Transition)+ ;
Place ::= net::Net (src::Transition)+ (dst::Transition)+ ;
Transition ::= net::Net (src::Place)+ (dst::Place)+ ;
--------------------metamodels::GWPNV1.bgf--------------------
Net ::= (place::Place)+ (transition::Transition)+ ;
Place ::= net::Net (src::Transition)+ (dst::Transition)+ ;
Transition ::= net::Net (src::Place)+ (dst::Place)+ ;
--------------------metamodels::GWPNV2.bgf--------------------
PTArc ::= dst::Transition src::Place ;
Net ::= (place::Place)+ (transition::Transition)+ ;
Place ::= net::Net (out::PTArc)+ (in::TPArc)+ ;
TPArc ::= src::Transition dst::Place ;
Transition ::= net::Net (in::PTArc)+ (out::TPArc)+ ;
--------------------metamodels::GWPNV3.bgf--------------------
PTArc ::= dst::Transition src::Place ;
Net ::= (place::Place)+ (transition::Transition)+ ;
Place ::= net::Net (out::PTArc)+ (in::TPArc)+ ;
TPArc ::= src::Transition dst::Place ;
Transition ::= net::Net (in::PTArc)+ (out::TPArc)+ ;
--------------------metamodels::GWPNV4.bgf--------------------
PTArc ::= dst::α src::α ;
Net ::= (place::α)+ (transition::α)+ ;
Place ::= net::α (out::α)+ (in::α)+ ;
TPArc ::= src::α dst::α ;
Transition ::= net::α (in::α)+ (out::α)+ ;
--------------------metamodels::GWPNV5.bgf--------------------
PTArc ::= dst::α src::α ;
Net ::= (place::α)+ (transition::α)+ ;
Token ::= place::α ;
Place ::= net::α (out::α)+ (in::α)+ (token::α)+ ;
TPArc ::= src::α dst::α ;
Transition ::= net::α (in::α)+ (out::α)+ ;
--------------------metamodels::Gantt.bgf--------------------
Date ::= year::Integer month::Integer day::Integer ;
Tasks ::= color::String (tasks::Task)+ ;
Depend ::= id::String type::Integer difference::Integer hardness::String task::Task ;
Ressource ::= Id::String name::String fonction::String contact::String phone::String ;
Project ::= name::String company::String viewDate::Date viewIndex::Date ganttDividerLocation::Integer ressourceDividerLocation::Integer webLink::String tasks::Tasks (ressources::Ressource)+ (allocations::Allocation)+ ;
Task ::= id::String name::String meeting::Boolean color::String expand::Boolean complete::Integer duration::Integer priority::Integer start::Date (depends::Depend)+ ;
Allocation ::= taskId::String ressourceId::String name::String function::String responsible::Boolean load::Integer ;
--------------------metamodels::GenericEditor.bgf--------------------
Font ::= font::String bold::Boolean italic::Boolean ;
GroupElement ::= indent::Indent (element::Element)+ ;
Block ::= blockbegin::String blockend::String ;
Editor ::= extension::String (abstractElements::AbstractElement)+ ;
Indent ::= retrait::String groupElementIndent::GroupElement ;
Element ::= element::String groupElement::GroupElement ;
Format ::= color::Color font::Font ;
Color ::= red::Integer green::Integer blue::Integer ;
--------------------metamodels::GenericOutline.bgf--------------------
Map ::= mapString::String ;
LabelSuite ::= label::String methodCall::String ;
Label ::= label::String methodCall::String (labelSuite::LabelSuite)+ ;
Node ::= name::String label::Label icon::String outline::Outline (mapping::Map)+ ;
Outline ::= extension::String (nodes::Node)+ ;
--------------------metamodels::GeoTrans.bgf--------------------
Param ::= name::String param::Double geoTransfo::GeoTransfo ;
GeoTransfos ::= name::String (transfos::GeoTransfo)+ ;
GeoTransfo ::= name::String freeze::Boolean (subGeoTransfos::GeoTransfo)+ superGeoTransfo::GeoTransfo (params::Param)+ ;
--------------------metamodels::Grafcet.bgf--------------------
TransitionToStep ::= from::Transition to::Step ;
StepToTransition ::= from::Step to::Transition ;
Step ::= isInitial::Boolean isActive::Boolean action::String (incomingConnections::TransitionToStep)+ (outgoingConnections::StepToTransition)+ ;
Transition ::= condition::String (incomingConnections::StepToTransition)+ (outgoingConnections::TransitionToStep)+ ;
Grafcet ::= (elements::Element)+ (connections::Connection)+ ;
--------------------metamodels::HAL.bgf--------------------
FormatWebEnum ::= (XML::ε) | (HTML::ε) | (HTM::ε) ;
Ouvrage ::= urldoi::String edcom::String annee::String page::String ;
Conference ::= urldoi::String titconf::String ville::String pays::String edcom::String annee::String page::String edsci::String serie::String ;
ArtOuvrage ::= urldoi::String titouv::String edcom::String annee::String edsci::String serie::String ;
DepotsType ::= (depots::AbstractDepot)+ ;
FormatEnum ::= (PDF::ε) | (TEX::ε) | (DOC::ε) | (RTF::ε) | (TXT::ε) | (PS::ε) | (ANNEX::ε) ;
Notice ::= metaArtNotice::MetaArtNoticeType ;
MetaArtType ::= domain::String abstract::String referenceBiblio::ReferenceBiblioType ;
Communication ::= urldoi::String titconf::String ville::String pays::String edcom::String annee::String page::String edsci::String serie::String ;
Depot ::= format::FormatEnum ;
ArtJournal ::= urldoi::String journal::String volume::String page::String annee::String ;
Autre ::= urldoi::String annee::String description::String ;
HAL ::= connexion::Connexion (contents::Entry)+ ;
ArticleRecent ::= fichiers::DepotsType ;
Laboratoire ::= id::Integer metas::AbstractMetaLab ;
MetaArtNoticeType ::= domain::String abstract::String referenceBiblio::ReferenceBiblioType ;
Brevet ::= datebrevet::String numbrevet::String page::String pays::String ;
ArtRevue ::= urldoi::String journal::String volume::String page::String annee::String ;
WebLink ::= identifiant::String server::Server ;
AffiliationType ::= (institution::String)+ (prive::String)+ (ecole::String)+ (universite::String)+ ;
TamponType ::= id::String ;
Connexion ::= login::String password::String ;
MetaLab ::= id::String ;
ArticleRetro ::= dateRedaction::String fichiers::AbstractDepot ;
AutLabType ::= (auteurs::Auteur)+ (laboratoires::Laboratoire)+ ;
Workshop ::= urldoi::String titconf::String ville::String pays::String edcom::String annee::String page::String edsci::String serie::String ;
DateVisibleEnum ::= (15J::ε) | (1M::ε) | (3M::ε) | (1A::ε) | (2A::ε) | (JAMAIS::ε) ;
These ::= orgthe::String niveau::String defencedate::String directeur::String codirecteur::String ;
Auteur ::= nom::String prenom::String autrePrenom::String email::String urlPerso::String lab::Laboratoire ;
DepotWeb ::= format::FormatWebEnum ;
--------------------metamodels::HPROF.bgf--------------------
StackTraceElement ::= method::Method fileName::String line::Integer trace::Trace ;
Date ::= day::Day month::Month dayOfMonth::Integer hour::Integer minutes::Integer seconds::Integer year::Integer ;
Time ::= rank::Integer self::Double accum::Double count::Integer trace::Trace method::Method ;
Day ::= (Monday::ε) | (Tuesday::ε) | (Wednesday::ε) | (Thursday::ε) | (Friday::ε) | (Saturday::ε) | (Sunday::ε) ;
Profile ::= header::String (threadActions::ThreadAction)+ (traces::Trace)+ times::Times (methods::Method)+ ;
ThreadStart ::= obj::Integer name::String group::String ;
Times ::= unit::String total::Integer date::Date (elements::Time)+ ;
Trace ::= id::Integer threadId::Integer (elements::StackTraceElement)+ (times::Time)+ ;
ThreadEnd ::= id::Integer ;
Method ::= fullyQualifiedName::String (stackTraceElements::StackTraceElement)+ ;
Month ::= (January::ε) | (February::ε) | (March::ε) | (April::ε) | (May::ε) | (June::ε) | (July::ε) | (August::ε) | (September::ε) | (October::ε) | (November::ε) | (December::ε) ;
--------------------metamodels::HierarchicalSignalFlow.bgf--------------------
LocalPort ::= compound::Compound ;
InputPort ::= base::Base ;
Compound ::= (localPort::LocalPort)+ (base::Base)+ ;
Signal ::= base::Base asso_Port_Signal::Asso_Port_Signal ;
Primitive ::= compound::Compound (inputPort::InputPort)+ (outputPort::OutputPort)+ (signal::Signal)+ ;
Asso_Port_Signal ::= (src::Port)+ (dst::Port)+ signal::Signal ;
OutputPort ::= base::Base ;
Base ::= Compound ;
 Base ::= Primitive ;
 Base ::= compound::Compound (inputPort::InputPort)+ (outputPort::OutputPort)+ (signal::Signal)+ ;
Port ::= InputPort ;
 Port ::= OutputPort ;
 Port ::= LocalPort ;
 Port ::= asso_Port_Signalsrc::Asso_Port_Signal asso_Port_Signaldst::Asso_Port_Signal ;
--------------------metamodels::HierarchicalStateMachine.bgf--------------------
OrState ::= rootFolder::RootFolder (state::State)+ init::Init (dataVar::DataVar)+ (stateDataRelation::StateDataRelation)+ (transition::Transition)+ (compoundState::CompoundState)+ ;
DataVar ::= (stateBase::StateBase)+ orState::OrState associationDataStateBase::AssociationDataStateBase ;
StateDateRelation ::= value::String color::String ;
AndState ::= (compoundState::CompoundState)+ ;
AssociationDataStateBase ::= stateDataRelation::StateDataRelation (dataVar::DataVar)+ (stateBase::StateBase)+ ;
StateDataRelation ::= value::String color::String orState::OrState associationDataStateBase1::AssociationDataStateBase ;
CompoundState ::= OrState ;
 CompoundState ::= AndState ;
 CompoundState ::= andState::AndState orState::OrState ;
MgaObject ::= StateBase ;
 MgaObject ::= DataVar ;
 MgaObject ::= Transition ;
 MgaObject ::= StateDateRelation ;
 MgaObject ::= name::String position::String ;
Transition ::= guard::String trigger::String action::String isSync::Boolean orState::OrState associationStateState::AssociationStateState ;
StateBase ::= CompoundState ;
 StateBase ::= PrimitiveState ;
 StateBase ::= defaultTransition::String marked::Boolean (associationStateStatedst::AssociationStateState)+ (associationStateStatesrc::AssociationStateState)+ (data::DataVar)+ associationDataStateBase::AssociationDataStateBase ;
AssociationStateState ::= transition::Transition (dstTransition::StateBase)+ (srcTransition::StateBase)+ ;
State ::= orState::OrState ;
Init ::= orState::OrState ;
RootFolder ::= name::String (rootFolders::RootFolder)+ (orState::OrState)+ ;
--------------------metamodels::HybridAutomata.bgf--------------------
FiniteTransition ::= trigger::String guard::String action::String ;
FiniteState ::= name::String position::String isInit::Boolean ;
--------------------metamodels::IEEE1471ConceptualModel.bgf--------------------
ArchitecturalDescription ::= (identifiesS::Stakeholder)+ (identifiesC::Concern)+ (selects::Viewpoint)+ (organizedBy::View)+ (aggregates::Model)+ ;
System ::= (fulfils::Mission)+ inhabits::Environment hasAn::Architecture (has::Stakeholder)+ ;
Mission ::= name::String content::String ;
Viewpoint ::= hasSource::LibraryViewpoint (usedToCover::Concern)+ (establishesMethodsFor::Model)+ ;
Model ::= (participatesInV::View)+ participatesInAD::ArchitecturalDescription ;
Rationale ::= provides::ArchitecturalDescription ;
Stakeholder ::= (has::Concern)+ ;
View ::= conformsTo::Viewpoint (consitsOf::Model)+ ;
Architecture ::= describedBy::ArchitecturalDescription ;
Environment ::= influences::System ;
LibraryViewpoint ::= name::String content::String ;
Concern ::= (isImportantTo::Stakeholder)+ ;
IEEE1471Model ::= system::System environment::Environment (missions::Mission)+ architecture::Architecture (stakeholders::Stakeholder)+ (concerns::Concern)+ (viewpoints::Viewpoint)+ (libraryViewpoints::LibraryViewpoint)+ architecturalDescription::ArchitecturalDescription rationale::Rationale ;
--------------------metamodels::IRL.bgf--------------------
UpdateAction ::= objValue::IRLExpressions/Expression ;
RuleCondition ::= conditionExpression::IRLExpressions/Expression ruleDefinitionCondition::IRLRules/RuleDefinition ;
VariableDeclaration ::= varName::String (variableExp::IRLExpressions/VariableExpression)+ ;
OperationCallExpression ::= (arguments::IRLExpressions/Expression)+ operationName::String signature::String ;
LoopExpression ::= body::IRLExpressions/Expression (iterators::IRLExpressions/Iterator)+ ;
Element ::= NamedElement ;
 Element ::= Extended ;
 Element ::= Typed ;
 Element ::= RuleSetDeclaration ;
 Element ::= Binding ;
 Element ::= RuleCondition ;
 Element ::= RuleAction ;
 Element ::= location::String (commentsBefore::String)+ (commentsAfter::String)+ ;
NavigationOrAttributeCallExpression ::= name::String ;
ImportDefinition ::= importDefinitionOwners::RuleSet dotStar::Boolean ;
IntegerExpression ::= integerSymbol::Integer ;
RealExpression ::= realSymbol::Double ;
ClassInstancesDeclaration ::= extendedIdentifier::ExtendedIdentifier ;
VariableExpression ::= referredVariable::IRLDeclarations/VariableDeclaration name::String ;
CreateAction ::= (insertArguments::IRLExpressions/Expression)+ ;
RuleAction ::= actionOwner::IRLRules/RuleDefinition ;
ModifyAction ::= objValue::IRLExpressions/Expression (modifiedArguments::IRLExpressions/Expression)+ ;
RuleDefinition ::= binding::IRLRules/Binding condition::IRLRules/RuleCondition (actions::IRLRules/RuleAction)+ ;
IteratorExp ::= name::String ;
InvokeAction ::= invocation::IRLExpressions/Expression ;
Iterator ::= loopExpression::IRLExpressions/LoopExpression ;
StringExpression ::= stringSymbol::String ;
PropertyDefinition ::= propertyDefinitionOwner::RuleSet (ruleSetDeclarations::IRLDeclarations/RuleSetDeclaration)+ semicoloneOpt::Boolean ;
RuleSet ::= (importDefinitions::ImportDefinition)+ propertyDefinitions::IRLDeclarations/PropertyDefinition (rulesetElementDefinitions::IRLRules/RulesetElementDefinition)+ ;
Binding ::= bindingOwner::IRLRules/RuleDefinition (ruleVariable::IRLRules/RuleVariable)+ ;
ExtendedIdentifier ::= parentIdentifier::ExtendedIdentifier extendedIdentifierOwner::Extended ;
DeleteAction ::= objValue::IRLExpressions/Expression ;
CollectionOperationRuleVariable ::= operationName::String collectWhere::IRLExpressions/Expression ;
BooleanExpression ::= booleanSymbol::Boolean ;
--------------------metamodels::IEEE1471ViewpointM2.bgf--------------------
Process ::= (methodology::Technique)+ ;
Mapping ::= input::Language ouput::Language ;
AnalysisMethod ::= analysis::Language ;
ModelOrganization ::= (techniques::Technique)+ guidance::Language ;
Rule ::= ModelOrganization ;
 Rule ::= (techniques::Technique)+ guidance::Language ;
Viewpoint ::= (source::ViewpointImport)+ (covers::Concern)+ (supplierDependency::ViewpointDependency)+ (clientDependency::ViewpointDependency)+ isImportTo::Stakeholder (architecturalConstruct::ArchitecturalConstruct)+ process::Process ;
ViewpointDependency ::= supplier::Viewpoint client::Viewpoint ;
Stakeholder ::= concerns::Concern ;
Technique ::= (methods::AnalysisMethod)+ (applies::Rule)+ ;
--------------------metamodels::IMSTransactionMessage.bgf--------------------
OIMAPrefixFormats ::= (opp_one::ε) | (opp_two::ε) ;
Field ::= fieldContainer::ApplicationData ;
ApplicationData ::= (languageElements::TDLangElement)+ (fieldComponents::Field)+ ;
IMSTransactionMessage ::= OIMAPrefixFormat::OIMAPrefixFormats standardFieldsFlag::Boolean OIMAPrefixComponent::OIMAPrefix standardFieldComponent::StandardFields messageComponent::ApplicationData ;
StandardFields ::= length::TwoByteField reservedField::TwoByteField transactionCode::VariableLengthField ;
OIMAPrefix ::= controlDataComponent::ControlData stateDataComponent::StateData securityDataComponent::SecurityData userDataComponent::UserData ;
--------------------metamodels::M.bgf--------------------
WhereExpression ::= type::Types/DerivedType (queryExpressions::Expressions/QueryExpression)+ ;
Collection ::= (qualifiers::String)+ identifier::String ;
InExpression ::= value::Expressions/ValueExpression collection::Expressions/CollectionExpression ;
MElementReference ::= alias::String referencedElement::MElement ;
ExportDirective ::= module::Module (exportedElements::ModuleMember)+ ;
Field ::= owner::Types/DerivedType type::Types/TypeReference ;
Language ::= module::Module ;
InitializationExpression ::= type::Types/DerivedType (values::Value)+ ;
DerivedType ::= (supertypes::Types/TypeReference)+ (fields::Types/Field)+ initializationExpression::Expressions/InitializationExpression whereExpression::Expressions/WhereExpression expression::Expressions/Expression ;
CollectionExpression ::= inExpression::Expressions/InExpression collectionValue::Expressions/ValueExpression ;
IdentityExpression ::= identity::Types/Field ;
DerivedTypeReference ::= type::Types/DerivedType ;
IntegerValue ::= value::Integer ;
TypeReference ::= subtype::Types/DerivedType field::Types/Field lowerBound::Integer upperBound::Integer ;
StandardValueExpression ::= context::Expressions/ValueExpression value::String ;
EqualExpression ::= leftValue::Expressions/ValueExpression rightValue::Expressions/ValueExpression ;
Module ::= (imports::ImportDirective)+ (exports::ExportDirective)+ (moduleMembers::ModuleMember)+ ;
IntrinsicTypeReference ::= typeIdentifier::String ;
ImportDirective ::= module::Module (importedElements::MElementReference)+ ;
BooleanValue ::= value::Boolean ;
ComputedValue ::= (qualifiers::String)+ identifier::String ;
Entity ::= module::Module ;
DecimalValue ::= value::Double ;
StringValue ::= value::String ;
--------------------metamodels::Jess.bgf--------------------
FactDefinition ::= factName::ValidIdentifier documentation::Str (fact::Expression)+ ;
ModuleDefinition ::= moduleName::ValidIdentifier documentation::Str ;
DeclareVar ::= (var::JessVariable)+ node::Expression max::Expression ;
VarDefinition ::= jessVar::JessVariable eq::ValidIdentifier expression::Expression ;
Floa ::= val::Double ;
GlobalDefinition ::= (varDef::VarDefinition)+ ;
IfExpression ::= ifthen::ConditionAction (elifthen::ElifConditionAction)+ (else::Expression)+ ;
ForExp ::= initializer::Expression condition::Expression increment::Expression (expressions::Expression)+ ;
Integ ::= val::Integer ;
ElifConditionAction ::= condAct::ConditionAction ;
FunctionDefinition ::= funcName::ValidIdentifier (parameters::JessVariable)+ (expressions::Expression)+ ;
ASlotDef ::= SlotDef ;
 ASlotDef ::= MultiSlotDef ;
 ASlotDef ::= slotName::SlotName (optionals::SlotOptions)+ ;
DeclareRule ::= salience::Expression nodeIndexHash::Expression autoFocus::ValidIdentifier noLoop::ValidIdentifier ;
ValidIdentifier ::= val::String ;
UnDefAdvice ::= op::Expression ;
FuncCall ::= funcName::ValidIdentifier (funcParam::Expression)+ ;
SlotOptions ::= type::ValidIdentifier def::Expression defaultDyn::Expression (allowedValues::Expression)+ ;
SlotOp ::= slotIdent::SlotName operator::ValidIdentifier exp::Expression ;
QueryDefinition ::= queryName::ValidIdentifier documentation::Str declare::DeclareVar (expressions::Expression)+ ;
Advice ::= (before::ε) | (after::ε) ;
JessVariable ::= val::String ;
ForeachExp ::= var::JessVariable list::Expression (expressions::Expression)+ ;
TemplateExpression ::= templateName::ValidIdentifier firstSlot::SlotOp (slotOp::SlotOp)+ ;
Str ::= val::String ;
ConditionAction ::= condition::Expression (actions::Expression)+ ;
RuleDefinition ::= ruleName::ValidIdentifier documentation::Str declare::DeclareRule (conditions::Expression)+ (functionCall::UseFuncExp)+ ;
MultiSlotDef ::= slotName::SlotName (optionals::SlotOptions)+ ;
TemplateDefinition ::= templateName::ValidIdentifier (inherits::ValidIdentifier)+ documentation::Str declareBloc::DeclareBloc (slotDef::ASlotDef)+ ;
WhileExp ::= hasDo::Boolean boolExp::Expression (actions::Expression)+ ;
AdviceDefinition ::= direction::Advice op::Ident (advice::Expression)+ ;
SlotName ::= val::String ;
DeclareBloc ::= slotSpecific::ValidIdentifier backchainReaction::ValidIdentifier fromClass::ValidIdentifier includeVariable::ValidIdentifier order::ValidIdentifier ;
SlotDef ::= slotName::SlotName (optionals::SlotOptions)+ ;
Root ::= (expressions::Expression)+ ;
--------------------metamodels::KDM.bgf--------------------
ControlElement ::= type::code/Datatype (entryFlow::action/EntryFlow)+ (codeElement::code/AbstractCodeElement)+ ;
ExceptionFlow ::= to::action/ActionElement from::action/ActionElement ;
ClassUnit ::= isAbstract::core/Boolean (codeElement::code/CodeItem)+ ;
DatatypeOf ::= to::code/Datatype from::data/ComplexContentType ;
ExtensionTo ::= to::data/ComplexContentType from::data/ComplexContentType ;
EnumeratedType ::= (value::code/Value)+ ;
Expands ::= to::code/PreprocessorDirective from::code/PreprocessorDirective ;
WritesColumnSet ::= to::data/ColumnSet from::action/ActionElement ;
RangeType ::= lower::core/Integer upper::core/Integer ;
UIModel ::= (UIElement::ui/AbstractUIElement)+ ;
LinksTo ::= to::build/AbstractBuildElement from::build/SymbolicLink ;
ConceptualModel ::= (conceptualElement::conceptual/AbstractConceptualElement)+ ;
DataEvent ::= kind::core/String ;
UIRelationship ::= to::core/KDMEntity from::ui/AbstractUIElement ;
Includes ::= to::code/AbstractCodeElement from::code/PreprocessorDirective ;
UIAction ::= kind::core/String (UIElement::ui/UIEvent)+ ;
IndexElement ::= (implementation::code/ItemUnit)+ ;
CodeRelationship ::= to::core/KDMEntity from::code/CodeItem ;
ParameterTo ::= to::code/CodeItem from::code/AbstractCodeElement ;
UIFlow ::= to::ui/AbstractUIElement from::ui/AbstractUIElement ;
UILayout ::= to::ui/UIResource from::ui/UIResource ;
DataContainer ::= (dataElement::data/DataResource)+ ;
DerivedType ::= itemUnit::code/ItemUnit ;
Creates ::= to::code/Datatype from::action/ActionElement ;
SuppliedBy ::= to::build/Supplier from::build/AbstractBuildElement ;
HasType ::= to::code/Datatype from::code/CodeItem ;
EventRelationship ::= to::core/KDMEntity from::event/AbstractEventElement ;
DataElement ::= type::code/Datatype ext::core/String size::core/Integer (codeElement::code/Datatype)+ ;
ReadsUI ::= to::ui/UIResource from::action/ActionElement ;
BindsTo ::= to::platform/ResourceType from::platform/ResourceType ;
Implements ::= to::code/CodeItem from::code/CodeItem ;
EventModel ::= (eventElement::event/AbstractEventElement)+ ;
Requires ::= to::platform/AbstractPlatformElement from::platform/DeployedComponent ;
BuildDescription ::= (source::source/SourceRef)+ text::core/String ;
DisplaysImage ::= to::source/Image from::action/ActionElement ;
RelationalSchema ::= (codeElement::code/CodeItem)+ ;
Dispatches ::= to::code/DataElement from::action/ActionElement ;
PlatformEvent ::= kind::core/String ;
ActionElement ::= kind::core/String (codeElement::code/AbstractCodeElement)+ (actionRelation::action/AbstractActionRelationship)+ ;
ConsumesEvent ::= to::event/Event from::event/Transition ;
UIResource ::= (UIElement::ui/AbstractUIElement)+ ;
WritesResource ::= to::platform/ResourceType from::action/ActionElement ;
VariantTo ::= to::code/PreprocessorDirective from::code/PreprocessorDirective ;
ParameterKind ::= (byReference::ε) | (unknown::ε) | (exception::ε) | (return::ε) | (byValue::ε) | (catchall::ε) | (byName::ε) | (throws::ε) | (variadic::ε) ;
ManagesResource ::= to::platform/ResourceType from::action/ActionElement ;
Audit ::= description::core/String author::core/String date::core/String ;
SequenceType ::= size::core/Integer ;
GeneratedFrom ::= to::code/PreprocessorDirective from::code/AbstractCodeElement ;
DeployedComponent ::= (groupedCode::code/Module)+ ;
CompliesTo ::= to::code/CodeItem from::action/ActionElement ;
Calls ::= to::code/ControlElement from::action/ActionElement ;
ContentRestriction ::= kind::core/String value::core/String ;
Produces ::= to::build/AbstractBuildElement from::build/BuildStep ;
ConceptualRole ::= conceptualElement::conceptual/AbstractConceptualElement ;
ActionRelationship ::= to::core/KDMEntity from::action/ActionElement ;
ParameterUnit ::= kind::code/ParameterKind pos::core/Integer ;
ReadsResource ::= to::platform/ResourceType from::action/ActionElement ;
PlatformAction ::= kind::core/String (platformElement::platform/PlatformEvent)+ ;
EventResource ::= (eventElement::event/AbstractEventElement)+ ;
ProducesEvent ::= to::event/Event from::action/ActionElement ;
DependsOn ::= to::source/AbstractInventoryElement from::source/AbstractInventoryElement ;
BuildRelationship ::= to::core/KDMEntity from::build/AbstractBuildElement ;
InventoryContainer ::= (inventoryElement::source/AbstractInventoryElement)+ ;
RestrictionOf ::= to::data/ComplexContentType from::data/ComplexContentType ;
ComplexContentType ::= (contentElement::data/AbstractContentElement)+ ;
ManagesUI ::= to::ui/UIResource from::action/ActionElement ;
DataAction ::= kind::core/String (implementation::action/ActionElement)+ (dataElement::data/DataEvent)+ ;
PreprocessorDirective ::= (codeElement::code/AbstractCodeElement)+ ;
EntryFlow ::= to::action/ActionElement from::code/ControlElement ;
HasContent ::= to::data/AbstractDataElement from::action/ActionElement ;
ProducesDataEvent ::= to::data/DataEvent from::action/ActionElement ;
SetType ::= size::core/Integer ;
Signature ::= (parameterUnit::code/ParameterUnit)+ ;
StructureModel ::= (structureElement::structure/AbstractStructureElement)+ ;
InventoryRelationship ::= to::core/KDMEntity from::source/AbstractInventoryElement ;
Writes ::= to::code/DataElement from::action/ActionElement ;
ValueList ::= (valueElement::code/ValueElement)+ ;
CallableKind ::= (external::ε) | (regular::ε) | (stored::ε) | (operator::ε) | (unknown::ε) ;
Module ::= (codeElement::code/AbstractCodeElement)+ ;
ExitFlow ::= to::action/ActionElement from::action/ActionElement ;
ResourceType ::= (platformElement::platform/AbstractPlatformElement)+ ;
ExportKind ::= (private::ε) | (unknown::ε) | (public::ε) | (protected::ε) | (final::ε) ;
SupportedBy ::= to::build/Tool from::build/BuildStep ;
Addresses ::= to::code/ComputationalObject from::action/ActionElement ;
DataModel ::= (dataElement::data/AbstractDataElement)+ ;
AggregatedRelationship ::= from::core/KDMEntity to::core/KDMEntity (relation::core/KDMRelationship)+ density::core/Integer ;
Reads ::= to::code/DataElement from::action/ActionElement ;
Attribute ::= tag::core/String value::core/String ;
CallableUnit ::= kind::code/CallableKind ;
BuildResource ::= (implementation::core/KDMEntity)+ (groupedBuild::build/AbstractBuildElement)+ (buildElement::build/AbstractBuildElement)+ ;
BuildModel ::= (buildElement::build/AbstractBuildElement)+ ;
Event ::= kind::core/String ;
Extends ::= to::code/Datatype from::code/Datatype ;
Spawns ::= to::platform/RuntimeResource from::action/ActionElement ;
XMLSchema ::= (contentElement::data/AbstractContentElement)+ ;
ConceptualRelationship ::= to::core/KDMEntity from::conceptual/AbstractConceptualElement ;
InventoryItem ::= version::core/String path::core/String ;
TagDefinition ::= tag::core/String type::core/String ;
Throws ::= to::code/DataElement from::action/ActionElement ;
InstanceOf ::= to::code/TemplateUnit from::code/AbstractCodeElement ;
PlatformRelationship ::= to::core/KDMEntity from::platform/AbstractPlatformElement ;
TaggedRef ::= reference::core/ModelElement ;
UIEvent ::= kind::core/String ;
ConceptualFlow ::= to::conceptual/ConceptualContainer from::conceptual/ConceptualContainer ;
Redefines ::= to::code/PreprocessorDirective from::code/PreprocessorDirective ;
ExtensionFamily ::= (stereotype::kdm/Stereotype)+ name::core/String ;
CommentUnit ::= text::core/String ;
MacroKind ::= (external::ε) | (unknown::ε) | (option::ε) | (undefined::ε) | (regular::ε) ;
NamespaceUnit ::= (groupedCode::code/CodeItem)+ ;
MemberUnit ::= export::code/ExportKind ;
KeyRelation ::= to::data/UniqueKey from::data/ReferenceKey ;
SourceRef ::= (region::source/SourceRegion)+ language::core/String snippet::core/String ;
ManagesData ::= to::data/AbstractDataElement from::action/ActionElement ;
SourceFile ::= language::core/String encoding::core/String ;
PlatformModel ::= (platformElement::platform/AbstractPlatformElement)+ ;
Stereotype ::= (tag::kdm/TagDefinition)+ name::core/String type::core/String ;
EventAction ::= kind::core/String (eventElement::event/Event)+ ;
MacroUnit ::= kind::code/MacroKind ;
Annotation ::= text::core/String ;
Imports ::= to::code/CodeItem from::code/CodeItem ;
Directory ::= path::core/String ;
InventoryModel ::= (inventoryElement::source/AbstractInventoryElement)+ ;
ConceptualContainer ::= (conceptualElement::conceptual/AbstractConceptualElement)+ ;
ImplementationOf ::= to::code/CodeItem from::code/CodeItem ;
UsesType ::= to::code/Datatype from::action/ActionElement ;
TaggedValue ::= value::core/String ;
BagType ::= size::core/Integer ;
TypedBy ::= to::data/ComplexContentType from::data/ContentItem ;
CompositeType ::= (itemUnit::code/ItemUnit)+ ;
NextState ::= to::event/State from::event/Transition ;
TemplateUnit ::= (codeElement::code/CodeItem)+ ;
InterfaceUnit ::= (codeElement::code/CodeItem)+ ;
DeployedSoftwareSystem ::= (groupedComponent::platform/DeployedComponent)+ ;
HasState ::= to::event/AbstractEventElement from::action/ActionElement ;
MethodKind ::= (operator::ε) | (destructor::ε) | (method::ε) | (abstract::ε) | (virtual::ε) | (unknown::ε) | (constructor::ε) ;
StorableKind ::= (global::ε) | (external::ε) | (static::ε) | (unknown::ε) | (register::ε) | (local::ε) ;
ReadsColumnSet ::= to::data/ColumnSet from::action/ActionElement ;
Loads ::= to::platform/DeployedComponent from::action/ActionElement ;
StructureRelationship ::= to::core/KDMEntity from::structure/AbstractStructureElement ;
WritesUI ::= to::ui/UIResource from::action/ActionElement ;
Machine ::= (deployedComponent::platform/DeployedComponent)+ (deployedResource::platform/DeployedResource)+ ;
MethodUnit ::= kind::code/MethodKind export::code/ExportKind ;
DataRelationship ::= to::core/KDMEntity from::data/AbstractDataElement ;
StorableUnit ::= kind::code/StorableKind ;
SimpleContentType ::= (type::data/ComplexContentType)+ kind::core/String ;
DefinedBy ::= to::code/CodeItem from::action/ActionElement ;
CodeModel ::= (codeElement::code/AbstractCodeElement)+ ;
HasValue ::= to::code/CodeItem from::code/CodeItem ;
Consumes ::= to::build/AbstractBuildElement from::build/BuildStep ;
VisibleIn ::= to::code/CodeItem from::code/CodeItem ;
DeployedResource ::= (platformElement::platform/ResourceType)+ ;
ReadsState ::= to::event/State from::action/ActionElement ;
Segment ::= (segment::kdm/Segment)+ (model::kdm/KDMModel)+ ;
ArrayType ::= size::core/Integer indexUnit::code/IndexUnit ;
Displays ::= to::ui/UIResource from::action/ActionElement ;
DescribedBy ::= to::build/BuildDescription from::build/BuildStep ;
SourceRegion ::= file::source/SourceFile startLine::core/Integer startPosition::core/Integer endLine::core/Integer endPosition::core/Integer language::core/String path::core/String ;
ColumnSet ::= (itemUnit::code/ItemUnit)+ ;
ContentItem ::= type::data/ComplexContentType (contentElement::data/AbstractContentElement)+ ;
ControlFlow ::= to::action/ActionElement from::action/ActionElement ;
ReferenceTo ::= to::data/ContentItem from::data/ContentItem ;
--------------------metamodels::KDMSimplified.bgf--------------------
KDMExtensionFamily ::= name::String (stereotype::Stereotype)+ ;
Annotation ::= note::String ;
TagDefinition ::= tag::String type::String ;
Attribute ::= tag::String value::String ;
TaggedValue ::= value::String tag::TagDefinition ;
Stereotype ::= baseClass::String name::String family::KDMExtensionFamily extendedElement::ModelElement (tag::TagDefinition)+ ;
--------------------metamodels::KM3.bgf--------------------
EnumLiteral ::= name::String package::Package ;
Attribute ::= lower::Integer upper::Integer isOrdered::Boolean isUnique::Boolean owner::Class type::Classifier ;
Reference ::= isContainer::Boolean opposite::Reference ;
StructuralFeature ::= Attribute ;
 StructuralFeature ::= Reference ;
 StructuralFeature ::= lower::Integer upper::Integer isOrdered::Boolean isUnique::Boolean owner::Class type::Classifier ;
Class ::= isAbstract::Boolean (supertypes::Class)+ (structuralFeatures::StructuralFeature)+ ;
Enumeration ::= (literals::EnumLiteral)+ ;
Package ::= (contents::ModelElement)+ metamodel::Metamodel ;
Metamodel ::= (contents::Package)+ ;
--------------------metamodels::Klaper.bgf--------------------
ActualParam ::= value::String serviceCall::ServiceCall ;
Resource ::= name::String type::String capacity::Integer schedulingPolicy::String description::String acquire::Acquire release::Release ;
InternalActivity ::= name::String repetition::String internalExecTime::String internalFailProb::String completionModel::String (serviceCall::ServiceCall)+ (predecessor::Step)+ (successor::Step)+ behavior::Behavior nestedBehavior::Behavior ;
Step ::= Start ;
 Step ::= End ;
 Step ::= Control ;
 Step ::= InternalActivity ;
 Step ::= ServiceCall ;
 Step ::= name::String repetition::String internalExecTime::String internalFailProb::String completionModel::String (serviceCall::ServiceCall)+ (predecessor::Step)+ (successor::Step)+ behavior::Behavior nestedBehavior::Behavior ;
End ::= name::String repetition::String internalExecTime::String internalFailProb::String completionModel::String (serviceCall::ServiceCall)+ (predecessor::Step)+ (successor::Step)+ behavior::Behavior nestedBehavior::Behavior ;
Release ::= resourceUnits::String resource::Resource ;
WorkLoad ::= workLoadType::String arrivalProcess::String population::String initialResource::String behavior::Behavior ;
Acquire ::= resourceUnits::String resource::Resource ;
Service ::= name::String formalParams::String speedAttr::String failAttr::String description::String (behavior::Behavior)+ (behaviorUsed::Behavior)+ (serviceCall::ServiceCall)+ ;
ServiceCall ::= resourceType::String serviceName::String isSynch::Boolean (actualParam::ActualParam)+ step::Step calledService::Service ;
Branch ::= branchProbs::String ;
Start ::= name::String repetition::String internalExecTime::String internalFailProb::String completionModel::String (serviceCall::ServiceCall)+ (predecessor::Step)+ (successor::Step)+ behavior::Behavior nestedBehavior::Behavior ;
Behavior ::= Step ;
 Behavior ::= stepn::Step (stepb::Step)+ service::Service (usedService::Service)+ workLoad::WorkLoad ;
--------------------metamodels::LQN.bgf--------------------
TaskType ::= (a_reference::ε) | (non_reference::ε) ;
Call ::= EntryCall ;
 Call ::= ActivityCall ;
 Call ::= toEntry::Entry num_Phases::Integer type::CallType (callPhase::CallPhase)+ activity::Activity entryreceives::Entry entrysends::Entry ;
CallPhase ::= mean_Calls::Integer refers_To::Phase (call::Call)+ ;
Phase ::= number::Integer type::PhaseType think_Time::Integer execution_Demand::Integer COV::Integer entry::Entry activity::Activity ;
Link ::= type::LinkType mean_Links::Integer fromActivity::Activity toActivity::Activity activityPrecedes::Activity activityfollows::Activity ;
CallType ::= (synchronous::ε) | (asynchronous::ε) | (forwording::ε) ;
PhaseType ::= (stochastic::ε) | (deterministic::ε) ;
LinkType ::= (and_Fork::ε) | (and_join::ε) | (basic::ε) | (or_Fork::ε) | (or_join::ε) ;
Entry ::= name::String num_Phase::Integer arrival_Rate::Integer contained_In::Task replay_To::Entry callreceives::Call callsends::Call (phase::Phase)+ activity::Activity task::Task ;
Processor ::= name::String scheduling::SchedulingType mutliplicity::Integer replicas::Integer spped::Integer task::Task lqn::LQN ;
EntryCall ::= from_Entry::Entry ;
Activity ::= name::String arrival_Rate::Integer contained_In::Task replay_To::Entry (linkPrecedes::Link)+ (linkfollows::Link)+ (call::Call)+ phase::Phase entry::Entry task::Task ;
Date ::= day::String month::String year::String ;
SchedulingType ::= (FCFS::ε) | (preemptive_Priority::ε) | (head_of_line::ε) | (random::ε) ;
ActivityCall ::= fromActivity::Activity ;
LQN ::= name::String comment::String author::String created_On::Date modified_On::Date (task::Task)+ (processor::Processor)+ ;
Task ::= name::String type::TaskType priority::Integer mutliplicity::Integer replicas::Integer (entry::Entry)+ processor::Processor lqn::LQN (activity::Activity)+ ;
--------------------metamodels::LaTeX.bgf--------------------
DocumentBody ::= (sections::Section)+ (bibliography::Bibliography)+ document::Document ;
Fax ::= value::String ;
Description ::= date::Date ;
EMail ::= value::String ;
Document ::= type::Type title::Title author::Author date::Date heading::Heading abstract::Abstract keywords::Keywords documentbody::DocumentBody ;
Organisation ::= (names::Name)+ adress::Adress heading::Heading ;
Type ::= value::String ;
Title ::= value::String ;
Cite ::= sectionbody::SectionBody value::String ;
Adress ::= value::String ;
Label ::= value::String ;
Item ::= itemscontainer::Items enumeratecontainer::Enumerate ;
Value ::= sectionbody::SectionBody value::String ;
Phone ::= value::String ;
Date ::= value::String ;
Author ::= (names::Name)+ ;
Name ::= author::Author organisation::Organisation ;
Keywords ::= value::String ;
Citation ::= label::Label author::Author description::Description bibliography::Bibliography ;
SectionBody ::= (corps::Corps)+ section::Section ;
Section ::= title::Title sectionBody::SectionBody ;
Path ::= value::String ;
Enumerate ::= (item::Item)+ ;
Figure ::= path::Path label::Label title::Title ;
Bibliography ::= (citations::Citation)+ documentbody::DocumentBody ;
Abstract ::= value::String ;
Heading ::= (organisations::Organisation)+ phone::Phone fax::Fax email::EMail ;
Items ::= (item::Item)+ ;
--------------------metamodels::MAS.bgf--------------------
NCS ::= cooperationRules::CooperationRules ;
CooperationRules ::= ncs::NCS ;
Characteristic ::= agentC::Agent ;
FIPA-Platform Task ::= fipa_Platform_AgentF::FIPA-Platform Agent task::Task ;
Communication ::= name::String Exchanged Knoledge::Ontology (scenario::Scenario)+ aip::AIP (message::Message)+ ;
Action ::= environnement::Environnement ;
Role ::= agentR::Agent (activity::Task)+ (actsOn::Resource)+ (scenario::Scenario)+ (participant::Communication)+ (has::Responsibility)+ ;
Service ::= inputs::String outputs::String pre-conditions::String post-conditions::String ;
Organization ::= (observes::Organizational Structure)+ organizational_Structure::Organizational Structure ;
Skill ::= agentS::Agent ;
FIPA-Platform Agent ::= agentF::Agent (fipa_Platform_Task::FIPA-Platform Task)+ ;
Organizational Structure ::= SafetyRule ;
 Organizational Structure ::= LivenessRule ;
 Organizational Structure ::= (organization::Organization)+ ;
Ontology ::= Concept ;
 Ontology ::= Predicat ;
 Ontology ::= Action ;
 Ontology ::= environnement::Environnement ;
Resource ::= name::String environnement::Environnement action::Action ;
Predicat ::= environnement::Environnement ;
Representation ::= agentRep::Agent ontology::Ontology environnement::Environnement ;
Environnement ::= resource::Resource ;
AIP ::= name::String performative::Performative ;
Concept ::= environnement::Environnement ;
Message ::= communication::Communication Comm_Act::Performative ;
Aptitude ::= agentA::Agent ;
Task ::= name::String fipa_Platform_TaskT::FIPA-Platform Task ;
Agent ::= (service::Service)+ (non_Functionnal_Requirement::Non Functionnal Requirement)+ (requirement::Requirement)+ belongs::Organization (cooperationRules::CooperationRules)+ fipa_Platform_Agent::FIPA-Platform Agent role::Role representation::Representation characteristic::Characteristic skill::Skill aptitude::Aptitude ;
Performative ::= aip::AIP ;
--------------------metamodels::Marte.bgf--------------------
TilerSpecification ::= origin::MARTE_DataTypes/IntegerVector paving::MARTE_DataTypes/IntegerMatrix fitting::MARTE_DataTypes/IntegerVector ;
Constraint ::= IntervalConstraint ;
 Constraint ::= InteractionConstraint ;
 Constraint ::= (constrainedElement::Element)+ specification::ValueSpecification context::Namespace ;
ClockRefine ::= base_Dependency::Dependency (constraint::MARTE_Foundations/Time/ClockConstraint)+ ;
SchedulableResource ::= (schedParams::GRM_BasicTypes/SchedParameters)+ ;
Property ::= Port ;
 Property ::= class::Class datatype::DataType owningAssociation::Association association::Association isDerived::MARTE_PrimitivesTypes/Boolean isDerivedUnion::MARTE_PrimitivesTypes/Boolean default::MARTE_PrimitivesTypes/String aggregation::AggregationKind isComposite::MARTE_PrimitivesTypes/Boolean (redefinedProperty::Property)+ defaultValue::ValueSpecification opposite::Property (subsettedProperty::Property)+ (qualifier::Property)+ associationEnd::Property ;
HwMedia ::= bandWidth::BasicNFP_Types/NFP_DataTxRate base_Association::Association (arbiters::MARTE_DesignModel/HRM/HwLogical/HwCommunication/HwArbiter)+ ;
SynchronizationKind ::= (synchronous::ε) | (asynchronous::ε) | (delayedSynchronous::ε) | (rendezVous::ε) | (other::ε) ;
HwComputingResource ::= op_Frequencies::MARTE_DataTypes/NFP_FrequencyInterval ;
RtService ::= concPolicy::MARTE_DesignModel/RTEMoCC/ConcurrencyKind exeKind::MARTE_DesignModel/RTEMoCC/ExecutionKind isAtomic::MARTE_PrimitivesTypes/Boolean synchKind::MARTE_DesignModel/RTEMoCC/SynchronizationKind base_BehavioralFeature::BehavioralFeature ;
Artifact ::= DeploymentSpecification ;
 Artifact ::= fileName::MARTE_PrimitivesTypes/String (nestedArtifact::Artifact)+ (manifestation::Manifestation)+ (ownedOperation::Operation)+ (ownedAttribute::Property)+ ;
Interaction ::= (lifeline::Lifeline)+ (fragment::InteractionFragment)+ (action::Action)+ (formalGate::Gate)+ (message::Message)+ ;
DeviceBroker ::= accessPolicy::MARTE_DesignModel/SRM/SW_Brokering/AccessPolicyKind isBuffered::MARTE_PrimitivesTypes/Boolean (devices::TypedElement)+ (closeServices::BehavioralFeature)+ (controlServices::BehavioralFeature)+ (openServices::BehavioralFeature)+ (readServices::BehavioralFeature)+ (writeServices::BehavioralFeature)+ ;
GaCommHost ::= (capacity::BasicNFP_Types/NFP_DataTxRate)+ (packetT::BasicNFP_Types/NFP_Duration)+ (blockT::BasicNFP_Types/NFP_Duration)+ transmMode::MARTE_DataTypes/TransmModeKind (utilization::BasicNFP_Types/NFP_Real)+ (throughput::BasicNFP_Types/NFP_Frequency)+ ;
Clock ::= standard::TimeLibrary/TimeStandardKind base_InstanceSpecification::InstanceSpecification type::MARTE_Foundations/Time/ClockType unit::MARTE_Foundations/NFPs/Unit ;
Message ::= messageKind::MessageKind messageSort::MessageSort receiveEvent::MessageEnd sendEvent::MessageEnd connector::Connector interaction::Interaction (argument::ValueSpecification)+ signature::NamedElement ;
VisibilityKind ::= (public::ε) | (private::ε) | (protected::ε) | (package::ε) ;
TimedElement ::= (on::MARTE_Foundations/Time/Clock)+ ;
SchedParameters ::= edf::GRM_BasicTypes/EDFParameters fp::GRM_BasicTypes/FixedPriorityParameters pooling::GRM_BasicTypes/PoolingParameters server::GRM_BasicTypes/PeriodicServerParameters ;
GaResourcesPlatform ::= (resources::MARTE_Foundations/GRM/Resource)+ base_Classifier::Classifier ;
IrregularPattern ::= phase::BasicNFP_Types/NFP_Duration (interarrivals::BasicNFP_Types/NFP_Duration)+ ;
SchedPolicyKind ::= (EarliestDeadlineFirst::ε) | (FIFO::ε) | (FixedPriority::ε) | (LeastLaxityFirst::ε) | (RoundRobin::ε) | (TimeTableDriven::ε) | (Undef::ε) | (Other::ε) ;
TransmModeKind ::= (simplex::ε) | (halfDuplex::ε) | (fullDuplex::ε) ;
MutualExclusionResourceKind ::= (BooleanSemaphore::ε) | (CountSemaphore::ε) | (Mutex::ε) | (Undef::ε) | (Other::ε) ;
DurationObservation ::= event::NamedElement firstEvent::MARTE_PrimitivesTypes/Boolean ;
ExpressionContext ::= base_NamedElement::NamedElement ;
WritePolicy ::= (WriteBack::ε) | (WriteThrough::ε) | (Other::ε) | (Undef::ε) ;
Realnterval ::= bound::MARTE_PrimitivesTypes/Real ;
CommunicationMedia ::= elementSize::MARTE_PrimitivesTypes/Integer base_Connector::Connector ;
AllocationNature ::= (spatialDistribution::ε) | (timeScheduling::ε) ;
PpUnit ::= concPolicy::MARTE_DesignModel/RTEMoCC/CallConcurrencyKind memorySize::BasicNFP_Types/NFP_DataSize base_BehavioredClassifier::BehavioredClassifier ;
HwEndPoint ::= base_Port::Port (connectedTo::MARTE_DesignModel/HRM/HwLogical/HwCommunication/HwMedia)+ ;
StatisticalQualifierKind ::= (max::ε) | (min::ε) | (mean::ε) | (range::ε) | (percent::ε) | (distrib::ε) | (determ::ε) | (other::ε) ;
TimedEvent ::= repetition::MARTE_PrimitivesTypes/Integer base_TimeEvent::TimeEvent every::ValueSpecification ;
StructuredActivityNode ::= (variable::Variable)+ (edge::ActivityEdge)+ mustIsolate::MARTE_PrimitivesTypes/Boolean (node::ActivityNode)+ ;
NFP_Percentage ::= unit::MARTE_PrimitivesTypes/String ;
HwStorageManager ::= (managedMemories::MARTE_DesignModel/HRM/HwLogical/HwMemory/HwMemory)+ ;
IntervalType ::= intervalAttrib::Property base_DataType::DataType ;
ProtocolConformance ::= generalMachine::ProtocolStateMachine specificMachine::ProtocolStateMachine ;
GaLatencyObs ::= (latency::BasicNFP_Types/NFP_Duration)+ (miss::BasicNFP_Types/NFP_Real)+ (utility::MARTE_DataTypes/UtilityType)+ (maxJitter::BasicNFP_Types/NFP_Duration)+ ;
CacheType ::= (Data::ε) | (Instruction::ε) | (Unified::ε) | (Other::ε) | (Undef::ε) ;
OpaqueExpression ::= (body::MARTE_PrimitivesTypes/String)+ (language::MARTE_PrimitivesTypes/String)+ result::Parameter behavior::Behavior ;
QueuePolicyKind ::= (FIFO::ε) | (LIFO::ε) | (Priority::ε) | (Undef::ε) | (Other::ε) ;
Duration ::= expr::ValueSpecification (observation::Observation)+ ;
HWCache ::= level::BasicNFP_Types/NFP_Natural type::MARTE_DesignModel/HRM/HwLogical/HwMemory/CacheType structure::MARTE_DesignModel/HRM/HwLogical/HwMemory/CacheStructure repl_Policy::MARTE_DesignModel/HRM/HwLogical/HwMemory/Repl_Policy writePolicy::MARTE_DesignModel/HRM/HwLogical/HwMemory/WritePolicy ;
NFP_DataSize ::= unit::MeasurementUnits/DataSizeUnitKind precision::MARTE_PrimitivesTypes/Real ;
PackageMerge ::= mergedPackage::Package receivingPackage::Package ;
TimeEvent ::= isRelative::MARTE_PrimitivesTypes/Boolean when::ValueSpecification ;
StringExpression ::= (subExpression::StringExpression)+ owningExpression::StringExpression ;
TimeNatureKind ::= (discrete::ε) | (dense::ε) ;
PseudostateKind ::= (initial::ε) | (deepHistory::ε) | (shallowHistory::ε) | (join::ε) | (fork::ε) | (junction::ε) | (choice::ε) | (entryPoint::ε) | (exitPoint::ε) | (terminate::ε) ;
ConcurrencyKind ::= (reader::ε) | (writer::ε) | (parallel::ε) ;
HwPowerSupply ::= suppliedPower::BasicNFP_Types/NFP_Power capacity::BasicNFP_Types/NFP_Energy ;
Unit ::= convFactor::MARTE_PrimitivesTypes/Real convOffset::MARTE_PrimitivesTypes/Real baseUnit::MARTE_Foundations/NFPs/Unit base_EnumerationLiteral::EnumerationLiteral ;
FlowBFeature ::= kind::MARTE_Foundations/GCM/BFeatureKind base_BehavioralFeature::BehavioralFeature ;
ElementImport ::= visibility::VisibilityKind alias::MARTE_PrimitivesTypes/String importedElement::PackageableElement importingNamespace::Namespace ;
SaSharedResource ::= capacity::BasicNFP_Types/NFP_Integer isPreemp::BasicNFP_Types/NFP_Boolean isConsum::BasicNFP_Types/NFP_Boolean (acquisT::BasicNFP_Types/NFP_Duration)+ (releaseT::BasicNFP_Types/NFP_Duration)+ ;
GaAcqStep ::= acqRes::MARTE_Foundations/GRM/Resource resUnits::BasicNFP_Types/NFP_Integer ;
HwDrive ::= sectorSize::BasicNFP_Types/NFP_DataSize buffer::MARTE_DesignModel/HRM/HwLogical/HwMemory/HwRAM ;
Trigger ::= event::Event (port::Port)+ ;
HwBridge ::= (sides::MARTE_DesignModel/HRM/HwLogical/HwCommunication/HwMedia)+ ;
NFP ::= base_Property::Property ;
NfpConstraint ::= kind::MARTE_Foundations/NFPs/ConstraintKind base_Constraint::Constraint ;
DirectionKind ::= (in::ε) | (out::ε) | (inout::ε) ;
PaRunTInstance ::= poolSize::BasicNFP_Types/NFP_Integer unbddPool::MARTE_PrimitivesTypes/Boolean instance::MARTE_Foundations/GRM/Resource host::MARTE_Foundations/GRM/SchedulableResource utilization::BasicNFP_Types/NFP_Real throughput::BasicNFP_Types/NFP_Frequency base_NamedElement::NamedElement ;
NFP_Length ::= unit::MeasurementUnits/LengthUnitKind precision::MARTE_PrimitivesTypes/Real ;
InputPin ::= isControl::MARTE_PrimitivesTypes/Boolean ;
SaExecStep ::= base_BehavioralFeature::BehavioralFeature deadline::BasicNFP_Types/NFP_Duration spareCap::BasicNFP_Types/NFP_Duration schSlack::BasicNFP_Types/NFP_Real preemptT::BasicNFP_Types/NFP_Duration readyT::BasicNFP_Types/NFP_Duration delayT::BasicNFP_Types/NFP_Duration ;
TimedProcessing ::= base_Action::Action base_Behavior::Behavior base_Message::Message duration::ValueSpecification start::Event stop::Event ;
StorageResource ::= elementSize::MARTE_PrimitivesTypes/Integer ;
TimeInterpretationKind ::= (duration::ε) | (instant::ε) ;
Profile ::= (ownedStereotype::Stereotype)+ (metaclassReference::ElementImport)+ (metamodelReference::PackageImport)+ ;
Parameter ::= direction::ParameterDirectionKind default::MARTE_PrimitivesTypes/String defaultValue::ValueSpecification operation::Operation (parameterSet::ParameterSet)+ isException::MARTE_PrimitivesTypes/Boolean isStream::MARTE_PrimitivesTypes/Boolean effect::ParameterEffectKind ;
TimeStandardKind ::= (TAI::ε) | (UT0::ε) | (UT1::ε) | (UTC::ε) | (Local::ε) | (TT::ε) | (TBD::ε) | (TCG::ε) | (TCB::ε) | (Sidereal::ε) | (GPS::ε) ;
NFP_Power ::= unit::MeasurementUnits/PowerUnitKind precision::MARTE_PrimitivesTypes/Real ;
NFP_Integer ::= value::MARTE_PrimitivesTypes/Integer ;
ArrivalPattern ::= periodic::BasicNFP_Types/PeriodicPattern aperiodic::BasicNFP_Types/AperiodicPattern burst::BasicNFP_Types/BurstPattern irregular::BasicNFP_Types/IrregularPattern closed::BasicNFP_Types/ClosedPattern sporadic::BasicNFP_Types/SporadicPattern ;
AggregationKind ::= (none::ε) | (shared::ε) | (composite::ε) ;
Pin ::= OutputPin ;
 Pin ::= InputPin ;
 Pin ::= isControl::MARTE_PrimitivesTypes/Boolean ;
Transition ::= kind::TransitionKind container::Region redefinedTransition::Transition guard::Constraint effect::Behavior (trigger::Trigger)+ target::Vertex source::Vertex ;
Pseudostate ::= kind::PseudostateKind stateMachine::StateMachine state::State ;
InterruptResource ::= kind::MARTE_DesignModel/SRM/SW_Concurrency/InterruptKind isMaskable::MARTE_PrimitivesTypes/Boolean (vectorElements::TypedElement)+ (maskElements::TypedElement)+ (routineConnectServices::BehavioralFeature)+ (routineDisconnectServices::BehavioralFeature)+ ;
InteractionConstraint ::= minint::ValueSpecification maxint::ValueSpecification ;
ConnectorEnd ::= definingEnd::Property partWithPort::Property role::ConnectableElement ;
NotificationResourceKind ::= (Event::ε) | (Barrier::ε) | (Undef::ε) | (Other::ε) ;
PackageImport ::= visibility::VisibilityKind importedPackage::Package importingNamespace::Namespace ;
Dependency ::= Abstraction ;
 Dependency ::= Deployment ;
 Dependency ::= (supplier::NamedElement)+ (client::NamedElement)+ ;
CallConcurrencyKind ::= (sequential::ε) | (guarded::ε) | (concurrent::ε) ;
TimeExpression ::= expr::ValueSpecification (observation::Observation)+ ;
GaEventTrace ::= content::MARTE_PrimitivesTypes/String format::MARTE_PrimitivesTypes/String location::MARTE_PrimitivesTypes/String base_NamedElement::NamedElement ;
Tiler ::= origin::MARTE_DataTypes/IntegerVector paving::MARTE_DataTypes/IntegerMatrix fitting::MARTE_DataTypes/IntegerMatrix tiler::RS_Library/TilerSpecification ;
SaCommHost ::= isSched::BasicNFP_Types/NFP_Boolean schSlack::BasicNFP_Types/NFP_Real ;
ConnectorKind ::= (assembly::ε) | (delegation::ε) ;
TimedDurationObservation ::= obsKind::TimeLibrary/EventKind base_DurationObservation::DurationObservation ;
SharedDataComResource ::= (readServices::BehavioralFeature)+ (writeServices::BehavioralFeature)+ ;
Allocate ::= kind::MARTE_Foundations/Alloc/AllocationKind nature::MARTE_Foundations/Alloc/AllocationNature base_Abstraction::Abstraction (impliedConstraint::MARTE_Foundations/NFPs/NfpConstraint)+ ;
HwCoolingSupply ::= coolingPower::BasicNFP_Types/NFP_Power ;
InterruptibleActivityRegion ::= (node::ActivityNode)+ (interruptingEdge::ActivityEdge)+ ;
Class ::= Stereotype ;
 Class ::= Behavior ;
 Class ::= (nestedClassifier::Classifier)+ (ownedOperation::Operation)+ (superClass::Class)+ isActive::MARTE_PrimitivesTypes/Boolean (ownedReception::Reception)+ (extension::Extension)+ ;
SaSchedObs ::= (suspentions::BasicNFP_Types/NFP_Integer)+ (blockT::BasicNFP_Types/NFP_Duration)+ (overlaps::BasicNFP_Types/NFP_Integer)+ ;
HwTimer ::= nbCounter::BasicNFP_Types/NFP_Natural counterWidth::BasicNFP_Types/NFP_DataSize inputClock::MARTE_DesignModel/HRM/HwLogical/HwTiming/HwClock ;
NFP_Frequency ::= unit::MeasurementUnits/FrequencyUnitKind precision::MARTE_PrimitivesTypes/Real ;
Stereotype ::= (icon::Image)+ ;
ProtocolStateMachine ::= (conformance::ProtocolConformance)+ ;
CommunicationEndPoint ::= packetSize::MARTE_PrimitivesTypes/Integer ;
RteConnector ::= bandwidth::BasicNFP_Types/NFP_DataTxRate packetT::BasicNFP_Types/NFP_Duration blockT::BasicNFP_Types/NFP_Duration transmMode::MARTE_DataTypes/TransmModeKind base_Connector::Connector ;
GRService ::= owner::MARTE_Foundations/GRM/Resource base_ExecutionSpecification::ExecutionSpecification base_BehavioralFeature::BehavioralFeature base_Behavior::Behavior base_Collaboration::Collaboration base_CollaborationUse::CollaborationUse ;
HwDMA ::= nbChannels::BasicNFP_Types/NFP_Natural transferWidth::BasicNFP_Types/NFP_DataSize (drivenBy::MARTE_DesignModel/HRM/HwLogical/HwComputing/HwProcessor)+ ;
Operation ::= interface::Interface class::Class isQuery::MARTE_PrimitivesTypes/Boolean isOrdered::MARTE_PrimitivesTypes/Boolean isUnique::MARTE_PrimitivesTypes/Boolean lower::MARTE_PrimitivesTypes/Integer upper::MARTE_PrimitivesTypes/UnlimitedNatural (precondition::Constraint)+ (postcondition::Constraint)+ (redefinedOperation::Operation)+ datatype::DataType bodyCondition::Constraint type::Type ;
NFP_NaturalInterval ::= bound::BasicNFP_Types/NFP_Natural ;
DataTxRateUnitKind ::= (b_per_s::ε) | (Kb_per_s::ε) | (Mb_per_s::ε) ;
TimeUnitKind ::= (s::ε) | (tick::ε) | (ms::ε) | (us::ε) | (min::ε) | (hrs::ε) | (dys::ε) ;
DataSizeUnitKind ::= (bits::ε) | (Bytes::ε) | (KB::ε) | (MB::ε) | (GB::ε) ;
FlowProperty ::= direction::MARTE_Foundations/GCM/DirectionKind base_Property::Property ;
GaWorkloadGenerator ::= pop::BasicNFP_Types/NFP_Integer base_Behavior::Behavior ;
NotificationKind ::= (Memorized::ε) | (Bounded::ε) | (Memoryless::ε) | (Undef::ε) | (Other::ε) ;
TemplateSignature ::= (parameter::TemplateParameter)+ (ownedParameter::TemplateParameter)+ template::TemplateableElement ;
PowerUnitKind ::= (W::ε) | (mW::ε) | (KW::ε) ;
Image ::= content::MARTE_PrimitivesTypes/String location::MARTE_PrimitivesTypes/String format::MARTE_PrimitivesTypes/String ;
Extend ::= extendedCase::UseCase condition::Constraint (extensionLocation::ExtensionPoint)+ extension::UseCase ;
NFP_FrequencyInterval ::= bound::BasicNFP_Types/NFP_Frequency ;
BasicNFP_Types_DirectionKind ::= (incr::ε) | (decr::ε) ;
RtAction ::= isAtomic::MARTE_PrimitivesTypes/Boolean synchKind::MARTE_DesignModel/RTEMoCC/SynchronizationKind msgSize::BasicNFP_Types/NFP_DataSize base_BehavioralFeature::BehavioralFeature base_InvocationAction::InvocationAction ;
UseCase ::= (include::Include)+ (extend::Extend)+ (extensionPoint::ExtensionPoint)+ (subject::Classifier)+ ;
PartDecomposition ::= refersTo::Interaction (actualGate::Gate)+ (argument::Action)+ ;
SporadicPattern ::= minInterarrival::BasicNFP_Types/NFP_Duration maxInterarrival::BasicNFP_Types/NFP_Duration jitter::BasicNFP_Types/NFP_Duration ;
ConstraintKind ::= (required::ε) | (offered::ε) | (constraint::ε) ;
Activity ::= (structuredNode::StructuredActivityNode)+ (variable::Variable)+ (node::ActivityNode)+ isReadOnly::MARTE_PrimitivesTypes/Boolean (edge::ActivityEdge)+ (partition::ActivityPartition)+ isSingleExecution::MARTE_PrimitivesTypes/Boolean (group::ActivityGroup)+ ;
NFP_Energy ::= unit::MeasurementUnits/EnergyUnitKind precision::MARTE_PrimitivesTypes/Real ;
ParameterEffectKind ::= (create::ε) | (read::ε) | (update::ε) | (delete::ε) ;
EventKind ::= (start::ε) | (finish::ε) | (send::ε) | (receive::ε) | (consume::ε) ;
Reshape ::= patternShape::RS_Library/ShapeSpecification repetitonShape::RS_Library/ShapeSpecification srcTiler::MARTE_Annexes/RSM/Tiler targetTiler::MARTE_Annexes/RSM/Tiler ;
HwMMU ::= virtualAddrSpace::BasicNFP_Types/NFP_DataSize physicalAddrSpace::BasicNFP_Types/NFP_DataSize memoryProtection::BasicNFP_Types/NFP_Natural nbEntries::BasicNFP_Types/NFP_Boolean (ownedTLBs::MARTE_DesignModel/HRM/HwLogical/HwMemory/HWCache)+ ;
SwMutualExclusionResource ::= mechanism::MARTE_DesignModel/SRM/SW_Interaction/MutualExclusionResourceKind concurrentAccessProtocol::MARTE_DesignModel/SRM/SW_Interaction/ConcurrentAccessProtocolKind (accessTokenElements::TypedElement)+ (releaseServices::BehavioralFeature)+ (acquireServices::BehavioralFeature)+ ;
CollaborationUse ::= type::Collaboration (roleBinding::Dependency)+ ;
FixedPriorityParameters ::= priority::MARTE_PrimitivesTypes/Integer ;
Substitution ::= contract::Classifier substitutingClassifier::Classifier ;
SignalSpecification ::= kind::MARTE_Foundations/GCM/BFeatureKind base_Interface::Interface ;
Interface ::= (ownedAttribute::Property)+ (ownedOperation::Operation)+ (nestedClassifier::Classifier)+ (redefinedInterface::Interface)+ (ownedReception::Reception)+ protocol::ProtocolStateMachine ;
CollectionType ::= collectionAttrib::Property base_DataType::DataType ;
Region ::= (subvertex::Vertex)+ (transition::Transition)+ state::State extendedRegion::Region stateMachine::StateMachine ;
OptimallityCriterionKind ::= (meetHardDeadlines::ε) | (minimizeMissedDeadlines::ε) | (minimizedMeanTardiness::ε) | (undef::ε) | (other::ε) ;
Lifeline ::= represents::ConnectableElement interaction::Interaction selector::ValueSpecification decomposedAs::PartDecomposition (coveredBy::InteractionFragment)+ ;
HwMemory ::= memorySize::BasicNFP_Types/NFP_DataSize adressSize::BasicNFP_Types/NFP_DataSize (timings::MARTE_DesignModel/HRM/HwLogical/HwMemory/Timing)+ ;
MessagePort ::= base_Port::Port isAtomic::MARTE_PrimitivesTypes/Boolean isConjugated::MARTE_PrimitivesTypes/Boolean direction::MARTE_Foundations/GCM/DirectionKind ;
Var ::= dir::MARTE_Annexes/VSL/Variables/VariableDirectionKind base_Property::Property ;
RtUnit ::= isDynamic::MARTE_PrimitivesTypes/Boolean isMain::MARTE_PrimitivesTypes/Boolean poolSize::MARTE_PrimitivesTypes/Integer poolPolicy::MARTE_DesignModel/RTEMoCC/PoolMgtPolicyKind poolWaitingTime::BasicNFP_Types/NFP_Duration operationalMode::Behavior main::Operation memorySize::BasicNFP_Types/NFP_DataSize base_BehavioredClassifier::BehavioredClassifier ;
AreaUnitKind ::= (mm2::ε) | (um2::ε) ;
ShapeSpecification ::= (size::MARTE_PrimitivesTypes/UnlimitedNatural)+ ;
TupleType ::= (tupleAttrib::Property)+ base_DataType::DataType ;
TimedInstantObservation ::= obsKind::TimeLibrary/EventKind base_TimeObservation::TimeObservation ;
TimeObservation ::= event::NamedElement firstEvent::MARTE_PrimitivesTypes/Boolean ;
GaCommChannel ::= packetSize::BasicNFP_Types/NFP_DataSize (utlization::BasicNFP_Types/NFP_Real)+ ;
LogicalTimeUnit ::= tick::ε ;
NFP_DataTxRate ::= unit::MeasurementUnits/DataTxRateUnitKind precision::MARTE_PrimitivesTypes/Real ;
MemoryOrganization ::= nbRows::BasicNFP_Types/NFP_Natural nbColumns::BasicNFP_Types/NFP_Natural nbBanks::BasicNFP_Types/NFP_Natural wordSize::BasicNFP_Types/NFP_DataSize ;
NFP_Area ::= unit::MeasurementUnits/AreaUnitKind precision::MARTE_PrimitivesTypes/Real ;
TimedValueType ::= unit::TimeLibrary/TUK value::MARTE_PrimitivesTypes/Real expr::TimeLibrary/ClockedValueSpecification onClock::MARTE_PrimitivesTypes/String ;
GaExecHost ::= commTxOch::BasicNFP_Types/NFP_Duration commRcvOvh::BasicNFP_Types/NFP_Duration cntxtSwt::BasicNFP_Types/NFP_Duration clockOvh::BasicNFP_Types/NFP_Duration schedPriRange::MARTE_DataTypes/IntegerInterval memSize::BasicNFP_Types/NFP_DataSize (utilization::BasicNFP_Types/NFP_Real)+ (throughput::BasicNFP_Types/NFP_Frequency)+ ;
SwSchedulableResource ::= isStaticSchedulingFeature::MARTE_PrimitivesTypes/Boolean isPreemptable::MARTE_PrimitivesTypes/Boolean schedulers::NamedElement (deadlineElements::TypedElement)+ (deadlineTypeElements::TypedElement)+ (timeScliceElements::TypedElement)+ (delayServices::BehavioralFeature)+ (joinServices::BehavioralFeature)+ (yieldServices::BehavioralFeature)+ ;
NfpType ::= valueAttrib::Property unitAttrib::Property exprAttrib::Property ;
FlowPort ::= isAtomic::MARTE_PrimitivesTypes/Boolean isConjugated::MARTE_PrimitivesTypes/Boolean direction::MARTE_Foundations/GCM/DirectionKind base_Port::Port ;
NFP_CommonType ::= expr::MARTE_DataTypes/VSL_Expression source::BasicNFP_Types/SourceKind statQ::BasicNFP_Types/StatisticalQualifierKind dir::BasicNFP_Types/BasicNFP_Types_DirectionKind ;
Gate ::= message::Message ;
PaLogicalResource ::= utilization::BasicNFP_Types/NFP_Real throughput::BasicNFP_Types/NFP_Frequency poolSize::BasicNFP_Types/NFP_Integer ;
GaStep ::= isAtomic::BasicNFP_Types/NFP_Boolean blockT::BasicNFP_Types/NFP_Duration rep::BasicNFP_Types/NFP_Real prob::BasicNFP_Types/NFP_Real priority::BasicNFP_Types/NFP_Integer concurRes::MARTE_Foundations/GRM/SchedulableResource host::MARTE_AnalysisModel/GQAM/GaExecHost (serDemand::MARTE_AnalysisModel/GQAM/GaRequestedService)+ (servCount::BasicNFP_Types/NFP_Real)+ ;
Deployment ::= (deployedArtifact::DeployedArtifact)+ (configuration::DeploymentSpecification)+ location::DeploymentTarget ;
Interval ::= DurationInterval ;
 Interval ::= TimeInterval ;
 Interval ::= min::ValueSpecification max::ValueSpecification ;
SaAnalysisContext ::= isSched::BasicNFP_Types/NFP_Boolean optCriterion::MARTE_AnalysisModel/SAM/OptimallityCriterionKind ;
GaAnalysisContext ::= (context::BasicNFP_Types/NFP_String)+ (workload::MARTE_AnalysisModel/GQAM/GaWorkloadBehavior)+ (platform::MARTE_AnalysisModel/GQAM/GaResourcesPlatform)+ ;
TimeLibrary_TimeUnitKind ::= (s::ε) | (ms::ε) | (us::ε) | (ns::ε) | (min::ε) | (hrs::ε) | (dys::ε) ;
ConditionType ::= (Temperature::ε) | (Humidity::ε) | (Altitude::ε) | (Vibration::ε) | (Shock::ε) | (Other::ε) | (Undef::ε) ;
RtBehavior ::= queueSchedPolicy::GRM_BasicTypes/SchedPolicyKind queueSize::MARTE_PrimitivesTypes/Integer msgMaxSize::BasicNFP_Types/NFP_DataSize base_Behavior::Behavior ;
TimeInterval ::= min::ValueSpecification max::ValueSpecification ;
EDFParameters ::= deadline::BasicNFP_Types/NFP_Duration ;
HwBus ::= adressWidth::BasicNFP_Types/NFP_DataSize wordWidth::BasicNFP_Types/NFP_DataSize isSynchronous::MARTE_PrimitivesTypes/Boolean isSerial::MARTE_PrimitivesTypes/Boolean ;
TemplateParameterSubstitution ::= formal::TemplateParameter (actual::ParameterableElement)+ (ownedActual::ParameterableElement)+ templateBinding::TemplateBinding ;
SendFlowAction ::= base_InvocationAction::InvocationAction ;
MemoryPartition ::= (concurrentResources::TypedElement)+ (memorySpaces::TypedElement)+ (fork::BehavioralFeature)+ (exit::BehavioralFeature)+ base_Namespace::Namespace ;
Signal ::= (ownedAttribute::Property)+ ;
HwISA ::= family::BasicNFP_Types/NFP_String inst_Width::BasicNFP_Types/NFP_DataSize type::MARTE_DesignModel/HRM/HwLogical/HwComputing/ISA_Type ;
PoolMgtPolicyKind ::= (infiniteWait::ε) | (timedWait::ε) | (dynamic::ε) | (exception::ε) | (other::ε) ;
GeneralOrdering ::= before::OccurrenceSpecification after::OccurrenceSpecification ;
TimedDomain ::= base_Package::Package ;
HwArbiter ::= (controlledMedias::MARTE_DesignModel/HRM/HwLogical/HwCommunication/HwMedia)+ ;
Expression ::= StringExpression ;
 Expression ::= symbol::MARTE_PrimitivesTypes/String (operand::ValueSpecification)+ ;
NFP_String ::= value::MARTE_PrimitivesTypes/String ;
Acquire ::= isBlocking::MARTE_PrimitivesTypes/Boolean ;
OutputPin ::= isControl::MARTE_PrimitivesTypes/Boolean ;
AllocationKind ::= (structural::ε) | (behavioral::ε) | (hybrid::ε) ;
SwResource ::= (identifierElements::TypedElement)+ (stateElements::TypedElement)+ memorySizeFootprint::TypedElement (createServices::BehavioralFeature)+ (deleteServices::BehavioralFeature)+ (initializeServices::BehavioralFeature)+ ;
ExtensionPoint ::= useCase::UseCase ;
DurationConstraint ::= firstEvent::MARTE_PrimitivesTypes/Boolean ;
PoolingParameters ::= period::BasicNFP_Types/NFP_Duration (overhead::BasicNFP_Types/NFP_Duration)+ ;
Reception ::= signal::Signal ;
ExecutionKind ::= (deferred::ε) | (remoteImmediate::ε) | (localImmediate::ε) ;
GaRelStep ::= relRes::MARTE_Foundations/GRM/Resource resUnits::BasicNFP_Types/NFP_Integer ;
ParameterDirectionKind ::= (in::ε) | (inout::ε) | (out::ε) | (return::ε) ;
TimeConstraint ::= firstEvent::MARTE_PrimitivesTypes/Boolean ;
GaScenario ::= cause::MARTE_AnalysisModel/GQAM/GaWorkloadEvent (hostDemand::BasicNFP_Types/NFP_Duration)+ (hostDemandOps::BasicNFP_Types/NFP_Real)+ (interOccT::BasicNFP_Types/NFP_Duration)+ (throughput::BasicNFP_Types/NFP_Frequency)+ respT::BasicNFP_Types/NFP_Duration (utilization::BasicNFP_Types/NFP_Real)+ (utilizationHost::BasicNFP_Types/NFP_Real)+ root::MARTE_AnalysisModel/GQAM/GaStep (timing::MARTE_AnalysisModel/GQAM/GaTimingObs)+ behavior::MARTE_AnalysisModel/GQAM/GaScenario ;
TransitionKind ::= (internal::ε) | (local::ε) | (external::ε) ;
Allocated ::= base_NamedElement::NamedElement ;
SaEnd2EndFlow ::= isSched::BasicNFP_Types/NFP_Boolean schSlack::BasicNFP_Types/NFP_Real (end2EndT::BasicNFP_Types/NFP_Duration)+ (end2EndD::BasicNFP_Types/NFP_Duration)+ (timing::MARTE_AnalysisModel/GQAM/GaTimingObs)+ base_NamedElement::NamedElement ;
Port ::= isBehavior::MARTE_PrimitivesTypes/Boolean isService::MARTE_PrimitivesTypes/Boolean (required::Interface)+ (redefinedPort::Port)+ (provided::Interface)+ protocol::ProtocolStateMachine ;
Variable ::= scope::StructuredActivityNode activityScope::Activity ;
Generalization ::= isSubstitutable::MARTE_PrimitivesTypes/Boolean general::Classifier (generalizationSet::GeneralizationSet)+ specific::Classifier ;
ChoiceType ::= (choiceAttrib::Property)+ defaultAttrib::Property base_DataType::DataType ;
ProtectProtocolKind ::= (FIFO::ε) | (NoPreemption::ε) | (PriorityCeiling::ε) | (PriorityInheritance::ε) | (StackBased::ε) | (Undef::ε) | (Other::ε) ;
Scheduler ::= isPreemptible::MARTE_PrimitivesTypes/Boolean schedPolicy::GRM_BasicTypes/SchedPolicyKind otherSchedPolicy::MARTE_PrimitivesTypes/String schedule::OpaqueExpression (processingUnit::MARTE_Foundations/GRM/ProcessingResource)+ host::MARTE_Foundations/GRM/ComputingResource ;
DurationInterval ::= min::ValueSpecification max::ValueSpecification ;
StateMachine ::= ProtocolStateMachine ;
 StateMachine ::= (region::Region)+ (submachineState::State)+ (connectionPoint::Pseudostate)+ (extendedStateMachine::StateMachine)+ ;
FrequencyUnitKind ::= (Hz::ε) | (KHz::ε) | (MHz::ε) | (GHz::ε) | (rpm::ε) ;
OccurrenceSpecification ::= (toBefore::GeneralOrdering)+ event::Event (toAfter::GeneralOrdering)+ ;
PeriodicServerKind ::= (Sporadic::ε) | (Deferrable::ε) | (Undef::ε) | (Other::ε) ;
HwComponent ::= kind::MARTE_DesignModel/HRM/HwPhysical/HwLayout/ComponentKind dimenssions::BasicNFP_Types/NFP_Length area::BasicNFP_Types/NFP_Area position::MARTE_DataTypes/NFP_NaturalInterval grid::BasicNFP_Types/NFP_Natural nbPins::BasicNFP_Types/NFP_Natural weight::BasicNFP_Types/NFP_Real price::BasicNFP_Types/NFP_String (r_Conditions::MARTE_DesignModel/HRM/HwPhysical/HwLayout/Env_Condition)+ (poweredServices::MARTE_DesignModel/HRM/HwLogical/HwGeneral/HwResourceService)+ staticConsumption::BasicNFP_Types/NFP_Power staticDissipation::BasicNFP_Types/NFP_Power ;
SwAccessService ::= isModifier::MARTE_PrimitivesTypes/Boolean accessedElement::Property ;
TemplateBinding ::= signature::TemplateSignature (parameterSubstitution::TemplateParameterSubstitution)+ boundElement::TemplateableElement ;
ApplicationAllocationEnd ::= (allocatedTo::MARTE_Foundations/Alloc/ExecutionPlatformAllocationEnd)+ ;
AccessPolicyKind ::= (Read::ε) | (Write::ε) | (ReadWrite::ε) | (Undef::ε) | (Other::ε) ;
NFP_BoundedDuration ::= values::MARTE_PrimitivesTypes/Real unit::MeasurementUnits/TimeUnitKind clock::MARTE_PrimitivesTypes/String precision::MARTE_PrimitivesTypes/Real ;
ROM_Type ::= (MaskedROM::ε) | (EPROM::ε) | (OTP_EPROM::ε) | (EEPROM::ε) | (Flash::ε) | (Other::ε) | (Undef::ε) ;
GaWorkloadEvent ::= pattern::BasicNFP_Types/ArrivalPattern generator::MARTE_AnalysisModel/GQAM/GaWorkloadGenerator trace::MARTE_AnalysisModel/GQAM/GaEventTrace effect::MARTE_AnalysisModel/GQAM/GaScenario timedEvent::TimeEvent base_NamedElement::NamedElement ;
TimedValueSpecification ::= interpretation::TimeTypesLibrary/TimeInterpretationKind base_ValueSpecification::ValueSpecification ;
Include ::= addition::UseCase includingCase::UseCase ;
EnumerationLiteral ::= enumeration::Enumeration ;
Abstraction ::= Realization ;
 Abstraction ::= Manifestation ;
 Abstraction ::= mapping::OpaqueExpression ;
SaCommStep ::= deadline::BasicNFP_Types/NFP_Duration spareCap::BasicNFP_Types/NFP_Duration schSlack::BasicNFP_Types/NFP_Real base_BehavioralFeature::BehavioralFeature ;
CompnentState ::= (Operating::ε) | (Storage::ε) | (Other::ε) | (Undef::ε) ;
NFP_DateTime ::= value::MARTE_PrimitivesTypes/DateTime ;
GaRequestedService ::= base_Operation::Operation ;
IntegerMatrix ::= (matrixElem::MARTE_DataTypes/IntegerVector)+ ;
LaxityKind ::= (hard::ε) | (soft::ε) | (other::ε) ;
PaStep ::= noSynch::BasicNFP_Types/NFP_Boolean (extOpDemand::MARTE_PrimitivesTypes/String)+ (extOpCount::BasicNFP_Types/NFP_Real)+ (behavDemand::MARTE_AnalysisModel/GQAM/GaScenario)+ (behavCount::BasicNFP_Types/NFP_Real)+ ;
GaTimingObs ::= laxity::MARTE_AnalysisModel/GQAM/LaxityKind startObs::TimeObservation stopObs::TimeObservation ;
ActivityPartition ::= isDimension::MARTE_PrimitivesTypes/Boolean isExternal::MARTE_PrimitivesTypes/Boolean (node::ActivityNode)+ (subpartition::ActivityPartition)+ superPartition::ActivityPartition represents::Element (edge::ActivityEdge)+ ;
NFP_Duration ::= unit::MeasurementUnits/TimeUnitKind clock::MARTE_PrimitivesTypes/String precision::MARTE_PrimitivesTypes/Real ;
InteractionOperand ::= guard::InteractionConstraint (fragment::InteractionFragment)+ ;
InterruptKind ::= (HardwareInterruption::ε) | (ProcessorDetectedException::ε) | (ProgrammedException::ε) | (Undef::ε) | (Other::ε) ;
VariableDirectionKind ::= (in::ε) | (out::ε) | (inout::ε) ;
State ::= isComposite::MARTE_PrimitivesTypes/Boolean isOrthogonal::MARTE_PrimitivesTypes/Boolean isSimple::MARTE_PrimitivesTypes/Boolean isSubmachineState::MARTE_PrimitivesTypes/Boolean submachine::StateMachine (connection::ConnectionPointReference)+ (connectionPoint::Pseudostate)+ redefinedState::State stateInvariant::Constraint entry::Behavior exit::Behavior doActivity::Behavior (deferrableTrigger::Trigger)+ (region::Region)+ ;
BurstPattern ::= minInterarrival::BasicNFP_Types/NFP_Duration maxInterarrival::BasicNFP_Types/NFP_Duration minEventInterval::BasicNFP_Types/NFP_Duration maxEventInterval::BasicNFP_Types/NFP_Duration burstSize::BasicNFP_Types/NFP_Integer ;
SourceKind ::= (est::ε) | (meas::ε) | (calc::ε) | (req::ε) ;
HwRAM ::= organization::MARTE_DesignModel/HRM/HwLogical/HwMemory/MemoryOrganization isSynchronous::BasicNFP_Types/NFP_Boolean isStatic::BasicNFP_Types/NFP_Boolean isNonVolatile::BasicNFP_Types/NFP_Boolean repl_Policy::MARTE_DesignModel/HRM/HwLogical/HwMemory/Repl_Policy writePolicy::MARTE_DesignModel/HRM/HwLogical/HwMemory/WritePolicy ;
PaResPassStep ::= resource::MARTE_Foundations/GRM/Resource resUnits::BasicNFP_Types/NFP_Integer ;
Timing ::= notation::BasicNFP_Types/NFP_String description::BasicNFP_Types/NFP_String value::BasicNFP_Types/NFP_Duration ;
PLD_Organization ::= nbRows::BasicNFP_Types/NFP_Integer nbColumns::BasicNFP_Types/NFP_Natural class::MARTE_DesignModel/HRM/HwLogical/HwComputing/PLD_Class ;
PeriodicServerParameters ::= kind::GRM_BasicTypes/PeriodicServerKind backgroundPriority::MARTE_PrimitivesTypes/Integer initialBudget::BasicNFP_Types/NFP_Duration replenishPeriod::BasicNFP_Types/NFP_Duration maxPendingReplenish::MARTE_PrimitivesTypes/Integer ;
SaExecHost ::= isSched::BasicNFP_Types/NFP_Boolean schSlack::BasicNFP_Types/NFP_Real schedUtiliz::BasicNFP_Types/NFP_Real ISRswitchT::BasicNFP_Types/NFP_Duration ISRprioRange::MARTE_DataTypes/IntegerInterval schedPolicy::GRM_BasicTypes/SchedPolicyKind isPreempible::BasicNFP_Types/NFP_Boolean ;
ClosedPattern ::= population::BasicNFP_Types/NFP_Integer extDelay::BasicNFP_Types/NFP_Duration ;
rtf ::= base_BehavioralFeature::BehavioralFeature base_Action::Action base_Message::Message base_Signal::Signal utility::MARTE_DataTypes/UtilityType occKind::BasicNFP_Types/ArrivalPattern tRef::MARTE_Foundations/Time/TimedInstantObservation relDl::BasicNFP_Types/NFP_Duration absDl::BasicNFP_Types/NFP_DateTime boundDl::BasicNFP_Types/NFP_BoundedDuration rdTime::BasicNFP_Types/NFP_Duration miss::BasicNFP_Types/NFP_Percentage priority::BasicNFP_Types/NFP_Integer ;
NFP_Natural ::= value::MARTE_PrimitivesTypes/UnlimitedNatural ;
ProcessingResource ::= speedFactor::MARTE_PrimitivesTypes/Real scheduler::MARTE_Foundations/GRM/Scheduler ;
NFP_Boolean ::= value::MARTE_PrimitivesTypes/Boolean ;
Association ::= Extension ;
 Association ::= isDerived::MARTE_PrimitivesTypes/Boolean (ownedEnd::Property)+ (endType::Type)+ memberEnd::Property (navigableOwnedEnd::Property)+ ;
LengthUnitKind ::= (m::ε) | (cm::ε) | (mm::ε) ;
EntryPoint ::= isReentrant::MARTE_PrimitivesTypes/Boolean routine::BehavioralFeature base_BehavioralFeature::BehavioralFeature base_Dependency::Dependency ;
HwResource ::= description::BasicNFP_Types/NFP_String (p_HW_Services::MARTE_DesignModel/HRM/HwLogical/HwGeneral/HwResourceService)+ (r_HW_Services::MARTE_DesignModel/HRM/HwLogical/HwGeneral/HwResourceService)+ (ownedHW::MARTE_DesignModel/HRM/HwLogical/HwGeneral/HwResource)+ (endPoints::MARTE_DesignModel/HRM/HwLogical/HwCommunication/HwEndPoint)+ ;
MemoryBroker ::= accessPolicy::MARTE_DesignModel/SRM/SW_Brokering/AccessPolicyKind (memories::TypedElement)+ (memoryBlockAdressSelements::TypedElement)+ (memoryBlockSizeElements::TypedElement)+ (lockServices::BehavioralFeature)+ (unlockServices::BehavioralFeature)+ (mapServices::BehavioralFeature)+ (unMapServices::BehavioralFeature)+ ;
PeriodicPattern ::= period::BasicNFP_Types/NFP_Duration jitter::BasicNFP_Types/NFP_Duration phase::BasicNFP_Types/NFP_Duration ;
FlowSpecification ::= direction::MARTE_Foundations/GCM/DirectionKind base_Interface::Interface ;
TimedConstraint ::= interpretation::TimeTypesLibrary/TimeInterpretationKind ;
TimerResource ::= duration::BasicNFP_Types/NFP_Duration isPeriodic::MARTE_PrimitivesTypes/Boolean ;
AllocateActivityGroup ::= isUnique::MARTE_PrimitivesTypes/Boolean base_ActivityPartition::ActivityPartition ;
SwTimerResource ::= durationElements::TypedElement ;
InstanceSpecification ::= EnumerationLiteral ;
 InstanceSpecification ::= (classifier::Classifier)+ (slot::Slot)+ specification::ValueSpecification ;
InterRepetition ::= repetitionShapeDependence::MARTE_DataTypes/IntegerVector isModulo::MARTE_PrimitivesTypes/Boolean ;
MessageResourceKind ::= (MessageQueue::ε) | (Pipe::ε) | (Blackboard::ε) | (Undef::ε) | (Other::ε) ;
MessageComResource ::= isFixedMessageSize::MARTE_PrimitivesTypes/Boolean meachnism::MARTE_DesignModel/SRM/SW_Interaction/MessageResourceKind (messageSizeElements::TypedElement)+ (messageQueueCapacityElements::TypedElement)+ messageQueuePolicy::MARTE_DesignModel/SRM/SW_Interaction/QueuePolicyKind (sendServices::BehavioralFeature)+ (receiveServices::BehavioralFeature)+ ;
ClockType ::= nature::TimeTypesLibrary/TimeNatureKind unitType::Enumeration isLogical::MARTE_PrimitivesTypes/Boolean resolAttrib::Property maxValAttrib::Property offsetAttrib::Property getTime::Operation setTime::Operation indexToValue::Operation base_Class::Class ;
ISA_Type ::= (RISC::ε) | (CISC::ε) | (VLIW::ε) | (SIMD::ε) | (Other::ε) | (Undef::ε) ;
Comment ::= body::MARTE_PrimitivesTypes/String (annotatedElement::Element)+ ;
BoundedSubtype ::= baseType::DataType minValue::MARTE_PrimitivesTypes/String maxValue::MARTE_PrimitivesTypes/String isMinOpen::MARTE_PrimitivesTypes/Boolean isMaxOpen::MARTE_PrimitivesTypes/Boolean base_DataType::DataType ;
ConnectionPointReference ::= (entry::Pseudostate)+ (exit::Pseudostate)+ state::State ;
NotificationResource ::= occurence::MARTE_DesignModel/SRM/SW_Interaction/NotificationKind mechanism::MARTE_DesignModel/SRM/SW_Interaction/NotificationResourceKind (occurenceCountElements::TypedElement)+ (maskElements::TypedElement)+ (flushServices::BehavioralFeature)+ (signalServices::BehavioralFeature)+ (waitServices::BehavioralFeature)+ (clearServices::BehavioralFeature)+ ;
HwPLD ::= technology::MARTE_DesignModel/HRM/HwLogical/HwComputing/PLD_Technology organization::MARTE_DesignModel/HRM/HwLogical/HwComputing/PLD_Organization nbLUTs::BasicNFP_Types/NFP_Natural ndLUT_Inputs::BasicNFP_Types/NFP_Natural nbFlipFlops::BasicNFP_Types/NFP_Natural (blocksRAM::MARTE_DesignModel/HRM/HwLogical/HwMemory/HwRAM)+ ;
InteractionUse ::= PartDecomposition ;
 InteractionUse ::= refersTo::Interaction (actualGate::Gate)+ (argument::Action)+ ;
CacheStructure ::= nsSets::BasicNFP_Types/NFP_Natural blockSize::BasicNFP_Types/NFP_Natural associativity::BasicNFP_Types/NFP_Natural ;
Alarm ::= isWatchdog::MARTE_PrimitivesTypes/Boolean (timers::TypedElement)+ ;
TemplateParameter ::= signature::TemplateSignature parameteredElement::ParameterableElement ownedParameteredElement::ParameterableElement default::ParameterableElement ownedDefault::ParameterableElement ;
Resource ::= resMult::MARTE_PrimitivesTypes/Integer isProtected::MARTE_PrimitivesTypes/Boolean isActive::MARTE_PrimitivesTypes/Boolean base_Property::Property base_InstanceSpecification::InstanceSpecification base_Classifier::Classifier base_Lifeline::Lifeline base_ConnectableElement::ConnectableElement ;
InterfaceRealization ::= contract::Interface implementingClassifier::BehavioredClassifier ;
Connector ::= type::Association (redefinedConnector::Connector)+ end::ConnectorEnd kind::ConnectorKind (contract::Behavior)+ ;
ObjectNodeOrderingKind ::= (unordered::ε) | (ordered::ε) | (LIFO::ε) | (FIFO::ε) ;
MutualExclusionResource ::= protectKind::GRM_BasicTypes/ProtectProtocolKind ceiling::MARTE_PrimitivesTypes/Integer otherProtectProtocol::MARTE_PrimitivesTypes/String ;
Enumeration ::= (ownedLiteral::EnumerationLiteral)+ ;
Package ::= Profile ;
 Package ::= (ownedType::Type)+ (packageMerge::PackageMerge)+ (packagedElement::PackageableElement)+ (nestedPackage::Package)+ nestingPackage::Package (profileApplication::ProfileApplication)+ ;
GeneralizationSet ::= isCovering::MARTE_PrimitivesTypes/Boolean isDisjoint::MARTE_PrimitivesTypes/Boolean powertype::Classifier (generalization::Generalization)+ ;
MessageSort ::= (synchCall::ε) | (asynchCall::ε) | (asynchSignal::ε) | (createMessage::ε) | (deleteMessage::ε) | (reply::ε) ;
Collaboration ::= (collaborationRole::ConnectableElement)+ ;
DataType ::= Enumeration ;
 DataType ::= (ownedAttribute::Property)+ (ownedOperation::Operation)+ ;
HwProcessor ::= architecture::BasicNFP_Types/NFP_DataSize mips::BasicNFP_Types/NFP_Natural ipc::BasicNFP_Types/NFP_Real nbCores::BasicNFP_Types/NFP_Natural nbPipelines::BasicNFP_Types/NFP_Natural nbStages::BasicNFP_Types/NFP_Natural nbALUs::BasicNFP_Types/NFP_Natural nbFBUs::BasicNFP_Types/NFP_Natural (ownedISAs::MARTE_DesignModel/HRM/HwLogical/HwComputing/HwISA)+ (predictors::MARTE_DesignModel/HRM/HwLogical/HwComputing/HwBranchPredictor)+ (caches::MARTE_DesignModel/HRM/HwLogical/HwMemory/HWCache)+ (ownedMMUs::MARTE_DesignModel/HRM/HwLogical/HwStorageManager/HwMMU)+ ;
HwROM ::= type::MARTE_DesignModel/HRM/HwLogical/HwMemory/ROM_Type organization::MARTE_DesignModel/HRM/HwLogical/HwMemory/MemoryOrganization ;
PLD_Class ::= (SymetricalArray::ε) | (RowBased::ε) | (SeaOfGates::ε) | (HierarchicalPLD::ε) | (Other::ε) | (Undef::ε) ;
Extension ::= isRequired::MARTE_PrimitivesTypes/Boolean metaclass::Class ;
HwClock ::= frequency::BasicNFP_Types/NFP_Frequency ;
DeploymentSpecification ::= deploymentLocation::MARTE_PrimitivesTypes/String executionLocation::MARTE_PrimitivesTypes/String deployment::Deployment ;
Slot ::= definingFeature::StructuralFeature (value::ValueSpecification)+ owningInstance::InstanceSpecification ;
ExceptionHandler ::= handlerBody::ExecutableNode exceptionInput::ObjectNode (exceptionType::Classifier)+ protectedNode::ExecutableNode ;
MessageKind ::= (complete::ε) | (lost::ε) | (found::ε) | (unknown::ε) ;
ParameterSet ::= (parameter::Parameter)+ (condition::Constraint)+ ;
AperiodicPattern ::= distribution::BasicNFP_Types/NFP_CommonType ;
ResourceUsage ::= (execTime::BasicNFP_Types/NFP_Duration)+ (msgSize::BasicNFP_Types/NFP_DataSize)+ (allocatedMemory::BasicNFP_Types/NFP_DataSize)+ (usedMemory::BasicNFP_Types/NFP_DataSize)+ (powerPeak::BasicNFP_Types/NFP_Power)+ (energy::BasicNFP_Types/NFP_Energy)+ base_NamedElement::NamedElement (usedResources::MARTE_Foundations/GRM/Resource)+ (subUsage::MARTE_Foundations/GRM/ResourceUsage)+ ;
ComponentKind ::= (Card::ε) | (Channel::ε) | (Chip::ε) | (Port::ε) | (Unit::ε) | (Other::ε) | (Undef::ε) ;
ExecutionPlatformAllocationEnd ::= (allocatedFrom::MARTE_Foundations/Alloc/ApplicationAllocationEnd)+ ;
Env_Condition ::= type::MARTE_DesignModel/HRM/HwPhysical/HwLayout/ConditionType status::MARTE_DesignModel/HRM/HwPhysical/HwLayout/CompnentState description::BasicNFP_Types/NFP_String range::MARTE_DataTypes/Realnterval ;
BFeatureKind ::= (in::ε) | (out::ε) | (inout::ε) | (required::ε) | (provided::ε) | (reqpro::ε) ;
ConcurrentAccessProtocolKind ::= (PIP::ε) | (PCP::ε) | (NoPreemption::ε) | (Undef::ε) | (Other::ε) ;
ProfileApplication ::= appliedProfile::Profile isStrict::MARTE_PrimitivesTypes/Boolean applyingPackage::Package ;
Manifestation ::= utilizedElement::PackageableElement ;
NFP_Real ::= value::MARTE_PrimitivesTypes/Real ;
IntegerInterval ::= bound::MARTE_PrimitivesTypes/Integer ;
GaWorkloadBehavior ::= (behavior::MARTE_AnalysisModel/GQAM/GaScenario)+ (demand::MARTE_AnalysisModel/GQAM/GaWorkloadEvent)+ base_NamedElement::NamedElement ;
PLD_Technology ::= (SRAM::ε) | (Antifuse::ε) | (Flash::ε) | (Other::ε) | (Undef::ε) ;
Repl_Policy ::= (LRU::ε) | (NFU::ε) | (FIFO::ε) | (Random::ε) | (Other::ε) | (Undef::ε) ;
IntegerVector ::= (vectorElem::MARTE_PrimitivesTypes/Integer)+ ;
Distribute ::= patternShape::RS_Library/ShapeSpecification repetitionSpace::RS_Library/ShapeSpecification fromTiler::RS_Library/TilerSpecification toTiler::RS_Library/TilerSpecification ;
EnergyUnitKind ::= (J::ε) | (KJ::ε) | (Wh::ε) | (KWh::ε) | (mWh::ε) ;
--------------------metamodels::METAH.bgf--------------------
Process ::= procName::String periodic::String declaration::String implementation::String ;
METAHFile ::= (entries::METAHEntry)+ ;
MacroImplementation ::= macroImpName::String declaration::String (process::Process)+ (connections::Connection)+ ;
MacroDeclaration ::= name::String (ports::Port)+ ;
Connection ::= compSrc::String portSrc::String compDest::String portDest::String ;
ProcessAttribute ::= attName::String attValue::Integer attValueType::String ;
Attribute ::= attName::String attValue::Integer attValueType::String attType::String ;
ProcessDeclaration ::= procDecName::String (ports::Port)+ ;
Data ::= dataName::String ;
PackageImplementation ::= implementationName::String implements::String (attributes::Attribute)+ ;
Package ::= packName::String (data::Data)+ ;
Port ::= portName::String portCom::String portPackage::String portType::String ;
ProcessImplementation ::= procImpName::String declaration::String (processAttributes::ProcessAttribute)+ ;
--------------------metamodels::MICRO.owl.bgf--------------------
Email_Template ::= define::Event ;
Proceedings_Publisher ::= (publisherOf::Thing)+ technicallyOrganises::Thing ;
Conference_proceedings ::= has_an_ISBN::String has_a_publisher::Publisher has_a_volume::String ;
Science_Worker ::= hasMail::String worksForCompany::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item ;
TraditionalLecture ::= hasAcronym::String ;
RadioCommunicationsTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
AccommodationPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
SignalProcessingTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
TwoLevelConference ::= isOrganizedBy::OrganizingCommittee annualOrder::Integer takesPlace::Location hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country ;
pc_meeting ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location ;
SessionChair ::= hasMail::String worksForCompany::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item ;
SteeringCommittee ::= organizes::Conference ;
Working_event ::= hasTopic::Topic hasAdministrativeEvent::Administrative_event ;
summary_of_reviews ::= is_created_in::activity ;
Co-author ::= co-writePaper::Paper ;
User ::= Committee ;
 User ::= Administrator ;
 User ::= recieve::Document (create::Thing)+ submit::Document ;
Short_paper ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
GovernmentOrganization ::= isProviderOf::Sponsorship ;
Tutorial_Abstract ::= part_of_article::article (is_the_1th_part_of::Thing)+ ;
Main_office ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
CallForManuscripts ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
MealMenu ::= isMenuOf::MealEvent ;
Paper_Author ::= hasMail::String worksForCompany::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item ;
group_email ::= goes_through::activity is_sent_to::human is_created_in::activity structure_created_by::human has_author::human gives_classification::classification article_written_by::Author has_reviewer::Reviewer has_abstract::Abstract ;
Publisher ::= issues::Conference_proceedings ;
Full_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
OutsideReferee ::= hasMail::String worksForCompany::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item ;
Assigned_Paper ::= Evaluated_Paper ;
 Assigned_Paper ::= hasReviewer::Possible_Reviewer ;
upper_tier_reviewing_process ::= is_performed_by::human ;
OperatingTopicsystems ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Location ::= locationOf::Event ;
GeneralCoChair ::= organizes::Conference ;
PaperSubmissionChair ::= organizes::Conference ;
Chair_PC ::= hasMail::String worksForCompany::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item ;
Active_conference_participant ::= gives_presentations::Presentation ;
Short_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
SatelliteAndSpaceCommunicationsTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
WorkShop ::= is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime hasTopic::Topic expectedAttendance::Integer isPartOf::Conference (has_result::Thing)+ sent_by::Person ;
Plenary_lecture ::= hasAcronym::String ;
Organizing_committee ::= was_an_organizing_committee_of::Conference_volume ;
MobileComputingTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Registration_of_participants_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Committee_member ::= Co-chair ;
 Committee_member ::= Chair ;
 Committee_member ::= was_a_member_of::Committee ;
Deadline_hotel_reservation ::= done_till::date ;
Camera_Ready_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
NGO ::= isProviderOf::Sponsorship ;
CommunicationTheoryTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
AcademicEvent ::= TalkEvent ;
 AcademicEvent ::= OrganizationalMeeting ;
 AcademicEvent ::= PaperPresentation ;
 AcademicEvent ::= hasCall::Call ;
Mailing_list ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
CallForPapers ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
CommunicationsTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
SecurityTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
DiningPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
PaperAbstract ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
Author ::= AuthorNotReviewer ;
 Author ::= Co-author ;
 Author ::= Corresponding_Author ;
 Author ::= Author_cd_proceedings_included ;
 Author ::= Lecturer ;
 Author ::= Plenary_lecture_speaker ;
 Author ::= Tutorial_speaker ;
 Author ::= Author_book_proceedings_included ;
 Author ::= Presenter ;
 Author ::= submitPaper::Paper writePaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing ;
Admin_Role ::= assigned_by::Administrator ;
ComputerArchitectureTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
WorkshopTutorialChair ::= organizes::Conference ;
OrganizingCommittee ::= ProgramCoChair ;
 OrganizingCommittee ::= PublicationsChair ;
 OrganizingCommittee ::= WorkshopTutorialChair ;
 OrganizingCommittee ::= RegistrationChair ;
 OrganizingCommittee ::= StudentAdvocate ;
 OrganizingCommittee ::= FinanceChair ;
 OrganizingCommittee ::= PaperSubmissionChair ;
 OrganizingCommittee ::= PublicityWebChair ;
 OrganizingCommittee ::= SteeringCommittee ;
 OrganizingCommittee ::= GeneralCoChair ;
 OrganizingCommittee ::= organizes::Conference ;
OrganizationalMeeting ::= hasCall::Call ;
PersonalReviewHistory ::= isReviewHistoryOf::Reviewer ;
conference_setup ::= sets_member::human is_made_by::human includes_topic::Topic sets_date::date sets_URL::URL ;
Member_PC ::= expertOn::Topic reviewes::Contribution ;
Web_Site ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
RejectedPaper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
ParallelAndDistributedComputingTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Research_Topic ::= define::Event ;
 Research_Topic ::= topicCoveredBy::Thing ;
Reviewing_event ::= follows::Administrative_event parallel_with::Administrative_event ;
MultimediaTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
CryptographyTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Tutorial ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Conference_volume ::= has_parts::Conference_part has_workshops::Workshop has_tracks::Track has_tutorials::Tutorial has_a_commtitee::Committee has_a_steering_committee::Steering_committee has_an_organizing_committee::Organizing_committee has_important_dates::Important_dates has_contributions::Conference_contribution has_a_location::String has_a_program_committee::Program_committee ;
Regular ::= earlyRegistration::Boolean ;
ProgramCommittee ::= hasProgramCommitteeMember::ProgramCommitteeMember ;
Transparency ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
Registation_deadline ::= done_till::date ;
Review ::= Meta-Review ;
 Review ::= Positive_Review ;
 Review ::= Negative_Review ;
 Review ::= Neutral_Review ;
 Review ::= writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::activity review_written_by::Reviewer reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer ;
Person ::= ConferenceMember ;
 Person ::= ExternalReviewer ;
 Person ::= User ;
 Person ::= Conference_participant ;
 Person ::= Conference_contributor ;
 Person ::= Committee_member ;
 Person ::= Conference_applicant ;
 Person ::= Track-workshop_chair ;
 Person ::= Scholar ;
 Person ::= Participant ;
 Person ::= Member_PC ;
 Person ::= Chair_PC ;
 Person ::= Science_Worker ;
 Person ::= Assistant ;
 Person ::= Volunteer ;
 Person ::= chair ;
 Person ::= participant ;
 Person ::= ConferenceChair ;
 Person ::= Attendee ;
 Person ::= SessionChair ;
 Person ::= TPCMember ;
 Person ::= Paper_Author ;
 Person ::= Conference_Participant ;
 Person ::= Agency_Staff_Member ;
 Person ::= Possible_Reviewer ;
 Person ::= Student ;
 Person ::= Delegate ;
 Person ::= Sponsor ;
 Person ::= OutsideReferee ;
 Person ::= ProgramCommitteeMember ;
 Person ::= Chairman ;
 Person ::= Administrator ;
 Person ::= Organizer ;
 Person ::= hasMail::String worksForCompany::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item ;
Head_Role ::= assigned_by::Administrator ;
ProgramCommitteeMember ::= ProgramCommitteeChair ;
 ProgramCommitteeMember ::= memberOfProgramCommittee::ProgramCommittee maxPapers::Integer addedBy::Administrator ;
Invited_Talk_Abstract ::= part_of_article::article (is_the_1th_part_of::Thing)+ ;
Poster ::= is_submitted_at::Conference_volume ;
 Poster ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
Paper ::= PaperAbstract ;
 Paper ::= PaperFullVersion ;
 Paper ::= Invited_Paper ;
 Paper ::= Short_Paper ;
 Paper ::= Full_Paper ;
 Paper ::= Accepted_Paper ;
 Paper ::= Rejected_Paper ;
 Paper ::= Undecided_Paper ;
 Paper ::= ActivePaper ;
 Paper ::= PendingPaper ;
 Paper ::= WithdrawnPaper ;
 Paper ::= RejectedPaper ;
 Paper ::= AcceptedPaper ;
 Paper ::= PublishedPaper ;
 Paper ::= Camera_Ready_Paper ;
 Paper ::= Workshop_Paper ;
 Paper ::= Industrial_Paper ;
 Paper ::= Conference_Paper ;
 Paper ::= Submitted_Paper ;
 Paper ::= Poster_Paper ;
 Paper ::= Regular_Paper ;
 Paper ::= Demo_Paper ;
 Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
RegistrationChair ::= organizes::Conference ;
Invitation_letter ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
Volunteer ::= hasMail::String worksForCompany::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item ;
Conference_announcement ::= has_authors::Person has_a_date_of_issue::date ;
WithdrawnPaper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
Program_Committee_Chair ::= is_author_of::article performs_activity::activity is_employed_in::institute has_topic_of_interest::Topic supervises::activity e-mail::String last_name::String first_name::String ;
Program_committee ::= was_a_program_committee_of::Conference_volume ;
paper_assignment ::= Manual_Paper_Assignment ;
 paper_assignment ::= Automatic_Paper_Assignment ;
 paper_assignment ::= assign_paper::Program_Committee_member is_performed_by::human ;
Lecture ::= Plenary_lecture ;
 Lecture ::= QualitatvieLecture ;
 Lecture ::= TraditionalLecture ;
 Lecture ::= Session ;
 Lecture ::= hasAcronym::String ;
Committee ::= Program_committee ;
 Committee ::= Organizing_committee ;
 Committee ::= Steering_committee ;
 Committee ::= has_members::Committee_member was_a_committee_of::Conference_volume has_a_committee_co-chair::Co-chair has_a_committee_chair::Chair ;
Conference_hall ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
QualitatvieLecture ::= hasAcronym::String ;
Automatic_Paper_Assignment ::= (automatically_assign_paper::Program_Committee_member)+ ;
Symposium ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location ;
Organization ::= Company ;
 Organization ::= AcademiaOrganization ;
 Organization ::= IndustryOrganization ;
 Organization ::= NGO ;
 Organization ::= GovernmentOrganization ;
 Organization ::= University ;
 Organization ::= isProviderOf::Sponsorship ;
Undecided_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
Steering_committee ::= was_a_steering_committee_of::Conference_volume ;
AuthorNotReviewer ::= submitPaper::Paper writePaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing ;
review_form ::= is_created_in::activity ;
Deadline_for_notification_of_acceptance ::= done_till::date ;
Senior_Program_Committee_member ::= supervises::activity ;
ActivitySubmissionForm ::= TutorialProposal ;
 ActivitySubmissionForm ::= WorksopProposal ;
 ActivitySubmissionForm ::= Paper ;
 ActivitySubmissionForm ::= isSubmittedBy::Author hasAuthor::Author submissionDeadline::dateTime ;
AssociatedChair ::= memberOfConference::Conference ;
Conference ::= Conference_volume ;
 Conference ::= TwoLevelConference ;
 Conference ::= SingleLevelConference ;
 Conference ::= isOrganizedBy::OrganizingCommittee annualOrder::Integer takesPlace::Location hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country ;
Document ::= Email ;
 Document ::= Submission ;
 Document ::= Template ;
 Document ::= article ;
 Document ::= SlideSet ;
 Document ::= Programme ;
 Document ::= MealMenu ;
 Document ::= Programme_Brochure ;
 Document ::= Flyer ;
 Document ::= Web_Site ;
 Document ::= Multi-author_Volume ;
 Document ::= Form ;
 Document ::= Mailing_list ;
 Document ::= Record_of_attendance ;
 Document ::= Brief_introduction_for_Session_chair ;
 Document ::= Invitation_letter ;
 Document ::= Viza ;
 Document ::= Transparency ;
 Document ::= Payment_document ;
 Document ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
Viza ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
Presentation ::= Invited_talk ;
 Presentation ::= PowerPoint_presentation ;
 Presentation ::= Video_presentation ;
 Presentation ::= is_given_by::Active_conference_participant ;
Reviewed_contribution ::= Accepted_contribution ;
 Reviewed_contribution ::= Rejected_contribution ;
 Reviewed_contribution ::= has_a_review::Review ;
WirelessCommunicationsTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
participant ::= submits_to_conference::Conference ;
Item ::= Transport_vehicle ;
 Item ::= Card ;
 Item ::= Audiovisual_equipment ;
 Item ::= Publication ;
 Item ::= Document ;
 Item ::= go_through::Activity (is_used_for::Thing)+ is_signed_by::Person is_made_from::Item is_sent_after::Time is_needed_for::Person is_sent_before::Time is_prepared_by::Person is_used_by::Person is_given_to::Person is_sent_by::Person is_writen_by::Person ;
Activity ::= Event_Creation ;
 Activity ::= Request ;
 Activity ::= Event_Approval ;
 Activity ::= Registration ;
 Activity ::= Activity_before_conference ;
 Activity ::= Conference_activity ;
 Activity ::= Activity_after_conference ;
 Activity ::= WorkShop ;
 Activity ::= Lecture ;
 Activity ::= is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime hasTopic::Topic expectedAttendance::Integer isPartOf::Conference (has_result::Thing)+ sent_by::Person ;
PowerPoint_presentation ::= is_given_by::Active_conference_participant ;
human ::= Program_Committee_member ;
 human ::= Contact_Person ;
 human ::= Program_Committee_Chair ;
 human ::= is_author_of::article performs_activity::activity is_employed_in::institute has_topic_of_interest::Topic supervises::activity e-mail::String last_name::String first_name::String ;
FinanceChair ::= organizes::Conference ;
Track ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
CADTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Event_Creation ::= is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime hasTopic::Topic expectedAttendance::Integer isPartOf::Conference (has_result::Thing)+ sent_by::Person ;
PublicationsChair ::= organizes::Conference ;
Conference_part ::= Track ;
 Conference_part ::= Tutorial ;
 Conference_part ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Possible_Reviewer ::= PC_Member ;
 Possible_Reviewer ::= reviewerOfPaper::Paper ;
Participant ::= Member ;
 Participant ::= Student ;
 Participant ::= Regular ;
 Participant ::= earlyRegistration::Boolean ;
SlideSet ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
MeetingRoomPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
Neutral_Review ::= writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::activity review_written_by::Reviewer reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer ;
Submissions_deadline ::= done_till::date ;
ExternalReviewer ::= assignedByReviewer::Reviewer ;
Topic ::= ParallelAndDistributedComputingTopic ;
 Topic ::= WirelessCommunicationsTopic ;
 Topic ::= OperatingTopicsystems ;
 Topic ::= ComputerNetworksTopic ;
 Topic ::= SatelliteAndSpaceCommunicationsTopic ;
 Topic ::= CADTopic ;
 Topic ::= MultimediaTopic ;
 Topic ::= CommunicationsTopic ;
 Topic ::= PowerlineTransmissionTopic ;
 Topic ::= AntennasTopic ;
 Topic ::= PerformanceTopic ;
 Topic ::= SignalProcessingTopic ;
 Topic ::= MicroelectronicsTopic ;
 Topic ::= TestOnlyTopic ;
 Topic ::= RadioCommunicationsTopic ;
 Topic ::= ComputerArchitectureTopic ;
 Topic ::= MedicineTopic ;
 Topic ::= SecurityTopic ;
 Topic ::= MobileComputingTopic ;
 Topic ::= CryptographyTopic ;
 Topic ::= CommunicationTheoryTopic ;
 Topic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
activity ::= paper_assignment ;
 activity ::= bidding_of_reviewer ;
 activity ::= managing_of_conference_process ;
 activity ::= reviewing_proces ;
 activity ::= notification ;
 activity ::= submission_process ;
 activity ::= is_followed_by::activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human ;
ContactInformation ::= hasCity::String hasStreet::String hasPostalCode::String hasPhone::String ;
Author_cd_proceedings_included ::= submitPaper::Paper writePaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing ;
Session_room ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
Record_of_attendance ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
Individual_Presentation ::= Invited_Talk ;
 Individual_Presentation ::= Contributed_Talk ;
 Individual_Presentation ::= (presentationOfPaper::Document)+ ;
PerformanceTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Sponzorship ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
Programme ::= belongsToEvent::ConferenceEvent ;
Reviewing_results_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Sponsor ::= hasMail::String worksForCompany::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item ;
Organisation ::= Organising_Agency ;
 Organisation ::= Academic_Institution ;
 Organisation ::= Proceedings_Publisher ;
 Organisation ::= (publisherOf::Thing)+ technicallyOrganises::Thing ;
Evaluated_Paper ::= Accepted_Paper ;
 Evaluated_Paper ::= Rejected_Paper ;
 Evaluated_Paper ::= hasReview::Review ;
AcademiaOrganization ::= isProviderOf::Sponsorship ;
article ::= group_email ;
 article ::= notification_email ;
 article ::= abstract_of_paper ;
 article ::= review_form ;
 article ::= summary_of_reviews ;
 article ::= Review ;
 article ::= goes_through::activity is_sent_to::human is_created_in::activity structure_created_by::human has_author::human gives_classification::classification article_written_by::Author has_reviewer::Reviewer has_abstract::Abstract ;
ConferenceMember ::= ConferenceChair ;
 ConferenceMember ::= AssociatedChair ;
 ConferenceMember ::= ProgramCommitteeMember ;
 ConferenceMember ::= Chairman ;
 ConferenceMember ::= memberOfConference::Conference ;
MedicineTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Accepted_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
 Accepted_Paper ::= hasReview::Review ;
Submitted_contribution ::= Reviewed_contribution ;
 Submitted_contribution ::= has_a_review_expertise::Review_expertise ;
Agency_Staff_Member ::= hasMail::String worksForCompany::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item ;
Track-workshop_chair ::= was_a_track-workshop_chair_of::Conference_part ;
notification ::= has_result::article is_performed_by::human ;
RatedPapers ::= hasRating::ReviewRating ;
Regular_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
ConferenceChair ::= memberOfConference::Conference ;
 ConferenceChair ::= hasMail::String worksForCompany::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item ;
Place ::= DiningPlace ;
 Place ::= ConferenceVenuePlace ;
 Place ::= MeetingRoomPlace ;
 Place ::= AccommodationPlace ;
 Place ::= Building ;
 Place ::= Session_room ;
 Place ::= Hotel_room ;
 Place ::= Conference_hall ;
 Place ::= Main_office ;
 Place ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
EEnum ::= (Compilers::ε) | (Microarchitecture::ε) | (Systems::ε) | (ForwardLookingIdea::ε) | (male::ε) | (female::ε) | (high::ε) | (medium::ε) | (low::ε) | (very high::ε) ;
Camera_Ready_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Bid ::= adjustedBy::Reviewer ;
Attendee ::= hasMail::String worksForCompany::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item ;
Manual_Paper_Assignment ::= (manually_assign_paper::Program_Committee_member)+ ;
Registration ::= is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime hasTopic::Topic expectedAttendance::Integer isPartOf::Conference (has_result::Thing)+ sent_by::Person ;
 Registration ::= ε ;
WorksopProposal ::= isSubmittedBy::Author hasAuthor::Author submissionDeadline::dateTime ;
Workshop_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
ConferenceDinner ::= hasMenu::MealMenu ;
Meta-Reviewer ::= assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper writeReview::Review assignExternalReviewer::ExternalReviewer invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ writes_review::Review hasReviewHistory::PersonalReviewHistory executes::DoubleBlindReview ;
ProgramCommitteeChair ::= endReview::Review ;
Call_for_participation ::= has_authors::Person has_a_date_of_issue::date ;
Scholar ::= studyAt::University ;
chair ::= assigns_reviewers_to_article::Reviewer creates_program::program ;
TPCMember ::= hasMail::String worksForCompany::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item ;
Assistant ::= hasMail::String worksForCompany::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item ;
ConferenceEvent ::= NonAcademicEvent ;
 ConferenceEvent ::= AcademicEvent ;
 ConferenceEvent ::= hasAttendee::Person hasLocation::Place hasProgramme::Programme hasEndDateTime::dateTime hasStartDateTime::dateTime ;
Conference_document ::= Conference_contribution ;
 Conference_document ::= Information_for_participants ;
 Conference_document ::= Call_for_paper ;
 Conference_document ::= Conference_announcement ;
 Conference_document ::= Call_for_participation ;
 Conference_document ::= Conference_www ;
 Conference_document ::= has_authors::Person has_a_date_of_issue::date ;
Member ::= earlyRegistration::Boolean ;
ProgramCoChair ::= organizes::Conference ;
University ::= scientificallyOrganises::Academic_Institution isProviderOf::Sponsorship ;
Administrator ::= finalizePaperAssignment::Conference runPaperAssignmentTools::Conference enableVirtualMeeting::Conference startReviewerBidding::Conference assignReviewer::Reviewer rejectPaper::Paper enterConferenceDetails::Conference printHardcopyMailingManifests::Conference setMaxPapers::ProgramCommitteeMember enterReviewCriteria::Conference acceptPaper::Paper addProgramCommitteeMember::ProgramCommitteeMember approve::Event assign::Role ;
Author_Role ::= assigned_by::Administrator ;
Conference_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
bidding_of_reviewer ::= is_performed_by::human ;
StudentAdvocate ::= organizes::Conference ;
PaperPresentation ::= relatedToPaper::AcceptedPaper ;
Chair ::= was_a_committee_chair_of::Committee ;
Negative_Review ::= writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::activity review_written_by::Reviewer reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer ;
abstract_of_paper ::= goes_through::activity is_sent_to::human is_created_in::activity structure_created_by::human has_author::human gives_classification::classification article_written_by::Author has_reviewer::Reviewer has_abstract::Abstract ;
Money ::= Tax ;
 Money ::= Fee ;
 Money ::= Sponzorship ;
 Money ::= Tip ;
 Money ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
Approval_Email ::= confirm::Event ;
AntennasTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
MicroelectronicsTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Template ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
session ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location ;
Role ::= Admin_Role ;
 Role ::= Author_Role ;
 Role ::= Committe_Role ;
 Role ::= Head_Role ;
 Role ::= Reviewer_Role ;
 Role ::= assigned_by::Administrator ;
Chairman ::= ConferenceChair ;
 Chairman ::= AssociatedChair ;
 Chairman ::= ProgramCommitteeChair ;
 Chairman ::= hasMail::String worksForCompany::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item memberOfConference::Conference ;
Contributed_Talk ::= (presentationOfPaper::Document)+ ;
Contact_Person ::= is_author_of::article performs_activity::activity is_employed_in::institute has_topic_of_interest::Topic supervises::activity e-mail::String last_name::String first_name::String ;
TutorialProposal ::= isSubmittedBy::Author hasAuthor::Author submissionDeadline::dateTime ;
Rejected_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
 Rejected_Paper ::= hasReview::Review ;
Event_Approval ::= is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime hasTopic::Topic expectedAttendance::Integer isPartOf::Conference (has_result::Thing)+ sent_by::Person ;
Invited_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
program ::= program_created_by::chair has_session::session ;
Plenary_lecture_speaker ::= submitPaper::Paper writePaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing ;
Academic_Institution ::= Research_Institute ;
 Academic_Institution ::= University ;
 Academic_Institution ::= scientificallyOrganises::Academic_Institution ;
Call ::= CallForPapers ;
 Call ::= CallForReviews ;
 Call ::= CallForManuscripts ;
 Call ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
Video_presentation ::= is_given_by::Active_conference_participant ;
Author_book_proceedings_included ::= submitPaper::Paper writePaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing ;
submission_process ::= is_performed_by::human ;
Tip ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
Camera_ready_manuscript_deadline ::= done_till::date ;
Event ::= Symposium ;
 Event ::= Social_event ;
 Event ::= Administrative_event ;
 Event ::= Working_event ;
 Event ::= pc_meeting ;
 Event ::= session ;
 Event ::= Social_Event ;
 Event ::= Scientific_Event ;
 Event ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location ;
Deadline ::= Deadline_hotel_reservation ;
 Deadline ::= Submissions_deadline ;
 Deadline ::= Deadline_for_notification_of_acceptance ;
 Deadline ::= Registation_deadline ;
 Deadline ::= Camera_ready_manuscript_deadline ;
 Deadline ::= done_till::date ;
MealEvent ::= ConferenceDinner ;
 MealEvent ::= hasMenu::MealMenu ;
PublicityWebChair ::= organizes::Conference ;
Research_Institute ::= scientificallyOrganises::Academic_Institution ;
Reviewer_Role ::= assigned_by::Administrator ;
Committe_Role ::= assigned_by::Administrator ;
Administrative_event ::= Reviewing_results_event ;
 Administrative_event ::= Reviewing_event ;
 Administrative_event ::= Registration_of_participants_event ;
 Administrative_event ::= Submission_event ;
 Administrative_event ::= Camera_Ready_event ;
 Administrative_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Brief_introduction_for_Session_chair ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
Positive_Review ::= writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::activity review_written_by::Reviewer reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer ;
PublishedPaper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
Company ::= isProviderOf::Sponsorship ;
DoubleBlindReview ::= isExecutedBy::Reviewer ;
Event_Setup ::= Paper_Typologies ;
 Event_Setup ::= Review_Form ;
 Event_Setup ::= Submission_Template ;
 Event_Setup ::= Event_Tracks ;
 Event_Setup ::= Research_Topic ;
 Event_Setup ::= Email_Template ;
 Event_Setup ::= define::Event ;
CommitteeMember ::= isMemberOf::Conference ;
Corresponding_Author ::= submitPaper::Paper writePaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing ;
PendingPaper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
PowerlineTransmissionTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
IndustryOrganization ::= isProviderOf::Sponsorship ;
TestOnlyTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Industrial_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
Co-chair ::= was_a_committe_co-chair_of::Committee ;
Abstract ::= Tutorial_Abstract ;
 Abstract ::= Invited_Talk_Abstract ;
 Abstract ::= part_of_article::article (is_the_1th_part_of::Thing)+ ;
Flyer ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
Tutorial_speaker ::= submitPaper::Paper writePaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing ;
Organising_Agency ::= (publisherOf::Thing)+ technicallyOrganises::Thing ;
PaperFullVersion ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
SingleLevelConference ::= isOrganizedBy::OrganizingCommittee annualOrder::Integer takesPlace::Location hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country ;
Sponsorship ::= TravelGrant ;
 Sponsorship ::= providedBy::Organization hasCostCurrency::String hasCostAmount::Integer ;
ConferenceVenuePlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
Conference_contribution ::= Poster ;
 Conference_contribution ::= Written_contribution ;
 Conference_contribution ::= Presentation ;
 Conference_contribution ::= is_submitted_at::Conference_volume ;
Invited_Talk ::= (presentationOfPaper::Document)+ ;
Demo_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
CallForReviews ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
Contribution ::= Poster ;
 Contribution ::= Short_paper ;
 Contribution ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
Paper_Typologies ::= define::Event ;
Information_for_participants ::= has_authors::Person has_a_date_of_issue::date ;
Programme_Brochure ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
Reviewer ::= Meta-Reviewer ;
 Reviewer ::= assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper writeReview::Review assignExternalReviewer::ExternalReviewer invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ writes_review::Review hasReviewHistory::PersonalReviewHistory executes::DoubleBlindReview ;
Meta-Review ::= writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::activity review_written_by::Reviewer reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer ;
Student ::= earlyRegistration::Boolean ;
 Student ::= hasMail::String worksForCompany::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item ;
Poster_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
managing_of_conference_process ::= is_followed_by::activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human ;
Call_for_paper ::= has_authors::Person has_a_date_of_issue::date ;
Conference_www ::= has_a_URL::String ;
Rejected_contribution ::= has_a_review::Review ;
Invited_talk ::= is_given_by::Active_conference_participant ;
Account ::= registred_by::Person ;
Event_Tracks ::= define::Event ;
Submission_Template ::= define::Event ;
Review_expertise ::= has_a_submitted_contribution::Submitted_contribution has_an_expertise::EEnum ;
Event_URL ::= concerned::Event ;
Important_dates ::= is_an_abstract_submission_date::date is_a_full_paper_submission_date::date is_an_ending_date::date is_a_date_of_acceptance_announcement::date is_a_date_of_camera_ready_paper_submission::date is_a_starting_date::date belong_to_a_conference_volume::Conference_volume ;
Submission_event ::= follows::Administrative_event parallel_with::Administrative_event ;
ActivePaper ::= RatedPapers ;
 ActivePaper ::= hasRating::ReviewRating ;
AcceptedPaper ::= relatedToEvent::PaperPresentation ;
TravelGrant ::= providedBy::Organization hasCostCurrency::String hasCostAmount::Integer ;
Review_preference ::= (has_a_topic_or_a_submission_contribution::Thing)+ has_a_degree::Integer ;
--------------------metamodels::MSOfficeExcel_SpreadsheetMLBasicDef.bgf--------------------
Comment ::= c_cell::Cell com_data::Data author::String showAlways::Boolean ;
CustomDocumentPropertiesCollection ::= cdp_workbook::Workbook (customDocumentProperties::CustomDocumentProperty)+ ;
DateTimeTypeValue ::= value::DateTimeType ;
Row ::= r_table::Table (r_cells::Cell)+ autoFitHeight::Boolean height::Double ;
Workbook ::= wb_smartTags::SmartTagsCollection wb_docProperties::DocumentPropertiesCollection wb_customDocProperties::CustomDocumentPropertiesCollection (wb_worksheets::Worksheet)+ ;
Column ::= c_table::Table autoFitWidth::Boolean width::Double ;
DateTimeType ::= year::Integer month::Integer day::Integer hour::Integer minute::Integer second::Integer ;
VersionType ::= n::Integer nn::Integer ;
Table ::= t_worksheet::Worksheet (t_cols::Column)+ (t_rows::Row)+ defaultColumnWidth::Double defaultRowHeight::Double expandedColumnCount::Integer expandedRowCount::Integer leftCell::Integer topCell::Integer fullColumns::Boolean fullRows::Boolean ;
Worksheet ::= ws_workbook::Workbook ws_table::Table name::String ;
DocumentPropertiesCollection ::= dp_workbook::Workbook title::String subject::String keywords::String description::String category::String author::String lastAuthor::String manager::String company::String hyperlinkBase::String revision::Integer presentationFormat::String guid::String appName::String version::VersionType totalTime::Integer lastPrinted::DateTimeType created::DateTimeType lastSaved::DateTimeType pages::Integer words::Integer characters::Integer charactersWithSpaces::Integer bytes::Integer lines::Integer paragraphs::Integer ;
SmartTagType ::= smartTagType_ste::SmartTagsCollection namespaceuri::String name::String url::String ;
Data ::= d_cell::Cell d_comment::Comment value::ValueType ;
ErrorValue ::= vt_data::Data ;
BooleanValue ::= value::Boolean ;
NumberValue ::= value::Double ;
Cell ::= c_row::Row (c_smartTags::SmartTagsCollection)+ arrayRange::String formula::String hRef::String mergeAcross::Double mergeDown::Double c_data::Data c_comment::Comment ;
CustomDocumentProperty ::= customDocumentProperty_cdpe::CustomDocumentPropertiesCollection name::String value::ValueType ;
SmartTagsCollection ::= st_workbook::Workbook st_cell::Cell (smartTagTypes::SmartTagType)+ ;
StringValue ::= value::String ;
--------------------metamodels::MSOfficeExcel_SpreadsheetMLPrintingSetup.bgf--------------------
Comment ::= c_cell::Cell com_data::Data author::String showAlways::Boolean ;
Footer ::= f_pageSetup::PageSetup ;
Row ::= r_table::Table (r_cells::Cell)+ autoFitHeight::Boolean height::Double ;
CommentsLayoutType ::= (clt_InPlace::ε) | (clt_PrintNone::ε) | (clt_SheetEnd::ε) ;
Column ::= c_table::Table autoFitWidth::Boolean width::Double ;
DisplayDrawingObjectsType ::= (ddot_displayShapes::ε) | (ddot_placeHolders::ε) | (ddot_hideAll::ε) ;
ExcelWorkbook ::= ew_workbook::Workbook selectedSheets::Integer windowHidden::Boolean hideHorizontalScrollBar::Boolean hideVerticalScrollBar::Boolean hideWorkbookTabs::Boolean windowHeight::Double windowWidth::Double windowTopX::Double windowTopY::Double activeSheet::Integer activeChart::String firstVisibleSheet::Integer hidePivotTableFieldList::Boolean protectStructure::Boolean protectWindows::Boolean displayInkNotes::Boolean embedSaveSmartTags::Boolean futureVer::String tabRatio::Integer windowIconic::Boolean displayDrawingObjects::DisplayDrawingObjectsType createBackup::Boolean calculation::CalculationWorkbookType doNotCalculateBeforeSave::Boolean date1904::Boolean refModeR1C1::Boolean iteration::Boolean maxIterations::Integer maxChange::Double precisionAsDisplayed::Boolean doNotSaveLinkValues::Boolean noAutoRecover::Boolean acceptLabelsInFormulas::Boolean uncalced::Boolean ;
Table ::= t_worksheet::Worksheet (t_cols::Column)+ (t_rows::Row)+ defaultColumnWidth::Double defaultRowHeight::Double expandedColumnCount::Integer expandedRowCount::Integer leftCell::Integer topCell::Integer fullColumns::Boolean fullRows::Boolean ;
Header ::= h_pageSetup::PageSetup ;
VisibleType ::= (vt_SheetVisible::ε) | (vt_SheetHidden::ε) | (vt_SheetVeryHidden::ε) ;
ErrorValue ::= vt_data::Data ;
PageMarginsInfo ::= pm_pageSetup::PageSetup left::Double right::Double top::Double bottom::Double ;
SmartTagsCollection ::= st_workbook::Workbook st_cell::Cell (smartTagTypes::SmartTagType)+ ;
WorksheetOptionsElt ::= wo_worksheet::Worksheet fitToPage::Boolean doNotDisplayColHeaders::Boolean doNotDisplayRowHeaders::Boolean gridlineColor::String name::String excelWorksheetType::ExcelWorksheetTypeType intlMacro::Boolean unsynced::Boolean selected::Boolean codeName::String displayPageBreak::Boolean transitionExpressionEvaluation::Boolean transitionFormulaEntry::Boolean zoom::Integer pageBreakZoom::Integer showPageBreakZoom::Boolean defaultRowHeight::Integer defaultColumnWidth::Integer standardWidth::Integer visible::VisibleType leftColumnVisible::Integer displayRightToLeft::Boolean gridlineColorIndex::Integer displayFormulas::Boolean doNotDisplayGridlines::Boolean doNotDisplayHeadings::Boolean doNotDisplayOutline::Boolean applyAutomaticOutlineStyles::Boolean noSummaryRowsBelowDetail::Boolean noSummaryColumnsRightDetail::Boolean doNotDisplayZeros::Boolean activeRow::Integer activeColumn::Integer filterOn::Boolean rangeSelection::String topRowVisible::Integer topRowBottomPane::Integer leftColumnRightPane::Integer activePane::Integer splitHorizontal::Integer splitVertical::Integer freezePanes::Boolean frozenNoSplit::Boolean tabColorIndex::Integer protectContentst::Boolean protectObjects::Boolean protectScenarios::Boolean enableSelection::EnableSelectionType allowFormatCells::Boolean allowSizeCols::Boolean allowSizeRows::Boolean allowInsertCols::Boolean allowInsertRows::Boolean allowInsertHyperlinks::Boolean allowDeleteCols::Boolean allowDeleteRows::Boolean allowSort::Boolean allowFilter::Boolean allowUsePivotTables::Boolean wo_pageSetup::PageSetup wo_print::Print ;
CalculationWorkbookType ::= (cwt_automaticCalculation::ε) | (cwt_manualCalculation::ε) | (cwt_semiAutomaticCalculation::ε) ;
CustomDocumentPropertiesCollection ::= cdp_workbook::Workbook (customDocumentProperties::CustomDocumentProperty)+ ;
DateTimeTypeValue ::= value::DateTimeType ;
Workbook ::= wb_smartTags::SmartTagsCollection wb_docProperties::DocumentPropertiesCollection wb_customDocProperties::CustomDocumentPropertiesCollection wb_excelWorkbook::ExcelWorkbook (wb_worksheets::Worksheet)+ ;
DateTimeType ::= year::Integer month::Integer day::Integer hour::Integer minute::Integer second::Integer ;
VersionType ::= n::Integer nn::Integer ;
PageSetup ::= ps_worksheetOptions::WorksheetOptionsElt ps_layout::Layout ps_header::Header ps_footer::Footer ps_pageMargins::PageMarginsInfo ;
Worksheet ::= ws_workbook::Workbook ws_table::Table name::String protected::Boolean rightToLeft::Boolean w_worksheetOptions::WorksheetOptionsElt ;
Print ::= p_worksheetOptions::WorksheetOptionsElt fitWidth::Integer fitHeight::Integer leftToRight::Boolean blackAndWhite::Boolean draftQuality::Boolean commentsLayout::CommentsLayoutType scale::Integer printErrors::String validPrinterInfo::Boolean paperSizeIndex::Integer horizontalResolution::Integer verticalResolution::Integer gridlines::Boolean numberOfCopies::Integer rowColHeadings::Boolean ;
DocumentPropertiesCollection ::= dp_workbook::Workbook title::String subject::String keywords::String description::String category::String author::String lastAuthor::String manager::String company::String hyperlinkBase::String revision::Integer presentationFormat::String guid::String appName::String version::VersionType totalTime::Integer lastPrinted::DateTimeType created::DateTimeType lastSaved::DateTimeType pages::Integer words::Integer characters::Integer charactersWithSpaces::Integer bytes::Integer lines::Integer paragraphs::Integer ;
ExcelWorksheetTypeType ::= (ewt_Worksheet::ε) | (ewt_Chart::ε) | (ewt_Macro::ε) | (ewt_Dialog::ε) ;
SmartTagType ::= smartTagType_ste::SmartTagsCollection namespaceuri::String name::String url::String ;
OrientationType ::= (ot_Landscape::ε) | (ot_Portrait::ε) ;
Layout ::= l_pageSetup::PageSetup orientation::OrientationType centerHorizontal::Boolean centerVertical::Boolean startPageNumber::String ;
Data ::= d_cell::Cell d_comment::Comment value::ValueType ;
BooleanValue ::= value::Boolean ;
NumberValue ::= value::Double ;
EnableSelectionType ::= (est_UnlockedCells::ε) | (est_NoSelection::ε) ;
Cell ::= (c_smartTags::SmartTagsCollection)+ c_row::Row arrayRange::String formula::String hRef::String mergeAcross::Double mergeDown::Double c_data::Data c_comment::Comment ;
CustomDocumentProperty ::= customDocumentProperty_cdpe::CustomDocumentPropertiesCollection name::String value::ValueType ;
StringValue ::= value::String ;
--------------------metamodels::MSOfficeExcel_SpreadsheetMLSimplified.bgf--------------------
Table ::= t_worksheet::Worksheet (t_cols::Column)+ (t_rows::Row)+ ;
Worksheet ::= ws_workbook::Workbook ws_table::Table name::String ;
DateTimeTypeValue ::= value::DateTimeType ;
Data ::= d_cell::Cell value::ValueType ;
Row ::= r_table::Table (r_cells::Cell)+ autoFitHeight::Boolean height::Double ;
Workbook ::= (wb_worksheets::Worksheet)+ ;
ErrorValue ::= vt_data::Data ;
BooleanValue ::= value::Boolean ;
NumberValue ::= value::Double ;
Column ::= c_table::Table autoFitWidth::Boolean width::Double ;
DateTimeType ::= year::Integer month::Integer day::Integer hour::Integer minute::Integer second::Integer ;
Cell ::= c_row::Row arrayRange::String formula::String hRef::String mergeAcross::Double mergeDown::Double c_data::Data ;
StringValue ::= value::String ;
--------------------metamodels::MSOfficeExcel_SpreadsheetMLStyles.bgf--------------------
Comment ::= c_cell::Cell com_data::Data author::String showAlways::Boolean ;
Footer ::= f_pageSetup::PageSetup ;
Row ::= r_table::Table (r_cells::Cell)+ autoFitHeight::Boolean height::Double ;
CommentsLayoutType ::= (clt_InPlace::ε) | (clt_PrintNone::ε) | (clt_SheetEnd::ε) ;
Column ::= c_table::Table autoFitWidth::Boolean width::Double ;
DisplayDrawingObjectsType ::= (ddot_displayShapes::ε) | (ddot_placeHolders::ε) | (ddot_hideAll::ε) ;
ExcelNumberFormatType ::= (enft_General::ε) | (enft_General_Number::ε) | (enft_General_Date::ε) | (enft_Long_Date::ε) | (enft_Medium_Date::ε) | (enft_Short_Date::ε) | (enft_Long_Time::ε) | (enft_Medium_Time::ε) | (enft_Short_Time::ε) | (enft_Currency::ε) | (enft_Euro_Currency::ε) | (enft_Fixed::ε) | (enft_Standard::ε) | (enft_Percent::ε) | (enft_Scientific::ε) | (enft_Yes_No::ε) | (enft_True_False::ε) | (enft_On_Off::ε) ;
ExcelWorkbook ::= ew_workbook::Workbook selectedSheets::Integer windowHidden::Boolean hideHorizontalScrollBar::Boolean hideVerticalScrollBar::Boolean hideWorkbookTabs::Boolean windowHeight::Double windowWidth::Double windowTopX::Double windowTopY::Double activeSheet::Integer activeChart::String firstVisibleSheet::Integer hidePivotTableFieldList::Boolean protectStructure::Boolean protectWindows::Boolean displayInkNotes::Boolean embedSaveSmartTags::Boolean futureVer::String tabRatio::Integer windowIconic::Boolean displayDrawingObjects::DisplayDrawingObjectsType createBackup::Boolean calculation::CalculationWorkbookType doNotCalculateBeforeSave::Boolean date1904::Boolean refModeR1C1::Boolean iteration::Boolean maxIterations::Integer maxChange::Double precisionAsDisplayed::Boolean doNotSaveLinkValues::Boolean noAutoRecover::Boolean acceptLabelsInFormulas::Boolean uncalced::Boolean ;
VerticalAlignementType ::= (vat_Top::ε) | (vat_Bottom::ε) | (vat_Justify::ε) | (vat_Distributed::ε) | (vat_Center::ε) | (vat_Automatic::ε) | (vat_JustifyDistributed::ε) ;
Table ::= t_worksheet::Worksheet (t_cols::Column)+ (t_rows::Row)+ defaultColumnWidth::Double defaultRowHeight::Double expandedColumnCount::Integer expandedRowCount::Integer leftCell::Integer topCell::Integer fullColumns::Boolean fullRows::Boolean ;
Header ::= h_pageSetup::PageSetup ;
VisibleType ::= (vt_SheetVisible::ε) | (vt_SheetHidden::ε) | (vt_SheetVeryHidden::ε) ;
StyleType ::= st_styles::StylesCollection st_styledElement::StyledElement id::String name::String parent::StyleType st_parent::StyleType alignment::AlignmentType borders::BordersType font::FontType interior::InteriorType numberFormat::NumberFormatType protection::ProtectionType ;
InteriorType ::= it_styleType::StyleType color::String pattern::PatternType patternColor::String ;
VerticalAlignType ::= (vat_None::ε) | (vat_Subscript::ε) | (vat_Superscript::ε) ;
ErrorValue ::= vt_data::Data ;
BorderType ::= bt_bordersType::BordersType position::PositionType color::String lineStyle::LineStyleType weight::Double ;
NamedRange ::= nr_namesType::NamesType name::String refersTo::String hidden::Boolean ;
PageMarginsInfo ::= pm_pageSetup::PageSetup left::Double right::Double top::Double bottom::Double ;
PositionType ::= (pt_Left::ε) | (pt_Top::ε) | (pt_Right::ε) | (pt_Bottom::ε) | (pt_DiagonalLeft::ε) | (pt_DiagonalRight::ε) ;
SmartTagsCollection ::= st_workbook::Workbook st_cell::Cell (smartTagTypes::SmartTagType)+ ;
AlignmentType ::= at_styleType::StyleType horizontal::HorizontalAlignementType readingOrder::ReadingOrderType indent::Double rotate::Double shrinkToFit::Boolean vertical::VerticalAlignementType verticalText::Boolean wrapText::Boolean ;
WorksheetOptionsElt ::= wo_worksheet::Worksheet fitToPage::Boolean doNotDisplayColHeaders::Boolean doNotDisplayRowHeaders::Boolean gridlineColor::String name::String excelWorksheetType::ExcelWorksheetTypeType intlMacro::Boolean unsynced::Boolean selected::Boolean codeName::String displayPageBreak::Boolean transitionExpressionEvaluation::Boolean transitionFormulaEntry::Boolean zoom::Integer pageBreakZoom::Integer showPageBreakZoom::Boolean defaultRowHeight::Integer defaultColumnWidth::Integer standardWidth::Integer visible::VisibleType leftColumnVisible::Integer displayRightToLeft::Boolean gridlineColorIndex::Integer displayFormulas::Boolean doNotDisplayGridlines::Boolean doNotDisplayHeadings::Boolean doNotDisplayOutline::Boolean applyAutomaticOutlineStyles::Boolean noSummaryRowsBelowDetail::Boolean noSummaryColumnsRightDetail::Boolean doNotDisplayZeros::Boolean activeRow::Integer activeColumn::Integer filterOn::Boolean rangeSelection::String topRowVisible::Integer topRowBottomPane::Integer leftColumnRightPane::Integer activePane::Integer splitHorizontal::Integer splitVertical::Integer freezePanes::Boolean frozenNoSplit::Boolean tabColorIndex::Integer protectContentst::Boolean protectObjects::Boolean protectScenarios::Boolean enableSelection::EnableSelectionType allowFormatCells::Boolean allowSizeCols::Boolean allowSizeRows::Boolean allowInsertCols::Boolean allowInsertRows::Boolean allowInsertHyperlinks::Boolean allowDeleteCols::Boolean allowDeleteRows::Boolean allowSort::Boolean allowFilter::Boolean allowUsePivotTables::Boolean wo_pageSetup::PageSetup wo_print::Print ;
CalculationWorkbookType ::= (cwt_automaticCalculation::ε) | (cwt_manualCalculation::ε) | (cwt_semiAutomaticCalculation::ε) ;
CustomDocumentPropertiesCollection ::= cdp_workbook::Workbook (customDocumentProperties::CustomDocumentProperty)+ ;
ReadingOrderType ::= (rot_RightToLeft::ε) | (rot_LeftToRight::ε) | (rot_Context::ε) ;
HorizontalAlignementType ::= (hat_CenterAcrossSelection::ε) | (hat_Fill::ε) | (hat_Left::ε) | (hat_Right::ε) | (hat_Justify::ε) | (hat_Distributed::ε) | (hat_Center::ε) | (hat_Automatic::ε) | (hat_JustifyDistributed::ε) ;
DateTimeTypeValue ::= value::DateTimeType ;
NumberFormatType ::= nft_styleType::StyleType format::ExcelNumberFormatType ;
Workbook ::= wb_smartTags::SmartTagsCollection wb_docProperties::DocumentPropertiesCollection wb_customDocProperties::CustomDocumentPropertiesCollection wb_excelWorkbook::ExcelWorkbook wb_styles::StylesCollection wb_names::NamesType (wb_worksheets::Worksheet)+ ;
LineStyleType ::= (lst_None::ε) | (lst_Continuous::ε) | (lst_Dash::ε) | (lst_Dot::ε) | (lst_DashDot::ε) | (lst_DashDotDot::ε) | (lst_SlantDashDot::ε) | (lst_Double::ε) ;
DateTimeType ::= year::Integer month::Integer day::Integer hour::Integer minute::Integer second::Integer ;
ProtectionType ::= pt_styleType::StyleType protected::Boolean ;
VersionType ::= n::Integer nn::Integer ;
PageSetup ::= ps_worksheetOptions::WorksheetOptionsElt ps_layout::Layout ps_header::Header ps_footer::Footer ps_pageMargins::PageMarginsInfo ;
Worksheet ::= ws_workbook::Workbook ws_table::Table name::String protected::Boolean rightToLeft::Boolean w_worksheetOptions::WorksheetOptionsElt ;
Print ::= p_worksheetOptions::WorksheetOptionsElt fitWidth::Integer fitHeight::Integer leftToRight::Boolean blackAndWhite::Boolean draftQuality::Boolean commentsLayout::CommentsLayoutType scale::Integer printErrors::String validPrinterInfo::Boolean paperSizeIndex::Integer horizontalResolution::Integer verticalResolution::Integer gridlines::Boolean numberOfCopies::Integer rowColHeadings::Boolean ;
DocumentPropertiesCollection ::= dp_workbook::Workbook title::String subject::String keywords::String description::String category::String author::String lastAuthor::String manager::String company::String hyperlinkBase::String revision::Integer presentationFormat::String guid::String appName::String version::VersionType totalTime::Integer lastPrinted::DateTimeType created::DateTimeType lastSaved::DateTimeType pages::Integer words::Integer characters::Integer charactersWithSpaces::Integer bytes::Integer lines::Integer paragraphs::Integer ;
ExcelWorksheetTypeType ::= (ewt_Worksheet::ε) | (ewt_Chart::ε) | (ewt_Macro::ε) | (ewt_Dialog::ε) ;
SmartTagType ::= smartTagType_ste::SmartTagsCollection namespaceuri::String name::String url::String ;
PatternType ::= (pt_None::ε) | (pt_Solid::ε) | (pt_Gray75::ε) | (pt_Gray50::ε) | (pt_Gray25::ε) | (pt_Gray125::ε) | (pt_Gray0625::ε) | (pt_HorzStripe::ε) | (pt_VertStripe::ε) | (pt_ReverseDiagStripe::ε) | (pt_DiagStripe::ε) | (pt_DiagCross::ε) | (pt_ThickDiagCross::ε) | (pt_ThinHorzStripe::ε) | (pt_ThinVertStripe::ε) | (pt_ThinReverseDiagStripe::ε) | (pt_ThinDiagStripe::ε) | (pt_ThinHorzCross::ε) | (pt_ThinDiagCross::ε) ;
OrientationType ::= (ot_Landscape::ε) | (ot_Portrait::ε) ;
Layout ::= l_pageSetup::PageSetup orientation::OrientationType centerHorizontal::Boolean centerVertical::Boolean startPageNumber::String ;
Data ::= d_cell::Cell d_comment::Comment value::ValueType ;
FontType ::= ft_styleType::StyleType bold::Boolean color::String fontName::String italic::Boolean outline::Boolean shadow::Boolean size::Double strikeThrough::Boolean underline::UnderlineType verticalAlign::VerticalAlignType ;
BooleanValue ::= value::Boolean ;
NumberValue ::= value::Double ;
UnderlineType ::= (ut_None::ε) | (ut_Single::ε) | (ut_Double::ε) | (ut_SingleAccounting::ε) | (ut_DoubleAccounting::ε) ;
EnableSelectionType ::= (est_UnlockedCells::ε) | (est_NoSelection::ε) ;
NamesType ::= nt_workbook::Workbook (namedRanges::NamedRange)+ ;
Cell ::= (c_smartTags::SmartTagsCollection)+ c_row::Row arrayRange::String formula::String hRef::String mergeAcross::Double mergeDown::Double c_data::Data c_comment::Comment ;
BordersType ::= bt_styleType::StyleType border::BorderType ;
CustomDocumentProperty ::= customDocumentProperty_cdpe::CustomDocumentPropertiesCollection name::String value::ValueType ;
StylesCollection ::= s_workbook::Workbook (style::StyleType)+ ;
StringValue ::= value::String ;
--------------------metamodels::MSOfficeExcel_SpreadsheetMLWorkbookProp.bgf--------------------
Comment ::= c_cell::Cell com_data::Data author::String showAlways::Boolean ;
CalculationWorkbookType ::= (cwt_automaticCalculation::ε) | (cwt_manualCalculation::ε) | (cwt_semiAutomaticCalculation::ε) ;
CustomDocumentPropertiesCollection ::= cdp_workbook::Workbook (customDocumentProperties::CustomDocumentProperty)+ ;
DateTimeTypeValue ::= value::DateTimeType ;
Row ::= r_table::Table (r_cells::Cell)+ autoFitHeight::Boolean height::Double ;
Workbook ::= wb_smartTags::SmartTagsCollection wb_docProperties::DocumentPropertiesCollection wb_customDocProperties::CustomDocumentPropertiesCollection wb_excelWorkbook::ExcelWorkbook (wb_worksheets::Worksheet)+ ;
Column ::= c_table::Table autoFitWidth::Boolean width::Double ;
DateTimeType ::= year::Integer month::Integer day::Integer hour::Integer minute::Integer second::Integer ;
DisplayDrawingObjectsType ::= (ddot_displayShapes::ε) | (ddot_placeHolders::ε) | (ddot_hideAll::ε) ;
VersionType ::= n::Integer nn::Integer ;
ExcelWorkbook ::= ew_workbook::Workbook selectedSheets::Integer windowHidden::Boolean hideHorizontalScrollBar::Boolean hideVerticalScrollBar::Boolean hideWorkbookTabs::Boolean windowHeight::Double windowWidth::Double windowTopX::Double windowTopY::Double activeSheet::Integer activeChart::String firstVisibleSheet::Integer hidePivotTableFieldList::Boolean protectStructure::Boolean protectWindows::Boolean displayInkNotes::Boolean embedSaveSmartTags::Boolean futureVer::String tabRatio::Integer windowIconic::Boolean displayDrawingObjects::DisplayDrawingObjectsType createBackup::Boolean calculation::CalculationWorkbookType doNotCalculateBeforeSave::Boolean date1904::Boolean refModeR1C1::Boolean iteration::Boolean maxIterations::Integer maxChange::Double precisionAsDisplayed::Boolean doNotSaveLinkValues::Boolean noAutoRecover::Boolean acceptLabelsInFormulas::Boolean uncalced::Boolean ;
Table ::= t_worksheet::Worksheet (t_cols::Column)+ (t_rows::Row)+ defaultColumnWidth::Double defaultRowHeight::Double expandedColumnCount::Integer expandedRowCount::Integer leftCell::Integer topCell::Integer fullColumns::Boolean fullRows::Boolean ;
Worksheet ::= ws_workbook::Workbook ws_table::Table name::String ;
DocumentPropertiesCollection ::= dp_workbook::Workbook title::String subject::String keywords::String description::String category::String author::String lastAuthor::String manager::String company::String hyperlinkBase::String revision::Integer presentationFormat::String guid::String appName::String version::VersionType totalTime::Integer lastPrinted::DateTimeType created::DateTimeType lastSaved::DateTimeType pages::Integer words::Integer characters::Integer charactersWithSpaces::Integer bytes::Integer lines::Integer paragraphs::Integer ;
SmartTagType ::= smartTagType_ste::SmartTagsCollection namespaceuri::String name::String url::String ;
Data ::= d_cell::Cell d_comment::Comment value::ValueType ;
ErrorValue ::= vt_data::Data ;
BooleanValue ::= value::Boolean ;
NumberValue ::= value::Double ;
Cell ::= (c_smartTags::SmartTagsCollection)+ c_row::Row arrayRange::String formula::String hRef::String mergeAcross::Double mergeDown::Double c_data::Data c_comment::Comment ;
CustomDocumentProperty ::= customDocumentProperty_cdpe::CustomDocumentPropertiesCollection name::String value::ValueType ;
SmartTagsCollection ::= st_workbook::Workbook st_cell::Cell (smartTagTypes::SmartTagType)+ ;
StringValue ::= value::String ;
--------------------metamodels::MSOfficeExcel_SpreadsheetMLWorksheetOpt.bgf--------------------
Comment ::= c_cell::Cell com_data::Data author::String showAlways::Boolean ;
WorksheetOptionsElt ::= wo_worksheet::Worksheet fitToPage::Boolean doNotDisplayColHeaders::Boolean doNotDisplayRowHeaders::Boolean gridlineColor::String name::String excelWorksheetType::ExcelWorksheetTypeType intlMacro::Boolean unsynced::Boolean selected::Boolean codeName::String displayPageBreak::Boolean transitionExpressionEvaluation::Boolean transitionFormulaEntry::Boolean zoom::Integer pageBreakZoom::Integer showPageBreakZoom::Boolean defaultRowHeight::Integer defaultColumnWidth::Integer standardWidth::Integer visible::VisibleType leftColumnVisible::Integer displayRightToLeft::Boolean gridlineColorIndex::Integer displayFormulas::Boolean doNotDisplayGridlines::Boolean doNotDisplayHeadings::Boolean doNotDisplayOutline::Boolean applyAutomaticOutlineStyles::Boolean noSummaryRowsBelowDetail::Boolean noSummaryColumnsRightDetail::Boolean doNotDisplayZeros::Boolean activeRow::Integer activeColumn::Integer filterOn::Boolean rangeSelection::String topRowVisible::Integer topRowBottomPane::Integer leftColumnRightPane::Integer activePane::Integer splitHorizontal::Integer splitVertical::Integer freezePanes::Boolean frozenNoSplit::Boolean tabColorIndex::Integer protectContentst::Boolean protectObjects::Boolean protectScenarios::Boolean enableSelection::EnableSelectionType allowFormatCells::Boolean allowSizeCols::Boolean allowSizeRows::Boolean allowInsertCols::Boolean allowInsertRows::Boolean allowInsertHyperlinks::Boolean allowDeleteCols::Boolean allowDeleteRows::Boolean allowSort::Boolean allowFilter::Boolean allowUsePivotTables::Boolean ;
CalculationWorkbookType ::= (cwt_automaticCalculation::ε) | (cwt_manualCalculation::ε) | (cwt_semiAutomaticCalculation::ε) ;
CustomDocumentPropertiesCollection ::= cdp_workbook::Workbook (customDocumentProperties::CustomDocumentProperty)+ ;
DateTimeTypeValue ::= value::DateTimeType ;
Row ::= r_table::Table (r_cells::Cell)+ autoFitHeight::Boolean height::Double ;
Workbook ::= wb_smartTags::SmartTagsCollection wb_docProperties::DocumentPropertiesCollection wb_customDocProperties::CustomDocumentPropertiesCollection wb_excelWorkbook::ExcelWorkbook (wb_worksheets::Worksheet)+ ;
Column ::= c_table::Table autoFitWidth::Boolean width::Double ;
DateTimeType ::= year::Integer month::Integer day::Integer hour::Integer minute::Integer second::Integer ;
DisplayDrawingObjectsType ::= (ddot_displayShapes::ε) | (ddot_placeHolders::ε) | (ddot_hideAll::ε) ;
VersionType ::= n::Integer nn::Integer ;
ExcelWorkbook ::= ew_workbook::Workbook selectedSheets::Integer windowHidden::Boolean hideHorizontalScrollBar::Boolean hideVerticalScrollBar::Boolean hideWorkbookTabs::Boolean windowHeight::Double windowWidth::Double windowTopX::Double windowTopY::Double activeSheet::Integer activeChart::String firstVisibleSheet::Integer hidePivotTableFieldList::Boolean protectStructure::Boolean protectWindows::Boolean displayInkNotes::Boolean embedSaveSmartTags::Boolean futureVer::String tabRatio::Integer windowIconic::Boolean displayDrawingObjects::DisplayDrawingObjectsType createBackup::Boolean calculation::CalculationWorkbookType doNotCalculateBeforeSave::Boolean date1904::Boolean refModeR1C1::Boolean iteration::Boolean maxIterations::Integer maxChange::Double precisionAsDisplayed::Boolean doNotSaveLinkValues::Boolean noAutoRecover::Boolean acceptLabelsInFormulas::Boolean uncalced::Boolean ;
Table ::= t_worksheet::Worksheet (t_cols::Column)+ (t_rows::Row)+ defaultColumnWidth::Double defaultRowHeight::Double expandedColumnCount::Integer expandedRowCount::Integer leftCell::Integer topCell::Integer fullColumns::Boolean fullRows::Boolean ;
Worksheet ::= ws_workbook::Workbook ws_table::Table name::String protected::Boolean rightToLeft::Boolean w_worksheetOptions::WorksheetOptionsElt ;
VisibleType ::= (vt_SheetVisible::ε) | (vt_SheetHidden::ε) | (vt_SheetVeryHidden::ε) ;
DocumentPropertiesCollection ::= dp_workbook::Workbook title::String subject::String keywords::String description::String category::String author::String lastAuthor::String manager::String company::String hyperlinkBase::String revision::Integer presentationFormat::String guid::String appName::String version::VersionType totalTime::Integer lastPrinted::DateTimeType created::DateTimeType lastSaved::DateTimeType pages::Integer words::Integer characters::Integer charactersWithSpaces::Integer bytes::Integer lines::Integer paragraphs::Integer ;
ExcelWorksheetTypeType ::= (ewt_Worksheet::ε) | (ewt_Chart::ε) | (ewt_Macro::ε) | (ewt_Dialog::ε) ;
SmartTagType ::= smartTagType_ste::SmartTagsCollection namespaceuri::String name::String url::String ;
Data ::= d_cell::Cell d_comment::Comment value::ValueType ;
ErrorValue ::= vt_data::Data ;
BooleanValue ::= value::Boolean ;
NumberValue ::= value::Double ;
EnableSelectionType ::= (est_UnlockedCells::ε) | (est_NoSelection::ε) ;
Cell ::= (c_smartTags::SmartTagsCollection)+ c_row::Row arrayRange::String formula::String hRef::String mergeAcross::Double mergeDown::Double c_data::Data c_comment::Comment ;
CustomDocumentProperty ::= customDocumentProperty_cdpe::CustomDocumentPropertiesCollection name::String value::ValueType ;
SmartTagsCollection ::= st_workbook::Workbook st_cell::Cell (smartTagTypes::SmartTagType)+ ;
StringValue ::= value::String ;
--------------------metamodels::MSOfficeWord_WordprocessingMLBasicDef.bgf--------------------
NoteValue ::= (ftn_normal::ε) | (ftn_separator::ε) | (ftn_continuation_separator::ε) | (ftn_continuation_notice::ε) ;
BreakType ::= (bt_page::ε) | (bt_column::ε) | (bt_text_wrapping::ε) ;
ListsElt ::= le_wordDocument::WordDocument ;
Symbol ::= rce_rElt::RunElt font::StringType char::StringType ;
DelText ::= rce_rElt::RunElt val::String ;
Tab ::= rce_rElt::RunElt ;
FldChar ::= rce_rElt::RunElt fldData::StringType fldCharType::FldCharTypeProperty fldLock::OnOffType ;
FootnoteRef ::= rce_rElt::RunElt ;
NoBreakHyphen ::= rce_rElt::RunElt ;
PgNum ::= rce_rElt::RunElt ;
Endnote ::= rce_rElt::RunElt (n_blockLevelElts::BlockLevelElt)+ type::NoteValue suppressRef::OnOffType ;
HLinkElt ::= pce_pElt::ParaElt ;
FontsListElt ::= fle_wordDocument::WordDocument ;
ParaPrElt ::= ppe_pElt::ParaElt ;
CfChunk ::= ble_bodyElt::BodyElt ble_note::NoteElt ;
SectPrElt ::= spe_bodyElt::BodyElt ;
EndnoteRef ::= rce_rElt::RunElt ;
StringProperty ::= val::String ;
WordDocument ::= wd_smartTags::SmartTagsCollection wd_docProperties::DocumentPropertiesCollection wd_customDocProperties::CustomDocumentPropertiesCollection ignoreSubtree::StringProperty ignoreElements::StringProperty fonts::FontsListElt lists::ListsElt styles::StylesElt docPr::DocPrElt body::BodyElt ;
SmartTagsCollection ::= st_wordDocument::WordDocument (smartTagTypes::SmartTagType)+ ;
RunPrElt ::= rpe_rElt::RunElt ;
Picture ::= rce_rElt::RunElt ;
CustomDocumentPropertiesCollection ::= cdp_wordDocument::WordDocument (customDocumentProperties::CustomDocumentProperty)+ ;
SoftHyphen ::= rce_rElt::RunElt ;
DateTimeTypeValue ::= value::DateTimeType ;
FldCharElt ::= FldChar ;
 FldCharElt ::= fldData::StringType fldCharType::FldCharTypeProperty fldLock::OnOffType ;
InstrText ::= rce_rElt::RunElt val::String ;
SubDocElt ::= pce_pElt::ParaElt ;
FloatValue ::= value::Double ;
DateTimeType ::= year::Integer month::Integer day::Integer hour::Integer minute::Integer second::Integer ;
DocPrElt ::= dpe_wordDocument::WordDocument ;
VersionType ::= n::Integer nn::Integer ;
Cr ::= rce_rElt::RunElt ;
ContinuationSeparator ::= rce_rElt::RunElt ;
DelInstrText ::= rce_rElt::RunElt val::String ;
BreakElt ::= type::BreakType ;
Text ::= rce_rElt::RunElt val::String ;
ParaElt ::= pPr::ParaPrElt (pContentElts::ParaContentElt)+ ;
DocumentPropertiesCollection ::= dp_wordDocument::WordDocument title::String subject::String keywords::String description::String category::String author::String lastAuthor::String manager::String company::String hyperlinkBase::String revision::Integer presentationFormat::String guid::String appName::String version::VersionType totalTime::Integer lastPrinted::DateTimeType created::DateTimeType lastSaved::DateTimeType pages::Integer words::Integer characters::Integer charactersWithSpaces::Integer bytes::Integer lines::Integer paragraphs::Integer ;
StylesElt ::= se_wordDocument::WordDocument ;
BodyElt ::= be_wordDocument::WordDocument (blockLevelElts::BlockLevelElt)+ sectPr::SectPrElt ;
StringType ::= StringProperty ;
 StringType ::= Text ;
 StringType ::= DelText ;
 StringType ::= InstrText ;
 StringType ::= DelInstrText ;
 StringType ::= val::String ;
SmartTagType ::= smartTagType_ste::SmartTagsCollection namespaceuri::String name::String url::String ;
OnOffType ::= (oot_on::ε) | (oot_off::ε) ;
BooleanValue ::= value::Boolean ;
SymElt ::= Symbol ;
 SymElt ::= font::StringType char::StringType ;
SimpleFieldElt ::= pce_pElt::ParaElt ;
Separator ::= rce_rElt::RunElt ;
AnnotationRef ::= rce_rElt::RunElt ;
FldCharTypeProperty ::= (fctp_begin::ε) | (fctp_separate::ε) | (fctp_end::ε) ;
RunElt ::= rPr::RunPrElt (rContentElts::RunContentElt)+ ;
CustomDocumentProperty ::= customDocumentProperty_cdpe::CustomDocumentPropertiesCollection name::String value::ValueType ;
Footnote ::= rce_rElt::RunElt (n_blockLevelElts::BlockLevelElt)+ type::NoteValue suppressRef::OnOffType ;
StringValue ::= value::String ;
--------------------metamodels::MSOfficeWord_WordprocessingMLSimplified.bgf--------------------
NoteValue ::= (ftn_normal::ε) | (ftn_separator::ε) | (ftn_continuation_separator::ε) | (ftn_continuation_notice::ε) ;
Picture ::= rce_rElt::RunElt ;
SoftHyphen ::= rce_rElt::RunElt ;
FldCharElt ::= FldChar ;
 FldCharElt ::= fldData::StringType fldCharType::FldCharTypeProperty fldLock::OnOffType ;
InstrText ::= rce_rElt::RunElt val::String ;
BreakType ::= (bt_page::ε) | (bt_column::ε) | (bt_text_wrapping::ε) ;
Symbol ::= rce_rElt::RunElt font::StringType char::StringType ;
DelText ::= rce_rElt::RunElt val::String ;
Tab ::= rce_rElt::RunElt ;
FldChar ::= rce_rElt::RunElt fldData::StringType fldCharType::FldCharTypeProperty fldLock::OnOffType ;
FootnoteRef ::= rce_rElt::RunElt ;
NoBreakHyphen ::= rce_rElt::RunElt ;
Cr ::= rce_rElt::RunElt ;
PgNum ::= rce_rElt::RunElt ;
ContinuationSeparator ::= rce_rElt::RunElt ;
DelInstrText ::= rce_rElt::RunElt val::String ;
BreakElt ::= type::BreakType ;
Endnote ::= rce_rElt::RunElt (n_blockLevelElts::BlockLevelElt)+ type::NoteValue suppressRef::OnOffType ;
Text ::= rce_rElt::RunElt val::String ;
ParaElt ::= (pContentElts::ParaContentElt)+ ;
BodyElt ::= be_wordDocument::WordDocument (blockLevelElts::BlockLevelElt)+ ;
StringType ::= StringProperty ;
 StringType ::= Text ;
 StringType ::= DelText ;
 StringType ::= InstrText ;
 StringType ::= DelInstrText ;
 StringType ::= val::String ;
OnOffType ::= (oot_on::ε) | (oot_off::ε) ;
SymElt ::= Symbol ;
 SymElt ::= font::StringType char::StringType ;
EndnoteRef ::= rce_rElt::RunElt ;
StringProperty ::= val::String ;
Separator ::= rce_rElt::RunElt ;
WordDocument ::= ignoreSubtree::StringProperty ignoreElements::StringProperty body::BodyElt ;
AnnotationRef ::= rce_rElt::RunElt ;
FldCharTypeProperty ::= (fctp_begin::ε) | (fctp_separate::ε) | (fctp_end::ε) ;
RunElt ::= (rContentElts::RunContentElt)+ ;
Footnote ::= rce_rElt::RunElt (n_blockLevelElts::BlockLevelElt)+ type::NoteValue suppressRef::OnOffType ;
--------------------metamodels::MSOfficeWord_WordprocessingMLStyles.bgf--------------------
NoteValue ::= (ftn_normal::ε) | (ftn_separator::ε) | (ftn_continuation_separator::ε) | (ftn_continuation_notice::ε) ;
TableCellPrElt ::= tcpe_tableCellElt::TableCellElt tcpe_styleElt::StyleElt ;
TableGridElt ::= tge_tblElt::TableElt ;
ListsElt ::= le_wordDocument::WordDocument ;
Tab ::= rce_rElt::RunElt ;
FootnoteRef ::= rce_rElt::RunElt ;
NoBreakHyphen ::= rce_rElt::RunElt ;
PgNum ::= rce_rElt::RunElt ;
UnderlineValues ::= (uv_single::ε) | (uv_words::ε) | (uv_double::ε) | (uv_thick::ε) | (uv_dotted::ε) | (uv_dotted_heavy::ε) | (uv_dash::ε) | (uv_dashed_heavy::ε) | (uv_dash_long::ε) | (uv_dash_long_heavy::ε) | (uv_dot_dash::ε) | (uv_dash_dot_heavy::ε) | (uv_dot_dot_dash::ε) | (uv_dash_dot_dot_heavy::ε) | (uv_wave::ε) | (uv_wavy_heavy::ε) | (uv_wavy_double::ε) | (uv_none::ε) ;
HLinkElt ::= pce_pElt::ParaElt ;
WordDocument ::= wd_smartTags::SmartTagsCollection wd_docProperties::DocumentPropertiesCollection wd_customDocProperties::CustomDocumentPropertiesCollection ignoreSubtree::StringProperty ignoreElements::StringProperty fonts::FontsListElt lists::ListsElt styles::StylesElt docPr::DocPrElt body::BodyElt ;
TableRowPrElt ::= tpe_rowElt::RowElt trpe_styleElt::StyleElt ;
Picture ::= rce_rElt::RunElt ;
TableCellElt ::= tce_rowContentElt::RowContentElt tcPr::TableCellPrElt (tce_content::BlockLevelElt)+ ;
StyleElt ::= se_stylesElt::StylesElt type::StyleKindValue styleId::StringType default::OnOffType name::StringProperty aliases::StringProperty sti::Double basedOn::StringProperty next::StringProperty link::StringProperty autoRedefine::OnOffType hidden::OnOffType semiHidden::OnOffType locked::OnOffType personal::OnOffType personalCompose::OnOffType personalReply::OnOffType rsid::StringType se_pPr::ParaPrElt se_rPr::RunPrElt se_tblPr::TablePrElt se_trPr::TableRowPrElt se_tcPr::TableCellPrElt ;
DateTimeTypeValue ::= value::DateTimeType ;
FldCharElt ::= FldChar ;
 FldCharElt ::= fldData::StringType fldCharType::FldCharTypeProperty fldLock::OnOffType ;
VerticalAlignRunType ::= (vart_baseline::ε) | (vart_superscript::ε) | (vart_subscript::ε) ;
ContinuationSeparator ::= rce_rElt::RunElt ;
RowContentElt ::= rce_rowElt::RowElt (tc::TableCellElt)+ rce_runLevelElts::RunLevelElt ;
BreakElt ::= type::BreakType ;
Text ::= rce_rElt::RunElt val::String ;
StylesElt ::= se_wordDocument::WordDocument versionOfBuiltInStylenames::Double (styles::StyleElt)+ ;
OnOffType ::= (oot_on::ε) | (oot_off::ε) ;
BooleanValue ::= value::Boolean ;
SimpleFieldElt ::= pce_pElt::ParaElt ;
Separator ::= rce_rElt::RunElt ;
AnnotationRef ::= rce_rElt::RunElt ;
TableContentElt ::= tce_tblElt::TableElt (tr::RowElt)+ tce_runLevelElts::RunLevelElt ;
RunElt ::= rPr::RunPrElt (rContentElts::RunContentElt)+ ;
CustomDocumentProperty ::= customDocumentProperty_cdpe::CustomDocumentPropertiesCollection name::String value::ValueType ;
StringValue ::= value::String ;
JustificationValue ::= (jv_left::ε) | (jv_center::ε) | (jv_right::ε) | (jv_both::ε) ;
LangElt ::= le_runPrElt::RunPrElt val::String bidi::String ;
FontElt ::= fe_fontsListElt::FontsListElt name::StringType altName::StringProperty ;
TablePrElt ::= tpe_tblElt::TableElt tpe_styleElt::StyleElt ;
BreakType ::= (bt_page::ε) | (bt_column::ε) | (bt_text_wrapping::ε) ;
Symbol ::= rce_rElt::RunElt font::StringType char::StringType ;
DelText ::= rce_rElt::RunElt val::String ;
FldChar ::= rce_rElt::RunElt fldData::StringType fldCharType::FldCharTypeProperty fldLock::OnOffType ;
HighlightColorValues ::= (hcv_black::ε) | (hcv_blue::ε) | (hcv_cyan::ε) | (hcv_green::ε) | (hcv_magenta::ε) | (hcv_red::ε) | (hcv_yellow::ε) | (hcv_white::ε) | (hcv_dark_blue::ε) | (hcv_dark_cyan::ε) | (hcv_dark_green::ε) | (hcv_dark_magenta::ε) | (hcv_dark_red::ε) | (hcv_dark_yellow::ε) | (hcv_dark_gray::ε) | (hcv_light_gray::ε) | (hcv_none::ε) ;
Endnote ::= rce_rElt::RunElt (n_blockLevelElts::BlockLevelElt)+ type::NoteValue suppressRef::OnOffType ;
StyleKindValue ::= (skv_paragraph::ε) | (skv_character::ε) | (skv_table::ε) | (skv_list::ε) ;
FontsListElt ::= fle_wordDocument::WordDocument defaultFonts::FontsElt (fonts::FontElt)+ ;
ParaPrElt ::= ppe_pElt::ParaElt ppe_styleElt::StyleElt pStyle::StringProperty keepNext::OnOffType keepLines::OnOffType pageBreakBefore::OnOffType supressLineNumbers::OnOffType suppressAutoHyphens::OnOffType contextualSpacing::OnOffType bidi::OnOffType justification::JustificationValue ;
CfChunk ::= ble_bodyElt::BodyElt ble_note::NoteElt ble_tableCellElt::TableCellElt ;
FontsElt ::= fse_fontsListElt::FontsListElt fse_runPrElt::RunPrElt hint::HintType ascii::StringType h_ansi::StringType fareast::StringType cs::StringType ;
SectPrElt ::= spe_bodyElt::BodyElt ;
EndnoteRef ::= rce_rElt::RunElt ;
StringProperty ::= val::String ;
UnderlineProperty ::= val::UnderlineValues color::String ;
SmartTagsCollection ::= st_wordDocument::WordDocument (smartTagTypes::SmartTagType)+ ;
RunPrElt ::= rpe_rElt::RunElt rpe_styleElt::StyleElt rStyle::StringProperty rFonts::FontsElt bold::OnOffType bold_cs::OnOffType italic::OnOffType italic_cs::OnOffType capitals::OnOffType smallCapitals::OnOffType strike::OnOffType doubleStrike::OnOffType outline::OnOffType shadow::OnOffType emboss::OnOffType imprint::OnOffType noProof::OnOffType vanish::OnOffType specVanish::OnOffType rtl::OnOffType cs::OnOffType underline::UnderlineProperty color::String highlight::HighlightColorValues verticalAlign::VerticalAlignRunType language::LangElt ;
TableElt ::= tblPr::TablePrElt tblGrid::TableGridElt (tblContent::TableContentElt)+ ;
CustomDocumentPropertiesCollection ::= cdp_wordDocument::WordDocument (customDocumentProperties::CustomDocumentProperty)+ ;
SoftHyphen ::= rce_rElt::RunElt ;
InstrText ::= rce_rElt::RunElt val::String ;
SubDocElt ::= pce_pElt::ParaElt ;
FloatValue ::= value::Double ;
DateTimeType ::= year::Integer month::Integer day::Integer hour::Integer minute::Integer second::Integer ;
RunLevelElt ::= rle_tblContentElt::TableContentElt rle_rowContentElt::RowContentElt ;
RowElt ::= re_tblContentElt::TableContentElt tblPrEx::TablePrExElt trPr::TableRowPrElt (rowContent::RowContentElt)+ ;
DocPrElt ::= dpe_wordDocument::WordDocument ;
VersionType ::= n::Integer nn::Integer ;
Cr ::= rce_rElt::RunElt ;
DelInstrText ::= rce_rElt::RunElt val::String ;
ParaElt ::= pPr::ParaPrElt (pContentElts::ParaContentElt)+ ;
DocumentPropertiesCollection ::= dp_wordDocument::WordDocument title::String subject::String keywords::String description::String category::String author::String lastAuthor::String manager::String company::String hyperlinkBase::String revision::Integer presentationFormat::String guid::String appName::String version::VersionType totalTime::Integer lastPrinted::DateTimeType created::DateTimeType lastSaved::DateTimeType pages::Integer words::Integer characters::Integer charactersWithSpaces::Integer bytes::Integer lines::Integer paragraphs::Integer ;
BodyElt ::= be_wordDocument::WordDocument (blockLevelElts::BlockLevelElt)+ sectPr::SectPrElt ;
StringType ::= StringProperty ;
 StringType ::= Text ;
 StringType ::= DelText ;
 StringType ::= InstrText ;
 StringType ::= DelInstrText ;
 StringType ::= val::String ;
SmartTagType ::= smartTagType_ste::SmartTagsCollection namespaceuri::String name::String url::String ;
TablePrExElt ::= tpee_rowElt::RowElt ;
SymElt ::= Symbol ;
 SymElt ::= font::StringType char::StringType ;
FldCharTypeProperty ::= (fctp_begin::ε) | (fctp_separate::ε) | (fctp_end::ε) ;
HintType ::= (ht_default::ε) | (ht_fareast::ε) | (ht_cs::ε) ;
Footnote ::= rce_rElt::RunElt (n_blockLevelElts::BlockLevelElt)+ type::NoteValue suppressRef::OnOffType ;
--------------------metamodels::MSOfficeWord_WordprocessingMLTableElts.bgf--------------------
NoteValue ::= (ftn_normal::ε) | (ftn_separator::ε) | (ftn_continuation_separator::ε) | (ftn_continuation_notice::ε) ;
TablePrElt ::= tpe_tblElt::TableElt ;
TableCellPrElt ::= tcpe_tableCellElt::TableCellElt ;
TableGridElt ::= tge_tblElt::TableElt ;
BreakType ::= (bt_page::ε) | (bt_column::ε) | (bt_text_wrapping::ε) ;
ListsElt ::= le_wordDocument::WordDocument ;
Symbol ::= rce_rElt::RunElt font::StringType char::StringType ;
DelText ::= rce_rElt::RunElt val::String ;
Tab ::= rce_rElt::RunElt ;
FldChar ::= rce_rElt::RunElt fldData::StringType fldCharType::FldCharTypeProperty fldLock::OnOffType ;
FootnoteRef ::= rce_rElt::RunElt ;
NoBreakHyphen ::= rce_rElt::RunElt ;
PgNum ::= rce_rElt::RunElt ;
Endnote ::= rce_rElt::RunElt (n_blockLevelElts::BlockLevelElt)+ type::NoteValue suppressRef::OnOffType ;
HLinkElt ::= pce_pElt::ParaElt ;
FontsListElt ::= fle_wordDocument::WordDocument ;
ParaPrElt ::= ppe_pElt::ParaElt ;
CfChunk ::= ble_bodyElt::BodyElt ble_note::NoteElt ble_tableCellElt::TableCellElt ;
SectPrElt ::= spe_bodyElt::BodyElt ;
EndnoteRef ::= rce_rElt::RunElt ;
StringProperty ::= val::String ;
WordDocument ::= wd_smartTags::SmartTagsCollection wd_docProperties::DocumentPropertiesCollection wd_customDocProperties::CustomDocumentPropertiesCollection ignoreSubtree::StringProperty ignoreElements::StringProperty fonts::FontsListElt lists::ListsElt styles::StylesElt docPr::DocPrElt body::BodyElt ;
SmartTagsCollection ::= st_wordDocument::WordDocument (smartTagTypes::SmartTagType)+ ;
RunPrElt ::= rpe_rElt::RunElt ;
TableRowPrElt ::= tpe_rowElt::RowElt ;
TableElt ::= tblPr::TablePrElt tblGrid::TableGridElt (tblContent::TableContentElt)+ ;
Picture ::= rce_rElt::RunElt ;
TableCellElt ::= tce_rowContentElt::RowContentElt tcPr::TableCellPrElt (tce_content::BlockLevelElt)+ ;
CustomDocumentPropertiesCollection ::= cdp_wordDocument::WordDocument (customDocumentProperties::CustomDocumentProperty)+ ;
SoftHyphen ::= rce_rElt::RunElt ;
DateTimeTypeValue ::= value::DateTimeType ;
FldCharElt ::= FldChar ;
 FldCharElt ::= fldData::StringType fldCharType::FldCharTypeProperty fldLock::OnOffType ;
InstrText ::= rce_rElt::RunElt val::String ;
SubDocElt ::= pce_pElt::ParaElt ;
FloatValue ::= value::Double ;
DateTimeType ::= year::Integer month::Integer day::Integer hour::Integer minute::Integer second::Integer ;
RunLevelElt ::= rle_tblContentElt::TableContentElt rle_rowContentElt::RowContentElt ;
RowElt ::= re_tblContentElt::TableContentElt tblPrEx::TablePrExElt trPr::TableRowPrElt (rowContent::RowContentElt)+ ;
DocPrElt ::= dpe_wordDocument::WordDocument ;
VersionType ::= n::Integer nn::Integer ;
Cr ::= rce_rElt::RunElt ;
RowContentElt ::= rce_rowElt::RowElt (tc::TableCellElt)+ rce_runLevelElts::RunLevelElt ;
ContinuationSeparator ::= rce_rElt::RunElt ;
DelInstrText ::= rce_rElt::RunElt val::String ;
BreakElt ::= type::BreakType ;
Text ::= rce_rElt::RunElt val::String ;
ParaElt ::= pPr::ParaPrElt (pContentElts::ParaContentElt)+ ;
DocumentPropertiesCollection ::= dp_wordDocument::WordDocument title::String subject::String keywords::String description::String category::String author::String lastAuthor::String manager::String company::String hyperlinkBase::String revision::Integer presentationFormat::String guid::String appName::String version::VersionType totalTime::Integer lastPrinted::DateTimeType created::DateTimeType lastSaved::DateTimeType pages::Integer words::Integer characters::Integer charactersWithSpaces::Integer bytes::Integer lines::Integer paragraphs::Integer ;
StylesElt ::= se_wordDocument::WordDocument ;
BodyElt ::= be_wordDocument::WordDocument (blockLevelElts::BlockLevelElt)+ sectPr::SectPrElt ;
StringType ::= StringProperty ;
 StringType ::= Text ;
 StringType ::= DelText ;
 StringType ::= InstrText ;
 StringType ::= DelInstrText ;
 StringType ::= val::String ;
SmartTagType ::= smartTagType_ste::SmartTagsCollection namespaceuri::String name::String url::String ;
TablePrExElt ::= tpee_rowElt::RowElt ;
OnOffType ::= (oot_on::ε) | (oot_off::ε) ;
BooleanValue ::= value::Boolean ;
SymElt ::= Symbol ;
 SymElt ::= font::StringType char::StringType ;
SimpleFieldElt ::= pce_pElt::ParaElt ;
Separator ::= rce_rElt::RunElt ;
AnnotationRef ::= rce_rElt::RunElt ;
FldCharTypeProperty ::= (fctp_begin::ε) | (fctp_separate::ε) | (fctp_end::ε) ;
TableContentElt ::= tce_tblElt::TableElt (tr::RowElt)+ tce_runLevelElts::RunLevelElt ;
RunElt ::= rPr::RunPrElt (rContentElts::RunContentElt)+ ;
CustomDocumentProperty ::= customDocumentProperty_cdpe::CustomDocumentPropertiesCollection name::String value::ValueType ;
Footnote ::= rce_rElt::RunElt (n_blockLevelElts::BlockLevelElt)+ type::NoteValue suppressRef::OnOffType ;
StringValue ::= value::String ;
--------------------metamodels::MSProject.bgf--------------------
Task ::= UID::String (predecessors::Task)+ ;
MSProject ::= (tasks::Task)+ ;
--------------------metamodels::MSProject2.bgf--------------------
MSPTask ::= finishDate::Date startDate::Date project::MSPProject superTask::MSPTask (subTask::MSPTask)+ (assignment::MSPAssignment)+ (inLink::MSPLink)+ (outLink::MSPLink)+ ;
MSPProject ::= (resource::MSPResource)+ (link::MSPLink)+ (task::MSPTask)+ ;
Date ::= day::Integer month::Integer year::Integer ;
MSPMachine ::= cost::Double project::MSPProject (assignment::MSPAssignment)+ ;
MSPResource ::= MSPHumanResource ;
 MSPResource ::= MSPMachine ;
 MSPResource ::= cost::Double project::MSPProject (assignment::MSPAssignment)+ ;
MSPAssignment ::= task::MSPTask resource::MSPResource ;
MSPLink ::= project::MSPProject succ::MSPTask pred::MSPTask ;
MSPHumanResource ::= email::String ;
--------------------metamodels::MTRANS.bgf--------------------
Instruction ::= body::Expression section::Section ;
Variable ::= name::String rule::Rule ;
Rule ::= isAbstract::Boolean isEntryPoint::Boolean name::String module::Module target::MetaClass source::MetaClass declaration::Variable (sections::Section)+ guard::Expression (inheritances::Inheritance)+ ;
Module ::= name::String mode::String (metaDest::MetaModel)+ (metaSource::MetaModel)+ (rules::Rule)+ ;
Inheritance ::= rule::Rule (expressions::Expression)+ (inheritedRules::Rule)+ ;
Expression ::= operator::String inheritance::Inheritance rule::Rule instruction::Instruction ;
Section ::= kind::String rule::Rule (instructions::Instruction)+ ;
--------------------metamodels::MSVisio_DatadiagramMLBasicDef.bgf--------------------
SolutionXML ::= sx_visioDocument::VisioDocument ;
Ellipse ::= e_geom::Geom ;
StringElt ::= value::String ;
PolylineTo ::= pt_geom::Geom ;
EventList ::= el_visioDocument::VisioDocument ;
EmailRoutingData ::= erd_visioDocument::VisioDocument data::String size::Integer ;
WindowsInfo ::= ws_visioDocument::VisioDocument ;
SplineStart ::= ss_geom::Geom ;
PrintSetup ::= ps_visioDocument::VisioDocument ;
PageSheet ::= DocumentSheet ;
 PageSheet ::= ss_shapes::ShapesCollection lineStyle::Integer fillStyle::Integer textStyle::Integer (shapeElts::ShapeElt)+ ;
Page ::= p_pages::PagesCollection background::Boolean backPage::Integer viewScale::Double viewCenterX::Double ViewCenterY::Double reviewerID::Integer associatedPage::Integer (pageElts::PageElt)+ ;
MastersCollection ::= ms_visioDocument::VisioDocument (masters::Master)+ (masterShortCuts::MasterShortCut)+ ;
LineTo ::= lt_geom::Geom ;
HeaderFooter ::= ef_visioDocument::VisioDocument ;
ConnectsCollection ::= (connections::Connect)+ ;
DocumentSheet ::= ds_visioDocument::VisioDocument ;
StyleSheetsCollection ::= sss_visioDocument::VisioDocument (stylesSheets::StyleSheet)+ ;
PagesCollection ::= ps_visioDocument::VisioDocument (pages::Page)+ ;
CustomPropertiesCollection ::= cps_docProp::DocumentPropertiesCollection (cps_customProps::CustomProperty)+ ;
VisioDocument ::= start::Integer key::String metric::Boolean buildnum::Integer version::String docLangId::Integer docProps::DocumentPropertiesCollection docSettings::DocumentSettingsElt docColors::ColorsTable docPrintSetup::PrintSetup docFonts::FontsTable docFaceNames::FaceNamesTable docStyleSheets::StyleSheetsCollection docDocumentSheet::DocumentSheet docMasters::MastersCollection docPages::PagesCollection docWindows::WindowsInfo docEventList::EventList docHeaderFooter::HeaderFooter docVBProjectData::VBProjectData docEmailRoutingData::EmailRoutingData (docSolutionXML::SolutionXML)+ ;
EllipticalArcTo ::= eat_geom::Geom ;
ColorsTable ::= cs_visioDocument::VisioDocument ;
Geom ::= noFill::CellType noLine::CellType noShow::CellType noSnap::CellType (linesTo::LineTo)+ (movesTo::MoveTo)+ (arcsTo::ArcTo)+ (splineKnots::SplineKnot)+ (polylinesTo::PolylineTo)+ (infiniteLines::InfiniteLine)+ (ellipses::Ellipse)+ (ellipticalArcsTo::EllipticalArcTo)+ (splineStarts::SplineStart)+ (nurbsTo::NURBSTo)+ ;
CellType ::= unit::String formula::String err::String value::String ;
Icon ::= i_masterShortCut::MasterShortCut value::String ;
SplineKnot ::= sk_geom::Geom ;
NURBSTo ::= nt_geom::Geom ;
VBProjectData ::= vpd_visioDocument::VisioDocument data::String ;
DateTimeType ::= year::Integer month::Integer day::Integer hour::Integer minute::Integer second::Integer ;
ShapesCollection ::= (shapes::Shape)+ ;
DocumentSettingsElt ::= dss_visioDocument::VisioDocument ;
StyleSheet ::= ss_stylesSheets::StyleSheetsCollection ;
Text ::= (textElts::TextElt)+ ;
ArcTo ::= ac_geom::Geom ;
DocumentPropertiesCollection ::= dps_visioDocument::VisioDocument title::String subject::String creator::String manager::String company::String category::String keywords::String description::String hyperlinkBase_href::String alternateNames::String template::String buildNumberCreated::String buildNumberEdited::String customProps::CustomPropertiesCollection timeCreated::DateTimeType timeSaved::DateTimeType timeEdited::DateTimeType timePrinted::DateTimeType ;
MoveTo ::= mt_geom::Geom ;
FontsTable ::= fs_visioDocument::VisioDocument ;
Connect ::= c_connects::ConnectsCollection fromSheet::Integer toSheet::Integer fromCell::String toCell::String fromPart::Integer toPart::Integer ;
MasterShortCut ::= m_masterShortCuts::MastersCollection iconSize::Integer patternFlags::Integer prompt::String shortcutURL::String shortcutHelp::String alignName::Integer (icons::Icon)+ ;
InfiniteLine ::= il_geom::Geom ;
CustomProperty ::= cp_customProps::CustomPropertiesCollection name::String dataType::String ;
FaceNamesTable ::= fns_visioDocument::VisioDocument ;
Master ::= m_masters::MastersCollection baseID::String matchByName::Boolean iconSize::Integer patternFlags::Integer prompt::String hidden::Boolean iconUpdate::Boolean alignName::Integer (masterElts::MasterElt)+ ;
Shape ::= StyleSheet ;
 Shape ::= PageSheet ;
 Shape ::= ss_shapes::ShapesCollection lineStyle::Integer fillStyle::Integer textStyle::Integer (shapeElts::ShapeElt)+ ;
--------------------metamodels::MSVisio_DatadiagramMLSimplified.bgf--------------------
Ellipse ::= e_geom::Geom ;
StringElt ::= value::String ;
Geom ::= noFill::CellType noLine::CellType noShow::CellType noSnap::CellType (linesTo::LineTo)+ (movesTo::MoveTo)+ (arcsTo::ArcTo)+ (splineKnots::SplineKnot)+ (polylinesTo::PolylineTo)+ (infiniteLines::InfiniteLine)+ (ellipses::Ellipse)+ (ellipticalArcsTo::EllipticalArcTo)+ (splineStarts::SplineStart)+ (nurbsTo::NURBSTo)+ ;
CellType ::= unit::String formula::String err::String value::String ;
PolylineTo ::= pt_geom::Geom ;
Icon ::= i_masterShortCut::MasterShortCut value::String ;
SplineKnot ::= sk_geom::Geom ;
NURBSTo ::= nt_geom::Geom ;
SplineStart ::= ss_geom::Geom ;
ShapesCollection ::= (shapes::Shape)+ ;
PageSheet ::= ss_shapes::ShapesCollection lineStyle::Integer fillStyle::Integer textStyle::Integer (shapeElts::ShapeElt)+ ;
Page ::= p_pages::PagesCollection background::Boolean backPage::Integer viewScale::Double viewCenterX::Double ViewCenterY::Double reviewerID::Integer associatedPage::Integer (pageElts::PageElt)+ ;
MastersCollection ::= ms_visioDocument::VisioDocument (masters::Master)+ (masterShortCuts::MasterShortCut)+ ;
LineTo ::= lt_geom::Geom ;
Text ::= (textElts::TextElt)+ ;
ArcTo ::= ac_geom::Geom ;
MoveTo ::= mt_geom::Geom ;
Connect ::= c_connects::ConnectsCollection fromSheet::Integer toSheet::Integer fromCell::String toCell::String fromPart::Integer toPart::Integer ;
MasterShortCut ::= m_masterShortCuts::MastersCollection iconSize::Integer patternFlags::Integer prompt::String shortcutURL::String shortcutHelp::String alignName::Integer (icons::Icon)+ ;
InfiniteLine ::= il_geom::Geom ;
ConnectsCollection ::= (connections::Connect)+ ;
PagesCollection ::= ps_visioDocument::VisioDocument (pages::Page)+ ;
Master ::= m_masters::MastersCollection baseID::String matchByName::Boolean iconSize::Integer patternFlags::Integer prompt::String hidden::Boolean iconUpdate::Boolean alignName::Integer (masterElts::MasterElt)+ ;
Shape ::= PageSheet ;
 Shape ::= ss_shapes::ShapesCollection lineStyle::Integer fillStyle::Integer textStyle::Integer (shapeElts::ShapeElt)+ ;
VisioDocument ::= docMasters::MastersCollection docPages::PagesCollection ;
EllipticalArcTo ::= eat_geom::Geom ;
--------------------metamodels::MSVisio_DatadiagramMLTextFormat.bgf--------------------
SolutionXML ::= sx_visioDocument::VisioDocument ;
Fld ::= iX::Integer te_text::Text ;
Ellipse ::= e_geom::Geom ;
StringElt ::= value::String ;
PolylineTo ::= pt_geom::Geom ;
EventList ::= el_visioDocument::VisioDocument ;
Char ::= font::CellType color::CellType style::CellType case::CellType pos::CellType fontScale::CellType size::CellType dblUnderline::CellType overline::CellType strikethru::CellType doubleStrikethrough::CellType rtlText::CellType runVertical::CellType letterspace::CellType colorTrans::CellType localizeFont::CellType langID::CellType ;
Tab ::= t_tabs::TabsCollection position::CellType alignment::CellType ;
EmailRoutingData ::= erd_visioDocument::VisioDocument data::String size::Integer ;
WindowsInfo ::= ws_visioDocument::VisioDocument ;
SplineStart ::= ss_geom::Geom ;
PrintSetup ::= ps_visioDocument::VisioDocument ;
PageSheet ::= DocumentSheet ;
 PageSheet ::= ss_shapes::ShapesCollection lineStyle::Integer fillStyle::Integer textStyle::Integer (shapeElts::ShapeElt)+ ;
Page ::= p_pages::PagesCollection background::Boolean backPage::Integer viewScale::Double viewCenterX::Double ViewCenterY::Double reviewerID::Integer associatedPage::Integer (pageElts::PageElt)+ ;
MastersCollection ::= ms_visioDocument::VisioDocument (masters::Master)+ (masterShortCuts::MasterShortCut)+ ;
LineTo ::= lt_geom::Geom ;
ColorEntry ::= ce_colors::ColorsTable rgb::String ;
HeaderFooter ::= ef_visioDocument::VisioDocument ;
FaceName ::= fn_faceNames::FaceNamesTable name::String unicodeRanges::String charSet::String panos::String flags::Integer ;
ConnectsCollection ::= (connections::Connect)+ ;
DocumentSheet ::= ds_visioDocument::VisioDocument ;
StyleSheetsCollection ::= sss_visioDocument::VisioDocument (stylesSheets::StyleSheet)+ ;
PagesCollection ::= ps_visioDocument::VisioDocument (pages::Page)+ ;
CustomPropertiesCollection ::= cps_docProp::DocumentPropertiesCollection (cps_customProps::CustomProperty)+ ;
VisioDocument ::= start::Integer key::String metric::Boolean buildnum::Integer version::String docLangId::Integer docProps::DocumentPropertiesCollection docSettings::DocumentSettingsElt docColors::ColorsTable docPrintSetup::PrintSetup docFonts::FontsTable docFaceNames::FaceNamesTable docStyleSheets::StyleSheetsCollection docDocumentSheet::DocumentSheet docMasters::MastersCollection docPages::PagesCollection docWindows::WindowsInfo docEventList::EventList docHeaderFooter::HeaderFooter docVBProjectData::VBProjectData docEmailRoutingData::EmailRoutingData (docSolutionXML::SolutionXML)+ ;
Pp ::= iX::Integer te_text::Text ;
EllipticalArcTo ::= eat_geom::Geom ;
ColorsTable ::= cs_visioDocument::VisioDocument (colorEntries::ColorEntry)+ ;
TabsCollection ::= (tabs::Tab)+ ;
Tp ::= iX::Integer te_text::Text ;
Geom ::= noFill::CellType noLine::CellType noShow::CellType noSnap::CellType (linesTo::LineTo)+ (movesTo::MoveTo)+ (arcsTo::ArcTo)+ (splineKnots::SplineKnot)+ (polylinesTo::PolylineTo)+ (infiniteLines::InfiniteLine)+ (ellipses::Ellipse)+ (ellipticalArcsTo::EllipticalArcTo)+ (splineStarts::SplineStart)+ (nurbsTo::NURBSTo)+ ;
CellType ::= unit::String formula::String err::String value::String ;
Field ::= value::CellType editMode::CellType format::CellType type::CellType uiCat::CellType uiCode::CellType uiFmt::CellType calendar::CellType objectKind::CellType ;
Icon ::= i_masterShortCut::MasterShortCut value::String ;
SplineKnot ::= sk_geom::Geom ;
NURBSTo ::= nt_geom::Geom ;
VBProjectData ::= vpd_visioDocument::VisioDocument data::String ;
DateTimeType ::= year::Integer month::Integer day::Integer hour::Integer minute::Integer second::Integer ;
ShapesCollection ::= (shapes::Shape)+ ;
DocumentSettingsElt ::= dss_visioDocument::VisioDocument ;
StyleSheet ::= ss_stylesSheets::StyleSheetsCollection ;
Cp ::= iX::Integer te_text::Text ;
Text ::= (textElts::TextElt)+ ;
ArcTo ::= ac_geom::Geom ;
MoveTo ::= mt_geom::Geom ;
DocumentPropertiesCollection ::= dps_visioDocument::VisioDocument title::String subject::String creator::String manager::String company::String category::String keywords::String description::String hyperlinkBase_href::String alternateNames::String template::String buildNumberCreated::String buildNumberEdited::String customProps::CustomPropertiesCollection timeCreated::DateTimeType timeSaved::DateTimeType timeEdited::DateTimeType timePrinted::DateTimeType ;
Connect ::= c_connects::ConnectsCollection fromSheet::Integer toSheet::Integer fromCell::String toCell::String fromPart::Integer toPart::Integer ;
FontsTable ::= fs_visioDocument::VisioDocument (fontEntries::FontEntry)+ ;
MasterShortCut ::= m_masterShortCuts::MastersCollection iconSize::Integer patternFlags::Integer prompt::String shortcutURL::String shortcutHelp::String alignName::Integer (icons::Icon)+ ;
InfiniteLine ::= il_geom::Geom ;
CustomProperty ::= cp_customProps::CustomPropertiesCollection name::String dataType::String ;
FaceNamesTable ::= fns_visioDocument::VisioDocument (faceNameEntries::FaceName)+ ;
FontEntry ::= fe_fonts::FontsTable name::String charSet::String pitchAndFamily::String attributes::Integer weight::Integer unicode::Boolean ;
Master ::= m_masters::MastersCollection baseID::String matchByName::Boolean iconSize::Integer patternFlags::Integer prompt::String hidden::Boolean iconUpdate::Boolean alignName::Integer (masterElts::MasterElt)+ ;
Shape ::= StyleSheet ;
 Shape ::= PageSheet ;
 Shape ::= ss_shapes::ShapesCollection lineStyle::Integer fillStyle::Integer textStyle::Integer (shapeElts::ShapeElt)+ ;
Para ::= indFirst::CellType indLeft::CellType indRight::CellType spLine::CellType spBefore::CellType spAfter::CellType horzAlign::CellType bullet::CellType bulletStr::CellType bulletFont::CellType localizeBulletFont::CellType bulletFontSize::CellType textPosAfterBullet::CellType flags::CellType ;
--------------------metamodels::MSVisio_DatadiagramMLXForm.bgf--------------------
SolutionXML ::= sx_visioDocument::VisioDocument ;
Fld ::= iX::Integer te_text::Text ;
Ellipse ::= e_geom::Geom ;
XForm ::= pinX::CellType pinY::CellType width::CellType height::CellType locPinX::CellType locPinY::CellType angle::CellType flipX::CellType flipY::CellType resizeMode::CellType ;
StringElt ::= value::String ;
PolylineTo ::= pt_geom::Geom ;
EventList ::= el_visioDocument::VisioDocument ;
Char ::= font::CellType color::CellType style::CellType case::CellType pos::CellType fontScale::CellType size::CellType dblUnderline::CellType overline::CellType strikethru::CellType doubleStrikethrough::CellType rtlText::CellType runVertical::CellType letterspace::CellType colorTrans::CellType localizeFont::CellType langID::CellType ;
Tab ::= t_tabs::TabsCollection position::CellType alignment::CellType ;
EmailRoutingData ::= erd_visioDocument::VisioDocument data::String size::Integer ;
WindowsInfo ::= ws_visioDocument::VisioDocument ;
SplineStart ::= ss_geom::Geom ;
PageSheet ::= DocumentSheet ;
 PageSheet ::= ss_shapes::ShapesCollection lineStyle::Integer fillStyle::Integer textStyle::Integer (shapeElts::ShapeElt)+ ;
PrintSetup ::= ps_visioDocument::VisioDocument ;
Page ::= p_pages::PagesCollection background::Boolean backPage::Integer viewScale::Double viewCenterX::Double ViewCenterY::Double reviewerID::Integer associatedPage::Integer (pageElts::PageElt)+ ;
MastersCollection ::= ms_visioDocument::VisioDocument (masters::Master)+ (masterShortCuts::MasterShortCut)+ ;
ColorEntry ::= ce_colors::ColorsTable rgb::String ;
LineTo ::= lt_geom::Geom ;
HeaderFooter ::= ef_visioDocument::VisioDocument ;
FaceName ::= fn_faceNames::FaceNamesTable name::String unicodeRanges::String charSet::String panos::String flags::Integer ;
ConnectsCollection ::= (connections::Connect)+ ;
DocumentSheet ::= ds_visioDocument::VisioDocument ;
StyleSheetsCollection ::= sss_visioDocument::VisioDocument (stylesSheets::StyleSheet)+ ;
PagesCollection ::= ps_visioDocument::VisioDocument (pages::Page)+ ;
CustomPropertiesCollection ::= cps_docProp::DocumentPropertiesCollection (cps_customProps::CustomProperty)+ ;
VisioDocument ::= start::Integer key::String metric::Boolean buildnum::Integer version::String docLangId::Integer docProps::DocumentPropertiesCollection docSettings::DocumentSettingsElt docColors::ColorsTable docPrintSetup::PrintSetup docFonts::FontsTable docFaceNames::FaceNamesTable docStyleSheets::StyleSheetsCollection docDocumentSheet::DocumentSheet docMasters::MastersCollection docPages::PagesCollection docWindows::WindowsInfo docEventList::EventList docHeaderFooter::HeaderFooter docVBProjectData::VBProjectData docEmailRoutingData::EmailRoutingData (docSolutionXML::SolutionXML)+ ;
Pp ::= iX::Integer te_text::Text ;
EllipticalArcTo ::= eat_geom::Geom ;
ColorsTable ::= cs_visioDocument::VisioDocument (colorEntries::ColorEntry)+ ;
TabsCollection ::= (tabs::Tab)+ ;
Tp ::= iX::Integer te_text::Text ;
Geom ::= noFill::CellType noLine::CellType noShow::CellType noSnap::CellType (linesTo::LineTo)+ (movesTo::MoveTo)+ (arcsTo::ArcTo)+ (splineKnots::SplineKnot)+ (polylinesTo::PolylineTo)+ (infiniteLines::InfiniteLine)+ (ellipses::Ellipse)+ (ellipticalArcsTo::EllipticalArcTo)+ (splineStarts::SplineStart)+ (nurbsTo::NURBSTo)+ ;
CellType ::= unit::String formula::String err::String value::String ;
Field ::= value::CellType editMode::CellType format::CellType type::CellType uiCat::CellType uiCode::CellType uiFmt::CellType calendar::CellType objectKind::CellType ;
Icon ::= i_masterShortCut::MasterShortCut value::String ;
SplineKnot ::= sk_geom::Geom ;
NURBSTo ::= nt_geom::Geom ;
VBProjectData ::= vpd_visioDocument::VisioDocument data::String ;
DateTimeType ::= year::Integer month::Integer day::Integer hour::Integer minute::Integer second::Integer ;
ShapesCollection ::= (shapes::Shape)+ ;
DocumentSettingsElt ::= dss_visioDocument::VisioDocument topPage::Page defaultTextStyle::StyleSheet defaultLineStyle::StyleSheet defaultFillStyle::StyleSheet defaultGuideStyle::StyleSheet glueSettings::Integer snapSettings::Integer snapExtensions::Integer ds_snapAngles::SnapAnglesCollection dynamicGridEnabled::Boolean protectStyles::Boolean protectShapes::Boolean protectMasters::Boolean protectBkgnds::Boolean customMenusFile::String customToolbarsFile::String attachedToolbars::String ;
StyleSheet ::= ss_stylesSheets::StyleSheetsCollection ;
Cp ::= iX::Integer te_text::Text ;
Text ::= (textElts::TextElt)+ ;
ArcTo ::= ac_geom::Geom ;
MoveTo ::= mt_geom::Geom ;
DocumentPropertiesCollection ::= dps_visioDocument::VisioDocument title::String subject::String creator::String manager::String company::String category::String keywords::String description::String hyperlinkBase_href::String alternateNames::String template::String buildNumberCreated::String buildNumberEdited::String customProps::CustomPropertiesCollection timeCreated::DateTimeType timeSaved::DateTimeType timeEdited::DateTimeType timePrinted::DateTimeType ;
Connect ::= c_connects::ConnectsCollection fromSheet::Integer toSheet::Integer fromCell::String toCell::String fromPart::Integer toPart::Integer ;
FontsTable ::= fs_visioDocument::VisioDocument (fontEntries::FontEntry)+ ;
SnapAngle ::= sa_snapAngles::SnapAnglesCollection angleValue::Double ;
MasterShortCut ::= m_masterShortCuts::MastersCollection iconSize::Integer patternFlags::Integer prompt::String shortcutURL::String shortcutHelp::String alignName::Integer (icons::Icon)+ ;
InfiniteLine ::= il_geom::Geom ;
SnapAnglesCollection ::= sa_docSettings::DocumentSettingsElt (snapAngles::SnapAngle)+ ;
CustomProperty ::= cp_customProps::CustomPropertiesCollection name::String dataType::String ;
FaceNamesTable ::= fns_visioDocument::VisioDocument (faceNameEntries::FaceName)+ ;
FontEntry ::= fe_fonts::FontsTable name::String charSet::String pitchAndFamily::String attributes::Integer weight::Integer unicode::Boolean ;
Master ::= m_masters::MastersCollection baseID::String matchByName::Boolean iconSize::Integer patternFlags::Integer prompt::String hidden::Boolean iconUpdate::Boolean alignName::Integer (masterElts::MasterElt)+ ;
Shape ::= StyleSheet ;
 Shape ::= PageSheet ;
 Shape ::= ss_shapes::ShapesCollection lineStyle::Integer fillStyle::Integer textStyle::Integer (shapeElts::ShapeElt)+ ;
Para ::= indFirst::CellType indLeft::CellType indRight::CellType spLine::CellType spBefore::CellType spAfter::CellType horzAlign::CellType bullet::CellType bulletStr::CellType bulletFont::CellType localizeBulletFont::CellType bulletFontSize::CellType textPosAfterBullet::CellType flags::CellType ;
--------------------metamodels::Mantis.bgf--------------------
Issue ::= i_mantisRoot::MantisRoot project::ValueWithId category::String priority::ValueWithId severity::ValueWithId status::ValueWithId reporter::Person summary::String description::String version::String build::String platform::String os::String osVersion::String reproducibility::ValueWithId stepsToReproduce::String additionalInfo::String dateSubmitted::Integer assignedTo::Person projection::ValueWithId eta::ValueWithId resolution::ValueWithId fixedInVersion::String (attachments::Attachment)+ (relationships::Relationship)+ (notes::Note)+ lastUpdate::Integer ;
Relationship ::= type::RelationshipType ;
MantisRoot ::= (issues::Issue)+ ;
Person ::= login::String ;
Attachment ::= filename::String size::Integer contentType::String downloadUrl::String ;
Note ::= author::Person text::String ;
ValueWithId ::= Person ;
 ValueWithId ::= value::String ;
RelationshipType ::= (rt_related to::ε) | (rt_parent of::ε) | (rt_child of::ε) | (rt_duplicate of::ε) | (rt_has duplicate::ε) ;
--------------------metamodels::Matlab.bgf--------------------
StateFlow ::= stateFlow::String (machines::Machine)+ simulink::Simulink ;
Chart ::= name::String id::String _id::String decomposotion::String updateMethode::String sampleTime::String (junctions::Junction)+ (events::Event)+ (transitions::Transition)+ (data::Data)+ (states::State)+ ;
INteger ::= value::String ;
Event ::= name::String id::String scope::String description::String trigger::String machine::Machine chart::Chart state::State ;
Array ::= firstIndex::String size::String props::Props ;
Instance ::= _id::String id::String name::String machine::Machine ;
Transition ::= _id::String dataLimites::String id::String trigger::String condition::String conditionAction::String action::String chart::Chart state::State ;
BranchedLine ::= (branchs::Branch)+ ;
Junction ::= _id::String id::String type::String position::String state::State chart::Chart ;
State ::= name::String id::String _id::String type::String entryAction::String exitAction::String duringAction::String eventActions::String decomposition::String position::String (junctions::Junction)+ (events::Event)+ (transitions::Transition)+ (data::Data)+ chart::Chart (states::State)+ ;
Target ::= name::String id::String codeCommand::String description::String makeCommand::String codeFlags::String checksumOld::String machine::Machine ;
Double ::= value::String ;
Block ::= Subsystem ;
 Block ::= Primitive ;
 Block ::= Reference ;
 Block ::= name::String blockType::String description::String priority::String tag::String position::String mySystem::System (ports::Port)+ ;
Reference ::= sourceType::String sourceBlock::String (parameters::Parameter)+ ;
Masked ::= system::System ;
BOolean ::= value::TrueFalse ;
Enumeration ::= value::String ;
Machine ::= name::String id::String (events::Event)+ (data::Data)+ (instances::Instance)+ (targets::Target)+ stateFlow::StateFlow ;
Vector ::= value::String ;
Port ::= InputPort ;
 Port ::= OutputPort ;
 Port ::= id::String number::String portBlock::Block primitive::Primitive ;
BlockDefaults ::= Block ;
 BlockDefaults ::= blockDefaults::String model::Model ;
Range ::= maximum::String minimum::String props::Props ;
DirectLine ::= destPort1::InputPort ;
Type ::= value::String ;
NestedBranch ::= (branchs::Branch)+ ;
Simulink ::= simulink::String (stateFlows::StateFlow)+ (models::Model)+ ;
TrueFalse ::= (True::ε) | (False::ε) ;
Line ::= DirectLine ;
 Line ::= BranchedLine ;
 Line ::= points::String id::String srcPort::OutputPort system::System ;
TransitionTerminal ::= _id::String ;
Props ::= initialValue::String (arrays::Array)+ (ranges::Range)+ data::Data ;
System ::= name::String (blocks::Block)+ (lines::Line)+ (annotations::Annotation)+ model::Model parentSubsystem::Subsystem ;
Subsystem ::= Masked ;
 Subsystem ::= Normal ;
 Subsystem ::= system::System ;
Annotation ::= position::String text::String system::System ;
Text ::= value::String ;
Matlab ::= (model::Model)+ ;
DirectBranch ::= id::String destPort::InputPort ;
InputPort ::= owningDirectLine::DirectLine owningDirectBranch::DirectBranch ;
Data ::= name::String id::String scope::String description::String units::String dataType::String (props::Props)+ state::State chart::Chart machine::Machine ;
Parameter ::= Type ;
 Parameter ::= Double ;
 Parameter ::= INteger ;
 Parameter ::= Enumeration ;
 Parameter ::= BOolean ;
 Parameter ::= Text ;
 Parameter ::= Vector ;
 Parameter ::= name::String le_reference::Reference primitive::Primitive ;
Model ::= name::String matlab::Matlab (annotationDefaults::AnnotationDefaults)+ (system::System)+ (blockDefaults::BlockDefaults)+ (lineDefaults::LineDefaults)+ simulink::Simulink ;
Normal ::= system::System ;
Primitive ::= id::String (parameters::Parameter)+ refPort::Port ;
LineDefaults ::= Line ;
 LineDefaults ::= lineDefaults::String model::Model ;
OutputPort ::= owningLine::Line ;
Branch ::= DirectBranch ;
 Branch ::= NestedBranch ;
 Branch ::= points::String branchedLine::BranchedLine nestedBranch::NestedBranch ;
AnnotationDefaults ::= Annotation ;
 AnnotationDefaults ::= annotationDefaults::String model::Model ;
--------------------metamodels::Maude.bgf--------------------
Sort ::= (subsortRels::SubsortRel)+ (supersortRels::SubsortRel)+ kind::Kind ;
RecTerm ::= op::String (args::Term)+ ;
SubsortRel ::= (subsorts::Sort)+ (supersorts::Sort)+ ;
MembershipCond ::= rhs::Sort ;
Membership ::= term::Term sort::Sort ;
Kind ::= (sorts::Sort)+ ;
SortMapping ::= from::Sort to::String ;
RewriteCond ::= rhs::Term ;
ModImportation ::= imports::ModExpression mode::ImportationMode ;
Equation ::= lhs::Term rhs::Term ;
OpTypedMapping ::= from::Operation to::String (atts::String)+ ;
TermMapping ::= from::Term to::Term ;
ModuleIdModExp ::= module::Module ;
MatchingCond ::= rhs::Term ;
SModule ::= (els::ModElement)+ (params::Parameter)+ ;
MaudeSpec ::= (els::MaudeTopEl)+ (printableEls::MaudeTopEl)+ ;
Variable ::= name::String ;
Rule ::= lhs::Term rhs::Term ;
TheoryIdModExp ::= theory::Theory ;
LabelMapping ::= from::String to::String ;
STheory ::= (els::ModElement)+ ;
EqualCond ::= rhs::Term ;
RenModExp ::= modExp::ModExpression (renamings::RenMapping)+ ;
ImportationMode ::= (protecting::ε) | (including::ε) | (extending::ε) ;
FModule ::= (els::ModElement)+ (params::Parameter)+ ;
OpMapping ::= from::Operation to::String ;
FTheory ::= (els::ModElement)+ ;
CompModExp ::= modExps::ModExpression ;
Parameter ::= label::String modExp::ModExpression ;
Operation ::= name::String coarity::Type (arity::Type)+ (atts::String)+ ;
View ::= from::ModExpression to::ModExpression (els::ViewMapping)+ ;
Constant ::= op::String ;
InstModExp ::= modExp::ModExpression (views::View)+ ;
--------------------metamodels::MavenMaven.bgf--------------------
Xmlns ::= name::String value::String ;
Jar ::= jarfile::String basedir::String compress::String encoding::String manifest::String ;
AntTaskDef ::= name::String classname::String ;
Excludes ::= name::String ifCondition::String unless::String ;
Project ::= (xmlns::Xmlns)+ default::Goal path::Path (properties::AntProperty)+ (taskdefs::AntTaskDef)+ (prePostGoals::PrePostGoal)+ (goals::Goal)+ ;
PathElement ::= path::String location::String ;
FiltersFile ::= file::String ;
Javadoc ::= sourcepath::String destdir::String packagenames::String defaultexcludes::String author::String version::String use::String windowtitle::String ;
PreGoal ::= centralGoal::Goal ;
Goal ::= name::String preGoal::PreGoal postGoal::PostGoal ;
PostGoal ::= centralGoal::Goal ;
Exec ::= executable::String dir::String ;
Tstamp ::= (format::FormatTstamp)+ ;
Includes ::= name::String ifCondition::String unless::String ;
FilterSet ::= starttoken::String endtoken::String (filter::Filter)+ (filtersfile::FiltersFile)+ ;
FileSet ::= dir::String (patternset::PatternSet)+ (include::Includes)+ (exclude::Excludes)+ ;
NewTask ::= taskName::AntTaskDef (attributes::Attribut)+ ;
Javac ::= srcdir::String destdir::String debug::String fork::String optimize::String deprecation::String (inExcludes::InExcludes)+ classPath::ClassPath ;
Mapper ::= type::String classname::String classpath::String classpathref::String from::String to::String ;
ClassPath ::= refid::String (pathElement::PathElement)+ (fileset::FileSet)+ ;
FileList ::= dir::String files::String ;
Filter ::= token::String value::String ;
AttainGoal ::= attainGoal::Goal ;
AntPropertyFile ::= file::String ;
Copy ::= file::String presservelastmodified::String tofile::String todir::String overwrite::String filtering::String flatten::String includeEmptyDirs::String fileset::FileSet filterset::FilterSet mapper::Mapper ;
ExcludesFile ::= name::String ifCondition::String unless::String ;
AntPropertyValue ::= value::String ;
PatternSet ::= (inexcludes::InExcludes)+ ;
AntPropertyEnv ::= environment::String ;
AntPropertyLocation ::= location::String ;
Mkdir ::= dir::String ;
JellyForEach ::= items::String var::String indexVar::String contents::ContentsGoal ;
Delete ::= file::String dir::String verbose::String quiet::String failonerror::String includeEmptyDirs::String includes::String includesfile::String excludes::String excludesfile::String defaultexcludes::String ;
Attribut ::= name::String value::String ;
IncludesFile ::= name::String ifCondition::String unless::String ;
FormatTstamp ::= property::String pattern::String offset::String unit::String locale::String ;
Echo ::= message::String file::String append::String ;
Path ::= id::String refid::String path::Path (pathElement::PathElement)+ (fileset::FileSet)+ ;
JellySet ::= var::String value::String ;
Java ::= classname::String jar::String fork::String classPath::ClassPath ;
--------------------metamodels::MavenProject.bgf--------------------
Resource ::= targetPath::String filtering::String directory::String includes::String excludes::String ;
Build ::= defaultGoal::String sourceDirectory::String unitTestSourceDirectory::String (uniTest::Resource)+ (resources::Resource)+ ;
Contributor ::= name::String email::String url::String organization::String organizationUrl::String roles::String timezone::String properties::String ;
Developer ::= id::String ;
MailingList ::= name::String subscribe::String unsubscribe::String post::String archive::String otherArchives::String ;
Project ::= id::String groupId::String artifactId::String name::String description::String (mailingLists::MailingList)+ (developersAndContributors::Person)+ build::Build (dependencies::Project)+ ;
--------------------metamodels::Measure.bgf--------------------
Category ::= name::String desc::String (metrics::Metric)+ root::RootMeasureSet ;
DoubleMeasure ::= value::Double ;
ModelKind ::= (KM3::ε) | (UML2::ε) ;
RootMeasureSet ::= modelType::ModelKind (categories::Category)+ (measureSets::MeasureSet)+ ;
PercentageMeasure ::= value::Double ;
MeasureSet ::= elementName::String elementType::ElementKind (measures::Measure)+ root::RootMeasureSet (subsets::MeasureSet)+ parent::MeasureSet ;
IntegerMeasure ::= value::Integer ;
ElementKind ::= (metamodel::ε) | (model::ε) | (package::ε) | (interface::ε) | (class::ε) ;
Metric ::= name::String desc::String preferredValue::String category::Category ;
--------------------metamodels::Metrics.bgf--------------------
BooleanMetricValue ::= value::Boolean ;
IntegerMetricValue ::= value::Integer ;
DoubleMetricValue ::= value::Double ;
StringMetricValue ::= value::String ;
Metric ::= name::String (values::MetricValue)+ ;
--------------------metamodels::MoMM.bgf--------------------
Generalization ::= target::ModelElement source::ModelElement ;
Attribute ::= type::ModelElement ;
ModelElement ::= Attribute ;
 ModelElement ::= Relationship ;
 ModelElement ::= level::Integer name::String potency::String hasClass::ModelElement (classElement::ModelElement)+ elementTarget::Relationship elementSource::Relationship (attributes::Attribute)+ attType::Attribute ;
Association ::= maxSource::String maxTarget::String minSource::String minTarget::String ;
--------------------metamodels::MiningMart_SimplifiedMetamodel.bgf--------------------
Integer ::= attribute::Attribute ;
ColumnSet ::= name::String (attributes::Attribute)+ ;
Attribute ::= Column ;
 Attribute ::= FeatureAttribute ;
 Attribute ::= Value ;
 Attribute ::= RoleRestriction ;
 Attribute ::= class::Class has::DataType ;
DomainDataType ::= attribute::Attribute ;
Concept ::= name::String (attributes::Attribute)+ ;
Class ::= Concept ;
 Class ::= ColumnSet ;
 Class ::= name::String (attributes::Attribute)+ ;
RoleRestriction ::= class::Class has::DataType ;
FeatureAttribute ::= class::Class has::DataType ;
Column ::= class::Class has::DataType ;
DataType ::= Integer ;
 DataType ::= String ;
 DataType ::= DomainDataType ;
 DataType ::= attribute::Attribute ;
String ::= attribute::Attribute ;
Value ::= class::Class has::DataType ;
--------------------metamodels::MiningMart_ViewCaseRepresentation.bgf--------------------
MSL-Tool ::= source::DataObject target::DataObject ;
Attribute ::= class::Class has::DataType ;
SQLQuery ::= transformationGroup::TransformationGroup ;
Class ::= name::String (attributes::Attribute)+ ;
Function ::= nameOf::String signature::String ;
Discretization ::= scalingFactor::Integer ;
TransformationGroup ::= (transformation::Transformation)+ ;
FeatureSelection ::= loopable::Boolean numberOfInputParameters::Integer numberOfOutputParameters::Integer manual::Boolean tool::String (input::Parameter)+ (output::Parameter)+ realizes::ExecutionElement ;
DataMinStep ::= loopable::Boolean numberOfInputParameters::Integer numberOfOutputParameters::Integer manual::Boolean tool::String (input::Parameter)+ (output::Parameter)+ realizes::ExecutionElement ;
TimeOperator ::= loopable::Boolean numberOfInputParameters::Integer numberOfOutputParameters::Integer manual::Boolean tool::String (input::Parameter)+ (output::Parameter)+ realizes::ExecutionElement ;
StoredProcedure ::= nameOf::String signature::String ;
LoopStep ::= name::String description::String belongsToCase::Case embedsOperator::Operator (predecessors::Step)+ (successors::Step)+ ;
Case ::= name::String caseMode::Boolean caseInput::Parameter documentation::String (listOfStep::Step)+ ;
Step ::= LoopStep ;
 Step ::= MultiStep ;
 Step ::= name::String description::String belongsToCase::Case embedsOperator::Operator (predecessors::Step)+ (successors::Step)+ ;
Transformation ::= Function ;
 Transformation ::= StoredProcedure ;
 Transformation ::= SQLQuery ;
 Transformation ::= transformationGroup::TransformationGroup ;
DataObject ::= source::ExecutionElement target::ExecutionElement ;
Parameter ::= name::String place::String parameterType::ParameterType belongsToOperator::Operator ;
Scaling ::= scalingFactor::Integer ;
FeatureConstruction ::= Scaling ;
 FeatureConstruction ::= Discretization ;
 FeatureConstruction ::= scalingFactor::Integer ;
MultiStep ::= iterationCondition::String ;
DataType ::= attribute::Attribute ;
ExecutionElement ::= MSL-Tool ;
 ExecutionElement ::= TransformationGroup ;
 ExecutionElement ::= Transformation ;
 ExecutionElement ::= source::DataObject target::DataObject ;
ParameterType ::= (Value::ε) | (Concept::ε) | (RelationShip::ε) | (FeatureAttribute::ε) ;
--------------------metamodels::MoDAF-AV.bgf--------------------
ProjectThreadType ::= taxonomy::Taxonomy ;
NodeConnectionType ::= taxonomy::Taxonomy ;
OperationalMission ::= name::String content::String ;
SystemConnectionSpecification ::= taxonomy::Taxonomy ;
Property ::= value::String ;
LiteralSpecification ::= value::String ;
Architecture ::= enterprise::Enterprise describedBy::ArchitecturalDescription ;
Environment ::= influences::Enterprise ;
Effect ::= taxonomy::Taxonomy ;
Taxonomy ::= date::String url::String version::String (contents::ClassifiedElement)+ ;
LocationType ::= taxonomy::Taxonomy ;
OperationalConstraint ::= nodeUsageContext::Property ;
EnduringTask ::= taxonomy::Taxonomy ;
MetaData ::= ArchitectureMetaData ;
 MetaData ::= dublinCoreElement::String modMetaDataElement::String name::String body::String ;
ArchitecturalReference ::= referred::ArchitecturalDescription referrer::ArchitecturalDescription ;
CapabilityRequirement ::= taxonomy::Taxonomy ;
Competence ::= taxonomy::Taxonomy ;
TimeExpression ::= value::String ;
Unit ::= taxonomy::Taxonomy ;
ArchitectureMetaData ::= annotatedArchitecture::ArchitecturalDescription ;
Node ::= taxonomy::Taxonomy ;
ArchitecturalFramework ::= (ownedMember::View)+ ;
OperationalActivity ::= taxonomy::Taxonomy ;
ArchitecturalDescription ::= approvialAuthority::String architect::String assumptionAndConstraints::String creatingOrganisation::String dateCompleted::String purpose::String recommendations::String summaryOfFindings::String tollsUsed::String (viewpoints::View)+ (products::ArchitecturalProduct)+ taxonomy::Taxonomy ;
Standard ::= identifier::String publishedWebsite::String publisher::String ratificationDate::TimeExpression version::String withdrawalDate::TimeExpression ;
PostType ::= taxonomy::Taxonomy ;
OrganisationProjectRelationship ::= taxonomy::Taxonomy ;
Elements ::= name::String content::String ;
MeasurableProperty ::= maxValue::LiteralSpecification minValue::LiteralSpecification ;
Service ::= taxonomy::Taxonomy ;
RoleInOrganisation ::= taxonomy::Taxonomy ;
OrganisationType ::= taxonomy::Taxonomy ;
ProjectType ::= taxonomy::Taxonomy ;
DataElement ::= taxonomy::Taxonomy ;
ArchitecturalProduct ::= description::String (architecturalElements::Elements)+ definingView::View (addresses::Concern)+ ;
InformationElement ::= taxonomy::Taxonomy ;
System ::= taxonomy::Taxonomy ;
InformationExchange ::= identifier::String requirementText::String ;
StakeholderHasConcern ::= client::Stakeholder supplier::Concern owner::MoDAFModel ;
SystemFunction ::= systemUsageContext::Property ;
Dimension ::= taxonomy::Taxonomy ;
Stakeholder ::= name::String content::String ;
View ::= framework::String frameworkWebsite::String viewCode::String viewDescription::String viewName::String definingFramework::ArchitecturalFramework (usedToCover::Concern)+ ;
MoDAFModel ::= enterprise::Enterprise environment::Environment (operationalMissions::OperationalMission)+ (architectures::Architecture)+ (architecturalDescription::ArchitecturalDescription)+ (architecturalReferences::ArchitecturalReference)+ (architecturalFrameworks::ArchitecturalFramework)+ (architectureMetadatas::ArchitectureMetaData)+ (metaDatas::MetaData)+ (stakeholders::Stakeholder)+ (stakeholderHasConcerns::StakeholderHasConcern)+ ;
Enterprise ::= inhabits::Environment (fulfills::OperationalMission)+ ;
Concern ::= (adressedBy::ArchitecturalProduct)+ ;
--------------------metamodels::MiningMart_ViewDataRepresentation.bgf--------------------
UserInput ::= (containsValues::Value)+ ;
Key ::= ForeignKey ;
 Key ::= PrimaryKey ;
 Key ::= isUsedForIndex::Boolean (hasColumn::Column)+ isAssociatedToColumnSet::ColumnSet ;
PrimaryKey ::= isUsedForIndex::Boolean (hasColumn::Column)+ isAssociatedToColumnSet::ColumnSet ;
Attribute ::= Column ;
 Attribute ::= FeatureAttribute ;
 Attribute ::= RoleRestriction ;
 Attribute ::= Value ;
 Attribute ::= class::Class has::DataType ;
ColumnStatistics ::= unique::Integer missing::Integer min::Integer max::Integer average::Integer standarDeviation::Integer distributionValue::String distributionCount::Integer distributionMin::Integer distributionMax::Integer forColumn::Column ;
RelationShip ::= name::String subRelationShipRestriction::String defined::String isA::RelationShip (correspondsToForeignKey::ForeignKey)+ correspondsToColumnSet::ColumnSet FromConcept::Concept ToConcept::Concept ;
Class ::= ColumnSet ;
 Class ::= UserInput ;
 Class ::= Concept ;
 Class ::= name::String (attributes::Attribute)+ ;
RoleRestriction ::= name::String restrictionForRelationShip::RelationShip restrictionForConcept::Concept restrictionToConcept::Concept min::Integer max::Integer belongsToConcept::Concept ;
Column ::= name::String dataType::DataType (keys::Key)+ belongsToColumnSet::ColumnSet corespondsToBaseAttribute::BaseAttribute ;
Value ::= name::String domainDataType::DomainDataType (belongsToUserInput::UserInput)+ ;
ColumnSetStatistics ::= allNumber::Integer ordinalNumber::Integer nominalNumber::Integer timeNumber::Integer forColumnSet::ColumnSet ;
Table ::= number::Integer file::String dbConnectString::String user::String (hasColumn::Column)+ (hasKey::Key)+ correspondsToConcept::Concept correspondsToRelationShip::RelationShip ;
ColumnSet ::= Snapshot ;
 ColumnSet ::= Table ;
 ColumnSet ::= View ;
 ColumnSet ::= number::Integer file::String dbConnectString::String user::String (hasColumn::Column)+ (hasKey::Key)+ correspondsToConcept::Concept correspondsToRelationShip::RelationShip ;
BaseAttribute ::= isPartMultiColumnFeature::MultiColumnFeature domainDataType::DomainDataType ;
ForeignKey ::= isConnectionTo::Table correspondsToRelationShip::RelationShip ;
DomainDataType ::= Ordinal ;
 DomainDataType ::= Nominal ;
 DomainDataType ::= baseAttributeD::BaseAttribute ;
Concept ::= subConceptRestriction::String isA::Concept FromConcept::RelationShip ToConcept::RelationShip correspondsToColumnSet::ColumnSet ;
MultiColumnFeature ::= (consitsOfBaseAttributes::BaseAttribute)+ ;
FeatureAttribute ::= BaseAttribute ;
 FeatureAttribute ::= MultiColumnFeature ;
 FeatureAttribute ::= name::String relevanceForMining::Boolean attributeType::DataType belongsToConcept::Concept (correspondsToColumns::Column)+ ;
View ::= number::Integer file::String dbConnectString::String user::String (hasColumn::Column)+ (hasKey::Key)+ correspondsToConcept::Concept correspondsToRelationShip::RelationShip ;
Snapshot ::= number::Integer file::String dbConnectString::String user::String (hasColumn::Column)+ (hasKey::Key)+ correspondsToConcept::Concept correspondsToRelationShip::RelationShip ;
DataType ::= DomainDataType ;
 DataType ::= attribute::Attribute ;
--------------------metamodels::PASSI.bgf--------------------
Ressource ::= Name::String ;
FIPA-platform Task ::= fipa_platform_Agent::Solution Domain/FIPA-Platform Agent task::Agency Domain/Task ;
AIP ::= Name::String performative::Agency Domain/Performative ;
Message ::= communication::Agency Domain/Communication Comm_Act::Agency Domain/Performative ;
Communication ::= Name::String Exchanged Knowledge::Problem Domain/Ontology message::Agency Domain/Message aip::Agency Domain/AIP ;
Role ::= agentR::Agency Domain/Agent (service::Solution Domain/Service)+ (task::Agency Domain/Task)+ (scenario::Problem Domain/Scenario)+ (communication::Agency Domain/Communication)+ ;
Task ::= Name::String fipa_platform_TaskT::Solution Domain/FIPA-platform Task ;
Agent ::= Name::String Knowledge::Problem Domain/Ontology fipa_platform_AgentA::Solution Domain/FIPA-Platform Agent role::Agency Domain/Role (resource::Problem Domain/Ressource)+ (non_functionnal_Requirement::Problem Domain/Non functionnal Requirement)+ (requirement::Problem Domain/Requirement)+ ;
Performative ::= aip::Agency Domain/AIP ;
FIPA-Platform Agent ::= (fipa_platform_Task::Solution Domain/FIPA-platform Task)+ agent::Agency Domain/Agent ;
--------------------metamodels::MonitorProgram.bgf--------------------
IntegerExp ::= symbol::Integer ;
Direction ::= (in::ε) | (out::ε) ;
VariableDeclaration ::= Parameter ;
 VariableDeclaration ::= type::Type initialValue::Expression structure::Structure ;
ExpressionStat ::= expression::Expression ;
ProcedureCallExp ::= (arguments::Expression)+ ;
OperatorCallExp ::= right::Expression ;
ConditionalStat ::= condition::Expression (thenStats::Statement)+ (elseStats::Statement)+ ;
Type ::= name::String ;
Monitor ::= program::Program ;
Parameter ::= direction::Direction procedure::Procedure ;
WhileStat ::= condition::Expression (doStats::Statement)+ ;
BooleanExp ::= symbol::Boolean ;
Program ::= (monitors::Monitor)+ ;
AttributeCallExp ::= source::Expression name::String ;
Procedure ::= container::ProcContainerElement (parameters::Parameter)+ (statements::Statement)+ ;
AssignmentStat ::= target::VariableExp value::Expression ;
VariableExp ::= declaration::VariableDeclaration ;
--------------------metamodels::MySQL.bgf--------------------
Table ::= (columns::Column)+ database::DataBase ;
DataBase ::= (tables::Table)+ ;
EnumColumn ::= enumSet::EnumSet ;
Column ::= IntegerColumn ;
 Column ::= EnumColumn ;
 Column ::= type::String isPrimaryKey::Boolean null::Boolean defaultValue::String comment::String table::Table ;
EnumItem ::= enumSet::EnumSet ;
IntegerColumn ::= isAutoIncrement::Boolean ;
EnumSet ::= (enumItems::EnumItem)+ ;
--------------------metamodels::News.bgf--------------------
Date ::= eDay::DayKind day::Integer month::Integer year::Integer hours::Integer minutes::Integer seconds::Integer ;
Category ::= value::String ;
Newspaper ::= language::String copyright::String pubDate::Date category::Category (news::News)+ ;
News ::= author::String comments::String pubDate::Date category::Category newspaper::Newspaper ;
DayKind ::= (Monday::ε) | (Tuesday::ε) | (Wednesday::ε) | (Thursday::ε) | (Friday::ε) | (Saturday::ε) | (Sunday::ε) ;
--------------------metamodels::ODP-CV.bgf--------------------
StreamInterfaceSignature ::= (strisig_to_fsig::FlowSignature)+ ;
Behaviour ::= specifier_bh::ComputationalTemplate owner_bh::ComputationalObject (bh_to_a::Action)+ ;
StreamInterface ::= owner_i::ComputationalObject i_to_bd::Binding specifier_i::ComputationalInterfaceTemplate (i_to_ina::Interaction)+ ;
Action ::= InternalAction ;
 Action ::= Interaction ;
 Action ::= (constrainer_ec::EnvironmentContract)+ (changedState::State)+ specifier_a::ActionTemplate a_to_bh::Behaviour ;
TerminationSignature ::= tersig_to_intsig::InterrogationSignature ;
InternalAction ::= (constrainer_ec::EnvironmentContract)+ (changedState::State)+ specifier_a::ActionTemplate a_to_bh::Behaviour ;
OperationInterface ::= owner_i::ComputationalObject i_to_bd::Binding specifier_i::ComputationalInterfaceTemplate (i_to_ina::Interaction)+ ;
State ::= startState::State endState::State (changer::Action)+ st_to_co::ComputationalObject ;
SignalInterface ::= owner_i::ComputationalObject i_to_bd::Binding specifier_i::ComputationalInterfaceTemplate (i_to_ina::Interaction)+ ;
AnnouncementSignature ::= ansig_to_optisig::OperationInterfaceSignature ;
InterrogationSignature ::= intsig_to_optisig::OperationInterfaceSignature (intsig_to_tersig::TerminationSignature)+ ;
ComputationalObject ::= BindingObject ;
 ComputationalObject ::= (co_to_i::Interface)+ co_to_bh::Behaviour specifier_co::ComputationalObjectTemplate co_to_st::State ;
Invocation ::= inv_to_ter::Termination inv_to_opt::Operation ;
ActionTemplate ::= (at_to_a::Action)+ at_to_isig::InteractionSignature ;
SignalSignature ::= ssig_to_sgisig::SignalInterfaceSignature ;
Flow ::= ina_to_i::Interface ;
ComputationalObjectTemplate ::= (cot_to_co::ComputationalObject)+ (part_provide::ComputationalInterfaceTemplate)+ (part_request::ComputationalInterfaceTemplate)+ ;
FlowSignature ::= fsig_to_strisig::StreamInterfaceSignature ;
Parameter ::= param_to_isig::InteractionSignature ;
Signal ::= ina_to_i::Interface ;
Interrogation ::= int_to_ter::Termination ;
Announcement ::= opt_to_inv::Invocation ;
SignalInterfaceSignature ::= (sgisig_to_ssig::SignalSignature)+ ;
OperationInterfaceSignature ::= (optisig_to_ansig::AnnouncementSignature)+ (optisig_to_intsig::InterrogationSignature)+ ;
Binding ::= bd_to_i::Interface ;
EnvironmentContract ::= (ec_to_a::Action)+ specifier_ec::ComputationalTemplate ;
Termination ::= owner_ter::Interrogation ter_to_inv::Invocation ;
BindingObject ::= (co_to_i::Interface)+ co_to_bh::Behaviour specifier_co::ComputationalObjectTemplate co_to_st::State ;
ComputationalInterfaceTemplate ::= (cit_to_i::Interface)+ (aggregate_provide::ComputationalObjectTemplate)+ (aggregate_request::ComputationalObjectTemplate)+ cit_to_intsig::InterfaceSignature ;
--------------------metamodels::ODP-EV.bgf--------------------
EO_A_R ::= (eoarSubject::EnterpriseObject)+ (eoarSubjectRole::Role)+ (eoarGovernor::AssigmentPolicy)+ ;
PolicyValue ::= pvValue::PolicyEnvelope ;
FieldOfApplication ::= faEnterpriseSpecifications::EnterpriseSpecification ;
Obligation ::= (ruViolation::Violation)+ ;
Behaviour ::= Violation ;
 Behaviour ::= (beObjectives::Objective)+ (beSpecifiers::Contract)+ (beActions::Action)+ beIdentifier::Role bePolicyEnvelope::PolicyEnvelope beConstrainer::PolicyEnvelope (bePolicyConstrainer::Policy)+ (bePolicy::Policy)+ ;
Evaluation ::= (aaAccountableParty::Party)+ ;
Declaration ::= (aaAccountableParty::Party)+ ;
Prescription ::= (aaAccountableParty::Party)+ ;
Objective ::= objFulfiller::ODPSystem objSpecifier::Contract (objRefiners::Objective)+ objRefinement::Objective (objAchievers::Process)+ (objFulfillers::Behaviour)+ ;
Role ::= InterfaceRole ;
 Role ::= roleBehaviour::Behaviour roleSpecifier::Community (rolefillers::EnterpriseObject)+ (roleConstrainer::Policy)+ (roleEOAR::EO_A_R)+ ;
Action ::= AccountableAction ;
 Action ::= (actBehaviours::Behaviour)+ (actArtefactRoleFillers::EnterpriseObject)+ (actResourceRoleFillers::EnterpriseObject)+ (actActorRoleFillers::EnterpriseObject)+ ;
Commitment ::= (aaAccountableParty::Party)+ ;
Scope ::= scOdpSystem::ODPSystem ;
Policy ::= PolicyEnvelope ;
 Policy ::= PolicyValue ;
 Policy ::= AssigmentPolicy ;
 Policy ::= poSpecifier::Contract poOwner::Community (poProcess::Process)+ (poBehaviour::Behaviour)+ (poChanger::Behaviour)+ (poRole::Role)+ (poEnterpriseObject::EnterpriseObject)+ ;
Contract ::= ctPolicies::Policy ctObjective::Objective (ctBehaviours::Behaviour)+ ;
Permission ::= (ruViolation::Violation)+ ;
InterfaceRole ::= roleBehaviour::Behaviour roleSpecifier::Community (rolefillers::EnterpriseObject)+ (roleConstrainer::Policy)+ (roleEOAR::EO_A_R)+ ;
AssigmentPolicy ::= (apEOAR::EO_A_R)+ ;
Process ::= (prObjectives::Objective)+ (prDetails::Step)+ prRefinement::Step (prConstrainer::Policy)+ ;
Step ::= Action ;
 Step ::= (stGraphs::Process)+ stAbstraction::Process ;
ODPSystem ::= odpBehaviour::Scope (odpObjectives::Objective)+ odpSpecifier::EnterpriseSpecification ;
Prohibition ::= (ruViolation::Violation)+ ;
Community ::= coAbstraction::CommunityObject (coMembers::EnterpriseObject)+ (coCommunityRoles::Role)+ (coPolicy::Policy)+ ;
CommunityObject ::= cobjRefinement::Community ;
Delegation ::= dlgEOPD::EO_P_D ;
Party ::= (ptyAccountableAction::AccountableAction)+ ptyEOPD::EO_P_D ;
Violation ::= vioProhibitor::Rule ;
PolicyEnvelope ::= pePolicySetter::Behaviour peBehaviour::Behaviour (peValues::PolicyValue)+ peCurrentValue::PolicyValue ;
EnterpriseSpecification ::= (esDescribedSystems::ODPSystem)+ esContext::FieldOfApplication ;
EO_P_D ::= eopdAgent::EnterpriseObject eopdPrincipal::Party eopdAction::Delegation ;
Authorisation ::= (ruViolation::Violation)+ ;
EnterpriseObject ::= ODPSystem ;
 EnterpriseObject ::= Party ;
 EnterpriseObject ::= CommunityObject ;
 EnterpriseObject ::= (eoConfigurations::Community)+ (eoRoles::Role)+ (eoArtefactActions::Action)+ (eoResourceActions::Action)+ (eoActorActions::Action)+ (eoPolicy::Policy)+ (eoEOAR::EO_A_R)+ eoEOPD::EO_P_D ;
--------------------metamodels::ODP-IV.bgf--------------------
StaticSchema ::= locationTime::Double (SS_IO::InformationObject)+ ;
InformationObject ::= (describer::StaticSchema)+ (IO_IOT::InformationObjectTemplate)+ (IO_IOTy::InformationObjectType)+ (IO_A::Action)+ IO_S::State ;
Action ::= (effect::StateChange)+ (A_AT::ActionTemplate)+ (participant::InformationObject)+ (A_ATy::ActionType)+ ;
InformationObjectType ::= (IOTy_IO::InformationObject)+ (IOTy_constrainer::InvariantSchema)+ ;
InformationObjectTemplate ::= (IOT_IO::InformationObject)+ (IOT_constrainer::InvariantSchema)+ ;
StateChange ::= startState::State endState::State (specifier::DynamicSchema)+ (cause::Action)+ (SC_constrainer::InvariantSchema)+ ;
State ::= change::StateChange causeSC::StateChange S_IO::InformationObject (S_constrainer::InvariantSchema)+ ;
InvariantSchema ::= (constrainer_AT::ActionTemplate)+ (constrainer_ATy::ActionType)+ (constrainer_SC::StateChange)+ (constrainer_S::State)+ (constrainer_IOT::InformationObjectTemplate)+ (constrainer_IOTy::InformationObjectType)+ ;
ActionTemplate ::= (AT_A::Action)+ (AT_constrainer::InvariantSchema)+ ;
ActionType ::= (ATy_A::Action)+ (ATy_constrainer::InvariantSchema)+ ;
DynamicSchema ::= (dsStateChange::StateChange)+ ;
--------------------metamodels::ODP-NV.bgf--------------------
NamingAuthority ::= (coDomain::Domain)+ ;
EngineeringInterfaceReferenceManagementPolicy ::= (eirmpManagementDomain::EngineeringInterfaceReferenceManagementDomain)+ ;
Cluster ::= clusterManager::ClusterManager (clusterBeos::BEO)+ ;
ProtocolObject ::= type::String poChannel::Channel poBinder::Binder (poInterceptor::Interceptor)+ (poBoundProtocolObject::ProtocolObject)+ ;
AddressingAuthority ::= (coDomain::Domain)+ ;
ClientServerChannel ::= chStub::Stub chBinder::Binder chPObject::ProtocolObject (chInterceptor::Interceptor)+ chEndPoint::BEO ;
ClusterManager ::= (clusters::Cluster)+ (clustermanagerBeos::BEO)+ capsuleManager::CapsuleManager ;
Nucleus ::= (otherEngObjects::EngineeringObject)+ (beos::BEO)+ ;
AddressingDomain ::= parentDomain::Domain (subDomain::Domain)+ domControllingObject::ControllingObject (domMember::ControlledObject)+ ;
EngineeringObject ::= Nucleus ;
 EngineeringObject ::= CapsuleManager ;
 EngineeringObject ::= ClusterManager ;
 EngineeringObject ::= BEO ;
 EngineeringObject ::= Stub ;
 EngineeringObject ::= Binder ;
 EngineeringObject ::= ProtocolObject ;
 EngineeringObject ::= Interceptor ;
 EngineeringObject ::= ControllingObject ;
 EngineeringObject ::= ControlledObject ;
 EngineeringObject ::= nodeManager::Nucleus ;
ControllingObject ::= SecurityAuthority ;
 ControllingObject ::= ManagementAuthority ;
 ControllingObject ::= AddressingAuthority ;
 ControllingObject ::= NamingAuthority ;
 ControllingObject ::= (coDomain::Domain)+ ;
Stub ::= stChannel::Channel stBinder::Binder stBeo::BEO ;
ControlledObject ::= (cdoDomain::Domain)+ ;
Capsule ::= (otherEngObjects::EngineeringObject)+ capsuleManager::CapsuleManager (clusterManagers::ClusterManager)+ (clusters::Cluster)+ ;
EngineeringInterfaceReferenceManagementDomain ::= (eirmdReference::EngineeringInterfaceReference)+ eirmdManagementPolicy::EngineeringInterfaceReferenceManagementPolicy ;
BEO ::= beoNodeManager::Nucleus (locallyBoundObjects::BEO)+ (localbinds::BEO)+ beoManager::ClusterManager (beoChannel::Channel)+ (beoStub::Stub)+ ;
Binder ::= bdChannel::Channel chBinder::Stub (bdProtocolObject::ProtocolObject)+ ;
ManagementDomain ::= parentDomain::Domain (subDomain::Domain)+ domControllingObject::ControllingObject (domMember::ControlledObject)+ ;
EngineeringInterfaceReference ::= eirManagementDomain::EngineeringInterfaceReferenceManagementDomain ;
Interceptor ::= intChannel::Channel intProtocolObject::ProtocolObject ;
SecurityDomain ::= parentDomain::Domain (subDomain::Domain)+ domControllingObject::ControllingObject (domMember::ControlledObject)+ ;
Domain ::= SecurityDomain ;
 Domain ::= ManagementDomain ;
 Domain ::= AddressingDomain ;
 Domain ::= NamingDomain ;
 Domain ::= parentDomain::Domain (subDomain::Domain)+ domControllingObject::ControllingObject (domMember::ControlledObject)+ ;
Channel ::= ClientServerChannel ;
 Channel ::= chStub::Stub chBinder::Binder chPObject::ProtocolObject (chInterceptor::Interceptor)+ chEndPoint::BEO ;
SecurityAuthority ::= (coDomain::Domain)+ ;
Node ::= location::String manager::Nucleus (capsules::Capsule)+ ;
ManagementAuthority ::= (coDomain::Domain)+ ;
CapsuleManager ::= (cmClusterManagers::ClusterManager)+ ;
--------------------metamodels::ODP-TV.bgf--------------------
TechnologyObject ::= (implStandard::ImplementableStandard)+ (toImplementation::Implementation)+ ;
ImplementableStandard ::= (techObject::TechnologyObject)+ ;
IXIT ::= (ixitImplementation::Implementation)+ ;
Implementation ::= (implIXIT::IXIT)+ (implProduct::TechnologyObject)+ ;
--------------------metamodels::OWL.bgf--------------------
AllValuesFromRestriction ::= OWLAllValuesFromDataRange::OWLDataRange OWLAllValuesFromClass::OWLClass ;
CardinalityRestriction ::= OWLCardinality::TypedLiteral ;
List ::= first::RDFSResource rest::List (originalList::List)+ ;
RDFStatement ::= OWLStatement ;
 RDFStatement ::= reificationKind::ReificationKind (graph::RDFGraph)+ RDFpredicate::RDFProperty RDFobject::RDFSResource RDFsubject::RDFSResource (nameForReification::URIReference)+ (document::Document)+ ;
Namespace ::= (document::Document)+ namespaceURIRef::URIReference (namespaceDefinition::NamespaceDefinition)+ ;
Document ::= (localName::LocalName)+ (xmlBase::Namespace)+ (namespaceDefinition::NamespaceDefinition)+ (statement::RDFStatement)+ ;
TransitiveProperty ::= OWLInverseOf::OWLObjectProperty (inverseProperty::OWLObjectProperty)+ ;
Individual ::= (OWLDifferentFrom::Individual)+ (differentIndividual::Individual)+ (OWLSameAs::Individual)+ (sameIndividual::Individual)+ (allDifferent::OWLAllDifferent)+ (enumeratedClass::EnumeratedClass)+ (restrictionClass::HasValueRestriction)+ ;
RDFSClass ::= RDFSDataType ;
 RDFSClass ::= OWLClass ;
 RDFSClass ::= OWLDataRange ;
 RDFSClass ::= (subClassOf::RDFSClass)+ (superClass::RDFSClass)+ (typedResource::RDFSResource)+ (propertyForDomain::RDFProperty)+ (propertyForRange::RDFProperty)+ ;
OWLObjectProperty ::= InverseFunctionalProperty ;
 OWLObjectProperty ::= SymmetricProperty ;
 OWLObjectProperty ::= TransitiveProperty ;
 OWLObjectProperty ::= OWLInverseOf::OWLObjectProperty (inverseProperty::OWLObjectProperty)+ ;
EnumeratedClass ::= (OWLOneOf::Individual)+ ;
XMLLiteral ::= datatypeURI::URIReference (cardinalityRestriction::CardinalityRestriction)+ (minCardinalityRestriction::MinCardinalityRestriction)+ (maxCardinalityRestriction::MaxCardinalityRestriction)+ ;
LocalName ::= name::String document::Document (uriRef::URIReference)+ ;
HasValueRestriction ::= OWLHasLiteralValue::RDFSLiteral OWLHasIndividualValue::Individual ;
OWLClass ::= IntersectionClass ;
 OWLClass ::= UnionClass ;
 OWLClass ::= ComplementClass ;
 OWLClass ::= EnumeratedClass ;
 OWLClass ::= OWLRestriction ;
 OWLClass ::= OWLAllDifferent ;
 OWLClass ::= isDeprecated::Boolean (OWLequivalentClass::OWLClass)+ (equivalentClass::OWLClass)+ (OWLdisjointWith::OWLClass)+ (disjointClass::OWLClass)+ (intersectionClass::IntersectionClass)+ (unionClass::UnionClass)+ (complementClass::ComplementClass)+ (allValuesFromRestrictionClass::AllValuesFromRestriction)+ (someValuesFromRestrictionClass::SomeValuesFromRestriction)+ ;
MinCardinalityRestriction ::= OWLMinCardinality::TypedLiteral ;
RDFSLiteral ::= PlainLiteral ;
 RDFSLiteral ::= TypedLiteral ;
 RDFSLiteral ::= lexicalForm::String (restrictionClass::HasValueRestriction)+ (dataRange::OWLDataRange)+ ;
OWLDataRange ::= datatype::RDFSDataType (OWLOneOf::RDFSLiteral)+ someValuesFromRestrictionClass::SomeValuesFromRestriction allValuesFromRestrictionClass::AllValuesFromRestriction ;
NamespaceDefinition ::= namespacePrefix::String document::Document namespace::Namespace ;
RDFSResource ::= Document ;
 RDFSResource ::= RDFGraph ;
 RDFSResource ::= List ;
 RDFSResource ::= Container ;
 RDFSResource ::= RDFProperty ;
 RDFSResource ::= RDFStatement ;
 RDFSResource ::= URIReferenceNode ;
 RDFSResource ::= BlankNode ;
 RDFSResource ::= RDFSClass ;
 RDFSResource ::= RDFSLiteral ;
 RDFSResource ::= OWLOntology ;
 RDFSResource ::= OWLUniverse ;
 RDFSResource ::= Individual ;
 RDFSResource ::= (uriRef::URIReference)+ (subjectStatement::RDFStatement)+ (objectStatement::RDFStatement)+ (label::PlainLiteral)+ (type::RDFSClass)+ (comment::PlainLiteral)+ (seeAlso::RDFSResource)+ (referringResource::RDFSResource)+ (isDefinedBy::RDFSResource)+ (definedResource::RDFSResource)+ (member::RDFSResource)+ (container::RDFSResource)+ (list::List)+ ;
OWLStatement ::= (ontology::OWLOntology)+ (owlGraph::OWLGraph)+ ;
InverseFunctionalProperty ::= OWLInverseOf::OWLObjectProperty (inverseProperty::OWLObjectProperty)+ ;
OWLAnnotationProperty ::= (predicateStatement::RDFStatement)+ (subPropertyOf::RDFProperty)+ (superProperty::RDFProperty)+ (domain::RDFSClass)+ (range::RDFSClass)+ (propertyRestriction::OWLRestriction)+ (ontology::OWLOntology)+ ;
PlainLiteral ::= language::String labeledResource::RDFSResource commentedResource::RDFSResource ;
RDFSDataType ::= (dataRange::OWLDataRange)+ ;
URIReference ::= UniformResourceIdentifier ;
 URIReference ::= uri::UniformResourceIdentifier resource::RDFSResource (literal::TypedLiteral)+ namedGraph::RDFGraph (reifiedStatement::RDFStatement)+ fragmentIdentifier::LocalName namespace::Namespace ;
ReificationKind ::= (none::ε) | (reifiedOnly::ε) | (reified::ε) ;
OWLDatatypeProperty ::= isDeprecated::Boolean (OWLEquivalentProperty::Property)+ (equivalentProperty::Property)+ ;
OWLAllDifferent ::= OWLDistinctMembers::Individual ;
RDFGraph ::= OWLGraph ;
 RDFGraph ::= graphName::URIReference (statement::RDFStatement)+ ;
FunctionalProperty ::= isDeprecated::Boolean (OWLEquivalentProperty::Property)+ (equivalentProperty::Property)+ ;
BlankNode ::= nodeId::String ;
OWLOntology ::= (owlUniverse::OWLUniverse)+ (OWLPriorVersion::OWLOntology)+ (newerOntology::OWLOntology)+ (OWLIncompatibleWith::OWLOntology)+ (incompatibleOntology::OWLOntology)+ (OWLImports::OWLOntology)+ (importingOntology::OWLOntology)+ (owlGraph::OWLGraph)+ (owlStatement::OWLStatement)+ (versionInfo::RDFSLiteral)+ ;
ComplementClass ::= (OWLComplementOf::OWLClass)+ ;
IntersectionClass ::= (OWLIntersectionOf::OWLClass)+ ;
SymmetricProperty ::= OWLInverseOf::OWLObjectProperty (inverseProperty::OWLObjectProperty)+ ;
SomeValuesFromRestriction ::= OWLSomeValuesFromClass::OWLClass OWLSomeValuesFromDataRange::OWLDataRange ;
UniformResourceIdentifier ::= name::String (uriRef::URIReference)+ ;
OWLGraph ::= (ontology::OWLOntology)+ (owlStatement::OWLStatement)+ ;
UnionClass ::= (OWLUnionOf::OWLClass)+ ;
OWLUniverse ::= OWLClass ;
 OWLUniverse ::= OWLAnnotationProperty ;
 OWLUniverse ::= OWLOntologyProperty ;
 OWLUniverse ::= Property ;
 OWLUniverse ::= Individual ;
 OWLUniverse ::= OWLDataRange ;
 OWLUniverse ::= (ontology::OWLOntology)+ ;
RDFProperty ::= OWLAnnotationProperty ;
 RDFProperty ::= OWLOntologyProperty ;
 RDFProperty ::= Property ;
 RDFProperty ::= (predicateStatement::RDFStatement)+ (subPropertyOf::RDFProperty)+ (superProperty::RDFProperty)+ (domain::RDFSClass)+ (range::RDFSClass)+ (propertyRestriction::OWLRestriction)+ ;
OWLOntologyProperty ::= (predicateStatement::RDFStatement)+ (subPropertyOf::RDFProperty)+ (superProperty::RDFProperty)+ (domain::RDFSClass)+ (range::RDFSClass)+ (propertyRestriction::OWLRestriction)+ (ontology::OWLOntology)+ ;
OWLRestriction ::= HasValueRestriction ;
 OWLRestriction ::= AllValuesFromRestriction ;
 OWLRestriction ::= SomeValuesFromRestriction ;
 OWLRestriction ::= CardinalityRestriction ;
 OWLRestriction ::= MaxCardinalityRestriction ;
 OWLRestriction ::= MinCardinalityRestriction ;
 OWLRestriction ::= OWLOnProperty::RDFProperty ;
TypedLiteral ::= XMLLiteral ;
 TypedLiteral ::= datatypeURI::URIReference (cardinalityRestriction::CardinalityRestriction)+ (minCardinalityRestriction::MinCardinalityRestriction)+ (maxCardinalityRestriction::MaxCardinalityRestriction)+ ;
MaxCardinalityRestriction ::= OWLMaxCardinality::TypedLiteral ;
URIReferenceNode ::= (uriRef::URIReference)+ (subjectStatement::RDFStatement)+ (objectStatement::RDFStatement)+ (label::PlainLiteral)+ (type::RDFSClass)+ (comment::PlainLiteral)+ (seeAlso::RDFSResource)+ (referringResource::RDFSResource)+ (isDefinedBy::RDFSResource)+ (definedResource::RDFSResource)+ (member::RDFSResource)+ (container::RDFSResource)+ (list::List)+ ;
--------------------metamodels::OpenConf.owl.bgf--------------------
Email_Template ::= define::Event ;
Proceedings_Publisher ::= (publisherOf::Thing)+ technicallyOrganises::Thing ;
Conference_proceedings ::= has_an_ISBN::String has_a_publisher::Publisher has_a_volume::String ;
Science_Worker ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person hasConflictOfInterest::Document email::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasMail::String worksForCompany::String hasAffiliation::String hasFirstName::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String ;
TraditionalLecture ::= hasAcronym::String ;
RadioCommunicationsTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
AccommodationPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
SignalProcessingTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
TwoLevelConference ::= is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country isOrganizedBy::OrganizingCommittee annualOrder::Integer takesPlace::Location hasAcronym::String hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
pc_meeting ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location ;
SessionChair ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person hasConflictOfInterest::Document email::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasMail::String worksForCompany::String hasAffiliation::String hasFirstName::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String ;
SteeringCommittee ::= organizes::Conference ;
summary_of_reviews ::= is_created_in::Activity ;
Working_event ::= Tutorial ;
 Working_event ::= hasTopic::Topic hasAdministrativeEvent::Administrative_event ;
Co-author ::= co-writePaper::Paper ;
User ::= Committee ;
 User ::= Administrator ;
 User ::= recieve::Document (create::Thing)+ submit::Document ;
Short_paper ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
Advocated_Paper ::= to_advocate_by::Advocate ;
GovernmentOrganization ::= isProviderOf::Sponsorship ;
Tutorial_Abstract ::= (is_the_1th_part_of::Thing)+ part_of_article::article ;
Main_office ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
CallForManuscripts ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
MealMenu ::= isMenuOf::MealEvent ;
IndexOfAuthors ::= isProducedBy::Chair ;
Workshop_Session ::= hasAssignedPaper::AcceptedPaper room::String isAssociatedTo::Slot hasChair::Chair ;
Paper_Author ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person hasConflictOfInterest::Document email::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasMail::String worksForCompany::String hasAffiliation::String hasFirstName::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String ;
Conference_Proceedings ::= (includes::Thing)+ ;
group_email ::= goes_through::Activity is_sent_to::human is_created_in::Activity structure_created_by::human has_author::human gives_classification::classification article_written_by::Author has_reviewer::Reviewer has_abstract::Abstract ;
Publisher ::= issues::Conference_proceedings ;
Full_Paper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::Boolean Keywords::String hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
OutsideReferee ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person hasConflictOfInterest::Document email::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasMail::String worksForCompany::String hasAffiliation::String hasFirstName::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String ;
Assigned_Paper ::= Evaluated_Paper ;
 Assigned_Paper ::= hasReviewer::Possible_Reviewer ;
upper_tier_reviewing_process ::= is_performed_by::human ;
OperatingTopicsystems ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Location ::= locationOf::Event ;
GeneralCoChair ::= organizes::Conference ;
PaperSubmissionChair ::= organizes::Conference ;
Chair_PC ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person hasConflictOfInterest::Document email::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasMail::String worksForCompany::String hasAffiliation::String hasFirstName::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String ;
Active_conference_participant ::= gives_presentations::Presentation ;
Short_Paper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::Boolean Keywords::String hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
SatelliteAndSpaceCommunicationsTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
WorkShop ::= (has_result::Thing)+ sent_by::Person is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime hasTopic::Topic expectedAttendance::Integer isPartOf::Conference ;
Plenary_lecture ::= hasAcronym::String ;
Organizing_committee ::= was_an_organizing_committee_of::Conference_volume ;
MobileComputingTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Registration_of_participants_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Committee_member ::= Co-chair ;
 Committee_member ::= was_a_member_of::Committee ;
Deadline_hotel_reservation ::= done_till::date ;
Camera_Ready_Paper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::Boolean Keywords::String hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
NGO ::= isProviderOf::Sponsorship ;
CommunicationTheoryTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
AcademicEvent ::= TalkEvent ;
 AcademicEvent ::= OrganizationalMeeting ;
 AcademicEvent ::= PaperPresentation ;
 AcademicEvent ::= hasCall::Call ;
Mailing_list ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
CallForPapers ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
CommunicationsTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
SecurityTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
PaperAbstract ::= isAbstractOf::Paper abstractIsSubmittedBy::ContactAuthor ;
DiningPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
Author ::= AuthorNotReviewer ;
 Author ::= Co-author ;
 Author ::= Corresponding_Author ;
 Author ::= Author_cd_proceedings_included ;
 Author ::= Lecturer ;
 Author ::= Plenary_lecture_speaker ;
 Author ::= Tutorial_speaker ;
 Author ::= Author_book_proceedings_included ;
 Author ::= ContactAuthor ;
 Author ::= Contact_Author ;
 Author ::= Presenter ;
 Author ::= submitPaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing submitsPaper::Paper writePaper::Paper writes_Paper::Paper ;
Paper_Review ::= is_Candidate_for_Award::Long_bool appropriate_length::Long_bool has_Categorization::Paper_Categorization has_Overall::Overall_Value has_Reccommendation::Reccommendation Review_made_by::Reviewer Comments_for_Author::String Comments_for_Program_Committee::String ;
ContactAuthor ::= submitsAbstract::PaperAbstract ;
ConferenceProgram ::= isProgramOf::Conference consistsOf::Slot ;
Admin_Role ::= assigned_by::Administrator ;
Poster_Session ::= hasAssignedPaper::AcceptedPaper room::String isAssociatedTo::Slot hasChair::Chair ;
ComputerArchitectureTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
WorkshopTutorialChair ::= organizes::Conference ;
OrganizingCommittee ::= ProgramCoChair ;
 OrganizingCommittee ::= PublicationsChair ;
 OrganizingCommittee ::= WorkshopTutorialChair ;
 OrganizingCommittee ::= RegistrationChair ;
 OrganizingCommittee ::= StudentAdvocate ;
 OrganizingCommittee ::= FinanceChair ;
 OrganizingCommittee ::= PaperSubmissionChair ;
 OrganizingCommittee ::= PublicityWebChair ;
 OrganizingCommittee ::= SteeringCommittee ;
 OrganizingCommittee ::= GeneralCoChair ;
 OrganizingCommittee ::= organizes::Conference ;
OrganizationalMeeting ::= hasCall::Call ;
PersonalReviewHistory ::= isReviewHistoryOf::Reviewer ;
conference_setup ::= sets_member::human is_made_by::human includes_topic::Topic sets_date::date sets_URL::URL ;
Member_PC ::= expertOn::Topic reviewes::Contribution ;
Web_Site ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
RejectedPaper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::Boolean Keywords::String hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
ParallelAndDistributedComputingTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Advocate ::= will_advocate::Advocated_Paper ;
Research_Topic ::= define::Event ;
 Research_Topic ::= topicCoveredBy::Thing ;
Reviewing_event ::= follows::Administrative_event parallel_with::Administrative_event ;
MultimediaTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
CryptographyTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Tutorial ::= hasTopic::Topic hasAdministrativeEvent::Administrative_event ;
Conference_volume ::= has_parts::Conference_part has_workshops::Workshop has_tracks::Track has_tutorials::Tutorial has_a_commtitee::Committee has_a_steering_committee::Steering_committee has_an_organizing_committee::Organizing_committee has_important_dates::Important_dates has_contributions::Conference_contribution has_a_location::String has_a_program_committee::Program_committee ;
Regular ::= earlyRegistration::Boolean ;
ProgramCommittee ::= hasProgramCommitteeMember::ProgramCommitteeMember hasMember::ProgramCommitteeMember ;
Review ::= Meta-Review ;
 Review ::= Positive_Review ;
 Review ::= Negative_Review ;
 Review ::= Neutral_Review ;
 Review ::= writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::Activity review_written_by::Reviewer reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer containsEvaluation::Evaluation rates::Paper isWritenBy::Reviewer ;
Transparency ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
Registation_deadline ::= done_till::date ;
Person ::= ConferenceMember ;
 Person ::= ExternalReviewer ;
 Person ::= User ;
 Person ::= Conference_participant ;
 Person ::= Conference_contributor ;
 Person ::= Committee_member ;
 Person ::= Conference_applicant ;
 Person ::= Track-workshop_chair ;
 Person ::= Scholar ;
 Person ::= Participant ;
 Person ::= Member_PC ;
 Person ::= Chair_PC ;
 Person ::= Science_Worker ;
 Person ::= Assistant ;
 Person ::= Volunteer ;
 Person ::= participant ;
 Person ::= ConferenceChair ;
 Person ::= Attendee ;
 Person ::= SessionChair ;
 Person ::= TPCMember ;
 Person ::= Paper_Author ;
 Person ::= Conference_Participant ;
 Person ::= Agency_Staff_Member ;
 Person ::= Possible_Reviewer ;
 Person ::= Student ;
 Person ::= Delegate ;
 Person ::= Sponsor ;
 Person ::= OutsideReferee ;
 Person ::= ConferenceAttendant ;
 Person ::= Chairman ;
 Person ::= Organizer ;
 Person ::= ProgramCommitteeMember ;
 Person ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person hasConflictOfInterest::Document email::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasMail::String worksForCompany::String hasAffiliation::String hasFirstName::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String ;
Head_Role ::= assigned_by::Administrator ;
ProgramCommitteeMember ::= ProgramCommitteeChair ;
 ProgramCommitteeMember ::= Chair ;
 ProgramCommitteeMember ::= memberOfProgramCommittee::ProgramCommittee maxPapers::Integer addedBy::Administrator isMemberOf::ProgramCommittee hasPassword::String ;
Invited_Talk_Abstract ::= (is_the_1th_part_of::Thing)+ part_of_article::article ;
Poster ::= is_submitted_at::Conference_volume ;
 Poster ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
RegistrationChair ::= organizes::Conference ;
Invitation_letter ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
Paper ::= PaperFullVersion ;
 Paper ::= Invited_Paper ;
 Paper ::= Short_Paper ;
 Paper ::= Full_Paper ;
 Paper ::= Accepted_Paper ;
 Paper ::= Rejected_Paper ;
 Paper ::= Undecided_Paper ;
 Paper ::= ActivePaper ;
 Paper ::= PendingPaper ;
 Paper ::= WithdrawnPaper ;
 Paper ::= RejectedPaper ;
 Paper ::= PublishedPaper ;
 Paper ::= Camera_Ready_Paper ;
 Paper ::= Workshop_Paper ;
 Paper ::= Industrial_Paper ;
 Paper ::= Conference_Paper ;
 Paper ::= Submitted_Paper ;
 Paper ::= Poster_Paper ;
 Paper ::= Regular_Paper ;
 Paper ::= Demo_Paper ;
 Paper ::= AcceptedPaper ;
 Paper ::= Abstract ;
 Paper ::= PaperAbstract ;
 Paper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::Boolean Keywords::String hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Volunteer ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person hasConflictOfInterest::Document email::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasMail::String worksForCompany::String hasAffiliation::String hasFirstName::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String ;
Conference_announcement ::= has_authors::Person has_a_date_of_issue::date ;
WithdrawnPaper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::Boolean Keywords::String hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Program_Committee_Chair ::= is_author_of::article performs_activity::Activity is_employed_in::institute has_topic_of_interest::Topic supervises::Activity e-mail::String last_name::String first_name::String ;
PCMembersList ::= isProducedBy::Chair ;
Program_committee ::= was_a_program_committee_of::Conference_volume ;
paper_assignment ::= Manual_Paper_Assignment ;
 paper_assignment ::= Automatic_Paper_Assignment ;
 paper_assignment ::= assign_paper::Program_Committee_member is_performed_by::human ;
Lecture ::= Plenary_lecture ;
 Lecture ::= QualitatvieLecture ;
 Lecture ::= TraditionalLecture ;
 Lecture ::= hasAcronym::String ;
Committee ::= Program_committee ;
 Committee ::= Organizing_committee ;
 Committee ::= Steering_committee ;
 Committee ::= has_members::Committee_member was_a_committee_of::Conference_volume has_a_committee_co-chair::Co-chair has_a_committee_chair::Chair ;
Evaluation ::= isContainedIn::Review ;
OutputDocument ::= CD-ROM ;
 OutputDocument ::= IndexOfAuthors ;
 OutputDocument ::= ExternalReviewersList ;
 OutputDocument ::= Program ;
 OutputDocument ::= PCMembersList ;
 OutputDocument ::= ListOfAbstracts ;
 OutputDocument ::= BookletOfAbstracts ;
 OutputDocument ::= Proceedings ;
 OutputDocument ::= isProducedBy::Chair ;
Conference_hall ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
QualitatvieLecture ::= hasAcronym::String ;
Automatic_Paper_Assignment ::= (automatically_assign_paper::Program_Committee_member)+ ;
Symposium ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location ;
Organization ::= Company ;
 Organization ::= AcademiaOrganization ;
 Organization ::= IndustryOrganization ;
 Organization ::= NGO ;
 Organization ::= GovernmentOrganization ;
 Organization ::= University ;
 Organization ::= isProviderOf::Sponsorship ;
Undecided_Paper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::Boolean Keywords::String hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Steering_committee ::= was_a_steering_committee_of::Conference_volume ;
AuthorNotReviewer ::= submitPaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing submitsPaper::Paper writePaper::Paper writes_Paper::Paper ;
review_form ::= is_created_in::Activity ;
Deadline_for_notification_of_acceptance ::= done_till::date ;
Senior_Program_Committee_member ::= supervises::Activity ;
ActivitySubmissionForm ::= TutorialProposal ;
 ActivitySubmissionForm ::= WorksopProposal ;
 ActivitySubmissionForm ::= isSubmittedBy::Author hasAuthor::Author submissionDeadline::dateTime ;
AssociatedChair ::= memberOfConference::Conference ;
Conference ::= Conference_volume ;
 Conference ::= TwoLevelConference ;
 Conference ::= SingleLevelConference ;
 Conference ::= is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country isOrganizedBy::OrganizingCommittee annualOrder::Integer takesPlace::Location hasAcronym::String hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
Document ::= Email ;
 Document ::= Template ;
 Document ::= article ;
 Document ::= SlideSet ;
 Document ::= Programme ;
 Document ::= MealMenu ;
 Document ::= Programme_Brochure ;
 Document ::= Flyer ;
 Document ::= Web_Site ;
 Document ::= Multi-author_Volume ;
 Document ::= Form ;
 Document ::= Mailing_list ;
 Document ::= Record_of_attendance ;
 Document ::= Brief_introduction_for_Session_chair ;
 Document ::= Invitation_letter ;
 Document ::= Viza ;
 Document ::= Transparency ;
 Document ::= Submission ;
 Document ::= Payment_document ;
 Document ::= Evaluation ;
 Document ::= PaperAbstract ;
 Document ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
Presentation ::= Invited_talk ;
 Presentation ::= PowerPoint_presentation ;
 Presentation ::= Video_presentation ;
 Presentation ::= is_given_by::Active_conference_participant ;
Viza ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
Reviewed_contribution ::= Accepted_contribution ;
 Reviewed_contribution ::= Rejected_contribution ;
 Reviewed_contribution ::= has_a_review::Review ;
WirelessCommunicationsTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
participant ::= submits_to_conference::Conference ;
Item ::= Transport_vehicle ;
 Item ::= Card ;
 Item ::= Audiovisual_equipment ;
 Item ::= Publication ;
 Item ::= Document ;
 Item ::= go_through::Activity (is_used_for::Thing)+ is_signed_by::Person is_made_from::Item is_sent_after::Time is_needed_for::Person is_sent_before::Time is_prepared_by::Person is_used_by::Person is_given_to::Person is_sent_by::Person is_writen_by::Person ;
ConferenceAttendant ::= mustPay::Fee hasAdress::String paid::Boolean hasPhone::String ;
Activity ::= Event_Creation ;
 Activity ::= Request ;
 Activity ::= Event_Approval ;
 Activity ::= Registration ;
 Activity ::= paper_assignment ;
 Activity ::= bidding_of_reviewer ;
 Activity ::= managing_of_conference_process ;
 Activity ::= reviewing_proces ;
 Activity ::= notification ;
 Activity ::= submission_process ;
 Activity ::= Activity_before_conference ;
 Activity ::= Conference_activity ;
 Activity ::= Activity_after_conference ;
 Activity ::= WorkShop ;
 Activity ::= Lecture ;
 Activity ::= (has_result::Thing)+ sent_by::Person is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime hasTopic::Topic expectedAttendance::Integer isPartOf::Conference ;
PowerPoint_presentation ::= is_given_by::Active_conference_participant ;
human ::= Program_Committee_member ;
 human ::= Contact_Person ;
 human ::= Program_Committee_Chair ;
 human ::= is_author_of::article performs_activity::Activity is_employed_in::institute has_topic_of_interest::Topic supervises::Activity e-mail::String last_name::String first_name::String ;
FinanceChair ::= organizes::Conference ;
Track ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Program_chair ::= made_program::Conference_Program ;
CADTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Event_Creation ::= (has_result::Thing)+ sent_by::Person is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime hasTopic::Topic expectedAttendance::Integer isPartOf::Conference ;
PublicationsChair ::= organizes::Conference ;
Speaker_lecture ::= hasAssignedPaper::AcceptedPaper room::String isAssociatedTo::Slot hasChair::Chair ;
Conference_part ::= Track ;
 Conference_part ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Possible_Reviewer ::= PC_Member ;
 Possible_Reviewer ::= reviewerOfPaper::Paper ;
Participant ::= Student ;
 Participant ::= Regular ;
 Participant ::= Member ;
 Participant ::= earlyRegistration::Boolean ;
SlideSet ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
MeetingRoomPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
Neutral_Review ::= writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::Activity review_written_by::Reviewer reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer containsEvaluation::Evaluation rates::Paper isWritenBy::Reviewer ;
Submissions_deadline ::= done_till::date ;
ExternalReviewer ::= assignedByReviewer::Reviewer cooperatesReviewer::Reviewer ;
Topic ::= ParallelAndDistributedComputingTopic ;
 Topic ::= WirelessCommunicationsTopic ;
 Topic ::= OperatingTopicsystems ;
 Topic ::= ComputerNetworksTopic ;
 Topic ::= SatelliteAndSpaceCommunicationsTopic ;
 Topic ::= CADTopic ;
 Topic ::= MultimediaTopic ;
 Topic ::= CommunicationsTopic ;
 Topic ::= PowerlineTransmissionTopic ;
 Topic ::= AntennasTopic ;
 Topic ::= PerformanceTopic ;
 Topic ::= SignalProcessingTopic ;
 Topic ::= MicroelectronicsTopic ;
 Topic ::= TestOnlyTopic ;
 Topic ::= RadioCommunicationsTopic ;
 Topic ::= ComputerArchitectureTopic ;
 Topic ::= MedicineTopic ;
 Topic ::= SecurityTopic ;
 Topic ::= MobileComputingTopic ;
 Topic ::= CryptographyTopic ;
 Topic ::= CommunicationTheoryTopic ;
 Topic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
ContactInformation ::= hasCity::String hasStreet::String hasPostalCode::String hasPhone::String ;
Submitted_Paper ::= Assigned_Paper ;
 Submitted_Paper ::= Reviewed_Paper ;
 Submitted_Paper ::= Advocated_Paper ;
 Submitted_Paper ::= is_stored_in::Paper_File has_been_sent_by::Contact_Author Paper_Id::Integer Comments_To_Chair::String ;
Author_cd_proceedings_included ::= submitPaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing submitsPaper::Paper writePaper::Paper writes_Paper::Paper ;
Session_room ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
Record_of_attendance ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
Individual_Presentation ::= Invited_Talk ;
 Individual_Presentation ::= Contributed_Talk ;
 Individual_Presentation ::= (presentationOfPaper::Document)+ ;
PerformanceTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Sponzorship ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
Programme ::= belongsToEvent::ConferenceEvent ;
Reviewing_results_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Sponsor ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person hasConflictOfInterest::Document email::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasMail::String worksForCompany::String hasAffiliation::String hasFirstName::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String ;
Organisation ::= Organising_Agency ;
 Organisation ::= Academic_Institution ;
 Organisation ::= Proceedings_Publisher ;
 Organisation ::= (publisherOf::Thing)+ technicallyOrganises::Thing ;
Evaluated_Paper ::= Accepted_Paper ;
 Evaluated_Paper ::= Rejected_Paper ;
 Evaluated_Paper ::= hasReview::Review ;
AcademiaOrganization ::= isProviderOf::Sponsorship ;
article ::= group_email ;
 article ::= notification_email ;
 article ::= abstract_of_paper ;
 article ::= review_form ;
 article ::= summary_of_reviews ;
 article ::= Review ;
 article ::= goes_through::Activity is_sent_to::human is_created_in::Activity structure_created_by::human has_author::human gives_classification::classification article_written_by::Author has_reviewer::Reviewer has_abstract::Abstract ;
ConferenceMember ::= ConferenceChair ;
 ConferenceMember ::= AssociatedChair ;
 ConferenceMember ::= Chairman ;
 ConferenceMember ::= ProgramCommitteeMember ;
 ConferenceMember ::= memberOfConference::Conference ;
MedicineTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Accepted_Paper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::Boolean Keywords::String hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
 Accepted_Paper ::= hasReview::Review ;
Submitted_contribution ::= Reviewed_contribution ;
 Submitted_contribution ::= has_a_review_expertise::Review_expertise ;
Agency_Staff_Member ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person hasConflictOfInterest::Document email::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasMail::String worksForCompany::String hasAffiliation::String hasFirstName::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String ;
Track-workshop_chair ::= was_a_track-workshop_chair_of::Conference_part ;
notification ::= has_result::article is_performed_by::human ;
RatedPapers ::= hasRating::ReviewRating ;
Regular_Paper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::Boolean Keywords::String hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
ConferenceChair ::= memberOfConference::Conference ;
 ConferenceChair ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person hasConflictOfInterest::Document email::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasMail::String worksForCompany::String hasAffiliation::String hasFirstName::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String ;
Place ::= DiningPlace ;
 Place ::= ConferenceVenuePlace ;
 Place ::= MeetingRoomPlace ;
 Place ::= AccommodationPlace ;
 Place ::= Building ;
 Place ::= Session_room ;
 Place ::= Hotel_room ;
 Place ::= Conference_hall ;
 Place ::= Main_office ;
 Place ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
EEnum ::= (Yes::ε) | (No::ε) | (Accept::ε) | (Reject::ε) | (Unsure::ε) | (male::ε) | (female::ε) | (high::ε) | (medium::ε) | (low::ε) | (very high::ε) | (Compilers::ε) | (Microarchitecture::ε) | (Systems::ε) | (ForwardLookingIdea::ε) ;
Camera_Ready_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Bid ::= adjustedBy::Reviewer ;
ListOfAbstracts ::= isProducedBy::Chair ;
Attendee ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person hasConflictOfInterest::Document email::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasMail::String worksForCompany::String hasAffiliation::String hasFirstName::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String ;
Manual_Paper_Assignment ::= (manually_assign_paper::Program_Committee_member)+ ;
Registration ::= (has_result::Thing)+ sent_by::Person is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime hasTopic::Topic expectedAttendance::Integer isPartOf::Conference ;
 Registration ::= ε ;
WorksopProposal ::= isSubmittedBy::Author hasAuthor::Author submissionDeadline::dateTime ;
Workshop_Paper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::Boolean Keywords::String hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
ConferenceDinner ::= hasMenu::MealMenu ;
Meta-Reviewer ::= assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper assignExternalReviewer::ExternalReviewer invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ hasReviewHistory::PersonalReviewHistory executes::DoubleBlindReview cooperates::ExternalReviewer IsAssignedTo::Paper hasConflictedPaper::Paper hasPreferredPaper::Paper hasPreferredTopic::ResearchTopic writeReview::Review has_made_review::Paper_Review UserName::String Comments_to_Chair::String Other_Areas::String ;
ProgramCommitteeChair ::= endReview::Review ;
Contact_Author ::= has_sent::Submitted_Paper Alternate_Email::String ;
Call_for_participation ::= has_authors::Person has_a_date_of_issue::date ;
Scholar ::= studyAt::University ;
TPCMember ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person hasConflictOfInterest::Document email::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasMail::String worksForCompany::String hasAffiliation::String hasFirstName::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String ;
Assistant ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person hasConflictOfInterest::Document email::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasMail::String worksForCompany::String hasAffiliation::String hasFirstName::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String ;
ConferenceEvent ::= NonAcademicEvent ;
 ConferenceEvent ::= AcademicEvent ;
 ConferenceEvent ::= hasAttendee::Person hasLocation::Place hasProgramme::Programme hasEndDateTime::dateTime hasStartDateTime::dateTime ;
Conference_document ::= Conference_contribution ;
 Conference_document ::= Information_for_participants ;
 Conference_document ::= Call_for_paper ;
 Conference_document ::= Conference_announcement ;
 Conference_document ::= Call_for_participation ;
 Conference_document ::= Conference_www ;
 Conference_document ::= has_authors::Person has_a_date_of_issue::date ;
Multi-author_Volume ::= Proceedings ;
 Multi-author_Volume ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
Member ::= Program_chair ;
 Member ::= Advocate ;
 Member ::= Reviewer ;
 Member ::= Web_address::String ;
ProgramCoChair ::= organizes::Conference ;
Regular_Session ::= hasAssignedPaper::AcceptedPaper room::String isAssociatedTo::Slot hasChair::Chair ;
People ::= Author ;
 People ::= Member ;
 People ::= Surname::String Name::String Country::String E-mail::String Organisation::String ;
University ::= scientificallyOrganises::Academic_Institution isProviderOf::Sponsorship ;
Administrator ::= approve::Event assign::Role assigns::Thing finalizePaperAssignment::Conference runPaperAssignmentTools::Conference enableVirtualMeeting::Conference startReviewerBidding::Conference assignReviewer::Reviewer rejectPaper::Paper enterConferenceDetails::Conference printHardcopyMailingManifests::Conference setMaxPapers::ProgramCommitteeMember enterReviewCriteria::Conference acceptPaper::Paper addProgramCommitteeMember::ProgramCommitteeMember ;
Author_Role ::= assigned_by::Administrator ;
Conference_Paper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::Boolean Keywords::String hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
bidding_of_reviewer ::= is_performed_by::human ;
BookletOfAbstracts ::= isProducedBy::Chair ;
PaperPresentation ::= relatedToPaper::AcceptedPaper ;
StudentAdvocate ::= organizes::Conference ;
Chair ::= was_a_committee_chair_of::Committee assigns_reviewers_to_article::Reviewer creates_program::program produces::OutputDocument sets::Thing accepts::Paper rejects::Paper asksForPreference::Reviewer isChairOf::Session ;
Negative_Review ::= writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::Activity review_written_by::Reviewer reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer containsEvaluation::Evaluation rates::Paper isWritenBy::Reviewer ;
ExternalReviewersList ::= isProducedBy::Chair ;
abstract_of_paper ::= goes_through::Activity is_sent_to::human is_created_in::Activity structure_created_by::human has_author::human gives_classification::classification article_written_by::Author has_reviewer::Reviewer has_abstract::Abstract ;
Money ::= Tax ;
 Money ::= Fee ;
 Money ::= Sponzorship ;
 Money ::= Tip ;
 Money ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
Approval_Email ::= confirm::Event ;
AntennasTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
MicroelectronicsTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Template ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
session ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location ;
Role ::= Admin_Role ;
 Role ::= Author_Role ;
 Role ::= Committe_Role ;
 Role ::= Head_Role ;
 Role ::= Reviewer_Role ;
 Role ::= assigned_by::Administrator ;
Chairman ::= ConferenceChair ;
 Chairman ::= AssociatedChair ;
 Chairman ::= ProgramCommitteeChair ;
 Chairman ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person hasConflictOfInterest::Document email::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasMail::String worksForCompany::String hasAffiliation::String hasFirstName::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String memberOfConference::Conference ;
Contributed_Talk ::= (presentationOfPaper::Document)+ ;
Contact_Person ::= is_author_of::article performs_activity::Activity is_employed_in::institute has_topic_of_interest::Topic supervises::Activity e-mail::String last_name::String first_name::String ;
TutorialProposal ::= isSubmittedBy::Author hasAuthor::Author submissionDeadline::dateTime ;
Paper_File ::= is_Type::Format ;
Rejected_Paper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::Boolean Keywords::String hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
 Rejected_Paper ::= hasReview::Review ;
Event_Approval ::= (has_result::Thing)+ sent_by::Person is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime hasTopic::Topic expectedAttendance::Integer isPartOf::Conference ;
Invited_Paper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::Boolean Keywords::String hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
program ::= program_created_by::Chair has_session::session ;
Plenary_lecture_speaker ::= submitPaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing submitsPaper::Paper writePaper::Paper writes_Paper::Paper ;
Criterion ::= hasWeight::double ;
Academic_Institution ::= Research_Institute ;
 Academic_Institution ::= University ;
 Academic_Institution ::= scientificallyOrganises::Academic_Institution ;
PaperStatus ::= isStatusOf::Paper ;
Call ::= CallForPapers ;
 Call ::= CallForReviews ;
 Call ::= CallForManuscripts ;
 Call ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
Video_presentation ::= is_given_by::Active_conference_participant ;
Author_book_proceedings_included ::= submitPaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing submitsPaper::Paper writePaper::Paper writes_Paper::Paper ;
submission_process ::= is_performed_by::human ;
Tip ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
Camera_ready_manuscript_deadline ::= done_till::date ;
Event ::= Symposium ;
 Event ::= Social_event ;
 Event ::= Administrative_event ;
 Event ::= Working_event ;
 Event ::= pc_meeting ;
 Event ::= session ;
 Event ::= Social_Event ;
 Event ::= Scientific_Event ;
 Event ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location ;
Deadline ::= Deadline_hotel_reservation ;
 Deadline ::= Submissions_deadline ;
 Deadline ::= Deadline_for_notification_of_acceptance ;
 Deadline ::= Registation_deadline ;
 Deadline ::= Camera_ready_manuscript_deadline ;
 Deadline ::= done_till::date ;
MealEvent ::= ConferenceDinner ;
 MealEvent ::= hasMenu::MealMenu ;
Session ::= Conference_Session ;
 Session ::= Regular_Session ;
 Session ::= Poster_Session ;
 Session ::= Demo_Session ;
 Session ::= Workshop_Session ;
 Session ::= Speaker_lecture ;
 Session ::= hasAssignedPaper::AcceptedPaper room::String isAssociatedTo::Slot hasChair::Chair ;
PublicityWebChair ::= organizes::Conference ;
Research_Institute ::= scientificallyOrganises::Academic_Institution ;
Reviewer_Role ::= assigned_by::Administrator ;
Committe_Role ::= assigned_by::Administrator ;
Administrative_event ::= Reviewing_results_event ;
 Administrative_event ::= Reviewing_event ;
 Administrative_event ::= Registration_of_participants_event ;
 Administrative_event ::= Submission_event ;
 Administrative_event ::= Camera_Ready_event ;
 Administrative_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Brief_introduction_for_Session_chair ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
Program ::= isProducedBy::Chair ;
Conference_Program ::= Program_made_by::Program_chair planned_papers::Planed_Paper ;
Proceedings ::= Conference_Proceedings ;
 Proceedings ::= (includes::Thing)+ ;
Positive_Review ::= writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::Activity review_written_by::Reviewer reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer containsEvaluation::Evaluation rates::Paper isWritenBy::Reviewer ;
PublishedPaper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::Boolean Keywords::String hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Company ::= isProviderOf::Sponsorship ;
DoubleBlindReview ::= isExecutedBy::Reviewer ;
Event_Setup ::= Paper_Typologies ;
 Event_Setup ::= Review_Form ;
 Event_Setup ::= Submission_Template ;
 Event_Setup ::= Event_Tracks ;
 Event_Setup ::= Research_Topic ;
 Event_Setup ::= Email_Template ;
 Event_Setup ::= define::Event ;
CommitteeMember ::= isMemberOf::Conference ;
Corresponding_Author ::= submitPaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing submitsPaper::Paper writePaper::Paper writes_Paper::Paper ;
PendingPaper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::Boolean Keywords::String hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
PowerlineTransmissionTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
IndustryOrganization ::= isProviderOf::Sponsorship ;
TestOnlyTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Industrial_Paper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::Boolean Keywords::String hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
CD-ROM ::= isProducedBy::Chair ;
Co-chair ::= was_a_committe_co-chair_of::Committee ;
Abstract ::= Tutorial_Abstract ;
 Abstract ::= Invited_Talk_Abstract ;
 Abstract ::= (is_the_1th_part_of::Thing)+ part_of_article::article ;
Flyer ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
Tutorial_speaker ::= submitPaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing submitsPaper::Paper writePaper::Paper writes_Paper::Paper ;
Organising_Agency ::= (publisherOf::Thing)+ technicallyOrganises::Thing ;
PaperFullVersion ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::Boolean Keywords::String hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Demo_Session ::= hasAssignedPaper::AcceptedPaper room::String isAssociatedTo::Slot hasChair::Chair ;
SingleLevelConference ::= is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country isOrganizedBy::OrganizingCommittee annualOrder::Integer takesPlace::Location hasAcronym::String hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
Sponsorship ::= TravelGrant ;
 Sponsorship ::= providedBy::Organization hasCostCurrency::String hasCostAmount::Integer ;
ConferenceVenuePlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
Conference_contribution ::= Poster ;
 Conference_contribution ::= Written_contribution ;
 Conference_contribution ::= Presentation ;
 Conference_contribution ::= is_submitted_at::Conference_volume ;
Invited_Talk ::= (presentationOfPaper::Document)+ ;
Demo_Paper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::Boolean Keywords::String hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
CallForReviews ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
Contribution ::= Poster ;
 Contribution ::= Short_paper ;
 Contribution ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
Paper_Typologies ::= define::Event ;
Information_for_participants ::= has_authors::Person has_a_date_of_issue::date ;
Programme_Brochure ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
Reviewer ::= Meta-Reviewer ;
 Reviewer ::= assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper assignExternalReviewer::ExternalReviewer invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ hasReviewHistory::PersonalReviewHistory executes::DoubleBlindReview cooperates::ExternalReviewer IsAssignedTo::Paper hasConflictedPaper::Paper hasPreferredPaper::Paper hasPreferredTopic::ResearchTopic writeReview::Review has_made_review::Paper_Review UserName::String Comments_to_Chair::String Other_Areas::String ;
Meta-Review ::= writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::Activity review_written_by::Reviewer reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer containsEvaluation::Evaluation rates::Paper isWritenBy::Reviewer ;
Slot ::= date::date endsAt::time beginsAt::time forms::ConferenceProgram hosts::Session ;
Student ::= earlyRegistration::Boolean ;
 Student ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person hasConflictOfInterest::Document email::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasMail::String worksForCompany::String hasAffiliation::String hasFirstName::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String ;
Poster_Paper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::Boolean Keywords::String hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
managing_of_conference_process ::= (has_result::Thing)+ sent_by::Person is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime hasTopic::Topic expectedAttendance::Integer isPartOf::Conference ;
Planed_Paper ::= is_planned_in::Conference_Program ;
Call_for_paper ::= has_authors::Person has_a_date_of_issue::date ;
Conference_www ::= has_a_URL::String ;
Rejected_contribution ::= has_a_review::Review ;
Invited_talk ::= is_given_by::Active_conference_participant ;
Account ::= registred_by::Person ;
Event_Tracks ::= define::Event ;
Submission_Template ::= define::Event ;
Review_expertise ::= has_a_submitted_contribution::Submitted_contribution has_an_expertise::EEnum ;
Event_URL ::= concerned::Event ;
Important_dates ::= is_an_abstract_submission_date::date is_a_full_paper_submission_date::date is_an_ending_date::date is_a_date_of_acceptance_announcement::date is_a_date_of_camera_ready_paper_submission::date is_a_starting_date::date belong_to_a_conference_volume::Conference_volume ;
Submission_event ::= follows::Administrative_event parallel_with::Administrative_event ;
ActivePaper ::= RatedPapers ;
 ActivePaper ::= hasRating::ReviewRating ;
AcceptedPaper ::= relatedToEvent::PaperPresentation isAssignedToSession::Session ;
TravelGrant ::= providedBy::Organization hasCostCurrency::String hasCostAmount::Integer ;
Review_preference ::= (has_a_topic_or_a_submission_contribution::Thing)+ has_a_degree::Integer ;
--------------------metamodels::OpenQVT.bgf--------------------
RTransService ::= visibility::String signature::String rule::Rule ;
RootRule ::= ruleSet::RuleSet ;
OCLService ::= visibility::String signature::String rule::Rule ;
Rule ::= RootRule ;
 Rule ::= RuleSetCall ;
 Rule ::= QARule ;
 Rule ::= context::Context subRule::Rule superRule::Rule (services::Service)+ ;
Variable ::= name::String type::String value::String visibility::String context::Context ;
JavaFilter ::= qARule::QARule ;
JavaAction ::= qARule::QARule ;
Action ::= RTransAction ;
 Action ::= JavaAction ;
 Action ::= qARule::QARule ;
Service ::= OCLService ;
 Service ::= RTransService ;
 Service ::= JavaService ;
 Service ::= visibility::String signature::String rule::Rule ;
JavaService ::= visibility::String signature::String rule::Rule ;
RTransQuery ::= qARule::QARule ;
OCLFilter ::= qARule::QARule ;
Context ::= (variables::Variable)+ rule::Rule ;
QARule ::= query::Query action::Action ;
RTransAction ::= qARule::QARule ;
Query ::= OCLFilter ;
 Query ::= RTransQuery ;
 Query ::= JavaQuery ;
 Query ::= JavaFilter ;
 Query ::= qARule::QARule ;
JavaQuery ::= qARule::QARule ;
RuleSet ::= rootRule::RootRule ;
RuleSetCall ::= ruleSet::RuleSet ;
--------------------metamodels::PCS.owl.bgf--------------------
Email_Template ::= define::Event ;
Proceedings_Publisher ::= (publisherOf::Thing)+ technicallyOrganises::Thing ;
Conference_proceedings ::= has_an_ISBN::String has_a_publisher::Publisher has_a_volume::String ;
External_Reviewer ::= loggin_in::System submit::Document get::Email E-mail::String hasMail::String worksForCompany::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
Science_Worker ::= loggin_in::System submit::Document get::Email E-mail::String hasMail::String worksForCompany::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
Program_Comitee_Chair ::= finishes::Conference headOf::Program_Comitee switches::PhaseOfConferencePreparation starts::Conference accepts::Paper assignsToReview::Paper assignsPaper::Reviewer rejects::Paper ;
TraditionalLecture ::= hasAcronym::String ;
RadioCommunicationsTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
AccommodationPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
SignalProcessingTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
TwoLevelConference ::= is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country isOrganizedBy::OrganizingCommittee annualOrder::Integer takesPlace::Location hasAcronym::String finishedBy::Program_Comitee_Chair focusesOn::Topic startedBy::Program_Comitee_Chair takesPlace::Location has_conference_member::ConferenceMember WebSite::anyURI Topic_of_conference::String Date::date hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
pc_meeting ::= starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator ;
SessionChair ::= loggin_in::System submit::Document get::Email E-mail::String hasMail::String worksForCompany::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
SteeringCommittee ::= organizes::Conference ;
summary_of_reviews ::= is_created_in::Activity ;
Working_event ::= Tutorial ;
 Working_event ::= hasTopic::Topic hasAdministrativeEvent::Administrative_event ;
User ::= Committee ;
 User ::= Administrator ;
 User ::= recieve::Document (create::Thing)+ submit::Document ;
Short_paper ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String changedBy::Author hasContributionStatus::EEnum ;
Advocated_Paper ::= to_advocate_by::Advocate ;
GovernmentOrganization ::= isProviderOf::Sponsorship ;
Tutorial_Abstract ::= (is_the_1th_part_of::Thing)+ part_of_article::article ;
Primary_Reviewer ::= assign_review::Review ;
Main_office ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
CallForManuscripts ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
MealMenu ::= isMenuOf::MealEvent ;
Speaker ::= loggin_in::System submit::Document get::Email E-mail::String hasMail::String worksForCompany::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
IndexOfAuthors ::= isProducedBy::Chair ;
Workshop_Session ::= hasAssignedPaper::AcceptedPaper room::String isAssociatedTo::Slot hasChair::Chair ;
Paper_Author ::= loggin_in::System submit::Document get::Email E-mail::String hasMail::String worksForCompany::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
Conference_Proceedings ::= (includes::Thing)+ ;
group_email ::= article_written_by::Author has_reviewer::Reviewer has_abstract::Abstract goes_through::Activity is_sent_to::human is_created_in::Activity structure_created_by::human has_author::human gives_classification::classification ;
Publisher ::= issues::Conference_proceedings ;
Full_Paper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
OutsideReferee ::= loggin_in::System submit::Document get::Email E-mail::String hasMail::String worksForCompany::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
Assigned_Paper ::= Evaluated_Paper ;
 Assigned_Paper ::= hasReviewer::Possible_Reviewer ;
upper_tier_reviewing_process ::= is_performed_by::human ;
OperatingTopicsystems ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Location ::= locationOf::Event ;
Review_Phase ::= hasPhaseStatus::EEnum ;
GeneralCoChair ::= organizes::Conference ;
PaperSubmissionChair ::= organizes::Conference ;
Chair_PC ::= loggin_in::System submit::Document get::Email E-mail::String hasMail::String worksForCompany::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
Active_conference_participant ::= gives_presentations::Presentation ;
Short_Paper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
SatelliteAndSpaceCommunicationsTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Pending_Proposed_Conflict ::= refusedBy::Reviewer confirmedBy::Reviewer ;
Plenary_lecture ::= hasAcronym::String ;
Organizing_committee ::= was_an_organizing_committee_of::Conference_volume ;
MobileComputingTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Registration_of_participants_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Committee_member ::= Co-chair ;
 Committee_member ::= chair ;
 Committee_member ::= was_a_member_of::Committee ;
Deadline_hotel_reservation ::= done_till::date ;
Invitation ::= sended_by::Administrator Receiver_of_email::String Message_of_email::String Subject_of_email::String ;
Camera_Ready_Paper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
NGO ::= isProviderOf::Sponsorship ;
CommunicationTheoryTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
AcademicEvent ::= TalkEvent ;
 AcademicEvent ::= OrganizationalMeeting ;
 AcademicEvent ::= PaperPresentation ;
 AcademicEvent ::= hasCall::Call ;
Mailing_list ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String recieved_by::User used_by::Person submited__by::User ;
CallForPapers ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
CommunicationsTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
SecurityTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
PaperAbstract ::= isAbstractOf::Paper abstractIsSubmittedBy::ContactAuthor ;
DiningPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
Paper_Review ::= is_Candidate_for_Award::Long_bool appropriate_length::Long_bool has_Categorization::Paper_Categorization has_Overall::Overall_Value has_Reccommendation::Reccommendation Review_made_by::Reviewer Comments_for_Author::String Comments_for_Program_Committee::String ;
ContactAuthor ::= submitsAbstract::PaperAbstract ;
Author ::= AuthorNotReviewer ;
 Author ::= Corresponding_Author ;
 Author ::= Author_cd_proceedings_included ;
 Author ::= Lecturer ;
 Author ::= Plenary_lecture_speaker ;
 Author ::= Tutorial_speaker ;
 Author ::= Author_book_proceedings_included ;
 Author ::= ContactAuthor ;
 Author ::= Contact_Author ;
 Author ::= Co-Author ;
 Author ::= MainAuthor ;
 Author ::= Presenter ;
 Author ::= submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution write_paper::Paper submitPaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing ;
ConferenceProgram ::= isProgramOf::Conference consistsOf::Slot ;
Rejection_Email ::= sended_by::Administrator Receiver_of_email::String Message_of_email::String Subject_of_email::String ;
Admin_Role ::= assigned_by::Administrator ;
Poster_Session ::= hasAssignedPaper::AcceptedPaper room::String isAssociatedTo::Slot hasChair::Chair ;
ComputerArchitectureTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
WorkshopTutorialChair ::= organizes::Conference ;
OrganizingCommittee ::= ProgramCoChair ;
 OrganizingCommittee ::= PublicationsChair ;
 OrganizingCommittee ::= WorkshopTutorialChair ;
 OrganizingCommittee ::= RegistrationChair ;
 OrganizingCommittee ::= StudentAdvocate ;
 OrganizingCommittee ::= FinanceChair ;
 OrganizingCommittee ::= PaperSubmissionChair ;
 OrganizingCommittee ::= PublicityWebChair ;
 OrganizingCommittee ::= SteeringCommittee ;
 OrganizingCommittee ::= GeneralCoChair ;
 OrganizingCommittee ::= organizes::Conference ;
OrganizationalMeeting ::= hasCall::Call ;
PersonalReviewHistory ::= isReviewHistoryOf::Reviewer ;
Group_Email ::= sended_by::Administrator Receiver_of_email::String Message_of_email::String Subject_of_email::String ;
conference_setup ::= sets_member::human is_made_by::human includes_topic::Topic sets_date::date sets_URL::URL ;
Member_PC ::= expertOn::Topic reviewes::Contribution ;
Web_Site ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String recieved_by::User used_by::Person submited__by::User ;
RejectedPaper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
ParallelAndDistributedComputingTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Advocate ::= will_advocate::Advocated_Paper ;
Research_Topic ::= define::Event ;
 Research_Topic ::= topicCoveredBy::Thing ;
Assignment_Phase ::= hasPhaseStatus::EEnum ;
Reviewing_event ::= follows::Administrative_event parallel_with::Administrative_event ;
MultimediaTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
CryptographyTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Tutorial ::= hasTopic::Topic hasAdministrativeEvent::Administrative_event ;
Conference_volume ::= has_parts::Conference_part has_workshops::Workshop has_tracks::Track has_tutorials::Tutorial has_a_commtitee::Committee has_a_steering_committee::Steering_committee has_an_organizing_committee::Organizing_committee has_important_dates::Important_dates has_contributions::Conference_contribution has_a_location::String has_a_program_committee::Program_committee ;
Email ::= Notification_Email ;
 Email ::= Group_Email ;
 Email ::= Approval_Email ;
 Email ::= Rejection_Email ;
 Email ::= Information ;
 Email ::= Invitation ;
 Email ::= sended_by::Administrator Receiver_of_email::String Message_of_email::String Subject_of_email::String ;
Regular ::= submits_to_conference::Conference earlyRegistration::Boolean ;
ProgramCommittee ::= hasProgramCommitteeMember::ProgramCommitteeMember hasMember::ProgramCommitteeMember ;
Transparency ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String recieved_by::User used_by::Person submited__by::User ;
Registation_deadline ::= done_till::date ;
Review ::= Meta-Review ;
 Review ::= Positive_Review ;
 Review ::= Negative_Review ;
 Review ::= Neutral_Review ;
 Review ::= gives_classification::classification is_created_in::Activity review_written_by::Reviewer reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer containsEvaluation::Evaluation rates::Paper isWritenBy::Reviewer assigned_review_by::Primary_Reviewer written_review_by::Reviewer writtenBy::Reviewer reviews::Reviewed_contribution ;
Person ::= ExternalReviewer ;
 Person ::= User ;
 Person ::= Conference_participant ;
 Person ::= Conference_contributor ;
 Person ::= Committee_member ;
 Person ::= Conference_applicant ;
 Person ::= Track-workshop_chair ;
 Person ::= Scholar ;
 Person ::= Participant ;
 Person ::= Member_PC ;
 Person ::= Chair_PC ;
 Person ::= Science_Worker ;
 Person ::= Assistant ;
 Person ::= Volunteer ;
 Person ::= Attendee ;
 Person ::= SessionChair ;
 Person ::= TPCMember ;
 Person ::= Paper_Author ;
 Person ::= Conference_Participant ;
 Person ::= Agency_Staff_Member ;
 Person ::= Possible_Reviewer ;
 Person ::= Student ;
 Person ::= Delegate ;
 Person ::= Sponsor ;
 Person ::= OutsideReferee ;
 Person ::= ConferenceAttendant ;
 Person ::= Program_Comitee_Chair ;
 Person ::= External_Reviewer ;
 Person ::= ConferenceMember ;
 Person ::= Chairman ;
 Person ::= chair ;
 Person ::= Organizer ;
 Person ::= ProgramCommitteeMember ;
 Person ::= Speaker ;
 Person ::= loggin_in::System submit::Document get::Email E-mail::String hasMail::String worksForCompany::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
Head_Role ::= assigned_by::Administrator ;
ProgramCommitteeMember ::= Chair ;
 ProgramCommitteeMember ::= ProgramCommitteeChair ;
 ProgramCommitteeMember ::= memberOfProgramCommittee::ProgramCommittee maxPapers::Integer addedBy::Administrator isMemberOf::ProgramCommittee hasPassword::String ;
Invited_Talk_Abstract ::= (is_the_1th_part_of::Thing)+ part_of_article::article ;
Final_manuscript ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
Poster ::= is_submitted_at::Conference_volume ;
 Poster ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String changedBy::Author hasContributionStatus::EEnum ;
 Poster ::= hasContributionFileStatus::EEnum ;
RegistrationChair ::= organizes::Conference ;
Submission ::= Final_manuscript ;
 Submission ::= Initial_manuscipt ;
 Submission ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
Invitation_letter ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String recieved_by::User used_by::Person submited__by::User ;
Paper ::= PaperFullVersion ;
 Paper ::= Invited_Paper ;
 Paper ::= Short_Paper ;
 Paper ::= Full_Paper ;
 Paper ::= Accepted_Paper ;
 Paper ::= Rejected_Paper ;
 Paper ::= Undecided_Paper ;
 Paper ::= ActivePaper ;
 Paper ::= PendingPaper ;
 Paper ::= WithdrawnPaper ;
 Paper ::= RejectedPaper ;
 Paper ::= PublishedPaper ;
 Paper ::= Camera_Ready_Paper ;
 Paper ::= Workshop_Paper ;
 Paper ::= Industrial_Paper ;
 Paper ::= Conference_Paper ;
 Paper ::= Poster_Paper ;
 Paper ::= Regular_Paper ;
 Paper ::= Demo_Paper ;
 Paper ::= AcceptedPaper ;
 Paper ::= Submitted_Paper ;
 Paper ::= Accepted_paper ;
 Paper ::= Rejected_paper ;
 Paper ::= Abstract ;
 Paper ::= PaperAbstract ;
 Paper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
Volunteer ::= loggin_in::System submit::Document get::Email E-mail::String hasMail::String worksForCompany::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
Conference_announcement ::= has_authors::Person has_a_date_of_issue::date ;
WithdrawnPaper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
Program_Committee_Chair ::= is_author_of::article performs_activity::Activity is_employed_in::institute has_topic_of_interest::Topic supervises::Activity e-mail::String last_name::String first_name::String ;
PCMembersList ::= isProducedBy::Chair ;
Program_committee ::= was_a_program_committee_of::Conference_volume ;
paper_assignment ::= Manual_Paper_Assignment ;
 paper_assignment ::= Automatic_Paper_Assignment ;
 paper_assignment ::= assign_paper::Program_Committee_member is_performed_by::human ;
Lecture ::= Plenary_lecture ;
 Lecture ::= QualitatvieLecture ;
 Lecture ::= TraditionalLecture ;
 Lecture ::= hasAcronym::String ;
Committee ::= Organizing_committee ;
 Committee ::= Steering_committee ;
 Committee ::= Program_committee ;
 Committee ::= has_members::Committee_member was_a_committee_of::Conference_volume has_a_committee_co-chair::Co-chair has_a_committee_chair::Chair ;
Evaluation ::= isContainedIn::Review ;
OutputDocument ::= CD-ROM ;
 OutputDocument ::= IndexOfAuthors ;
 OutputDocument ::= ExternalReviewersList ;
 OutputDocument ::= Program ;
 OutputDocument ::= PCMembersList ;
 OutputDocument ::= ListOfAbstracts ;
 OutputDocument ::= BookletOfAbstracts ;
 OutputDocument ::= Proceedings ;
 OutputDocument ::= isProducedBy::Chair ;
Conference_hall ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
QualitatvieLecture ::= hasAcronym::String ;
Automatic_Paper_Assignment ::= (automatically_assign_paper::Program_Committee_member)+ ;
Symposium ::= starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator ;
Organization ::= Company ;
 Organization ::= AcademiaOrganization ;
 Organization ::= IndustryOrganization ;
 Organization ::= NGO ;
 Organization ::= GovernmentOrganization ;
 Organization ::= University ;
 Organization ::= isProviderOf::Sponsorship ;
Undecided_Paper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
Steering_committee ::= was_a_steering_committee_of::Conference_volume ;
AuthorNotReviewer ::= submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution write_paper::Paper submitPaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing ;
review_form ::= is_created_in::Activity ;
Deadline_for_notification_of_acceptance ::= done_till::date ;
Notification_Email ::= sended_by::Administrator Receiver_of_email::String Message_of_email::String Subject_of_email::String ;
Senior_Program_Committee_member ::= supervises::Activity ;
ActivitySubmissionForm ::= TutorialProposal ;
 ActivitySubmissionForm ::= WorksopProposal ;
 ActivitySubmissionForm ::= isSubmittedBy::Author hasAuthor::Author submissionDeadline::dateTime ;
AssociatedChair ::= memberOfConference::Conference member_of_conference::Conference ;
Conference ::= Conference_volume ;
 Conference ::= TwoLevelConference ;
 Conference ::= SingleLevelConference ;
 Conference ::= Programme ;
 Conference ::= is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country isOrganizedBy::OrganizingCommittee annualOrder::Integer takesPlace::Location hasAcronym::String finishedBy::Program_Comitee_Chair focusesOn::Topic startedBy::Program_Comitee_Chair takesPlace::Location has_conference_member::ConferenceMember WebSite::anyURI Topic_of_conference::String Date::date hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
Document ::= Template ;
 Document ::= article ;
 Document ::= SlideSet ;
 Document ::= MealMenu ;
 Document ::= Programme_Brochure ;
 Document ::= Flyer ;
 Document ::= Web_Site ;
 Document ::= Multi-author_Volume ;
 Document ::= Form ;
 Document ::= Mailing_list ;
 Document ::= Record_of_attendance ;
 Document ::= Brief_introduction_for_Session_chair ;
 Document ::= Invitation_letter ;
 Document ::= Viza ;
 Document ::= Transparency ;
 Document ::= Payment_document ;
 Document ::= Evaluation ;
 Document ::= Email ;
 Document ::= Programme ;
 Document ::= Submission ;
 Document ::= PaperAbstract ;
 Document ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String recieved_by::User used_by::Person submited__by::User ;
Presentation ::= Invited_talk ;
 Presentation ::= PowerPoint_presentation ;
 Presentation ::= Video_presentation ;
 Presentation ::= is_given_by::Active_conference_participant ;
Viza ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String recieved_by::User used_by::Person submited__by::User ;
Reviewed_contribution ::= Accepted_contribution ;
 Reviewed_contribution ::= Rejected_contribution ;
 Reviewed_contribution ::= has_a_review::Review ;
WirelessCommunicationsTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Item ::= Transport_vehicle ;
 Item ::= Card ;
 Item ::= Audiovisual_equipment ;
 Item ::= Publication ;
 Item ::= Document ;
 Item ::= go_through::Activity (is_used_for::Thing)+ is_signed_by::Person is_made_from::Item is_sent_after::Time is_needed_for::Person is_sent_before::Time is_prepared_by::Person is_used_by::Person is_given_to::Person is_sent_by::Person is_writen_by::Person ;
ConferenceAttendant ::= mustPay::Fee hasAdress::String paid::Boolean hasPhone::String ;
Activity ::= Event_Creation ;
 Activity ::= Request ;
 Activity ::= Event_Approval ;
 Activity ::= Registration ;
 Activity ::= paper_assignment ;
 Activity ::= bidding_of_reviewer ;
 Activity ::= managing_of_conference_process ;
 Activity ::= reviewing_proces ;
 Activity ::= notification ;
 Activity ::= submission_process ;
 Activity ::= Activity_before_conference ;
 Activity ::= Conference_activity ;
 Activity ::= Activity_after_conference ;
 Activity ::= Lecture ;
 Activity ::= hasTopic::Topic expectedAttendance::Integer isPartOf::Conference is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime has_result::article sent_by::Person ;
PowerPoint_presentation ::= is_given_by::Active_conference_participant ;
human ::= Program_Committee_member ;
 human ::= Contact_Person ;
 human ::= Program_Committee_Chair ;
 human ::= is_author_of::article performs_activity::Activity is_employed_in::institute has_topic_of_interest::Topic supervises::Activity e-mail::String last_name::String first_name::String ;
FinanceChair ::= organizes::Conference ;
Track ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Program_chair ::= made_program::Conference_Program ;
CADTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Blocked_Phase ::= hasPhaseStatus::EEnum ;
Event_Creation ::= hasTopic::Topic expectedAttendance::Integer isPartOf::Conference is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime has_result::article sent_by::Person ;
PublicationsChair ::= organizes::Conference ;
Speaker_lecture ::= hasAssignedPaper::AcceptedPaper room::String isAssociatedTo::Slot hasChair::Chair ;
Conference_part ::= Track ;
 Conference_part ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Accepted_paper ::= read_paper_by::Thing rateed_paper_by::Thing Score::EEnum ;
Possible_Reviewer ::= PC_Member ;
 Possible_Reviewer ::= reviewerOfPaper::Paper ;
Participant ::= Student ;
 Participant ::= Regular ;
 Participant ::= Member ;
 Participant ::= submits_to_conference::Conference earlyRegistration::Boolean ;
Program_Comitee ::= discusses::Paper ;
SlideSet ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String recieved_by::User used_by::Person submited__by::User ;
MeetingRoomPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
Neutral_Review ::= gives_classification::classification is_created_in::Activity review_written_by::Reviewer reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer containsEvaluation::Evaluation rates::Paper isWritenBy::Reviewer assigned_review_by::Primary_Reviewer written_review_by::Reviewer writtenBy::Reviewer reviews::Reviewed_contribution ;
Submissions_deadline ::= done_till::date ;
ExternalReviewer ::= assignedByReviewer::Reviewer cooperatesReviewer::Reviewer ;
Organizer ::= CommitteeMember ;
 Organizer ::= loggin_in::System submit::Document get::Email E-mail::String hasMail::String worksForCompany::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
Topic ::= ParallelAndDistributedComputingTopic ;
 Topic ::= WirelessCommunicationsTopic ;
 Topic ::= OperatingTopicsystems ;
 Topic ::= ComputerNetworksTopic ;
 Topic ::= SatelliteAndSpaceCommunicationsTopic ;
 Topic ::= CADTopic ;
 Topic ::= MultimediaTopic ;
 Topic ::= CommunicationsTopic ;
 Topic ::= PowerlineTransmissionTopic ;
 Topic ::= AntennasTopic ;
 Topic ::= PerformanceTopic ;
 Topic ::= SignalProcessingTopic ;
 Topic ::= MicroelectronicsTopic ;
 Topic ::= TestOnlyTopic ;
 Topic ::= RadioCommunicationsTopic ;
 Topic ::= ComputerArchitectureTopic ;
 Topic ::= MedicineTopic ;
 Topic ::= SecurityTopic ;
 Topic ::= MobileComputingTopic ;
 Topic ::= CryptographyTopic ;
 Topic ::= CommunicationTheoryTopic ;
 Topic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Information ::= sended_by::Administrator Receiver_of_email::String Message_of_email::String Subject_of_email::String ;
ContactInformation ::= hasCity::String hasStreet::String hasPostalCode::String hasPhone::String ;
Submitted_Paper ::= Assigned_Paper ;
 Submitted_Paper ::= Reviewed_Paper ;
 Submitted_Paper ::= Advocated_Paper ;
 Submitted_Paper ::= is_stored_in::Paper_File has_been_sent_by::Contact_Author Paper_Id::String Comments_To_Chair::String ;
Initial_manuscipt ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
Author_cd_proceedings_included ::= submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution write_paper::Paper submitPaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing ;
Session_room ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
Record_of_attendance ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String recieved_by::User used_by::Person submited__by::User ;
Slides ::= hasContributionFileStatus::EEnum ;
Individual_Presentation ::= Invited_Talk ;
 Individual_Presentation ::= Contributed_Talk ;
 Individual_Presentation ::= (presentationOfPaper::Document)+ ;
PerformanceTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Sponzorship ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
Programme ::= belongsToEvent::ConferenceEvent ;
Reviewing_results_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Sponsor ::= loggin_in::System submit::Document get::Email E-mail::String hasMail::String worksForCompany::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
Organisation ::= Organising_Agency ;
 Organisation ::= Academic_Institution ;
 Organisation ::= Proceedings_Publisher ;
 Organisation ::= (publisherOf::Thing)+ technicallyOrganises::Thing ;
Setup_Phase ::= hasPhaseStatus::EEnum ;
Evaluated_Paper ::= Accepted_Paper ;
 Evaluated_Paper ::= Rejected_Paper ;
 Evaluated_Paper ::= hasReview::Review ;
AcademiaOrganization ::= isProviderOf::Sponsorship ;
ConferenceMember ::= Reviewer ;
 ConferenceMember ::= ConferenceChair ;
 ConferenceMember ::= AssociatedChair ;
 ConferenceMember ::= Author ;
 ConferenceMember ::= CommitteeMember ;
 ConferenceMember ::= Chairman ;
 ConferenceMember ::= ProgramCommitteeMember ;
 ConferenceMember ::= memberOfConference::Conference member_of_conference::Conference ;
article ::= group_email ;
 article ::= notification_email ;
 article ::= abstract_of_paper ;
 article ::= review_form ;
 article ::= summary_of_reviews ;
 article ::= article_written_by::Author has_reviewer::Reviewer has_abstract::Abstract goes_through::Activity is_sent_to::human is_created_in::Activity structure_created_by::human has_author::human gives_classification::classification ;
MedicineTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Accepted_Paper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
 Accepted_Paper ::= hasReview::Review ;
Submitted_contribution ::= Reviewed_contribution ;
 Submitted_contribution ::= has_a_review_expertise::Review_expertise ;
Agency_Staff_Member ::= loggin_in::System submit::Document get::Email E-mail::String hasMail::String worksForCompany::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
Track-workshop_chair ::= was_a_track-workshop_chair_of::Conference_part ;
notification ::= has_result::article is_performed_by::human ;
RatedPapers ::= hasRating::ReviewRating ;
Regular_Paper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
ConferenceChair ::= memberOfConference::Conference member_of_conference::Conference ;
Closed_Phase ::= hasPhaseStatus::EEnum ;
Place ::= DiningPlace ;
 Place ::= ConferenceVenuePlace ;
 Place ::= MeetingRoomPlace ;
 Place ::= AccommodationPlace ;
 Place ::= Building ;
 Place ::= Session_room ;
 Place ::= Hotel_room ;
 Place ::= Conference_hall ;
 Place ::= Main_office ;
 Place ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
EEnum ::= (Yes::ε) | (No::ε) | (Accept::ε) | (Reject::ε) | (Unsure::ε) | (submitted::ε) | (missing::ε) | (notStarted::ε) | (active::ε) | (finished::ε) | (accepted::ε) | (rejected::ε) | (regular::ε) | (invited::ε) | (lowBid::ε) | (-::ε) | (CONFLICT::ε) | (wantNot::ε) | (highBid::ε) | (Compilers::ε) | (Microarchitecture::ε) | (Systems::ε) | (ForwardLookingIdea::ε) | (1::ε) | (2::ε) | (3::ε) | (4::ε) | (5::ε) | (6::ε) | (7::ε) | (male::ε) | (female::ε) | (high::ε) | (medium::ε) | (low::ε) | (very high::ε) ;
Camera_Ready_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Abstract_And_Paper_Submission_Phase ::= hasPhaseStatus::EEnum ;
Bid ::= adjustedBy::Reviewer ;
ListOfAbstracts ::= isProducedBy::Chair ;
Attendee ::= loggin_in::System submit::Document get::Email E-mail::String hasMail::String worksForCompany::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
Manual_Paper_Assignment ::= (manually_assign_paper::Program_Committee_member)+ ;
Registration ::= hasTopic::Topic expectedAttendance::Integer isPartOf::Conference is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime has_result::article sent_by::Person ;
 Registration ::= ε ;
WorksopProposal ::= isSubmittedBy::Author hasAuthor::Author submissionDeadline::dateTime ;
Workshop_Paper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
ConferenceDinner ::= hasMenu::MealMenu ;
Meta-Reviewer ::= invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ writes_review::Review hasReviewHistory::PersonalReviewHistory executes::DoubleBlindReview cooperates::ExternalReviewer IsAssignedTo::Paper hasConflictedPaper::Paper hasPreferredPaper::Paper hasPreferredTopic::ResearchTopic writeReview::Review has_made_review::Paper_Review UserName::String Comments_to_Chair::String Other_Areas::String refuses::Pending_Proposed_Conflict reviews::Paper bidsFor::Paper confirmes::Pending_Proposed_Conflict assignedPaperBy::Program_Comitee_Chair assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper assignExternalReviewer::ExternalReviewer ;
ProgramCommitteeChair ::= endReview::Review ;
Contact_Author ::= has_sent::Submitted_Paper Alternate_Email::String ;
Call_for_participation ::= has_authors::Person has_a_date_of_issue::date ;
Invitation_Of_Reviewers_Phase ::= hasPhaseStatus::EEnum ;
Scholar ::= studyAt::University ;
chair ::= was_a_committee_chair_of::Committee assigns_reviewers_to_article::Reviewer creates_program::program ;
MainAuthor ::= submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution write_paper::Paper submitPaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing ;
TPCMember ::= loggin_in::System submit::Document get::Email E-mail::String hasMail::String worksForCompany::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
Assistant ::= loggin_in::System submit::Document get::Email E-mail::String hasMail::String worksForCompany::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
ConferenceEvent ::= NonAcademicEvent ;
 ConferenceEvent ::= AcademicEvent ;
 ConferenceEvent ::= hasAttendee::Person hasLocation::Place hasProgramme::Programme hasEndDateTime::dateTime hasStartDateTime::dateTime ;
Conference_document ::= Conference_contribution ;
 Conference_document ::= Information_for_participants ;
 Conference_document ::= Call_for_paper ;
 Conference_document ::= Conference_announcement ;
 Conference_document ::= Call_for_participation ;
 Conference_document ::= Conference_www ;
 Conference_document ::= Review ;
 Conference_document ::= has_authors::Person has_a_date_of_issue::date ;
Multi-author_Volume ::= Proceedings ;
 Multi-author_Volume ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String recieved_by::User used_by::Person submited__by::User ;
Member ::= Program_chair ;
 Member ::= Advocate ;
 Member ::= Web_address::String ;
ProgramCoChair ::= organizes::Conference ;
Regular_Session ::= hasAssignedPaper::AcceptedPaper room::String isAssociatedTo::Slot hasChair::Chair ;
Secondary_Reviewer ::= isMemberOf::Conference reject_paper::Paper accept::Paper ;
People ::= Member ;
 People ::= Surname::String Name::String Country::String E-mail::String Organisation::String ;
University ::= scientificallyOrganises::Academic_Institution isProviderOf::Sponsorship ;
Administrator ::= approve::Event assign::Role assigns::Thing send::Email generate::Thing finalizePaperAssignment::Conference runPaperAssignmentTools::Conference enableVirtualMeeting::Conference startReviewerBidding::Conference assignReviewer::Reviewer rejectPaper::Paper enterConferenceDetails::Conference printHardcopyMailingManifests::Conference setMaxPapers::ProgramCommitteeMember enterReviewCriteria::Conference acceptPaper::Paper addProgramCommitteeMember::ProgramCommitteeMember ;
Rejected_paper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
Author_Role ::= assigned_by::Administrator ;
Conference_Paper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
bidding_of_reviewer ::= is_performed_by::human ;
BookletOfAbstracts ::= isProducedBy::Chair ;
StudentAdvocate ::= organizes::Conference ;
PaperPresentation ::= relatedToPaper::AcceptedPaper ;
Chair ::= produces::OutputDocument sets::Thing accepts::Paper rejects::Paper asksForPreference::Reviewer isChairOf::Session ;
Negative_Review ::= gives_classification::classification is_created_in::Activity review_written_by::Reviewer reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer containsEvaluation::Evaluation rates::Paper isWritenBy::Reviewer assigned_review_by::Primary_Reviewer written_review_by::Reviewer writtenBy::Reviewer reviews::Reviewed_contribution ;
ExternalReviewersList ::= isProducedBy::Chair ;
abstract_of_paper ::= article_written_by::Author has_reviewer::Reviewer has_abstract::Abstract goes_through::Activity is_sent_to::human is_created_in::Activity structure_created_by::human has_author::human gives_classification::classification ;
Money ::= Tax ;
 Money ::= Fee ;
 Money ::= Sponzorship ;
 Money ::= Tip ;
 Money ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
Approval_Email ::= confirm::Event ;
AntennasTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Source_Archive ::= hasContributionFileStatus::EEnum ;
MicroelectronicsTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Template ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String recieved_by::User used_by::Person submited__by::User ;
session ::= starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator ;
Role ::= Admin_Role ;
 Role ::= Author_Role ;
 Role ::= Committe_Role ;
 Role ::= Head_Role ;
 Role ::= Reviewer_Role ;
 Role ::= assigned_by::Administrator ;
Chairman ::= AssociatedChair ;
 Chairman ::= ProgramCommitteeChair ;
 Chairman ::= loggin_in::System submit::Document get::Email E-mail::String hasMail::String worksForCompany::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String memberOfConference::Conference member_of_conference::Conference ;
Contributed_Talk ::= (presentationOfPaper::Document)+ ;
Contact_Person ::= is_author_of::article performs_activity::Activity is_employed_in::institute has_topic_of_interest::Topic supervises::Activity e-mail::String last_name::String first_name::String ;
TutorialProposal ::= isSubmittedBy::Author hasAuthor::Author submissionDeadline::dateTime ;
Paper_File ::= is_Type::Format ;
Proposed_Conflict ::= conflictProposedBy::Thing ;
Rejected_Paper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
 Rejected_Paper ::= hasReview::Review ;
Event_Approval ::= hasTopic::Topic expectedAttendance::Integer isPartOf::Conference is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime has_result::article sent_by::Person ;
Invited_Paper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
program ::= program_created_by::chair has_session::session ;
Plenary_lecture_speaker ::= submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution write_paper::Paper submitPaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing ;
Criterion ::= hasWeight::double ;
Academic_Institution ::= Research_Institute ;
 Academic_Institution ::= University ;
 Academic_Institution ::= scientificallyOrganises::Academic_Institution ;
PaperStatus ::= isStatusOf::Paper ;
Call ::= CallForPapers ;
 Call ::= CallForReviews ;
 Call ::= CallForManuscripts ;
 Call ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
Video_presentation ::= is_given_by::Active_conference_participant ;
Author_book_proceedings_included ::= submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution write_paper::Paper submitPaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing ;
submission_process ::= is_performed_by::human ;
Tip ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
Camera_ready_manuscript_deadline ::= done_till::date ;
Event ::= Symposium ;
 Event ::= Social_event ;
 Event ::= Administrative_event ;
 Event ::= Working_event ;
 Event ::= pc_meeting ;
 Event ::= session ;
 Event ::= Social_Event ;
 Event ::= Scientific_Event ;
 Event ::= starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator ;
Deadline ::= Deadline_hotel_reservation ;
 Deadline ::= Submissions_deadline ;
 Deadline ::= Deadline_for_notification_of_acceptance ;
 Deadline ::= Registation_deadline ;
 Deadline ::= Camera_ready_manuscript_deadline ;
 Deadline ::= done_till::date ;
MealEvent ::= ConferenceDinner ;
 MealEvent ::= hasMenu::MealMenu ;
Session ::= Conference_Session ;
 Session ::= Regular_Session ;
 Session ::= Poster_Session ;
 Session ::= Demo_Session ;
 Session ::= Workshop_Session ;
 Session ::= Speaker_lecture ;
 Session ::= hasAssignedPaper::AcceptedPaper room::String isAssociatedTo::Slot hasChair::Chair ;
PublicityWebChair ::= organizes::Conference ;
Research_Institute ::= scientificallyOrganises::Academic_Institution ;
Reviewer_Role ::= assigned_by::Administrator ;
Committe_Role ::= assigned_by::Administrator ;
PhaseOfConferencePreparation ::= Setup_Phase ;
 PhaseOfConferencePreparation ::= Camera_Ready_Copy_Phase ;
 PhaseOfConferencePreparation ::= Assignment_Phase ;
 PhaseOfConferencePreparation ::= Blocked_Phase ;
 PhaseOfConferencePreparation ::= Abstract_And_Paper_Submission_Phase ;
 PhaseOfConferencePreparation ::= Invitation_Of_Reviewers_Phase ;
 PhaseOfConferencePreparation ::= Review_Phase ;
 PhaseOfConferencePreparation ::= Closed_Phase ;
 PhaseOfConferencePreparation ::= Bidding_Phase ;
 PhaseOfConferencePreparation ::= hasPhaseStatus::EEnum ;
Administrative_event ::= Reviewing_results_event ;
 Administrative_event ::= Reviewing_event ;
 Administrative_event ::= Registration_of_participants_event ;
 Administrative_event ::= Submission_event ;
 Administrative_event ::= Camera_Ready_event ;
 Administrative_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Brief_introduction_for_Session_chair ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String recieved_by::User used_by::Person submited__by::User ;
Program ::= isProducedBy::Chair ;
Conference_Program ::= Program_made_by::Program_chair planned_papers::Planed_Paper ;
Proceedings ::= Conference_Proceedings ;
 Proceedings ::= (includes::Thing)+ ;
Positive_Review ::= gives_classification::classification is_created_in::Activity review_written_by::Reviewer reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer containsEvaluation::Evaluation rates::Paper isWritenBy::Reviewer assigned_review_by::Primary_Reviewer written_review_by::Reviewer writtenBy::Reviewer reviews::Reviewed_contribution ;
PublishedPaper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
Company ::= isProviderOf::Sponsorship ;
DoubleBlindReview ::= isExecutedBy::Reviewer ;
Event_Setup ::= Paper_Typologies ;
 Event_Setup ::= Review_Form ;
 Event_Setup ::= Submission_Template ;
 Event_Setup ::= Event_Tracks ;
 Event_Setup ::= Research_Topic ;
 Event_Setup ::= Email_Template ;
 Event_Setup ::= define::Event ;
CommitteeMember ::= Secondary_Reviewer ;
 CommitteeMember ::= Primary_Reviewer ;
 CommitteeMember ::= isMemberOf::Conference reject_paper::Paper accept::Paper ;
Corresponding_Author ::= submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution write_paper::Paper submitPaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing ;
PendingPaper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
PowerlineTransmissionTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
IndustryOrganization ::= isProviderOf::Sponsorship ;
TestOnlyTopic ::= isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Contribution_File ::= Source_Archive ;
 Contribution_File ::= Poster ;
 Contribution_File ::= Camera_Ready_Copy ;
 Contribution_File ::= Slides ;
 Contribution_File ::= Paper_File ;
 Contribution_File ::= hasContributionFileStatus::EEnum ;
Industrial_Paper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
CD-ROM ::= isProducedBy::Chair ;
Co-chair ::= was_a_committe_co-chair_of::Committee ;
Abstract ::= Tutorial_Abstract ;
 Abstract ::= Invited_Talk_Abstract ;
 Abstract ::= (is_the_1th_part_of::Thing)+ part_of_article::article ;
Flyer ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String recieved_by::User used_by::Person submited__by::User ;
Tutorial_speaker ::= submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution write_paper::Paper submitPaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing ;
Organising_Agency ::= (publisherOf::Thing)+ technicallyOrganises::Thing ;
PaperFullVersion ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
Demo_Session ::= hasAssignedPaper::AcceptedPaper room::String isAssociatedTo::Slot hasChair::Chair ;
SingleLevelConference ::= is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country isOrganizedBy::OrganizingCommittee annualOrder::Integer takesPlace::Location hasAcronym::String finishedBy::Program_Comitee_Chair focusesOn::Topic startedBy::Program_Comitee_Chair takesPlace::Location has_conference_member::ConferenceMember WebSite::anyURI Topic_of_conference::String Date::date hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
Sponsorship ::= TravelGrant ;
 Sponsorship ::= providedBy::Organization hasCostCurrency::String hasCostAmount::Integer ;
ConferenceVenuePlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
Conference_contribution ::= Poster ;
 Conference_contribution ::= Written_contribution ;
 Conference_contribution ::= Presentation ;
 Conference_contribution ::= is_submitted_at::Conference_volume ;
Contribution ::= Poster ;
 Contribution ::= Short_paper ;
 Contribution ::= Contribution_File ;
 Contribution ::= Paper ;
 Contribution ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String changedBy::Author hasContributionStatus::EEnum ;
Invited_Talk ::= (presentationOfPaper::Document)+ ;
Demo_Paper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
CallForReviews ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
Paper_Typologies ::= define::Event ;
Information_for_participants ::= has_authors::Person has_a_date_of_issue::date ;
Camera_Ready_Copy_Phase ::= hasPhaseStatus::EEnum ;
Programme_Brochure ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String recieved_by::User used_by::Person submited__by::User ;
Reviewer ::= Meta-Reviewer ;
 Reviewer ::= invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ writes_review::Review hasReviewHistory::PersonalReviewHistory executes::DoubleBlindReview cooperates::ExternalReviewer IsAssignedTo::Paper hasConflictedPaper::Paper hasPreferredPaper::Paper hasPreferredTopic::ResearchTopic writeReview::Review has_made_review::Paper_Review UserName::String Comments_to_Chair::String Other_Areas::String refuses::Pending_Proposed_Conflict reviews::Paper bidsFor::Paper confirmes::Pending_Proposed_Conflict assignedPaperBy::Program_Comitee_Chair assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper assignExternalReviewer::ExternalReviewer ;
Meta-Review ::= gives_classification::classification is_created_in::Activity review_written_by::Reviewer reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer containsEvaluation::Evaluation rates::Paper isWritenBy::Reviewer assigned_review_by::Primary_Reviewer written_review_by::Reviewer writtenBy::Reviewer reviews::Reviewed_contribution ;
Slot ::= date::date endsAt::time beginsAt::time forms::ConferenceProgram hosts::Session ;
Student ::= submits_to_conference::Conference earlyRegistration::Boolean ;
 Student ::= loggin_in::System submit::Document get::Email E-mail::String hasMail::String worksForCompany::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
Poster_Paper ::= full_paper_size::Integer isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
managing_of_conference_process ::= hasTopic::Topic expectedAttendance::Integer isPartOf::Conference is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime has_result::article sent_by::Person ;
Planed_Paper ::= is_planned_in::Conference_Program ;
Call_for_paper ::= has_authors::Person has_a_date_of_issue::date ;
Conference_www ::= has_a_URL::String ;
Rejected_contribution ::= has_a_review::Review ;
Invited_talk ::= is_given_by::Active_conference_participant ;
Account ::= registred_by::Person ;
Submission_Template ::= define::Event ;
Event_Tracks ::= define::Event ;
Co-Author ::= co-writePaper::Paper ;
Camera_Ready_Copy ::= hasContributionFileStatus::EEnum ;
Review_expertise ::= has_a_submitted_contribution::Submitted_contribution has_an_expertise::EEnum ;
Event_URL ::= concerned::Event ;
Important_dates ::= is_an_abstract_submission_date::date is_a_full_paper_submission_date::date is_an_ending_date::date is_a_date_of_acceptance_announcement::date is_a_date_of_camera_ready_paper_submission::date is_a_starting_date::date belong_to_a_conference_volume::Conference_volume ;
Submission_event ::= follows::Administrative_event parallel_with::Administrative_event ;
ActivePaper ::= RatedPapers ;
 ActivePaper ::= hasRating::ReviewRating ;
AcceptedPaper ::= relatedToEvent::PaperPresentation isAssignedToSession::Session ;
TravelGrant ::= providedBy::Organization hasCostCurrency::String hasCostAmount::Integer ;
Review_preference ::= (has_a_topic_or_a_submission_contribution::Thing)+ has_a_degree::Integer ;
--------------------metamodels::PDG.bgf--------------------
ExpressionNode ::= name::String expression::Expression (dataDependenceNodes::ExpressionNode)+ (controlDependenceNodes::ExpressionNode)+ ;
EnterNode ::= name::String (controlDependenceNodes::ExpressionNode)+ ;
Expression ::= name::String isIdentifier::Boolean (innerExpressions::Expression)+ ;
MProgramDependenceGraph ::= node::EnterNode ;
--------------------metamodels::PRR.bgf--------------------
RealExp ::= realSymbol::Double ;
IntegerExp ::= integerSymbol::Integer ;
RuleCondition ::= ruleConditionOwner::Rule conditionExp::PRRExpressions/OclExpression ;
VariableDeclaration ::= type::PRRTypes/OclType varName::String (variableExp::PRRExpressions/VariableExp)+ ;
Rule ::= binding::Binding condition::RuleCondition (actions::RuleAction)+ ruleOwner::RuleSet ;
Element ::= NamedElement ;
 Element ::= RuleSet ;
 Element ::= RuleAction ;
 Element ::= RuleCondition ;
 Element ::= Binding ;
 Element ::= OclExpression ;
 Element ::= VariableDeclaration ;
 Element ::= location::String (commentsBefore::String)+ (commentsAfter::String)+ ;
NavigationOrAttributeCallExp ::= name::String ;
LoopExp ::= body::PRRExpressions/OclExpression (iterators::PRRExpressions/Iterator)+ ;
OperationCallExp ::= (arguments::PRRExpressions/OclExpression)+ operationName::String signature::String ;
RuleVariable ::= ruleVariableOwner::Binding filter::PRRExpressions/OclExpression ;
BooleanExp ::= booleanSymbol::Boolean ;
OclType ::= (variableDeclaration::PRRExpressions/VariableDeclaration)+ (oclExpression::PRRExpressions/OclExpression)+ appliedAllInstance::PRRExpressions/AllInstanceExp (typeExp::PRRExpressions/TypeExp)+ ;
CreateAction ::= (insertArguments::PRRExpressions/OclExpression)+ ;
RuleAction ::= DeleteAction ;
 RuleAction ::= AssignAction ;
 RuleAction ::= InvokeAction ;
 RuleAction ::= CreateAction ;
 RuleAction ::= actionOwner::Rule ;
IteratorExp ::= name::String ;
Iterator ::= loopExpr::PRRExpressions/LoopExp ;
InvokeAction ::= invocation::PRRExpressions/OclExpression ;
StringExp ::= stringSymbol::String ;
AllInstanceExp ::= sourceType::PRRTypes/OclType ;
RuleSet ::= (rules::Rule)+ ;
AssignAction ::= objValue::PRRExpressions/OclExpression aValue::PRRExpressions/OclExpression ;
Binding ::= bindingOwner::Rule (ruleVariable::RuleVariable)+ ;
TypeExp ::= referredType::PRRTypes/OclType ;
VariableExp ::= referredVariable::PRRExpressions/VariableDeclaration ;
DeleteAction ::= objValue::PRRExpressions/OclExpression ;
--------------------metamodels::Parameters.bgf--------------------
Parameter ::= name::String value::String ;
ParametersList ::= (parameters::Parameter)+ ;
--------------------metamodels::PathExp.bgf--------------------
PathExp ::= (states::State)+ (transitions::Transition)+ ;
Transition ::= source::State target::State ;
State ::= (incoming::Transition)+ (outgoing::Transition)+ ;
--------------------metamodels::Perceptory.bgf--------------------
Constraint ::= caracteristic::Characteristic theClass::Class (relationSchip::RelationSchip)+ ;
Characteristic ::= DescriptiveAttribute ;
 Characteristic ::= Geometry ;
 Characteristic ::= Temporality ;
 Characteristic ::= VisualInfo ;
 Characteristic ::= details::MetaData rule::BusnissRule operations::Operation theClass::Class relationSchip::RelationSchip constraint::Constraint ;
Source ::= metaData::MetaData ;
Class ::= (characteristic::Characteristic)+ details::MetaData operations::Operation (myOperations::Operation)+ (constraint::Constraint)+ steriotype::Steriotype (packages::Package)+ ;
BusnissRule ::= characteristic::Characteristic ;
Geometry ::= tempsDef::Temporality descriptiveAttributeg::DescriptiveAttribute ;
Value ::= enumeratedDomain::EnumeratedDomain ;
DescriptiveAttribute ::= tempsDef::Temporality specialDef::Geometry steriotype::Steriotype domain::Domain ;
MetaData ::= source::Source characteristic::Characteristic operations::Operation theClass::Class ;
VisualInfo ::= details::MetaData rule::BusnissRule operations::Operation theClass::Class relationSchip::RelationSchip constraint::Constraint ;
Steriotype ::= PerceptorySteriotype ;
 Steriotype ::= (descriptiveAttribute::DescriptiveAttribute)+ (operations::Operation)+ (relationSchip::RelationSchip)+ (theClass::Class)+ (thePackage::Package)+ ;
Temporality ::= geometry::Geometry descriptiveAttributet::DescriptiveAttribute ;
Dependency ::= (affectCharacteristic::Characteristic)+ constraint::Constraint (steriotype::Steriotype)+ (packages::Package)+ associatePackages::Package ;
Operation ::= detail::MetaData (inCharacteristic::Characteristic)+ (affectFeature::Class)+ steriotype::Steriotype behaviour::Class ;
Package ::= steriotype::Steriotype (children::Package)+ parent::Package (classes::Class)+ (relationSchip::RelationSchip)+ (connectedRelationSchip::RelationSchip)+ ;
EnumeratedDomain ::= (value::Value)+ ;
Domain ::= RangeDomain ;
 Domain ::= EnumeratedDomain ;
 Domain ::= (descriptiveAttribute::DescriptiveAttribute)+ ;
Generalisation ::= (affectCharacteristic::Characteristic)+ constraint::Constraint (steriotype::Steriotype)+ (packages::Package)+ associatePackages::Package ;
RelationSchip ::= Association ;
 RelationSchip ::= Generalisation ;
 RelationSchip ::= Dependency ;
 RelationSchip ::= (affectCharacteristic::Characteristic)+ constraint::Constraint (steriotype::Steriotype)+ (packages::Package)+ associatePackages::Package ;
PerceptorySteriotype ::= Geometry ;
 PerceptorySteriotype ::= Temporality ;
 PerceptorySteriotype ::= VisualInfo ;
 PerceptorySteriotype ::= (descriptiveAttribute::DescriptiveAttribute)+ (operations::Operation)+ (relationSchip::RelationSchip)+ (theClass::Class)+ (thePackage::Package)+ ;
RangeDomain ::= (descriptiveAttribute::DescriptiveAttribute)+ ;
--------------------metamodels::Person.bgf--------------------
Person ::= name::String firstName::String phone::String ;
--------------------metamodels::PetriNet_extended.bgf--------------------
Movement ::= exec::Execution fire::Transition source::Marking target::Marking ;
Token ::= placedAt::Place marking::Marking ;
Execution ::= net::PetriNet (markings::Marking)+ (movements::Movement)+ ;
TransitionToPlace ::= from::Transition to::Place ;
PlaceToTransition ::= from::Place to::Transition ;
Place ::= (incomingArc::TransitionToPlace)+ (outgoingArc::PlaceToTransition)+ ;
PetriNet ::= (elements::Element)+ (arcs::Arc)+ (execs::Execution)+ ;
Marking ::= exec::Execution (tokens::Token)+ ;
Transition ::= (incomingArc::PlaceToTransition)+ (outgoingArc::TransitionToPlace)+ ;
--------------------metamodels::PluginEclipse.bgf--------------------
Xfriends ::= (bundles::Bundle)+ ;
Range ::= isLeftInclusive::Boolean isRightInclusive::Boolean lowerBound::Version upperBound::Version ;
AttResolution ::= value::Resolution ;
Resolution ::= (Mandatory::ε) | (Optional::ε) ;
Version ::= major::Integer minor::Integer micro::Integer qualification::String ;
Eclipse ::= (bundles::Bundle)+ (packages::Package)+ ;
Package ::= fqn::String (importedBy::ImportedPackage)+ exportedBy::ExportedPackage ;
Xinternal ::= value::Boolean ;
ExportedPackage ::= Xinternal ;
 ExportedPackage ::= package::Package version::Version xFriends::Xfriends ;
AttVisibility ::= value::Visibility ;
ImportedPackage ::= resolution::Resolution package::Package range::Range ;
Bundle ::= symbolicName::String singleton::Boolean manifestVersion::Integer (require::RequiredBundle)+ version::Version (export::ExportedPackage)+ (import::ImportedPackage)+ (packages::Package)+ ;
Visibility ::= (Private::ε) | (Reexport::ε) ;
RequiredBundle ::= (requireBundleAttribute::RequireBundleAttribute)+ bundle::Bundle ;
--------------------metamodels::ProMarte.bgf--------------------
ProcessResource ::= (components::Component)+ ;
InstantUnitKinds ::= (TAI::ε) | (UT0::ε) | (UT1::ε) | (UTC::ε) | (TT::ε) | (TDB::ε) | (TCG::ε) | (TCB::ε) | (Sideral::ε) | (Local::ε) ;
ECU ::= (contain::ECUGate)+ ;
DiscreteTimeBase ::= Clock ;
 DiscreteTimeBase ::= refEvent::Event ;
Behavior ::= (scenario::Scenario)+ ;
NFPRateType ::= value::String unit::RateUnitKinds ;
NFPType ::= NFPInstantType ;
 NFPType ::= NFPurationType ;
 NFPType ::= NFPRateType ;
 NFPType ::= NFPProbabilityType ;
 NFPType ::= NFPSizeType ;
 NFPType ::= valueSpecificationLanguage::String source::SourceKinds (constrainedSpec::NFPValueSpecification)+ ;
SimultaneousEventOccurrence ::= at::Instant occurence::TimedEventOccurence ;
Clock ::= accuracy::MetricTimeInterval offset::MetricTimeInterval (generatedInterrupt::ClockInterrupt)+ ;
HardwareDeployment ::= owner::Hardware (contain::HardwareEntityInstance)+ ;
Step ::= (predecessor::Step)+ (successor::Step)+ (stepLatency::ComplexNFP)+ (usedResourceService::Service)+ ;
DurationUnitKinds ::= (ns::ε) | (us::ε) | (ms::ε) | (s::ε) | (min::ε) | (hrs::ε) | (dys::ε) | (wks::ε) | (mos::ε) | (yrs::ε) ;
Realization ::= (function::Measure)+ owner::QuantitativeNFP ;
SourceKinds ::= (est::ε) | (meas::ε) | (req::ε) | (implicit::ε) | (calc::ε) ;
Channel ::= specify::ECUGate ;
Delay ::= (duration::TimeInterval)+ (start::TimeValue)+ (end::TimeValue)+ ;
ECUGate ::= owner::ECU kindOf::Channel ;
DesignConcern ::= (relevantQuantity::Quantity)+ annotedModel::AnnotatedModel ;
ProcessingResource ::= (links::Link)+ (components::Component)+ ;
Response ::= efficiency::ComplexNFP endToEndLatency::ComplexNFP (cause::Trigger)+ (behavior::Scenario)+ ;
Component ::= StructuredComponent ;
 Component ::= BasicComponent ;
 Component ::= (process::ProcessResource)+ (interfaces::Interface)+ ;
NFPConstant ::= NFPListConstant ;
 NFPConstant ::= NFPStringConstant ;
 NFPConstant ::= NFPIntegerConstant ;
 NFPConstant ::= NFPRealConstant ;
 NFPConstant ::= NFPBooleanConstant ;
 NFPConstant ::= ownerList::NFPListConstant ;
SingleInstant ::= coPoint::CoincidencePoint ;
NFPProbabilityType ::= value::String unit::ProbabilityUnitKinds ;
MultipleTimeValue ::= (values::SingleTimeValue)+ ;
NFPExpression ::= (body::String)+ (operand::NFPValueSpecification)+ ;
System ::= (dimension::Quantity)+ ;
SingleInterval ::= first::SingleInstant last::SingleInstant (members::SingleInstant)+ ;
NFPIntegerConstant ::= body::Integer ;
NFPValueSpecification ::= NFPConstant ;
 NFPValueSpecification ::= NFPVariable ;
 NFPValueSpecification ::= NFPExpression ;
 NFPValueSpecification ::= (constrainedBy::NFPType)+ expression::NFPExpression ;
BasicNFP ::= statisticalQualifier::StatisticalQualifierKinds directon::DirectionKinds typedBy::NFPType (valuedBy::NFPValueSpecification)+ (dimensionOf::ComplexNFP)+ ;
SingleTimeBase ::= currentValue::SingleTimeValue maximumValue::SingleTimeValue currentInstant::SingleInstant ;
TimedEvent ::= (timestamp::MetricTimeValue)+ ;
QuantitativeNFP ::= (sampleSet::Realization)+ (measure::Measure)+ ;
HardwareEntityInstance ::= ECUInstance ;
 HardwareEntityInstance ::= ChannelInstance ;
 HardwareEntityInstance ::= owner::HardwareDeployment ;
DirectionKinds ::= (increasing::ε) | (decreasing::ε) | (undefined::ε) ;
Transaction ::= (workload::Workload)+ (trigger::Trigger)+ response::Response ;
Measure ::= (appliesTo::Realization)+ owner::QuantitativeNFP ;
NFPurationType ::= value::String unit::DurationUnitKinds ;
SingleTimeInterval ::= start::SingleTimeValue end::SingleTimeValue ;
CoincidencePoint ::= (coincidenceInstants::SingleInstant)+ ;
NFPCategory ::= (setOf::NFP)+ (ownes::NFPCategory)+ owner::NFPCategory ;
NFPVariable ::= varName::String ;
NFPBooleanConstant ::= body::Boolean ;
TimedEventOccurence ::= at::Instant timestamp::TimeValue ;
ModelElement ::= AnnotatedModelElement ;
 ModelElement ::= owner::Model ;
Scenario ::= TimedAction ;
 Scenario ::= Step ;
 Scenario ::= (behavior::Behavior)+ (scenarionLatency::ComplexNFP)+ (steps::Step)+ root::Step endToEndResponse::Response ;
TimedAction ::= Delay ;
 TimedAction ::= (duration::TimeInterval)+ (start::TimeValue)+ (end::TimeValue)+ ;
ECUInstance ::= (composedOf::ECUGateInstance)+ ;
AnnotatedModelElement ::= Classifier ;
 AnnotatedModelElement ::= InstanceSpecification ;
 AnnotatedModelElement ::= (annotation::NFP)+ ;
ModelingConcern ::= AnalysisConcern ;
 ModelingConcern ::= DesignConcern ;
 ModelingConcern ::= (relevantQuantity::Quantity)+ annotedModel::AnnotatedModel ;
ProbabilityUnitKinds ::= (us::ε) | (s::ε) ;
Timer ::= isPeriodic::Boolean duration::MetricTimeValue (genratedTimeOuts::TimeOut)+ ;
StructuredResource ::= ProcessingResource ;
 StructuredResource ::= ProcessResource ;
 StructuredResource ::= LogicalResource ;
 StructuredResource ::= ServerResource ;
 StructuredResource ::= basicResource::BasicResource ;
SingleTimeValue ::= (denotedInstant::Instant)+ ref::TimeBase ;
RateUnitKinds ::= (kbs::ε) | (MIPS::ε) ;
SizeUnitKinds ::= (bits::ε) | (bytes::ε) | (Mb::ε) | (MB::ε) ;
NFPRealConstant ::= bodyBeforeComa::Integer bodyAfterComa::Integer ;
NFPListConstant ::= (listElements::NFPConstant)+ ;
Interface ::= service::Service ;
Trigger ::= arrivalPattern::ComplexNFP (effect::Response)+ ;
ChannelInstance ::= gateInstances::ECUGateInstance ;
NFP ::= QualitativeNFP ;
 NFP ::= QuantitativeNFP ;
 NFP ::= ComplexNFP ;
 NFP ::= measurementQuantity::Quantity (storedBy::NFPLibrary)+ groupedBy::NFPCategory ;
LogicalResource ::= basicResource::BasicResource ;
Workload ::= (transaction::Transaction)+ ;
ECUGateInstance ::= channel::ChannelInstance ;
Service ::= resource::ServerResource interface::Interface ;
MultipleInterval ::= (first::CoincidencePoint)+ (last::CoincidencePoint)+ ;
AnalysisContext ::= (global::ComplexNFP)+ workload::Workload behavior::Behavior (usedResources::Resource)+ ;
HardwareLibrary ::= owner::Hardware ;
NFPSizeType ::= value::String unit::SizeUnitKinds ;
ServerResource ::= (services::Service)+ ;
AnnotatedModel ::= (conformsTo::ModelingConcern)+ (import::NFPLibrary)+ ;
StatisticalQualifierKinds ::= (max::ε) | (min::ε) | (range::ε) | (mean::ε) | (variance::ε) | (standardDeviation::ε) | (percentil::ε) | (frequency::ε) | (moment::ε) | (distribution::ε) | (instantaneous::ε) ;
BasicComponent ::= (process::ProcessResource)+ (interfaces::Interface)+ ;
TimingMechanism ::= Timer ;
 TimingMechanism ::= Clock ;
 TimingMechanism ::= stability::String drift::String skew::String origin::TimedEvent resolution::MetricTimeInterval refClock::Clock state::String ;
MultipleTimeBase ::= (bases::SingleTimeBase)+ ;
QualitativeNFP ::= (parameter::NFP)+ ;
NFPStringConstant ::= body::String ;
StructuredComponent ::= (process::ProcessResource)+ (interfaces::Interface)+ ;
HardwareEntity ::= ECU ;
 HardwareEntity ::= owner::Hardware ;
Model ::= AnnotatedModel ;
 Model ::= (ownes::ModelElement)+ ;
Hardware ::= owner::Hardware (containH::Hardware)+ (containHL::HardwareLibrary)+ (containHE::HardwareEntity)+ (deploymentConfiguration::HardwareDeployment)+ ;
ComplexNFP ::= (parent::ComplexNFP)+ (child::ComplexNFP)+ (ownes::BasicNFP)+ ;
DiscreteInstant ::= next::DiscreteInstant previous::DiscreteInstant refOcc::EventOccurence ;
AnalysisConcern ::= (relevantQuantity::Quantity)+ annotedModel::AnnotatedModel ;
NFPLibrary ::= (refersTo::NFPLibrary)+ (usedNFP::NFP)+ ;
NFPInstantType ::= value::String unit::InstantUnitKinds ;
--------------------metamodels::Problem.bgf--------------------
Problem ::= severity::Severity location::String description::String ;
Severity ::= (error::ε) | (warning::ε) | (critic::ε) ;
--------------------metamodels::Program.bgf--------------------
IntegerExp ::= symbol::Integer ;
Direction ::= (in::ε) | (out::ε) ;
VariableDeclaration ::= Parameter ;
 VariableDeclaration ::= type::Type initialValue::Expression structure::Structure ;
ExpressionStat ::= expression::Expression ;
ProcedureCallExp ::= (arguments::Expression)+ ;
OperatorCallExp ::= right::Expression ;
ConditionalStat ::= condition::Expression (thenStats::Statement)+ (elseStats::Statement)+ ;
Type ::= name::String ;
Monitor ::= program::Program ;
Parameter ::= direction::Direction procedure::Procedure ;
WhileStat ::= condition::Expression (doStats::Statement)+ ;
BooleanExp ::= symbol::Boolean ;
Program ::= (monitors::Monitor)+ ;
AttributeCallExp ::= source::Expression name::String ;
Procedure ::= container::ProcContainerElement (parameters::Parameter)+ (statements::Statement)+ ;
AssignmentStat ::= target::VariableExp value::Expression ;
VariableExp ::= declaration::VariableDeclaration ;
--------------------metamodels::Promenade.bgf--------------------
BasPrecedence ::= Strong ;
 BasPrecedence ::= Start ;
 BasPrecedence ::= End ;
 BasPrecedence ::= FeedBack ;
 BasPrecedence ::= (deprecs::DerPrecedence)+ (parbind::ParBinding)+ ;
MetaTaskOccurence ::= (dprecs::DerPrecedence)+ (taskCl::MetaTask)+ ;
ParameterUML ::= ParameterPrec ;
 ParameterUML ::= task::MetaTask (doc::MetaDocument)+ ;
DerPrecedence ::= Weak ;
 DerPrecedence ::= Grouping ;
 DerPrecedence ::= (precs::Precedence)+ (auxTasks::MetaTaskOccurence)+ ;
MetaTask ::= (params::ParameterUML)+ (occurs::MetaTaskOccurence)+ ;
Precedence ::= DynPrecedence ;
 Precedence ::= DerPrecedence ;
 Precedence ::= BasPrecedence ;
 Precedence ::= (deprecs::DerPrecedence)+ (parbind::ParBinding)+ ;
ParameterPrec ::= (parbindsTar::ParBinding)+ (parbindsSour::ParBinding)+ (dstParams::ParameterPrec)+ (orParams::ParameterPrec)+ ;
Weak ::= (precs::Precedence)+ (auxTasks::MetaTaskOccurence)+ ;
DependancyUML ::= (suppier::ModelElement)+ (client::ModelElement)+ ;
ParBinding ::= inclusion::Boolean (precs::Precedence)+ targetPar::ParameterPrec sourcePar::ParameterPrec ;
ModelElement ::= MetaTaskOccurence ;
 ModelElement ::= MetaTask ;
 ModelElement ::= dependencyUMLsupp::DependancyUML dependencyUMLcli::DependancyUML ;
DynPrecedence ::= Strong ;
 DynPrecedence ::= Start ;
 DynPrecedence ::= End ;
 DynPrecedence ::= FeedBack ;
 DynPrecedence ::= Weak ;
 DynPrecedence ::= Grouping ;
 DynPrecedence ::= (deprecs::DerPrecedence)+ (parbind::ParBinding)+ ;
Grouping ::= (precs::Precedence)+ (auxTasks::MetaTaskOccurence)+ ;
MetaDocument ::= (params::ParameterUML)+ ;
--------------------metamodels::PtolemyII.bgf--------------------
CompositeActor ::= directors::Director ;
ComponentPort ::= po_container::Entity (links::Relation)+ ;
Director ::= ca_container::CompositeActor ;
Relation ::= ComponentRelation ;
 Relation ::= (ports::Port)+ ;
Attribute ::= Parameter ;
 Attribute ::= ComponentEntity ;
 Attribute ::= att_container::Entity value::String ;
CompositeEntity ::= WorkSpace ;
 CompositeEntity ::= CompositeActor ;
 CompositeEntity ::= (containees::ComponentEntity)+ (relations::ComponentRelation)+ ;
AtomicActor ::= ce_container::CompositeEntity ;
ComponentRelation ::= re_container::CompositeEntity ;
Parameter ::= pa_container::Entity dataType::EDataType ;
EDataType ::= value::String ;
NamedObject ::= Attribute ;
 NamedObject ::= Entity ;
 NamedObject ::= Port ;
 NamedObject ::= Relation ;
 NamedObject ::= Director ;
 NamedObject ::= name::String ;
WorkSpace ::= (containees::ComponentEntity)+ (relations::ComponentRelation)+ ;
Entity ::= (attributes::Attribute)+ (parameters::Parameter)+ (ports::Port)+ ;
Port ::= ComponentPort ;
 Port ::= po_container::Entity (links::Relation)+ ;
ComponentEntity ::= AtomicActor ;
 ComponentEntity ::= CompositeEntity ;
 ComponentEntity ::= ce_container::CompositeEntity ;
--------------------metamodels::Publication.bgf--------------------
Publication ::= title::String authors::String nbPages::Integer ;
--------------------metamodels::QVT.bgf--------------------
StringLiteralExp ::= stringSymbol::String ;
TypedModel ::= transformation::Transformation (usedPackage::Package)+ (dependsOn::TypedModel)+ ;
TupleLiteralPart ::= TupleLiteralExp::TupleLiteralExp attribute::Property ;
Tag ::= (element::Element)+ transformation::Transformation owner::Module value::String name::String ;
ImportKind ::= (extension::ε) | (access::ε) ;
Function ::= queryExpression::OclExpression ;
Property ::= ContextualProperty ;
 Property ::= Class::Class opposite::Property module::Module isReadOnly::Boolean isDerived::Boolean isComposite::Boolean isId::Boolean default::String ;
CollectionKind ::= (OrderedSet::ε) | (Set::ε) | (Bag::ε) | (Sequence::ε) ;
CollectionItem ::= item::OclExpression ;
Pattern ::= CorePattern ;
 Pattern ::= DomainPattern ;
 Pattern ::= (predicate::Predicate)+ (bindsTo::Variable)+ whenOwner::Relation whereOwner::Relation ;
CollectorExp ::= target::Variable ;
MappingBody ::= (initSection::OclExpression)+ (endSection::OclExpression)+ ;
BlockExp ::= (body::OclExpression)+ ;
EnumLiteralExp ::= referredEnumLiteral::EnumerationLiteral ;
ImperativeIterateExp ::= target::Variable ;
RelationImplementation ::= relation::Relation impl::Operation inDirectionOf::TypedModel ;
Assignment ::= bottomPattern::BottomPattern slotExpression::OclExpression value::OclExpression targetProperty::Property isDefault::Boolean ;
UnpackExp ::= (variable::Variable)+ ;
Typedef ::= base::Type condition::OclExpression ;
RealizedVariable ::= initExpression::OclExpression LetExp::LetExp computeOwner::ComputeExp bindParameter::Parameter ;
UnlinkExp ::= target::OclExpression item::OclExpression ;
ContextualProperty ::= context::Class overridden::Property ;
Domain ::= RelationDomain ;
 Domain ::= CoreDomain ;
 Domain ::= isCheckable::Boolean isEnforceable::Boolean rule::Rule typedModel::TypedModel ;
DictLiteralExp ::= (part::DictLiteralPart)+ ;
ObjectTemplateExp ::= (part::PropertyTemplateItem)+ referredClass::Class ;
IterateExp ::= result::Variable ;
TypeExp ::= referredType::Type ;
EnforcementMode ::= (Deletion::ε) | (Creation::ε) ;
CoreDomain ::= isCheckable::Boolean isEnforceable::Boolean rule::Rule typedModel::TypedModel guardPattern::GuardPattern bottomPattern::BottomPattern ;
ModelType ::= (metamodel::Package)+ (additionalCondition::OclExpression)+ conformanceKind::String ;
VarParameter ::= MappingParameter ;
 VarParameter ::= ModelParameter ;
 VarParameter ::= ctxOwner::ImperativeOperation resOwner::ImperativeOperation kind::DirectionKind ;
VariableExp ::= referredVariable::Variable ;
ExpressionInOcl ::= bodyExpression::OclExpression context::Variable resultVariable::Variable parameterVariable::Variable ;
OperationalTransformation ::= (intermediateClass::Class)+ refined::Transformation (intermediateProperty::Property)+ (modelParameter::ModelParameter)+ entry::EntryOperation (relation::Relation)+ ;
Constructor ::= context::VarParameter (result::VarParameter)+ overridden::ImperativeOperation body::OperationBody isBlackbox::Boolean ;
MappingOperation ::= (disjunct::MappingOperation)+ refinedRelation::Relation (merged::MappingOperation)+ (inherited::MappingOperation)+ (when::OclExpression)+ ;
LogExp ::= text::String level::Integer condition::OclExpression element::Element ;
Class ::= Typedef ;
 Class ::= AnonymousTupleType ;
 Class ::= ModelType ;
 Class ::= Module ;
 Class ::= Transformation ;
 Class ::= TupleType ;
 Class ::= AnyType ;
 Class ::= (ownedAttribute::Property)+ (ownedOperation::Operation)+ (superClass::Class)+ isAbstract::Boolean ;
AssertExp ::= severity::SeverityKind log::LogExp assertion::OclExpression ;
UnlimitedNaturalExp ::= symbol::UnlimitedNatural ;
AnonymousTupleType ::= (elementType::Type)+ ;
TupleExp ::= (element::OclExpression)+ ;
AltExp ::= condition::OclExpression body::OclExpression ;
ModuleImport ::= (binding::ModelType)+ module::Module importedModule::Module kind::ImportKind ;
MappingCallExp ::= isStrict::Boolean ;
SeverityKind ::= (error::ε) | (fatal::ε) | (warning::ε) ;
Helper ::= isQuery::Boolean ;
CollectionLiteralExp ::= kind::CollectionKind (part::CollectionLiteralPart)+ ;
RealLiteralExp ::= realSymbol::Real ;
ResolveInExp ::= inMapping::MappingOperation ;
WhileExp ::= condition::OclExpression body::OclExpression ;
GuardPattern ::= area::Area ;
AnonymousTupleLiteralExp ::= (part::AnonymousTupleLiteralPart)+ ;
Operation ::= ImperativeOperation ;
 Operation ::= Function ;
 Operation ::= class::Class (ownedParameter::Parameter)+ (raisedException::Type)+ ;
AnonymousTupleLiteralPart ::= (value::OclExpression)+ ;
BottomPattern ::= area::Area (assignment::Assignment)+ (realizedVariable::RealizedVariable)+ (enforcementOperation::EnforcementOperation)+ ;
BagType ::= elementType::Type ;
PropertyTemplateItem ::= objContainer::ObjectTemplateExp value::OclExpression referredProperty::Property ;
Key ::= identifies::Class (part::Property)+ transformation::RelationalTransformation ;
Comment ::= (annotatedElement::NamedElement)+ ;
ObjectExp ::= referredObject::Variable body::ConstructorBody ;
SequenceType ::= elementType::Type ;
ImperativeOperation ::= Helper ;
 ImperativeOperation ::= Constructor ;
 ImperativeOperation ::= EntryOperation ;
 ImperativeOperation ::= MappingOperation ;
 ImperativeOperation ::= context::VarParameter (result::VarParameter)+ overridden::ImperativeOperation body::OperationBody isBlackbox::Boolean ;
TupleLiteralExp ::= (part::TupleLiteralPart)+ ;
EntryOperation ::= context::VarParameter (result::VarParameter)+ overridden::ImperativeOperation body::OperationBody isBlackbox::Boolean ;
ForExp ::= condition::OclExpression ;
ImperativeCallExp ::= MappingCallExp ;
 ImperativeCallExp ::= isVirtual::Boolean ;
InvalidType ::= package::Package ;
ResolveExp ::= ResolveInExp ;
 ResolveExp ::= condition::OclExpression one::Boolean isInverse::Boolean isDeferred::Boolean ;
RaiseExp ::= exception::Type ;
VariableInitExp ::= referredVariable::Variable withResult::Boolean ;
RelationalTransformation ::= (ownedKey::Key)+ ;
InstantiationExp ::= ObjectExp ;
 InstantiationExp ::= instantiatedClass::Class extent::Variable (argument::OclExpression)+ ;
OrderedSetType ::= elementType::Type ;
IteratorExp ::= body::OclExpression (iterator::Variable)+ ;
Mapping ::= (specification::Mapping)+ (local::Mapping)+ context::Mapping ;
ReturnExp ::= value::OclExpression ;
IntegerLiteralExp ::= integerSymbol::Integer ;
PropertyCallExp ::= referredProperty::Property ;
Transformation ::= RelationalTransformation ;
 Transformation ::= (ownedTag::Tag)+ (modelParameter::TypedModel)+ (rule::Rule)+ extends::Transformation ;
SwitchExp ::= (alternativePart::AltExp)+ elsePart::OclExpression ;
EnforcementOperation ::= enforcementMode::EnforcementMode bottomPattern::BottomPattern operationCallExp::OperationCallExp ;
Enumeration ::= (ownedLiteral::EnumerationLiteral)+ ;
AnyType ::= (ownedAttribute::Property)+ (ownedOperation::Operation)+ (superClass::Class)+ isAbstract::Boolean package::Package ;
Package ::= Module ;
 Package ::= Transformation ;
 Package ::= (ownedType::Type)+ (nestedPackage::Package)+ uri::String ;
CollectionTemplateExp ::= (part::OclExpression)+ kind::CollectionKind referredCollectionType::CollectionType match::OclExpression ;
LetExp ::= (in::OclExpression)+ variable::Variable ;
IfExp ::= condition::OclExpression thenExpression::OclExpression elseExpression::OclExpression ;
ModelParameter ::= ctxOwner::ImperativeOperation resOwner::ImperativeOperation kind::DirectionKind ;
CollectionRange ::= first::OclExpression last::OclExpression ;
SetType ::= elementType::Type ;
Variable ::= RealizedVariable ;
 Variable ::= VarParameter ;
 Variable ::= FunctionParameter ;
 Variable ::= initExpression::OclExpression LetExp::LetExp computeOwner::ComputeExp bindParameter::Parameter ;
Relation ::= isTopLevel::Boolean (variable::Variable)+ (operationalImpl::RelationImplementation)+ where::Pattern when::Pattern ;
Rule ::= Relation ;
 Rule ::= Mapping ;
 Rule ::= (domain::Domain)+ transformation::Transformation overrides::Rule ;
ConstructorBody ::= operation::ImperativeOperation (content::OclExpression)+ ;
MappingParameter ::= refinedDomain::RelationDomain extent::ModelParameter ;
Library ::= (ownedTag::Tag)+ (configProperty::Property)+ (moduleImport::ModuleImport)+ (usedModelType::ModelType)+ isBlackbox::Boolean ;
OperationCallExp ::= ImperativeCallExp ;
 OperationCallExp ::= (argument::OclExpression)+ referredOperation::Operation ;
ListType ::= elementType::Type ;
Predicate ::= conditionExpression::OclExpression pattern::Pattern ;
BooleanLiteralExp ::= booleanSymbol::Boolean ;
DirectionKind ::= (in::ε) | (inout::ε) | (out::ε) ;
FunctionParameter ::= operation::Operation initExpression::OclExpression LetExp::LetExp computeOwner::ComputeExp bindParameter::Parameter ;
DictionaryType ::= keyType::Type ;
VoidType ::= package::Package ;
AssignExp ::= (value::OclExpression)+ left::OclExpression defaultValue::OclExpression isReset::Boolean ;
DomainPattern ::= templateExpression::TemplateExp ;
DictLiteralPart ::= key::OclExpression value::OclExpression ;
Module ::= OperationalTransformation ;
 Module ::= Library ;
 Module ::= (ownedTag::Tag)+ (configProperty::Property)+ (moduleImport::ModuleImport)+ (usedModelType::ModelType)+ isBlackbox::Boolean ;
TemplateParameterType ::= specification::String ;
Parameter ::= VarParameter ;
 Parameter ::= FunctionParameter ;
 Parameter ::= operation::Operation ;
OperationBody ::= MappingBody ;
 OperationBody ::= ConstructorBody ;
 OperationBody ::= operation::ImperativeOperation (content::OclExpression)+ ;
EnumerationLiteral ::= enumeration::Enumeration ;
ComputeExp ::= returnedElement::Variable body::OclExpression ;
TupleType ::= (ownedAttribute::Property)+ (ownedOperation::Operation)+ (superClass::Class)+ isAbstract::Boolean ;
TryExp ::= tryBody::OclExpression (exception::Type)+ exceptBody::OclExpression ;
RelationDomain ::= pattern::DomainPattern rootVariable::Variable ;
--------------------metamodels::QVT_SimpleRDBMS.bgf--------------------
Key ::= owner::Table (column::Column)+ (refersToOpposite::ForeignKey)+ ;
Table ::= schema::Schema (column::Column)+ (key::Key)+ (foreignKey::ForeignKey)+ ;
ForeignKey ::= (column::Column)+ owner::Table refersTo::Key ;
Column ::= type::String owner::Table (key::Key)+ (foreignKey::ForeignKey)+ ;
Schema ::= (tables::Table)+ ;
--------------------metamodels::QoS.bgf--------------------
ProfileTransition ::= (operations::Operation)+ from::SimpleProfile to::SimpleProfile compoundProfile::CompoundProfile ;
CompoundProfile ::= (profileTransition::ProfileTransition)+ (simpleProfile::SimpleProfile)+ ;
QoSStatement ::= SingleQoSStatement ;
 QoSStatement ::= CoumpoundQoSStatement ;
 QoSStatement ::= (contraints::QoSContraints)+ relation::CoumpoundQoSStatement (parameter::Parameter)+ ;
QoSContraints ::= invariant::BooleanExpression parallel_and_composition::MappingExpression parallel_or_composition::MappingExpression sequential_composition::MappingExpression values::MappingExpression (statisticalAttribute::StatisticalAttributekindKind)+ parameter::Parameter domain::Domain ;
QoSContraint ::= qualification::QualificationKind ;
SimpleProfile ::= compoundProfile::CompoundProfile use::QoSStatement provides::QoSStatement ;
DirectionKind ::= value::String ;
StringSet ::= (string::String)+ ;
QoSCharacteristic ::= QoSContraints ;
 QoSCharacteristic ::= QualificationKind ;
 QoSCharacteristic ::= invariant::BooleanExpression parallel_and_composition::MappingExpression parallel_or_composition::MappingExpression sequential_composition::MappingExpression values::MappingExpression (statisticalAttribute::StatisticalAttributekindKind)+ parameter::Parameter domain::Domain ;
Numeric ::= direction::DirectionKind ;
QoSComponent ::= (profile::QoSProfile)+ operations::Operation ;
Enumeration ::= direction::DirectionKind ;
MappingExpression ::= value::String ;
Domain ::= Numeric ;
 Domain ::= Set ;
 Domain ::= Enumeration ;
 Domain ::= direction::DirectionKind ;
QualificationKind ::= value::String ;
Set ::= (stringSet::StringSet)+ ;
CoumpoundQoSStatement ::= statement::QoSStatement ;
SingleQoSStatement ::= contraint::QoSContraint ;
BooleanExpression ::= value::String ;
--------------------metamodels::QoS_Characteristic.bgf--------------------
Numeric ::= direction::DirectionKind ;
Enumeration ::= direction::DirectionKind ;
MappingExpression ::= value::String ;
Domain ::= Numeric ;
 Domain ::= Set ;
 Domain ::= Enumeration ;
 Domain ::= direction::DirectionKind ;
DirectionKind ::= value::String ;
Set ::= (stringSet::StringSet)+ ;
StringSet ::= (string::String)+ ;
BooleanExpression ::= value::String ;
QoSCharacteristic ::= invariant::BooleanExpression parallel_and_composition::MappingExpression parallel_or_composition::MappingExpression sequential_composition::MappingExpression values::MappingExpression (statisticalAttribute::StatisticalAttributekindKind)+ parameter::Parameter domain::Domain ;
--------------------metamodels::RDFS.bgf--------------------
URIReference ::= UniformResourceIdentifier ;
 URIReference ::= uri::UniformResourceIdentifier resource::Resource literal::TypedLiteral namedGraph::Graph (reifiedStatement::Statement)+ ;
Literal ::= PlainLiteral ;
 Literal ::= TypedLiteral ;
 Literal ::= lexicalForm::String ;
Statement ::= predicate::Property object::Resource subject::Resource isReifiedOnly::Boolean isReified::Boolean (nameForReification::URIReference)+ ;
List ::= first::Resource rest::List (originalList::List)+ ;
Graph ::= graphName::URIReference (resources::Resource)+ ;
Resource ::= Graph ;
 Resource ::= List ;
 Resource ::= Container ;
 Resource ::= Property ;
 Resource ::= Statement ;
 Resource ::= URIReferenceNode ;
 Resource ::= BlankNode ;
 Resource ::= Class ;
 Resource ::= Literal ;
 Resource ::= graph::Graph (uriRef::URIReference)+ (subjectStatement::Statement)+ (objectStatement::Statement)+ (label::PlainLiteral)+ (type::Class)+ (seeAlso::Resource)+ (referringResource::Resource)+ (member::Resource)+ (container::Resource)+ (list::List)+ ;
RDFXMLLiteral ::= datatypeURI::URIReference ;
UniformResourceIdentifier ::= name::String (uriRef::URIReference)+ ;
Class ::= Datatype ;
 Class ::= (subClassOf::Class)+ (superClass::Class)+ (typedResource::Resource)+ (propertyForDomain::Property)+ (propertyForRange::Property)+ ;
BlankNode ::= nodeId::String ;
TypedLiteral ::= RDFXMLLiteral ;
 TypedLiteral ::= datatypeURI::URIReference ;
PlainLiteral ::= language::String labeledResource::Resource ;
Property ::= (predicateStatement::Statement)+ (subPropertyOf::Property)+ (superProperty::Property)+ (domain::Class)+ (range::Class)+ ;
Datatype ::= (subClassOf::Class)+ (superClass::Class)+ (typedResource::Resource)+ (propertyForDomain::Property)+ (propertyForRange::Property)+ ;
URIReferenceNode ::= graph::Graph (uriRef::URIReference)+ (subjectStatement::Statement)+ (objectStatement::Statement)+ (label::PlainLiteral)+ (type::Class)+ (seeAlso::Resource)+ (referringResource::Resource)+ (member::Resource)+ (container::Resource)+ (list::List)+ ;
--------------------metamodels::QoS_Profile.bgf--------------------
ProfileTransition ::= (operations::Operation)+ from::SimpleProfile to::SimpleProfile compoundProfile::CompoundProfile ;
CompoundProfile ::= (profileTransition::ProfileTransition)+ (simpleProfile::SimpleProfile)+ ;
QoSComponent ::= operations::Operation (profile::QoSProfile)+ ;
SimpleProfile ::= compoundProfile::CompoundProfile uses::QoSStatement provides::QoSStatement ;
--------------------metamodels::QoS_Statement.bgf--------------------
QoSStatement ::= SingleQoSStatement ;
 QoSStatement ::= CoumpoundQoSStatement ;
 QoSStatement ::= relation::CoumpoundQoSStatement (parameter::Parameter)+ ;
QoSContraint ::= qualification::QualificationKind ;
QualificationKind ::= value::String ;
CoumpoundQoSStatement ::= statement::QoSStatement ;
SingleQoSStatement ::= contraint::QoSContraint ;
--------------------metamodels::Relational.bgf--------------------
Table ::= (col::Column)+ (key::Column)+ ;
Type ::= name::String ;
Column ::= owner::Table keyOf::Table type::Type ;
--------------------metamodels::RelationalDBContent.bgf--------------------
Table ::= database::DataBase (tuples::Tuple)+ ;
DataBase ::= SGBDname::String (tables::Table)+ ;
Tuple ::= owner::Table (elements::TupleElement)+ ;
TupleElement ::= tuple::Tuple value::String ;
--------------------metamodels::RelationalDBSchema.bgf--------------------
Table ::= database::DataBase (columns::Column)+ (key::Column)+ ;
DataBase ::= SGBDname::String (tables::Table)+ ;
Column ::= dataType::String null::Boolean defaultValue::String owner::Table keyOf::Table ;
--------------------metamodels::Repository.bgf--------------------
Subsystem ::= (classes::Class)+ (relations::Relation)+ ;
Relation ::= subsystem::Subsystem classes::Class ;
Type ::= name::String ;
Class ::= name::String is_deferred::Boolean (features::Feature)+ parentSubsystem::Subsystem subsystem::Subsystem (relations::Relation)+ ;
Feature ::= Entity ;
 Feature ::= Routine ;
 Feature ::= theClass::Class type::Type ;
Routine ::= theClass::Class type::Type ;
Entity ::= theClass::Class type::Type ;
--------------------metamodels::Reqtify.bgf--------------------
Attribute ::= value::String ;
Document ::= project::Project (sections::Section)+ ;
Project ::= (documents::Document)+ ;
MacroRequirement ::= (contains::AbstractRequirement)+ ;
Section ::= document::Document (sectionChildren::Section)+ sectionParent::Section (requirements::AbstractRequirement)+ ;
Requirement ::= section::Section isContained::MacroRequirement (coverLinks::CoverLink)+ (attribute::Attribute)+ ;
CoverLink ::= linkWith::AbstractRequirement ;
--------------------metamodels::RequisitePro.bgf--------------------
Attribute ::= value::String ;
Document ::= description::String ;
Project ::= (content::ContainedElt)+ (packages::Package)+ ;
Package ::= parentPackage::ContainerElt ;
Requirement ::= text::String (attributes::Attribute)+ location::Document parent::Requirement (children::Requirement)+ (coverLink::Requirement)+ ;
--------------------metamodels::SBVRvoc.bgf--------------------
EndOperator ::= (given::ε) | (thanone::ε) | (one::ε) | (isobligatorythat::ε) | (ispermittedthat::ε) | (isprohibitedthat::ε) | (isnecessarythat::ε) | (ispossiblethat::ε) | (isimpossiblethat::ε) | (isnotthecasethat::ε) | (least::ε) | (leastone::ε) | (most::ε) | (mostone::ε) | (leastnandatmostm::ε) | (andonlyif::ε) | (ornot::ε) | (not::ε) | (of::ε) ;
Verb ::= (is::ε) | (relevant::ε) | (comprises::ε) | (to::ε) | (work::ε) | (in::ε) | (trades::ε) | (as::ε) | (are::ε) | (accepted::ε) | (generally::ε) | (important::ε) | (across::ε) | (share::ε) | (sets::ε) | (assigned::ε) | (by::ε) | (contains::ε) | (for::ε) | (has::ε) | (specifies::ε) | (specified::ε) ;
NSURICaption ::= namespaceURI::NameSpaceURI ;
CTypCaption ::= (conceptType::PrimaryRepresentation)+ ;
NameConcept ::= the::Qualif (name::NameWord)+ ;
ConceptDefinition ::= exp::Concept (conjexp::ConjConcept)+ ;
TermRepresentation ::= (term::StringWord)+ ;
StringConcept ::= (stringWord::QuotedStringWord)+ ;
FactTypeFormRepresentation ::= primaryRep1::NotFactTypeRepresentation (verbExp::Verb)+ primaryRep2::NotFactTypeRepresentation ;
Necessity ::= exp::SBVRExpression ;
DescCaption ::= description::Note ;
NoteCaption ::= note::Note ;
SeeCaption ::= see::PrimaryRepresentation ;
ModalForm ::= modal::ModalVerb isNeg::Boolean ;
SubSBVRProp ::= join::Join modalVerb::ModalVerb (verbs::Verb)+ concept2::Concept ;
SynFCaption ::= (synonymousForm::SBVRExpression)+ ;
ModalBeginC ::= endOperator::EndOperator ;
QuotedStringWord ::= val::String ;
SimpleSBVRProp ::= modal::ModalBegin concept1::Concept modalVerb::ModalForm (verbs::Verb)+ concept2::Concept ;
SBVRPropWithKW ::= conjonction::ConjonctionnalKeyWord endConj::EndOperator proposition::SimpleSBVRProp ;
ConjonctionnalKeyWord ::= (and::ε) | (or::ε) | (if::ε) | (whether::ε) ;
SynCaption ::= (synonym::PrimaryRepresentation)+ ;
ModalBegin ::= ModalBeginC ;
 ModalBegin ::= endOperator::EndOperator ;
NounGConcept ::= (noun::StringWord)+ ;
StringWord ::= val::String ;
Link ::= (of::ε) | (quoteS::ε) ;
NameRepresentation ::= hasThe::Boolean (name::NameWord)+ ;
NameWord ::= val::String ;
SFCaption ::= subjectField::PrimaryRepresentation ;
ExCaption ::= (example::SBVRExpression)+ ;
Possibility ::= exp::SBVRExpression ;
GenCCaption ::= generalConcept::PrimaryRepresentation ;
Note ::= (sentences::Sentence)+ ;
NameSpaceURI ::= (URI::Word)+ ;
Qualification ::= (generalConcept::GeneralConcept)+ ;
NounConcept ::= qualif::Qualifier (noun::StringWord)+ ;
NameGConcept ::= name::NameConcept ;
Qualif ::= (the::ε) | (The::ε) | (a::ε) | (A::ε) | (an::ε) | (An::ε) | (Each::ε) | (each::ε) | (Some::ε) | (some::ε) | (At::ε) | (at::ε) | (Exactly::ε) | (exactly::ε) ;
ModalVerb ::= (must::ε) | (may::ε) | (never::ε) | (always::ε) ;
VocabularyEntry ::= primaryRep::PrimaryRepresentation (caption::Caption)+ ;
Qualifier ::= op::Qualif endOperator::EndOperator min::StringWord max::StringWord ;
Join ::= (that::ε) | (who::ε) ;
ObjectConcept ::= operatoredConcept::NounConcept qualify::Qualification ;
DBCaption ::= dictionaryBasis::ConceptSource ;
RefSCaption ::= referenceScheme::PrimaryRepresentation ;
LinkSBVRConcept ::= link::Link concept::Concept ;
SBVRExpression ::= hasPoint::Boolean firstProposition::SimpleSBVRProp (nextProposition::SBVRPropWithKW)+ ;
Sentence ::= (words::Word)+ ;
ConceptSource ::= (source::Word)+ ;
SrcCaption ::= source::ConceptSource ;
Root ::= (entries::VocabularyEntry)+ ;
DefCaption ::= definition::ConceptDefinition ;
ConjConcept ::= conjonction::ConjonctionnalKeyWord concept::Concept ;
--------------------metamodels::SCADE.bgf--------------------
StorageUnit ::= saoFileName::String annFileName::String persistAs::String loaded::Boolean saoModified::Boolean annModified::Boolean fileRef::FileRef modelS::Model (element::StorageElement)+ ;
AnnAttCharValue ::= value::Char ;
Project ::= pathname::String (configuration::Configuration)+ (fileRef::FileRef)+ (owner::Element)+ ;
Session ::= descriptor::Descriptor model::Model (loadsModel::Model)+ DefinedIn::String loader::Loader ;
Transition ::= conditions::String transKind::Integer state1::State state2::State ;
AnnPropertyReal ::= value::Double ;
NamedType ::= kind::Object (refinement::NamedType)+ (refined::NamedType)+ to::Operator from::Operator implementation::Implementation definition::Type keyM::Model key::TypeBlock ;
Record ::= creator::String name::String date::String author::String description::String key::CoverageFile associationClassRc::AssociationClass coverageFileR::CoverageFile (result::Result)+ ;
State ::= name::String cx::Double cy::Double (transition1::Transition)+ (transition2::Transition)+ stOutput::StOutput ;
ListString ::= value::String ;
ConstValue ::= value::String kind::Object ;
Equation ::= rotation::Integer symetrical::Boolean terminator::Boolean eqBlock::EqBlock (left::Variable)+ right::Expression (outEdge::Edge)+ position::RPoint size::RSize ;
ParamArray ::= (notes::ListString)+ paramBlock::ParamBlock operator::Operator (value::Expression)+ ;
AnnPropertyString ::= value::String ;
AnnAttBoolValue ::= value::Boolean ;
LocalVariable ::= optional::Boolean const::Boolean probe::Boolean pure::Boolean initValue::String operatorI::Operator operatorO::Operator operatorH::Operator nodeL::Node nodeI::Node ;
ConstVar ::= Constant ;
 ConstVar ::= Variable ;
 ConstVar ::= kind::Object type::Type (client::EqBlock)+ ;
Assertion ::= key::EqBlock expression::Expression edge::Edge position::RPoint ;
StOutput ::= name::String type::String clock::Boolean const::Boolean optional::Boolean ;
StateBase ::= DefineIn::String ;
AnnCategory ::= name::String key::AnnotSchema (anootability::Annotability)+ ;
GlobalVariable ::= key::VarBlock ;
HistoryEntry ::= file::File ;
Edge ::= leftVarIndex::Integer labelOrientation::Integer leftVar::Variable rightExpression::ExprId srcEquation::Equation assertion::Assertion (position::RPoint)+ dstEquation::Equation ;
AnnPropertyInt ::= value::Integer ;
AnnPropertyEnum ::= value::Object ;
FileRef ::= pathname::String persistAs::String DefinedIn::String ;
Configuration ::= name::String (propC::Prop)+ projectC::Project ;
Label ::= expression::Expression ;
Structure ::= element::CompositeElement ;
AnnNote ::= name::String modified::Boolean annNoteType::AnnNoteType annotable::Annotable (annAttValue::AnnAttValue)+ ;
TypeBlock ::= type::NamedType key::Model ;
Implementation ::= key::Model (namedTypeI::NamedType)+ ;
ExprContact ::= boolAct::ExprId (initValue::Expression)+ calledOpr::ExprCall ;
StInput ::= name::String type::String clock::Boolean const::Boolean optional::Boolean ;
VarBlock ::= variable::GlobalVariable keyVB::Model key::Model ;
Constant ::= imported::Boolean value::Expression enumeration::Enumeration key::ConstBlock ;
Operator ::= Node ;
 Operator ::= category::String conversion::Boolean state::Boolean index::Integer variable::LocalVariable (input::LocalVariable)+ (output::LocalVariable)+ (hidden::LocalVariable)+ (client::EqBlock)+ modelO::Model modelOp::Model criterionO::Criterion (intanceO::Instance)+ operator::Operator ;
AnnPropertyBool ::= value::Boolean ;
AnnAttGroup ::= name::String key::AnnNoteType ;
Result ::= elementCount::Integer associationClassRs::AssociationClass record::Record ;
ExprNull ::= label::Label exprContactE::ExprContact exprCallE::ExprCall dependance::ConstVar (subExprId::ExprId)+ paramArray::ParamArray constant::Constant equationE::Equation assertionE::Assertion ;
AnnProperty ::= AnnPropertyInt ;
 AnnProperty ::= AnnPropertyBool ;
 AnnProperty ::= AnnPropertyChar ;
 AnnProperty ::= AnnPropertyReal ;
 AnnProperty ::= AnnPropertyString ;
 AnnProperty ::= AnnPropertyEnum ;
 AnnProperty ::= name::String type::Integer key::AnnAttDefinition ;
Instance ::= index::Integer occ::String modelI::Model operatorI::Operator associationClassI::AssociationClass caller::Instance (called::Instance)+ origin::Instance (related::Instance)+ ;
MtcApplication ::= (coverageFileCov::CoverageFile)+ (criterionFileCri::CriterionFile)+ modelM::Model ;
Loader ::= descriptor::Descriptor session::Session ;
AnnAttRealValue ::= value::Double ;
AnnAttEnumValue ::= value::String ;
Table ::= size::Integer typeT::Type ;
AnnNoteType ::= name::String annAttDefinition::AnnAttDefinition annAttGroup::AnnAttGroup key::AnnotSchema ;
AnnPropertyChar ::= value::Char ;
Tuple ::= element::CompositeElement ;
AnnotSchema ::= pathname::String annNoteType::AnnNoteType annCategory::AnnCategory ;
Enumeration ::= (value::Constant)+ ;
CoverageFile ::= record::Record modelCov::Model application::MtcApplication recordCov::Record ;
AnnAttDateValue ::= value::String ;
Node ::= nodeKind::Object eqBlock::EqBlock paramBlock::ParamBlock (local::LocalVariable)+ (internal::LocalVariable)+ key::Model stateMachine::StateMachine modelN::Model ;
EqBlock ::= (equation::Equation)+ assertion::Assertion key::Node (calledOperator::Operator)+ (referencedId::ConstVar)+ ;
AnnAttStringValue ::= AnnAttFileValue ;
 AnnAttStringValue ::= AnnAttDateValue ;
 AnnAttStringValue ::= AnnAttOidValue ;
 AnnAttStringValue ::= AnnAttEnumValue ;
 AnnAttStringValue ::= value::String ;
ParamBlock ::= key::Node (columnsSize::ListInteger)+ (array::ParamArray)+ ;
ListInteger ::= value::Integer ;
CriterionFile ::= application::MtcApplication modelCri::Model (criterionC::Criterion)+ ;
Variable ::= GlobalVariable ;
 Variable ::= LocalVariable ;
 Variable ::= clock::Variable (definition::Equation)+ ;
StInitInput ::= name::String type::String clock::Boolean const::Boolean optional::Boolean ;
AssociationClass ::= resultA::Result (recordA::Record)+ (instanceA::Instance)+ ;
StateMachine ::= initialStPtr::InitialStPtr (state::State)+ (transition::Transition)+ ;
AnnAttFileValue ::= value::String ;
CompositeElement ::= typeC::Type key::Composite ;
ExprCall ::= numOcc::Integer predefOpr::Integer (parameter::Expression)+ exprContactEC::ExprContact operator::Operator ;
AnnAttDefinition ::= name::String type::Integer annAttGroup::AnnAttGroup key::AnnNoteType annProperty::AnnProperty ;
ExprId ::= exprContactEI::ExprContact reference::ConstVar ;
Descriptor ::= modelFileName::String sernFileName::String sernPersistAs::String rnetFileName::String rnetPersistAs::String occBase::Integer size::Integer nameVerify::Boolean checked::Boolean (libraryModels::ListString)+ (annTypeFiles::ListString)+ modelD::Model ;
Folder ::= extensions::String (element::Element)+ ;
NodeBlock ::= ParamBlock ;
 NodeBlock ::= EqBlock ;
 NodeBlock ::= node::Node ;
ConstBlock ::= modelC::Model keyC::Model key::Model constant::Constant ;
InitialStPtr ::= cx::Double cy::Double state::State ;
Model ::= library::Boolean pathname::String descriptor::Descriptor project::Project fileRef::FileRef (storageUnitM::StorageUnit)+ enumsBlock::ConstBlock (importedOperator::Operator)+ (client::Model)+ (libraries::Model)+ (allLibry::Model)+ (typeM::Type)+ model::Model coverageFileM::CoverageFile criterionFileM::CriterionFile root::Instance (all::Operator)+ application::MtcApplication (reference::Reference)+ (tmpNode::Node)+ constBlockK::ConstBlock node::Node varBlockK::VarBlock typeBlock::TypeBlock refinement::NamedType implementation::Implementation constant::Constant allConstant::Constant allvariable::GlobalVariable variable::GlobalVariable allConstVar::ConstVar constVar::ConstVar constBlock::ConstBlock varBlock::VarBlock allNamedType::NamedType namedType::NamedType ;
AnnAttOidValue ::= value::String ;
Annotability ::= minCardinality::Integer maxCardinality::Integer defaultNote::Boolean annNoteType::AnnNoteType ;
Prop ::= name::String (values::ListString)+ entity::Annotable configurationP::Configuration ;
AnnAttIntValue ::= value::Integer ;
Criterion ::= ident::String name::String description::String criterionFileC::CriterionFile operatorC::Operator (element::Element)+ ;
--------------------metamodels::SDM.bgf--------------------
SimpleName ::= value::String ;
CDObjectConstraint ::= constraintDefinition::ConstraintDefinition ;
OBEndpointDefinition ::= objectDefinition::ObjectDefinition ;
SettingsAttributes ::= list::Boolean access::SettingMemberAccess secure::SettingMemberSecure deploymentTime::Boolean required::Boolean canBeNull::Boolean elementsCanBeNull::Boolean defaultRead::String defaultWrite::String ;
RDDelegation ::= relationshipDefinition::RelationshipDefinition ;
ConstraintMember ::= OBConstraint ;
 ConstraintMember ::= RDConstraint ;
 ConstraintMember ::= OCConstraint ;
 ConstraintMember ::= RCConstraint ;
 ConstraintMember ::= CGConstraint ;
 ConstraintMember ::= CDConstraint ;
 ConstraintMember ::= (input::Input)+ raiseError::Boolean evaluate::ConstraintEvaluation ;
DescriptionEntry ::= Entry ;
 DescriptionEntry ::= name::String resourceId::String manager::QualifiedName substitute::Substitute ;
CDRelationshipConstraint ::= constraintDefinition::ConstraintDefinition ;
OBCommunicationDefinition ::= objectDefinition::ObjectDefinition ;
SettingPath ::= value::String ;
ImportNamespaceIdentity ::= import::Import ;
Definition ::= ObjectDefinition ;
 Definition ::= RelationshipDefinition ;
 Definition ::= ConstraintDefinition ;
 Definition ::= FlowDefinition ;
 Definition ::= description::Description designData::DesignData (settingDeclaration::DefSettingDeclaration)+ (settingValue::DefSettingValue)+ (settingValueList::DefSettingValueList)+ name::SimpleName manager::QualifiedName className::String ;
SDMManager ::= sdm::SystemDefinitionModel ;
PublicKeyType ::= value::String ;
CommunicationMember ::= OBConnection ;
 CommunicationMember ::= RDConnection ;
 CommunicationMember ::= clientMember::Path serverMember::Path ;
SettingMemberAccess ::= (ReadWrite::ε) | (ReadOnly::ε) | (WriteOnly::ε) ;
RCConstraint ::= relationshipConstraint::RelationshipConstraint ;
MembSettingValue ::= member::Member ;
MaxOccurs ::= value::String ;
SettingMember ::= DefSettingDeclaration ;
 SettingMember ::= (facet::Facet)+ settingAttributes::SettingsAttributes ;
SDMContainmentDefinition ::= sdm::SystemDefinitionModel ;
OBRelationshipConstraint ::= objectDefinition::ObjectDefinition ;
OBHosting ::= objectDefinition::ObjectDefinition ;
CGConstraint ::= constraintGroup::ConstraintGroup ;
SettingValueList ::= MembSettingValueList ;
 SettingValueList ::= DefSettingValueList ;
 SettingValueList ::= (value::Value)+ settingValueAttributes::SettingValueAttributes ;
OBContainment ::= objectDefinition::ObjectDefinition ;
ReferenceDefinition ::= SDMReferenceDefinition ;
 ReferenceDefinition ::= OBReferenceDefinition ;
 ReferenceDefinition ::= dependentDefinition::QualifiedName sourceDefinition::QualifiedName ;
PublicKeyTokenType ::= value::String ;
Element ::= NameSpace ;
 Element ::= SimpleName ;
 Element ::= QualifiedName ;
 Element ::= Path ;
 Element ::= SettingPath ;
 Element ::= MaxOccurs ;
 Element ::= MinOccurs ;
 Element ::= FourPartVersionType ;
 Element ::= PublicKeyType ;
 Element ::= PublicKeyTokenType ;
 Element ::= CompilationHashType ;
 Element ::= Culture ;
 Element ::= CultureNeutral ;
 Element ::= value::String ;
Description ::= (entry::Entry)+ resourceId::String manager::QualifiedName ;
ValueTransfer ::= Output ;
 ValueTransfer ::= Input ;
 ValueTransfer ::= name::SimpleName path::SettingPath cast::Boolean convert::Boolean ;
OBSubsystem ::= objectDefinition::ObjectDefinition ;
RolesList ::= (Host::ε) | (Guest::ε) | (Parent::ε) | (Member::ε) | (Source::ε) | (Dependent::ε) | (Proxy::ε) | (Delegate::ε) | (Client::ε) | (Server::ε) ;
OBDelegation ::= objectDefinition::ObjectDefinition ;
CultureNeutral ::= value::String ;
MinOccurs ::= value::String ;
ObjectMember ::= SystemMember ;
 ObjectMember ::= EndpointMember ;
 ObjectMember ::= ResourceMember ;
 ObjectMember ::= minOccurs::MinOccurs maxOccurs::MaxOccurs reference::Boolean proxy::Boolean ;
SettingValueAttributes ::= path::SettingPath null::Boolean fixed::Boolean unset::Boolean definition::QualifiedName convert::Boolean secure::Boolean reference::Boolean ;
SDMDelegationDefinition ::= sdm::SystemDefinitionModel ;
RelationshipConstraint ::= OBRelationshipConstraint ;
 RelationshipConstraint ::= OCRelationshipConstraint ;
 RelationshipConstraint ::= RCRelationshipConstraint ;
 RelationshipConstraint ::= CGRelationshipConstraint ;
 RelationshipConstraint ::= CDRelationshipConstraint ;
 RelationshipConstraint ::= (constraint::RCConstraint)+ (relationshipConstraint::RCRelationshipConstraint)+ (objectConstraint::RCObjectConstraint)+ (constraintGroup::RCConstraintGroup)+ relationshipDefinition::QualifiedName targetRole::RolesList targetObjectDefinition::QualifiedName minOccurs::MinOccurs maxOccurs::MaxOccurs delegationAware::Boolean ;
OBSystemDefinition ::= objectDefinition::ObjectDefinition ;
HostingMember ::= OBHosting ;
 HostingMember ::= RDHosting ;
 HostingMember ::= guestMember::Path hostMember::Path ;
Entry ::= description::Description ;
Value ::= (contents::String)+ null::Boolean ;
OCConstraint ::= objectConstraint::ObjectConstraint ;
DefSettingDeclaration ::= definition_DSD::Definition ;
OBConstraintGroup ::= objectDefinition::ObjectDefinition ;
RDObjectConstraint ::= relationshipDefinition::RelationshipDefinition ;
RCObjectConstraint ::= relationshipConstraint_RC::RelationshipConstraint ;
SDMConstraintDefinition ::= sdm::SystemDefinitionModel ;
ContainmentMember ::= OBContainment ;
 ContainmentMember ::= RDContainment ;
 ContainmentMember ::= childMember::Path ;
RelationshipDefinition ::= CommunicationDefinition ;
 RelationshipDefinition ::= HostingDefinition ;
 RelationshipDefinition ::= ContainmentDefinition ;
 RelationshipDefinition ::= DelegationDefinition ;
 RelationshipDefinition ::= ReferenceDefinition ;
 RelationshipDefinition ::= (objectConstraint::RDObjectConstraint)+ (constraint::RDConstraint)+ (constraintGroup::RDConstraintGroup)+ (flow::RDFlow)+ (connection::RDConnection)+ (hosting::RDHosting)+ (delegation::RDDelegation)+ (reference::RDReference)+ (containment::RDContainment)+ extends::QualifiedName abstract::Boolean ;
SystemDefinitionModel ::= information::Information (import::Import)+ designData::DesignData settingDefinitions::SettingDefinitions (communicationDefinition::SDMCommunicationDefinition)+ (containmentDefinition::SDMContainmentDefinition)+ (delegationDefinition::SDMDelegationDefinition)+ (referenceDefinition::SDMReferenceDefinition)+ (endpointDefinition::SDMEndpointDefinition)+ (resourceDefinition::SDMResourceDefinition)+ (systemDefinition::SDMSystemDefinition)+ (constraintDefinition::SDMConstraintDefinition)+ (manager::SDMManager)+ nameSpace::NameSpace namespaceIdentity::NamespaceIdentity (documentLanguage::Culture)+ (compilationHash::CompilationHashType)+ ;
RCRelationshipConstraint ::= relationshipConstraint_RC::RelationshipConstraint ;
Path ::= value::String ;
Import ::= sdm::SystemDefinitionModel alias::SimpleName identity::ImportNamespaceIdentity ;
DefSettingValueList ::= definition::Definition ;
SDMReferenceDefinition ::= sdm::SystemDefinitionModel ;
FlowDefinition ::= description::Description designData::DesignData (settingDeclaration::DefSettingDeclaration)+ (settingValue::DefSettingValue)+ (settingValueList::DefSettingValueList)+ name::SimpleName manager::QualifiedName className::String ;
SDMResourceDefinition ::= sdm::SystemDefinitionModel ;
DelegationDefinition ::= SDMDelegationDefinition ;
 DelegationDefinition ::= OBDelegationDefinition ;
 DelegationDefinition ::= proxyDefinition::QualifiedName delegateDefinition::QualifiedName ;
Substitute ::= descriptionEntry::DescriptionEntry ;
StructuralConstraint ::= ObjectConstraint ;
 StructuralConstraint ::= RelationshipConstraint ;
 StructuralConstraint ::= ConstraintGroup ;
 StructuralConstraint ::= description::Description designData::DesignData name::SimpleName evaluate::ConstraintEvaluation raiseError::Boolean returnEarly::Boolean ;
Member ::= ObjectMember ;
 Member ::= RelationshipMember ;
 Member ::= ConstraintMember ;
 Member ::= FlowMember ;
 Member ::= SettingMember ;
 Member ::= (description::Description)+ designData::DesignData (settingValue::MembSettingValue)+ (settingValueList::MembSettingValueList)+ name::SimpleName definition::QualifiedName ;
CGRelationshipConstraint ::= constraintGroup_CG::ConstraintGroup ;
RDReference ::= relationshipDefinition::RelationshipDefinition ;
OBReference ::= objectDefinition::ObjectDefinition ;
OBResourceDefinition ::= objectDefinition::ObjectDefinition ;
RCConstraintGroup ::= relationshipConstraint_RC::RelationshipConstraint ;
SettingDefinitions ::= nameSpace::NameSpace manager::QualifiedName clrNameSpace::String ;
ConstraintDefinition ::= SDMConstraintDefinition ;
 ConstraintDefinition ::= (relationshipConstraint::CDRelationshipConstraint)+ (constraintGroup::CDConstraintGroup)+ (objectConstraint::CDObjectConstraint)+ (constraint::CDConstraint)+ targetDefinition::QualifiedName returnEarly::Boolean ;
RDConnection ::= relationshipDefinition::RelationshipDefinition ;
RDConstraint ::= relationshipDefinition::RelationshipDefinition ;
ProcessorArchitectures ::= (x86::ε) | (ia64::ε) | (amd64::ε) | (wow64::ε) | (msil::ε) | (shx::ε) | (arm::ε) | (data::ε) ;
OCConstraintGroup ::= objectConstraint_OC::ObjectConstraint ;
ManagerDeclaration ::= SDMManager ;
 ManagerDeclaration ::= description::Description name::SimpleName assemblyName::String version::FourPartVersionType publicKeyToken::PublicKeyTokenType culture::CultureNeutral platform::Platform sourcePath::Path ;
MembSettingValueList ::= member::Member ;
CompilationHashType ::= value::String ;
OBReferenceDefinition ::= objectDefinition::ObjectDefinition ;
Input ::= name::SimpleName path::SettingPath cast::Boolean convert::Boolean ;
CommunicationDefinition ::= SDMCommunicationDefinition ;
 CommunicationDefinition ::= OBCommunicationDefinition ;
 CommunicationDefinition ::= clientDefinition::QualifiedName serverDefinition::QualifiedName ;
OCRelationshipConstraint ::= objectConstraint_OC::ObjectConstraint ;
RDHosting ::= relationshipDefinition::RelationshipDefinition ;
DesignData ::= (nameSpace::NameSpace)+ ;
QualifiedName ::= value::String ;
ReferenceMember ::= OBReference ;
 ReferenceMember ::= RDReference ;
 ReferenceMember ::= dependentMember::Path sourceMember::Path ;
SettingValue ::= MembSettingValue ;
 SettingValue ::= DefSettingValue ;
 SettingValue ::= (contents::String)+ settingValueAttributes::SettingValueAttributes ;
Output ::= fixed::Boolean replace::Boolean ;
OBFlow ::= objectDefinition::ObjectDefinition ;
RDContainment ::= relationshipDefinition::RelationshipDefinition ;
CDConstraint ::= constraintDefinition::ConstraintDefinition ;
SDMSystemDefinition ::= sdm::SystemDefinitionModel ;
ObjectConstraint ::= RDObjectConstraint ;
 ObjectConstraint ::= RCObjectConstraint ;
 ObjectConstraint ::= CGObjectConstraint ;
 ObjectConstraint ::= CDObjectConstraint ;
 ObjectConstraint ::= (constraint::OCConstraint)+ (relationshipConstraint::OCRelationshipConstraint)+ (constraintGroup::OCConstraintGroup)+ primaryRole::RolesList primaryObjectDefinition::QualifiedName (secondaryRole::RolesList)+ (secondaryObjectDefinition::QualifiedName)+ (minOccurs::MinOccurs)+ (maxOccurs::MaxOccurs)+ ;
NameSpace ::= designData::DesignData ;
OBHostingDefinition ::= objectDefinition::ObjectDefinition ;
ConstraintEvaluation ::= (Design::ε) | (Never::ε) ;
FourPartVersionType ::= value::String ;
NamespaceIdentity ::= ImportNamespaceIdentity ;
 NamespaceIdentity ::= name::Path version::FourPartVersionType publicKey::PublicKeyType publicKeyToken::PublicKeyTokenType culture::CultureNeutral platform::Platform ;
Facet ::= name::SimpleName ;
Platform ::= (x86::ε) | (ia64::ε) | (amd64::ε) | (wow64::ε) | (msil::ε) | (shx::ε) | (arm::ε) | (data::ε) | (*::ε) | (neutral::ε) ;
OBContainmentDefinition ::= objectDefinition::ObjectDefinition ;
ObjectDefinition ::= SystemDefinition ;
 ObjectDefinition ::= EndpointDefinition ;
 ObjectDefinition ::= ResourceDefinition ;
 ObjectDefinition ::= (flow::OBFlow)+ (relationshipConstraint::OBRelationshipConstraint)+ (constraint::OBConstraint)+ (constraintGroup::OBConstraintGroup)+ (endpointDefinition::OBEndpointDefinition)+ (systemDefinition::OBSystemDefinition)+ (resourceDefinition::OBResourceDefinition)+ (communicationDefinition::OBCommunicationDefinition)+ (containmentDefinition::OBContainmentDefinition)+ (delegationDefinition::OBDelegationDefinition)+ (referenceDefinition::OBReferenceDefinition)+ (hostingDefinition::OBHostingDefinition)+ (endpoint::OBEndpoint)+ (subsystem::OBSubsystem)+ (resource::OBResource)+ (hosting::OBHosting)+ (containment::OBContainment)+ (connection::OBConnection)+ (delegation::OBDelegation)+ (obreference::OBReference)+ layer::String extends::QualifiedName abstract::Boolean ;
OBConnection ::= objectDefinition::ObjectDefinition ;
RDConstraintGroup ::= relationshipDefinition::RelationshipDefinition ;
OBConstraint ::= objectDefinition::ObjectDefinition ;
Culture ::= value::String ;
OBDelegationDefinition ::= objectDefinition::ObjectDefinition ;
HostingDefinition ::= OBHostingDefinition ;
 HostingDefinition ::= guestDefinition::QualifiedName hostDefinition::QualifiedName simulationRoot::Boolean ;
SDMCommunicationDefinition ::= sdm::SystemDefinitionModel ;
Information ::= sdm::SystemDefinitionModel friendlyname::String companyname::String copyright::String trademark::String description::Description comments::String compilerversion::FourPartVersionType ;
FlowMember ::= OBFlow ;
 FlowMember ::= RDFlow ;
 FlowMember ::= (input::Input)+ (output::Output)+ ;
OBEndpoint ::= objectDefinition::ObjectDefinition ;
DefSettingValue ::= definition::Definition ;
ContainmentDefinition ::= SDMContainmentDefinition ;
 ContainmentDefinition ::= OBContainmentDefinition ;
 ContainmentDefinition ::= parentDefinition::QualifiedName memberDefinition::QualifiedName ;
SDMEndpointDefinition ::= sdm::SystemDefinitionModel ;
PathList ::= Substitute ;
 PathList ::= (settingPath::SettingPath)+ ;
ConstraintGroup ::= OBConstraintGroup ;
 ConstraintGroup ::= RDConstraintGroup ;
 ConstraintGroup ::= OCConstraintGroup ;
 ConstraintGroup ::= RCConstraintGroup ;
 ConstraintGroup ::= CDConstraintGroup ;
 ConstraintGroup ::= (constraint::CGConstraint)+ (relationshipConstraint::CGRelationshipConstraint)+ (objectConstraint::CGObjectConstraint)+ ;
SystemDefinition ::= SDMSystemDefinition ;
 SystemDefinition ::= OBSystemDefinition ;
 SystemDefinition ::= simulationRoot::Boolean ;
DelegationMember ::= OBDelegation ;
 DelegationMember ::= RDDelegation ;
 DelegationMember ::= proxyMember::Path delegateMember::Path ;
SettingMemberSecure ::= (Always::ε) | (PerInstance::ε) | (Never::ε) ;
CDConstraintGroup ::= constraintDefinition::ConstraintDefinition ;
OBResource ::= objectDefinition::ObjectDefinition ;
CGObjectConstraint ::= constraintGroup_CG::ConstraintGroup ;
RDFlow ::= relationshipDefinition::RelationshipDefinition ;
--------------------metamodels::SEE_Design.bgf--------------------
Literal ::= VariableExpression ;
 Literal ::= NumberExpression ;
 Literal ::= value::Integer ;
PlusOperator ::= operand1::Expression operand2::Expression ;
UnaryPlusOp ::= operand::Expression ;
Expression ::= Literal ;
 Expression ::= UnaryOperator ;
 Expression ::= BinaryOperator ;
 Expression ::= loggingOn::Boolean logger::Logger ;
BinaryOperator ::= PlusOperator ;
 BinaryOperator ::= MinusOperator ;
 BinaryOperator ::= operand1::Expression operand2::Expression ;
MinusOperator ::= operand1::Expression operand2::Expression ;
VariableExpression ::= name::String ;
UnaryOperator ::= UnaryPlusOp ;
 UnaryOperator ::= UnaryMinusOp ;
 UnaryOperator ::= operand::Expression ;
UnaryMinusOp ::= operand::Expression ;
NumberExpression ::= value::Integer ;
Logger ::= instance::Logger expression::Expression logFile::LogFile ;
LogFile ::= file::String instance::LogFile logger::Logger ;
--------------------metamodels::SPEM.bgf--------------------
ProcessComponent ::= (processDefinitionElements::ProcessDefinitionElement)+ ;
Iteration ::= (artifactUsageNames::ArtifactUsageName)+ goal::Goal precondition::Precondition ;
Phase ::= (artifactUsageNames::ArtifactUsageName)+ goal::Goal precondition::Precondition ;
Lifecycle ::= (artifactUsageNames::ArtifactUsageName)+ goal::Goal precondition::Precondition ;
RoleKind ::= (artifactKinds::ArtifactKind)+ ;
ProcessDefinitionElement ::= Guidance ;
 ProcessDefinitionElement ::= ArtifactKind ;
 ProcessDefinitionElement ::= WorkItem ;
 ProcessDefinitionElement ::= RoleKind ;
 ProcessDefinitionElement ::= Condition ;
 ProcessDefinitionElement ::= ProcessComponent ;
 ProcessDefinitionElement ::= (guidances::Guidance)+ (processComponents::ProcessComponent)+ ;
ArtifactUsageName ::= isInput::Boolean isOutput::Boolean hasWorkPerArtifact::Boolean artifactKind::ArtifactKind workDefinition::WorkDefinition ;
Precondition ::= workDefinition::WorkDefinition ;
Guidance ::= (processDefinitionElements::ProcessDefinitionElement)+ ;
ArtifactKind ::= (artifactUsageNames::ArtifactUsageName)+ responsible::RoleKind ;
WorkDefinition ::= ActivityKind ;
 WorkDefinition ::= Iteration ;
 WorkDefinition ::= Phase ;
 WorkDefinition ::= Lifecycle ;
 WorkDefinition ::= (artifactUsageNames::ArtifactUsageName)+ goal::Goal precondition::Precondition ;
ActivityKind ::= (performer::RoleKind)+ (assistant::RoleKind)+ ;
Goal ::= workDefinition::WorkDefinition ;
--------------------metamodels::SPL.bgf--------------------
ControlMethod ::= (deploy::ε) | (undeploy::ε) | (uninvite::ε) | (unregister::ε) | (unsubscribe::ε) ;
Event ::= eventId::String (declarations::Declaration)+ (methods::Method)+ ;
Modifier ::= (LIFO::ε) | (FIFO::ε) ;
FunctionCall ::= function::FunctionDeclaration (parameters::Expression)+ ;
StringConstant ::= value::String ;
HeadedMessageField ::= headerId::String ;
BlockExp ::= exp::Expression ;
SelectCase ::= (values::Constant)+ ;
FunctionCallStat ::= functionCall::FunctionCall ;
Dialog ::= (declarations::Declaration)+ (methods::Method)+ ;
SIPHeader ::= (CALL_ID::ε) | (CONTACT::ε) | (CSEQ::ε) | (EVENT::ε) | (FROM::ε) | (MAX_FORWARDS::ε) | (SUBSCRIPTION_STATE::ε) | (TO::ε) | (VIA::ε) ;
GlobalErrorResponse ::= errorKind::GlobalErrorKind ;
SIPMethodName ::= name::SIPMethod ;
Program ::= service::Service ;
IntegerConstant ::= value::Integer ;
SIPHeaderPlace ::= header::SIPHeader ;
Direction ::= (inout::ε) | (in::ε) | (out::ε) ;
Argument ::= type::TypeExpression initExp::Expression ;
Registration ::= (declarations::Declaration)+ (sessions::Session)+ ;
WithExp ::= exp::Expression (msgFields::MessageField)+ ;
PropertyCallPlace ::= propName::String source::VariablePlace ;
WhenStat ::= idExp::Variable (whenHeaders::WhenHeader)+ (statements::Statement)+ (elseStatements::Statement)+ ;
DeclarationStat ::= declaration::Declaration ;
FunctionLocation ::= (remote::ε) | (local::ε) ;
BooleanConstant ::= value::Boolean ;
StructureProperty ::= name::String type::TypeExpression ;
FunctionCallExp ::= functionCall::FunctionCall ;
ServerErrorResponse ::= errorKind::ServerErrorKind ;
SuccessResponse ::= successKind::SuccessKind ;
ReturnStat ::= returnedValue::Expression branch::NamedBranch ;
DefinedType ::= typeName::String ;
Branch ::= DefaultBranch ;
 Branch ::= NamedBranch ;
 Branch ::= (statements::Statement)+ ;
CompoundStat ::= (statements::Statement)+ ;
ClientErrorResponse ::= errorKind::ClientErrorKind ;
VariableDeclaration ::= Argument ;
 VariableDeclaration ::= WhenHeader ;
 VariableDeclaration ::= type::TypeExpression initExp::Expression ;
RedirectionErrorResponse ::= errorKind::RedirectionErrorKind ;
RemoteFunctionDeclaration ::= functionLocation::FunctionLocation ;
SIPMethod ::= (ACK::ε) | (BYE::ε) | (CANCEL::ε) | (INVITE::ε) | (NOTIFY::ε) | (OPTIONS::ε) | (REACK::ε) | (REGISTER::ε) | (REINVITE::ε) | (REREGISTER::ε) | (RESUBSCRIBE::ε) | (SUBSCRIBE::ε) ;
SequenceType ::= modifier::Modifier type::PrimitiveType size::Integer ;
GlobalErrorKind ::= (BUSY_EVERYWHERE::ε) | (DECLINE::ε) | (DOES_NOT_EXIST_ANYWHERE::ε) | (NOT_ACCEPTABLE::ε) ;
OperatorExp ::= opName::String leftExp::Expression rightExp::Expression ;
ConstantExp ::= value::Constant ;
ForwardExp ::= isParallel::Boolean exp::Expression ;
ReasonMessageField ::= exp::Expression ;
LocalFunctionDeclaration ::= (statements::Statement)+ ;
SetStat ::= target::Place setValue::Expression ;
IfStat ::= condition::Expression (thenStatements::Statement)+ (elseStatements::Statement)+ ;
PushStat ::= target::Place pushedValue::Expression ;
PopExp ::= source::Place ;
SimpleType ::= type::PrimitiveType ;
ControlMethodName ::= name::ControlMethod ;
StructureDeclaration ::= (properties::Argument)+ ;
ResponseConstant ::= response::Response ;
SequenceConstant ::= (values::Constant)+ ;
DefaultBranch ::= (statements::Statement)+ ;
PrimitiveType ::= (void::ε) | (bool::ε) | (int::ε) | (request::ε) | (response::ε) | (string::ε) | (time::ε) | (uri::ε) ;
ForeachStat ::= iteratorName::String sequenceExp::Expression (statements::Statement)+ ;
Variable ::= source::Declaration ;
NamedBranch ::= (name::String)+ ;
ServerErrorKind ::= (BAD_GATEWAY::ε) | (MESSAGE_TOO_LARGE::ε) | (NOT_IMPLEMENTED::ε) | (SERVER_INTERNAL_ERROR::ε) | (SERVER_TIMEOUT::ε) | (SERVICE_UNAVAILABLE::ε) | (VERSION_NOT_SUPPORTED::ε) ;
SuccessKind ::= (OK::ε) | (ACCEPTED::ε) ;
Service ::= name::String (declarations::Declaration)+ (sessions::Session)+ ;
ClientErrorKind ::= (ADDRESS_INCOMPLETE::ε) | (AMBIGUOUS::ε) | (BAD_EXTENSION::ε) | (BAD_REQUEST::ε) | (BUSY_HERE::ε) | (CALL_OR_TRANSACTION_DOES_NOT_EXIST::ε) | (EXTENSION_REQUIRED::ε) | (FORBIDDEN::ε) | (GONE::ε) | (INTERVAL_TOO_BRIEF::ε) | (LOOP_DETECTED::ε) | (METHOD_NOT_ALLOWED::ε) | (NOT_ACCEPTABLE_HERE::ε) | (NOT_ACCEPTABLE::ε) | (NOT_FOUND::ε) | (PAYMENT_REQUIRED::ε) | (PROXY_AUTHENTICATION_REQUIRED::ε) | (REQUESTURI_TOO_LONG::ε) | (REQUEST_ENTITY_TOO_LARGE::ε) | (REQUEST_PENDING::ε) | (REQUEST_TERMINATED::ε) | (REQUEST_TIMEOUT::ε) | (TEMPORARILY_UNAVAILABLE::ε) | (TOO_MANY_HOPS::ε) | (UNAUTHORIZED::ε) | (UNDECIPHERABLE::ε) | (UNSUPPORTED_MEDIA_TYPE::ε) | (UNSUPPORTED_URI_SCHEME::ε) ;
RedirectionErrorKind ::= (ALTERNATIVE_SERVICE::ε) | (MOVED_PERMANENTLY::ε) | (MOVED_TEMPORARILY::ε) | (MULTIPLE_CHOICES::ε) | (USE_PROXY::ε) ;
URIConstant ::= uri::String ;
SelectStat ::= matchedExp::Expression (selectCases::SelectCase)+ selectDefault::SelectDefault ;
WhenHeader ::= headerId::String value::Constant ;
SelectDefault ::= (statements::Statement)+ ;
Method ::= type::TypeExpression direction::Direction methodName::MethodName (arguments::Argument)+ (statements::Statement)+ (branches::Branch)+ ;
--------------------metamodels::SQLDDL.bgf--------------------
Table ::= database::Database (referencedBy::ForeignKey)+ (elements::TableElement)+ (parameters::Parameter)+ ;
PrimaryKey ::= isUnique::Boolean name::String (columns::Column)+ ;
SimpleKey ::= isUnique::Boolean name::String (columns::Column)+ ;
ForeignKey ::= referencedTable::Table (referencedColumns::Column)+ ;
Database ::= (tables::Table)+ ;
Type ::= length::Integer isUnsigned::Boolean ;
Parameter ::= table::Table value::Value ;
Column ::= (referencedBy::ForeignKey)+ name::String type::Type canBeNull::Boolean default::Value (keys::Key)+ ;
IntegerVal ::= value::Integer ;
StringVal ::= value::String ;
--------------------metamodels::SWRC.bgf--------------------
DevelopmentProject ::= name::String carriedOutBy::Organization financedBy::Organization head::AcademicStaff (isAbout::ResearchTopic)+ (member::Person)+ (projectInfo::ProjectReport)+ ;
Conference ::= series::String ;
Event ::= Conference ;
 Event ::= Workshop ;
 Event ::= Exhibition ;
 Event ::= Lecture ;
 Event ::= Meeting ;
 Event ::= name::String date::String eventTitle::String location::String atEvent::Event hasPartEvent::Event ;
InProceedings ::= editor::Person (author::Person)+ month::String number::Integer pages::String address::String volume::Integer series::String booktitle::String organization::Organization publisher::Organization ;
AcademicStaff ::= Lecturer ;
 AcademicStaff ::= FacultyMember ;
 AcademicStaff ::= (cooperateWith::AcademicStaff)+ editor::Publication headOf::Project headOfGroup::ResearchGroup memberOfPC::Event organizerOrChairOf::Event (publication::Publication)+ (supervises::PhDStudent)+ worksAtProject::ResearchTopic ;
SoftwareComponent ::= hasPrice::Integer ;
Institute ::= cooperateWith::Institute (hasParts::ResearchGroup)+ ;
Person ::= Employee ;
 Person ::= AcademicStaff ;
 Person ::= Student ;
 Person ::= address::String name::String email::String fax::String homepage::String phone::String photo::String ;
ResearchTopic ::= dealWithIn::Project (isWorkedOnBy::AcademicStaff)+ ;
Department ::= hasParts::Institute ;
AdministrativeStaff ::= affiliation::Organization ;
Booklet ::= (author::Person)+ month::String address::String edition::String howpublished::String ;
PhDStudent ::= (publication::Publication)+ worksAtProject::Project supervisor::AcademicStaff ;
Exhibition ::= name::String date::String eventTitle::String location::String atEvent::Event hasPartEvent::Event ;
University ::= (hasParts::Department)+ (student::Student)+ ;
MasterThesis ::= (author::Person)+ school::University month::String address::String type::String ;
Workshop ::= series::String ;
Manual ::= (author::Person)+ organization::Organization month::String address::String edition::String ;
TechnicalStaff ::= affiliation::Organization ;
Association ::= location::String name::String (carriesOut::Project)+ (develops::Product)+ (employs::Employee)+ (finances::Project)+ (publishes::Publication)+ (technicalReport::TechnicalReport)+ ;
Proceedings ::= editor::Person publisher::Organization organization::Organization month::String number::String volume::String address::String series::String ;
ResearchProject ::= name::String carriedOutBy::Organization financedBy::Organization head::AcademicStaff (isAbout::ResearchTopic)+ (member::Person)+ (projectInfo::ProjectReport)+ ;
Lecture ::= givenBy::Person ;
Student ::= Undergraduate ;
 Student ::= Graduate ;
 Student ::= studiesAt::University ;
Meeting ::= ProjectMeeting ;
 Meeting ::= title::String (participant::Person)+ ;
PhDThesis ::= (author::Person)+ school::University month::String address::String type::String ;
Article ::= (author::Person)+ journal::String month::String number::Integer pages::String volume::Integer ;
Unpublished ::= (author::Person)+ month::String ;
Lecturer ::= (cooperateWith::AcademicStaff)+ editor::Publication headOf::Project headOfGroup::ResearchGroup memberOfPC::Event organizerOrChairOf::Event (publication::Publication)+ (supervises::PhDStudent)+ worksAtProject::ResearchTopic ;
Organization ::= ResearchGroup ;
 Organization ::= Association ;
 Organization ::= Department ;
 Organization ::= Institute ;
 Organization ::= Enterprise ;
 Organization ::= University ;
 Organization ::= location::String name::String (carriesOut::Project)+ (develops::Product)+ (employs::Employee)+ (finances::Project)+ (publishes::Publication)+ (technicalReport::TechnicalReport)+ ;
SoftwareProject ::= product::Product ;
TechnicalReport ::= series::String organization::Organization ;
Topic ::= ResearchTopic ;
 Topic ::= name::String ;
Product ::= SoftwareComponent ;
 Product ::= name::String developedBy::Organization ;
Employee ::= Manager ;
 Employee ::= AdministrativeStaff ;
 Employee ::= TechnicalStaff ;
 Employee ::= affiliation::Organization ;
InBook ::= (author::Person)+ publisher::Organization editor::Person month::String number::Integer pages::String volume::Integer series::String chapter::String type::String address::String ;
Manager ::= affiliation::Organization ;
ProjectReport ::= describesProject::Project ;
Misc ::= month::String howpublished::String ;
Book ::= month::String number::Integer volume::Integer series::String source::String address::String edition::String isbn::String price::String editor::Person publisher::Organization (author::Person)+ ;
ResearchGroup ::= head::AcademicStaff (member::Employee)+ ;
Undergraduate ::= studiesAt::University ;
InCollection ::= editor::Person (author::Person)+ publisher::Organization month::String number::Integer pages::String address::String edition::String volume::Integer series::String chapter::String type::String booktitle::String ;
ProjectMeeting ::= title::String (participant::Person)+ ;
Bibliography ::= (publications::Publication)+ ;
Enterprise ::= location::String name::String (carriesOut::Project)+ (develops::Product)+ (employs::Employee)+ (finances::Project)+ (publishes::Publication)+ (technicalReport::TechnicalReport)+ ;
--------------------metamodels::SQLDML.bgf--------------------
ListExp ::= (elements::Expression)+ ;
StringValueExp ::= aValue::String ;
OrExp ::= opName::String leftExp::Expression rightExp::Expression ;
InExp ::= columnName::String (elements::Predicate)+ ;
OperationExp ::= optName::String ;
WhereClause ::= expression::Expression ;
QueryStmtCol ::= (columns::Expression)+ ;
SQLRoot ::= (statements::Statement)+ ;
QueryPredicate ::= query::QueryStmt ;
QueryStmtAllCol ::= (tables::Table)+ condition::WhereClause ;
Table ::= alias::String ;
NotExp ::= opName::String valueExp::Expression unused::Expression ;
IntegerValueExp ::= aValue::Integer ;
ViewStatement ::= name::String (columns::ColumnExp)+ query::QueryStmt ;
ColumnExp ::= alias::String type::DataType ;
AndExp ::= opName::String leftExp::Expression rightExp::Expression ;
LikeExp ::= columnName::String expression::StringValueExp ;
FunctionExp ::= (arguments::Expression)+ name::String ;
DataType ::= name::String ;
InsertStmt ::= tableName::String (values::Expression)+ ;
--------------------metamodels::Scilab.bgf--------------------
See_Also_Item ::= see_Also::See_Also (link::Link)+ ;
Param_Name ::= (verb::String)+ param_Item::Param_Item ;
Man ::= language::String title::String type::String date::String name::String keyword::String exemple::String (meta::Meta)+ ;
Short_Description ::= name::String (verb::String)+ ;
Description_Item ::= label::String description_Indent::Description_Indent ;
Calling_Sequence_Item ::= (calling_Sequence_Item::String)+ calling_Sequence::Calling_Sequence ;
Item ::= (itemize::Itemize)+ ;
See_Also ::= (see_Also_Item::See_Also_Item)+ ;
Table ::= (table_New_Row::Table_New_Row)+ used_Functions::Used_Functions ;
PSPPP ::= P ;
 PSPPP ::= SP ;
 PSPPP ::= PP ;
 PSPPP ::= (verb::String)+ (em::String)+ (bd::String)+ (tt::String)+ (a::A)+ (link::Link)+ (img::Img)+ ;
Param ::= target::InOut (param_Indent::Param_Indent)+ ;
Table_New_Row ::= (table_New_Column::Table_New_Column)+ table::Table ;
Authors_Item ::= (Verb::String)+ (em::String)+ (bd::String)+ (tt::String)+ (verbatim::String)+ label::String (a::A)+ (link::Link)+ authors::Authors (itemize::Itemize)+ ;
Authors ::= (authors_Item::Authors_Item)+ ;
Meta ::= meta::String path::String category::String version_CSI::String version_DOC::String author::String man::Man ;
Img ::= src::String psppp::PSPPP ;
Param_Indent ::= param::Param param_Description::Param_Description (param_Item::Param_Item)+ ;
SP ::= biblio::Biblio ;
Description ::= (itemize::Itemize)+ (description_Indent::Description_Indent)+ ;
Calling_Sequence ::= (calling_Sequence_Item::Calling_Sequence_Item)+ ;
Link ::= link::String psppp::PSPPP see_Also_Item::See_Also_Item authors_Item::Authors_Item ;
Used_Functions ::= Param_Description ;
 Used_Functions ::= Description ;
 Used_Functions ::= Itemize ;
 Used_Functions ::= Item ;
 Used_Functions ::= Section ;
 Used_Functions ::= (verbatim::String)+ (table::Table)+ ;
Biblio ::= Short_Description ;
 Biblio ::= Used_Functions ;
 Biblio ::= Authors_Item ;
 Biblio ::= (p::P)+ (sp::SP)+ (pp::PP)+ ;
P ::= biblio::Biblio ;
Description_Indent ::= description::Description (description_Item::Description_Item)+ ;
Exemple ::= exemple::String xml_space::PreDef ;
Param_Description ::= (param_Indent::Param_Indent)+ param_Item::Param_Item ;
InOut ::= (in::ε) | (out::ε) ;
Table_New_Column ::= (Verb::String)+ (em::String)+ (bd::String)+ (tt::String)+ table_New_Row::Table_New_Row ;
Section ::= (itemize::Itemize)+ ;
Param_Item ::= label::String param_Indent::Param_Indent param_Name::Param_Name param_Description::Param_Description ;
PreDef ::= (Preserve::ε) | (Default::ε) ;
AIMG ::= A ;
 AIMG ::= Img ;
 AIMG ::= (verb::String)+ ;
Itemize ::= Item ;
 Itemize ::= Section ;
 Itemize ::= label::String item::Item section::Section authors_Item::Authors_Item description::Description ;
A ::= href::String psppp::PSPPP authors_Item::Authors_Item ;
PP ::= biblio::Biblio ;
--------------------metamodels::SecureUML.bgf--------------------
Permission ::= (role::Role)+ constraintAssignment::AuthorizationConstraint (actionAssignment::Action)+ ;
Group ::= (subjectGroup::Subject)+ ;
Resource ::= (resourceAction::Action)+ ;
CompositeAction ::= (subordinatedAction::Action)+ ;
Subject ::= Group ;
 Subject ::= User ;
 Subject ::= group::Group (role::Role)+ ;
User ::= group::Group (role::Role)+ ;
Action ::= AtomicAction ;
 Action ::= CompositeAction ;
 Action ::= (permission::Permission)+ resource::Resource (actionHyerarchy::CompositeAction)+ ;
AuthorizationConstraint ::= (permission::Permission)+ ;
Role ::= (roleHierarchy::Role)+ (subjectAssignment::Subject)+ (permissionAssignment::Permission)+ ;
AtomicAction ::= (permission::Permission)+ resource::Resource (actionHyerarchy::CompositeAction)+ ;
--------------------metamodels::Sharengo.bgf--------------------
BusinessObject ::= (operations::BusinessObjectOperation)+ ;
BusinessRule ::= expr::String ;
Service2BusinessObjectFlow ::= source::String target::String ;
BusinessObjectOperation ::= (rules::BusinessRule)+ ;
Service ::= (operations::ServiceOperation)+ ;
ServiceOperation ::= (BOFlows::Service2BusinessObjectFlow)+ (rules::BusinessRule)+ ;
--------------------metamodels::SeminarSchedulingSystem.bgf--------------------
Date ::= year::Integer month::Integer day::Integer ;
Attendee ::= name::String (offering::Offering)+ ;
Presenter ::= name::String seminarSchedulingSystem::SeminarSchedulingSystem (qualifiedFor::Seminar)+ (offering::Offering)+ ;
Offering ::= is_cancelled::Boolean date::Date (attendee::Attendee)+ presenter::Presenter seminar::Seminar ;
SeminarSchedulingSystem ::= (presenter::Presenter)+ (seminar::Seminar)+ ;
Seminar ::= title::String seminarSchedulingSystem::SeminarSchedulingSystem (qualified::Presenter)+ (offering::Offering)+ ;
--------------------metamodels::SignalFlow.bgf--------------------
AssociationPortBase_PortBase ::= (srcPortBase::PortBase)+ (dstPortBase::PortBase)+ signal::Signal ;
LocalPort ::= compoundComponent::CompoundComponent ;
BaseComponent ::= CompoundComponent ;
 BaseComponent ::= PrimitiveComponent ;
 BaseComponent ::= name::String position::String (signal::Signal)+ (outputPort::OutputPort)+ (inputPort::InputPort)+ compoundComponent::CompoundComponent ;
InputPort ::= baseComponent::BaseComponent ;
Signal ::= name::String position::String baseComponent::BaseComponent associationPortBase_PortBase::AssociationPortBase_PortBase ;
PrimitiveComponent ::= name::String position::String (signal::Signal)+ (outputPort::OutputPort)+ (inputPort::InputPort)+ compoundComponent::CompoundComponent ;
PortBase ::= InputPort ;
 PortBase ::= LocalPort ;
 PortBase ::= OutputPort ;
 PortBase ::= name::String position::String associationPortBase_PortBasesrc::AssociationPortBase_PortBase associationPortBase_PortBasedst::AssociationPortBase_PortBase ;
OutputPort ::= baseComponent::BaseComponent ;
CompoundComponent ::= rootFolder::RootFolder (baseComponent::BaseComponent)+ (localPort::LocalPort)+ ;
RootFolder ::= (compoundComponent::CompoundComponent)+ ;
--------------------metamodels::SimpleAirlineDomain.bgf--------------------
Airline ::= name::String nationality::String (flight::Flight)+ ;
Time ::= year::Integer month::Integer day::Integer hour::Integer minute::Integer second::Integer ;
Airport ::= name::String (departingFlight::Flight)+ (arrivingFlight::Flight)+ ;
Passenger ::= name::String age::Integer gender::Genre needsAssistance::Boolean flight::Flight ;
Genre ::= (male::ε) | (female::ε) ;
Flight ::= departTime::Time duration::Time maxnrPassengers::Integer (passenger::Passenger)+ airline::Airline origin::Airport destination::Airport ;
--------------------metamodels::SysML.bgf--------------------
InformationItem ::= (represented::Classifier)+ ;
Problem ::= content::String ;
Comment ::= Rationale ;
 Comment ::= Problem ;
 Comment ::= content::String ;
InformationFlow ::= ItemFlow ;
 InformationFlow ::= (conveyed::Classifier)+ (source::NamedElement)+ (target::NamedElement)+ ;
Discrete ::= instance::InstanceSpecification ;
Class ::= Viewpoint ;
 Class ::= Block ;
 Class ::= Requirement ;
 Class ::= name::String ;
Rationale ::= content::String ;
Continous ::= instance::InstanceSpecification ;
Probability ::= probability::ValueSpecification ;
FlowSpecification ::= (ownedFlowProperty::FlowProperty)+ ;
Uniform ::= min::Integer max::Integer ;
BasicInterval ::= Interval ;
 BasicInterval ::= Uniform ;
 BasicInterval ::= min::Integer max::Integer ;
FlowDirection ::= (in::ε) | (out::ε) | (inout::ε) ;
ConstraintBlock ::= isEncapsulated::Boolean ;
FlowPort ::= isAtomic::Boolean direction::FlowDirection isConjugated::Boolean ;
Block ::= ConstraintBlock ;
 Block ::= isEncapsulated::Boolean ;
ValueType ::= Unit ;
 ValueType ::= Dimension ;
 ValueType ::= unit::Unit dimension::Dimension ;
Viewpoint ::= (stakeholders::String)+ purpose::String (concerns::String)+ (languages::String)+ (methods::String)+ ;
RequirementRelated ::= (verifies::Requirement)+ (tracedFrom::Requirement)+ (satisfies::Requirement)+ (refines::Requirement)+ ;
Normal ::= mean::Integer standardDeviation::Integer ;
Allocated ::= (allocatedFrom::NamedElement)+ (allocatedTo::NamedElement)+ ;
Dimension ::= unit::Unit dimension::Dimension ;
Conform ::= target::Viewpoint source::View ;
Interval ::= min::Integer max::Integer ;
NestedConnectorEnd ::= propertyPath::Property ;
View ::= conformsTo::Viewpoint ;
Unit ::= unit::Unit dimension::Dimension ;
Requirement ::= text::String id::String (derived::Requirement)+ (derivedFrom::Requirement)+ (satisfiedBy::NamedElement)+ (refinedBy::NamedElement)+ (tracedTo::NamedElement)+ (verifiedBy::TestCase)+ master::Requirement ;
FlowProperty ::= direction::FlowDirection ;
ItemFlow ::= itemProperty::BlockProperty ;
Port ::= FlowPort ;
 Port ::= isBehavior::Boolean ;
Rate ::= Continous ;
 Rate ::= Discrete ;
 Rate ::= instance::InstanceSpecification ;
--------------------metamodels::SimpleSBVR.bgf--------------------
ExactlyNQuantification ::= cardinality::NonNegativeInteger ;
Meaning ::= Concept ;
 Meaning ::= LogicalFormulation ;
 Meaning ::= (representations::Representation)+ ;
Variable ::= rangesOver::ObjectType ;
FactTypeRole ::= nounConcept::NounConcept ;
IsPropertyOfFactType ::= role1::FactTypeRole role2::FactTypeRole ;
NonNegativeInteger ::= value::Integer ;
Element ::= Representation ;
 Element ::= Text ;
 Element ::= Meaning ;
 Element ::= Role ;
 Element ::= BindableTarget ;
 Element ::= RoleBinding ;
 Element ::= objectName::String ;
Quantification ::= UniversalQuantification ;
 Quantification ::= AtLeastNQuantification ;
 Quantification ::= ExactlyNQuantification ;
 Quantification ::= AtMostNQuantification ;
 Quantification ::= introducedVariable::Variable scopesOver::LogicalFormulation ;
ObjectType ::= specializes::ObjectType (generalizes::ObjectType)+ ;
AssociativeFactType ::= role1::FactTypeRole role2::FactTypeRole ;
Designation ::= text::Text ;
Role ::= FactTypeRole ;
 Role ::= nounConcept::NounConcept ;
AtMostNQuantification ::= maxCardinality::NonNegativeInteger ;
AtLeastNQuantification ::= minCardinality::NonNegativeInteger ;
NonEmptyString ::= value::String ;
RoleBinding ::= occursIn::AtomicFormulation isOf::FactType bindsTo::BindableTarget ;
AtomicFormulation ::= BinaryAtomicFormulation ;
 AtomicFormulation ::= isBasedOn::FactType ;
CategorizationFactType ::= role1::FactTypeRole role2::FactTypeRole ;
IndividualConcept ::= instanceOf::ObjectType ;
BinaryAtomicFormulation ::= roleBinding1::RoleBinding roleBinding2::RoleBinding ;
Text ::= value::String ;
Representation ::= Designation ;
 Representation ::= meaning::Meaning ;
BinaryFactType ::= IsPropertyOfFactType ;
 BinaryFactType ::= AssociativeFactType ;
 BinaryFactType ::= CategorizationFactType ;
 BinaryFactType ::= ObjectificationFactType ;
 BinaryFactType ::= role1::FactTypeRole role2::FactTypeRole ;
UniversalQuantification ::= introducedVariable::Variable scopesOver::LogicalFormulation ;
ObjectificationFactType ::= role1::FactTypeRole role2::FactTypeRole ;
Root ::= (elements::Element)+ ;
--------------------metamodels::SimulinkStateFlow.bgf--------------------
Units ::= (alpha::ε) | (beta::ε) ;
Annotation ::= text::String block::Block ;
System ::= name::String simulink::Simulink blocks::Block lines::Line (subSystem::System)+ ;
Block ::= Primitive ;
 Block ::= Reference ;
 Block ::= description::String name::String priority::String natagme::String blockType::String (lines::Line)+ (parameters::Parameter)+ (annotations::Annotation)+ (blockRefs::BlockRef)+ system::System ;
Reference ::= sourceBlock::String sourceType::String ;
TriggerEnum ::= (alpha::ε) | (beta::ε) ;
Parameter ::= value::String block::Block ;
TriggerPort ::= triggerType::TriggerEnum ;
Simulink ::= (subSystem::System)+ ;
Primitive ::= deadLine::String period::String executionTime::String ;
EnableEnum ::= (alpha::ε) | (beta::ε) ;
EnablePort ::= statesWhenEnabling::EnableEnum ;
Line ::= name::String block::Block system::System ;
OutPut ::= number::Integer ;
Port ::= OutPut ;
 Port ::= TriggerPort ;
 Port ::= EnablePort ;
 Port ::= units::Units ;
--------------------metamodels::SoftwareQualityControl.bgf--------------------
Control ::= c_controlsSequence::ControlsSequence responsible::String component::String developmentPhase::String scope::String date::DateType controlledElt::String eltRef::String eltAuthor::String formRef::String type::ControlType ;
BugTracking ::= (bugs::Bug)+ ;
DateType ::= day::Integer month::Integer year::Integer ;
ControlsSequence ::= (controls::Control)+ ;
Bug ::= b_bugTracking::BugTracking number::Integer componentVersion::String description::String status::BugStatusType originator::String responsible::String commentsAnswers::String openDate::String closeDate::String ;
BugStatusType ::= (bst_open::ε) | (bst_closed::ε) | (bst_skipped::ε) ;
--------------------metamodels::SyncCharts.bgf--------------------
SimpleState ::= isFinal::Boolean ;
CompositeState ::= canTerminate::Boolean isSuspendable::Boolean (stg::Stg)+ ;
Stg ::= withFinal::Boolean compositeState::CompositeState (arc::Arc)+ (referenceState::ReferenceState)+ ;
ReferenceState ::= CompositeState ;
 ReferenceState ::= subSyncChart::SyncChart containers::Stg ;
Transition ::= kind::TransitionKind ;
PseudoTransition ::= kind::PseudoTransitionKind ;
PseudoState ::= kind::PseudoStateKind ;
SyncChart ::= context::ModelElement (referenceState::ReferenceState)+ ;
State ::= SimpleState ;
 State ::= CompositeState ;
 State ::= isFinal::Boolean ;
--------------------metamodels::Table.bgf--------------------
Table ::= (rows::Row)+ ;
Row ::= (cells::Cell)+ ;
Cell ::= content::String ;
--------------------metamodels::TextualPathExp.bgf--------------------
AlternativeTrans ::= (altPaths::Path)+ ;
Path ::= (transitions::Transition)+ ;
TextualPathExp ::= path::Path ;
PrimitiveTrans ::= name::String ;
--------------------metamodels::Trace.bgf--------------------
Call ::= level::Level (indexes::Index)+ methodName::String DBAccessesNumber::Integer DBRowsNumber::Integer CPUTime::Integer ;
Trace ::= (levels::Level)+ name::String ;
Level ::= trace::Trace (calls::Call)+ ;
Index ::= value::Integer ;
--------------------metamodels::TroposActorConcept.bgf--------------------
Resource ::= use::Actor dependencyWR::Dependency dependencyR::Dependency ;
HardGoal ::= wanter::Actor (plan::Plan)+ (dependencyWG::Dependency)+ (dependencyG::Dependency)+ ;
SoftGoal ::= wanter::Actor (plan::Plan)+ (dependencyWG::Dependency)+ (dependencyG::Dependency)+ ;
Dependency ::= dependee::Actor depender::Actor goal::Goal WhyG::Goal WhyR::Resource resourceD::Resource WhyP::Plan plan::Plan ;
Plan ::= isFulfilled::Goal capableOf::Actor (dependencyWP::Dependency)+ (dependencyP::Dependency)+ ;
Actor ::= (dependencyE::Dependency)+ (dependencyR::Dependency)+ (goal::Goal)+ (plan::Plan)+ (resource::Resource)+ ;
Goal ::= SoftGoal ;
 Goal ::= HardGoal ;
 Goal ::= wanter::Actor (plan::Plan)+ (dependencyWG::Dependency)+ (dependencyG::Dependency)+ ;
--------------------metamodels::TroposGoalAndPlanConcepts.bgf--------------------
Resource ::= (meansEndR::MeansEnd)+ ;
MeansEnd ::= meansR::Resource means::Goal end::Goal PointOfView::Actor meansP::Plan ;
OrDecLink ::= booleanDecompositionB::BooleanDecomposition target::Goal targetP::Plan ;
Plan ::= (meansEndP::MeansEnd)+ booleanDecompositionP::BooleanDecomposition (booleanDecLinkP::BooleanDecLink)+ ;
Decomposition ::= BooleanDecomposition ;
 Decomposition ::= PointOfView::Actor ;
AndDecLink ::= booleanDecompositionB::BooleanDecomposition target::Goal targetP::Plan ;
Actor ::= (decomposition::Decomposition)+ (contribution::Contribution)+ (meansEnd::MeansEnd)+ ;
BooleanDecLink ::= AndDecLink ;
 BooleanDecLink ::= OrDecLink ;
 BooleanDecLink ::= booleanDecompositionB::BooleanDecomposition target::Goal targetP::Plan ;
Goal ::= (contributionR::Contribution)+ (contributionD::Contribution)+ (meansEndS::MeansEnd)+ (meansEndD::MeansEnd)+ booleanDecomposition::BooleanDecomposition (booleanDecLink::BooleanDecLink)+ ;
BooleanDecomposition ::= type::String root::Goal rootP::Plan (booleanDecLinkD::BooleanDecLink)+ ;
Contribution ::= metric::String contributer::Goal contributed::Goal PointOfView::Actor ;
--------------------metamodels::UEML.bgf--------------------
Object ::= InformationObject ;
 Object ::= Resource ;
 Object ::= ioFlow::IOFlow ;
ResourceFlow ::= (resourceCarries::Resource)+ ;
HumanResource ::= carries::ResourceFlow (plays::ResourceRole)+ ;
UEMLModel ::= (contains::UEMLObject)+ ;
Anchor ::= OutputPort ;
 Anchor ::= InputPort ;
 Anchor ::= ConnectionOperator ;
 Anchor ::= target::AssociationConnector origin::AssociationConnector ;
MaterialResource ::= carries::ResourceFlow (plays::ResourceRole)+ ;
IOFlow ::= (carries::Object)+ ;
Geometry ::= object::UEMLObject ;
Activity ::= (resourceRole::ResourceRole)+ (child::Activity)+ parent::Activity (hasOutput::OutputPort)+ (hasInput::InputPort)+ ;
Resource ::= MaterialResource ;
 Resource ::= HumanResource ;
 Resource ::= carries::ResourceFlow (plays::ResourceRole)+ ;
Flow ::= ResourceFlow ;
 Flow ::= IOFlow ;
 Flow ::= ControlFlow ;
 Flow ::= associationConnector::AssociationConnector ;
UEMLObject ::= UEMLModel ;
 UEMLObject ::= Port ;
 UEMLObject ::= Flow ;
 UEMLObject ::= Activity ;
 UEMLObject ::= Object ;
 UEMLObject ::= has::Geometry model::UEMLModel ;
AssociationConnector ::= (origin::Anchor)+ (target::Anchor)+ classAssociation::Flow ;
InputPort ::= activity::Activity ;
ControlFlow ::= TriggerFlow ;
 ControlFlow ::= ConstraintFlow ;
 ControlFlow ::= (carries::InformationObject)+ ;
ConstraintFlow ::= (carries::InformationObject)+ ;
InformationObject ::= controlFlow::ControlFlow ;
TriggerFlow ::= (carries::InformationObject)+ ;
ResourceRole ::= (resourcePlays::Resource)+ roleQualifier::RoleType in::Activity ;
ConnectionOperator ::= target::AssociationConnector origin::AssociationConnector ;
OutputPort ::= activity::Activity ;
--------------------metamodels::TroposIntegratingActorConcept.bgf--------------------
Position ::= (cover::Role)+ ;
Agent ::= occupy::Position (play::Role)+ ;
--------------------metamodels::UDDI_meta-model_fragment.bgf--------------------
TModel ::= (overviewDocuments::OverviewDocument)+ identifierBag::IdentifierBag ;
BusinessEntity ::= (businessContacts::BusinessContact)+ (businessServices::BusinessService)+ identifierBag::IdentifierBag ;
--------------------metamodels::UEMLExtended.bgf--------------------
Object ::= InformationObject ;
 Object ::= Resource ;
 Object ::= ioFlow::IOFlow ;
ResourceFlow ::= (resourceCarries::Resource)+ ;
HumanResource ::= obliger::Commitment claimer::Commitment has_parties::Contract ;
Organisation ::= obliger::Commitment claimer::Commitment has_parties::Contract ;
Event ::= target::AssociationConnector origin::AssociationConnector ;
UEMLModel ::= (contains::UEMLObject)+ ;
Service ::= process::Process ;
Commitment ::= (resource::Resource)+ task::Task agentO::Agent agentC::Agent contract::Contract ;
IOFlow ::= (carries::Object)+ ;
Contract ::= (process::Process)+ agent::Agent (collection_of::Commitment)+ ;
Geometry ::= object::UEMLObject ;
Process ::= child::Activity (fulfills::Contract)+ realises::Service ;
Activity ::= Process ;
 Activity ::= Task ;
 Activity ::= (resourceRole::ResourceRole)+ parent::Process (hasOutput::OutputPort)+ (hasInput::InputPort)+ activityType::ActivityType ;
Resource ::= PassiveObject ;
 Resource ::= Service ;
 Resource ::= Agent ;
 Resource ::= carries::ResourceFlow (plays::ResourceRole)+ resourceType::ResourceType (commitment::Commitment)+ ;
Flow ::= ResourceFlow ;
 Flow ::= IOFlow ;
 Flow ::= ControlFlow ;
 Flow ::= associationConnector::AssociationConnector ;
UEMLObject ::= UEMLModel ;
 UEMLObject ::= Port ;
 UEMLObject ::= Flow ;
 UEMLObject ::= Object ;
 UEMLObject ::= Activity ;
 UEMLObject ::= has::Geometry model::UEMLModel ;
FlowObject ::= Event ;
 FlowObject ::= Activity ;
 FlowObject ::= ConnectionOperator ;
 FlowObject ::= target::AssociationConnector origin::AssociationConnector ;
AssociationConnector ::= (origin::FlowObject)+ (target::FlowObject)+ classAssociation::Flow ;
ControlFlow ::= TriggerFlow ;
 ControlFlow ::= ConstraintFlow ;
 ControlFlow ::= (carries::InformationObject)+ ;
ConstraintFlow ::= (carries::InformationObject)+ ;
InputPort ::= activity::Activity ;
InformationObject ::= controlFlow::ControlFlow ;
ActivityType ::= (activityT::Activity)+ ;
ResourceType ::= (resource::Resource)+ ;
Software ::= obliger::Commitment claimer::Commitment has_parties::Contract ;
TriggerFlow ::= (carries::InformationObject)+ ;
Task ::= (fulfills::Commitment)+ ;
Agent ::= HumanResource ;
 Agent ::= Software ;
 Agent ::= Organisation ;
 Agent ::= obliger::Commitment claimer::Commitment has_parties::Contract ;
ResourceRole ::= (resourcePlays::Resource)+ roleQualifier::RoleType in::Activity ;
ConnectionOperator ::= target::AssociationConnector origin::AssociationConnector ;
OutputPort ::= activity::Activity ;
--------------------metamodels::UEMLExtensionCapturingAgents.bgf--------------------
Object ::= InformationObject ;
 Object ::= Resource ;
 Object ::= ioFlow::IOFlow ;
ResourceFlow ::= (resourceCarries::Resource)+ ;
UEMLModel ::= (contains::UEMLObject)+ ;
Commitment ::= (resource::Resource)+ ;
Anchor ::= OutputPort ;
 Anchor ::= InputPort ;
 Anchor ::= ConnectionOperator ;
 Anchor ::= target::AssociationConnector origin::AssociationConnector ;
IOFlow ::= (carries::Object)+ ;
Geometry ::= object::UEMLObject ;
Activity ::= (resourceRole::ResourceRole)+ (child::Activity)+ parent::Activity (hasOutput::OutputPort)+ (hasInput::InputPort)+ ;
Resource ::= PassiveObject ;
 Resource ::= Agent ;
 Resource ::= carries::ResourceFlow (plays::ResourceRole)+ (commitment::Commitment)+ ;
Flow ::= ResourceFlow ;
 Flow ::= IOFlow ;
 Flow ::= ControlFlow ;
 Flow ::= associationConnector::AssociationConnector ;
UEMLObject ::= UEMLModel ;
 UEMLObject ::= Port ;
 UEMLObject ::= Flow ;
 UEMLObject ::= Activity ;
 UEMLObject ::= Object ;
 UEMLObject ::= has::Geometry model::UEMLModel ;
AssociationConnector ::= (origin::Anchor)+ (target::Anchor)+ classAssociation::Flow ;
InputPort ::= activity::Activity ;
ConstraintFlow ::= (carries::InformationObject)+ ;
ControlFlow ::= TriggerFlow ;
 ControlFlow ::= ConstraintFlow ;
 ControlFlow ::= (carries::InformationObject)+ ;
InformationObject ::= controlFlow::ControlFlow ;
TriggerFlow ::= (carries::InformationObject)+ ;
ResourceRole ::= (resourcePlays::Resource)+ roleQualifier::RoleType in::Activity ;
ConnectionOperator ::= target::AssociationConnector origin::AssociationConnector ;
OutputPort ::= activity::Activity ;
--------------------metamodels::UEMLExtensionCapturingSocialEffects.bgf--------------------
Object ::= InformationObject ;
 Object ::= Resource ;
 Object ::= ioFlow::IOFlow ;
ResourceFlow ::= (resourceCarries::Resource)+ ;
HumanResource ::= carries::ResourceFlow (plays::ResourceRole)+ ;
UEMLModel ::= (contains::UEMLObject)+ ;
Commitment ::= task::Task agentO::Agent agentC::Agent contract::Contract ;
Service ::= process::Process ;
Anchor ::= OutputPort ;
 Anchor ::= InputPort ;
 Anchor ::= ConnectionOperator ;
 Anchor ::= target::AssociationConnector origin::AssociationConnector ;
MaterialResource ::= carries::ResourceFlow (plays::ResourceRole)+ ;
IOFlow ::= (carries::Object)+ ;
Contract ::= (process::Process)+ agent::Agent (collection_of::Commitment)+ ;
Geometry ::= object::UEMLObject ;
Process ::= child::Activity (fulfills::Contract)+ realises::Service ;
Activity ::= Process ;
 Activity ::= Task ;
 Activity ::= (resourceRole::ResourceRole)+ parent::Process hasOutput::OutputPort ;
Resource ::= MaterialResource ;
 Resource ::= HumanResource ;
 Resource ::= Service ;
 Resource ::= Agent ;
 Resource ::= carries::ResourceFlow (plays::ResourceRole)+ ;
Flow ::= ResourceFlow ;
 Flow ::= IOFlow ;
 Flow ::= ControlFlow ;
 Flow ::= associationConnector::AssociationConnector ;
UEMLObject ::= UEMLModel ;
 UEMLObject ::= Port ;
 UEMLObject ::= Flow ;
 UEMLObject ::= Activity ;
 UEMLObject ::= Object ;
 UEMLObject ::= has::Geometry model::UEMLModel ;
AssociationConnector ::= (origin::Anchor)+ (target::Anchor)+ classAssociation::Flow ;
InputPort ::= target::AssociationConnector origin::AssociationConnector ;
ControlFlow ::= TriggerFlow ;
 ControlFlow ::= ConstraintFlow ;
 ControlFlow ::= (carries::InformationObject)+ ;
ConstraintFlow ::= (carries::InformationObject)+ ;
InformationObject ::= controlFlow::ControlFlow ;
TriggerFlow ::= (carries::InformationObject)+ ;
Task ::= (fulfills::Commitment)+ ;
Agent ::= obliger::Commitment claimer::Commitment has_parties::Contract ;
ResourceRole ::= (resourcePlays::Resource)+ roleQualifier::RoleType in::Activity ;
ConnectionOperator ::= target::AssociationConnector origin::AssociationConnector ;
OutputPort ::= activity::Activity ;
--------------------metamodels::UEMLExtensionDynamicAspects.bgf--------------------
Object ::= InformationObject ;
 Object ::= Resource ;
 Object ::= ioFlow::IOFlow ;
ResourceFlow ::= (resourceCarries::Resource)+ ;
HumanResource ::= carries::ResourceFlow (plays::ResourceRole)+ ;
Event ::= target::AssociationConnector origin::AssociationConnector ;
UEMLModel ::= (contains::UEMLObject)+ ;
MaterialResource ::= carries::ResourceFlow (plays::ResourceRole)+ ;
IOFlow ::= (carries::Object)+ ;
Geometry ::= object::UEMLObject ;
Process ::= (child::Activity)+ ;
Activity ::= Task ;
 Activity ::= (resourceRole::ResourceRole)+ parent::Process (hasOutput::OutputPort)+ (hasInput::InputPort)+ ;
Resource ::= MaterialResource ;
 Resource ::= HumanResource ;
 Resource ::= carries::ResourceFlow (plays::ResourceRole)+ ;
Flow ::= ResourceFlow ;
 Flow ::= IOFlow ;
 Flow ::= ControlFlow ;
 Flow ::= associationConnector::AssociationConnector ;
UEMLObject ::= UEMLModel ;
 UEMLObject ::= Port ;
 UEMLObject ::= Flow ;
 UEMLObject ::= Object ;
 UEMLObject ::= Activity ;
 UEMLObject ::= has::Geometry model::UEMLModel ;
FlowObject ::= Event ;
 FlowObject ::= Activity ;
 FlowObject ::= ConnectionOperator ;
 FlowObject ::= target::AssociationConnector origin::AssociationConnector ;
AssociationConnector ::= (origin::FlowObject)+ (target::FlowObject)+ classAssociation::Flow ;
InputPort ::= activity::Activity ;
ControlFlow ::= TriggerFlow ;
 ControlFlow ::= ConstraintFlow ;
 ControlFlow ::= (carries::InformationObject)+ ;
ConstraintFlow ::= (carries::InformationObject)+ ;
InformationObject ::= controlFlow::ControlFlow ;
TriggerFlow ::= (carries::InformationObject)+ ;
Task ::= (resourceRole::ResourceRole)+ parent::Process (hasOutput::OutputPort)+ (hasInput::InputPort)+ ;
ResourceRole ::= (resourcePlays::Resource)+ roleQualifier::RoleType in::Activity ;
ConnectionOperator ::= target::AssociationConnector origin::AssociationConnector ;
OutputPort ::= activity::Activity ;
--------------------metamodels::UEMLExtensionModelingAspects.bgf--------------------
Object ::= InformationObject ;
 Object ::= Resource ;
 Object ::= ioFlow::IOFlow ;
ResourceFlow ::= (resourceCarries::Resource)+ ;
HumanResource ::= carries::ResourceFlow (plays::ResourceRole)+ resourceType::ResourceType ;
UEMLModel ::= (contains::UEMLObject)+ ;
Anchor ::= OutputPort ;
 Anchor ::= InputPort ;
 Anchor ::= ConnectionOperator ;
 Anchor ::= target::AssociationConnector origin::AssociationConnector ;
MaterialResource ::= carries::ResourceFlow (plays::ResourceRole)+ resourceType::ResourceType ;
IOFlow ::= (carries::Object)+ ;
Geometry ::= object::UEMLObject ;
Activity ::= (resourceRole::ResourceRole)+ (child::Activity)+ parent::Activity (hasOutput::OutputPort)+ (hasInput::InputPort)+ activityType::ActivityType ;
Resource ::= MaterialResource ;
 Resource ::= HumanResource ;
 Resource ::= carries::ResourceFlow (plays::ResourceRole)+ resourceType::ResourceType ;
Flow ::= ResourceFlow ;
 Flow ::= IOFlow ;
 Flow ::= ControlFlow ;
 Flow ::= associationConnector::AssociationConnector ;
UEMLObject ::= UEMLModel ;
 UEMLObject ::= Port ;
 UEMLObject ::= Flow ;
 UEMLObject ::= Activity ;
 UEMLObject ::= Object ;
 UEMLObject ::= has::Geometry model::UEMLModel ;
AssociationConnector ::= (origin::Anchor)+ (target::Anchor)+ classAssociation::Flow ;
InputPort ::= activity::Activity ;
ControlFlow ::= TriggerFlow ;
 ControlFlow ::= ConstraintFlow ;
 ControlFlow ::= (carries::InformationObject)+ ;
ConstraintFlow ::= (carries::InformationObject)+ ;
InformationObject ::= controlFlow::ControlFlow ;
ActivityType ::= (activityT::Activity)+ ;
ResourceType ::= (resource::Resource)+ ;
TriggerFlow ::= (carries::InformationObject)+ ;
ResourceRole ::= (resourcePlays::Resource)+ roleQualifier::RoleType in::Activity ;
ConnectionOperator ::= target::AssociationConnector origin::AssociationConnector ;
OutputPort ::= activity::Activity ;
--------------------metamodels::USECASE1.bgf--------------------
Context ::= (preCondition::PreCondition)+ (postCondition::PostCondition)+ (useCase::UseCase)+ ;
Episode ::= (event::Event)+ ;
PostCondition ::= (context::Context)+ ;
User ::= (useCase::UseCase)+ (actor::Actor)+ ;
Event ::= Action ;
 Event ::= Responce ;
 Event ::= Stimilus ;
 Event ::= (episode::Episode)+ ;
Parameter ::= (stimilus::Stimilus)+ (responce::Responce)+ ;
PreCondition ::= (context::Context)+ ;
UseCase ::= context::Context (service::Service)+ (user::User)+ (actor::Actor)+ ;
Stimilus ::= (parameter::Parameter)+ ;
Action ::= (episode::Episode)+ ;
Service ::= (useCase::UseCase)+ (goal::Goal)+ (task::Task)+ ;
Actor ::= (useCase::UseCase)+ (goal::Goal)+ (user::User)+ ;
Task ::= (service::Service)+ ;
Goal ::= (service::Service)+ (actor::Actor)+ ;
Responce ::= (parameter::Parameter)+ ;
--------------------metamodels::USECASE2.bgf--------------------
ScenarioDescription ::= useCase::UseCase ;
Condition ::= Pre ;
 Condition ::= Post ;
 Condition ::= (constrained_with::UseCase)+ ;
UseCase ::= Manage ;
 UseCase ::= (scenario::ScenarioDescription)+ (condition::Condition)+ (interacter::Role)+ (specified_by::FunctionnelRequirement)+ (scoped_by::NonFunctionnelRequirement)+ (meet_by::Goal)+ ;
Role ::= HumanRole ;
 Role ::= SystemRole ;
 Role ::= EventRole ;
 Role ::= (interacted_with::UseCase)+ ;
FunctionnelRequirement ::= (specifies::UseCase)+ ;
Manage ::= (managed_Resource::Resource)+ ;
SystemRole ::= (interacted_with::UseCase)+ ;
Pre ::= (constrained_with::UseCase)+ ;
HumanRole ::= (interacted_with::UseCase)+ ;
Goal ::= (to_meet::UseCase)+ ;
NonFunctionnelRequirement ::= (scopes::UseCase)+ ;
Post ::= (constrained_with::UseCase)+ ;
EventRole ::= (interacted_with::UseCase)+ ;
--------------------metamodels::WSDL.bgf--------------------
BindingFault ::= operation::BindingOperation binding::Fault ;
Param ::= Input ;
 Param ::= Output ;
 Param ::= name::String message::Message ;
PortType ::= name::String (operations::Operation)+ (bindings::Binding)+ ;
Input ::= operation::Operation ;
Message ::= name::String (params::Param)+ (faults::Fault)+ (parts::Part)+ ;
Operation ::= name::String input::Input output::Output type::PortType (faults::Fault)+ ;
Binding ::= name::String (ports::Port)+ type::PortType (operations::BindingOperation)+ ;
Service ::= name::String (ports::Port)+ ;
Part ::= name::String message::Message ;
Fault ::= name::String operation::Operation message::Message ;
BindingOperation ::= name::String bind::Binding binding::Operation input::StartWithExtensions output::StartWithExtensions (faults::BindingFault)+ ;
Output ::= operation::Operation ;
Port ::= name::String service::Service binding::Binding ;
--------------------metamodels::UnifiedOntologyLanguage.bgf--------------------
Ontology ::= (imports::Package)+ ;
Resource ::= Package ;
 Resource ::= context::Package ;
Fact ::= object::Node subject::Resource predicate::Resource context::Package ;
--------------------metamodels::UnixFS.bgf--------------------
FileSystemRoot ::= (contents::File)+ ;
Directory ::= FileSystemRoot ;
 Directory ::= (contents::File)+ ;
TextFile ::= owner::String group::String ;
--------------------metamodels::UsiXML-task.bgf--------------------
BinaryType ::= (Enabling::ε) | (Disabling::ε) | (SuspendResume::ε) | (OrderIndependence::ε) | (IndependentConcurrency::ε) | (ConcurencyWithInformationPassing::ε) | (UnderterministicChoice::ε) | (EnablingWithInformationPassing::ε) ;
UnaryType ::= (Optional::ε) | (Iteration::ε) | (finitIteration::ε) ;
FiniteInteration ::= interation::Integer ;
BinaryOperator ::= type::BinaryType leftTask::Task rightTask::Task ;
Task ::= id::String name::String category::String frequency::Integer importance::Integer structurationLevel::Integer complexityLevel::Integer criticity::Integer centrality::Integer terminationValue::String taskType::String taskItem::String (decompositionTasks::Task)+ decomposedTask::Task leftOperator::BinaryOperator rightOperator::BinaryOperator decoration::UnaryOperator ;
UnaryOperator ::= FiniteInteration ;
 UnaryOperator ::= UnaryType::UnaryType decoratedTask::Task ;
--------------------metamodels::WSLink.bgf--------------------
Network ::= (services::Services)+ name::String ;
RSS ::= name::String URL::String descriptions::String ;
WebService ::= (linkedServices::Services)+ ;
--------------------metamodels::WTIP_SimpleClass.bgf--------------------
Attribute ::= name::String is_primary::Boolean type::Classifier ;
PrimitiveDataType ::= name::String ;
Class ::= is_persistent::Boolean parent::Class (attrs::Attribute)+ ;
Association ::= name::String src::Class dest::Class ;
Classifier ::= Class ;
 Classifier ::= PrimitiveDataType ;
 Classifier ::= name::String ;
--------------------metamodels::WTIP_SimpleRDBMS.bgf--------------------
Table ::= name::String (fkeys::FKey)+ (pkey::Column)+ (cols::Column)+ ;
FKey ::= references::Table (cols::Column)+ ;
Column ::= name::String type::String ;
--------------------metamodels::WebApplications_AbstractModel.bgf--------------------
ClientPage ::= hyperlink::HyperLink ;
ClientPageModule ::= consistsOf::Client/ClientPage ;
HyperLink ::= (server::Server/ServerPage)+ ;
ServerPage ::= useBusinessLogic::Server/BusinessLogic useDesignTemplate::Server/DesignTemplate (generates::Client/ClientPage)+ (link::HyperLink)+ ;
--------------------metamodels::WfMC.bgf--------------------
WorkflowProcessActivity ::= processDefinition::WorkflowProcessDefinition (applicationDeclarations::WorkflowApplicationDeclaration)+ (revelantDatas::WorkflowRelevantData)+ (participantSpecifications::WorkflowParticipantSpecification)+ to_transitionInformation::TransitionInformation from_transitionInformation::TransitionInformation ;
WorkflowParticipantSpecification ::= processDefinition::WorkflowProcessDefinition (revelantDatas::WorkflowRelevantData)+ (processActivities::WorkflowProcessActivity)+ ;
WorkflowApplicationDeclaration ::= processDefinition::WorkflowProcessDefinition (processActivities::WorkflowProcessActivity)+ (revelantDatas::WorkflowRelevantData)+ ;
TransitionInformation ::= processDefinition::WorkflowProcessDefinition (revelantDatas::WorkflowRelevantData)+ to_processActivity::WorkflowProcessActivity from_processActivity::WorkflowProcessActivity ;
WorkflowRelevantData ::= processDefinition::WorkflowProcessDefinition (applicationDeclarations::WorkflowApplicationDeclaration)+ (processActivities::WorkflowProcessActivity)+ (participantSpecifications::WorkflowParticipantSpecification)+ (transitionInformations::TransitionInformation)+ ;
WorkflowProcessDefinition ::= (participantSpecificatons::WorkflowParticipantSpecification)+ (revelantDatas::WorkflowRelevantData)+ (applicationDeclarations::WorkflowApplicationDeclaration)+ (processActivities::WorkflowProcessActivity)+ (transitionInformations::TransitionInformation)+ ;
--------------------metamodels::WebApplications_ConceptualModel.bgf--------------------
ServerDecision ::= evaluatesResultOf::Server/Processor ;
LogicElement ::= (uses::Server/UseCase)+ generatedBy::Server/LogicElement next::Server/LogicElement ;
ServerPageModule ::= (contains::Server/ServerPage)+ link::Server/Link containsModule::Server/DesignModule ;
DesignElement ::= represents::Server/DesignModule ;
LogicInterface ::= represents::Server/LogicModule generatedBy::Server/Renderer ;
Link ::= page::Server/ServerPage posts::Server/Data ;
ClientPage ::= hyperlink::HyperLink ;
UseCase ::= (logicElem::Server/LogicElement)+ ;
Processor ::= (persistentData::Server/Data)+ (inputData::Server/Data)+ (outputData::Server/Data)+ ;
ServerPage ::= (link::HyperLink)+ (generates::Client/ClientPage)+ (module::Server/ServerPageModule)+ ;
BeginUseCase ::= useCase::Server/UseCase ;
LogicModule ::= (useCase::Server/UseCase)+ (logicElement::Server/LogicElement)+ ;
Data ::= (renderer::Server/Renderer)+ (persist::Server/Processor)+ (uses::Server/Processor)+ (computes::Server/Processor)+ ;
UserDecision ::= (allows::Server/Alternative)+ ;
ClientPageModule ::= consistsOf::Client/ClientPage representsSMP::Server/ServerPageModule ;
HyperLink ::= (server::Server/ServerPage)+ ;
Renderer ::= (renders::Server/Data)+ ;
--------------------metamodels::WorkDefinitions.bgf--------------------
Activity ::= iteration::Iteration (steps::Step)+ ;
ProcessPerformer ::= Role ;
 ProcessPerformer ::= (features::WorkDefinition)+ ;
WorkProduct ::= responsible::Role ;
Iteration ::= phase::Phase (activities::Activity)+ ;
Phase ::= lifeCycle::Lifecycle (iterations::Iteration)+ ;
Lifecycle ::= (phases::Phase)+ ;
Role ::= (products::WorkProduct)+ ;
WorkDefinition ::= Lifecycle ;
 WorkDefinition ::= Phase ;
 WorkDefinition ::= Iteration ;
 WorkDefinition ::= Activity ;
 WorkDefinition ::= (parentWorks::WorkDefinition)+ (subWorks::WorkDefinition)+ owner::ProcessPerformer ;
--------------------metamodels::XAML-Perspective.bgf--------------------
Page ::= (xmlns::NameSpace)+ title::String graphContainer::GraphicalContainer pageResources::PageResource ;
Square3D ::= transform::String material::String name::Name namespace::NameSpace ;
PageResource ::= (dictionaries::ResourceDictionary)+ ;
Box3D ::= transform::String material::String name::Name namespace::NameSpace ;
Name ::= name::String ;
XyzAxis3D ::= length::Double ;
NameSpace ::= namespace::String identifier::String ;
Workshop3D ::= (elements3D::Element3D)+ ;
UI3Delement ::= Box3D ;
 UI3Delement ::= Square3D ;
 UI3Delement ::= transform::String material::String name::Name ;
Grid ::= (object3D::Object3D)+ ;
ResourceDictionary ::= source::String ;
--------------------metamodels::XAML-ResourceDictionary.bgf--------------------
TranslateTransform3D ::= OffsetX::Double OffsetY::Double OffsetZ::Double ;
Key ::= name::String ;
NameSpace ::= namespace::String identifier::String ;
DiffuseMaterial ::= Brush::String ;
MaterialGroup ::= (materials::Material)+ ;
ResourceDictionary ::= (resourcegroups::ResourceGroup)+ (xmlns::NameSpace)+ ;
RotateTransformat3DRotation ::= axisAngleRotation3D::AxisAngleRotation3D ;
ScaleTransform3D ::= ScaleX::Double ScaleY::Double ScaleZ::Double ;
RotateTransform3D ::= CenterX::Double CenterY::Double rotation::RotateTransformat3DRotation ;
Transform3DGroup ::= (transformations::Transformation)+ ;
AxisAngleRotation3D ::= angle::Integer axis::String ;
ResourceGroup ::= Transform3DGroup ;
 ResourceGroup ::= MaterialGroup ;
 ResourceGroup ::= key::Key ;
--------------------metamodels::XMorphLanguage_abstractSyntax.bgf--------------------
NotTerm ::= (term::Term)+ ;
Key ::= (property::MOF::Property)+ transformation::Transformation ;
InstanceRef ::= obj::MOF::Object ;
ExtentVar ::= src::Term ;
Condition ::= reason::String ;
MofInstance ::= isExactly::Boolean typeName::Expression instance::Expression ;
PatternDefn ::= scope::PatternScope (parameter::PatternVar)+ body::Term ;
MOF::Property ::= part::Key ;
PatternUse ::= tRuleST::TRule (arg::Expression)+ ;
PatternVar ::= query::Query patternDefn::PatternDefn ;
TRuleVar ::= (superseder::TRuleVar)+ (superseded::TRuleVar)+ (extended::TRuleVar)+ (extender::TRuleVar)+ ;
StringConstant ::= representation::String ;
MOF::Class ::= (tracking::TrackingUse)+ ;
IntConstant ::= representation::String ;
CollectionExpr ::= unique::Boolean ordered::Boolean ;
TRule ::= (superseded::TRule)+ (superseder::TRule)+ transformation::Transformation (extended::TRule)+ (extender::TRule)+ term::Term (tgt::SimpleTerm)+ ;
TrackingUse ::= featureNames::String tracking::MOF::Class ;
OrTerm ::= (term::Term)+ ;
FunctionExpr ::= function::String ;
BooleanConstant ::= representation::String ;
FeatureExpr ::= collect::String featureName::String ;
MofOrder ::= lesser::Expression instance::Expression greater::Expression ;
Transformation ::= (keys::Key)+ (tRule::TRule)+ ;
IfTerm ::= (term::Term)+ ;
Query ::= term::Term (parameter::PatternVar)+ ;
EnumConstant ::= representation::String ;
MOF::Object ::= obj::InstanceRef ;
AndTerm ::= (term::Term)+ ;
VarUse ::= var::AbstractVar ;
--------------------metamodels::XPDL-1.14.bgf--------------------
TaskReceive ::= instantiate::Boolean implementation::ImplementationKind ;
Pool ::= orientation::OrientationKind boundaryVisible::Boolean (lanes::Lane)+ object::Object participant::Participant process::Process ;
StartEvent ::= triggerKind::TriggerKind implementation::ImplementationKind trigger::Trigger ;
ResultCompensation ::= activity::Activity ;
ReferencedApplication ::= externalReference::ExternalReference ;
ModeKind ::= (Automatic::ε) | (Manual::ε) ;
Transition ::= quantity::Integer object::Object to::Activity from::Activity ;
MessageFlow ::= targetActivity::Activity sourceActivity::Activity targetPool::Pool sourcePool::Pool object::Object ;
TriggerRule ::= ruleName::String ;
ActivitySet ::= adHoc::Boolean adHocOrdering::AdHocOrderingKind adHocCompletionCondition::String defaultStartActivity::Activity (activities::Activity)+ (transitions::Transition)+ object::Object ;
GatewayTypeKind ::= (Xor::ε) | (Or::ε) | (Complex::ε) | (And::ε) ;
Artifact ::= DataObject ;
 Artifact ::= Group ;
 Artifact ::= Annotation ;
 Artifact ::= textAnnotation::String group::String object::Object dataObject::DataObject ;
TriggerResultLink ::= processRef::Process ;
Activity ::= Task ;
 Activity ::= Route ;
 Activity ::= SubFlow ;
 Activity ::= BlockActivity ;
 Activity ::= Event ;
 Activity ::= isStartActivity::Boolean status::StatusKind startMode::ModeKind finishMode::ModeKind startQuantity::Integer isATransaction::Boolean (dataFields::DataField)+ object::Object ;
SubFlow ::= execution::ExecutionKind instanceDataField::String packageRef::Package startActivitySet::ActivitySet startActivity::Activity ;
ExecutionKind ::= (Asynchr::ε) | (Synchr::ε) ;
Script ::= type::String version::String grammar::String ;
TaskApplication ::= packageRef::Package ;
Route ::= Gateway ;
 Route ::= gatewayType::GatewayTypeKind instantiate::Boolean markerVisiable::Boolean ;
DataObject ::= state::String requiredForStart::Boolean producedAtCompletion::Boolean (dataFields::DataField)+ ;
Package ::= script::Script (externalPackages::ExternalPackage)+ (typeDeclarations::TypeDeclaration)+ (participants::Participant)+ (applications::Application)+ (dataFields::DataField)+ (pools::Pool)+ (messageFlows::MessageFlow)+ (associations::Association)+ (artifacts::Artifact)+ (workflowProcesses::Process)+ ;
TaskReference ::= taskRef::Task ;
Gateway ::= gatewayType::GatewayTypeKind instantiate::Boolean markerVisiable::Boolean ;
OrientationKind ::= (Horizontal::ε) | (Vertical::ε) ;
Association ::= associationDirection::AssociationDirectionKind targetArtifact::Artifact sourceArtifact::Artifact targetPool::Pool sourcePool::Pool targetActivity::Activity sourceActivity::Activity object::Object ;
AdHocOrderingKind ::= (Sequential::ε) | (Parallel::ε) ;
ExternalReference ::= xref::String location::String namespace::String ;
Object ::= (categories::Category)+ ;
EndEvent ::= triggerKind::TriggerKind implementation::ImplementationKind trigger::Trigger ;
Group ::= textAnnotation::String group::String object::Object dataObject::DataObject ;
Category ::= id::String name::String ;
ProcessTypeKind ::= (None::ε) | (Private::ε) | (Abstract::ε) | (Collaboration::ε) ;
BlockActivity ::= activitySet::ActivitySet startActivity::Activity ;
ExternalPackage ::= href::String ;
AccessLevelKind ::= (Public::ε) | (Private::ε) ;
Participant ::= id::String name::String ;
AssociationDirectionKind ::= (None::ε) | (To::ε) | (From::ε) | (Both::ε) ;
DataField ::= isArray::Boolean correlation::Boolean dataType::TypeDeclaration ;
TaskUser ::= implementation::ImplementationKind ;
TaskScript ::= script::Script ;
TaskService ::= implementation::ImplementationKind ;
Process ::= accessLevel::AccessLevelKind processType::ProcessTypeKind status::StatusKind suppressJoinFailure::Boolean enableInstanceCompensation::Boolean adHoc::Boolean adHocOrdering::AdHocOrderingKind adHocCompletionCondition::String (participant::Participant)+ (applications::Application)+ dataField::DataField (activitySets::ActivitySet)+ (activities::Activity)+ (transitions::Transition)+ object::Object defaultStartActivitySet::ActivitySet defaultStartActivity::Activity ;
Annotation ::= textAnnotation::String group::String object::Object dataObject::DataObject ;
TriggerTimer ::= timeDate::String timeCycle::String ;
TaskSend ::= implementation::ImplementationKind ;
TriggerKind ::= (None::ε) | (Message::ε) | (Timer::ε) | (Rule::ε) | (Link::ε) | (Error::ε) | (Cancel::ε) | (Compensation::ε) | (Terminate::ε) | (Multiple::ε) ;
Lane ::= object::Object parentLane::Lane parentPool::Pool ;
ResultError ::= errorCode::String ;
ImplementationKind ::= (WebService::ε) | (Other::ε) | (Unspecified::ε) ;
StatusKind ::= (None::ε) | (Ready::ε) | (Active::ε) | (Cancelled::ε) | (Aborting::ε) | (Aborted::ε) | (Completing::ε) | (Completed::ε) ;
IntermediateEvent ::= target::Activity ;
TypeDeclaration ::= id::String name::String ;
--------------------metamodels::XUL-Interactorl.bgf--------------------
TextBox ::= multiline::Boolean value::String ;
MenuList ::= (menuitems::MenuItem)+ ;
Image ::= src::String ;
Event ::= onClick ;
 Event ::= (functionCallParameters::Parameter)+ functionCalledName::String name::String ;
Interactor ::= Radio ;
 Interactor ::= ListItem ;
 Interactor ::= MenuItem ;
 Interactor ::= Containement ;
 Interactor ::= Container ;
 Interactor ::= flex::Integer id::String stat::String style::String (events::Event)+ ;
Function ::= name::String functionUIModel::UIModel body::String ;
UIModel ::= windows::Windows (functions::Function)+ ;
MenuItem ::= label::String ;
ListItem ::= label::String value::String ;
Orients ::= (horizontal::ε) | (vertical::ε) ;
ListBox ::= rows::Integer (listitems::ListItem)+ ;
GroupBox ::= (xulInteractors::Interactor)+ ;
onClick ::= (functionCallParameters::Parameter)+ functionCalledName::String name::String ;
HeaderJScript ::= ref::String ;
Grid ::= (columns::column)+ (rows::row)+ ;
RadioGroup ::= (radiobuttons::Radio)+ ;
hbox ::= (xulInteractors::Interactor)+ ;
Windows ::= id::String title::String orient::Orients style::String (headers::HeaderCss)+ (headersJScript::HeaderJScript)+ ;
Container ::= Windows ;
 Container ::= vbox ;
 Container ::= hbox ;
 Container ::= GroupBox ;
 Container ::= row ;
 Container ::= column ;
 Container ::= TabPanel ;
 Container ::= (xulInteractors::Interactor)+ ;
Description ::= value::String ;
Radio ::= id::String label::String selected::Boolean disabled::Boolean ;
row ::= (xulInteractors::Interactor)+ ;
HeaderCss ::= ref::String type::String ;
column ::= (xulInteractors::Interactor)+ ;
TabBox ::= (tabPanels::Interactor)+ ;
vbox ::= (xulInteractors::Interactor)+ ;
Label ::= value::String control::String ;
Button ::= tooltiptext::String image::String ;
TabPanel ::= id::String orient::Orients ;
Containement ::= Button ;
 Containement ::= Image ;
 Containement ::= RadioGroup ;
 Containement ::= ListBox ;
 Containement ::= MenuList ;
 Containement ::= TabBox ;
 Containement ::= TextBox ;
 Containement ::= Spacer ;
 Containement ::= Label ;
 Containement ::= Grid ;
 Containement ::= CheckBox ;
 Containement ::= Caption ;
 Containement ::= Description ;
 Containement ::= style::String accesskey::String class::String maxlength::Integer label::String orient::Orients minlength::String onclick::String disabled::String ;
Spacer ::= style::String accesskey::String class::String maxlength::Integer label::String orient::Orients minlength::String onclick::String disabled::String ;
Parameter ::= value::String name::String ;
Caption ::= label::String ;
CheckBox ::= checked::Boolean ;
--------------------metamodels::bmmOmg.bgf--------------------
Influencer ::= Regulation ;
 Influencer ::= (categorizingInfluencerCategory::InfluencerCategory)+ (sourceInfluencingOrganization::InfluencingOrganization)+ (judgingAssessment::Assessment)+ (recognizingOrganizationUnit::OrganizationUnit)+ ;
BusinessRule ::= (effectingTactic::Tactic)+ (guidedBusinessProcess::BusinessProcess)+ (baseBusinessPolicy::BusinessPolicy)+ ;
FixedAsset ::= Offering ;
 FixedAsset ::= (usingOffering::Offering)+ (providedResource::Resource)+ ;
InfluencerCategory ::= (categorizedInfluencer::Influencer)+ ;
End ::= DesiredResult ;
 End ::= Vision ;
 End ::= (judgingAssessment::Assessment)+ (definingOrganizationUnit::OrganizationUnit)+ ;
Objective ::= (quantifiedGoal::Goal)+ ;
Tactic ::= (implementedStrategy::Strategy)+ (enforcedBusinessRule::BusinessRule)+ ;
DesiredResult ::= Goal ;
 DesiredResult ::= Objective ;
 DesiredResult ::= (moreSpecificDesiredResult::DesiredResult)+ (broaderDesiredResult::DesiredResult)+ (supportingDirective::Directive)+ (supportingCourseOfAction::CourseOfAction)+ ;
OrganizationUnit ::= (definedEnd::End)+ (managedBusinessProces::BusinessProcess)+ (managedLiability::Liability)+ (managedAsset::Asset)+ (determiningStrategy::Strategy)+ (recognizedInfluencer::Influencer)+ (internalInfluencingOrganization::InfluencingOrganization)+ (madeAssessment::Assessment)+ (establishedMeans::Means)+ ;
Goal ::= (quantifyingObjective::Objective)+ amplifiedVision::Vision ;
Strategy ::= (determinedOrganizationUnit::OrganizationUnit)+ (plannedMission::Mission)+ (implementingTactic::Tactic)+ ;
BusinessPolicy ::= (moreSpecificBusinessPolicy::BusinessPolicy)+ (broaderBusinessPolicy::BusinessPolicy)+ (derivedBusinessRule::BusinessRule)+ (governedBusinessProcess::BusinessProcess)+ ;
OrganizationCategory ::= (categorizedInfluencingOrganization::InfluencingOrganization)+ ;
Asset ::= Resource ;
 Asset ::= FixedAsset ;
 Asset ::= Offering ;
 Asset ::= (deployingCourseOfAction::CourseOfAction)+ (governingDirective::Directive)+ (responsibleOrganizationUnit::OrganizationUnit)+ (managingBusinessProcess::BusinessProcess)+ ;
Risk ::= (identifyingAssessment::Assessment)+ (motivatedDirective::Directive)+ ;
BusinessProcess ::= (deliveredOffering::Offering)+ (realizedCourseOfAction::CourseOfAction)+ (managedAsset::Asset)+ (governingBusinessPolicy::BusinessPolicy)+ guidingBusinessRule::BusinessRule (responsibleOrganizationUnit::OrganizationUnit)+ ;
Directive ::= BusinessPolicy ;
 Directive ::= BusinessRule ;
 Directive ::= (supportedDesiredResult::DesiredResult)+ (governedCourseOfAction::CourseOfAction)+ (derivedCourseOfAction::CourseOfAction)+ (governedAsset::Asset)+ (motivatingPotentialImpact::PotentialImpact)+ (directiveRegulation::Regulation)+ (motivatingAssessment::Assessment)+ ;
Resource ::= (providingFixedAsset::FixedAsset)+ (requiringOffering::Offering)+ (claimingLiability::Liability)+ ;
Means ::= Directive ;
 Means ::= CourseOfAction ;
 Means ::= Mission ;
 Means ::= (establishingOrganizationUnit::OrganizationUnit)+ (judgingAssessment::Assessment)+ ;
PotentialReward ::= (identifyingAssessment::Assessment)+ (motivatedDirective::Directive)+ ;
Liability ::= (claimedResource::Resource)+ (responsibleOrganizationUnit::OrganizationUnit)+ (dischargingCourseOfAction::CourseOfAction)+ ;
Mission ::= operativeVision::Vision (componentStrategy::Strategy)+ ;
Regulation ::= regulatingDirective::Directive ;
Vision ::= (amplifyingGoal::Goal)+ (deliveringMission::Mission)+ ;
CourseOfAction ::= Tactic ;
 CourseOfAction ::= Strategy ;
 CourseOfAction ::= (enabledCourseOfAction::CourseOfAction)+ (enablingCourseOfAction::CourseOfAction)+ (moreSpecficCourseOfAction::CourseOfAction)+ (broaderCourseOfAction::CourseOfAction)+ (supportedDesiredResult::DesiredResult)+ (definedOffering::Offering)+ (dischargedLiability::Liability)+ realizingBusinessProcess::BusinessProcess (governingDirective::Directive)+ (baseDirective::Directive)+ (deployedAsset::Asset)+ ;
Offering ::= (definingCourseOfAction::CourseOfAction)+ (usedAsset::FixedAsset)+ (requiredResource::Resource)+ (deliveringBusinessProcess::BusinessProcess)+ ;
InfluencingOrganization ::= (categorizingOrganizationCategory::OrganizationCategory)+ influencingOrganizationUnit::OrganizationUnit (providedInfluencer::Influencer)+ ;
PotentialImpact ::= PotentialReward ;
 PotentialImpact ::= Risk ;
 PotentialImpact ::= (identifyingAssessment::Assessment)+ (motivatedDirective::Directive)+ ;
Assessment ::= (motivatedDirective::Directive)+ (affectedEnd::End)+ (judgedInfluencer::Influencer)+ assessingOrganizationUnit::OrganizationUnit (affectedMeans::Means)+ (identifiedPotentialImpact::PotentialImpact)+ (usedAssessment::Assessment)+ (usingAssessment::Assessment)+ (categorizingAssessmentCategory::AssessmentCategory)+ ;
AssessmentCategory ::= (categorizedAssessment::Assessment)+ ;
--------------------metamodels::cmt.owl.bgf--------------------
AssociatedChair ::= memberOfConference::Conference ;
PaperFullVersion ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Bid ::= adjustedBy::Reviewer ;
Conference ::= hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
ProgramCommittee ::= hasProgramCommitteeMember::ProgramCommitteeMember ;
Review ::= Meta-Review ;
 Review ::= writtenBy::Reviewer ;
ConferenceMember ::= Reviewer ;
 ConferenceMember ::= ConferenceChair ;
 ConferenceMember ::= AssociatedChair ;
 ConferenceMember ::= Author ;
 ConferenceMember ::= ProgramCommitteeMember ;
 ConferenceMember ::= Chairman ;
 ConferenceMember ::= memberOfConference::Conference ;
Person ::= ConferenceMember ;
 Person ::= ExternalReviewer ;
 Person ::= User ;
 Person ::= ProgramCommitteeMember ;
 Person ::= Chairman ;
 Person ::= hasConflictOfInterest::Document email::String ;
Chairman ::= ConferenceChair ;
 Chairman ::= AssociatedChair ;
 Chairman ::= ProgramCommitteeChair ;
 Chairman ::= hasConflictOfInterest::Document email::String memberOfConference::Conference ;
ProgramCommitteeMember ::= ProgramCommitteeChair ;
 ProgramCommitteeMember ::= memberOfProgramCommittee::ProgramCommittee maxPapers::Integer addedBy::Administrator ;
ExternalReviewer ::= assignedByReviewer::Reviewer ;
PaperAbstract ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Administrator ::= finalizePaperAssignment::Conference runPaperAssignmentTools::Conference enableVirtualMeeting::Conference startReviewerBidding::Conference assignReviewer::Reviewer rejectPaper::Paper enterConferenceDetails::Conference printHardcopyMailingManifests::Conference setMaxPapers::ProgramCommitteeMember enterReviewCriteria::Conference acceptPaper::Paper addProgramCommitteeMember::ProgramCommitteeMember ;
AuthorNotReviewer ::= submitPaper::Paper writePaper::Paper ;
Meta-Reviewer ::= assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper writeReview::Review assignExternalReviewer::ExternalReviewer ;
Co-author ::= co-writePaper::Paper ;
ProgramCommitteeChair ::= endReview::Review ;
Paper ::= PaperAbstract ;
 Paper ::= PaperFullVersion ;
 Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Author ::= AuthorNotReviewer ;
 Author ::= Co-author ;
 Author ::= submitPaper::Paper writePaper::Paper ;
ConferenceChair ::= memberOfConference::Conference ;
Reviewer ::= Meta-Reviewer ;
 Reviewer ::= assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper writeReview::Review assignExternalReviewer::ExternalReviewer ;
Meta-Review ::= writtenBy::Reviewer ;
--------------------metamodels::confOf.owl.bgf--------------------
Email_Template ::= define::Event ;
Reviewing_results_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Conference_proceedings ::= has_an_ISBN::String has_a_publisher::Publisher has_a_volume::Integer ;
Science_Worker ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String hasConflictOfInterest::Document email::String ;
article ::= paper ;
 article ::= group_email ;
 article ::= notification_email ;
 article ::= abstract_of_paper ;
 article ::= review ;
 article ::= review_form ;
 article ::= summary_of_reviews ;
 article ::= goes_through::activity is_sent_to::human is_created_in::activity structure_created_by::human has_author::human gives_classification::classification ;
ConferenceMember ::= Reviewer ;
 ConferenceMember ::= ConferenceChair ;
 ConferenceMember ::= AssociatedChair ;
 ConferenceMember ::= Author ;
 ConferenceMember ::= ProgramCommitteeMember ;
 ConferenceMember ::= Chairman ;
 ConferenceMember ::= memberOfConference::Conference ;
Accepted_Paper ::= full_paper_size::Integer has_author::human ;
Submitted_contribution ::= Reviewed_contribution ;
 Submitted_contribution ::= has_a_review_expertise::Review_expertise ;
Track-workshop_chair ::= was_a_track-workshop_chair_of::Conference_part ;
summary_of_reviews ::= is_created_in::activity ;
Working_event ::= Tutorial ;
 Working_event ::= hasTopic::Topic hasAdministrativeEvent::Administrative_event ;
Co-author ::= co-writePaper::Paper ;
notification ::= has_result::article is_performed_by::human ;
User ::= Committee ;
 User ::= Administrator ;
 User ::= recieve::Document (create::Thing)+ submit::Document ;
Short_paper ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
ConferenceChair ::= memberOfConference::Conference ;
EEnum ::= (high::ε) | (medium::ε) | (low::ε) | (very high::ε) | (male::ε) | (female::ε) ;
Camera_Ready_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Bid ::= adjustedBy::Reviewer ;
group_email ::= goes_through::activity is_sent_to::human is_created_in::activity structure_created_by::human has_author::human gives_classification::classification ;
Publisher ::= issues::Conference_proceedings ;
Full_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
upper_tier_reviewing_process ::= is_performed_by::human ;
Manual_Paper_Assignment ::= (manually_assign_paper::Program_Committee_member)+ ;
Registration ::= (has_result::Thing)+ sent_by::Person ;
Chair_PC ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String hasConflictOfInterest::Document email::String ;
Meta-Reviewer ::= invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper writeReview::Review assignExternalReviewer::ExternalReviewer ;
ProgramCommitteeChair ::= endReview::Review ;
Call_for_participation ::= has_authors::Person has_a_date_of_issue::date ;
Active_conference_participant ::= gives_presentations::Presentation ;
Short_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Scholar ::= studyAt::University ;
Assistant ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String hasConflictOfInterest::Document email::String ;
Organizing_committee ::= was_an_organizing_committee_of::Conference_volume ;
Conference_document ::= Conference_contribution ;
 Conference_document ::= Information_for_participants ;
 Conference_document ::= Call_for_paper ;
 Conference_document ::= Conference_announcement ;
 Conference_document ::= Call_for_participation ;
 Conference_document ::= Conference_www ;
 Conference_document ::= Review ;
 Conference_document ::= has_authors::Person has_a_date_of_issue::date ;
Registration_of_participants_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Committee_member ::= Co-chair ;
 Committee_member ::= Chair ;
 Committee_member ::= was_a_member_of::Committee ;
Member ::= earlyRegistration::Boolean ;
PaperAbstract ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Administrator ::= approve::Event assign::Role finalizePaperAssignment::Conference runPaperAssignmentTools::Conference enableVirtualMeeting::Conference startReviewerBidding::Conference assignReviewer::Reviewer rejectPaper::Paper enterConferenceDetails::Conference printHardcopyMailingManifests::Conference setMaxPapers::ProgramCommitteeMember enterReviewCriteria::Conference acceptPaper::Paper addProgramCommitteeMember::ProgramCommitteeMember ;
Author ::= AuthorNotReviewer ;
 Author ::= Co-author ;
 Author ::= Corresponding_Author ;
 Author ::= writes::Contribution submitPaper::Paper writePaper::Paper ;
Author_Role ::= assigned_by::Administrator ;
bidding_of_reviewer ::= is_performed_by::human ;
Workshop ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Admin_Role ::= assigned_by::Administrator ;
Chair ::= was_a_committee_chair_of::Committee ;
abstract_of_paper ::= goes_through::activity is_sent_to::human is_created_in::activity structure_created_by::human has_author::human gives_classification::classification ;
Approval_Email ::= confirm::Event ;
conference_setup ::= sets_member::human is_made_by::human includes_topic::topic sets_date::date sets_URL::URL ;
Template ::= recieved_by::User used_by::Person submited__by::User ;
Member_PC ::= expertOn::Topic reviewes::Contribution ;
Role ::= Admin_Role ;
 Role ::= Author_Role ;
 Role ::= Committe_Role ;
 Role ::= Head_Role ;
 Role ::= Reviewer_Role ;
 Role ::= assigned_by::Administrator ;
Chairman ::= ConferenceChair ;
 Chairman ::= AssociatedChair ;
 Chairman ::= ProgramCommitteeChair ;
 Chairman ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String hasConflictOfInterest::Document email::String memberOfConference::Conference ;
Contact_Person ::= is_author_of::article performs_activity::activity is_employed_in::institute has_topic_of_interest::topic supervises::activity e-mail::String last_name::String first_name::String ;
paper ::= Accepted_Paper ;
 paper ::= Rejected_Paper ;
 paper ::= Undecided_Paper ;
 paper ::= full_paper_size::Integer has_author::human ;
Rejected_Paper ::= full_paper_size::Integer has_author::human ;
Research_Topic ::= define::Event ;
Event_Approval ::= (has_result::Thing)+ sent_by::Person ;
Invited_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Reviewing_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Tutorial ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair hasTopic::Topic hasAdministrativeEvent::Administrative_event ;
Conference_volume ::= has_parts::Conference_part has_workshops::Workshop has_tracks::Track has_tutorials::Tutorial has_a_commtitee::Committee has_a_steering_committee::Steering_committee has_an_organizing_committee::Organizing_committee has_important_dates::Important_dates has_contributions::Conference_contribution has_a_location::String has_a_program_committee::Program_committee ;
Regular ::= earlyRegistration::Boolean ;
submission_process ::= is_performed_by::human ;
Event ::= Symposium ;
 Event ::= Social_event ;
 Event ::= Administrative_event ;
 Event ::= Working_event ;
 Event ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String ;
ProgramCommittee ::= hasProgramCommitteeMember::ProgramCommitteeMember ;
Review ::= Meta-Review ;
 Review ::= writtenBy::Reviewer reviews::Reviewed_contribution ;
Head_Role ::= assigned_by::Administrator ;
Person ::= ConferenceMember ;
 Person ::= ExternalReviewer ;
 Person ::= User ;
 Person ::= Conference_participant ;
 Person ::= Conference_contributor ;
 Person ::= Committee_member ;
 Person ::= Conference_applicant ;
 Person ::= Track-workshop_chair ;
 Person ::= Scholar ;
 Person ::= Participant ;
 Person ::= Member_PC ;
 Person ::= Chair_PC ;
 Person ::= Science_Worker ;
 Person ::= Assistant ;
 Person ::= Volunteer ;
 Person ::= ProgramCommitteeMember ;
 Person ::= Chairman ;
 Person ::= Administrator ;
 Person ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String hasConflictOfInterest::Document email::String ;
ProgramCommitteeMember ::= ProgramCommitteeChair ;
 ProgramCommitteeMember ::= memberOfProgramCommittee::ProgramCommittee maxPapers::Integer addedBy::Administrator ;
Reviewer_Role ::= assigned_by::Administrator ;
Committe_Role ::= assigned_by::Administrator ;
Poster ::= is_submitted_at::Conference_volume ;
 Poster ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
Paper ::= PaperAbstract ;
 Paper ::= PaperFullVersion ;
 Paper ::= Abstract ;
 Paper ::= Invited_Paper ;
 Paper ::= Short_Paper ;
 Paper ::= Full_Paper ;
 Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Submission ::= recieved_by::User used_by::Person submited__by::User ;
Volunteer ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String hasConflictOfInterest::Document email::String ;
Conference_announcement ::= has_authors::Person has_a_date_of_issue::date ;
Administrative_event ::= Reviewing_results_event ;
 Administrative_event ::= Reviewing_event ;
 Administrative_event ::= Registration_of_participants_event ;
 Administrative_event ::= Submission_event ;
 Administrative_event ::= Camera_Ready_event ;
 Administrative_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Program_Committee_Chair ::= is_author_of::article performs_activity::activity is_employed_in::institute has_topic_of_interest::topic supervises::activity e-mail::String last_name::String first_name::String ;
Program_committee ::= was_a_program_committee_of::Conference_volume ;
paper_assignment ::= Manual_Paper_Assignment ;
 paper_assignment ::= Automatic_Paper_Assignment ;
 paper_assignment ::= assign_paper::Program_Committee_member is_performed_by::human ;
Committee ::= Program_committee ;
 Committee ::= Organizing_committee ;
 Committee ::= Steering_committee ;
 Committee ::= has_members::Committee_member was_a_committee_of::Conference_volume has_a_committee_co-chair::Co-chair has_a_committee_chair::Chair ;
review ::= gives_classification::classification is_created_in::activity ;
Event_Setup ::= Paper_Typologies ;
 Event_Setup ::= Review_Form ;
 Event_Setup ::= Submission_Template ;
 Event_Setup ::= Event_Tracks ;
 Event_Setup ::= Research_Topic ;
 Event_Setup ::= Email_Template ;
 Event_Setup ::= define::Event ;
Corresponding_Author ::= writes::Contribution submitPaper::Paper writePaper::Paper ;
Automatic_Paper_Assignment ::= (automatically_assign_paper::Program_Committee_member)+ ;
Symposium ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String ;
Undecided_Paper ::= full_paper_size::Integer has_author::human ;
Steering_committee ::= was_a_steering_committee_of::Conference_volume ;
AuthorNotReviewer ::= writes::Contribution submitPaper::Paper writePaper::Paper ;
review_form ::= is_created_in::activity ;
Senior_Program_Committee_member ::= supervises::activity ;
Co-chair ::= was_a_committe_co-chair_of::Committee ;
Abstract ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
 Abstract ::= (is_the_1th_part_of::Thing)+ ;
AssociatedChair ::= memberOfConference::Conference ;
PaperFullVersion ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Conference ::= Conference_volume ;
 Conference ::= hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
Document ::= Email ;
 Document ::= Submission ;
 Document ::= Template ;
 Document ::= Paper ;
 Document ::= Review ;
 Document ::= recieved_by::User used_by::Person submited__by::User ;
Presentation ::= Invited_talk ;
 Presentation ::= is_given_by::Active_conference_participant ;
Reviewed_contribution ::= Accepted_contribution ;
 Reviewed_contribution ::= Rejected_contribution ;
 Reviewed_contribution ::= has_a_review::Review ;
Conference_contribution ::= Poster ;
 Conference_contribution ::= Written_contribution ;
 Conference_contribution ::= Presentation ;
 Conference_contribution ::= is_submitted_at::Conference_volume ;
Contribution ::= Poster ;
 Contribution ::= Short_paper ;
 Contribution ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
Activity ::= Event_Creation ;
 Activity ::= Request ;
 Activity ::= Event_Approval ;
 Activity ::= Registration ;
 Activity ::= (has_result::Thing)+ sent_by::Person ;
human ::= Program_Committee_member ;
 human ::= Contact_Person ;
 human ::= Program_Committee_Chair ;
 human ::= is_author_of::article performs_activity::activity is_employed_in::institute has_topic_of_interest::topic supervises::activity e-mail::String last_name::String first_name::String ;
Track ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Paper_Typologies ::= define::Event ;
Information_for_participants ::= has_authors::Person has_a_date_of_issue::date ;
Reviewer ::= Meta-Reviewer ;
 Reviewer ::= invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper writeReview::Review assignExternalReviewer::ExternalReviewer ;
Event_Creation ::= (has_result::Thing)+ sent_by::Person ;
Meta-Review ::= writtenBy::Reviewer reviews::Reviewed_contribution ;
conference ::= is_in_phase::phase_of_conference ;
Student ::= earlyRegistration::Boolean ;
managing_of_conference_process ::= is_followed_by::activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human ;
Conference_part ::= Track ;
 Conference_part ::= Workshop ;
 Conference_part ::= Tutorial ;
 Conference_part ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Call_for_paper ::= has_authors::Person has_a_date_of_issue::date ;
Conference_www ::= has_a_URL::String ;
Participant ::= Member ;
 Participant ::= Student ;
 Participant ::= Regular ;
 Participant ::= earlyRegistration::Boolean ;
Rejected_contribution ::= has_a_review::Review ;
Invited_talk ::= is_given_by::Active_conference_participant ;
ExternalReviewer ::= assignedByReviewer::Reviewer ;
activity ::= paper_assignment ;
 activity ::= bidding_of_reviewer ;
 activity ::= managing_of_conference_process ;
 activity ::= reviewing_proces ;
 activity ::= notification ;
 activity ::= submission_process ;
 activity ::= is_followed_by::activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human ;
Topic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
Account ::= registred_by::Person ;
Submission_Template ::= define::Event ;
Event_Tracks ::= define::Event ;
Review_expertise ::= has_a_submitted_contribution::Submitted_contribution has_an_expertise::EEnum ;
Event_URL ::= concerned::Event ;
Important_dates ::= is_an_abstract_submission_date::date is_a_full_paper_submission_date::date is_an_ending_date::date is_a_date_of_acceptance_announcement::date is_a_date_of_camera_ready_paper_submission::date is_a_starting_date::date belong_to_a_conference_volume::Conference_volume ;
Submission_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Review_preference ::= (has_a_topic_or_a_submission_contribution::Thing)+ has_a_degree::Integer ;
--------------------metamodels::confious.owl.bgf--------------------
Tutorial ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Conference_volume ::= has_parts::Conference_part has_workshops::Workshop has_tracks::Track has_tutorials::Tutorial has_a_commtitee::Committee has_a_steering_committee::Steering_committee has_an_organizing_committee::Organizing_committee has_important_dates::Important_dates has_contributions::Conference_contribution has_a_location::String has_a_program_committee::Program_committee ;
Email_Template ::= define::Event ;
submission_process ::= is_performed_by::human ;
Conference_proceedings ::= has_an_ISBN::String has_a_publisher::Publisher has_a_volume::Integer ;
Event ::= Symposium ;
 Event ::= Conference ;
 Event ::= Workshop ;
 Event ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator ;
ProgramCommittee ::= hasProgramCommitteeMember::ProgramCommitteeMember ;
Review ::= Meta-Review ;
 Review ::= reviews::Reviewed_contribution gives_classification::classification is_created_in::activity writtenBy::Reviewer ;
article ::= group_email ;
 article ::= notification_email ;
 article ::= abstract_of_paper ;
 article ::= review_form ;
 article ::= summary_of_reviews ;
 article ::= goes_through::activity is_sent_to::human is_created_in::activity structure_created_by::human has_author::human gives_classification::classification ;
ConferenceMember ::= Reviewer ;
 ConferenceMember ::= ConferenceChair ;
 ConferenceMember ::= AssociatedChair ;
 ConferenceMember ::= Author ;
 ConferenceMember ::= ProgramCommitteeMember ;
 ConferenceMember ::= Chairman ;
 ConferenceMember ::= memberOfConference::Conference ;
Head_Role ::= assigned_by::Administrator ;
Person ::= ConferenceMember ;
 Person ::= ExternalReviewer ;
 Person ::= User ;
 Person ::= Conference_participant ;
 Person ::= Conference_contributor ;
 Person ::= Committee_member ;
 Person ::= Conference_applicant ;
 Person ::= Track-workshop_chair ;
 Person ::= ProgramCommitteeMember ;
 Person ::= Chairman ;
 Person ::= Administrator ;
 Person ::= hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
Accepted_Paper ::= full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Submitted_contribution ::= Reviewed_contribution ;
 Submitted_contribution ::= has_a_review_expertise::Review_expertise ;
ProgramCommitteeMember ::= ProgramCommitteeChair ;
 ProgramCommitteeMember ::= memberOfProgramCommittee::ProgramCommittee maxPapers::Integer addedBy::Administrator ;
Reviewer_Role ::= assigned_by::Administrator ;
Track-workshop_chair ::= was_a_track-workshop_chair_of::Conference_part ;
Committe_Role ::= assigned_by::Administrator ;
Poster ::= is_submitted_at::Conference_volume ;
summary_of_reviews ::= is_created_in::activity ;
Submission ::= recieved_by::User used_by::Person submited__by::User ;
Paper ::= PaperAbstract ;
 Paper ::= PaperFullVersion ;
 Paper ::= Abstract ;
 Paper ::= Invited_Paper ;
 Paper ::= Short_Paper ;
 Paper ::= Full_Paper ;
 Paper ::= Accepted_Paper ;
 Paper ::= Rejected_Paper ;
 Paper ::= Undecided_Paper ;
 Paper ::= full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Co-author ::= co-writePaper::Paper ;
notification ::= has_result::article is_performed_by::human ;
User ::= Committee ;
 User ::= Administrator ;
 User ::= Author ;
 User ::= recieve::Document (create::Thing)+ submit::Document ;
Conference_announcement ::= has_authors::Person has_a_date_of_issue::date ;
ConferenceChair ::= memberOfConference::Conference ;
Program_Committee_Chair ::= is_author_of::article performs_activity::activity is_employed_in::institute has_topic_of_interest::topic supervises::activity e-mail::String last_name::String first_name::String ;
EEnum ::= (high::ε) | (medium::ε) | (low::ε) | (very high::ε) | (male::ε) | (female::ε) ;
Program_committee ::= was_a_program_committee_of::Conference_volume ;
paper_assignment ::= Manual_Paper_Assignment ;
 paper_assignment ::= Automatic_Paper_Assignment ;
 paper_assignment ::= assign_paper::Program_Committee_member is_performed_by::human ;
Committee ::= Program_committee ;
 Committee ::= Organizing_committee ;
 Committee ::= Steering_committee ;
 Committee ::= has_members::Committee_member was_a_committee_of::Conference_volume has_a_committee_co-chair::Co-chair has_a_committee_chair::Chair ;
Bid ::= adjustedBy::Reviewer ;
group_email ::= goes_through::activity is_sent_to::human is_created_in::activity structure_created_by::human has_author::human gives_classification::classification ;
Publisher ::= issues::Conference_proceedings ;
Full_Paper ::= full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
upper_tier_reviewing_process ::= is_performed_by::human ;
Manual_Paper_Assignment ::= (manually_assign_paper::Program_Committee_member)+ ;
Registration ::= (has_result::Thing)+ sent_by::Person ;
Event_Setup ::= Paper_Typologies ;
 Event_Setup ::= Review_Form ;
 Event_Setup ::= Submission_Template ;
 Event_Setup ::= Event_Tracks ;
 Event_Setup ::= Research_Topic ;
 Event_Setup ::= Email_Template ;
 Event_Setup ::= define::Event ;
Corresponding_Author ::= submitPaper::Paper writePaper::Paper ;
Automatic_Paper_Assignment ::= (automatically_assign_paper::Program_Committee_member)+ ;
Symposium ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator ;
Undecided_Paper ::= full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Steering_committee ::= was_a_steering_committee_of::Conference_volume ;
AuthorNotReviewer ::= submitPaper::Paper writePaper::Paper ;
Meta-Reviewer ::= invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper writeReview::Review assignExternalReviewer::ExternalReviewer ;
ProgramCommitteeChair ::= endReview::Review ;
review_form ::= is_created_in::activity ;
Call_for_participation ::= has_authors::Person has_a_date_of_issue::date ;
Active_conference_participant ::= gives_presentations::Presentation ;
Short_Paper ::= full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Senior_Program_Committee_member ::= supervises::activity ;
Co-chair ::= was_a_committe_co-chair_of::Committee ;
Abstract ::= full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
 Abstract ::= (is_the_1th_part_of::Thing)+ ;
AssociatedChair ::= memberOfConference::Conference ;
Organizing_committee ::= was_an_organizing_committee_of::Conference_volume ;
Conference_document ::= Conference_contribution ;
 Conference_document ::= Information_for_participants ;
 Conference_document ::= Call_for_paper ;
 Conference_document ::= Conference_announcement ;
 Conference_document ::= Call_for_participation ;
 Conference_document ::= Conference_www ;
 Conference_document ::= has_authors::Person has_a_date_of_issue::date ;
PaperFullVersion ::= full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Committee_member ::= Co-chair ;
 Committee_member ::= Chair ;
 Committee_member ::= was_a_member_of::Committee ;
Conference ::= Conference_volume ;
 Conference ::= is_in_phase::phase_of_conference hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
Document ::= Email ;
 Document ::= Submission ;
 Document ::= Template ;
 Document ::= Review ;
 Document ::= Paper ;
 Document ::= recieved_by::User used_by::Person submited__by::User ;
Presentation ::= Invited_talk ;
 Presentation ::= is_given_by::Active_conference_participant ;
Reviewed_contribution ::= Accepted_contribution ;
 Reviewed_contribution ::= Rejected_contribution ;
 Reviewed_contribution ::= has_a_review::Review ;
Conference_contribution ::= Poster ;
 Conference_contribution ::= Written_contribution ;
 Conference_contribution ::= Presentation ;
 Conference_contribution ::= is_submitted_at::Conference_volume ;
Activity ::= Event_Creation ;
 Activity ::= Request ;
 Activity ::= Event_Approval ;
 Activity ::= Registration ;
 Activity ::= (has_result::Thing)+ sent_by::Person ;
PaperAbstract ::= full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
human ::= Program_Committee_member ;
 human ::= Contact_Person ;
 human ::= Program_Committee_Chair ;
 human ::= is_author_of::article performs_activity::activity is_employed_in::institute has_topic_of_interest::topic supervises::activity e-mail::String last_name::String first_name::String ;
Administrator ::= approve::Event assign::Role finalizePaperAssignment::Conference runPaperAssignmentTools::Conference enableVirtualMeeting::Conference startReviewerBidding::Conference assignReviewer::Reviewer rejectPaper::Paper enterConferenceDetails::Conference printHardcopyMailingManifests::Conference setMaxPapers::ProgramCommitteeMember enterReviewCriteria::Conference acceptPaper::Paper addProgramCommitteeMember::ProgramCommitteeMember ;
Track ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Author ::= AuthorNotReviewer ;
 Author ::= Co-author ;
 Author ::= Corresponding_Author ;
 Author ::= submitPaper::Paper writePaper::Paper ;
Author_Role ::= assigned_by::Administrator ;
Paper_Typologies ::= define::Event ;
bidding_of_reviewer ::= is_performed_by::human ;
Information_for_participants ::= has_authors::Person has_a_date_of_issue::date ;
Workshop ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator ;
Admin_Role ::= assigned_by::Administrator ;
Chair ::= was_a_committee_chair_of::Committee ;
Reviewer ::= Meta-Reviewer ;
 Reviewer ::= invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper writeReview::Review assignExternalReviewer::ExternalReviewer ;
Event_Creation ::= (has_result::Thing)+ sent_by::Person ;
abstract_of_paper ::= goes_through::activity is_sent_to::human is_created_in::activity structure_created_by::human has_author::human gives_classification::classification ;
Approval_Email ::= confirm::Event ;
Meta-Review ::= reviews::Reviewed_contribution gives_classification::classification is_created_in::activity writtenBy::Reviewer ;
conference_setup ::= sets_member::human is_made_by::human includes_topic::topic sets_date::date sets_URL::URL ;
Template ::= recieved_by::User used_by::Person submited__by::User ;
managing_of_conference_process ::= is_followed_by::activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human ;
Conference_part ::= Track ;
 Conference_part ::= Tutorial ;
 Conference_part ::= Workshop ;
 Conference_part ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Role ::= Admin_Role ;
 Role ::= Author_Role ;
 Role ::= Committe_Role ;
 Role ::= Head_Role ;
 Role ::= Reviewer_Role ;
 Role ::= assigned_by::Administrator ;
Call_for_paper ::= has_authors::Person has_a_date_of_issue::date ;
Chairman ::= ConferenceChair ;
 Chairman ::= AssociatedChair ;
 Chairman ::= ProgramCommitteeChair ;
 Chairman ::= hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String memberOfConference::Conference ;
Contact_Person ::= is_author_of::article performs_activity::activity is_employed_in::institute has_topic_of_interest::topic supervises::activity e-mail::String last_name::String first_name::String ;
Conference_www ::= has_a_URL::String ;
Rejected_contribution ::= has_a_review::Review ;
Invited_talk ::= is_given_by::Active_conference_participant ;
ExternalReviewer ::= assignedByReviewer::Reviewer ;
activity ::= paper_assignment ;
 activity ::= bidding_of_reviewer ;
 activity ::= managing_of_conference_process ;
 activity ::= reviewing_proces ;
 activity ::= notification ;
 activity ::= submission_process ;
 activity ::= is_followed_by::activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human ;
Topic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
Account ::= registred_by::Person ;
Submission_Template ::= define::Event ;
Event_Tracks ::= define::Event ;
Rejected_Paper ::= full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Research_Topic ::= define::Event ;
Review_expertise ::= has_a_submitted_contribution::Submitted_contribution has_an_expertise::EEnum ;
Event_URL ::= concerned::Event ;
Important_dates ::= is_an_abstract_submission_date::date is_a_full_paper_submission_date::date is_an_ending_date::date is_a_date_of_acceptance_announcement::date is_a_date_of_camera_ready_paper_submission::date is_a_starting_date::date belong_to_a_conference_volume::Conference_volume ;
Event_Approval ::= (has_result::Thing)+ sent_by::Person ;
Invited_Paper ::= full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Review_preference ::= (has_a_topic_or_a_submission_contribution::Thing)+ has_a_degree::Integer ;
--------------------metamodels::crs_dr.owl.bgf--------------------
Email_Template ::= define::Event ;
Reviewing_results_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Conference_proceedings ::= has_an_ISBN::String has_a_publisher::Publisher has_a_volume::Integer ;
Science_Worker ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String hasConflictOfInterest::Document email::String ;
article ::= paper ;
 article ::= group_email ;
 article ::= notification_email ;
 article ::= abstract_of_paper ;
 article ::= review_form ;
 article ::= summary_of_reviews ;
 article ::= review ;
 article ::= article_written_by::author has_reviewer::reviewer has_abstract::abstract goes_through::activity is_sent_to::human is_created_in::activity structure_created_by::human has_author::human gives_classification::classification ;
ConferenceMember ::= Reviewer ;
 ConferenceMember ::= ConferenceChair ;
 ConferenceMember ::= AssociatedChair ;
 ConferenceMember ::= Author ;
 ConferenceMember ::= ProgramCommitteeMember ;
 ConferenceMember ::= Chairman ;
 ConferenceMember ::= memberOfConference::Conference ;
Accepted_Paper ::= full_paper_size::Integer has_author::human ;
Submitted_contribution ::= Reviewed_contribution ;
 Submitted_contribution ::= has_a_review_expertise::Review_expertise ;
pc_meeting ::= has_startdate::dateTime has_enddate::dateTime ;
Track-workshop_chair ::= was_a_track-workshop_chair_of::Conference_part ;
Co-author ::= co-writePaper::Paper ;
summary_of_reviews ::= is_created_in::activity ;
Working_event ::= Workshop ;
 Working_event ::= Tutorial ;
 Working_event ::= hasTopic::Topic hasAdministrativeEvent::Administrative_event ;
notification ::= has_result::article is_performed_by::human ;
User ::= Committee ;
 User ::= Administrator ;
 User ::= recieve::Document (create::Thing)+ submit::Document ;
Short_paper ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
ConferenceChair ::= memberOfConference::Conference ;
EEnum ::= (high::ε) | (medium::ε) | (low::ε) | (very high::ε) | (male::ε) | (female::ε) ;
Camera_Ready_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Bid ::= adjustedBy::Reviewer ;
group_email ::= article_written_by::author has_reviewer::reviewer has_abstract::abstract goes_through::activity is_sent_to::human is_created_in::activity structure_created_by::human has_author::human gives_classification::classification ;
Publisher ::= issues::Conference_proceedings ;
Full_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
upper_tier_reviewing_process ::= is_performed_by::human ;
Manual_Paper_Assignment ::= (manually_assign_paper::Program_Committee_member)+ ;
Registration ::= (has_result::Thing)+ sent_by::Person ;
Chair_PC ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String hasConflictOfInterest::Document email::String ;
Meta-Reviewer ::= invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper writeReview::Review assignExternalReviewer::ExternalReviewer ;
ProgramCommitteeChair ::= endReview::Review ;
Call_for_participation ::= has_authors::Person has_a_date_of_issue::date ;
Active_conference_participant ::= gives_presentations::Presentation ;
Short_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Scholar ::= studyAt::University ;
chair ::= assigns_reviewers_to_article::reviewer creates_program::program ;
Assistant ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String hasConflictOfInterest::Document email::String ;
Organizing_committee ::= was_an_organizing_committee_of::Conference_volume ;
Conference_document ::= Conference_contribution ;
 Conference_document ::= Information_for_participants ;
 Conference_document ::= Call_for_paper ;
 Conference_document ::= Conference_announcement ;
 Conference_document ::= Call_for_participation ;
 Conference_document ::= Conference_www ;
 Conference_document ::= Review ;
 Conference_document ::= has_authors::Person has_a_date_of_issue::date ;
Registration_of_participants_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Committee_member ::= Co-chair ;
 Committee_member ::= Chair ;
 Committee_member ::= was_a_member_of::Committee ;
Member ::= earlyRegistration::Boolean ;
PaperAbstract ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Administrator ::= approve::Event assign::Role finalizePaperAssignment::Conference runPaperAssignmentTools::Conference enableVirtualMeeting::Conference startReviewerBidding::Conference assignReviewer::Reviewer rejectPaper::Paper enterConferenceDetails::Conference printHardcopyMailingManifests::Conference setMaxPapers::ProgramCommitteeMember enterReviewCriteria::Conference acceptPaper::Paper addProgramCommitteeMember::ProgramCommitteeMember ;
Author ::= AuthorNotReviewer ;
 Author ::= Co-author ;
 Author ::= Corresponding_Author ;
 Author ::= writes::Contribution submitPaper::Paper writePaper::Paper ;
Author_Role ::= assigned_by::Administrator ;
bidding_of_reviewer ::= is_performed_by::human ;
Workshop ::= hasTopic::Topic hasAdministrativeEvent::Administrative_event ;
Admin_Role ::= assigned_by::Administrator ;
Chair ::= was_a_committee_chair_of::Committee ;
abstract_of_paper ::= article_written_by::author has_reviewer::reviewer has_abstract::abstract goes_through::activity is_sent_to::human is_created_in::activity structure_created_by::human has_author::human gives_classification::classification ;
Approval_Email ::= confirm::Event ;
event ::= pc_meeting ;
 event ::= session ;
 event ::= conference ;
 event ::= has_startdate::dateTime has_enddate::dateTime ;
conference_setup ::= sets_member::human is_made_by::human includes_topic::topic sets_date::date sets_URL::URL ;
Template ::= recieved_by::User used_by::Person submited__by::User ;
Member_PC ::= expertOn::Topic reviewes::Contribution ;
session ::= has_startdate::dateTime has_enddate::dateTime ;
Role ::= Admin_Role ;
 Role ::= Author_Role ;
 Role ::= Committe_Role ;
 Role ::= Head_Role ;
 Role ::= Reviewer_Role ;
 Role ::= assigned_by::Administrator ;
Chairman ::= ConferenceChair ;
 Chairman ::= AssociatedChair ;
 Chairman ::= ProgramCommitteeChair ;
 Chairman ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String hasConflictOfInterest::Document email::String memberOfConference::Conference ;
Contact_Person ::= is_author_of::article performs_activity::activity is_employed_in::institute has_topic_of_interest::topic supervises::activity e-mail::String last_name::String first_name::String ;
paper ::= Accepted_Paper ;
 paper ::= Rejected_Paper ;
 paper ::= Undecided_Paper ;
 paper ::= full_paper_size::Integer has_author::human ;
author ::= writes_article::article assigns_article_to_conference::article ;
Rejected_Paper ::= full_paper_size::Integer has_author::human ;
Research_Topic ::= define::Event ;
Event_Approval ::= (has_result::Thing)+ sent_by::Person ;
Invited_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Reviewing_event ::= follows::Administrative_event parallel_with::Administrative_event ;
program ::= program_created_by::chair has_session::session ;
Tutorial ::= hasTopic::Topic hasAdministrativeEvent::Administrative_event has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Conference_volume ::= has_parts::Conference_part has_workshops::Workshop has_tracks::Track has_tutorials::Tutorial has_a_commtitee::Committee has_a_steering_committee::Steering_committee has_an_organizing_committee::Organizing_committee has_important_dates::Important_dates has_contributions::Conference_contribution has_a_location::String has_a_program_committee::Program_committee ;
submission_process ::= is_performed_by::human ;
Regular ::= earlyRegistration::Boolean ;
Event ::= Symposium ;
 Event ::= Social_event ;
 Event ::= Administrative_event ;
 Event ::= Working_event ;
 Event ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String ;
ProgramCommittee ::= hasProgramCommitteeMember::ProgramCommitteeMember ;
Review ::= Meta-Review ;
 Review ::= reviews::Reviewed_contribution writtenBy::Reviewer ;
Head_Role ::= assigned_by::Administrator ;
Person ::= ConferenceMember ;
 Person ::= ExternalReviewer ;
 Person ::= User ;
 Person ::= Conference_participant ;
 Person ::= Conference_contributor ;
 Person ::= Committee_member ;
 Person ::= Conference_applicant ;
 Person ::= Track-workshop_chair ;
 Person ::= Scholar ;
 Person ::= Participant ;
 Person ::= Member_PC ;
 Person ::= Chair_PC ;
 Person ::= Science_Worker ;
 Person ::= Assistant ;
 Person ::= Volunteer ;
 Person ::= ProgramCommitteeMember ;
 Person ::= Chairman ;
 Person ::= Administrator ;
 Person ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String hasConflictOfInterest::Document email::String ;
ProgramCommitteeMember ::= ProgramCommitteeChair ;
 ProgramCommitteeMember ::= memberOfProgramCommittee::ProgramCommittee maxPapers::Integer addedBy::Administrator ;
Reviewer_Role ::= assigned_by::Administrator ;
Committe_Role ::= assigned_by::Administrator ;
Poster ::= is_submitted_at::Conference_volume ;
 Poster ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
Submission ::= recieved_by::User used_by::Person submited__by::User ;
Paper ::= PaperAbstract ;
 Paper ::= PaperFullVersion ;
 Paper ::= Abstract ;
 Paper ::= Invited_Paper ;
 Paper ::= Short_Paper ;
 Paper ::= Full_Paper ;
 Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Volunteer ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String hasConflictOfInterest::Document email::String ;
Conference_announcement ::= has_authors::Person has_a_date_of_issue::date ;
Administrative_event ::= Reviewing_results_event ;
 Administrative_event ::= Reviewing_event ;
 Administrative_event ::= Registration_of_participants_event ;
 Administrative_event ::= Submission_event ;
 Administrative_event ::= Camera_Ready_event ;
 Administrative_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Program_Committee_Chair ::= is_author_of::article performs_activity::activity is_employed_in::institute has_topic_of_interest::topic supervises::activity e-mail::String last_name::String first_name::String ;
Program_committee ::= was_a_program_committee_of::Conference_volume ;
paper_assignment ::= Manual_Paper_Assignment ;
 paper_assignment ::= Automatic_Paper_Assignment ;
 paper_assignment ::= assign_paper::Program_Committee_member is_performed_by::human ;
Committee ::= Program_committee ;
 Committee ::= Organizing_committee ;
 Committee ::= Steering_committee ;
 Committee ::= has_members::Committee_member was_a_committee_of::Conference_volume has_a_committee_co-chair::Co-chair has_a_committee_chair::Chair ;
review ::= gives_classification::classification is_created_in::activity review_written_by::reviewer ;
Event_Setup ::= Paper_Typologies ;
 Event_Setup ::= Review_Form ;
 Event_Setup ::= Submission_Template ;
 Event_Setup ::= Event_Tracks ;
 Event_Setup ::= Research_Topic ;
 Event_Setup ::= Email_Template ;
 Event_Setup ::= define::Event ;
Corresponding_Author ::= writes::Contribution submitPaper::Paper writePaper::Paper ;
Automatic_Paper_Assignment ::= (automatically_assign_paper::Program_Committee_member)+ ;
Symposium ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String ;
Undecided_Paper ::= full_paper_size::Integer has_author::human ;
Steering_committee ::= was_a_steering_committee_of::Conference_volume ;
AuthorNotReviewer ::= writes::Contribution submitPaper::Paper writePaper::Paper ;
review_form ::= is_created_in::activity ;
Senior_Program_Committee_member ::= supervises::activity ;
Co-chair ::= was_a_committe_co-chair_of::Committee ;
Abstract ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
 Abstract ::= (is_the_1th_part_of::Thing)+ ;
AssociatedChair ::= memberOfConference::Conference ;
PaperFullVersion ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Conference ::= Conference_volume ;
 Conference ::= hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
Document ::= Email ;
 Document ::= Submission ;
 Document ::= Template ;
 Document ::= Review ;
 Document ::= recieved_by::User used_by::Person submited__by::User ;
Presentation ::= Invited_talk ;
 Presentation ::= is_given_by::Active_conference_participant ;
Reviewed_contribution ::= Accepted_contribution ;
 Reviewed_contribution ::= Rejected_contribution ;
 Reviewed_contribution ::= has_a_review::Review ;
participant ::= submits_to_conference::conference ;
Conference_contribution ::= Poster ;
 Conference_contribution ::= Written_contribution ;
 Conference_contribution ::= Presentation ;
 Conference_contribution ::= is_submitted_at::Conference_volume ;
Contribution ::= Poster ;
 Contribution ::= Short_paper ;
 Contribution ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
Activity ::= Event_Creation ;
 Activity ::= Request ;
 Activity ::= Event_Approval ;
 Activity ::= Registration ;
 Activity ::= (has_result::Thing)+ sent_by::Person ;
human ::= Program_Committee_member ;
 human ::= Contact_Person ;
 human ::= Program_Committee_Chair ;
 human ::= is_author_of::article performs_activity::activity is_employed_in::institute has_topic_of_interest::topic supervises::activity e-mail::String last_name::String first_name::String ;
Track ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Paper_Typologies ::= define::Event ;
Information_for_participants ::= has_authors::Person has_a_date_of_issue::date ;
Reviewer ::= Meta-Reviewer ;
 Reviewer ::= invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper writeReview::Review assignExternalReviewer::ExternalReviewer ;
Event_Creation ::= (has_result::Thing)+ sent_by::Person ;
abstract ::= part_of_article::article ;
Meta-Review ::= reviews::Reviewed_contribution writtenBy::Reviewer ;
conference ::= has_program::program is_in_phase::phase_of_conference ;
Student ::= earlyRegistration::Boolean ;
managing_of_conference_process ::= is_followed_by::activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human ;
Conference_part ::= Track ;
 Conference_part ::= Tutorial ;
 Conference_part ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Call_for_paper ::= has_authors::Person has_a_date_of_issue::date ;
Conference_www ::= has_a_URL::String ;
Participant ::= Member ;
 Participant ::= Student ;
 Participant ::= Regular ;
 Participant ::= earlyRegistration::Boolean ;
Rejected_contribution ::= has_a_review::Review ;
Invited_talk ::= is_given_by::Active_conference_participant ;
ExternalReviewer ::= assignedByReviewer::Reviewer ;
activity ::= paper_assignment ;
 activity ::= bidding_of_reviewer ;
 activity ::= managing_of_conference_process ;
 activity ::= reviewing_proces ;
 activity ::= notification ;
 activity ::= submission_process ;
 activity ::= is_followed_by::activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human ;
Topic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
Account ::= registred_by::Person ;
Submission_Template ::= define::Event ;
Event_Tracks ::= define::Event ;
Review_expertise ::= has_a_submitted_contribution::Submitted_contribution has_an_expertise::EEnum ;
Event_URL ::= concerned::Event ;
Important_dates ::= is_an_abstract_submission_date::date is_a_full_paper_submission_date::date is_an_ending_date::date is_a_date_of_acceptance_announcement::date is_a_date_of_camera_ready_paper_submission::date is_a_starting_date::date belong_to_a_conference_volume::Conference_volume ;
Submission_event ::= follows::Administrative_event parallel_with::Administrative_event ;
reviewer ::= writes_review::review ;
Review_preference ::= (has_a_topic_or_a_submission_contribution::Thing)+ has_a_degree::Integer ;
--------------------metamodels::deployment.bgf--------------------
ExecutionEnvironment ::= (nestedNode::Node)+ name::String ;
Device ::= (nestedNode::Node)+ name::String ;
Specification ::= (ownedNode::Node)+ (ownedCommunicationLink::CommunicationLink)+ ;
CommunicationLink ::= source::Node target::Node name::String ;
--------------------metamodels::edas.owl.bgf--------------------
PerformanceTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Email_Template ::= define::Event ;
Programme ::= belongsToEvent::ConferenceEvent ;
Reviewing_results_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Conference_proceedings ::= has_an_ISBN::String has_a_publisher::Publisher has_a_volume::String ;
Science_Worker ::= hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
AcademiaOrganization ::= isProviderOf::Sponsorship ;
RadioCommunicationsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
article ::= group_email ;
 article ::= notification_email ;
 article ::= abstract_of_paper ;
 article ::= review_form ;
 article ::= summary_of_reviews ;
 article ::= Review ;
 article ::= goes_through::activity is_sent_to::human is_created_in::activity structure_created_by::human has_author::human gives_classification::classification article_written_by::Author has_reviewer::Reviewer has_abstract::abstract ;
ConferenceMember ::= Reviewer ;
 ConferenceMember ::= ConferenceChair ;
 ConferenceMember ::= AssociatedChair ;
 ConferenceMember ::= ProgramCommitteeMember ;
 ConferenceMember ::= Chairman ;
 ConferenceMember ::= memberOfConference::Conference ;
AccommodationPlace ::= isLocationOf::ConferenceEvent ;
MedicineTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
TwoLevelConference ::= is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
SignalProcessingTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Accepted_Paper ::= isWrittenBy::Author (isReviewedBy::Person)+ full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Submitted_contribution ::= Reviewed_contribution ;
 Submitted_contribution ::= has_a_review_expertise::Review_expertise ;
SessionChair ::= hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
pc_meeting ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime ;
Track-workshop_chair ::= was_a_track-workshop_chair_of::Conference_part ;
summary_of_reviews ::= is_created_in::activity ;
Working_event ::= Workshop ;
 Working_event ::= Tutorial ;
 Working_event ::= hasTopic::Topic hasAdministrativeEvent::Administrative_event ;
Co-author ::= co-writePaper::Paper ;
RatedPapers ::= hasRating::ReviewRating ;
notification ::= has_result::article is_performed_by::human ;
User ::= Committee ;
 User ::= Administrator ;
 User ::= recieve::Document (create::Thing)+ submit::Document ;
Short_paper ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
ConferenceChair ::= memberOfConference::Conference ;
 ConferenceChair ::= hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
Place ::= DiningPlace ;
 Place ::= ConferenceVenuePlace ;
 Place ::= MeetingRoomPlace ;
 Place ::= AccommodationPlace ;
 Place ::= isLocationOf::ConferenceEvent ;
EEnum ::= (male::ε) | (female::ε) | (high::ε) | (medium::ε) | (low::ε) | (very high::ε) ;
GovernmentOrganization ::= isProviderOf::Sponsorship ;
Camera_Ready_event ::= follows::Administrative_event parallel_with::Administrative_event ;
CallForManuscripts ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
MealMenu ::= isMenuOf::MealEvent ;
Bid ::= adjustedBy::Reviewer ;
group_email ::= goes_through::activity is_sent_to::human is_created_in::activity structure_created_by::human has_author::human gives_classification::classification article_written_by::Author has_reviewer::Reviewer has_abstract::abstract ;
Publisher ::= issues::Conference_proceedings ;
Full_Paper ::= isWrittenBy::Author (isReviewedBy::Person)+ full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Attendee ::= hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
upper_tier_reviewing_process ::= is_performed_by::human ;
Manual_Paper_Assignment ::= (manually_assign_paper::Program_Committee_member)+ ;
Registration ::= (has_result::Thing)+ sent_by::Person ;
OperatingTopicsystems ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
ConferenceDinner ::= hasMenu::MealMenu ;
Chair_PC ::= hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
Meta-Reviewer ::= invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ writes_review::Review hasReviewHistory::PersonalReviewHistory assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper writeReview::Review assignExternalReviewer::ExternalReviewer ;
ProgramCommitteeChair ::= endReview::Review ;
Call_for_participation ::= has_authors::Person has_a_date_of_issue::date ;
Active_conference_participant ::= gives_presentations::Presentation ;
Short_Paper ::= isWrittenBy::Author (isReviewedBy::Person)+ full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
SatelliteAndSpaceCommunicationsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Scholar ::= studyAt::University ;
chair ::= assigns_reviewers_to_article::Reviewer creates_program::program ;
TPCMember ::= hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
ConferenceEvent ::= NonAcademicEvent ;
 ConferenceEvent ::= AcademicEvent ;
 ConferenceEvent ::= hasAttendee::Person hasLocation::Place hasProgramme::Programme hasEndDateTime::dateTime hasStartDateTime::dateTime ;
Assistant ::= hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
Organizing_committee ::= was_an_organizing_committee_of::Conference_volume ;
Conference_document ::= Conference_contribution ;
 Conference_document ::= Information_for_participants ;
 Conference_document ::= Call_for_paper ;
 Conference_document ::= Conference_announcement ;
 Conference_document ::= Call_for_participation ;
 Conference_document ::= Conference_www ;
 Conference_document ::= has_authors::Person has_a_date_of_issue::date ;
MobileComputingTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Registration_of_participants_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Committee_member ::= Co-chair ;
 Committee_member ::= Chair ;
 Committee_member ::= was_a_member_of::Committee ;
Member ::= earlyRegistration::Boolean ;
NGO ::= isProviderOf::Sponsorship ;
CommunicationTheoryTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
AcademicEvent ::= TalkEvent ;
 AcademicEvent ::= OrganizationalMeeting ;
 AcademicEvent ::= PaperPresentation ;
 AcademicEvent ::= hasCall::Call ;
CallForPapers ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
CommunicationsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
SecurityTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
DiningPlace ::= isLocationOf::ConferenceEvent ;
University ::= isProviderOf::Sponsorship ;
PaperAbstract ::= isWrittenBy::Author (isReviewedBy::Person)+ full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Administrator ::= approve::Event assign::Role finalizePaperAssignment::Conference runPaperAssignmentTools::Conference enableVirtualMeeting::Conference startReviewerBidding::Conference assignReviewer::Reviewer rejectPaper::Paper enterConferenceDetails::Conference printHardcopyMailingManifests::Conference setMaxPapers::ProgramCommitteeMember enterReviewCriteria::Conference acceptPaper::Paper addProgramCommitteeMember::ProgramCommitteeMember ;
Author ::= AuthorNotReviewer ;
 Author ::= Co-author ;
 Author ::= Corresponding_Author ;
 Author ::= Presenter ;
 Author ::= submitPaper::Paper writePaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper ;
Author_Role ::= assigned_by::Administrator ;
bidding_of_reviewer ::= is_performed_by::human ;
Workshop ::= hasTopic::Topic hasAdministrativeEvent::Administrative_event ;
PaperPresentation ::= relatedToPaper::AcceptedPaper ;
Admin_Role ::= assigned_by::Administrator ;
Chair ::= was_a_committee_chair_of::Committee ;
ComputerArchitectureTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
abstract_of_paper ::= goes_through::activity is_sent_to::human is_created_in::activity structure_created_by::human has_author::human gives_classification::classification article_written_by::Author has_reviewer::Reviewer has_abstract::abstract ;
Approval_Email ::= confirm::Event ;
AntennasTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
OrganizationalMeeting ::= hasCall::Call ;
PersonalReviewHistory ::= isReviewHistoryOf::Reviewer ;
MicroelectronicsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
conference_setup ::= sets_member::human is_made_by::human includes_topic::topic sets_date::date sets_URL::URL ;
Template ::= (relatesTo::Thing)+ recieved_by::User used_by::Person submited__by::User ;
Member_PC ::= expertOn::Topic reviewes::Contribution ;
session ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime ;
Role ::= Admin_Role ;
 Role ::= Author_Role ;
 Role ::= Committe_Role ;
 Role ::= Head_Role ;
 Role ::= Reviewer_Role ;
 Role ::= assigned_by::Administrator ;
Chairman ::= ConferenceChair ;
 Chairman ::= AssociatedChair ;
 Chairman ::= ProgramCommitteeChair ;
 Chairman ::= hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String memberOfConference::Conference ;
Contact_Person ::= is_author_of::article performs_activity::activity is_employed_in::institute has_topic_of_interest::topic supervises::activity e-mail::String last_name::String first_name::String ;
RejectedPaper ::= isWrittenBy::Author (isReviewedBy::Person)+ full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
ParallelAndDistributedComputingTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Rejected_Paper ::= isWrittenBy::Author (isReviewedBy::Person)+ full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Research_Topic ::= define::Event ;
Presenter ::= submitPaper::Paper writePaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper ;
Event_Approval ::= (has_result::Thing)+ sent_by::Person ;
Invited_Paper ::= isWrittenBy::Author (isReviewedBy::Person)+ full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Reviewing_event ::= follows::Administrative_event parallel_with::Administrative_event ;
MultimediaTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
program ::= program_created_by::chair has_session::session ;
CryptographyTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Call ::= CallForPapers ;
 Call ::= CallForReviews ;
 Call ::= CallForManuscripts ;
 Call ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
Tutorial ::= hasTopic::Topic hasAdministrativeEvent::Administrative_event has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Conference_volume ::= has_parts::Conference_part has_workshops::Workshop has_tracks::Track has_tutorials::Tutorial has_a_commtitee::Committee has_a_steering_committee::Steering_committee has_an_organizing_committee::Organizing_committee has_important_dates::Important_dates has_contributions::Conference_contribution has_a_location::String has_a_program_committee::Program_committee ;
submission_process ::= is_performed_by::human ;
Regular ::= earlyRegistration::Boolean ;
Event ::= Symposium ;
 Event ::= Social_event ;
 Event ::= Administrative_event ;
 Event ::= Working_event ;
 Event ::= pc_meeting ;
 Event ::= session ;
 Event ::= Conference ;
 Event ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime ;
ProgramCommittee ::= hasProgramCommitteeMember::ProgramCommitteeMember ;
Review ::= Meta-Review ;
 Review ::= writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::activity review_written_by::Reviewer ;
MealEvent ::= ConferenceDinner ;
 MealEvent ::= hasMenu::MealMenu ;
Head_Role ::= assigned_by::Administrator ;
Person ::= ConferenceMember ;
 Person ::= ExternalReviewer ;
 Person ::= User ;
 Person ::= Conference_participant ;
 Person ::= Conference_contributor ;
 Person ::= Committee_member ;
 Person ::= Conference_applicant ;
 Person ::= Track-workshop_chair ;
 Person ::= Scholar ;
 Person ::= Participant ;
 Person ::= Member_PC ;
 Person ::= Chair_PC ;
 Person ::= Science_Worker ;
 Person ::= Assistant ;
 Person ::= Volunteer ;
 Person ::= chair ;
 Person ::= participant ;
 Person ::= ConferenceChair ;
 Person ::= Attendee ;
 Person ::= SessionChair ;
 Person ::= TPCMember ;
 Person ::= ProgramCommitteeMember ;
 Person ::= Chairman ;
 Person ::= Author ;
 Person ::= Administrator ;
 Person ::= hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
ProgramCommitteeMember ::= ProgramCommitteeChair ;
 ProgramCommitteeMember ::= memberOfProgramCommittee::ProgramCommittee maxPapers::Integer addedBy::Administrator ;
Reviewer_Role ::= assigned_by::Administrator ;
Committe_Role ::= assigned_by::Administrator ;
Poster ::= is_submitted_at::Conference_volume ;
 Poster ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
Paper ::= PaperAbstract ;
 Paper ::= PaperFullVersion ;
 Paper ::= Abstract ;
 Paper ::= Invited_Paper ;
 Paper ::= Short_Paper ;
 Paper ::= Full_Paper ;
 Paper ::= Accepted_Paper ;
 Paper ::= Rejected_Paper ;
 Paper ::= Undecided_Paper ;
 Paper ::= ActivePaper ;
 Paper ::= PendingPaper ;
 Paper ::= WithdrawnPaper ;
 Paper ::= RejectedPaper ;
 Paper ::= AcceptedPaper ;
 Paper ::= PublishedPaper ;
 Paper ::= isWrittenBy::Author (isReviewedBy::Person)+ full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Submission ::= (relatesTo::Thing)+ recieved_by::User used_by::Person submited__by::User ;
Volunteer ::= hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String ;
Conference_announcement ::= has_authors::Person has_a_date_of_issue::date ;
Administrative_event ::= Reviewing_results_event ;
 Administrative_event ::= Reviewing_event ;
 Administrative_event ::= Registration_of_participants_event ;
 Administrative_event ::= Submission_event ;
 Administrative_event ::= Camera_Ready_event ;
 Administrative_event ::= follows::Administrative_event parallel_with::Administrative_event ;
WithdrawnPaper ::= isWrittenBy::Author (isReviewedBy::Person)+ full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Program_Committee_Chair ::= is_author_of::article performs_activity::activity is_employed_in::institute has_topic_of_interest::topic supervises::activity e-mail::String last_name::String first_name::String ;
Program_committee ::= was_a_program_committee_of::Conference_volume ;
paper_assignment ::= Manual_Paper_Assignment ;
 paper_assignment ::= Automatic_Paper_Assignment ;
 paper_assignment ::= assign_paper::Program_Committee_member is_performed_by::human ;
PublishedPaper ::= isWrittenBy::Author (isReviewedBy::Person)+ full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Committee ::= Program_committee ;
 Committee ::= Organizing_committee ;
 Committee ::= Steering_committee ;
 Committee ::= has_members::Committee_member was_a_committee_of::Conference_volume has_a_committee_co-chair::Co-chair has_a_committee_chair::Chair ;
Company ::= isProviderOf::Sponsorship ;
Event_Setup ::= Paper_Typologies ;
 Event_Setup ::= Review_Form ;
 Event_Setup ::= Submission_Template ;
 Event_Setup ::= Event_Tracks ;
 Event_Setup ::= Research_Topic ;
 Event_Setup ::= Email_Template ;
 Event_Setup ::= define::Event ;
Corresponding_Author ::= submitPaper::Paper writePaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper ;
PendingPaper ::= isWrittenBy::Author (isReviewedBy::Person)+ full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Automatic_Paper_Assignment ::= (automatically_assign_paper::Program_Committee_member)+ ;
Symposium ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime ;
Organization ::= Company ;
 Organization ::= University ;
 Organization ::= AcademiaOrganization ;
 Organization ::= IndustryOrganization ;
 Organization ::= NGO ;
 Organization ::= GovernmentOrganization ;
 Organization ::= isProviderOf::Sponsorship ;
PowerlineTransmissionTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
IndustryOrganization ::= isProviderOf::Sponsorship ;
TestOnlyTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Undecided_Paper ::= isWrittenBy::Author (isReviewedBy::Person)+ full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Steering_committee ::= was_a_steering_committee_of::Conference_volume ;
AuthorNotReviewer ::= submitPaper::Paper writePaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper ;
review_form ::= is_created_in::activity ;
Senior_Program_Committee_member ::= supervises::activity ;
Co-chair ::= was_a_committe_co-chair_of::Committee ;
Abstract ::= isWrittenBy::Author (isReviewedBy::Person)+ full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
 Abstract ::= (is_the_1th_part_of::Thing)+ ;
AssociatedChair ::= memberOfConference::Conference ;
PaperFullVersion ::= isWrittenBy::Author (isReviewedBy::Person)+ full_paper_size::Integer has_author::human hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Conference ::= Conference_volume ;
 Conference ::= TwoLevelConference ;
 Conference ::= SingleLevelConference ;
 Conference ::= is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
Document ::= Email ;
 Document ::= Submission ;
 Document ::= Template ;
 Document ::= abstract ;
 Document ::= article ;
 Document ::= SlideSet ;
 Document ::= Programme ;
 Document ::= MealMenu ;
 Document ::= Paper ;
 Document ::= (relatesTo::Thing)+ recieved_by::User used_by::Person submited__by::User ;
Presentation ::= Invited_talk ;
 Presentation ::= is_given_by::Active_conference_participant ;
SingleLevelConference ::= is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
Reviewed_contribution ::= Accepted_contribution ;
 Reviewed_contribution ::= Rejected_contribution ;
 Reviewed_contribution ::= has_a_review::Review ;
Sponsorship ::= TravelGrant ;
 Sponsorship ::= providedBy::Organization hasCostCurrency::String hasCostAmount::Integer ;
ConferenceVenuePlace ::= isLocationOf::ConferenceEvent ;
WirelessCommunicationsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
participant ::= submits_to_conference::Conference ;
Conference_contribution ::= Poster ;
 Conference_contribution ::= Written_contribution ;
 Conference_contribution ::= Presentation ;
 Conference_contribution ::= is_submitted_at::Conference_volume ;
CallForReviews ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
Contribution ::= Poster ;
 Contribution ::= Short_paper ;
 Contribution ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
Activity ::= Event_Creation ;
 Activity ::= Request ;
 Activity ::= Event_Approval ;
 Activity ::= Registration ;
 Activity ::= (has_result::Thing)+ sent_by::Person ;
human ::= Program_Committee_member ;
 human ::= Contact_Person ;
 human ::= Program_Committee_Chair ;
 human ::= is_author_of::article performs_activity::activity is_employed_in::institute has_topic_of_interest::topic supervises::activity e-mail::String last_name::String first_name::String ;
Track ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Paper_Typologies ::= define::Event ;
CADTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Information_for_participants ::= has_authors::Person has_a_date_of_issue::date ;
Reviewer ::= Meta-Reviewer ;
 Reviewer ::= invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ writes_review::Review hasReviewHistory::PersonalReviewHistory assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper writeReview::Review assignExternalReviewer::ExternalReviewer ;
Event_Creation ::= (has_result::Thing)+ sent_by::Person ;
abstract ::= part_of_article::article ;
Meta-Review ::= writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::activity review_written_by::Reviewer ;
Student ::= earlyRegistration::Boolean ;
managing_of_conference_process ::= is_followed_by::activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human ;
Conference_part ::= Track ;
 Conference_part ::= Tutorial ;
 Conference_part ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Call_for_paper ::= has_authors::Person has_a_date_of_issue::date ;
Conference_www ::= has_a_URL::String ;
Participant ::= Member ;
 Participant ::= Student ;
 Participant ::= Regular ;
 Participant ::= earlyRegistration::Boolean ;
MeetingRoomPlace ::= isLocationOf::ConferenceEvent ;
SlideSet ::= (relatesTo::Thing)+ recieved_by::User used_by::Person submited__by::User ;
Rejected_contribution ::= has_a_review::Review ;
Invited_talk ::= is_given_by::Active_conference_participant ;
ExternalReviewer ::= assignedByReviewer::Reviewer ;
Topic ::= ParallelAndDistributedComputingTopic ;
 Topic ::= WirelessCommunicationsTopic ;
 Topic ::= OperatingTopicsystems ;
 Topic ::= ComputerNetworksTopic ;
 Topic ::= SatelliteAndSpaceCommunicationsTopic ;
 Topic ::= CADTopic ;
 Topic ::= MultimediaTopic ;
 Topic ::= CommunicationsTopic ;
 Topic ::= PowerlineTransmissionTopic ;
 Topic ::= AntennasTopic ;
 Topic ::= PerformanceTopic ;
 Topic ::= SignalProcessingTopic ;
 Topic ::= MicroelectronicsTopic ;
 Topic ::= TestOnlyTopic ;
 Topic ::= RadioCommunicationsTopic ;
 Topic ::= ComputerArchitectureTopic ;
 Topic ::= MedicineTopic ;
 Topic ::= SecurityTopic ;
 Topic ::= MobileComputingTopic ;
 Topic ::= CryptographyTopic ;
 Topic ::= CommunicationTheoryTopic ;
 Topic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
activity ::= paper_assignment ;
 activity ::= bidding_of_reviewer ;
 activity ::= managing_of_conference_process ;
 activity ::= reviewing_proces ;
 activity ::= notification ;
 activity ::= submission_process ;
 activity ::= is_followed_by::activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human ;
Account ::= registred_by::Person ;
Submission_Template ::= define::Event ;
Event_Tracks ::= define::Event ;
ContactInformation ::= hasCity::String hasStreet::String hasPostalCode::String hasPhone::String ;
Review_expertise ::= has_a_submitted_contribution::Submitted_contribution has_an_expertise::EEnum ;
Event_URL ::= concerned::Event ;
Important_dates ::= is_an_abstract_submission_date::date is_a_full_paper_submission_date::date is_an_ending_date::date is_a_date_of_acceptance_announcement::date is_a_date_of_camera_ready_paper_submission::date is_a_starting_date::date belong_to_a_conference_volume::Conference_volume ;
Submission_event ::= follows::Administrative_event parallel_with::Administrative_event ;
ActivePaper ::= RatedPapers ;
 ActivePaper ::= hasRating::ReviewRating ;
AcceptedPaper ::= relatedToEvent::PaperPresentation ;
TravelGrant ::= providedBy::Organization hasCostCurrency::String hasCostAmount::Integer ;
Review_preference ::= (has_a_topic_or_a_submission_contribution::Thing)+ has_a_degree::Integer ;
--------------------metamodels::ekaw.owl.bgf--------------------
PerformanceTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Email_Template ::= define::Event ;
Proceedings_Publisher ::= (publisherOf::Thing)+ technicallyOrganises::Thing ;
Programme ::= belongsToEvent::ConferenceEvent ;
Reviewing_results_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Conference_proceedings ::= has_an_ISBN::String has_a_publisher::Publisher has_a_volume::String ;
Organisation ::= Organising_Agency ;
 Organisation ::= Academic_Institution ;
 Organisation ::= Proceedings_Publisher ;
 Organisation ::= (publisherOf::Thing)+ technicallyOrganises::Thing ;
Science_Worker ::= attendeeAt::ConferenceEvent isMemberOf::conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person ;
Evaluated_Paper ::= Accepted_Paper ;
 Evaluated_Paper ::= Rejected_Paper ;
 Evaluated_Paper ::= hasReview::Review ;
AcademiaOrganization ::= isProviderOf::Sponsorship ;
RadioCommunicationsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
article ::= group_email ;
 article ::= notification_email ;
 article ::= abstract_of_paper ;
 article ::= review_form ;
 article ::= summary_of_reviews ;
 article ::= Review ;
 article ::= article_written_by::Author has_reviewer::Reviewer has_abstract::Abstract goes_through::activity is_sent_to::human is_created_in::activity structure_created_by::human has_author::human gives_classification::classification ;
ConferenceMember ::= ConferenceChair ;
 ConferenceMember ::= AssociatedChair ;
 ConferenceMember ::= ProgramCommitteeMember ;
 ConferenceMember ::= Chairman ;
 ConferenceMember ::= memberOfConference::conference ;
AccommodationPlace ::= isLocationOf::ConferenceEvent ;
MedicineTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
TwoLevelConference ::= is_in_phase::phase_of_conference hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI has_program::program ;
SignalProcessingTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Accepted_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
 Accepted_Paper ::= hasReview::Review ;
Submitted_contribution ::= Reviewed_contribution ;
 Submitted_contribution ::= has_a_review_expertise::Review_expertise ;
Agency_Staff_Member ::= attendeeAt::ConferenceEvent isMemberOf::conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person ;
SessionChair ::= attendeeAt::ConferenceEvent isMemberOf::conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person ;
pc_meeting ::= (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime ;
Track-workshop_chair ::= was_a_track-workshop_chair_of::Conference_part ;
summary_of_reviews ::= is_created_in::activity ;
Working_event ::= Workshop ;
 Working_event ::= Tutorial ;
 Working_event ::= hasTopic::Topic hasAdministrativeEvent::Administrative_event ;
Co-author ::= co-writePaper::Paper ;
RatedPapers ::= hasRating::ReviewRating ;
notification ::= has_result::article is_performed_by::human ;
User ::= Committee ;
 User ::= Administrator ;
 User ::= Author ;
 User ::= recieve::Document (create::Thing)+ submit::Document ;
Regular_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Short_paper ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
ConferenceChair ::= memberOfConference::conference ;
 ConferenceChair ::= attendeeAt::ConferenceEvent isMemberOf::conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person ;
Place ::= DiningPlace ;
 Place ::= ConferenceVenuePlace ;
 Place ::= MeetingRoomPlace ;
 Place ::= AccommodationPlace ;
 Place ::= isLocationOf::ConferenceEvent ;
EEnum ::= (male::ε) | (female::ε) | (high::ε) | (medium::ε) | (low::ε) | (very high::ε) ;
GovernmentOrganization ::= isProviderOf::Sponsorship ;
Camera_Ready_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Tutorial_Abstract ::= part_of_article::article (is_the_1th_part_of::Thing)+ ;
CallForManuscripts ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
MealMenu ::= isMenuOf::MealEvent ;
Paper_Author ::= attendeeAt::ConferenceEvent isMemberOf::conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person ;
Bid ::= adjustedBy::Reviewer ;
group_email ::= article_written_by::Author has_reviewer::Reviewer has_abstract::Abstract goes_through::activity is_sent_to::human is_created_in::activity structure_created_by::human has_author::human gives_classification::classification ;
Publisher ::= issues::Conference_proceedings ;
Full_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Assigned_Paper ::= Evaluated_Paper ;
 Assigned_Paper ::= hasReviewer::Possible_Reviewer ;
Attendee ::= attendeeAt::ConferenceEvent isMemberOf::conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person ;
upper_tier_reviewing_process ::= is_performed_by::human ;
Manual_Paper_Assignment ::= (manually_assign_paper::Program_Committee_member)+ ;
Registration ::= has_result::article sent_by::Person ;
OperatingTopicsystems ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Location ::= locationOf::Event ;
Workshop_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
ConferenceDinner ::= hasMenu::MealMenu ;
Chair_PC ::= attendeeAt::ConferenceEvent isMemberOf::conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person ;
Meta-Reviewer ::= assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper writeReview::Review assignExternalReviewer::ExternalReviewer invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ writes_review::Review hasReviewHistory::PersonalReviewHistory ;
ProgramCommitteeChair ::= endReview::Review ;
Call_for_participation ::= has_authors::Person has_a_date_of_issue::date ;
Active_conference_participant ::= gives_presentations::Presentation ;
Short_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
SatelliteAndSpaceCommunicationsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Scholar ::= studyAt::University ;
chair ::= assigns_reviewers_to_article::Reviewer creates_program::program ;
TPCMember ::= attendeeAt::ConferenceEvent isMemberOf::conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person ;
ConferenceEvent ::= NonAcademicEvent ;
 ConferenceEvent ::= AcademicEvent ;
 ConferenceEvent ::= hasAttendee::Person hasLocation::Place hasProgramme::Programme hasEndDateTime::dateTime hasStartDateTime::dateTime ;
Assistant ::= attendeeAt::ConferenceEvent isMemberOf::conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person ;
Organizing_committee ::= was_an_organizing_committee_of::Conference_volume ;
Conference_document ::= Conference_contribution ;
 Conference_document ::= Information_for_participants ;
 Conference_document ::= Call_for_paper ;
 Conference_document ::= Conference_announcement ;
 Conference_document ::= Call_for_participation ;
 Conference_document ::= Conference_www ;
 Conference_document ::= has_authors::Person has_a_date_of_issue::date ;
MobileComputingTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Registration_of_participants_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Committee_member ::= Co-chair ;
 Committee_member ::= Chair ;
 Committee_member ::= was_a_member_of::Committee ;
Member ::= earlyRegistration::Boolean ;
Camera_Ready_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
NGO ::= isProviderOf::Sponsorship ;
CommunicationTheoryTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
AcademicEvent ::= TalkEvent ;
 AcademicEvent ::= OrganizationalMeeting ;
 AcademicEvent ::= PaperPresentation ;
 AcademicEvent ::= hasCall::Call ;
CallForPapers ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
CommunicationsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
SecurityTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
University ::= scientificallyOrganises::Academic_Institution isProviderOf::Sponsorship ;
DiningPlace ::= isLocationOf::ConferenceEvent ;
PaperAbstract ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Administrator ::= approve::Event assign::Role finalizePaperAssignment::conference runPaperAssignmentTools::conference enableVirtualMeeting::conference startReviewerBidding::conference assignReviewer::Reviewer rejectPaper::Paper enterConferenceDetails::conference printHardcopyMailingManifests::conference setMaxPapers::ProgramCommitteeMember enterReviewCriteria::conference acceptPaper::Paper addProgramCommitteeMember::ProgramCommitteeMember ;
Author ::= AuthorNotReviewer ;
 Author ::= Co-author ;
 Author ::= Corresponding_Author ;
 Author ::= Presenter ;
 Author ::= writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper submitPaper::Paper writePaper::Paper writes::Contribution ;
Author_Role ::= assigned_by::Administrator ;
Conference_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
bidding_of_reviewer ::= is_performed_by::human ;
Workshop ::= hasTopic::Topic hasAdministrativeEvent::Administrative_event ;
PaperPresentation ::= relatedToPaper::AcceptedPaper ;
Admin_Role ::= assigned_by::Administrator ;
Chair ::= was_a_committee_chair_of::Committee ;
Negative_Review ::= reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::activity review_written_by::Reviewer ;
ComputerArchitectureTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
abstract_of_paper ::= article_written_by::Author has_reviewer::Reviewer has_abstract::Abstract goes_through::activity is_sent_to::human is_created_in::activity structure_created_by::human has_author::human gives_classification::classification ;
Approval_Email ::= confirm::Event ;
AntennasTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
OrganizationalMeeting ::= hasCall::Call ;
PersonalReviewHistory ::= isReviewHistoryOf::Reviewer ;
MicroelectronicsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
conference_setup ::= sets_member::human is_made_by::human includes_topic::Topic sets_date::date sets_URL::URL ;
Template ::= (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document recieved_by::User used_by::Person submited__by::User ;
Member_PC ::= expertOn::Topic reviewes::Contribution ;
session ::= (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime ;
Role ::= Admin_Role ;
 Role ::= Author_Role ;
 Role ::= Committe_Role ;
 Role ::= Head_Role ;
 Role ::= Reviewer_Role ;
 Role ::= assigned_by::Administrator ;
Chairman ::= ConferenceChair ;
 Chairman ::= AssociatedChair ;
 Chairman ::= ProgramCommitteeChair ;
 Chairman ::= attendeeAt::ConferenceEvent isMemberOf::conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person memberOfConference::conference ;
Contributed_Talk ::= (presentationOfPaper::Document)+ ;
Contact_Person ::= is_author_of::article performs_activity::activity is_employed_in::institute has_topic_of_interest::Topic supervises::activity e-mail::String last_name::String first_name::String ;
Web_Site ::= (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document recieved_by::User used_by::Person submited__by::User ;
RejectedPaper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
ParallelAndDistributedComputingTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Rejected_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
 Rejected_Paper ::= hasReview::Review ;
Research_Topic ::= define::Event ;
 Research_Topic ::= topicCoveredBy::Thing ;
Event_Approval ::= has_result::article sent_by::Person ;
Invited_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Reviewing_event ::= follows::Administrative_event parallel_with::Administrative_event ;
MultimediaTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
program ::= program_created_by::chair has_session::session ;
CryptographyTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Academic_Institution ::= Research_Institute ;
 Academic_Institution ::= University ;
 Academic_Institution ::= scientificallyOrganises::Academic_Institution ;
Call ::= CallForPapers ;
 Call ::= CallForReviews ;
 Call ::= CallForManuscripts ;
 Call ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
Tutorial ::= hasTopic::Topic hasAdministrativeEvent::Administrative_event ;
Conference_volume ::= has_parts::Conference_part has_workshops::Workshop has_tracks::Track has_tutorials::Tutorial has_a_commtitee::Committee has_a_steering_committee::Steering_committee has_an_organizing_committee::Organizing_committee has_important_dates::Important_dates has_contributions::Conference_contribution has_a_location::String has_a_program_committee::Program_committee ;
submission_process ::= is_performed_by::human ;
Regular ::= earlyRegistration::Boolean ;
Event ::= Symposium ;
 Event ::= Social_event ;
 Event ::= Administrative_event ;
 Event ::= Working_event ;
 Event ::= pc_meeting ;
 Event ::= session ;
 Event ::= Social_Event ;
 Event ::= Scientific_Event ;
 Event ::= (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime ;
ProgramCommittee ::= hasProgramCommitteeMember::ProgramCommitteeMember ;
Review ::= Meta-Review ;
 Review ::= Positive_Review ;
 Review ::= Negative_Review ;
 Review ::= Neutral_Review ;
 Review ::= reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::activity review_written_by::Reviewer ;
MealEvent ::= ConferenceDinner ;
 MealEvent ::= hasMenu::MealMenu ;
Head_Role ::= assigned_by::Administrator ;
Person ::= ConferenceMember ;
 Person ::= ExternalReviewer ;
 Person ::= User ;
 Person ::= Conference_participant ;
 Person ::= Conference_contributor ;
 Person ::= Committee_member ;
 Person ::= Conference_applicant ;
 Person ::= Track-workshop_chair ;
 Person ::= Scholar ;
 Person ::= Participant ;
 Person ::= Member_PC ;
 Person ::= Chair_PC ;
 Person ::= Science_Worker ;
 Person ::= Assistant ;
 Person ::= Volunteer ;
 Person ::= chair ;
 Person ::= participant ;
 Person ::= ConferenceChair ;
 Person ::= Attendee ;
 Person ::= SessionChair ;
 Person ::= TPCMember ;
 Person ::= Paper_Author ;
 Person ::= Conference_Participant ;
 Person ::= Agency_Staff_Member ;
 Person ::= Possible_Reviewer ;
 Person ::= Student ;
 Person ::= ProgramCommitteeMember ;
 Person ::= Chairman ;
 Person ::= Reviewer ;
 Person ::= Administrator ;
 Person ::= attendeeAt::ConferenceEvent isMemberOf::conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person ;
ProgramCommitteeMember ::= ProgramCommitteeChair ;
 ProgramCommitteeMember ::= memberOfProgramCommittee::ProgramCommittee maxPapers::Integer addedBy::Administrator ;
Invited_Talk_Abstract ::= part_of_article::article (is_the_1th_part_of::Thing)+ ;
Research_Institute ::= scientificallyOrganises::Academic_Institution ;
Reviewer_Role ::= assigned_by::Administrator ;
Poster ::= is_submitted_at::Conference_volume ;
 Poster ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
Committe_Role ::= assigned_by::Administrator ;
Paper ::= PaperAbstract ;
 Paper ::= PaperFullVersion ;
 Paper ::= Invited_Paper ;
 Paper ::= Short_Paper ;
 Paper ::= Full_Paper ;
 Paper ::= Accepted_Paper ;
 Paper ::= Rejected_Paper ;
 Paper ::= Undecided_Paper ;
 Paper ::= ActivePaper ;
 Paper ::= PendingPaper ;
 Paper ::= WithdrawnPaper ;
 Paper ::= RejectedPaper ;
 Paper ::= AcceptedPaper ;
 Paper ::= PublishedPaper ;
 Paper ::= Camera_Ready_Paper ;
 Paper ::= Workshop_Paper ;
 Paper ::= Industrial_Paper ;
 Paper ::= Conference_Paper ;
 Paper ::= Submitted_Paper ;
 Paper ::= Poster_Paper ;
 Paper ::= Regular_Paper ;
 Paper ::= Demo_Paper ;
 Paper ::= Abstract ;
 Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Submission ::= (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document recieved_by::User used_by::Person submited__by::User ;
Volunteer ::= attendeeAt::ConferenceEvent isMemberOf::conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person ;
Conference_announcement ::= has_authors::Person has_a_date_of_issue::date ;
Administrative_event ::= Reviewing_results_event ;
 Administrative_event ::= Reviewing_event ;
 Administrative_event ::= Registration_of_participants_event ;
 Administrative_event ::= Submission_event ;
 Administrative_event ::= Camera_Ready_event ;
 Administrative_event ::= follows::Administrative_event parallel_with::Administrative_event ;
WithdrawnPaper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Program_Committee_Chair ::= is_author_of::article performs_activity::activity is_employed_in::institute has_topic_of_interest::Topic supervises::activity e-mail::String last_name::String first_name::String ;
Program_committee ::= was_a_program_committee_of::Conference_volume ;
paper_assignment ::= Manual_Paper_Assignment ;
 paper_assignment ::= Automatic_Paper_Assignment ;
 paper_assignment ::= assign_paper::Program_Committee_member is_performed_by::human ;
Positive_Review ::= reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::activity review_written_by::Reviewer ;
PublishedPaper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Committee ::= Program_committee ;
 Committee ::= Organizing_committee ;
 Committee ::= Steering_committee ;
 Committee ::= has_members::Committee_member was_a_committee_of::Conference_volume has_a_committee_co-chair::Co-chair has_a_committee_chair::Chair ;
Company ::= isProviderOf::Sponsorship ;
Event_Setup ::= Paper_Typologies ;
 Event_Setup ::= Review_Form ;
 Event_Setup ::= Submission_Template ;
 Event_Setup ::= Event_Tracks ;
 Event_Setup ::= Research_Topic ;
 Event_Setup ::= Email_Template ;
 Event_Setup ::= define::Event ;
Corresponding_Author ::= writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper submitPaper::Paper writePaper::Paper writes::Contribution ;
PendingPaper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Automatic_Paper_Assignment ::= (automatically_assign_paper::Program_Committee_member)+ ;
Symposium ::= (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime ;
Organization ::= Company ;
 Organization ::= AcademiaOrganization ;
 Organization ::= IndustryOrganization ;
 Organization ::= NGO ;
 Organization ::= GovernmentOrganization ;
 Organization ::= University ;
 Organization ::= isProviderOf::Sponsorship ;
PowerlineTransmissionTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
IndustryOrganization ::= isProviderOf::Sponsorship ;
TestOnlyTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Undecided_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Steering_committee ::= was_a_steering_committee_of::Conference_volume ;
AuthorNotReviewer ::= writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper submitPaper::Paper writePaper::Paper writes::Contribution ;
review_form ::= is_created_in::activity ;
Industrial_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Senior_Program_Committee_member ::= supervises::activity ;
Co-chair ::= was_a_committe_co-chair_of::Committee ;
Abstract ::= Tutorial_Abstract ;
 Abstract ::= Invited_Talk_Abstract ;
 Abstract ::= part_of_article::article (is_the_1th_part_of::Thing)+ ;
Flyer ::= (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document recieved_by::User used_by::Person submited__by::User ;
AssociatedChair ::= memberOfConference::conference ;
Organising_Agency ::= (publisherOf::Thing)+ technicallyOrganises::Thing ;
PaperFullVersion ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
Document ::= Email ;
 Document ::= Submission ;
 Document ::= Template ;
 Document ::= article ;
 Document ::= SlideSet ;
 Document ::= Programme ;
 Document ::= MealMenu ;
 Document ::= Programme_Brochure ;
 Document ::= Flyer ;
 Document ::= Web_Site ;
 Document ::= Multi-author_Volume ;
 Document ::= Paper ;
 Document ::= (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document recieved_by::User used_by::Person submited__by::User ;
Presentation ::= Invited_talk ;
 Presentation ::= is_given_by::Active_conference_participant ;
SingleLevelConference ::= is_in_phase::phase_of_conference hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI has_program::program ;
Reviewed_contribution ::= Accepted_contribution ;
 Reviewed_contribution ::= Rejected_contribution ;
 Reviewed_contribution ::= has_a_review::Review ;
Sponsorship ::= TravelGrant ;
 Sponsorship ::= providedBy::Organization hasCostCurrency::String hasCostAmount::Integer ;
ConferenceVenuePlace ::= isLocationOf::ConferenceEvent ;
WirelessCommunicationsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
participant ::= submits_to_conference::conference ;
Conference_contribution ::= Poster ;
 Conference_contribution ::= Written_contribution ;
 Conference_contribution ::= Presentation ;
 Conference_contribution ::= is_submitted_at::Conference_volume ;
Invited_Talk ::= (presentationOfPaper::Document)+ ;
Demo_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
CallForReviews ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
Contribution ::= Poster ;
 Contribution ::= Short_paper ;
 Contribution ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
Activity ::= Event_Creation ;
 Activity ::= Request ;
 Activity ::= Event_Approval ;
 Activity ::= Registration ;
 Activity ::= has_result::article sent_by::Person ;
human ::= Program_Committee_member ;
 human ::= Contact_Person ;
 human ::= Program_Committee_Chair ;
 human ::= is_author_of::article performs_activity::activity is_employed_in::institute has_topic_of_interest::Topic supervises::activity e-mail::String last_name::String first_name::String ;
Track ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Paper_Typologies ::= define::Event ;
CADTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Information_for_participants ::= has_authors::Person has_a_date_of_issue::date ;
Programme_Brochure ::= (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document recieved_by::User used_by::Person submited__by::User ;
Reviewer ::= Meta-Reviewer ;
 Reviewer ::= assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper writeReview::Review assignExternalReviewer::ExternalReviewer invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ writes_review::Review hasReviewHistory::PersonalReviewHistory ;
Event_Creation ::= has_result::article sent_by::Person ;
Meta-Review ::= reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::activity review_written_by::Reviewer ;
conference ::= Conference_volume ;
 conference ::= TwoLevelConference ;
 conference ::= SingleLevelConference ;
 conference ::= is_in_phase::phase_of_conference hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI has_program::program ;
Student ::= earlyRegistration::Boolean ;
 Student ::= attendeeAt::ConferenceEvent isMemberOf::conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person send::Activity added_by::Person ;
Poster_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer ;
managing_of_conference_process ::= is_followed_by::activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human ;
Conference_part ::= Track ;
 Conference_part ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Call_for_paper ::= has_authors::Person has_a_date_of_issue::date ;
Conference_www ::= has_a_URL::String ;
Possible_Reviewer ::= PC_Member ;
 Possible_Reviewer ::= reviewerOfPaper::Paper ;
Participant ::= Member ;
 Participant ::= Student ;
 Participant ::= Regular ;
 Participant ::= earlyRegistration::Boolean ;
MeetingRoomPlace ::= isLocationOf::ConferenceEvent ;
SlideSet ::= (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document recieved_by::User used_by::Person submited__by::User ;
Rejected_contribution ::= has_a_review::Review ;
Neutral_Review ::= reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::activity review_written_by::Reviewer ;
Invited_talk ::= is_given_by::Active_conference_participant ;
ExternalReviewer ::= assignedByReviewer::Reviewer ;
Topic ::= ParallelAndDistributedComputingTopic ;
 Topic ::= WirelessCommunicationsTopic ;
 Topic ::= OperatingTopicsystems ;
 Topic ::= ComputerNetworksTopic ;
 Topic ::= SatelliteAndSpaceCommunicationsTopic ;
 Topic ::= CADTopic ;
 Topic ::= MultimediaTopic ;
 Topic ::= CommunicationsTopic ;
 Topic ::= PowerlineTransmissionTopic ;
 Topic ::= AntennasTopic ;
 Topic ::= PerformanceTopic ;
 Topic ::= SignalProcessingTopic ;
 Topic ::= MicroelectronicsTopic ;
 Topic ::= TestOnlyTopic ;
 Topic ::= RadioCommunicationsTopic ;
 Topic ::= ComputerArchitectureTopic ;
 Topic ::= MedicineTopic ;
 Topic ::= SecurityTopic ;
 Topic ::= MobileComputingTopic ;
 Topic ::= CryptographyTopic ;
 Topic ::= CommunicationTheoryTopic ;
 Topic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
activity ::= paper_assignment ;
 activity ::= bidding_of_reviewer ;
 activity ::= managing_of_conference_process ;
 activity ::= reviewing_proces ;
 activity ::= notification ;
 activity ::= submission_process ;
 activity ::= is_followed_by::activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human ;
Account ::= registred_by::Person ;
Submission_Template ::= define::Event ;
Event_Tracks ::= define::Event ;
ContactInformation ::= hasCity::String hasStreet::String hasPostalCode::String hasPhone::String ;
Review_expertise ::= has_a_submitted_contribution::Submitted_contribution has_an_expertise::EEnum ;
Event_URL ::= concerned::Event ;
Important_dates ::= is_an_abstract_submission_date::date is_a_full_paper_submission_date::date is_an_ending_date::date is_a_date_of_acceptance_announcement::date is_a_date_of_camera_ready_paper_submission::date is_a_starting_date::date belong_to_a_conference_volume::Conference_volume ;
Submission_event ::= follows::Administrative_event parallel_with::Administrative_event ;
ActivePaper ::= RatedPapers ;
 ActivePaper ::= hasRating::ReviewRating ;
AcceptedPaper ::= relatedToEvent::PaperPresentation ;
TravelGrant ::= providedBy::Organization hasCostCurrency::String hasCostAmount::Integer ;
Review_preference ::= (has_a_topic_or_a_submission_contribution::Thing)+ has_a_degree::Integer ;
Individual_Presentation ::= Invited_Talk ;
 Individual_Presentation ::= Contributed_Talk ;
 Individual_Presentation ::= (presentationOfPaper::Document)+ ;
--------------------metamodels::iasted.owl.bgf--------------------
PerformanceTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Sponzorship ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
Email_Template ::= define::Event ;
Proceedings_Publisher ::= (publisherOf::Thing)+ technicallyOrganises::Thing ;
Reviewing_results_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Programme ::= belongsToEvent::ConferenceEvent ;
Conference_proceedings ::= has_an_ISBN::String has_a_publisher::Publisher has_a_volume::String ;
Sponsor ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasConflictOfInterest::Document email::String ;
Organisation ::= Organising_Agency ;
 Organisation ::= Academic_Institution ;
 Organisation ::= Proceedings_Publisher ;
 Organisation ::= (publisherOf::Thing)+ technicallyOrganises::Thing ;
Science_Worker ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasConflictOfInterest::Document email::String ;
Evaluated_Paper ::= Accepted_Paper ;
 Evaluated_Paper ::= Rejected_Paper ;
 Evaluated_Paper ::= hasReview::Review ;
AcademiaOrganization ::= isProviderOf::Sponsorship ;
RadioCommunicationsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
article ::= group_email ;
 article ::= notification_email ;
 article ::= abstract_of_paper ;
 article ::= review_form ;
 article ::= summary_of_reviews ;
 article ::= Review ;
 article ::= goes_through::Activity is_sent_to::human is_created_in::Activity structure_created_by::human has_author::human gives_classification::classification article_written_by::Author has_reviewer::Reviewer has_abstract::Abstract ;
ConferenceMember ::= Reviewer ;
 ConferenceMember ::= ConferenceChair ;
 ConferenceMember ::= AssociatedChair ;
 ConferenceMember ::= ProgramCommitteeMember ;
 ConferenceMember ::= Chairman ;
 ConferenceMember ::= memberOfConference::Conference ;
AccommodationPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
MedicineTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
TwoLevelConference ::= is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
SignalProcessingTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Accepted_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
 Accepted_Paper ::= hasReview::Review ;
Submitted_contribution ::= Reviewed_contribution ;
 Submitted_contribution ::= has_a_review_expertise::Review_expertise ;
Agency_Staff_Member ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasConflictOfInterest::Document email::String ;
SessionChair ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasConflictOfInterest::Document email::String ;
pc_meeting ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location ;
Track-workshop_chair ::= was_a_track-workshop_chair_of::Conference_part ;
Working_event ::= hasTopic::Topic hasAdministrativeEvent::Administrative_event ;
summary_of_reviews ::= is_created_in::Activity ;
Co-author ::= co-writePaper::Paper ;
RatedPapers ::= hasRating::ReviewRating ;
notification ::= has_result::article is_performed_by::human ;
User ::= Committee ;
 User ::= Administrator ;
 User ::= recieve::Document (create::Thing)+ submit::Document ;
Regular_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
Short_paper ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
ConferenceChair ::= memberOfConference::Conference ;
 ConferenceChair ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasConflictOfInterest::Document email::String ;
Place ::= DiningPlace ;
 Place ::= ConferenceVenuePlace ;
 Place ::= MeetingRoomPlace ;
 Place ::= AccommodationPlace ;
 Place ::= Building ;
 Place ::= Session_room ;
 Place ::= Hotel_room ;
 Place ::= Conference_hall ;
 Place ::= Main_office ;
 Place ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
EEnum ::= (male::ε) | (female::ε) | (high::ε) | (medium::ε) | (low::ε) | (very high::ε) ;
GovernmentOrganization ::= isProviderOf::Sponsorship ;
Camera_Ready_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Tutorial_Abstract ::= part_of_article::article (is_the_1th_part_of::Thing)+ ;
Main_office ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
CallForManuscripts ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
MealMenu ::= isMenuOf::MealEvent ;
Paper_Author ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasConflictOfInterest::Document email::String ;
Bid ::= adjustedBy::Reviewer ;
group_email ::= goes_through::Activity is_sent_to::human is_created_in::Activity structure_created_by::human has_author::human gives_classification::classification article_written_by::Author has_reviewer::Reviewer has_abstract::Abstract ;
Publisher ::= issues::Conference_proceedings ;
Full_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
Assigned_Paper ::= Evaluated_Paper ;
 Assigned_Paper ::= hasReviewer::Possible_Reviewer ;
Attendee ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasConflictOfInterest::Document email::String ;
upper_tier_reviewing_process ::= is_performed_by::human ;
Manual_Paper_Assignment ::= (manually_assign_paper::Program_Committee_member)+ ;
Registration ::= (has_result::Thing)+ sent_by::Person is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human is_held_before::Time (is_held_in::Trip_day)+ is_held_after::Time is_dated_on::dateTime ;
 Registration ::= ε ;
OperatingTopicsystems ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Location ::= locationOf::Event ;
Workshop_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
ConferenceDinner ::= hasMenu::MealMenu ;
Chair_PC ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasConflictOfInterest::Document email::String ;
Meta-Reviewer ::= invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ writes_review::Review hasReviewHistory::PersonalReviewHistory assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper writeReview::Review assignExternalReviewer::ExternalReviewer ;
ProgramCommitteeChair ::= endReview::Review ;
Call_for_participation ::= has_authors::Person has_a_date_of_issue::date ;
Active_conference_participant ::= gives_presentations::Presentation ;
Short_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
SatelliteAndSpaceCommunicationsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Scholar ::= studyAt::University ;
chair ::= assigns_reviewers_to_article::Reviewer creates_program::program ;
TPCMember ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasConflictOfInterest::Document email::String ;
ConferenceEvent ::= NonAcademicEvent ;
 ConferenceEvent ::= AcademicEvent ;
 ConferenceEvent ::= hasAttendee::Person hasLocation::Place hasProgramme::Programme hasEndDateTime::dateTime hasStartDateTime::dateTime ;
Assistant ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasConflictOfInterest::Document email::String ;
Organizing_committee ::= was_an_organizing_committee_of::Conference_volume ;
Conference_document ::= Conference_contribution ;
 Conference_document ::= Information_for_participants ;
 Conference_document ::= Call_for_paper ;
 Conference_document ::= Conference_announcement ;
 Conference_document ::= Call_for_participation ;
 Conference_document ::= Conference_www ;
 Conference_document ::= has_authors::Person has_a_date_of_issue::date ;
MobileComputingTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Registration_of_participants_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Committee_member ::= Co-chair ;
 Committee_member ::= Chair ;
 Committee_member ::= was_a_member_of::Committee ;
Deadline_hotel_reservation ::= done_till::date ;
Member ::= earlyRegistration::Boolean ;
Camera_Ready_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
NGO ::= isProviderOf::Sponsorship ;
CommunicationTheoryTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
AcademicEvent ::= TalkEvent ;
 AcademicEvent ::= OrganizationalMeeting ;
 AcademicEvent ::= PaperPresentation ;
 AcademicEvent ::= Workshop ;
 AcademicEvent ::= hasCall::Call ;
Mailing_list ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
CallForPapers ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
CommunicationsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
SecurityTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
DiningPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
University ::= isProviderOf::Sponsorship scientificallyOrganises::Academic_Institution ;
PaperAbstract ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
Administrator ::= finalizePaperAssignment::Conference runPaperAssignmentTools::Conference enableVirtualMeeting::Conference startReviewerBidding::Conference assignReviewer::Reviewer rejectPaper::Paper enterConferenceDetails::Conference printHardcopyMailingManifests::Conference setMaxPapers::ProgramCommitteeMember enterReviewCriteria::Conference acceptPaper::Paper addProgramCommitteeMember::ProgramCommitteeMember approve::Event assign::Role ;
Author ::= AuthorNotReviewer ;
 Author ::= Co-author ;
 Author ::= Corresponding_Author ;
 Author ::= Author_cd_proceedings_included ;
 Author ::= Lecturer ;
 Author ::= Plenary_lecture_speaker ;
 Author ::= Tutorial_speaker ;
 Author ::= Author_book_proceedings_included ;
 Author ::= Presenter ;
 Author ::= submitPaper::Paper writePaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper ;
Author_Role ::= assigned_by::Administrator ;
Conference_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
bidding_of_reviewer ::= is_performed_by::human ;
Workshop ::= hasCall::Call ;
PaperPresentation ::= relatedToPaper::AcceptedPaper ;
Admin_Role ::= assigned_by::Administrator ;
Chair ::= was_a_committee_chair_of::Committee ;
Negative_Review ::= writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::Activity review_written_by::Reviewer reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer ;
ComputerArchitectureTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
abstract_of_paper ::= goes_through::Activity is_sent_to::human is_created_in::Activity structure_created_by::human has_author::human gives_classification::classification article_written_by::Author has_reviewer::Reviewer has_abstract::Abstract ;
Money ::= Tax ;
 Money ::= Fee ;
 Money ::= Sponzorship ;
 Money ::= Tip ;
 Money ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
Approval_Email ::= confirm::Event ;
AntennasTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
OrganizationalMeeting ::= hasCall::Call ;
PersonalReviewHistory ::= isReviewHistoryOf::Reviewer ;
MicroelectronicsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
conference_setup ::= sets_member::human is_made_by::human includes_topic::Topic sets_date::date sets_URL::URL ;
Template ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
Member_PC ::= expertOn::Topic reviewes::Contribution ;
session ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location ;
Role ::= Admin_Role ;
 Role ::= Author_Role ;
 Role ::= Committe_Role ;
 Role ::= Head_Role ;
 Role ::= Reviewer_Role ;
 Role ::= assigned_by::Administrator ;
Chairman ::= ConferenceChair ;
 Chairman ::= AssociatedChair ;
 Chairman ::= ProgramCommitteeChair ;
 Chairman ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasConflictOfInterest::Document email::String memberOfConference::Conference ;
Contributed_Talk ::= (presentationOfPaper::Document)+ ;
Contact_Person ::= is_author_of::article performs_activity::Activity is_employed_in::institute has_topic_of_interest::Topic supervises::Activity e-mail::String last_name::String first_name::String ;
Web_Site ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
RejectedPaper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
ParallelAndDistributedComputingTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Rejected_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
 Rejected_Paper ::= hasReview::Review ;
Research_Topic ::= define::Event ;
 Research_Topic ::= topicCoveredBy::Thing ;
Event_Approval ::= (has_result::Thing)+ sent_by::Person is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human is_held_before::Time (is_held_in::Trip_day)+ is_held_after::Time is_dated_on::dateTime ;
Invited_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
Reviewing_event ::= follows::Administrative_event parallel_with::Administrative_event ;
MultimediaTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
program ::= program_created_by::chair has_session::session ;
CryptographyTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Plenary_lecture_speaker ::= submitPaper::Paper writePaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper ;
Academic_Institution ::= Research_Institute ;
 Academic_Institution ::= University ;
 Academic_Institution ::= scientificallyOrganises::Academic_Institution ;
Author_book_proceedings_included ::= submitPaper::Paper writePaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper ;
Video_presentation ::= is_given_by::Active_conference_participant ;
Call ::= CallForPapers ;
 Call ::= CallForReviews ;
 Call ::= CallForManuscripts ;
 Call ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
Tutorial ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Conference_volume ::= has_parts::Conference_part has_workshops::Workshop has_tracks::Track has_tutorials::Tutorial has_a_commtitee::Committee has_a_steering_committee::Steering_committee has_an_organizing_committee::Organizing_committee has_important_dates::Important_dates has_contributions::Conference_contribution has_a_location::String has_a_program_committee::Program_committee ;
submission_process ::= is_performed_by::human ;
Regular ::= earlyRegistration::Boolean ;
Tip ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
Camera_ready_manuscript_deadline ::= done_till::date ;
Event ::= Symposium ;
 Event ::= Social_event ;
 Event ::= Administrative_event ;
 Event ::= Working_event ;
 Event ::= pc_meeting ;
 Event ::= session ;
 Event ::= Social_Event ;
 Event ::= Scientific_Event ;
 Event ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location ;
ProgramCommittee ::= hasProgramCommitteeMember::ProgramCommitteeMember ;
Review ::= Meta-Review ;
 Review ::= Positive_Review ;
 Review ::= Negative_Review ;
 Review ::= Neutral_Review ;
 Review ::= writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::Activity review_written_by::Reviewer reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer ;
Registation_deadline ::= done_till::date ;
Transparency ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
Deadline ::= Deadline_hotel_reservation ;
 Deadline ::= Submissions_deadline ;
 Deadline ::= Deadline_for_notification_of_acceptance ;
 Deadline ::= Registation_deadline ;
 Deadline ::= Camera_ready_manuscript_deadline ;
 Deadline ::= done_till::date ;
MealEvent ::= ConferenceDinner ;
 MealEvent ::= hasMenu::MealMenu ;
Head_Role ::= assigned_by::Administrator ;
Person ::= ConferenceMember ;
 Person ::= ExternalReviewer ;
 Person ::= User ;
 Person ::= Conference_participant ;
 Person ::= Conference_contributor ;
 Person ::= Committee_member ;
 Person ::= Conference_applicant ;
 Person ::= Track-workshop_chair ;
 Person ::= Scholar ;
 Person ::= Participant ;
 Person ::= Member_PC ;
 Person ::= Chair_PC ;
 Person ::= Science_Worker ;
 Person ::= Assistant ;
 Person ::= Volunteer ;
 Person ::= chair ;
 Person ::= participant ;
 Person ::= ConferenceChair ;
 Person ::= Attendee ;
 Person ::= SessionChair ;
 Person ::= TPCMember ;
 Person ::= Paper_Author ;
 Person ::= Conference_Participant ;
 Person ::= Agency_Staff_Member ;
 Person ::= Possible_Reviewer ;
 Person ::= Student ;
 Person ::= Delegate ;
 Person ::= Sponsor ;
 Person ::= ProgramCommitteeMember ;
 Person ::= Chairman ;
 Person ::= Administrator ;
 Person ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasConflictOfInterest::Document email::String ;
ProgramCommitteeMember ::= ProgramCommitteeChair ;
 ProgramCommitteeMember ::= memberOfProgramCommittee::ProgramCommittee maxPapers::Integer addedBy::Administrator ;
Invited_Talk_Abstract ::= part_of_article::article (is_the_1th_part_of::Thing)+ ;
Research_Institute ::= scientificallyOrganises::Academic_Institution ;
Reviewer_Role ::= assigned_by::Administrator ;
Poster ::= is_submitted_at::Conference_volume ;
 Poster ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
Committe_Role ::= assigned_by::Administrator ;
Invitation_letter ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
Paper ::= PaperAbstract ;
 Paper ::= PaperFullVersion ;
 Paper ::= Invited_Paper ;
 Paper ::= Short_Paper ;
 Paper ::= Full_Paper ;
 Paper ::= Accepted_Paper ;
 Paper ::= Rejected_Paper ;
 Paper ::= Undecided_Paper ;
 Paper ::= ActivePaper ;
 Paper ::= PendingPaper ;
 Paper ::= WithdrawnPaper ;
 Paper ::= RejectedPaper ;
 Paper ::= AcceptedPaper ;
 Paper ::= PublishedPaper ;
 Paper ::= Camera_Ready_Paper ;
 Paper ::= Workshop_Paper ;
 Paper ::= Industrial_Paper ;
 Paper ::= Conference_Paper ;
 Paper ::= Submitted_Paper ;
 Paper ::= Poster_Paper ;
 Paper ::= Regular_Paper ;
 Paper ::= Demo_Paper ;
 Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
Volunteer ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasConflictOfInterest::Document email::String ;
Conference_announcement ::= has_authors::Person has_a_date_of_issue::date ;
Administrative_event ::= Reviewing_results_event ;
 Administrative_event ::= Reviewing_event ;
 Administrative_event ::= Registration_of_participants_event ;
 Administrative_event ::= Submission_event ;
 Administrative_event ::= Camera_Ready_event ;
 Administrative_event ::= follows::Administrative_event parallel_with::Administrative_event ;
WithdrawnPaper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
Program_Committee_Chair ::= is_author_of::article performs_activity::Activity is_employed_in::institute has_topic_of_interest::Topic supervises::Activity e-mail::String last_name::String first_name::String ;
Brief_introduction_for_Session_chair ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
Program_committee ::= was_a_program_committee_of::Conference_volume ;
paper_assignment ::= Manual_Paper_Assignment ;
 paper_assignment ::= Automatic_Paper_Assignment ;
 paper_assignment ::= assign_paper::Program_Committee_member is_performed_by::human ;
Positive_Review ::= writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::Activity review_written_by::Reviewer reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer ;
PublishedPaper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
Committee ::= Program_committee ;
 Committee ::= Organizing_committee ;
 Committee ::= Steering_committee ;
 Committee ::= has_members::Committee_member was_a_committee_of::Conference_volume has_a_committee_co-chair::Co-chair has_a_committee_chair::Chair ;
Company ::= isProviderOf::Sponsorship ;
Conference_hall ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
Event_Setup ::= Paper_Typologies ;
 Event_Setup ::= Review_Form ;
 Event_Setup ::= Submission_Template ;
 Event_Setup ::= Event_Tracks ;
 Event_Setup ::= Research_Topic ;
 Event_Setup ::= Email_Template ;
 Event_Setup ::= define::Event ;
Corresponding_Author ::= submitPaper::Paper writePaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper ;
PendingPaper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
Automatic_Paper_Assignment ::= (automatically_assign_paper::Program_Committee_member)+ ;
Symposium ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location ;
Organization ::= Company ;
 Organization ::= AcademiaOrganization ;
 Organization ::= IndustryOrganization ;
 Organization ::= NGO ;
 Organization ::= GovernmentOrganization ;
 Organization ::= University ;
 Organization ::= isProviderOf::Sponsorship ;
PowerlineTransmissionTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
IndustryOrganization ::= isProviderOf::Sponsorship ;
TestOnlyTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Undecided_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
Steering_committee ::= was_a_steering_committee_of::Conference_volume ;
AuthorNotReviewer ::= submitPaper::Paper writePaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper ;
review_form ::= is_created_in::Activity ;
Deadline_for_notification_of_acceptance ::= done_till::date ;
Industrial_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
Senior_Program_Committee_member ::= supervises::Activity ;
Co-chair ::= was_a_committe_co-chair_of::Committee ;
Abstract ::= Tutorial_Abstract ;
 Abstract ::= Invited_Talk_Abstract ;
 Abstract ::= part_of_article::article (is_the_1th_part_of::Thing)+ ;
Flyer ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
AssociatedChair ::= memberOfConference::Conference ;
Tutorial_speaker ::= submitPaper::Paper writePaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper ;
Organising_Agency ::= (publisherOf::Thing)+ technicallyOrganises::Thing ;
PaperFullVersion ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
Conference ::= Conference_volume ;
 Conference ::= TwoLevelConference ;
 Conference ::= SingleLevelConference ;
 Conference ::= is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
Document ::= Email ;
 Document ::= Submission ;
 Document ::= Template ;
 Document ::= article ;
 Document ::= SlideSet ;
 Document ::= Programme ;
 Document ::= MealMenu ;
 Document ::= Programme_Brochure ;
 Document ::= Flyer ;
 Document ::= Web_Site ;
 Document ::= Multi-author_Volume ;
 Document ::= Form ;
 Document ::= Mailing_list ;
 Document ::= Record_of_attendance ;
 Document ::= Brief_introduction_for_Session_chair ;
 Document ::= Invitation_letter ;
 Document ::= Viza ;
 Document ::= Transparency ;
 Document ::= Payment_document ;
 Document ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
Viza ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
Presentation ::= Invited_talk ;
 Presentation ::= PowerPoint_presentation ;
 Presentation ::= Video_presentation ;
 Presentation ::= is_given_by::Active_conference_participant ;
SingleLevelConference ::= is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
Reviewed_contribution ::= Accepted_contribution ;
 Reviewed_contribution ::= Rejected_contribution ;
 Reviewed_contribution ::= has_a_review::Review ;
Sponsorship ::= TravelGrant ;
 Sponsorship ::= providedBy::Organization hasCostCurrency::String hasCostAmount::Integer ;
ConferenceVenuePlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
WirelessCommunicationsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Item ::= Transport_vehicle ;
 Item ::= Card ;
 Item ::= Audiovisual_equipment ;
 Item ::= Publication ;
 Item ::= Document ;
 Item ::= go_through::Activity (is_used_for::Thing)+ is_signed_by::Person is_made_from::Item is_sent_after::Time is_needed_for::Person is_sent_before::Time is_prepared_by::Person is_used_by::Person is_given_to::Person is_sent_by::Person is_writen_by::Person ;
participant ::= submits_to_conference::Conference ;
Conference_contribution ::= Poster ;
 Conference_contribution ::= Written_contribution ;
 Conference_contribution ::= Presentation ;
 Conference_contribution ::= is_submitted_at::Conference_volume ;
Invited_Talk ::= (presentationOfPaper::Document)+ ;
Demo_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
CallForReviews ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
Contribution ::= Poster ;
 Contribution ::= Short_paper ;
 Contribution ::= Paper ;
 Contribution ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
Activity ::= Event_Creation ;
 Activity ::= Request ;
 Activity ::= Event_Approval ;
 Activity ::= Registration ;
 Activity ::= paper_assignment ;
 Activity ::= bidding_of_reviewer ;
 Activity ::= managing_of_conference_process ;
 Activity ::= reviewing_proces ;
 Activity ::= notification ;
 Activity ::= submission_process ;
 Activity ::= Activity_before_conference ;
 Activity ::= Conference_activity ;
 Activity ::= Activity_after_conference ;
 Activity ::= (has_result::Thing)+ sent_by::Person is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human is_held_before::Time (is_held_in::Trip_day)+ is_held_after::Time is_dated_on::dateTime ;
PowerPoint_presentation ::= is_given_by::Active_conference_participant ;
human ::= Program_Committee_member ;
 human ::= Contact_Person ;
 human ::= Program_Committee_Chair ;
 human ::= is_author_of::article performs_activity::Activity is_employed_in::institute has_topic_of_interest::Topic supervises::Activity e-mail::String last_name::String first_name::String ;
Track ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Paper_Typologies ::= define::Event ;
CADTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Information_for_participants ::= has_authors::Person has_a_date_of_issue::date ;
Programme_Brochure ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
Reviewer ::= Meta-Reviewer ;
 Reviewer ::= invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ writes_review::Review hasReviewHistory::PersonalReviewHistory assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper writeReview::Review assignExternalReviewer::ExternalReviewer ;
Event_Creation ::= (has_result::Thing)+ sent_by::Person is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human is_held_before::Time (is_held_in::Trip_day)+ is_held_after::Time is_dated_on::dateTime ;
Meta-Review ::= writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::Activity review_written_by::Reviewer reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer ;
Student ::= earlyRegistration::Boolean ;
 Student ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasConflictOfInterest::Document email::String ;
Poster_Paper ::= hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String hasAuthor::Author acceptedBy::Administrator rejectedBy::Administrator readByMeta-Reviewer::Meta-Reviewer full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer ;
managing_of_conference_process ::= (has_result::Thing)+ sent_by::Person is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human is_held_before::Time (is_held_in::Trip_day)+ is_held_after::Time is_dated_on::dateTime ;
Conference_part ::= Tutorial ;
 Conference_part ::= Track ;
 Conference_part ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Call_for_paper ::= has_authors::Person has_a_date_of_issue::date ;
Conference_www ::= has_a_URL::String ;
Possible_Reviewer ::= PC_Member ;
 Possible_Reviewer ::= reviewerOfPaper::Paper ;
Participant ::= Member ;
 Participant ::= Student ;
 Participant ::= Regular ;
 Participant ::= earlyRegistration::Boolean ;
MeetingRoomPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
SlideSet ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
Rejected_contribution ::= has_a_review::Review ;
Submissions_deadline ::= done_till::date ;
Neutral_Review ::= writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::Activity review_written_by::Reviewer reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer ;
Invited_talk ::= is_given_by::Active_conference_participant ;
ExternalReviewer ::= assignedByReviewer::Reviewer ;
Topic ::= ParallelAndDistributedComputingTopic ;
 Topic ::= WirelessCommunicationsTopic ;
 Topic ::= OperatingTopicsystems ;
 Topic ::= ComputerNetworksTopic ;
 Topic ::= SatelliteAndSpaceCommunicationsTopic ;
 Topic ::= CADTopic ;
 Topic ::= MultimediaTopic ;
 Topic ::= CommunicationsTopic ;
 Topic ::= PowerlineTransmissionTopic ;
 Topic ::= AntennasTopic ;
 Topic ::= PerformanceTopic ;
 Topic ::= SignalProcessingTopic ;
 Topic ::= MicroelectronicsTopic ;
 Topic ::= TestOnlyTopic ;
 Topic ::= RadioCommunicationsTopic ;
 Topic ::= ComputerArchitectureTopic ;
 Topic ::= MedicineTopic ;
 Topic ::= SecurityTopic ;
 Topic ::= MobileComputingTopic ;
 Topic ::= CryptographyTopic ;
 Topic ::= CommunicationTheoryTopic ;
 Topic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event ;
Account ::= registred_by::Person ;
Submission_Template ::= define::Event ;
Event_Tracks ::= define::Event ;
ContactInformation ::= hasCity::String hasStreet::String hasPostalCode::String hasPhone::String ;
Review_expertise ::= has_a_submitted_contribution::Submitted_contribution has_an_expertise::EEnum ;
Event_URL ::= concerned::Event ;
Important_dates ::= is_an_abstract_submission_date::date is_a_full_paper_submission_date::date is_an_ending_date::date is_a_date_of_acceptance_announcement::date is_a_date_of_camera_ready_paper_submission::date is_a_starting_date::date belong_to_a_conference_volume::Conference_volume ;
Submission_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Author_cd_proceedings_included ::= submitPaper::Paper writePaper::Paper writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper ;
ActivePaper ::= RatedPapers ;
 ActivePaper ::= hasRating::ReviewRating ;
AcceptedPaper ::= relatedToEvent::PaperPresentation ;
Session_room ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
Record_of_attendance ::= recieved_by::User used_by::Person submited__by::User (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document ;
TravelGrant ::= providedBy::Organization hasCostCurrency::String hasCostAmount::Integer ;
Review_preference ::= (has_a_topic_or_a_submission_contribution::Thing)+ has_a_degree::Integer ;
Individual_Presentation ::= Invited_Talk ;
 Individual_Presentation ::= Contributed_Talk ;
 Individual_Presentation ::= (presentationOfPaper::Document)+ ;
--------------------metamodels::ifc2x3.bgf--------------------
IfcSoundProperties ::= IsAttenuating::α SoundScale::α SoundValues::α ;
IfcStructuralLoadSingleForce ::= ForceX::α ForceY::α ForceZ::α MomentX::α MomentY::α MomentZ::α ;
IfcRamp ::= ShapeType::α ;
IfcArithmeticOperatorEnum ::= (SUBTRACT::ε) | (MULTIPLY::ε) | (DIVIDE::ε) | (ADD::ε) ;
IfcHeatExchangerTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SHELLANDTUBE::ε) | (PLATE::ε) ;
IfcBuildingStorey ::= Elevation::α ;
IfcElectricalBaseProperties ::= ElectricCurrentType::α InputVoltage::α InputFrequency::α FullLoadCurrent::α MinimumCircuitCurrent::α MaximumPowerInput::α RatedPowerInput::α InputPhase::α ;
IfcOrganizationRelationship ::= Name::α Description::α RelatingOrganization::α (RelatedOrganizations::α)+ ;
IfcAsymmetricIShapeProfileDef ::= TopFlangeWidth::α TopFlangeThickness::α TopFlangeFilletRadius::α CentreOfGravityInY::α ;
IfcTShapeProfileDef ::= Depth::α FlangeWidth::α WebThickness::α FlangeThickness::α FilletRadius::α FlangeEdgeRadius::α WebEdgeRadius::α WebSlope::α FlangeSlope::α CentreOfGravityInY::α ;
IfcFuelProperties ::= CombustionTemperature::α CarbonContent::α LowerHeatingValue::α HigherHeatingValue::α ;
IfcQuantityVolume ::= VolumeValue::α ;
IfcValveTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (STOPCOCK::ε) | (STEAMTRAP::ε) | (SAFETYCUTOFF::ε) | (REGULATING::ε) | (PRESSURERELIEF::ε) | (PRESSUREREDUCING::ε) | (MIXING::ε) | (ISOLATING::ε) | (GASTAP::ε) | (GASCOCK::ε) | (FLUSHING::ε) | (FAUCET::ε) | (DOUBLEREGULATING::ε) | (DOUBLECHECK::ε) | (DRAWOFFCOCK::ε) | (DIVERTING::ε) | (COMMISSIONING::ε) | (CHECK::ε) | (CHANGEOVER::ε) | (ANTIVACUUM::ε) | (AIRRELEASE::ε) ;
IfcShellBasedSurfaceModel ::= (SbsmBoundary::α)+ ;
IfcConstructionResource ::= ResourceIdentifier::α ResourceGroup::α ResourceConsumption::α BaseQuantity::α ;
IfcActorRole ::= Role::α UserDefinedRole::α Description::α ;
IfcRoundedRectangleProfileDef ::= RoundingRadius::α ;
IfcDistributionChamberElementType ::= PredefinedType::α ;
IfcWorkControlTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (PLANNED::ε) | (BASELINE::ε) | (ACTUAL::ε) ;
IfcDerivedUnitElement ::= Unit::α Exponent::α ;
IfcQuantityTime ::= TimeValue::α ;
IfcChamferEdgeFeature ::= Width::α Height::α ;
IfcDefinedSymbol ::= Definition::α Target::α ;
IfcCsgSolid ::= TreeRootExpression::α ;
IfcLine ::= Pnt::α Dir::α ;
IfcTextPath ::= (DOWN::ε) | (UP::ε) | (RIGHT::ε) | (LEFT::ε) ;
IfcUnitAssignment ::= (Units::α)+ ;
IfcMetricValueSelect ::= IfcDateTimeSelectvalue::α IfcTextvalue::α IfcCostValuevalue::α IfcTimeSeriesvalue::α IfcTablevalue::α IfcMeasureWithUnitvalue::α ;
IfcStructuralPlanarAction ::= ProjectedOrTrue::α ;
IfcRelConnectsStructuralMember ::= RelatingStructuralMember::α RelatedStructuralConnection::α AppliedCondition::α AdditionalConditions::α ConditionCoordinateSystem::α SupportedLength::α ;
IfcEdgeFeature ::= FeatureLength::α ;
IfcSectionProperties ::= StartProfile::α EndProfile::α SectionType::α ;
IfcDamperType ::= PredefinedType::α ;
IfcRelAssociatesApproval ::= RelatingApproval::α ;
IfcAsset ::= OriginalValue::α CurrentValue::α TotalReplacementCost::α Owner::α User::α ResponsiblePerson::α IncorporationDate::α DepreciatedValue::α AssetID::α ;
IfcPumpTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (VERTICALTURBINE::ε) | (VERTICALINLINE::ε) | (SPLITCASE::ε) | (ENDSUCTION::ε) | (CIRCULATOR::ε) ;
IfcAddressTypeEnum ::= (USERDEFINED::ε) | (DISTRIBUTIONPOINT::ε) | (HOME::ε) | (SITE::ε) | (OFFICE::ε) ;
IfcStructuralLoad ::= Name::α ;
IfcRelOverridesProperties ::= (OverridingProperties::α)+ ;
IfcRectangleProfileDef ::= XDim::α YDim::α ;
IfcRailingType ::= PredefinedType::α ;
IfcVibrationIsolatorType ::= PredefinedType::α ;
IfcSizeSelect ::= IfcPositiveRatioMeasurevalue::α IfcNormalisedRatioMeasurevalue::α IfcPositiveLengthMeasurevalue::α IfcDescriptiveMeasurevalue::α IfcLengthMeasurevalue::α IfcRatioMeasurevalue::α ;
IfcAnalysisTheoryTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (FULL_NONLINEAR_THEORY::ε) | (THIRD_ORDER_THEORY::ε) | (SECOND_ORDER_THEORY::ε) | (FIRST_ORDER_THEORY::ε) ;
IfcBSplineCurve ::= Degree::α CurveForm::α ClosedCurve::α SelfIntersect::α ControlPointsList::α ;
IfcTimeSeriesSchedule ::= (ApplicableDates::α)+ TimeSeries::α TimeSeriesScheduleType::α ;
IfcCartesianTransformationOperator3D ::= Axis3::α ;
IfcSweptAreaSolid ::= SweptArea::α Position::α ;
IfcSurfaceStyleRefraction ::= RefractionIndex::α DispersionFactor::α ;
IfcTrimmingSelect ::= IfcParameterValuevalue::α IfcCartesianPointvalue::α ;
IfcMove ::= MoveFrom::α MoveTo::α (PunchList::α)+ ;
IfcQuantityLength ::= LengthValue::α ;
IfcControl ::= Controls::α ;
IfcLibraryReference ::= ReferenceIntoLibrary::α ;
IfcFlowMeterType ::= PredefinedType::α ;
IfcOpticalMaterialProperties ::= VisibleTransmittance::α SolarTransmittance::α ThermalIrTransmittance::α ThermalIrEmissivityBack::α ThermalIrEmissivityFront::α VisibleReflectanceBack::α VisibleReflectanceFront::α SolarReflectanceFront::α SolarReflectanceBack::α ;
IfcEvaporativeCoolerType ::= PredefinedType::α ;
IfcPerformanceHistory ::= LifeCyclePhase::α ;
IfcVector ::= Orientation::α Magnitude::α ;
IfcResourceConsumptionEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (NOTOCCUPIED::ε) | (PARTIALLYOCCUPIED::ε) | (OCCUPIED::ε) | (NOTCONSUMED::ε) | (PARTIALLYCONSUMED::ε) | (CONSUMED::ε) ;
IfcRelConnectsWithRealizingElements ::= (RealizingElements::α)+ ConnectionType::α ;
IfcPropertySet ::= (HasProperties::α)+ ;
IfcChillerTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (HEATRECOVERY::ε) | (WATERCOOLED::ε) | (AIRCOOLED::ε) ;
IfcBSplineCurveForm ::= (UNSPECIFIED::ε) | (HYPERBOLIC_ARC::ε) | (PARABOLIC_ARC::ε) | (ELLIPTIC_ARC::ε) | (CIRCULAR_ARC::ε) | (POLYLINE_FORM::ε) ;
IfcAlarmTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (WHISTLE::ε) | (SIREN::ε) | (MANUALPULLBOX::ε) | (LIGHT::ε) | (BREAKGLASSBUTTON::ε) | (BELL::ε) ;
IfcVertexPoint ::= VertexGeometry::α ;
IfcSurfaceCurveSweptAreaSolid ::= StartParam::α EndParam::α Directrix::α ReferenceSurface::α ;
IfcLightSourcePositional ::= Radius::α ConstantAttenuation::α DistanceAttenuation::α QuadricAttenuation::α Position::α ;
IfcSlabTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (BASESLAB::ε) | (LANDING::ε) | (ROOF::ε) | (FLOOR::ε) ;
IfcContextDependentUnit ::= Name::α ;
IfcBuilding ::= ElevationOfRefHeight::α ElevationOfTerrain::α BuildingAddress::α ;
IfcRelConnectsPorts ::= RelatingPort::α RelatedPort::α RealizingElement::α ;
IfcDoor ::= OverallHeight::α OverallWidth::α ;
IfcDuctSilencerType ::= PredefinedType::α ;
IfcCableCarrierSegmentTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (CONDUITSEGMENT::ε) | (CABLETRUNKINGSEGMENT::ε) | (CABLETRAYSEGMENT::ε) | (CABLELADDERSEGMENT::ε) ;
IfcStructuralReaction ::= Causes::α ;
IfcElectricGeneratorTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) ;
IfcDoorStyleOperationEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (ROLLINGUP::ε) | (REVOLVING::ε) | (DOUBLE_DOOR_FOLDING::ε) | (FOLDING_TO_RIGHT::ε) | (FOLDING_TO_LEFT::ε) | (DOUBLE_DOOR_SLIDING::ε) | (SLIDING_TO_RIGHT::ε) | (SLIDING_TO_LEFT::ε) | (DOUBLE_DOOR_DOUBLE_SWING::ε) | (DOUBLE_SWING_RIGHT::ε) | (DOUBLE_SWING_LEFT::ε) | (DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT::ε) | (DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT::ε) | (DOUBLE_DOOR_SINGLE_SWING::ε) | (SINGLE_SWING_RIGHT::ε) | (SINGLE_SWING_LEFT::ε) ;
IfcFillAreaStyleTileSymbolWithStyle ::= Symbol::α ;
IfcCsgPrimitive3D ::= Position::α ;
IfcProductDefinitionShape ::= HasShapeAspects::α ;
IfcPostalAddress ::= InternalLocation::α (AddressLines::α)+ PostalBox::α Town::α Region::α PostalCode::α Country::α ;
IfcStructuralConnection ::= ConnectsStructuralMembers::α AppliedCondition::α ;
IfcRoleEnum ::= (USERDEFINED::ε) | (RESELLER::ε) | (FIELDCONSTRUCTIONMANAGER::ε) | (CONSTRUCTIONMANAGER::ε) | (CONSULTANT::ε) | (OWNER::ε) | (ENGINEER::ε) | (COMISSIONINGENGINEER::ε) | (CIVILENGINEER::ε) | (FACILITIESMANAGER::ε) | (PROJECTMANAGER::ε) | (ELECTRICALENGINEER::ε) | (MECHANICALENGINEER::ε) | (BUILDINGOPERATOR::ε) | (BUILDINGOWNER::ε) | (CLIENT::ε) | (COSTENGINEER::ε) | (STRUCTURALENGINEER::ε) | (ARCHITECT::ε) | (SUBCONTRACTOR::ε) | (CONTRACTOR::ε) | (MANUFACTURER::ε) | (SUPPLIER::ε) ;
IfcPipeSegmentTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SPOOL::ε) | (GUTTER::ε) | (RIGIDSEGMENT::ε) | (FLEXIBLESEGMENT::ε) ;
IfcSlabType ::= PredefinedType::α ;
IfcPhysicalSimpleQuantity ::= Unit::α ;
IfcDoorLiningProperties ::= LiningDepth::α LiningThickness::α ThresholdDepth::α ThresholdThickness::α TransomThickness::α TransomOffset::α LiningOffset::α ThresholdOffset::α CasingThickness::α CasingDepth::α ShapeAspectStyle::α ;
IfcCableSegmentType ::= PredefinedType::α ;
IfcRampTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SPIRAL_RAMP::ε) | (HALF_TURN_RAMP::ε) | (TWO_QUARTER_TURN_RAMP::ε) | (QUARTER_TURN_RAMP::ε) | (TWO_STRAIGHT_RUN_RAMP::ε) | (STRAIGHT_RUN_RAMP::ε) ;
IfcRelFlowControlElements ::= (RelatedControlElements::α)+ RelatingFlowElement::α ;
IfcInternalOrExternalEnum ::= (NOTDEFINED::ε) | (EXTERNAL::ε) | (INTERNAL::ε) ;
IfcRelAssignsToControl ::= RelatingControl::α ;
IfcShapeModel ::= OfShapeAspect::α ;
IfcRelAssociatesClassification ::= RelatingClassification::α ;
IfcPlateTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SHEET::ε) | (CURTAIN_PANEL::ε) ;
IfcProjectedOrTrueLengthEnum ::= (TRUE_LENGTH::ε) | (PROJECTED_LENGTH::ε) ;
IfcElectricGeneratorType ::= PredefinedType::α ;
IfcCostSchedule ::= Status::α ID::α PredefinedType::α SubmittedBy::α PreparedBy::α SubmittedOn::α (TargetUsers::α)+ UpdateDate::α ;
IfcSpecularHighlightSelect ::= IfcSpecularRoughnessvalue::α IfcSpecularExponentvalue::α ;
IfcVibrationIsolatorTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SPRING::ε) | (COMPRESSION::ε) ;
IfcColourOrFactor ::= IfcNormalisedRatioMeasurevalue::α IfcColourRgbvalue::α ;
IfcPropertyTableValue ::= (DefiningValues::α)+ (DefinedValues::α)+ DefiningUnit::α DefinedUnit::α Expression::α ;
IfcActuatorTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (THERMOSTATICACTUATOR::ε) | (PNEUMATICACTUATOR::ε) | (HYDRAULICACTUATOR::ε) | (HANDOPERATEDACTUATOR::ε) | (ELECTRICACTUATOR::ε) ;
IfcPresentationLayerWithStyle ::= LayerOn::α LayerFrozen::α LayerBlocked::α (LayerStyles::α)+ ;
IfcIShapeProfileDef ::= OverallWidth::α OverallDepth::α WebThickness::α FlangeThickness::α FilletRadius::α ;
IfcFilterTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (WATERFILTER::ε) | (STRAINER::ε) | (OILFILTER::ε) | (ODORFILTER::ε) | (AIRPARTICLEFILTER::ε) ;
IfcGroup ::= IsGroupedBy::α ;
IfcDirection ::= DirectionRatios::α ;
IfcCooledBeamTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (PASSIVE::ε) | (ACTIVE::ε) ;
IfcServiceLifeFactorTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (G_MAINTENANCELEVEL::ε) | (F_INUSECONDITIONS::ε) | (E_OUTDOORENVIRONMENT::ε) | (D_INDOORENVIRONMENT::ε) | (C_WORKEXECUTIONLEVEL::ε) | (B_DESIGNLEVEL::ε) | (A_QUALITYOFCOMPONENTS::ε) ;
IfcPolygonalBoundedHalfSpace ::= Position::α PolygonalBoundary::α ;
IfcRectangleHollowProfileDef ::= WallThickness::α InnerFilletRadius::α OuterFilletRadius::α ;
IfcCoilType ::= PredefinedType::α ;
IfcMappedItem ::= MappingSource::α MappingTarget::α ;
IfcAirToAirHeatRecoveryTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (THERMOSIPHONCOILTYPEHEATEXCHANGERS::ε) | (THERMOSIPHONSEALEDTUBEHEATEXCHANGERS::ε) | (TWINTOWERENTHALPYRECOVERYLOOPS::ε) | (HEATPIPE::ε) | (RUNAROUNDCOILLOOP::ε) | (ROTARYWHEEL::ε) | (FIXEDPLATEPARALLELFLOWEXCHANGER::ε) | (FIXEDPLATECROSSFLOWEXCHANGER::ε) | (FIXEDPLATECOUNTERFLOWEXCHANGER::ε) ;
IfcPlateType ::= PredefinedType::α ;
IfcQuantityWeight ::= WeightValue::α ;
IfcProduct ::= ReferencedBy::α ObjectPlacement::α Representation::α ReferencedInStructures::α ContainedInStructure::α ;
IfcProxy ::= ProxyType::α Tag::α ;
IfcFanType ::= PredefinedType::α ;
IfcDuctSegmentType ::= PredefinedType::α ;
IfcMaterialLayer ::= LayerThickness::α IsVentilated::α ToMaterialLayerSet::α Material::α ;
IfcMeasureWithUnit ::= ValueComponent::α UnitComponent::α ;
IfcCircleHollowProfileDef ::= WallThickness::α ;
IfcSIUnit ::= Prefix::α Name::α ;
IfcTextStyleTextModel ::= TextAlign::α TextDecoration::α TextTransform::α TextIndent::α LetterSpacing::α WordSpacing::α LineHeight::α ;
IfcStructuralLoadLinearForce ::= LinearForceX::α LinearForceY::α LinearForceZ::α LinearMomentX::α LinearMomentY::α LinearMomentZ::α ;
IfcColourRgb ::= Red::α Green::α Blue::α ;
IfcLampTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TUNGSTENFILAMENT::ε) | (METALHALIDE::ε) | (HIGHPRESSURESODIUM::ε) | (HIGHPRESSUREMERCURY::ε) | (FLUORESCENT::ε) | (COMPACTFLUORESCENT::ε) ;
IfcLaborResource ::= SkillSet::α ;
IfcDimensionExtentUsage ::= (TARGET::ε) | (ORIGIN::ε) ;
IfcGeometricRepresentationSubContext ::= TargetScale::α TargetView::α UserDefinedTargetView::α ParentContext::α ;
IfcRelDefinesByType ::= RelatingType::α ;
IfcCircle ::= Radius::α ;
IfcSurfaceTextureEnum ::= (NOTDEFINED::ε) | (TRANSPARENCYMAP::ε) | (TEXTURE::ε) | (SPECULAR::ε) | (SHININESS::ε) | (SELFILLUMINATION::ε) | (REFLECTION::ε) | (OPACITY::ε) | (BUMP::ε) ;
IfcTrapeziumProfileDef ::= BottomXDim::α TopXDim::α YDim::α TopXOffset::α ;
IfcDuctSilencerTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (ROUND::ε) | (RECTANGULAR::ε) | (FLATOVAL::ε) ;
IfcRelAssociatesProfileProperties ::= ProfileOrientation::α RelatingProfileProperties::α ProfileSectionLocation::α ;
IfcManifoldSolidBrep ::= Outer::α ;
IfcPropertyBoundedValue ::= UpperBoundValue::α LowerBoundValue::α Unit::α ;
IfcSite ::= RefLatitude::α RefLongitude::α RefElevation::α LandTitleNumber::α SiteAddress::α ;
IfcConstructionMaterialResource ::= (Suppliers::α)+ UsageRatio::α ;
IfcGrid ::= (UAxes::α)+ (VAxes::α)+ (WAxes::α)+ ;
IfcAirToAirHeatRecoveryType ::= PredefinedType::α ;
IfcZShapeProfileDef ::= Depth::α FlangeWidth::α WebThickness::α FlangeThickness::α FilletRadius::α EdgeRadius::α ;
IfcRepresentationMap ::= MapUsage::α MappingOrigin::α MappedRepresentation::α ;
IfcApproval ::= Description::α ApprovalStatus::α ApprovalLevel::α ApprovalQualifier::α Name::α Identifier::α Actors::α IsRelatedWith::α Relates::α ApprovalDateTime::α ;
IfcDistributionFlowElement ::= HasControlElements::α ;
IfcMaterialProperties ::= Material::α ;
IfcProtectiveDeviceType ::= PredefinedType::α ;
IfcOccupantTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TENANT::ε) | (OWNER::ε) | (LETTINGAGENT::ε) | (LESSOR::ε) | (LESSEE::ε) | (ASSIGNOR::ε) | (ASSIGNEE::ε) ;
IfcBoilerType ::= PredefinedType::α ;
IfcConstraintRelationship ::= Name::α Description::α RelatingConstraint::α (RelatedConstraints::α)+ ;
IfcOrganization ::= Id::α Name::α Description::α IsRelatedBy::α Relates::α Engages::α (Roles::α)+ (Addresses::α)+ ;
IfcSpaceHeaterTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (UNITHEATER::ε) | (FINNEDTUBEUNIT::ε) | (BASEBOARDHEATER::ε) | (CONVECTOR::ε) | (TUBULARRADIATOR::ε) | (PANELRADIATOR::ε) | (SECTIONALRADIATOR::ε) ;
IfcColumnType ::= PredefinedType::α ;
IfcMechanicalConcreteMaterialProperties ::= CompressiveStrength::α MaxAggregateSize::α AdmixturesDescription::α Workability::α ProtectivePoreRatio::α WaterImpermeability::α ;
IfcDateAndTime ::= DateComponent::α TimeComponent::α ;
IfcCompositeCurve ::= (Segments::α)+ SelfIntersect::α ;
IfcFooting ::= PredefinedType::α ;
IfcCartesianPoint ::= Coordinates::α ;
IfcChangeActionEnum ::= (MODIFIEDDELETED::ε) | (MODIFIEDADDED::ε) | (DELETED::ε) | (ADDED::ε) | (MODIFIED::ε) | (NOCHANGE::ε) ;
IfcCraneRailFShapeProfileDef ::= OverallHeight::α HeadWidth::α Radius::α HeadDepth2::α HeadDepth3::α WebThickness::α BaseDepth1::α BaseDepth2::α CentreOfGravityInY::α ;
IfcTimeSeries ::= Name::α Description::α TimeSeriesDataType::α DataOrigin::α UserDefinedDataOrigin::α DocumentedBy::α StartTime::α EndTime::α Unit::α ;
IfcReinforcingBar ::= NominalDiameter::α CrossSectionArea::α BarLength::α BarRole::α BarSurface::α ;
IfcTubeBundleTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (FINNED::ε) ;
IfcSectionReinforcementProperties ::= LongitudinalStartPosition::α LongitudinalEndPosition::α TransversePosition::α ReinforcementRole::α SectionDefinition::α (CrossSectionReinforcementDefinitions::α)+ ;
IfcRelAssignsToProduct ::= RelatingProduct::α ;
IfcStructuralLoadSingleForceWarping ::= WarpingMoment::α ;
IfcComplexProperty ::= (HasProperties::α)+ UsageName::α ;
IfcElementarySurface ::= Position::α ;
IfcPropertyListValue ::= (ListValues::α)+ Unit::α ;
IfcConic ::= Position::α ;
IfcRelConnectsElements ::= ConnectionGeometry::α RelatingElement::α RelatedElement::α ;
IfcThermalLoadTypeEnum ::= (NOTDEFINED::ε) | (RADIANT::ε) | (LATENT::ε) | (SENSIBLE::ε) ;
IfcRoundedEdgeFeature ::= Radius::α ;
IfcReinforcingElement ::= SteelGrade::α ;
IfcRibPlateDirectionEnum ::= (DIRECTION_Y::ε) | (DIRECTION_X::ε) ;
IfcTransformerTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (VOLTAGE::ε) | (FREQUENCY::ε) | (CURRENT::ε) ;
IfcStairFlightTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (FREEFORM::ε) | (CURVED::ε) | (SPIRAL::ε) | (WINDER::ε) | (STRAIGHT::ε) ;
IfcOutletTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (POWEROUTLET::ε) | (COMMUNICATIONSOUTLET::ε) | (AUDIOVISUALOUTLET::ε) ;
IfcFireSuppressionTerminalType ::= PredefinedType::α ;
IfcOpeningElement ::= HasFillings::α ;
IfcSurfaceStyle ::= Styles::α Side::α ;
IfcEdgeLoop ::= (EdgeList::α)+ ;
IfcCurveStyleFontAndScaling ::= Name::α CurveFontScaling::α CurveFont::α ;
IfcAirTerminalBoxTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (VARIABLEFLOWPRESSUREINDEPENDANT::ε) | (VARIABLEFLOWPRESSUREDEPENDANT::ε) | (CONSTANTFLOW::ε) ;
IfcRepresentationItem ::= StyledByItem::α ;
IfcBuildingElementProxyType ::= PredefinedType::α ;
IfcRailingTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (BALUSTRADE::ε) | (GUARDRAIL::ε) | (HANDRAIL::ε) ;
IfcBoundingBox ::= XDim::α YDim::α ZDim::α Corner::α ;
IfcCompositeProfileDef ::= Profiles::α Label::α ;
IfcCableCarrierFittingTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TEE::ε) | (REDUCER::ε) | (CROSS::ε) | (BEND::ε) ;
IfcPipeSegmentType ::= PredefinedType::α ;
IfcLibraryInformation ::= Name::α Version::α Publisher::α VersionDate::α (LibraryReference::α)+ ;
IfcActor ::= IsActingUpon::α TheActor::α ;
IfcEvaporativeCoolerTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (INDIRECTDIRECTCOMBINATION::ε) | (INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER::ε) | (INDIRECTEVAPORATIVEWETCOIL::ε) | (INDIRECTEVAPORATIVEPACKAGEAIRCOOLER::ε) | (DIRECTEVAPORATIVEAIRWASHER::ε) | (DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER::ε) | (DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER::ε) | (DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER::ε) | (DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER::ε) ;
IfcTextureCoordinate ::= AnnotatedSurface::α ;
IfcPlanarExtent ::= SizeInX::α SizeInY::α ;
IfcGeometricRepresentationContext ::= CoordinateSpaceDimension::α Precision::α HasSubContexts::α WorldCoordinateSystem::α TrueNorth::α ;
IfcPipeFittingTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TRANSITION::ε) | (OBSTRUCTION::ε) | (JUNCTION::ε) | (EXIT::ε) | (ENTRY::ε) | (CONNECTOR::ε) | (BEND::ε) ;
IfcTerminatorSymbol ::= AnnotatedCurve::α ;
IfcTelecomAddress ::= (TelephoneNumbers::α)+ (FacsimileNumbers::α)+ PagerNumber::α (ElectronicMailAddresses::α)+ WWWHomePageURL::α ;
IfcSurfaceStyleRendering ::= Transparency::α ReflectanceMethod::α DiffuseColour::α TransmissionColour::α DiffuseTransmissionColour::α ReflectionColour::α SpecularColour::α SpecularHighlight::α ;
IfcObjectPlacement ::= PlacesObject::α ReferencedByPlacements::α ;
IfcPlacement ::= Location::α ;
IfcAirTerminalTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (LINEARDIFFUSER::ε) | (LINEARGRILLE::ε) | (IRIS::ε) | (EYEBALL::ε) | (DIFFUSER::ε) | (REGISTER::ε) | (GRILLE::ε) ;
IfcProperty ::= Name::α Description::α PropertyForDependance::α PropertyDependsOn::α PartOfComplex::α ;
IfcConversionBasedUnit ::= ConversionFactor::α Name::α ;
IfcActuatorType ::= PredefinedType::α ;
IfcConnectionPointEccentricity ::= EccentricityInX::α EccentricityInY::α EccentricityInZ::α ;
IfcLightEmissionSourceEnum ::= (NOTDEFINED::ε) | (TUNGSTENFILAMENT::ε) | (METALHALIDE::ε) | (MAINVOLTAGEHALOGEN::ε) | (LOWVOLTAGEHALOGEN::ε) | (LOWPRESSURESODIUM::ε) | (LIGHTEMITTINGDIODE::ε) | (HIGHPRESSURESODIUM::ε) | (HIGHPRESSUREMERCURY::ε) | (FLUORESCENT::ε) | (COMPACTFLUORESCENT::ε) ;
IfcInventoryTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (FURNITUREINVENTORY::ε) | (SPACEINVENTORY::ε) | (ASSETINVENTORY::ε) ;
IfcRelAssociatesMaterial ::= RelatingMaterial::α ;
IfcProcedure ::= ProcedureID::α ProcedureType::α UserDefinedProcedureType::α ;
IfcRightCircularCylinder ::= Height::α Radius::α ;
IfcPileConstructionEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (PREFAB_STEEL::ε) | (PRECAST_CONCRETE::ε) | (COMPOSITE::ε) | (CAST_IN_PLACE::ε) ;
IfcApplication ::= Version::α ApplicationFullName::α ApplicationIdentifier::α ApplicationDeveloper::α ;
IfcPumpType ::= PredefinedType::α ;
IfcFeatureElementAddition ::= ProjectsElements::α ;
IfcMechanicalFastener ::= NominalDiameter::α NominalLength::α ;
IfcPolyline ::= Points::α ;
IfcRelDefines ::= (RelatedObjects::α)+ ;
IfcRelAssociatesDocument ::= RelatingDocument::α ;
IfcOccupant ::= PredefinedType::α ;
IfcGlobalOrLocalEnum ::= (LOCAL_COORDS::ε) | (GLOBAL_COORDS::ε) ;
IfcConnectionCurveGeometry ::= CurveOnRelatingElement::α CurveOnRelatedElement::α ;
IfcRationalBezierCurve ::= WeightsData::α ;
IfcDerivedUnit ::= UnitType::α UserDefinedType::α (Elements::α)+ ;
IfcStructuralConnectionCondition ::= Name::α ;
IfcAirTerminalType ::= PredefinedType::α ;
IfcCurrencyEnum ::= (NOK::ε) | (ZWD::ε) | (ZAR::ε) | (XEU::ε) | (VND::ε) | (VEB::ε) | (USD::ε) | (TWD::ε) | (TTD::ε) | (TRL::ε) | (THB::ε) | (SKP::ε) | (SGD::ε) | (SEK::ε) | (SCR::ε) | (SAR::ε) | (RUR::ε) | (QAR::ε) | (PTN::ε) | (PLN::ε) | (PKR::ε) | (PHP::ε) | (PGK::ε) | (OMR::ε) | (NZD::ε) | (NLG::ε) | (MYR::ε) | (MXN::ε) | (MUR::ε) | (MTL::ε) | (LUF::ε) | (LKR::ε) | (KYD::ε) | (KWD::ε) | (KRW::ε) | (KES::ε) | (JPY::ε) | (JOD::ε) | (JMD::ε) | (ITL::ε) | (IRP::ε) | (INR::ε) | (ILS::ε) | (IDR::ε) | (ICK::ε) | (HUF::ε) | (HKD::ε) | (GRX::ε) | (GMD::ε) | (GIP::ε) | (GBP::ε) | (FRF::ε) | (FKP::ε) | (FJD::ε) | (FIM::ε) | (FAK::ε) | (EUR::ε) | (EST::ε) | (EGL::ε) | (DKK::ε) | (DEM::ε) | (DDP::ε) | (CZK::ε) | (CYS::ε) | (CNY::ε) | (CLP::ε) | (CHF::ε) | (CBD::ε) | (CAD::ε) | (BZD::ε) | (BWP::ε) | (BSD::ε) | (BRL::ε) | (BND::ε) | (BMD::ε) | (BHD::ε) | (BGL::ε) | (BEG::ε) | (BBD::ε) | (AUD::ε) | (ATS::ε) | (AES::ε) | (AED::ε) ;
IfcPropertyEnumeratedValue ::= (EnumerationValues::α)+ EnumerationReference::α ;
IfcDraughtingCalloutRelationship ::= Name::α Description::α RelatingDraughtingCallout::α RelatedDraughtingCallout::α ;
IfcSweptSurface ::= SweptCurve::α Position::α ;
IfcElectricMotorType ::= PredefinedType::α ;
IfcTrimmedCurve ::= SenseAgreement::α MasterRepresentation::α Trim1::α Trim2::α BasisCurve::α ;
IfcFillAreaStyleTiles ::= TilingPattern::α (Tiles::α)+ TilingScale::α ;
IfcTextureCoordinateGenerator ::= (Parameter::α)+ Mode::α ;
IfcPointOnSurface ::= PointParameterU::α PointParameterV::α BasisSurface::α ;
IfcPermit ::= PermitID::α ;
IfcTypeObject ::= ObjectTypeOf::α (HasPropertySets::α)+ ApplicableOccurrence::α ;
IfcPreDefinedItem ::= Name::α ;
IfcMaterialLayerSet ::= (MaterialLayers::α)+ LayerSetName::α ;
IfcFillAreaStyleHatching ::= StartOfNextHatchLine::α HatchLineAppearance::α PointOfReferenceHatchLine::α PatternStart::α HatchLineAngle::α ;
IfcDoorStyle ::= OperationType::α ConstructionType::α ParameterTakesPrecedence::α Sizeable::α ;
IfcRelCoversSpaces ::= RelatedSpace::α (RelatedCoverings::α)+ ;
IfcSanitaryTerminalTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (WCSEAT::ε) | (WASHHANDBASIN::ε) | (URINAL::ε) | (TOILETPAN::ε) | (SANITARYFOUNTAIN::ε) | (SINK::ε) | (SHOWER::ε) | (CISTERN::ε) | (BIDET::ε) | (BATH::ε) ;
IfcTransportElement ::= OperationType::α CapacityByWeight::α CapacityByNumber::α ;
IfcDimensionalExponents ::= LengthExponent::α MassExponent::α TimeExponent::α ElectricCurrentExponent::α ThermodynamicTemperatureExponent::α AmountOfSubstanceExponent::α LuminousIntensityExponent::α ;
IfcBenchmarkEnum ::= (NOTEQUALTO::ε) | (EQUALTO::ε) | (LESSTHANOREQUALTO::ε) | (LESSTHAN::ε) | (GREATERTHANOREQUALTO::ε) | (GREATERTHAN::ε) ;
IfcDirectionSenseEnum ::= (NEGATIVE::ε) | (POSITIVE::ε) ;
IfcAppliedValueSelect ::= IfcMonetaryMeasurevalue::α IfcRatioMeasurevalue::α IfcMeasureWithUnitvalue::α ;
IfcStairFlight ::= NumberOfRiser::α NumberOfTreads::α RiserHeight::α TreadLength::α ;
IfcDamperTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (FUMEHOODEXHAUST::ε) | (BALANCINGDAMPER::ε) | (GRAVITYRELIEFDAMPER::ε) | (GRAVITYDAMPER::ε) | (BLASTDAMPER::ε) | (RELIEFDAMPER::ε) | (BACKDRAFTDAMPER::ε) | (FIRESMOKEDAMPER::ε) | (SMOKEDAMPER::ε) | (FIREDAMPER::ε) | (CONTROLDAMPER::ε) ;
IfcTendon ::= PredefinedType::α NominalDiameter::α CrossSectionArea::α TensionForce::α PreStress::α FrictionCoefficient::α AnchorageSlip::α MinCurvatureRadius::α ;
IfcStructuralLoadPlanarForce ::= PlanarForceX::α PlanarForceY::α PlanarForceZ::α ;
IfcPermeableCoveringProperties ::= OperationType::α PanelPosition::α FrameDepth::α FrameThickness::α ShapeAspectStyle::α ;
IfcOffsetCurve3D ::= Distance::α SelfIntersect::α BasisCurve::α RefDirection::α ;
IfcMotorConnectionType ::= PredefinedType::α ;
IfcWorkControl ::= Identifier::α Purpose::α Duration::α TotalFloat::α WorkControlType::α UserDefinedControlType::α CreationDate::α (Creators::α)+ StartTime::α FinishTime::α ;
IfcAnnotationFillArea ::= OuterBoundary::α (InnerBoundaries::α)+ ;
IfcReferencesValueDocument ::= Name::α Description::α ReferencedDocument::α (ReferencingValues::α)+ ;
IfcLightDistributionData ::= MainPlaneAngle::α (SecondaryPlaneAngle::α)+ (LuminousIntensity::α)+ ;
IfcSubedge ::= ParentEdge::α ;
IfcWindow ::= OverallHeight::α OverallWidth::α ;
IfcActionRequest ::= RequestID::α ;
IfcCurtainWallTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) ;
IfcTextStyleWithBoxCharacteristics ::= BoxHeight::α BoxWidth::α BoxSlantAngle::α BoxRotateAngle::α CharacterSpacing::α ;
IfcRelInteractionRequirements ::= DailyInteraction::α ImportanceRating::α LocationOfInteraction::α RelatedSpaceProgram::α RelatingSpaceProgram::α ;
IfcAddress ::= Purpose::α Description::α UserDefinedPurpose::α OfPerson::α OfOrganization::α ;
IfcValue ::= IfcAbsorbedDoseMeasurevalue::α IfcAccelerationMeasurevalue::α IfcAmountOfSubstanceMeasurevalue::α IfcAngularVelocityMeasurevalue::α IfcAreaMeasurevalue::α IfcBooleanvalue::α IfcContextDependentMeasurevalue::α IfcCountMeasurevalue::α IfcCurvatureMeasurevalue::α IfcDescriptiveMeasurevalue::α IfcDoseEquivalentMeasurevalue::α IfcDynamicViscosityMeasurevalue::α IfcElectricCapacitanceMeasurevalue::α IfcElectricChargeMeasurevalue::α IfcElectricConductanceMeasurevalue::α IfcElectricCurrentMeasurevalue::α IfcElectricResistanceMeasurevalue::α IfcElectricVoltageMeasurevalue::α IfcEnergyMeasurevalue::α IfcForceMeasurevalue::α IfcFrequencyMeasurevalue::α IfcHeatFluxDensityMeasurevalue::α IfcHeatingValueMeasurevalue::α IfcIdentifiervalue::α IfcIlluminanceMeasurevalue::α IfcInductanceMeasurevalue::α IfcIntegervalue::α IfcIntegerCountRateMeasurevalue::α IfcIonConcentrationMeasurevalue::α IfcIsothermalMoistureCapacityMeasurevalue::α IfcKinematicViscosityMeasurevalue::α IfcLabelvalue::α IfcPositiveLengthMeasurevalue::α IfcLengthMeasurevalue::α IfcLinearForceMeasurevalue::α IfcLinearMomentMeasurevalue::α IfcLinearStiffnessMeasurevalue::α IfcLinearVelocityMeasurevalue::α IfcLogicalvalue::α IfcLuminousFluxMeasurevalue::α IfcLuminousIntensityDistributionMeasurevalue::α IfcLuminousIntensityMeasurevalue::α IfcMagneticFluxDensityMeasurevalue::α IfcMagneticFluxMeasurevalue::α IfcMassDensityMeasurevalue::α IfcMassFlowRateMeasurevalue::α IfcMassMeasurevalue::α IfcMassPerLengthMeasurevalue::α IfcModulusOfElasticityMeasurevalue::α IfcModulusOfLinearSubgradeReactionMeasurevalue::α IfcModulusOfRotationalSubgradeReactionMeasurevalue::α IfcModulusOfSubgradeReactionMeasurevalue::α IfcMoistureDiffusivityMeasurevalue::α IfcMolecularWeightMeasurevalue::α IfcMomentOfInertiaMeasurevalue::α IfcMonetaryMeasurevalue::α IfcNormalisedRatioMeasurevalue::α IfcNumericMeasurevalue::α IfcPHMeasurevalue::α IfcParameterValuevalue::α IfcPlanarForceMeasurevalue::α IfcPositivePlaneAngleMeasurevalue::α IfcPlaneAngleMeasurevalue::α IfcPositiveRatioMeasurevalue::α IfcPowerMeasurevalue::α IfcPressureMeasurevalue::α IfcRadioActivityMeasurevalue::α IfcRatioMeasurevalue::α IfcRealvalue::α IfcRotationalFrequencyMeasurevalue::α IfcRotationalMassMeasurevalue::α IfcRotationalStiffnessMeasurevalue::α IfcSectionModulusMeasurevalue::α IfcSectionalAreaIntegralMeasurevalue::α IfcShearModulusMeasurevalue::α IfcSolidAngleMeasurevalue::α IfcSoundPowerMeasurevalue::α IfcSoundPressureMeasurevalue::α IfcSpecificHeatCapacityMeasurevalue::α IfcTemperatureGradientMeasurevalue::α IfcTextvalue::α IfcThermalAdmittanceMeasurevalue::α IfcThermalConductivityMeasurevalue::α IfcThermalExpansionCoefficientMeasurevalue::α IfcThermalResistanceMeasurevalue::α IfcThermalTransmittanceMeasurevalue::α IfcThermodynamicTemperatureMeasurevalue::α IfcTimeMeasurevalue::α IfcTimeStampvalue::α IfcTorqueMeasurevalue::α IfcVaporPermeabilityMeasurevalue::α IfcVolumeMeasurevalue::α IfcVolumetricFlowRateMeasurevalue::α IfcWarpingConstantMeasurevalue::α IfcWarpingMomentMeasurevalue::α ;
IfcGasTerminalTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (GASBURNER::ε) | (GASBOOSTER::ε) | (GASAPPLIANCE::ε) ;
IfcDocumentReference ::= ReferenceToDocument::α ;
IfcSequenceEnum ::= (NOTDEFINED::ε) | (FINISH_FINISH::ε) | (FINISH_START::ε) | (START_FINISH::ε) | (START_START::ε) ;
IfcElectricTimeControlTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (RELAY::ε) | (TIMEDELAY::ε) | (TIMECLOCK::ε) ;
IfcOffsetCurve2D ::= Distance::α SelfIntersect::α BasisCurve::α ;
IfcGeometricSet ::= (Elements::α)+ ;
IfcLightIntensityDistribution ::= (DistributionData::α)+ LightDistributionCurve::α ;
IfcDocumentInformationRelationship ::= RelatingDocument::α (RelatedDocuments::α)+ RelationshipType::α ;
IfcFace ::= (Bounds::α)+ ;
IfcIrregularTimeSeriesValue ::= (ListValues::α)+ TimeStamp::α ;
IfcHumidifierTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (ASSISTEDSTEAM::ε) | (ASSISTEDBUTANE::ε) | (ASSISTEDPROPANE::ε) | (ASSISTEDNATURALGAS::ε) | (ASSISTEDELECTRIC::ε) | (ADIABATICCOMPRESSEDAIRNOZZLE::ε) | (ADIABATICRIGIDMEDIA::ε) | (ADIABATICULTRASONIC::ε) | (ADIABATICATOMIZING::ε) | (ADIABATICWETTEDELEMENT::ε) | (ADIABATICPAN::ε) | (ADIABATICAIRWASHER::ε) | (STEAMINJECTION::ε) ;
IfcPresentationStyleAssignment ::= (Styles::α)+ ;
IfcHalfSpaceSolid ::= BaseSurface::α AgreementFlag::α ;
IfcConnectionPointGeometry ::= PointOnRelatingElement::α PointOnRelatedElement::α ;
IfcTimeSeriesScheduleTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (DAILY::ε) | (WEEKLY::ε) | (MONTHLY::ε) | (ANNUAL::ε) ;
IfcDerivedUnitEnum ::= (USERDEFINED::ε) | (WARPINGMOMENTUNIT::ε) | (WARPINGCONSTANTUNIT::ε) | (THERMALEXPANSIONCOEFFICIENTUNIT::ε) | (TEMPERATUREGRADIENTUNIT::ε) | (SOUNDPRESSUREUNIT::ε) | (SOUNDPOWERUNIT::ε) | (SECTIONMODULUSUNIT::ε) | (SECTIONAREAINTEGRALUNIT::ε) | (ROTATIONALMASSUNIT::ε) | (PHUNIT::ε) | (MODULUSOFROTATIONALSUBGRADEREACTIONUNIT::ε) | (MODULUSOFLINEARSUBGRADEREACTIONUNIT::ε) | (MASSPERLENGTHUNIT::ε) | (LUMINOUSINTENSITYDISTRIBUTIONUNIT::ε) | (IONCONCENTRATIONUNIT::ε) | (HEATINGVALUEUNIT::ε) | (CURVATUREUNIT::ε) | (ACCELERATIONUNIT::ε) | (MODULUSOFSUBGRADEREACTIONUNIT::ε) | (ROTATIONALSTIFFNESSUNIT::ε) | (LINEARSTIFFNESSUNIT::ε) | (SHEARMODULUSUNIT::ε) | (MODULUSOFELASTICITYUNIT::ε) | (PLANARFORCEUNIT::ε) | (LINEARFORCEUNIT::ε) | (LINEARMOMENTUNIT::ε) | (MOMENTOFINERTIAUNIT::ε) | (TORQUEUNIT::ε) | (ROTATIONALFREQUENCYUNIT::ε) | (VOLUMETRICFLOWRATEUNIT::ε) | (VAPORPERMEABILITYUNIT::ε) | (THERMALTRANSMITTANCEUNIT::ε) | (THERMALRESISTANCEUNIT::ε) | (THERMALCONDUCTANCEUNIT::ε) | (THERMALADMITTANCEUNIT::ε) | (SPECIFICHEATCAPACITYUNIT::ε) | (MOLECULARWEIGHTUNIT::ε) | (MOISTUREDIFFUSIVITYUNIT::ε) | (MASSFLOWRATEUNIT::ε) | (MASSDENSITYUNIT::ε) | (LINEARVELOCITYUNIT::ε) | (KINEMATICVISCOSITYUNIT::ε) | (ISOTHERMALMOISTURECAPACITYUNIT::ε) | (INTEGERCOUNTRATEUNIT::ε) | (HEATFLUXDENSITYUNIT::ε) | (DYNAMICVISCOSITYUNIT::ε) | (COMPOUNDPLANEANGLEUNIT::ε) | (ANGULARVELOCITYUNIT::ε) ;
IfcEvaporatorTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SHELLANDCOIL::ε) | (FLOODEDSHELLANDTUBE::ε) | (DIRECTEXPANSIONBRAZEDPLATE::ε) | (DIRECTEXPANSIONTUBEINTUBE::ε) | (DIRECTEXPANSIONSHELLANDTUBE::ε) ;
IfcWindowLiningProperties ::= LiningDepth::α LiningThickness::α TransomThickness::α MullionThickness::α FirstTransomOffset::α SecondTransomOffset::α FirstMullionOffset::α SecondMullionOffset::α ShapeAspectStyle::α ;
IfcRegularTimeSeries ::= (Values::α)+ TimeStep::α ;
IfcExtendedMaterialProperties ::= Description::α Name::α (ExtendedProperties::α)+ ;
IfcWindowPanelPositionEnum ::= (NOTDEFINED::ε) | (TOP::ε) | (BOTTOM::ε) | (RIGHT::ε) | (MIDDLE::ε) | (LEFT::ε) ;
IfcFilterType ::= PredefinedType::α ;
IfcEllipse ::= SemiAxis1::α SemiAxis2::α ;
IfcRoofTypeEnum ::= (NOTDEFINED::ε) | (FREEFORM::ε) | (DOME_ROOF::ε) | (PAVILION_ROOF::ε) | (BUTTERFLY_ROOF::ε) | (RAINBOW_ROOF::ε) | (BARREL_ROOF::ε) | (MANSARD_ROOF::ε) | (GAMBREL_ROOF::ε) | (HIPPED_GABLE_ROOF::ε) | (HIP_ROOF::ε) | (GABLE_ROOF::ε) | (SHED_ROOF::ε) | (FLAT_ROOF::ε) ;
IfcSphere ::= Radius::α ;
IfcRelAssociatesLibrary ::= RelatingLibrary::α ;
IfcHygroscopicMaterialProperties ::= UpperVaporResistanceFactor::α LowerVaporResistanceFactor::α IsothermalMoistureCapacity::α VaporPermeability::α MoistureDiffusivity::α ;
IfcPlanarBox ::= Placement::α ;
IfcLightSource ::= Name::α AmbientIntensity::α Intensity::α LightColour::α ;
IfcStructuralAnalysisModel ::= OrientationOf2DPlane::α (LoadedBy::α)+ (HasResults::α)+ PredefinedType::α ;
IfcStructuralLoadSingleDisplacement ::= DisplacementX::α DisplacementY::α DisplacementZ::α RotationalDisplacementRX::α RotationalDisplacementRY::α RotationalDisplacementRZ::α ;
IfcCurveBoundedPlane ::= BasisSurface::α OuterBoundary::α (InnerBoundaries::α)+ ;
IfcStructuralSurfaceMember ::= PredefinedType::α Thickness::α ;
IfcQuantityCount ::= CountValue::α ;
IfcRelSpaceBoundary ::= PhysicalOrVirtualBoundary::α InternalOrExternalBoundary::α RelatingSpace::α RelatedBuildingElement::α ConnectionGeometry::α ;
IfcDoorPanelOperationEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (ROLLINGUP::ε) | (REVOLVING::ε) | (FOLDING::ε) | (SLIDING::ε) | (DOUBLE_ACTING::ε) | (SWINGING::ε) ;
IfcLampType ::= PredefinedType::α ;
IfcProjectOrderTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (WORKORDER::ε) | (PURCHASEORDER::ε) | (MOVEORDER::ε) | (MAINTENANCEWORKORDER::ε) | (CHANGEORDER::ε) ;
IfcAnnotationFillAreaOccurrence ::= FillStyleTarget::α GlobalOrLocal::α ;
IfcArbitraryClosedProfileDef ::= OuterCurve::α ;
IfcScheduleTimeControl ::= ScheduleDuration::α ActualDuration::α RemainingTime::α FreeFloat::α TotalFloat::α IsCritical::α StartFloat::α FinishFloat::α Completion::α ScheduleTimeControlAssigned::α ActualStart::α EarlyStart::α LateStart::α ScheduleStart::α ActualFinish::α EarlyFinish::α LateFinish::α ScheduleFinish::α StatusTime::α ;
IfcBoundaryNodeConditionWarping ::= WarpingStiffness::α ;
IfcBeamTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (T_BEAM::ε) | (LINTEL::ε) | (JOIST::ε) | (BEAM::ε) ;
IfcDoorStyleConstructionEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (PLASTIC::ε) | (ALUMINIUM_PLASTIC::ε) | (ALUMINIUM_WOOD::ε) | (WOOD::ε) | (STEEL::ε) | (HIGH_GRADE_STEEL::ε) | (ALUMINIUM::ε) ;
IfcMaterial ::= HasRepresentation::α ClassifiedAs::α Name::α ;
IfcPhysicalOrVirtualEnum ::= (NOTDEFINED::ε) | (VIRTUAL::ε) | (PHYSICAL::ε) ;
IfcWasteTerminalTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (WASTETRAP::ε) | (WASTEDISPOSALUNIT::ε) | (ROOFDRAIN::ε) | (PETROLINTERCEPTOR::ε) | (OILINTERCEPTOR::ε) | (GREASEINTERCEPTOR::ε) | (GULLYTRAP::ε) | (GULLYSUMP::ε) | (FLOORWASTE::ε) | (FLOORTRAP::ε) ;
IfcJunctionBoxType ::= PredefinedType::α ;
IfcRibPlateProfileProperties ::= Thickness::α RibHeight::α RibWidth::α RibSpacing::α Direction::α ;
IfcOneDirectionRepeatFactor ::= RepeatFactor::α ;
IfcBoundaryNodeCondition ::= LinearStiffnessX::α LinearStiffnessY::α LinearStiffnessZ::α RotationalStiffnessX::α RotationalStiffnessY::α RotationalStiffnessZ::α ;
IfcRelConnectsStructuralActivity ::= RelatingElement::α RelatedStructuralActivity::α ;
IfcCompressorType ::= PredefinedType::α ;
IfcWaterProperties ::= IsPotable::α Hardness::α AlkalinityConcentration::α AcidityConcentration::α ImpuritiesContent::α PHLevel::α DissolvedSolidsContent::α ;
IfcRampFlightTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SPIRAL::ε) | (STRAIGHT::ε) ;
IfcEnvironmentalImpactCategoryEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TRANSPORTATION::ε) | (MANUFACTURE::ε) | (INSTALLATION::ε) | (EXTRACTION::ε) | (DISPOSAL::ε) | (COMBINEDVALUE::ε) ;
IfcElectricHeaterTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (ELECTRICMATHEATER::ε) | (ELECTRICCABLEHEATER::ε) | (ELECTRICPOINTHEATER::ε) ;
IfcSwitchingDeviceTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TOGGLESWITCH::ε) | (SWITCHDISCONNECTOR::ε) | (STARTER::ε) | (EMERGENCYSTOP::ε) | (CONTACTOR::ε) ;
IfcFlowInstrumentType ::= PredefinedType::α ;
IfcRelContainedInSpatialStructure ::= (RelatedElements::α)+ RelatingStructure::α ;
IfcEllipseProfileDef ::= SemiAxis1::α SemiAxis2::α ;
IfcCalendarDate ::= DayComponent::α MonthComponent::α YearComponent::α ;
IfcCoolingTowerTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (MECHANICALFORCEDDRAFT::ε) | (MECHANICALINDUCEDDRAFT::ε) | (NATURALDRAFT::ε) ;
IfcRelAssigns ::= (RelatedObjects::α)+ RelatedObjectsType::α ;
IfcColourSpecification ::= Name::α ;
IfcStyledItem ::= Item::α (Styles::α)+ Name::α ;
IfcUnitaryEquipmentTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (ROOFTOPUNIT::ε) | (SPLITSYSTEM::ε) | (AIRCONDITIONINGUNIT::ε) | (AIRHANDLER::ε) ;
IfcSIUnitName ::= (WEBER::ε) | (WATT::ε) | (VOLT::ε) | (TESLA::ε) | (STERADIAN::ε) | (SQUARE_METRE::ε) | (SIEVERT::ε) | (SIEMENS::ε) | (SECOND::ε) | (RADIAN::ε) | (PASCAL::ε) | (OHM::ε) | (NEWTON::ε) | (MOLE::ε) | (METRE::ε) | (LUX::ε) | (LUMEN::ε) | (KELVIN::ε) | (JOULE::ε) | (HERTZ::ε) | (HENRY::ε) | (GRAY::ε) | (GRAM::ε) | (FARAD::ε) | (DEGREE_CELSIUS::ε) | (CUBIC_METRE::ε) | (COULOMB::ε) | (CANDELA::ε) | (BECQUEREL::ε) | (AMPERE::ε) ;
IfcStructuralLoadTemperature ::= DeltaT_Constant::α DeltaT_Y::α DeltaT_Z::α ;
IfcBoundaryCondition ::= Name::α ;
IfcWasteTerminalType ::= PredefinedType::α ;
IfcDistributionControlElement ::= AssignedToFlowElement::α ControlElementId::α ;
IfcClassificationNotationFacet ::= NotationValue::α ;
IfcTendonTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (COATED::ε) | (BAR::ε) | (WIRE::ε) | (STRAND::ε) ;
IfcStructuralCurveTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (COMPRESSION_MEMBER::ε) | (TENSION_MEMBER::ε) | (CABLE::ε) | (PIN_JOINED_MEMBER::ε) | (RIGID_JOINED_MEMBER::ε) ;
IfcProductsOfCombustionProperties ::= SpecificHeatCapacity::α N20Content::α COContent::α CO2Content::α ;
IfcCartesianTransformationOperator3DnonUniform ::= Scale2::α Scale3::α ;
IfcDuctSegmentTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (FLEXIBLESEGMENT::ε) | (RIGIDSEGMENT::ε) ;
IfcTwoDirectionRepeatFactor ::= SecondRepeatFactor::α ;
IfcRampFlightType ::= PredefinedType::α ;
IfcSpace ::= InteriorOrExteriorSpace::α ElevationWithFlooring::α HasCoverings::α BoundedBy::α ;
IfcPresentationLayerAssignment ::= Name::α Description::α Identifier::α (AssignedItems::α)+ ;
IfcPhysicalComplexQuantity ::= Discrimination::α Quality::α Usage::α (HasQuantities::α)+ ;
IfcElectricFlowStorageDeviceTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (UPS::ε) | (INDUCTORBANK::ε) | (HARMONICFILTER::ε) | (CAPACITORBANK::ε) | (BATTERY::ε) ;
IfcRectangularTrimmedSurface ::= U1::α V1::α U2::α V2::α Usense::α Vsense::α BasisSurface::α ;
IfcElectricHeaterType ::= PredefinedType::α ;
IfcServiceLifeFactor ::= UpperValue::α MostUsedValue::α LowerValue::α PredefinedType::α ;
IfcSanitaryTerminalType ::= PredefinedType::α ;
IfcCurveStyleFont ::= (PatternList::α)+ Name::α ;
IfcVertexLoop ::= LoopVertex::α ;
IfcUShapeProfileDef ::= Depth::α FlangeWidth::α WebThickness::α FlangeThickness::α FilletRadius::α EdgeRadius::α FlangeSlope::α CentreOfGravityInX::α ;
IfcRelServicesBuildings ::= RelatingSystem::α (RelatedBuildings::α)+ ;
IfcWindowStyleOperationEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TRIPLE_PANEL_HORIZONTAL::ε) | (TRIPLE_PANEL_RIGHT::ε) | (TRIPLE_PANEL_LEFT::ε) | (TRIPLE_PANEL_TOP::ε) | (TRIPLE_PANEL_BOTTOM::ε) | (TRIPLE_PANEL_VERTICAL::ε) | (DOUBLE_PANEL_HORIZONTAL::ε) | (DOUBLE_PANEL_VERTICAL::ε) | (SINGLE_PANEL::ε) ;
IfcLightSourceSpot ::= ConcentrationExponent::α SpreadAngle::α BeamWidthAngle::α Orientation::α ;
IfcProjectOrderRecord ::= (Records::α)+ PredefinedType::α ;
IfcFaceBasedSurfaceModel ::= (FbsmFaces::α)+ ;
IfcRelaxation ::= RelaxationValue::α InitialStress::α ;
IfcUnitaryEquipmentType ::= PredefinedType::α ;
IfcLogicalOperatorEnum ::= (LOGICALOR::ε) | (LOGICALAND::ε) ;
IfcMaterialLayerSetUsage ::= LayerSetDirection::α DirectionSense::α OffsetFromReferenceLine::α ForLayerSet::α ;
IfcConnectionTypeEnum ::= (NOTDEFINED::ε) | (ATEND::ε) | (ATSTART::ε) | (ATPATH::ε) ;
IfcBoilerTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (STEAM::ε) | (WATER::ε) ;
IfcPropertyDependencyRelationship ::= Name::α Description::α Expression::α DependingProperty::α DependantProperty::α ;
IfcPerson ::= Id::α FamilyName::α GivenName::α (MiddleNames::α)+ (PrefixTitles::α)+ (SuffixTitles::α)+ EngagedIn::α (Roles::α)+ (Addresses::α)+ ;
IfcFillAreaStyle ::= (FillStyles::α)+ ;
IfcSectionTypeEnum ::= (TAPERED::ε) | (UNIFORM::ε) ;
IfcElectricFlowStorageDeviceType ::= PredefinedType::α ;
IfcCurveStyleFontPattern ::= VisibleSegmentLength::α InvisibleSegmentLength::α ;
IfcDraughtingCallout ::= IsRelatedFromCallout::α IsRelatedToCallout::α (Contents::α)+ ;
IfcStructuralProfileProperties ::= TorsionalConstantX::α MomentOfInertiaYZ::α MomentOfInertiaY::α MomentOfInertiaZ::α WarpingConstant::α ShearCentreZ::α ShearCentreY::α ShearDeformationAreaZ::α ShearDeformationAreaY::α MaximumSectionModulusY::α MinimumSectionModulusY::α MaximumSectionModulusZ::α MinimumSectionModulusZ::α TorsionalSectionModulus::α CentreOfGravityInX::α CentreOfGravityInY::α ;
IfcCableCarrierFittingType ::= PredefinedType::α ;
IfcCooledBeamType ::= PredefinedType::α ;
IfcReinforcingMesh ::= MeshLength::α MeshWidth::α LongitudinalBarNominalDiameter::α TransverseBarNominalDiameter::α LongitudinalBarCrossSectionArea::α TransverseBarCrossSectionArea::α LongitudinalBarSpacing::α TransverseBarSpacing::α ;
IfcDocumentElectronicFormat ::= FileExtension::α MimeContentType::α MimeSubtype::α ;
IfcLightSourceGoniometric ::= ColourTemperature::α LuminousFlux::α LightEmissionSource::α Position::α ColourAppearance::α LightDistributionDataSource::α ;
IfcIrregularTimeSeries ::= (Values::α)+ ;
IfcCraneRailAShapeProfileDef ::= OverallHeight::α BaseWidth2::α Radius::α HeadWidth::α HeadDepth2::α HeadDepth3::α WebThickness::α BaseWidth4::α BaseDepth1::α BaseDepth2::α BaseDepth3::α CentreOfGravityInY::α ;
IfcCovering ::= CoversSpaces::α Covers::α PredefinedType::α ;
IfcElementType ::= ElementType::α ;
IfcTypeProduct ::= (RepresentationMaps::α)+ Tag::α ;
IfcElectricMotorTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SYNCHRONOUS::ε) | (RELUCTANCESYNCHRONOUS::ε) | (POLYPHASE::ε) | (INDUCTION::ε) | (DC::ε) ;
IfcJunctionBoxTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) ;
IfcStructuralSurfaceMemberVarying ::= VaryingThicknessLocation::α SubsequentThickness::α ;
IfcGasTerminalType ::= PredefinedType::α ;
IfcElectricDistributionPoint ::= DistributionPointFunction::α UserDefinedFunction::α ;
IfcSurfaceStyleWithTextures ::= (Textures::α)+ ;
IfcTextureMap ::= (TextureMaps::α)+ ;
IfcObject ::= IsDefinedBy::α ObjectType::α ;
IfcRevolvedAreaSolid ::= Axis::α Angle::α ;
IfcEdge ::= EdgeStart::α EdgeEnd::α ;
IfcStructuralLinearAction ::= ProjectedOrTrue::α ;
IfcQuantityArea ::= AreaValue::α ;
IfcSensorTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TEMPERATURESENSOR::ε) | (SOUNDSENSOR::ε) | (SMOKESENSOR::ε) | (PRESSURESENSOR::ε) | (MOVEMENTSENSOR::ε) | (MOISTURESENSOR::ε) | (LIGHTSENSOR::ε) | (HUMIDITYSENSOR::ε) | (HEATSENSOR::ε) | (GASSENSOR::ε) | (FLOWSENSOR::ε) | (FIRESENSOR::ε) | (CO2SENSOR::ε) ;
IfcProjectOrder ::= ID::α PredefinedType::α Status::α ;
IfcPixelTexture ::= Width::α Height::α ColourComponents::α (Pixel::α)+ ;
IfcExternalReference ::= Location::α ItemReference::α Name::α ;
IfcEvaporatorType ::= PredefinedType::α ;
IfcCableSegmentTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (CONDUCTORSEGMENT::ε) | (CABLESEGMENT::ε) ;
IfcProfileProperties ::= ProfileDefinition::α ProfileName::α ;
IfcElementCompositionEnum ::= (PARTIAL::ε) | (ELEMENT::ε) | (COMPLEX::ε) ;
IfcThermalLoadSourceEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (INFILTRATION::ε) | (RELATIVEHUMIDITY::ε) | (DRYBULBTEMPERATURE::ε) | (AIREXCHANGERATE::ε) | (EXHAUSTAIR::ε) | (RECIRCULATEDAIR::ε) | (VENTILATIONOUTSIDEAIR::ε) | (VENTILATIONINDOORAIR::ε) | (EQUIPMENT::ε) | (LIGHTING::ε) | (PEOPLE::ε) ;
IfcRelAssignsToGroup ::= RelatingGroup::α ;
IfcReinforcementDefinitionProperties ::= (ReinforcementSectionDefinitions::α)+ DefinitionType::α ;
IfcParameterizedProfileDef ::= Position::α ;
IfcLoadGroupTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (LOAD_COMBINATION::ε) | (LOAD_COMBINATION_GROUP::ε) | (LOAD_CASE::ε) | (LOAD_GROUP::ε) ;
IfcFireSuppressionTerminalTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SPRINKLERDEFLECTOR::ε) | (SPRINKLER::ε) | (HOSEREEL::ε) | (FIREHYDRANT::ε) | (BREECHINGINLET::ε) ;
IfcBuildingElementProxy ::= CompositionType::α ;
IfcUnitEnum ::= (USERDEFINED::ε) | (VOLUMEUNIT::ε) | (TIMEUNIT::ε) | (THERMODYNAMICTEMPERATUREUNIT::ε) | (SOLIDANGLEUNIT::ε) | (RADIOACTIVITYUNIT::ε) | (PRESSUREUNIT::ε) | (POWERUNIT::ε) | (PLANEANGLEUNIT::ε) | (MASSUNIT::ε) | (MAGNETICFLUXUNIT::ε) | (MAGNETICFLUXDENSITYUNIT::ε) | (LUMINOUSINTENSITYUNIT::ε) | (LUMINOUSFLUXUNIT::ε) | (LENGTHUNIT::ε) | (INDUCTANCEUNIT::ε) | (ILLUMINANCEUNIT::ε) | (FREQUENCYUNIT::ε) | (FORCEUNIT::ε) | (ENERGYUNIT::ε) | (ELECTRICVOLTAGEUNIT::ε) | (ELECTRICRESISTANCEUNIT::ε) | (ELECTRICCURRENTUNIT::ε) | (ELECTRICCONDUCTANCEUNIT::ε) | (ELECTRICCHARGEUNIT::ε) | (ELECTRICCAPACITANCEUNIT::ε) | (DOSEEQUIVALENTUNIT::ε) | (AREAUNIT::ε) | (AMOUNTOFSUBSTANCEUNIT::ε) | (ABSORBEDDOSEUNIT::ε) ;
IfcThermalMaterialProperties ::= SpecificHeatCapacity::α BoilingPoint::α FreezingPoint::α ThermalConductivity::α ;
IfcAxis2Placement3D ::= Axis::α RefDirection::α ;
IfcCondenserTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (EVAPORATIVECOOLED::ε) | (AIRCOOLED::ε) | (WATERCOOLEDBRAZEDPLATE::ε) | (WATERCOOLEDTUBEINTUBE::ε) | (WATERCOOLEDSHELLCOIL::ε) | (WATERCOOLEDSHELLTUBE::ε) ;
IfcSpatialStructureElement ::= LongName::α CompositionType::α ReferencesElements::α ServicedBySystems::α ContainsElements::α ;
IfcSoundScaleEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (NR::ε) | (NC::ε) | (DBC::ε) | (DBB::ε) | (DBA::ε) ;
IfcClassificationItem ::= IsClassifiedItemIn::α IsClassifyingItemIn::α Notation::α ItemOf::α Title::α ;
IfcCostValue ::= CostType::α Condition::α ;
IfcSensorType ::= PredefinedType::α ;
IfcStackTerminalTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (RAINWATERHOPPER::ε) | (COWL::ε) | (BIRDCAGE::ε) ;
IfcTextureVertex ::= Coordinates::α ;
IfcSpaceHeaterType ::= PredefinedType::α ;
IfcConstraintAggregationRelationship ::= Name::α Description::α LogicalAggregator::α RelatingConstraint::α (RelatedConstraints::α)+ ;
IfcApprovalPropertyRelationship ::= (ApprovedProperties::α)+ Approval::α ;
IfcPolyLoop ::= Polygon::α ;
IfcRelCoversBldgElements ::= RelatingBuildingElement::α (RelatedCoverings::α)+ ;
IfcProject ::= LongName::α Phase::α (RepresentationContexts::α)+ UnitsInContext::α ;
IfcDerivedProfileDef ::= ParentProfile::α Operator::α Label::α ;
IfcCircleProfileDef ::= Radius::α ;
IfcPersonAndOrganization ::= ThePerson::α TheOrganization::α (Roles::α)+ ;
IfcTextStyleForDefinedFont ::= Colour::α BackgroundColour::α ;
IfcAxis2Placement2D ::= RefDirection::α ;
IfcTask ::= TaskId::α Status::α WorkMethod::α IsMilestone::α Priority::α ;
IfcRailing ::= PredefinedType::α ;
IfcRelAssociates ::= (RelatedObjects::α)+ ;
IfcPhysicalQuantity ::= Name::α Description::α PartOfComplex::α ;
IfcCurveStyle ::= CurveFont::α CurveWidth::α CurveColour::α ;
IfcBlock ::= XLength::α YLength::α ZLength::α ;
IfcOrientedEdge ::= EdgeElement::α Orientation::α ;
IfcRelAssociatesConstraint ::= RelatingConstraint::α Intent::α ;
IfcSurfaceStyleShading ::= SurfaceColour::α ;
IfcTextStyleFontModel ::= (FontFamily::α)+ FontStyle::α FontVariant::α FontWeight::α FontSize::α ;
IfcElementAssembly ::= AssemblyPlace::α PredefinedType::α ;
IfcControllerType ::= PredefinedType::α ;
IfcSpaceTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) ;
IfcReinforcementBarProperties ::= TotalCrossSectionArea::α SteelGrade::α BarSurface::α EffectiveDepth::α NominalBarDiameter::α BarCount::α ;
IfcConnectionSurfaceGeometry ::= SurfaceOnRelatingElement::α SurfaceOnRelatedElement::α ;
IfcExtrudedAreaSolid ::= ExtrudedDirection::α Depth::α ;
IfcFailureConnectionCondition ::= TensionFailureX::α TensionFailureY::α TensionFailureZ::α CompressionFailureX::α CompressionFailureY::α CompressionFailureZ::α ;
IfcRectangularPyramid ::= XLength::α YLength::α Height::α ;
IfcClassificationItemRelationship ::= RelatingItem::α (RelatedItems::α)+ ;
IfcElement ::= FillsVoids::α ConnectedTo::α HasCoverings::α HasProjections::α HasStructuralMember::α HasPorts::α HasOpenings::α IsConnectionRealization::α ProvidesBoundaries::α ConnectedFrom::α Tag::α ;
IfcPermeableCoveringOperationEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SCREEN::ε) | (LOUVER::ε) | (GRILL::ε) ;
IfcStructuralSteelProfileProperties ::= ShearAreaZ::α ShearAreaY::α PlasticShapeFactorY::α PlasticShapeFactorZ::α ;
IfcTransportElementType ::= PredefinedType::α ;
IfcFlowMeterTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (WATERMETER::ε) | (OILMETER::ε) | (GASMETER::ε) | (FLOWMETER::ε) | (ENERGYMETER::ε) | (ELECTRICMETER::ε) ;
IfcPropertyConstraintRelationship ::= Name::α Description::α RelatingConstraint::α (RelatedProperties::α)+ ;
IfcTimeSeriesDataTypeEnum ::= (NOTDEFINED::ε) | (PIECEWISECONTINUOUS::ε) | (PIECEWISECONSTANT::ε) | (PIECEWISEBINARY::ε) | (DISCRETEBINARY::ε) | (DISCRETE::ε) | (CONTINUOUS::ε) ;
IfcSIPrefix ::= (ATTO::ε) | (FEMTO::ε) | (PICO::ε) | (NANO::ε) | (MICRO::ε) | (MILLI::ε) | (CENTI::ε) | (DECI::ε) | (DECA::ε) | (HECTO::ε) | (KILO::ε) | (MEGA::ε) | (GIGA::ε) | (TERA::ε) | (PETA::ε) | (EXA::ε) ;
IfcTransitionCode ::= (CONTSAMEGRADIENTSAMECURVATURE::ε) | (CONTSAMEGRADIENT::ε) | (CONTINUOUS::ε) | (DISCONTINUOUS::ε) ;
IfcFeatureElementSubtraction ::= VoidsElements::α ;
IfcConditionCriterionSelect ::= IfcLabelvalue::α IfcMeasureWithUnitvalue::α ;
IfcProjectOrderRecordTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (WORK::ε) | (PURCHASE::ε) | (MOVE::ε) | (MAINTENANCE::ε) | (CHANGE::ε) ;
IfcBooleanOperator ::= (DIFFERENCE::ε) | (INTERSECTION::ε) | (UNION::ε) ;
IfcCoordinatedUniversalTimeOffset ::= HourOffset::α MinuteOffset::α Sense::α ;
IfcElectricApplianceType ::= PredefinedType::α ;
IfcConstraint ::= Name::α Description::α ConstraintGrade::α ConstraintSource::α UserDefinedGrade::α ClassifiedAs::α RelatesConstraints::α IsRelatedWith::α PropertiesForConstraint::α Aggregates::α IsAggregatedIn::α CreatingActor::α CreationTime::α ;
IfcElectricDistributionPointFunctionEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SWITCHBOARD::ε) | (MOTORCONTROLCENTRE::ε) | (MIMICPANEL::ε) | (INDICATORPANEL::ε) | (GASDETECTORPANEL::ε) | (DISTRIBUTIONBOARD::ε) | (CONTROLPANEL::ε) | (CONSUMERUNIT::ε) | (ALARMPANEL::ε) ;
IfcBooleanResult ::= FirstOperand::α SecondOperand::α Operator::α ;
IfcAssemblyPlaceEnum ::= (NOTDEFINED::ε) | (FACTORY::ε) | (SITE::ε) ;
IfcSpaceType ::= PredefinedType::α ;
IfcColumnTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (COLUMN::ε) ;
IfcInventory ::= Jurisdiction::α (ResponsiblePersons::α)+ LastUpdateDate::α CurrentValue::α OriginalValue::α InventoryType::α ;
IfcRepresentation ::= RepresentationIdentifier::α RepresentationType::α RepresentationMap::α OfProductRepresentation::α ContextOfItems::α (Items::α)+ ;
IfcDuctFittingTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TRANSITION::ε) | (OBSTRUCTION::ε) | (JUNCTION::ε) | (EXIT::ε) | (ENTRY::ε) | (CONNECTOR::ε) | (BEND::ε) ;
IfcCurtainWallType ::= PredefinedType::α ;
IfcConditionCriterion ::= Criterion::α CriterionDateTime::α ;
IfcWallTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (PLUMBINGWALL::ε) | (ELEMENTEDWALL::ε) | (SHEAR::ε) | (POLYGONAL::ε) | (STANDARD::ε) ;
IfcMaterialClassificationRelationship ::= (MaterialClassifications::α)+ ClassifiedMaterial::α ;
IfcProcedureTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (STARTUP::ε) | (SHUTDOWN::ε) | (DIAGNOSTIC::ε) | (CALIBRATION::ε) | (ADVICE_WARNING::ε) | (ADVICE_NOTE::ε) | (ADVICE_CAUTION::ε) ;
IfcSurfaceOfRevolution ::= AxisPosition::α ;
IfcServiceLifeTypeEnum ::= (REFERENCESERVICELIFE::ε) | (PESSIMISTICREFERENCESERVICELIFE::ε) | (OPTIMISTICREFERENCESERVICELIFE::ε) | (EXPECTEDSERVICELIFE::ε) | (ACTUALSERVICELIFE::ε) ;
IfcImageTexture ::= UrlReference::α ;
IfcFurnitureType ::= AssemblyPlace::α ;
IfcWindowPanelProperties ::= OperationType::α PanelPosition::α FrameDepth::α FrameThickness::α ShapeAspectStyle::α ;
IfcRelFillsElement ::= RelatingOpeningElement::α RelatedBuildingElement::α ;
IfcHatchLineDistanceSelect ::= IfcPositiveLengthMeasurevalue::α IfcOneDirectionRepeatFactorvalue::α ;
IfcStructuralPlanarActionVarying ::= VaryingAppliedLoadLocation::α SubsequentAppliedLoads::α ;
IfcGridPlacement ::= PlacementLocation::α PlacementRefDirection::α ;
IfcTrimmingPreference ::= (UNSPECIFIED::ε) | (PARAMETER::ε) | (CARTESIAN::ε) ;
IfcPile ::= PredefinedType::α ConstructionType::α ;
IfcObjective ::= ObjectiveQualifier::α UserDefinedQualifier::α BenchmarkValues::α ResultValues::α ;
IfcMechanicalSteelMaterialProperties ::= YieldStress::α UltimateStress::α UltimateStrain::α HardeningModule::α ProportionalStress::α PlasticStrain::α (Relaxations::α)+ ;
IfcCartesianTransformationOperator ::= Axis1::α Axis2::α LocalOrigin::α Scale::α ;
IfcStateEnum ::= (READONLYLOCKED::ε) | (READWRITELOCKED::ε) | (LOCKED::ε) | (READONLY::ε) | (READWRITE::ε) ;
IfcEdgeCurve ::= EdgeGeometry::α SameSense::α ;
IfcWallType ::= PredefinedType::α ;
IfcRelAssignsToActor ::= RelatingActor::α ActingRole::α ;
IfcReflectanceMethodEnum ::= (NOTDEFINED::ε) | (STRAUSS::ε) | (PLASTIC::ε) | (PHONG::ε) | (MIRROR::ε) | (METAL::ε) | (MATT::ε) | (GLASS::ε) | (FLAT::ε) | (BLINN::ε) ;
IfcSoundValue ::= SoundLevelSingleValue::α SoundLevelTimeSeries::α Frequency::α ;
IfcBuildingElementProxyTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) ;
IfcChillerType ::= PredefinedType::α ;
IfcAlarmType ::= PredefinedType::α ;
IfcAnalysisModelTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (LOADING_3D::ε) | (OUT_PLANE_LOADING_2D::ε) | (IN_PLANE_LOADING_2D::ε) ;
IfcProfileDef ::= ProfileType::α ProfileName::α ;
IfcSurfaceSide ::= (BOTH::ε) | (NEGATIVE::ε) | (POSITIVE::ε) ;
IfcRepresentationContext ::= ContextIdentifier::α ContextType::α RepresentationsInContext::α ;
IfcWindowStyle ::= ConstructionType::α OperationType::α ParameterTakesPrecedence::α Sizeable::α ;
IfcFaceBound ::= Bound::α Orientation::α ;
IfcSubContractResource ::= SubContractor::α JobDescription::α ;
IfcDataOriginEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SIMULATED::ε) | (PREDICTED::ε) | (MEASURED::ε) ;
IfcLShapeProfileDef ::= Depth::α Width::α Thickness::α FilletRadius::α EdgeRadius::α LegSlope::α CentreOfGravityInX::α CentreOfGravityInY::α ;
IfcRelDecomposes ::= RelatingObject::α (RelatedObjects::α)+ ;
IfcTransportElementTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (MOVINGWALKWAY::ε) | (ESCALATOR::ε) | (ELEVATOR::ε) ;
IfcDocumentStatusEnum ::= (NOTDEFINED::ε) | (REVISION::ε) | (FINAL::ε) | (FINALDRAFT::ε) | (DRAFT::ε) ;
IfcResource ::= ResourceOf::α ;
IfcStructuralLinearActionVarying ::= VaryingAppliedLoadLocation::α (SubsequentAppliedLoads::α)+ ;
IfcCoilTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (GASHEATINGCOIL::ε) | (ELECTRICHEATINGCOIL::ε) | (WATERHEATINGCOIL::ε) | (STEAMHEATINGCOIL::ε) | (WATERCOOLINGCOIL::ε) | (DXCOOLINGCOIL::ε) ;
IfcGridAxis ::= AxisTag::α SameSense::α PartOfW::α PartOfV::α PartOfU::α HasIntersections::α AxisCurve::α ;
IfcPresentationStyleSelect ::= IfcNullStylevalue::α IfcSurfaceStylevalue::α IfcTextStylevalue::α IfcFillAreaStylevalue::α IfcSymbolStylevalue::α IfcCurveStylevalue::α ;
IfcGeometricProjectionEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (ELEVATION_VIEW::ε) | (SECTION_VIEW::ε) | (REFLECTED_PLAN_VIEW::ε) | (PLAN_VIEW::ε) | (MODEL_VIEW::ε) | (SKETCH_VIEW::ε) | (GRAPH_VIEW::ε) ;
IfcVertexBasedTextureMap ::= TextureVertices::α TexturePoints::α ;
IfcFaceSurface ::= FaceSurface::α SameSense::α ;
IfcCondenserType ::= PredefinedType::α ;
IfcFanTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (PROPELLORAXIAL::ε) | (VANEAXIAL::ε) | (TUBEAXIAL::ε) | (CENTRIFUGALAIRFOIL::ε) | (CENTRIFUGALBACKWARDINCLINEDCURVED::ε) | (CENTRIFUGALRADIAL::ε) | (CENTRIFUGALFORWARDCURVED::ε) ;
IfcSlippageConnectionCondition ::= SlippageX::α SlippageY::α SlippageZ::α ;
IfcTubeBundleType ::= PredefinedType::α ;
IfcCostScheduleTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SCHEDULEOFRATES::ε) | (UNPRICEDBILLOFQUANTITIES::ε) | (PRICEDBILLOFQUANTITIES::ε) | (TENDER::ε) | (ESTIMATE::ε) | (COSTPLAN::ε) | (BUDGET::ε) ;
IfcStructuralLoadSingleDisplacementDistortion ::= Distortion::α ;
IfcSectionedSpine ::= SpineCurve::α CrossSections::α CrossSectionPositions::α ;
IfcConstraintEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (ADVISORY::ε) | (SOFT::ε) | (HARD::ε) ;
IfcRelConnectsStructuralElement ::= RelatingElement::α RelatedStructuralMember::α ;
IfcConstraintClassificationRelationship ::= ClassifiedConstraint::α (RelatedClassifications::α)+ ;
IfcAppliedValue ::= Name::α Description::α AppliedValue::α ValuesReferenced::α ValueOfComponents::α IsComponentIn::α UnitBasis::α ApplicableDate::α FixedUntilDate::α ;
IfcSwitchingDeviceType ::= PredefinedType::α ;
IfcObjectDefinition ::= HasAssignments::α IsDecomposedBy::α Decomposes::α ;
IfcPropertySourceEnum ::= (NOTKNOWN::ε) | (USERDEFINED::ε) | (MEASURED::ε) | (COMMISSIONING::ε) | (ASBUILT::ε) | (SIMULATED::ε) | (DESIGNMINIMUM::ε) | (DESIGNMAXIMUM::ε) | (DESIGN::ε) ;
IfcElementAssemblyTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TRUSS::ε) | (SLAB_FIELD::ε) | (RIGID_FRAME::ε) | (REINFORCEMENT_UNIT::ε) | (GIRDER::ε) | (BRACED_FRAME::ε) | (BEAM_GRID::ε) | (ARCH::ε) | (ACCESSORY_ASSEMBLY::ε) ;
IfcMonetaryUnit ::= Currency::α ;
IfcRelSequence ::= TimeLag::α SequenceType::α RelatingProcess::α RelatedProcess::α ;
IfcLightFixtureType ::= PredefinedType::α ;
IfcCoolingTowerType ::= PredefinedType::α ;
IfcCurrencyRelationship ::= RelatingMonetaryUnit::α RelatedMonetaryUnit::α RateDateTime::α RateSource::α ExchangeRate::α ;
IfcTextLiteralWithExtent ::= Extent::α BoxAlignment::α ;
IfcAnnotationCurveOccurrence ::= AnnotatedBySymbols::α ;
IfcRelConnectsWithEccentricity ::= ConnectionConstraint::α ;
IfcDerivedMeasureValue ::= IfcIonConcentrationMeasurevalue::α IfcPHMeasurevalue::α IfcHeatingValueMeasurevalue::α IfcSoundPressureMeasurevalue::α IfcSoundPowerMeasurevalue::α IfcWarpingMomentMeasurevalue::α IfcWarpingConstantMeasurevalue::α IfcThermalExpansionCoefficientMeasurevalue::α IfcTemperatureGradientMeasurevalue::α IfcSectionModulusMeasurevalue::α IfcSectionalAreaIntegralMeasurevalue::α IfcRotationalMassMeasurevalue::α IfcModulusOfRotationalSubgradeReactionMeasurevalue::α IfcModulusOfLinearSubgradeReactionMeasurevalue::α IfcMassPerLengthMeasurevalue::α IfcCurvatureMeasurevalue::α IfcLuminousIntensityDistributionMeasurevalue::α IfcLinearMomentMeasurevalue::α IfcShearModulusMeasurevalue::α IfcRotationalStiffnessMeasurevalue::α IfcPlanarForceMeasurevalue::α IfcMomentOfInertiaMeasurevalue::α IfcModulusOfElasticityMeasurevalue::α IfcModulusOfSubgradeReactionMeasurevalue::α IfcLinearStiffnessMeasurevalue::α IfcLinearForceMeasurevalue::α IfcAccelerationMeasurevalue::α IfcTorqueMeasurevalue::α IfcRotationalFrequencyMeasurevalue::α IfcRadioActivityMeasurevalue::α IfcAbsorbedDoseMeasurevalue::α IfcElectricCapacitanceMeasurevalue::α IfcDoseEquivalentMeasurevalue::α IfcElectricChargeMeasurevalue::α IfcElectricConductanceMeasurevalue::α IfcElectricResistanceMeasurevalue::α IfcIlluminanceMeasurevalue::α IfcInductanceMeasurevalue::α IfcForceMeasurevalue::α IfcLuminousFluxMeasurevalue::α IfcMagneticFluxMeasurevalue::α IfcMagneticFluxDensityMeasurevalue::α IfcMonetaryMeasurevalue::α IfcSpecificHeatCapacityMeasurevalue::α IfcIsothermalMoistureCapacityMeasurevalue::α IfcMoistureDiffusivityMeasurevalue::α IfcVaporPermeabilityMeasurevalue::α IfcMolecularWeightMeasurevalue::α IfcThermalConductivityMeasurevalue::α IfcAngularVelocityMeasurevalue::α IfcDynamicViscosityMeasurevalue::α IfcElectricVoltageMeasurevalue::α IfcEnergyMeasurevalue::α IfcFrequencyMeasurevalue::α IfcHeatFluxDensityMeasurevalue::α IfcIntegerCountRateMeasurevalue::α IfcKinematicViscosityMeasurevalue::α IfcLinearVelocityMeasurevalue::α IfcMassDensityMeasurevalue::α IfcMassFlowRateMeasurevalue::α IfcPowerMeasurevalue::α IfcPressureMeasurevalue::α IfcThermalAdmittanceMeasurevalue::α IfcThermalResistanceMeasurevalue::α IfcThermalTransmittanceMeasurevalue::α IfcTimeStampvalue::α IfcVolumetricFlowRateMeasurevalue::α ;
IfcProcess ::= OperatesOn::α IsSuccessorFrom::α IsPredecessorTo::α ;
IfcRoot ::= GlobalId::α Name::α Description::α OwnerHistory::α HasAssociations::α ;
IfcOrientationSelect ::= IfcPlaneAngleMeasurevalue::α IfcDirectionvalue::α ;
IfcFluidFlowProperties ::= PropertySource::α UserDefinedPropertySource::α TemperatureSingleValue::α WetBulbTemperatureSingleValue::α FlowConditionSingleValue::α VelocitySingleValue::α PressureSingleValue::α FlowrateSingleValue::α FlowConditionTimeSeries::α VelocityTimeSeries::α FlowrateTimeSeries::α Fluid::α PressureTimeSeries::α WetBulbTemperatureTimeSeries::α TemperatureTimeSeries::α ;
IfcValveType ::= PredefinedType::α ;
IfcEnergyProperties ::= EnergySequence::α UserDefinedEnergySequence::α ;
IfcReinforcingBarRoleEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (RING::ε) | (EDGE::ε) | (PUNCHING::ε) | (STUD::ε) | (LIGATURE::ε) | (SHEAR::ε) | (MAIN::ε) ;
IfcProtectiveDeviceTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (VARISTOR::ε) | (RESIDUALCURRENTSWITCH::ε) | (RESIDUALCURRENTCIRCUITBREAKER::ε) | (EARTHFAILUREDEVICE::ε) | (CIRCUITBREAKER::ε) | (FUSEDISCONNECTOR::ε) ;
IfcLightSourceDirectional ::= Orientation::α ;
IfcStructuralMember ::= ReferencesElement::α ConnectedBy::α ;
IfcDoorPanelPositionEnum ::= (NOTDEFINED::ε) | (RIGHT::ε) | (MIDDLE::ε) | (LEFT::ε) ;
IfcRoof ::= ShapeType::α ;
IfcAheadOrBehind ::= (BEHIND::ε) | (AHEAD::ε) ;
IfcObjectiveEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TRIGGERCONDITION::ε) | (SPECIFICATION::ε) | (REQUIREMENT::ε) | (HEALTHANDSAFETY::ε) | (DESIGNINTENT::ε) | (CODECOMPLIANCE::ε) ;
IfcShapeAspect ::= Name::α Description::α ProductDefinitional::α (ShapeRepresentations::α)+ PartOfProductDefinitionShape::α ;
IfcLocalTime ::= HourComponent::α MinuteComponent::α SecondComponent::α DaylightSavingOffset::α Zone::α ;
IfcRelProjectsElement ::= RelatingElement::α RelatedFeatureElement::α ;
IfcSweptDiskSolid ::= Radius::α InnerRadius::α StartParam::α EndParam::α Directrix::α ;
IfcMechanicalMaterialProperties ::= DynamicViscosity::α YoungModulus::α ShearModulus::α PoissonRatio::α ThermalExpansionCoefficient::α ;
IfcBoundaryEdgeCondition ::= LinearStiffnessByLengthX::α LinearStiffnessByLengthY::α LinearStiffnessByLengthZ::α RotationalStiffnessByLengthX::α RotationalStiffnessByLengthY::α RotationalStiffnessByLengthZ::α ;
IfcServiceLife ::= ServiceLifeType::α ServiceLifeDuration::α ;
IfcTable ::= (Rows::α)+ Name::α ;
IfcElectricTimeControlType ::= PredefinedType::α ;
IfcCompressorTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TWINSCREW::ε) | (SINGLESCREW::ε) | (ROTARYVANE::ε) | (ROLLINGPISTON::ε) | (WELDEDSHELLHERMETIC::ε) | (SEMIHERMETIC::ε) | (HERMETIC::ε) | (OPENTYPE::ε) | (BOOSTER::ε) | (SINGLESTAGE::ε) | (TROCHOIDAL::ε) | (SCROLL::ε) | (ROTARY::ε) | (RECIPROCATING::ε) | (DYNAMIC::ε) ;
IfcApprovalActorRelationship ::= Actor::α Approval::α Role::α ;
IfcStairTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TWO_CURVED_RUN_STAIR::ε) | (CURVED_RUN_STAIR::ε) | (DOUBLE_RETURN_STAIR::ε) | (SPIRAL_STAIR::ε) | (THREE_QUARTER_TURN_STAIR::ε) | (THREE_QUARTER_WINDING_STAIR::ε) | (TWO_QUARTER_TURN_STAIR::ε) | (TWO_QUARTER_WINDING_STAIR::ε) | (HALF_TURN_STAIR::ε) | (HALF_WINDING_STAIR::ε) | (QUARTER_TURN_STAIR::ε) | (QUARTER_WINDING_STAIR::ε) | (TWO_STRAIGHT_RUN_STAIR::ε) | (STRAIGHT_RUN_STAIR::ε) ;
IfcGeneralMaterialProperties ::= MolecularWeight::α Porosity::α MassDensity::α ;
IfcGeneralProfileProperties ::= PhysicalWeight::α Perimeter::α MinimumPlateThickness::α MaximumPlateThickness::α CrossSectionArea::α ;
IfcMeasureValue ::= IfcNormalisedRatioMeasurevalue::α IfcLuminousIntensityMeasurevalue::α IfcAmountOfSubstanceMeasurevalue::α IfcAreaMeasurevalue::α IfcContextDependentMeasurevalue::α IfcCountMeasurevalue::α IfcDescriptiveMeasurevalue::α IfcElectricCurrentMeasurevalue::α IfcLengthMeasurevalue::α IfcPositiveLengthMeasurevalue::α IfcMassMeasurevalue::α IfcNumericMeasurevalue::α IfcParameterValuevalue::α IfcPlaneAngleMeasurevalue::α IfcPositivePlaneAngleMeasurevalue::α IfcRatioMeasurevalue::α IfcPositiveRatioMeasurevalue::α IfcSolidAngleMeasurevalue::α IfcThermodynamicTemperatureMeasurevalue::α IfcTimeMeasurevalue::α IfcVolumeMeasurevalue::α ;
IfcFlowInstrumentTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (VOLTMETER_RMS::ε) | (VOLTMETER_PEAK::ε) | (PHASEANGLEMETER::ε) | (POWERFACTORMETER::ε) | (FREQUENCYMETER::ε) | (AMMETER::ε) | (THERMOMETER::ε) | (PRESSUREGAUGE::ε) ;
IfcSystem ::= ServicesBuildings::α ;
IfcPileTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SUPPORT::ε) | (FRICTION::ε) | (COHESION::ε) ;
IfcDuctFittingType ::= PredefinedType::α ;
IfcPresentationStyle ::= Name::α ;
IfcArbitraryProfileDefWithVoids ::= (InnerCurves::α)+ ;
IfcWindowStyleConstructionEnum ::= (NOTDEFINED::ε) | (OTHER_CONSTRUCTION::ε) | (PLASTIC::ε) | (ALUMINIUM_WOOD::ε) | (WOOD::ε) | (STEEL::ε) | (HIGH_GRADE_STEEL::ε) | (ALUMINIUM::ε) ;
IfcPropertyEnumeration ::= (EnumerationValues::α)+ Unit::α Name::α ;
IfcCoveringType ::= PredefinedType::α ;
IfcFootingTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (STRIP_FOOTING::ε) | (PILE_CAP::ε) | (PAD_FOOTING::ε) | (FOOTING_BEAM::ε) ;
IfcCartesianTransformationOperator2DnonUniform ::= Scale2::α ;
IfcTimeSeriesValue ::= (ListValues::α)+ ;
IfcDocumentConfidentialityEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (PERSONAL::ε) | (CONFIDENTIAL::ε) | (RESTRICTED::ε) | (PUBLIC::ε) ;
IfcPointOnCurve ::= BasisCurve::α PointParameter::α ;
IfcReinforcingBarSurfaceEnum ::= (TEXTURED::ε) | (PLAIN::ε) ;
IfcSpaceProgram ::= SpaceProgramIdentifier::α MaxRequiredArea::α MinRequiredArea::α StandardRequiredArea::α HasInteractionReqsFrom::α HasInteractionReqsTo::α RequestedLocation::α ;
IfcRelAssignsToProcess ::= RelatingProcess::α QuantityInProcess::α ;
IfcPropertyReferenceValue ::= PropertyReference::α UsageName::α ;
IfcProfileTypeEnum ::= (AREA::ε) | (CURVE::ε) ;
IfcOrderAction ::= ActionID::α ;
IfcControllerTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (TWOPOSITION::ε) | (TIMEDTWOPOSITION::ε) | (PROPORTIONALINTEGRALDERIVATIVE::ε) | (PROPORTIONALINTEGRAL::ε) | (PROPORTIONAL::ε) | (FLOATING::ε) ;
IfcRelAssociatesAppliedValue ::= RelatingAppliedValue::α ;
IfcMemberTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (STUD::ε) | (STRUT::ε) | (STRINGER::ε) | (RAFTER::ε) | (PURLIN::ε) | (POST::ε) | (PLATE::ε) | (MULLION::ε) | (MEMBER::ε) | (COLLAR::ε) | (CHORD::ε) | (BRACE::ε) ;
IfcAxis1Placement ::= Axis::α ;
IfcRelAssignsToResource ::= RelatingResource::α ;
IfcRightCircularCone ::= Height::α BottomRadius::α ;
IfcConnectionPortGeometry ::= LocationAtRelatingElement::α LocationAtRelatedElement::α ProfileOfPort::α ;
IfcProductRepresentation ::= Name::α Description::α ShapeOfProduct::α (Representations::α)+ ;
IfcLightFixtureTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (DIRECTIONSOURCE::ε) | (POINTSOURCE::ε) ;
IfcVirtualGridIntersection ::= IntersectingAxes::α OffsetDistances::α ;
IfcStructuralActivity ::= AssignedToStructuralItem::α AppliedLoad::α GlobalOrLocal::α ;
IfcArbitraryOpenProfileDef ::= Curve::α ;
IfcEnergySequenceEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (AUXILIARY::ε) | (TERTIARY::ε) | (SECONDARY::ε) | (PRIMARY::ε) ;
IfcBoxedHalfSpace ::= Enclosure::α ;
IfcBeamType ::= PredefinedType::α ;
IfcFacetedBrepWithVoids ::= (Voids::α)+ ;
IfcClassificationNotation ::= (NotationFacets::α)+ ;
IfcFlowDirectionEnum ::= (NOTDEFINED::ε) | (SOURCEANDSINK::ε) | (SINK::ε) | (SOURCE::ε) ;
IfcCableCarrierSegmentType ::= PredefinedType::α ;
IfcDocumentInformation ::= DocumentId::α Name::α Description::α Purpose::α IntendedUse::α Scope::α Revision::α Confidentiality::α Status::α IsPointedTo::α IsPointer::α (DocumentReferences::α)+ DocumentOwner::α (Editors::α)+ CreationTime::α LastRevisionTime::α ElectronicFormat::α ValidFrom::α ValidUntil::α ;
IfcPort ::= ContainedIn::α ConnectedFrom::α ConnectedTo::α ;
IfcStructuralSurfaceTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (SHELL::ε) | (MEMBRANE_ELEMENT::ε) | (BENDING_ELEMENT::ε) ;
IfcElectricApplianceTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (WATERCOOLER::ε) | (WATERHEATER::ε) | (WASHINGMACHINE::ε) | (VENDINGMACHINE::ε) | (TV::ε) | (TUMBLEDRYER::ε) | (TELEPHONE::ε) | (SCANNER::ε) | (RADIANTHEATER::ε) | (REFRIGERATOR::ε) | (PRINTER::ε) | (PHOTOCOPIER::ε) | (MICROWAVE::ε) | (INDIRECTWATERHEATER::ε) | (HANDDRYER::ε) | (FRIDGE_FREEZER::ε) | (FREEZER::ε) | (FREESTANDINGFAN::ε) | (FACSIMILE::ε) | (ELECTRICHEATER::ε) | (ELECTRICCOOKER::ε) | (DISHWASHER::ε) | (DIRECTWATERHEATER::ε) | (COMPUTER::ε) ;
IfcConnectedFaceSet ::= (CfsFaces::α)+ ;
IfcClassificationReference ::= ReferencedSource::α ;
IfcTextStyle ::= TextCharacterAppearance::α TextStyle::α TextFontStyle::α ;
IfcLightDistributionCurveEnum ::= (NOTDEFINED::ε) | (TYPE_C::ε) | (TYPE_B::ε) | (TYPE_A::ε) ;
IfcWindowPanelOperationEnum ::= (NOTDEFINED::ε) | (OTHEROPERATION::ε) | (FIXEDCASEMENT::ε) | (REMOVABLECASEMENT::ε) | (SLIDINGVERTICAL::ε) | (SLIDINGHORIZONTAL::ε) | (PIVOTVERTICAL::ε) | (PIVOTHORIZONTAL::ε) | (BOTTOMHUNG::ε) | (TOPHUNG::ε) | (TILTANDTURNLEFTHAND::ε) | (TILTANDTURNRIGHTHAND::ε) | (SIDEHUNGLEFTHAND::ε) | (SIDEHUNGRIGHTHAND::ε) ;
IfcPropertySetDefinition ::= PropertyDefinitionOf::α DefinesType::α ;
IfcMemberType ::= PredefinedType::α ;
IfcStructuralAction ::= CausedBy::α DestabilizingLoad::α ;
IfcStackTerminalType ::= PredefinedType::α ;
IfcAnnotationSurface ::= Item::α TextureCoordinates::α ;
IfcDimensionCurveTerminator ::= Role::α ;
IfcEnvironmentalImpactValue ::= ImpactType::α Category::α UserDefinedCategory::α ;
IfcHeatExchangerType ::= PredefinedType::α ;
IfcSymbolStyle ::= StyleOfSymbol::α ;
IfcActionSourceTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (BRAKES::ε) | (RAIN::ε) | (WAVE::ε) | (CURRENT::ε) | (ICE::ε) | (BUOYANCY::ε) | (LACK_OF_FIT::ε) | (CREEP::ε) | (SHRINKAGE::ε) | (SYSTEM_IMPERFECTION::ε) | (PROPPING::ε) | (ERECTION::ε) | (TRANSPORT::ε) | (IMPACT::ε) | (IMPULSE::ε) | (FIRE::ε) | (EARTHQUAKE_E::ε) | (TEMPERATURE_T::ε) | (SETTLEMENT_U::ε) | (PRESTRESSING_P::ε) | (WIND_W::ε) | (SNOW_S::ε) | (LIVE_LOAD_Q::ε) | (COMPLETION_G1::ε) | (DEAD_LOAD_G::ε) ;
IfcPropertySingleValue ::= NominalValue::α Unit::α ;
IfcTransformerType ::= PredefinedType::α ;
IfcStairFlightType ::= PredefinedType::α ;
IfcOutletType ::= PredefinedType::α ;
IfcClassification ::= Source::α Edition::α Name::α Contains::α EditionDate::α ;
IfcTankTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (PRESSUREVESSEL::ε) | (EXPANSION::ε) | (SECTIONAL::ε) | (PREFORMED::ε) ;
IfcCenterLineProfileDef ::= Thickness::α ;
IfcMaterialList ::= (Materials::α)+ ;
IfcOwnerHistory ::= State::α ChangeAction::α LastModifiedDate::α CreationDate::α OwningUser::α OwningApplication::α LastModifyingUser::α LastModifyingApplication::α ;
IfcCompositeCurveSegment ::= Transition::α SameSense::α UsingCurves::α ParentCurve::α ;
IfcAirTerminalBoxType ::= PredefinedType::α ;
IfcNullStyle ::= NULL::ε ;
IfcTimeSeriesReferenceRelationship ::= ReferencedTimeSeries::α (TimeSeriesReferences::α)+ ;
IfcSimpleValue ::= IfcLogicalvalue::α IfcLabelvalue::α IfcTextvalue::α IfcIdentifiervalue::α IfcBooleanvalue::α IfcRealvalue::α IfcIntegervalue::α ;
IfcRelConnectsPathElements ::= (RelatingPriorities::α)+ (RelatedPriorities::α)+ RelatedConnectionType::α RelatingConnectionType::α ;
IfcNamedUnit ::= Dimensions::α UnitType::α ;
IfcStructuralLoadGroup ::= PredefinedType::α ActionType::α ActionSource::α Coefficient::α Purpose::α SourceOfResultGroup::α LoadGroupFor::α ;
IfcAppliedValueRelationship ::= ArithmeticOperator::α Name::α Description::α ComponentOfTotal::α (Components::α)+ ;
IfcSpaceThermalLoadProperties ::= ApplicableValueRatio::α ThermalLoadSource::α PropertySource::α SourceDescription::α MaximumValue::α MinimumValue::α UserDefinedThermalLoadSource::α UserDefinedPropertySource::α ThermalLoadType::α ThermalLoadTimeSeriesValues::α ;
IfcRelVoidsElement ::= RelatingBuildingElement::α RelatedOpeningElement::α ;
IfcRelDefinesByProperties ::= RelatingPropertyDefinition::α ;
IfcMaterialDefinitionRepresentation ::= RepresentedMaterial::α ;
IfcCoveringTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (WRAPPING::ε) | (SLEEVING::ε) | (MEMBRANE::ε) | (INSULATION::ε) | (ROOFING::ε) | (CLADDING::ε) | (FLOORING::ε) | (CEILING::ε) ;
IfcTankType ::= PredefinedType::α ;
IfcLayerSetDirectionEnum ::= (AXIS3::ε) | (AXIS2::ε) | (AXIS1::ε) ;
IfcStructuralCurveMember ::= PredefinedType::α ;
IfcPipeFittingType ::= PredefinedType::α ;
IfcStair ::= ShapeType::α ;
IfcDoorPanelProperties ::= PanelDepth::α PanelOperation::α PanelWidth::α PanelPosition::α ShapeAspectStyle::α ;
IfcObjectTypeEnum ::= (NOTDEFINED::ε) | (PROJECT::ε) | (GROUP::ε) | (ACTOR::ε) | (RESOURCE::ε) | (CONTROL::ε) | (PROCESS::ε) | (PRODUCT::ε) ;
IfcSlab ::= PredefinedType::α ;
IfcLocalPlacement ::= PlacementRelTo::α RelativePlacement::α ;
IfcCShapeProfileDef ::= Depth::α Width::α WallThickness::α Girth::α InternalFilletRadius::α CentreOfGravityInX::α ;
IfcStructuralResultGroup ::= TheoryType::α IsLinear::α ResultGroupFor::α ResultForLoadGroup::α ;
IfcHumidifierType ::= PredefinedType::α ;
IfcRelAssignsTasks ::= TimeForTask::α ;
IfcTextLiteral ::= Literal::α Path::α Placement::α ;
IfcBlobTexture ::= RasterFormat::α RasterCode::α ;
IfcElectricCurrentEnum ::= (NOTDEFINED::ε) | (DIRECT::ε) | (ALTERNATING::ε) ;
IfcActionTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (EXTRAORDINARY_A::ε) | (VARIABLE_Q::ε) | (PERMANENT_G::ε) ;
IfcMetric ::= Benchmark::α ValueSource::α DataValue::α ;
IfcSurfaceOfLinearExtrusion ::= ExtrudedDirection::α Depth::α ;
IfcSurfaceStyleLighting ::= DiffuseTransmissionColour::α DiffuseReflectionColour::α TransmissionColour::α ReflectanceColour::α ;
IfcSurfaceTexture ::= RepeatS::α RepeatT::α TextureType::α TextureTransform::α ;
IfcTableRow ::= (RowCells::α)+ OfTable::α IsHeading::α ;
IfcBoundaryFaceCondition ::= LinearStiffnessByAreaX::α LinearStiffnessByAreaY::α LinearStiffnessByAreaZ::α ;
IfcPath ::= (EdgeList::α)+ ;
IfcDistributionPort ::= FlowDirection::α ;
IfcMotorConnectionTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (DIRECTDRIVE::ε) | (COUPLING::ε) | (BELTDRIVE::ε) ;
IfcRelConnectsPortToElement ::= RelatingPort::α RelatedElement::α ;
IfcDistributionChamberElementTypeEnum ::= (NOTDEFINED::ε) | (USERDEFINED::ε) | (VALVECHAMBER::ε) | (TRENCH::ε) | (SUMP::ε) | (METERCHAMBER::ε) | (MANHOLE::ε) | (INSPECTIONPIT::ε) | (INSPECTIONCHAMBER::ε) | (FORMEDDUCT::ε) ;
IfcElementQuantity ::= (Quantities::α)+ MethodOfMeasurement::α ;
IfcApprovalRelationship ::= Description::α Name::α RelatedApproval::α RelatingApproval::α ;
IfcRelReferencedInSpatialStructure ::= (RelatedElements::α)+ RelatingStructure::α ;
--------------------metamodels::mlhim2.bgf--------------------
DvCount ::= count::α ;
DvIdentifier ::= issuer::α assigner::α name::α ;
DvMediaMultipart ::= dv::α ;
DvMediaModel ::= dv::α ;
Device ::= details::ItemStructure ;
DvCodedString ::= codeString::α terminologyName::α terminologyAbbrev::α ;
Person ::= details::ItemStructure ;
DvUnsignedShort ::= dv::α ;
History ::= origin::DvTemporal (events::Event)+ period::DvDuration duration::DvDuration summary::ItemStructure ;
MetaDataSet ::= name::string() (entries::MetaDataEntry)+ ;
DvPositiveInteger ::= dv::α ;
FeederAuditDetails ::= systemId::DvIdentifier versionId::DvNormalizedString provider::PartyIdentified location::Location time::DvTemporal (subject::PartyProxy)+ ;
ItemTree ::= (items::Item)+ ;
ItemList ::= (items::Item)+ ;
Ontology ::= (names::string())+ (internalVocabularies::string())+ (lookupTables::string())+ (terminologies::string())+ (generalEntries::OntologyEntry)+ ;
DvMediaApp ::= dv::α ;
DvUnsignedByte ::= dv::α ;
Instruction ::= expiryTime::DvTemporal narrative::DvString wfDefinition::DvParsable (activities::Activity)+ ;
DvDateTime ::= dv::α ;
DvProportion ::= proportionType::α ;
DvShort ::= dv::α ;
DvToken ::= dv::α ;
DvDuration ::= dv::α ;
CCD ::= definition::Locatable (metaData::MetaDataSet)+ ontology::Ontology ;
DvUnsignedLong ::= dv::α ;
DvString ::= DvCodedString ;
 DvString ::= DvIdentifier ;
 DvString ::= uuid::α language::α dv::string() ;
DvOrdinal ::= dv::α symbol::string() ;
Group ::= (members::Party)+ ;
DvQuantity ::= units::α ;
DvInt ::= dv::integer() ;
Evaluation ::= data::ItemStructure ;
Element ::= dv::DvAny ;
DvParagraph ::= (items::DvString)+ ;
ItemTable ::= (rows::Cluster)+ ;
ItemSingle ::= item::Item ;
DvURI ::= dv::α ;
DvByte ::= dv::α ;
Cluster ::= (items::Item)+ ;
Relationship ::= (targets::DvToken)+ ;
Action ::= time::DvTemporal description::ItemStructure ismTransition::DvCodedString instructionDetails::DvCodedString ;
Location ::= details::ItemStructure description::DvString isPrimary::DvBoolean ;
EventContext ::= healthcareFacility::Organization startTime::DvTemporal endTime::DvTemporal participation::Participation location::Location setting::DvCodedString ;
Organization ::= details::ItemStructure ;
ReferenceRange ::= definition::DvString dataRange::DvInterval ;
DvMediaMsg ::= dv::α ;
DvLong ::= dv::α ;
DvNonPositiveInteger ::= dv::α ;
DvMediaVideo ::= dv::α ;
Section ::= (items::ContentItem)+ ;
OntologyEntry ::= (contents::string())+ ;
MetaDataEntry ::= title::string() contents::string() ;
DvDecimal ::= dv::α ;
DvNormalizedString ::= uuid::α language::α dv::α ;
DvNegativeInteger ::= dv::α ;
IntervalEvent ::= width::DvDuration mathFunction::DvCodedString sampleCount::DvCount ;
ObjectRef ::= EntityRef ;
 ObjectRef ::= uuid::α namespace::α objType::α ;
PartySelf ::= externalRef::EntityRef ;
DvRate ::= rateType::α ;
FeederAudit ::= originatingSystemAudit::FeederAuditDetails (originatingSystemItemIds::DvIdentifier)+ feederSystemAudit::FeederAuditDetails (feederSystemIds::DvIdentifier)+ originalContent::DvEncapsulated ;
Attestation ::= attestedView::DvMedia proof::DvParsable reason::DvCodedString commiter::PartyProxy timeCommited::DvTemporal isPending::DvBoolean ;
Activity ::= description::ItemStructure timing::DvParsable (actions::DvToken)+ ;
DvInteger ::= dv::α ;
DvLanguage ::= dv::α ;
DvMediaImage ::= dv::α ;
DvUnsignedInt ::= dv::α ;
DvMediaAudio ::= dv::α ;
Participation ::= performer::PartyProxy function::DvCodedString mode::DvCodedString time::DvTemporal ;
DvTime ::= dv::α ;
DvMediaText ::= dv::string() ;
Slot ::= ccd::DvToken (allowedCcds::DvToken)+ ;
DvParsable ::= dv::α formalism::α ;
Link ::= relation::Relationship target::DvToken ;
DvInterval ::= lower::DvOrdered upper::DvOrdered lowerIncluded::α upperIncluded::α lowerUnbounded::α upperUnbounded::α ;
Role ::= details::ItemStructure description::DvString isPrimary::DvBoolean ;
DvBoolean ::= dv::α ;
EntityRef ::= uuid::α namespace::α objType::α ;
DvNonNegativeInteger ::= dv::α ;
Folder ::= (items::Composition)+ ;
Observation ::= data::History state::History ;
PointEvent ::= time::DvTemporal data::DvAny state::ItemStructure ;
Composition ::= attestation::Attestation (links::Link)+ original::DvToken predecessor::DvToken created::DvTemporal composer::PartyProxy territory::Location category::DvCodedString language::DvLanguage context::EventContext content::Locatable ;
PartyRelated ::= relationship::Relationship ;
AdminEntry ::= data::ItemStructure ;
PartyIdentified ::= PartyRelated ;
 PartyIdentified ::= name::DvString (identifiers::DvIdentifier)+ ;
NonHuman ::= details::ItemStructure ;
DvDate ::= dv::α ;
--------------------metamodels::paperdyne.owl.bgf--------------------
Email_Template ::= define::Event ;
Proceedings_Publisher ::= (publisherOf::Thing)+ technicallyOrganises::Thing ;
Science_Worker ::= hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person ;
Program_Comitee_Chair ::= finishes::Conference headOf::Program_Comitee switches::PhaseOfConferencePreparation starts::Conference accepts::Paper assignsToReview::Paper assignsPaper::Reviewer rejects::Paper ;
TraditionalLecture ::= hasAcronym::String ;
RadioCommunicationsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
AccommodationPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
SignalProcessingTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
TwoLevelConference ::= is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country isOrganizedBy::OrganizingCommittee annualOrder::Integer takesPlace::Location hasAcronym::String finishedBy::Program_Comitee_Chair focusesOn::Topic startedBy::Program_Comitee_Chair takesPlace::Location hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
pc_meeting ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location ;
SessionChair ::= hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person ;
SteeringCommittee ::= organizes::Conference ;
summary_of_reviews ::= is_created_in::Activity ;
Working_event ::= hasTopic::Topic hasAdministrativeEvent::Administrative_event ;
User ::= Committee ;
 User ::= Administrator ;
 User ::= recieve::Document (create::Thing)+ submit::Document ;
Short_paper ::= changedBy::Author hasContributionStatus::EEnum writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
Advocated_Paper ::= to_advocate_by::Advocate ;
GovernmentOrganization ::= isProviderOf::Sponsorship ;
Tutorial_Abstract ::= (is_the_1th_part_of::Thing)+ part_of_article::Article ;
Main_office ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
CallForManuscripts ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
MealMenu ::= isMenuOf::MealEvent ;
Speaker ::= hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person ;
IndexOfAuthors ::= isProducedBy::Chair ;
Workshop_Session ::= hasAssignedPaper::AcceptedPaper room::String isAssociatedTo::Slot hasChair::Chair ;
Paper_Author ::= hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person ;
Conference_Proceedings ::= has_an_ISBN::String has_a_publisher::Publisher has_a_volume::String ;
group_email ::= article_written_by::Author has_reviewer::Reviewer has_abstract::Abstract goes_through::Activity is_sent_to::human is_created_in::Activity structure_created_by::human has_author::human gives_classification::classification ;
Publisher ::= issues::Conference_Proceedings ;
Full_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum hasCo-Author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
OutsideReferee ::= hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person ;
Assigned_Paper ::= Evaluated_Paper ;
 Assigned_Paper ::= hasReviewer::Possible_Reviewer ;
upper_tier_reviewing_process ::= is_performed_by::human ;
OperatingTopicsystems ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
Location ::= locationOf::Event ;
Review_Phase ::= hasPhaseStatus::EEnum ;
GeneralCoChair ::= organizes::Conference ;
PaperSubmissionChair ::= organizes::Conference ;
Chair_PC ::= hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person ;
Active_conference_participant ::= gives_presentations::Presentation ;
Short_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum hasCo-Author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
SatelliteAndSpaceCommunicationsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
Pending_Proposed_Conflict ::= refusedBy::Reviewer confirmedBy::Reviewer ;
Plenary_lecture ::= hasAcronym::String ;
Organizing_committee ::= was_an_organizing_committee_of::Conference_volume ;
MobileComputingTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
Registration_of_participants_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Committee_member ::= Co-chair ;
 Committee_member ::= was_a_member_of::Committee ;
Deadline_hotel_reservation ::= done_till::date ;
Camera_Ready_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum hasCo-Author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
NGO ::= isProviderOf::Sponsorship ;
CommunicationTheoryTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
AcademicEvent ::= TalkEvent ;
 AcademicEvent ::= OrganizationalMeeting ;
 AcademicEvent ::= PaperPresentation ;
 AcademicEvent ::= hasCall::Call ;
Mailing_list ::= (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document recieved_by::User used_by::Person submited__by::User ;
CallForPapers ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
CommunicationsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
SecurityTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
PaperAbstract ::= isAbstractOf::Paper abstractIsSubmittedBy::ContactAuthor ;
DiningPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
Author ::= AuthorNotReviewer ;
 Author ::= Co-Author ;
 Author ::= Corresponding_Author ;
 Author ::= Author_cd_proceedings_included ;
 Author ::= Lecturer ;
 Author ::= Plenary_lecture_speaker ;
 Author ::= Tutorial_speaker ;
 Author ::= Author_book_proceedings_included ;
 Author ::= ContactAuthor ;
 Author ::= Contact_Author ;
 Author ::= MainAuthor ;
 Author ::= Presenter ;
 Author ::= submitPaper::Paper writes::Contribution writes_article::Article assigns_article_to_conference::Article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution ;
Paper_Review ::= is_Candidate_for_Award::Long_bool appropriate_length::Long_bool has_Categorization::Paper_Categorization has_Overall::Overall_Value has_Reccommendation::Reccommendation Review_made_by::Reviewer Comments_for_Author::String Comments_for_Program_Committee::String ;
ContactAuthor ::= submitsAbstract::PaperAbstract ;
ConferenceProgram ::= isProgramOf::Conference consistsOf::Slot ;
Workshop ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Admin_Role ::= assigned_by::Administrator ;
Poster_Session ::= hasAssignedPaper::AcceptedPaper room::String isAssociatedTo::Slot hasChair::Chair ;
ComputerArchitectureTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
WorkshopTutorialChair ::= organizes::Conference ;
OrganizingCommittee ::= ProgramCoChair ;
 OrganizingCommittee ::= PublicationsChair ;
 OrganizingCommittee ::= WorkshopTutorialChair ;
 OrganizingCommittee ::= RegistrationChair ;
 OrganizingCommittee ::= StudentAdvocate ;
 OrganizingCommittee ::= FinanceChair ;
 OrganizingCommittee ::= PaperSubmissionChair ;
 OrganizingCommittee ::= PublicityWebChair ;
 OrganizingCommittee ::= SteeringCommittee ;
 OrganizingCommittee ::= GeneralCoChair ;
 OrganizingCommittee ::= organizes::Conference ;
OrganizationalMeeting ::= hasCall::Call ;
PersonalReviewHistory ::= isReviewHistoryOf::Reviewer ;
conference_setup ::= sets_member::human is_made_by::human includes_topic::Topic sets_date::date sets_URL::URL ;
Member_PC ::= expertOn::Topic reviewes::Contribution ;
Web_Site ::= (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document recieved_by::User used_by::Person submited__by::User ;
RejectedPaper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum hasCo-Author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
ParallelAndDistributedComputingTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
Advocate ::= will_advocate::Advocated_Paper ;
Research_Topic ::= define::Event ;
 Research_Topic ::= topicCoveredBy::Thing ;
Assignment_Phase ::= hasPhaseStatus::EEnum ;
Reviewing_event ::= follows::Administrative_event parallel_with::Administrative_event ;
MultimediaTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
CryptographyTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
Tutorial ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Conference_volume ::= has_parts::Conference_part has_workshops::Workshop has_tracks::Track has_tutorials::Tutorial has_a_commtitee::Committee has_a_steering_committee::Steering_committee has_an_organizing_committee::Organizing_committee has_important_dates::Important_dates has_contributions::Conference_contribution has_a_location::String has_a_program_committee::Program_committee ;
Regular ::= earlyRegistration::Boolean ;
ProgramCommittee ::= hasProgramCommitteeMember::ProgramCommitteeMember hasMember::ProgramCommitteeMember ;
Transparency ::= (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document recieved_by::User used_by::Person submited__by::User ;
Registation_deadline ::= done_till::date ;
Review ::= Meta-Review ;
 Review ::= Positive_Review ;
 Review ::= Negative_Review ;
 Review ::= Neutral_Review ;
 Review ::= reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer containsEvaluation::Evaluation rates::Paper isWritenBy::Reviewer writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::Activity review_written_by::Reviewer ;
Head_Role ::= assigned_by::Administrator ;
Person ::= ConferenceMember ;
 Person ::= ExternalReviewer ;
 Person ::= User ;
 Person ::= Conference_participant ;
 Person ::= Conference_contributor ;
 Person ::= Committee_member ;
 Person ::= Conference_applicant ;
 Person ::= Track-workshop_chair ;
 Person ::= Scholar ;
 Person ::= Participant ;
 Person ::= Member_PC ;
 Person ::= Chair_PC ;
 Person ::= Science_Worker ;
 Person ::= Assistant ;
 Person ::= Volunteer ;
 Person ::= participant ;
 Person ::= ConferenceChair ;
 Person ::= Attendee ;
 Person ::= SessionChair ;
 Person ::= TPCMember ;
 Person ::= Paper_Author ;
 Person ::= Conference_Participant ;
 Person ::= Agency_Staff_Member ;
 Person ::= Possible_Reviewer ;
 Person ::= Student ;
 Person ::= Delegate ;
 Person ::= Sponsor ;
 Person ::= OutsideReferee ;
 Person ::= ConferenceAttendant ;
 Person ::= Program_Comitee_Chair ;
 Person ::= ProgramCommitteeMember ;
 Person ::= Chairman ;
 Person ::= Organizer ;
 Person ::= Speaker ;
 Person ::= hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person ;
ProgramCommitteeMember ::= ProgramCommitteeChair ;
 ProgramCommitteeMember ::= Chair ;
 ProgramCommitteeMember ::= memberOfProgramCommittee::ProgramCommittee maxPapers::Integer addedBy::Administrator isMemberOf::ProgramCommittee hasPassword::String ;
Invited_Talk_Abstract ::= (is_the_1th_part_of::Thing)+ part_of_article::Article ;
Poster ::= is_submitted_at::Conference_volume ;
 Poster ::= changedBy::Author hasContributionStatus::EEnum writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
 Poster ::= hasContributionFileStatus::EEnum ;
RegistrationChair ::= organizes::Conference ;
Invitation_letter ::= (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document recieved_by::User used_by::Person submited__by::User ;
Paper ::= PaperFullVersion ;
 Paper ::= Invited_Paper ;
 Paper ::= Short_Paper ;
 Paper ::= Full_Paper ;
 Paper ::= Undecided_Paper ;
 Paper ::= ActivePaper ;
 Paper ::= PendingPaper ;
 Paper ::= WithdrawnPaper ;
 Paper ::= RejectedPaper ;
 Paper ::= PublishedPaper ;
 Paper ::= Camera_Ready_Paper ;
 Paper ::= Workshop_Paper ;
 Paper ::= Industrial_Paper ;
 Paper ::= Conference_Paper ;
 Paper ::= Poster_Paper ;
 Paper ::= Regular_Paper ;
 Paper ::= Demo_Paper ;
 Paper ::= AcceptedPaper ;
 Paper ::= Submitted_Paper ;
 Paper ::= Abstract ;
 Paper ::= Accepted_Paper ;
 Paper ::= Rejected_Paper ;
 Paper ::= PaperAbstract ;
 Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum hasCo-Author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
Volunteer ::= hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person ;
Conference_announcement ::= has_authors::Person has_a_date_of_issue::date ;
WithdrawnPaper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum hasCo-Author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
Program_Committee_Chair ::= is_author_of::Article performs_activity::Activity is_employed_in::institute has_topic_of_interest::Topic supervises::Activity e-mail::String last_name::String first_name::String ;
PCMembersList ::= isProducedBy::Chair ;
Program_committee ::= was_a_program_committee_of::Conference_volume ;
paper_assignment ::= Manual_Paper_Assignment ;
 paper_assignment ::= Automatic_Paper_Assignment ;
 paper_assignment ::= assign_paper::Program_Committee_member is_performed_by::human ;
Lecture ::= Plenary_lecture ;
 Lecture ::= QualitatvieLecture ;
 Lecture ::= TraditionalLecture ;
 Lecture ::= hasAcronym::String ;
Committee ::= Program_committee ;
 Committee ::= Organizing_committee ;
 Committee ::= Steering_committee ;
 Committee ::= has_members::Committee_member was_a_committee_of::Conference_volume has_a_committee_co-chair::Co-chair has_a_committee_chair::Chair ;
Evaluation ::= isContainedIn::Review ;
OutputDocument ::= CD-ROM ;
 OutputDocument ::= IndexOfAuthors ;
 OutputDocument ::= ExternalReviewersList ;
 OutputDocument ::= Program ;
 OutputDocument ::= PCMembersList ;
 OutputDocument ::= ListOfAbstracts ;
 OutputDocument ::= BookletOfAbstracts ;
 OutputDocument ::= Proceedings ;
 OutputDocument ::= isProducedBy::Chair ;
Conference_hall ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
QualitatvieLecture ::= hasAcronym::String ;
Automatic_Paper_Assignment ::= (automatically_assign_paper::Program_Committee_member)+ ;
Symposium ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location ;
Organization ::= Company ;
 Organization ::= AcademiaOrganization ;
 Organization ::= IndustryOrganization ;
 Organization ::= NGO ;
 Organization ::= GovernmentOrganization ;
 Organization ::= University ;
 Organization ::= isProviderOf::Sponsorship ;
Undecided_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum hasCo-Author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
Steering_committee ::= was_a_steering_committee_of::Conference_volume ;
AuthorNotReviewer ::= submitPaper::Paper writes::Contribution writes_article::Article assigns_article_to_conference::Article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution ;
review_form ::= is_created_in::Activity ;
Deadline_for_notification_of_acceptance ::= done_till::date ;
Senior_Program_Committee_member ::= supervises::Activity ;
ActivitySubmissionForm ::= TutorialProposal ;
 ActivitySubmissionForm ::= WorksopProposal ;
 ActivitySubmissionForm ::= isSubmittedBy::Author hasAuthor::Author submissionDeadline::dateTime ;
AssociatedChair ::= memberOfConference::Conference ;
Conference ::= Conference_volume ;
 Conference ::= TwoLevelConference ;
 Conference ::= SingleLevelConference ;
 Conference ::= is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country isOrganizedBy::OrganizingCommittee annualOrder::Integer takesPlace::Location hasAcronym::String finishedBy::Program_Comitee_Chair focusesOn::Topic startedBy::Program_Comitee_Chair takesPlace::Location hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
Document ::= Email ;
 Document ::= Template ;
 Document ::= Article ;
 Document ::= SlideSet ;
 Document ::= Programme ;
 Document ::= MealMenu ;
 Document ::= Programme_Brochure ;
 Document ::= Flyer ;
 Document ::= Web_Site ;
 Document ::= Multi-author_Volume ;
 Document ::= Form ;
 Document ::= Mailing_list ;
 Document ::= Record_of_attendance ;
 Document ::= Brief_introduction_for_Session_chair ;
 Document ::= Invitation_letter ;
 Document ::= Viza ;
 Document ::= Transparency ;
 Document ::= Submission ;
 Document ::= Payment_document ;
 Document ::= Evaluation ;
 Document ::= PaperAbstract ;
 Document ::= (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document recieved_by::User used_by::Person submited__by::User ;
Viza ::= (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document recieved_by::User used_by::Person submited__by::User ;
Presentation ::= Invited_talk ;
 Presentation ::= PowerPoint_presentation ;
 Presentation ::= Video_presentation ;
 Presentation ::= is_given_by::Active_conference_participant ;
Reviewed_contribution ::= Accepted_contribution ;
 Reviewed_contribution ::= Rejected_contribution ;
 Reviewed_contribution ::= has_a_review::Review ;
WirelessCommunicationsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
participant ::= submits_to_conference::Conference ;
Item ::= Transport_vehicle ;
 Item ::= Card ;
 Item ::= Audiovisual_equipment ;
 Item ::= Publication ;
 Item ::= Document ;
 Item ::= go_through::Activity (is_used_for::Thing)+ is_signed_by::Person is_made_from::Item is_sent_after::Time is_needed_for::Person is_sent_before::Time is_prepared_by::Person is_used_by::Person is_given_to::Person is_sent_by::Person is_writen_by::Person ;
ConferenceAttendant ::= mustPay::Fee hasAdress::String paid::Boolean hasPhone::String ;
Activity ::= Event_Creation ;
 Activity ::= Request ;
 Activity ::= Event_Approval ;
 Activity ::= Registration ;
 Activity ::= paper_assignment ;
 Activity ::= bidding_of_reviewer ;
 Activity ::= managing_of_conference_process ;
 Activity ::= reviewing_proces ;
 Activity ::= notification ;
 Activity ::= submission_process ;
 Activity ::= Activity_before_conference ;
 Activity ::= Conference_activity ;
 Activity ::= Activity_after_conference ;
 Activity ::= Lecture ;
 Activity ::= hasTopic::Topic expectedAttendance::Integer isPartOf::Conference is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime has_result::Article sent_by::Person is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::Article is_performed_by::human is_supervised_by::human ;
PowerPoint_presentation ::= is_given_by::Active_conference_participant ;
human ::= Program_Committee_member ;
 human ::= Contact_Person ;
 human ::= Program_Committee_Chair ;
 human ::= is_author_of::Article performs_activity::Activity is_employed_in::institute has_topic_of_interest::Topic supervises::Activity e-mail::String last_name::String first_name::String ;
FinanceChair ::= organizes::Conference ;
Track ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Program_chair ::= made_program::Conference_Program ;
CADTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
Blocked_Phase ::= hasPhaseStatus::EEnum ;
Event_Creation ::= hasTopic::Topic expectedAttendance::Integer isPartOf::Conference is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime has_result::Article sent_by::Person is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::Article is_performed_by::human is_supervised_by::human ;
PublicationsChair ::= organizes::Conference ;
Speaker_lecture ::= hasAssignedPaper::AcceptedPaper room::String isAssociatedTo::Slot hasChair::Chair ;
Conference_part ::= Track ;
 Conference_part ::= Workshop ;
 Conference_part ::= Tutorial ;
 Conference_part ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Possible_Reviewer ::= PC_Member ;
 Possible_Reviewer ::= reviewerOfPaper::Paper ;
Participant ::= Student ;
 Participant ::= Regular ;
 Participant ::= Member ;
 Participant ::= earlyRegistration::Boolean ;
Program_Comitee ::= discusses::Paper ;
SlideSet ::= (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document recieved_by::User used_by::Person submited__by::User ;
MeetingRoomPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
Neutral_Review ::= reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer containsEvaluation::Evaluation rates::Paper isWritenBy::Reviewer writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::Activity review_written_by::Reviewer ;
Submissions_deadline ::= done_till::date ;
ExternalReviewer ::= cooperatesReviewer::Reviewer assignedByReviewer::Reviewer ;
Topic ::= ParallelAndDistributedComputingTopic ;
 Topic ::= WirelessCommunicationsTopic ;
 Topic ::= OperatingTopicsystems ;
 Topic ::= ComputerNetworksTopic ;
 Topic ::= SatelliteAndSpaceCommunicationsTopic ;
 Topic ::= CADTopic ;
 Topic ::= MultimediaTopic ;
 Topic ::= CommunicationsTopic ;
 Topic ::= PowerlineTransmissionTopic ;
 Topic ::= AntennasTopic ;
 Topic ::= PerformanceTopic ;
 Topic ::= SignalProcessingTopic ;
 Topic ::= MicroelectronicsTopic ;
 Topic ::= TestOnlyTopic ;
 Topic ::= RadioCommunicationsTopic ;
 Topic ::= ComputerArchitectureTopic ;
 Topic ::= MedicineTopic ;
 Topic ::= SecurityTopic ;
 Topic ::= MobileComputingTopic ;
 Topic ::= CryptographyTopic ;
 Topic ::= CommunicationTheoryTopic ;
 Topic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
ContactInformation ::= hasCity::String hasStreet::String hasPostalCode::String hasPhone::String ;
Submitted_Paper ::= Assigned_Paper ;
 Submitted_Paper ::= Reviewed_Paper ;
 Submitted_Paper ::= Advocated_Paper ;
 Submitted_Paper ::= is_stored_in::Paper_File has_been_sent_by::Contact_Author Paper_Id::String Comments_To_Chair::String ;
Author_cd_proceedings_included ::= submitPaper::Paper writes::Contribution writes_article::Article assigns_article_to_conference::Article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution ;
Session_room ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
Record_of_attendance ::= (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document recieved_by::User used_by::Person submited__by::User ;
Slides ::= hasContributionFileStatus::EEnum ;
Individual_Presentation ::= Invited_Talk ;
 Individual_Presentation ::= Contributed_Talk ;
 Individual_Presentation ::= (presentationOfPaper::Document)+ ;
PerformanceTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
Sponzorship ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
Reviewing_results_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Programme ::= belongsToEvent::ConferenceEvent ;
Sponsor ::= hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person ;
Organisation ::= Organising_Agency ;
 Organisation ::= Academic_Institution ;
 Organisation ::= Proceedings_Publisher ;
 Organisation ::= (publisherOf::Thing)+ technicallyOrganises::Thing ;
Setup_Phase ::= hasPhaseStatus::EEnum ;
Evaluated_Paper ::= Accepted_Paper ;
 Evaluated_Paper ::= Rejected_Paper ;
 Evaluated_Paper ::= hasReview::Review ;
AcademiaOrganization ::= isProviderOf::Sponsorship ;
ConferenceMember ::= Reviewer ;
 ConferenceMember ::= ConferenceChair ;
 ConferenceMember ::= AssociatedChair ;
 ConferenceMember ::= ProgramCommitteeMember ;
 ConferenceMember ::= Chairman ;
 ConferenceMember ::= memberOfConference::Conference ;
MedicineTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
Accepted_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum hasCo-Author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer hasReview::Review ;
Submitted_contribution ::= Reviewed_contribution ;
 Submitted_contribution ::= has_a_review_expertise::Review_expertise ;
Agency_Staff_Member ::= hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person ;
Track-workshop_chair ::= was_a_track-workshop_chair_of::Conference_part ;
notification ::= has_result::Article is_performed_by::human ;
RatedPapers ::= hasRating::ReviewRating ;
Regular_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum hasCo-Author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
ConferenceChair ::= memberOfConference::Conference ;
 ConferenceChair ::= hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person ;
Closed_Phase ::= hasPhaseStatus::EEnum ;
Place ::= DiningPlace ;
 Place ::= ConferenceVenuePlace ;
 Place ::= MeetingRoomPlace ;
 Place ::= AccommodationPlace ;
 Place ::= Building ;
 Place ::= Session_room ;
 Place ::= Hotel_room ;
 Place ::= Conference_hall ;
 Place ::= Main_office ;
 Place ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
EEnum ::= (male::ε) | (female::ε) | (high::ε) | (medium::ε) | (low::ε) | (very high::ε) | (submitted::ε) | (missing::ε) | (notStarted::ε) | (active::ε) | (finished::ε) | (accepted::ε) | (rejected::ε) | (regular::ε) | (invited::ε) | (lowBid::ε) | (-::ε) | (CONFLICT::ε) | (wantNot::ε) | (highBid::ε) | (Yes::ε) | (No::ε) | (Compilers::ε) | (Microarchitecture::ε) | (Systems::ε) | (ForwardLookingIdea::ε) | (Accept::ε) | (Reject::ε) | (Unsure::ε) ;
Camera_Ready_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Abstract_And_Paper_Submission_Phase ::= hasPhaseStatus::EEnum ;
Bid ::= adjustedBy::Reviewer ;
ListOfAbstracts ::= isProducedBy::Chair ;
Attendee ::= hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person ;
Manual_Paper_Assignment ::= (manually_assign_paper::Program_Committee_member)+ ;
Registration ::= hasTopic::Topic expectedAttendance::Integer isPartOf::Conference is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime has_result::Article sent_by::Person is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::Article is_performed_by::human is_supervised_by::human ;
 Registration ::= ε ;
Article ::= group_email ;
 Article ::= notification_email ;
 Article ::= abstract_of_paper ;
 Article ::= review_form ;
 Article ::= summary_of_reviews ;
 Article ::= Review ;
 Article ::= article_written_by::Author has_reviewer::Reviewer has_abstract::Abstract goes_through::Activity is_sent_to::human is_created_in::Activity structure_created_by::human has_author::human gives_classification::classification ;
WorksopProposal ::= isSubmittedBy::Author hasAuthor::Author submissionDeadline::dateTime ;
Workshop_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum hasCo-Author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
ConferenceDinner ::= hasMenu::MealMenu ;
Meta-Reviewer ::= invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ writes_review::Review hasReviewHistory::PersonalReviewHistory executes::DoubleBlindReview cooperates::ExternalReviewer IsAssignedTo::Paper hasConflictedPaper::Paper hasPreferredPaper::Paper hasPreferredTopic::ResearchTopic writeReview::Review has_made_review::Paper_Review UserName::String Comments_to_Chair::String Other_Areas::String refuses::Pending_Proposed_Conflict reviews::Paper bidsFor::Paper confirmes::Pending_Proposed_Conflict assignedPaperBy::Program_Comitee_Chair assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper assignExternalReviewer::ExternalReviewer ;
ProgramCommitteeChair ::= endReview::Review ;
Contact_Author ::= has_sent::Submitted_Paper Alternate_Email::String ;
Call_for_participation ::= has_authors::Person has_a_date_of_issue::date ;
Invitation_Of_Reviewers_Phase ::= hasPhaseStatus::EEnum ;
Scholar ::= studyAt::University ;
MainAuthor ::= submitPaper::Paper writes::Contribution writes_article::Article assigns_article_to_conference::Article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution ;
TPCMember ::= hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person ;
Assistant ::= hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person ;
ConferenceEvent ::= NonAcademicEvent ;
 ConferenceEvent ::= AcademicEvent ;
 ConferenceEvent ::= hasAttendee::Person hasLocation::Place hasProgramme::Programme hasEndDateTime::dateTime hasStartDateTime::dateTime ;
Conference_document ::= Conference_contribution ;
 Conference_document ::= Information_for_participants ;
 Conference_document ::= Call_for_paper ;
 Conference_document ::= Conference_announcement ;
 Conference_document ::= Call_for_participation ;
 Conference_document ::= Conference_www ;
 Conference_document ::= has_authors::Person has_a_date_of_issue::date ;
Member ::= Program_chair ;
 Member ::= Advocate ;
 Member ::= Web_address::String ;
Multi-author_Volume ::= Proceedings ;
 Multi-author_Volume ::= (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document recieved_by::User used_by::Person submited__by::User ;
ProgramCoChair ::= organizes::Conference ;
Regular_Session ::= hasAssignedPaper::AcceptedPaper room::String isAssociatedTo::Slot hasChair::Chair ;
People ::= Member ;
 People ::= Author ;
 People ::= Surname::String Name::String Country::String E-mail::String Organisation::String ;
University ::= isProviderOf::Sponsorship scientificallyOrganises::Academic_Institution ;
Administrator ::= approve::Event assign::Role assigns::Thing finalizePaperAssignment::Conference runPaperAssignmentTools::Conference enableVirtualMeeting::Conference startReviewerBidding::Conference assignReviewer::Reviewer rejectPaper::Paper enterConferenceDetails::Conference printHardcopyMailingManifests::Conference setMaxPapers::ProgramCommitteeMember enterReviewCriteria::Conference acceptPaper::Paper addProgramCommitteeMember::ProgramCommitteeMember ;
Author_Role ::= assigned_by::Administrator ;
Conference_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum hasCo-Author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
bidding_of_reviewer ::= is_performed_by::human ;
BookletOfAbstracts ::= isProducedBy::Chair ;
PaperPresentation ::= relatedToPaper::AcceptedPaper ;
StudentAdvocate ::= organizes::Conference ;
Chair ::= was_a_committee_chair_of::Committee assigns_reviewers_to_article::Reviewer creates_program::program produces::OutputDocument sets::Thing accepts::Paper rejects::Paper asksForPreference::Reviewer isChairOf::Session ;
Negative_Review ::= reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer containsEvaluation::Evaluation rates::Paper isWritenBy::Reviewer writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::Activity review_written_by::Reviewer ;
ExternalReviewersList ::= isProducedBy::Chair ;
abstract_of_paper ::= article_written_by::Author has_reviewer::Reviewer has_abstract::Abstract goes_through::Activity is_sent_to::human is_created_in::Activity structure_created_by::human has_author::human gives_classification::classification ;
Money ::= Tax ;
 Money ::= Fee ;
 Money ::= Sponzorship ;
 Money ::= Tip ;
 Money ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
Approval_Email ::= confirm::Event ;
AntennasTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
Source_Archive ::= hasContributionFileStatus::EEnum ;
MicroelectronicsTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
Template ::= (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document recieved_by::User used_by::Person submited__by::User ;
Role ::= Admin_Role ;
 Role ::= Author_Role ;
 Role ::= Committe_Role ;
 Role ::= Head_Role ;
 Role ::= Reviewer_Role ;
 Role ::= assigned_by::Administrator ;
Chairman ::= ConferenceChair ;
 Chairman ::= AssociatedChair ;
 Chairman ::= ProgramCommitteeChair ;
 Chairman ::= hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person memberOfConference::Conference ;
Contributed_Talk ::= (presentationOfPaper::Document)+ ;
Contact_Person ::= is_author_of::Article performs_activity::Activity is_employed_in::institute has_topic_of_interest::Topic supervises::Activity e-mail::String last_name::String first_name::String ;
TutorialProposal ::= isSubmittedBy::Author hasAuthor::Author submissionDeadline::dateTime ;
Paper_File ::= is_Type::Format ;
Proposed_Conflict ::= conflictProposedBy::Thing ;
Rejected_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum hasCo-Author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer hasReview::Review ;
Event_Approval ::= hasTopic::Topic expectedAttendance::Integer isPartOf::Conference is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime has_result::Article sent_by::Person is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::Article is_performed_by::human is_supervised_by::human ;
Invited_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum hasCo-Author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
program ::= program_created_by::Chair has_session::Session ;
Plenary_lecture_speaker ::= submitPaper::Paper writes::Contribution writes_article::Article assigns_article_to_conference::Article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution ;
Criterion ::= hasWeight::double ;
Academic_Institution ::= Research_Institute ;
 Academic_Institution ::= University ;
 Academic_Institution ::= scientificallyOrganises::Academic_Institution ;
PaperStatus ::= isStatusOf::Paper ;
Call ::= CallForPapers ;
 Call ::= CallForReviews ;
 Call ::= CallForManuscripts ;
 Call ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
Video_presentation ::= is_given_by::Active_conference_participant ;
Author_book_proceedings_included ::= submitPaper::Paper writes::Contribution writes_article::Article assigns_article_to_conference::Article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution ;
submission_process ::= is_performed_by::human ;
Tip ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
Camera_ready_manuscript_deadline ::= done_till::date ;
Event ::= Symposium ;
 Event ::= Social_event ;
 Event ::= Administrative_event ;
 Event ::= Working_event ;
 Event ::= pc_meeting ;
 Event ::= Social_Event ;
 Event ::= Scientific_Event ;
 Event ::= conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location ;
Deadline ::= Deadline_hotel_reservation ;
 Deadline ::= Submissions_deadline ;
 Deadline ::= Deadline_for_notification_of_acceptance ;
 Deadline ::= Registation_deadline ;
 Deadline ::= Camera_ready_manuscript_deadline ;
 Deadline ::= done_till::date ;
MealEvent ::= ConferenceDinner ;
 MealEvent ::= hasMenu::MealMenu ;
PublicityWebChair ::= organizes::Conference ;
Session ::= Conference_Session ;
 Session ::= Regular_Session ;
 Session ::= Poster_Session ;
 Session ::= Demo_Session ;
 Session ::= Workshop_Session ;
 Session ::= Speaker_lecture ;
 Session ::= hasAssignedPaper::AcceptedPaper room::String isAssociatedTo::Slot hasChair::Chair ;
Research_Institute ::= scientificallyOrganises::Academic_Institution ;
Reviewer_Role ::= assigned_by::Administrator ;
Committe_Role ::= assigned_by::Administrator ;
PhaseOfConferencePreparation ::= Setup_Phase ;
 PhaseOfConferencePreparation ::= Camera_Ready_Copy_Phase ;
 PhaseOfConferencePreparation ::= Assignment_Phase ;
 PhaseOfConferencePreparation ::= Blocked_Phase ;
 PhaseOfConferencePreparation ::= Abstract_And_Paper_Submission_Phase ;
 PhaseOfConferencePreparation ::= Invitation_Of_Reviewers_Phase ;
 PhaseOfConferencePreparation ::= Review_Phase ;
 PhaseOfConferencePreparation ::= Closed_Phase ;
 PhaseOfConferencePreparation ::= Bidding_Phase ;
 PhaseOfConferencePreparation ::= hasPhaseStatus::EEnum ;
Administrative_event ::= Reviewing_results_event ;
 Administrative_event ::= Reviewing_event ;
 Administrative_event ::= Registration_of_participants_event ;
 Administrative_event ::= Submission_event ;
 Administrative_event ::= Camera_Ready_event ;
 Administrative_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Brief_introduction_for_Session_chair ::= (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document recieved_by::User used_by::Person submited__by::User ;
Program ::= isProducedBy::Chair ;
Conference_Program ::= Program_made_by::Program_chair planned_papers::Planed_Paper ;
Proceedings ::= Conference_Proceedings ;
 Proceedings ::= (includes::Thing)+ ;
Positive_Review ::= reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer containsEvaluation::Evaluation rates::Paper isWritenBy::Reviewer writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::Activity review_written_by::Reviewer ;
PublishedPaper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum hasCo-Author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
Company ::= isProviderOf::Sponsorship ;
DoubleBlindReview ::= isExecutedBy::Reviewer ;
Event_Setup ::= Paper_Typologies ;
 Event_Setup ::= Review_Form ;
 Event_Setup ::= Submission_Template ;
 Event_Setup ::= Event_Tracks ;
 Event_Setup ::= Research_Topic ;
 Event_Setup ::= Email_Template ;
 Event_Setup ::= define::Event ;
CommitteeMember ::= isMemberOf::Conference ;
Corresponding_Author ::= submitPaper::Paper writes::Contribution writes_article::Article assigns_article_to_conference::Article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution ;
PendingPaper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum hasCo-Author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
PowerlineTransmissionTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
IndustryOrganization ::= isProviderOf::Sponsorship ;
TestOnlyTopic ::= belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part isTopicOf::Working_event isIncluded::Activity ;
Contribution_File ::= Source_Archive ;
 Contribution_File ::= Poster ;
 Contribution_File ::= Camera_Ready_Copy ;
 Contribution_File ::= Slides ;
 Contribution_File ::= Paper_File ;
 Contribution_File ::= hasContributionFileStatus::EEnum ;
Industrial_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum hasCo-Author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
CD-ROM ::= isProducedBy::Chair ;
Co-chair ::= was_a_committe_co-chair_of::Committee ;
Abstract ::= Tutorial_Abstract ;
 Abstract ::= Invited_Talk_Abstract ;
 Abstract ::= (is_the_1th_part_of::Thing)+ part_of_article::Article ;
Flyer ::= (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document recieved_by::User used_by::Person submited__by::User ;
Tutorial_speaker ::= submitPaper::Paper writes::Contribution writes_article::Article assigns_article_to_conference::Article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution ;
Organising_Agency ::= (publisherOf::Thing)+ technicallyOrganises::Thing ;
PaperFullVersion ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum hasCo-Author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
Demo_Session ::= hasAssignedPaper::AcceptedPaper room::String isAssociatedTo::Slot hasChair::Chair ;
SingleLevelConference ::= is_in_phase::phase_of_conference has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country isOrganizedBy::OrganizingCommittee annualOrder::Integer takesPlace::Location hasAcronym::String finishedBy::Program_Comitee_Chair focusesOn::Topic startedBy::Program_Comitee_Chair takesPlace::Location hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
Sponsorship ::= TravelGrant ;
 Sponsorship ::= providedBy::Organization hasCostCurrency::String hasCostAmount::Integer ;
ConferenceVenuePlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
Conference_contribution ::= Poster ;
 Conference_contribution ::= Written_contribution ;
 Conference_contribution ::= Presentation ;
 Conference_contribution ::= is_submitted_at::Conference_volume ;
Invited_Talk ::= (presentationOfPaper::Document)+ ;
Demo_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum hasCo-Author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
CallForReviews ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
Contribution ::= Poster ;
 Contribution ::= Short_paper ;
 Contribution ::= Contribution_File ;
 Contribution ::= Paper ;
 Contribution ::= changedBy::Author hasContributionStatus::EEnum writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String ;
Paper_Typologies ::= define::Event ;
Information_for_participants ::= has_authors::Person has_a_date_of_issue::date ;
Camera_Ready_Copy_Phase ::= hasPhaseStatus::EEnum ;
Programme_Brochure ::= (relatesTo::Thing)+ writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document recieved_by::User used_by::Person submited__by::User ;
Reviewer ::= Meta-Reviewer ;
 Reviewer ::= invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ writes_review::Review hasReviewHistory::PersonalReviewHistory executes::DoubleBlindReview cooperates::ExternalReviewer IsAssignedTo::Paper hasConflictedPaper::Paper hasPreferredPaper::Paper hasPreferredTopic::ResearchTopic writeReview::Review has_made_review::Paper_Review UserName::String Comments_to_Chair::String Other_Areas::String refuses::Pending_Proposed_Conflict reviews::Paper bidsFor::Paper confirmes::Pending_Proposed_Conflict assignedPaperBy::Program_Comitee_Chair assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper assignExternalReviewer::ExternalReviewer ;
Meta-Review ::= reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer containsEvaluation::Evaluation rates::Paper isWritenBy::Reviewer writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::Activity review_written_by::Reviewer ;
Slot ::= date::date endsAt::time beginsAt::time forms::ConferenceProgram hosts::Session ;
Student ::= earlyRegistration::Boolean ;
 Student ::= hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ pay::Money sign::Item is_present::Time (give::Thing)+ need::Item hasAffiliation::String hasFirstName::String hasLastName::String hasEmail::String hasName::String hasConflictOfInterest::Document email::String (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person ;
Poster_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum hasCo-Author::Co-Author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
managing_of_conference_process ::= hasTopic::Topic expectedAttendance::Integer isPartOf::Conference is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime has_result::Article sent_by::Person is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::Article is_performed_by::human is_supervised_by::human ;
Planed_Paper ::= is_planned_in::Conference_Program ;
Call_for_paper ::= has_authors::Person has_a_date_of_issue::date ;
Conference_www ::= has_a_URL::String ;
Rejected_contribution ::= has_a_review::Review ;
Invited_talk ::= is_given_by::Active_conference_participant ;
Submission_Template ::= define::Event ;
Account ::= registred_by::Person ;
Event_Tracks ::= define::Event ;
Co-Author ::= co-writePaper::Paper ;
Camera_Ready_Copy ::= hasContributionFileStatus::EEnum ;
Review_expertise ::= has_a_submitted_contribution::Submitted_contribution has_an_expertise::EEnum ;
Event_URL ::= concerned::Event ;
Important_dates ::= is_an_abstract_submission_date::date is_a_full_paper_submission_date::date is_an_ending_date::date is_a_date_of_acceptance_announcement::date is_a_date_of_camera_ready_paper_submission::date is_a_starting_date::date belong_to_a_conference_volume::Conference_volume ;
Submission_event ::= follows::Administrative_event parallel_with::Administrative_event ;
ActivePaper ::= RatedPapers ;
 ActivePaper ::= hasRating::ReviewRating ;
AcceptedPaper ::= relatedToEvent::PaperPresentation isAssignedToSession::Session ;
TravelGrant ::= providedBy::Organization hasCostCurrency::String hasCostAmount::Integer ;
Review_preference ::= (has_a_topic_or_a_submission_contribution::Thing)+ has_a_degree::Integer ;
--------------------metamodels::sbvrEclipse.bgf--------------------
WhetherornotFormulation ::= (inconsequent::LogicalFormulation)+ (consequent::LogicalFormulation)+ ;
ReferenceSchemeSimplyUsesFactTypeRole ::= referenceScheme::ReferenceScheme factTypeRole::FactTypeRole ;
FactModel ::= (name::Name)+ ;
BusinessRule ::= StructuralBusinessRule ;
 BusinessRule ::= OperativeBusinessRule ;
 BusinessRule ::= isPracticable::Boolean ;
ClosedProjection ::= constrainingFormulation::LogicalFormulation (projectionVariable::Variable)+ (auxiliaryVariable::AuxiliaryVariable)+ ;
VocabularyNamespaceIsSpecificToSubjectField ::= vocabularyNamespace::VocabularyNamespace subjectField::SubjectField ;
ReferenceSchemeIsForConcept ::= referenceScheme::ReferenceScheme concept::Concept ;
DesignationHasSignifier ::= designation::Designation signifier::Expression ;
FactTypeHasFactInFactModel ::= factType::FactType fact::Fact factModel::FactModel ;
ProjectionHasAuxiliaryVariable ::= projection::Projection auxiliaryVariable::AuxiliaryVariable ;
VocabularyNamespace ::= (uri::Uri)+ ;
NandFormulation ::= (logicalOperand2::LogicalFormulation)+ (logicalOperand1::LogicalFormulation)+ ;
WhetherornotFormulationHasConsequent ::= whetherornotFormulation::WhetherornotFormulation consequent::LogicalFormulation ;
VocabularyNamespaceIsDerivedFromVocabulary ::= vocabularyNamespace::VocabularyNamespace vocabulary::Vocabulary ;
PropositionNominalizationConsidersLogicalFormulation ::= propositionNominalization::PropositionNominalization logicalFormulation::LogicalFormulation ;
Representation ::= Designation ;
 Representation ::= Definition ;
 Representation ::= Statement ;
 Representation ::= FactTypeForm ;
 Representation ::= CommunicationContent ;
 Representation ::= Description ;
 Representation ::= DescriptiveExample ;
 Representation ::= FormalRepresentation ;
 Representation ::= InformalRepresentation ;
 Representation ::= Note ;
 Representation ::= Reference ;
 Representation ::= meaning::Meaning expression::Expression ;
SpeechCommunityDeterminesRulebook ::= speechCommunity::SpeechCommunity rulebook::Rulebook ;
AttributiveNamespace ::= (uri::Uri)+ ;
SpeechCommunityUsesLanguage ::= speechCommunity::SpeechCommunity language::Language ;
Viewpoint ::= (name::Name)+ ;
NumericRangeQuantification ::= maximumCardinality::NonnegativeInteger minimumCardinality::NonnegativeInteger ;
AtmostoneQuantification ::= maximumCardinality::NonnegativeInteger ;
ProjectingFormulationBindsToBindableTarget ::= projectingFormulation::ProjectingFormulation bindableTarget::BindableTarget ;
ConceptHasInstance ::= concept::Concept instance::Thing ;
FactType ::= Characteristic ;
 FactType ::= AssociativeFactType ;
 FactType ::= AssortmentFactType ;
 FactType ::= BinaryFactType ;
 FactType ::= SpecializationFactType ;
 FactType ::= IsroleofFactType ;
 FactType ::= (factTypeForm::FactTypeForm)+ (role::FactTypeRole)+ ;
RepresentationHasExpression ::= representation::Representation expression::Expression ;
LevelOfEnforcement ::= (name::Name)+ ;
SpeechCommunityOwnsOwnedDefinition ::= speechCommunity::SpeechCommunity ownedDefinition::OwnedDefinition ;
CommunicationContent ::= meaning::Meaning expression::Expression ;
AtomicFormulationIsBasedOnFactType ::= atomicFormulation::AtomicFormulation factType::FactType ;
Situation ::= (name::Name)+ ;
RulebookIncludesRepresentation ::= rulebook::Rulebook representation::Representation ;
BodyOfSharedMeaningsUnitesSemanticCommunity ::= bodyOfSharedMeanings::BodyOfSharedMeanings semanticCommunity::SemanticCommunity ;
Meaning ::= Proposition ;
 Meaning ::= Concept ;
 Meaning ::= Question ;
 Meaning ::= (representation::Representation)+ ;
LogicalOperationHasLogicalOperand ::= logicalOperation::LogicalOperation logicalOperand::LogicalFormulation ;
ConceptIsIncludedInBodyOfSharedConcepts ::= concept::Concept bodyOfSharedConcepts::BodyOfSharedConcepts ;
Description ::= meaning::Meaning expression::Expression ;
Implication ::= (consequent::LogicalFormulation)+ (antecedent::LogicalFormulation)+ ;
FactTypeRoleDesignation ::= implicitlyIsUnderstood::Boolean signifier::Expression ;
IntensionalDefinitionUsesDelimitingCharacteristic ::= intensionalDefinition::IntensionalDefinition delimitingCharacteristic::Characteristic ;
ConceptualSchema ::= (name::Name)+ ;
ModalFormulationEmbedsLogicalFormulation ::= modalFormulation::ModalFormulation logicalFormulation::LogicalFormulation ;
Designation ::= Name ;
 Designation ::= Placeholder ;
 Designation ::= FactSymbol ;
 Designation ::= FactTypeRoleDesignation ;
 Designation ::= NonverbalDesignation ;
 Designation ::= PreferredDesignation ;
 Designation ::= ProhibitedDesignation ;
 Designation ::= Term ;
 Designation ::= implicitlyIsUnderstood::Boolean signifier::Expression ;
PreferredDesignation ::= implicitlyIsUnderstood::Boolean signifier::Expression ;
AtmostnQuantificationHasMaximumCardinality ::= atmostnQuantification::AtmostnQuantification maximumCardinality::NonnegativeInteger ;
RoleBindingOccursInAtomicFormulation ::= roleBinding::RoleBinding atomicFormulation::AtomicFormulation ;
ResIsSensoryManifestationOfSignifier ::= res::Res signifier::Expression ;
AtleastnQuantification ::= ExistentialQuantification ;
 AtleastnQuantification ::= minimumCardinality::NonnegativeInteger ;
ConceptOfThingExistingDependently ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
FactTypeRoleHasRoleBinding ::= factTypeRole::FactTypeRole roleBinding::RoleBinding ;
Thing ::= StateOfAffairs ;
 Thing ::= Meaning ;
 Thing ::= BindableTarget ;
 Thing ::= SemanticFormulation ;
 Thing ::= Namespace ;
 Thing ::= RoleBinding ;
 Thing ::= ReferenceScheme ;
 Thing ::= Set ;
 Thing ::= BodyOfSharedConcepts ;
 Thing ::= BodyOfSharedGuidance ;
 Thing ::= CategorizationScheme ;
 Thing ::= Community ;
 Thing ::= ConceptualSchema ;
 Thing ::= FactModel ;
 Thing ::= Language ;
 Thing ::= LevelOfEnforcement ;
 Thing ::= Res ;
 Thing ::= Situation ;
 Thing ::= SubjectField ;
 Thing ::= TerminologicalDictionary ;
 Thing ::= Viewpoint ;
 Thing ::= (name::Name)+ ;
ObjectificationConsidersLogicalFormulation ::= objectification::Objectification logicalFormulation::LogicalFormulation ;
InstantiationFormulationBindsToBindableTarget ::= instantiationFormulation::InstantiationFormulation bindableTarget::BindableTarget ;
VocabularyIsDesignedForSpeechCommunity ::= vocabulary::Vocabulary speechCommunity::SpeechCommunity ;
QuantificationIntroducesVariable ::= quantification::Quantification variable::Variable ;
RepresentationIsInSubjectField ::= representation::Representation subjectField::SubjectField ;
FactTypeForm ::= NounForm ;
 FactTypeForm ::= SententialForm ;
 FactTypeForm ::= (placeholder::Placeholder)+ ;
Community ::= SemanticCommunity ;
 Community ::= SpeechCommunity ;
 Community ::= (uri::Uri)+ (subcommunity::Community)+ ;
BodyOfSharedMeaningsIncludesBodyOfSharedConcepts ::= bodyOfSharedMeanings::BodyOfSharedMeanings bodyOfSharedConcepts::BodyOfSharedConcepts ;
StatementExpressesProposition ::= statement::Statement proposition::Proposition ;
AtleastnQuantificationHasMinimumCardinality ::= atleastnQuantification::AtleastnQuantification minimumCardinality::NonnegativeInteger ;
FactTypeFormDemonstratesDesignation ::= factTypeForm::FactTypeForm designation::Designation ;
RepresentationRepresentsMeaning ::= representation::Representation meaning::Meaning ;
FactModelIsBasedOnConceptualSchema ::= factModel::FactModel conceptualSchema::ConceptualSchema ;
VocabularyNamespaceIsForLanguage ::= vocabularyNamespace::VocabularyNamespace language::Language ;
Disjunction ::= (logicalOperand2::LogicalFormulation)+ (logicalOperand1::LogicalFormulation)+ ;
ConceptHasSharedUnderstandingBySemanticCommunity ::= concept::Concept semanticCommunity::SemanticCommunity ;
SpeechCommunityAdoptsAdoptedDefinitionCitingReference ::= speechCommunity::SpeechCommunity adoptedDefinition::AdoptedDefinition reference::Reference ;
LogicalFormulationConstrainsProjection ::= logicalFormulation::LogicalFormulation projection::Projection ;
FormalRepresentation ::= meaning::Meaning expression::Expression ;
Characteristic ::= (factTypeForm::FactTypeForm)+ (role::FactTypeRole)+ ;
ExistentialQuantification ::= minimumCardinality::NonnegativeInteger ;
SpeechCommunityUsesVocabulary ::= speechCommunity::SpeechCommunity vocabulary::Vocabulary ;
PlaceholderUsesDesignation ::= placeholder::Placeholder designation::Designation ;
BinaryLogicalOperationHasLogicalOperand2 ::= binaryLogicalOperation::BinaryLogicalOperation logicalOperand2::LogicalFormulation ;
BinaryLogicalOperationHasLogicalOperand1 ::= binaryLogicalOperation::BinaryLogicalOperation logicalOperand1::LogicalFormulation ;
Conjunction ::= (logicalOperand2::LogicalFormulation)+ (logicalOperand1::LogicalFormulation)+ ;
Proposition ::= ElementOfGuidance ;
 Proposition ::= Rule ;
 Proposition ::= Fact ;
 Proposition ::= isFalse::Boolean isTrue::Boolean (statement::Statement)+ isPossiblyTrue::Boolean isObligatedToBeTrue::Boolean isPermittedToBeTrue::Boolean isNecessarilyTrue::Boolean ;
FactTypeIsElementaryInBodyOfSharedMeanings ::= factType::FactType bodyOfSharedMeanings::BodyOfSharedMeanings ;
BusinessRuleIsDerivedFromBusinessPolicy ::= businessRule::BusinessRule businessPolicy::BusinessPolicy ;
StateOfAffairsInvolvesThingInRole ::= stateOfAffairs::StateOfAffairs thing::Thing role::Role ;
ReferenceScheme ::= (simplyUsedRole::FactTypeRole)+ (identifyingCharacteristic::Characteristic)+ (extensionallyUsedRole::FactTypeRole)+ ;
NumericRangeQuantificationHasMinimumCardinality ::= numericRangeQuantification::NumericRangeQuantification minimumCardinality::NonnegativeInteger ;
QuestionNominalization ::= projection::Projection ;
PlaceholderIsInFactTypeForm ::= placeholder::Placeholder factTypeForm::FactTypeForm ;
CategorizationSchemeContainsCategory ::= categorizationScheme::CategorizationScheme category::Concept ;
Name ::= implicitlyIsUnderstood::Boolean signifier::Expression ;
VariableMapsToFactTypeRole ::= variable::Variable factTypeRole::FactTypeRole ;
SententialForm ::= (placeholder::Placeholder)+ ;
ConceptOfThingAsOccurrent ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
ConceptOfThingAsUnitary ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
SemanticCommunity ::= (speechCommunity::SpeechCommunity)+ ;
BusinessPolicyIsBasisForAdvice ::= businessPolicy::BusinessPolicy advice::Advice ;
SituationalRole ::= (categorizationScheme::CategorizationScheme)+ (categorizationType::CategorizationType)+ ;
BinaryLogicalOperation ::= Conjunction ;
 BinaryLogicalOperation ::= Disjunction ;
 BinaryLogicalOperation ::= Equivalence ;
 BinaryLogicalOperation ::= ExclusiveDisjunction ;
 BinaryLogicalOperation ::= Implication ;
 BinaryLogicalOperation ::= NandFormulation ;
 BinaryLogicalOperation ::= NorFormulation ;
 BinaryLogicalOperation ::= WhetherornotFormulation ;
 BinaryLogicalOperation ::= (logicalOperand2::LogicalFormulation)+ (logicalOperand1::LogicalFormulation)+ ;
FactTypeHasFactTypeForm ::= factType::FactType factTypeForm::FactTypeForm ;
ClosedProjectionFormalizesDefinition ::= closedProjection::ClosedProjection definition::Definition ;
Variable ::= AuxiliaryVariable ;
 Variable ::= restrictingFormulation::LogicalFormulation projectionPosition::PositiveInteger rangedoverConcept::Concept isUnitary::Boolean ;
CommunityHasUri ::= community::Community uri::Uri ;
Quantification ::= AtleastnQuantification ;
 Quantification ::= AtmostnQuantification ;
 Quantification ::= ExactlynQuantification ;
 Quantification ::= NumericRangeQuantification ;
 Quantification ::= UniversalQuantification ;
 Quantification ::= scopeFormulation::LogicalFormulation ;
TermDenotesThing ::= term::Term thing::Thing ;
ClosedSemanticFormulationFormulatesMeaning ::= closedSemanticFormulation::ClosedSemanticFormulation meaning::Meaning ;
ProjectingFormulationHasProjection ::= projectingFormulation::ProjectingFormulation projection::Projection ;
NoteCommentsOnMeaning ::= note::Note meaning::Meaning ;
DescriptionPortraysMeaning ::= description::Description meaning::Meaning ;
VariableHasProjectionPosition ::= variable::Variable projectionPosition::PositiveInteger ;
DesignationIsInNamespace ::= designation::Designation namespace::Namespace ;
OperativeBusinessRule ::= (levelOfEnforcement::LevelOfEnforcement)+ ;
ImplicationHasConsequent ::= implication::Implication consequent::LogicalFormulation ;
FactTypeNominalization ::= projection::Projection ;
NamespaceHasUri ::= namespace::Namespace uri::Uri ;
Fact ::= isFalse::Boolean isTrue::Boolean (statement::Statement)+ isPossiblyTrue::Boolean isObligatedToBeTrue::Boolean isPermittedToBeTrue::Boolean isNecessarilyTrue::Boolean ;
Term ::= implicitlyIsUnderstood::Boolean signifier::Expression ;
SpeechCommunityRegulatesItsUsageOfSignifier ::= speechCommunity::SpeechCommunity signifier::Expression ;
UniversalQuantification ::= scopeFormulation::LogicalFormulation ;
AnswerNominalization ::= projection::Projection ;
VocabularyNamespaceIsSpecificToDesignationContext ::= vocabularyNamespace::VocabularyNamespace designationContext::Concept ;
FactTypeInternallyIsClosedInConceptualSchema ::= factType::FactType conceptualSchema::ConceptualSchema ;
ExclusiveDisjunction ::= (logicalOperand2::LogicalFormulation)+ (logicalOperand1::LogicalFormulation)+ ;
ClosedProjectionDefinesFactType ::= closedProjection::ClosedProjection factType::FactType ;
FundamentalConcept ::= (categorizationScheme::CategorizationScheme)+ (categorizationType::CategorizationType)+ ;
FactTypeFormIsInNamespace ::= factTypeForm::FactTypeForm namespace::Namespace ;
FactTypeFormIncorporatesFactSymbol ::= factTypeForm::FactTypeForm factSymbol::FactSymbol ;
Res ::= (name::Name)+ ;
LogicalOperation ::= BinaryLogicalOperation ;
 LogicalOperation ::= LogicalNegation ;
 LogicalOperation ::= logicalOperand::LogicalFormulation ;
Quantity1IsLessThanQuantity2 ::= quantity1::Quantity quantity2::Quantity ;
IsroleofFactType ::= (factTypeForm::FactTypeForm)+ (role::FactTypeRole)+ ;
VocabularyIsUsedToExpressBodyOfSharedMeanings ::= vocabulary::Vocabulary bodyOfSharedMeanings::BodyOfSharedMeanings ;
FactTypeRole ::= (roleBinding::RoleBinding)+ ;
Language ::= (name::Name)+ ;
SetHasCardinality ::= set::Set cardinality::NonnegativeInteger ;
ConceptIncorporatesCharacteristic ::= concept::Concept characteristic::Characteristic ;
NounConceptNominalization ::= projection::Projection ;
BodyOfSharedGuidance ::= (name::Name)+ ;
DescriptiveExampleIllustratesMeaning ::= descriptiveExample::DescriptiveExample meaning::Meaning ;
FactModelIncludesFact ::= factModel::FactModel fact::Fact ;
AtmostnQuantification ::= AtmostoneQuantification ;
 AtmostnQuantification ::= maximumCardinality::NonnegativeInteger ;
TerminologicalDictionaryExpressesBodyOfSharedMeanings ::= terminologicalDictionary::TerminologicalDictionary bodyOfSharedMeanings::BodyOfSharedMeanings ;
FactTypeRoleIsInFactType ::= factTypeRole::FactTypeRole factType::FactType ;
ProjectingFormulation ::= AggregationFormulation ;
 ProjectingFormulation ::= AnswerNominalization ;
 ProjectingFormulation ::= FactTypeNominalization ;
 ProjectingFormulation ::= NounConceptNominalization ;
 ProjectingFormulation ::= QuestionNominalization ;
 ProjectingFormulation ::= projection::Projection ;
Projection ::= BagProjection ;
 Projection ::= ClosedProjection ;
 Projection ::= SetProjection ;
 Projection ::= constrainingFormulation::LogicalFormulation (projectionVariable::Variable)+ (auxiliaryVariable::AuxiliaryVariable)+ ;
LogicalNegation ::= logicalOperand::LogicalFormulation ;
ImplicationHasAntecedent ::= implication::Implication antecedent::LogicalFormulation ;
ConceptOfThingAsPrimitive ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
ConceptHasDesignation ::= concept::Concept designation::Designation ;
ClosedLogicalFormulationFormalizesStatement ::= closedLogicalFormulation::ClosedLogicalFormulation statement::Statement ;
TerminologicalDictionary ::= (uri::Uri)+ ;
InformalRepresentation ::= meaning::Meaning expression::Expression ;
TerminologicalDictionaryPresentsVocabulary ::= terminologicalDictionary::TerminologicalDictionary vocabulary::Vocabulary ;
QuantificationScopesOverLogicalFormulation ::= quantification::Quantification logicalFormulation::LogicalFormulation ;
ReferencePointsToInformationSource ::= reference::Reference informationSource::CommunicationContent ;
NumericRangeQuantificationHasMaximumCardinality ::= numericRangeQuantification::NumericRangeQuantification maximumCardinality::NonnegativeInteger ;
ExactlynQuantification ::= ExactlyoneQuantification ;
 ExactlynQuantification ::= cardinality::NonnegativeInteger ;
CategorizationTypeIsForGeneralConcept ::= categorizationType::CategorizationType generalConcept::ObjectType ;
InstantiationFormulationConsidersConcept ::= instantiationFormulation::InstantiationFormulation concept::Concept ;
SpeechCommunityOwnsVocabulary ::= speechCommunity::SpeechCommunity vocabulary::Vocabulary ;
ExpressionRepresentsMeaning ::= expression::Expression meaning::Meaning ;
CommunityHasSubcommunity ::= community::Community subcommunity::Community ;
AggregationFormulation ::= projection::Projection ;
ReferenceSchemeUsesCharacteristic ::= referenceScheme::ReferenceScheme characteristic::Characteristic ;
BagProjection ::= constrainingFormulation::LogicalFormulation (projectionVariable::Variable)+ (auxiliaryVariable::AuxiliaryVariable)+ ;
ExactlyoneQuantification ::= cardinality::NonnegativeInteger ;
RepresentationIsInDesignationContext ::= representation::Representation designationContext::Concept ;
ProjectionIsOnVariable ::= projection::Projection variable::Variable ;
Placeholder ::= startingCharacterPosition::PositiveInteger ;
ExactlynQuantificationHasCardinality ::= exactlynQuantification::ExactlynQuantification cardinality::NonnegativeInteger ;
ConceptHasImpliedCharacteristic ::= concept::Concept impliedCharacteristic::Characteristic ;
CategorizationSchemeIsForGeneralConcept ::= categorizationScheme::CategorizationScheme generalConcept::ObjectType ;
ConceptualSchemaIncludesFact ::= conceptualSchema::ConceptualSchema fact::Fact ;
ReferenceSchemeExtensionallyUsesFactTypeRole ::= referenceScheme::ReferenceScheme factTypeRole::FactTypeRole ;
SubjectField ::= (name::Name)+ ;
Text ::= Uri ;
 Text ::= value::String ;
MeaningCorrespondsToThing ::= meaning::Meaning thing::Thing ;
Uri ::= value::String ;
ElementOfGuidance ::= Advice ;
 ElementOfGuidance ::= ElementOfGovernance ;
 ElementOfGuidance ::= BusinessRule ;
 ElementOfGuidance ::= isPracticable::Boolean ;
Concept ::= NounConcept ;
 Concept ::= FactType ;
 Concept ::= CategorizationType ;
 Concept ::= ObjectType ;
 Concept ::= ConceptOfThingAsComposite ;
 Concept ::= ConceptOfThingAsContinuant ;
 Concept ::= ConceptOfThingAsDeveloped ;
 Concept ::= ConceptOfThingAsOccurrent ;
 Concept ::= ConceptOfThingAsPrimitive ;
 Concept ::= ConceptOfThingAsUnitary ;
 Concept ::= ConceptOfThingExistingDependently ;
 Concept ::= ConceptOfThingExistingIndependently ;
 Concept ::= DerivableConcept ;
 Concept ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
ThingIsInSet ::= thing::Thing set::Set ;
FactSymbol ::= implicitlyIsUnderstood::Boolean signifier::Expression ;
CommunicationContentIsComposedOfRepresentation ::= communicationContent::CommunicationContent representation::Representation ;
Quantity1EqualsQuantity2 ::= quantity1::Quantity quantity2::Quantity ;
BodyOfSharedMeanings1ContainsBodyOfSharedMeanings2 ::= bodyOfSharedMeanings1::BodyOfSharedMeanings bodyOfSharedMeanings2::BodyOfSharedMeanings ;
AuxiliaryVariable ::= restrictingFormulation::LogicalFormulation projectionPosition::PositiveInteger rangedoverConcept::Concept isUnitary::Boolean ;
Set ::= BodyOfSharedMeanings ;
 Set ::= Vocabulary ;
 Set ::= Rulebook ;
 Set ::= cardinality::NonnegativeInteger (element::Thing)+ ;
ConceptIsClosedInConceptualSchema ::= concept::Concept conceptualSchema::ConceptualSchema ;
ConceptOfThingAsDeveloped ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
Namespace ::= AttributiveNamespace ;
 Namespace ::= VocabularyNamespace ;
 Namespace ::= (uri::Uri)+ ;
ObjectificationBindsToBindableTarget ::= objectification::Objectification bindableTarget::BindableTarget ;
RoleRangesOverObjectType ::= role::Role objectType::ObjectType ;
ProhibitedDesignation ::= implicitlyIsUnderstood::Boolean signifier::Expression ;
ObjectType ::= ConceptType ;
 ObjectType ::= FundamentalConcept ;
 ObjectType ::= LogicalFormulationKind ;
 ObjectType ::= SituationalRole ;
 ObjectType ::= (categorizationScheme::CategorizationScheme)+ (categorizationType::CategorizationType)+ ;
PropositionIsBasedOnFactType ::= proposition::Proposition factType::FactType ;
ConceptHasNecessaryCharacteristic ::= concept::Concept necessaryCharacteristic::Characteristic ;
BodyOfSharedMeanings ::= (elementaryFactType::FactType)+ ;
AssortmentFactType ::= (factTypeForm::FactTypeForm)+ (role::FactTypeRole)+ ;
TerminologicalDictionaryHasUri ::= terminologicalDictionary::TerminologicalDictionary uri::Uri ;
BusinessPolicy ::= isDirectlyEnforceable::Boolean ;
SetProjection ::= constrainingFormulation::LogicalFormulation (projectionVariable::Variable)+ (auxiliaryVariable::AuxiliaryVariable)+ ;
SemanticCommunityHasSpeechCommunity ::= semanticCommunity::SemanticCommunity speechCommunity::SpeechCommunity ;
ElementOfGuidanceObligatesStateOfAffairs ::= elementOfGuidance::ElementOfGuidance stateOfAffairs::StateOfAffairs ;
AttributiveNamespaceIsForSubjectConcept ::= attributiveNamespace::AttributiveNamespace subjectConcept::Concept ;
AtomicFormulation ::= (roleBinding::RoleBinding)+ ;
ReferenceSupportsMeaning ::= reference::Reference meaning::Meaning ;
ConceptHasExtension ::= concept::Concept extension::Set ;
OperativeBusinessRuleHasLevelOfEnforcement ::= operativeBusinessRule::OperativeBusinessRule levelOfEnforcement::LevelOfEnforcement ;
ElementOfGuidanceIsIncludedInBodyOfSharedGuidance ::= elementOfGuidance::ElementOfGuidance bodyOfSharedGuidance::BodyOfSharedGuidance ;
ElementOfGuidanceProhibitsStateOfAffairs ::= elementOfGuidance::ElementOfGuidance stateOfAffairs::StateOfAffairs ;
Reference ::= meaning::Meaning expression::Expression ;
BodyOfSharedConcepts ::= (name::Name)+ ;
VariableIsFreesWithinSemanticFormulation ::= variable::Variable semanticFormulation::SemanticFormulation ;
ConceptHasDefinition ::= concept::Concept definition::Definition ;
ClosedLogicalFormulationMeansProposition ::= closedLogicalFormulation::ClosedLogicalFormulation proposition::Proposition ;
CategorizationType ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
Namespace1IncorporatesNamespace2 ::= namespace1::Namespace namespace2::Namespace ;
RepresentationUsesVocabulary ::= representation::Representation vocabulary::Vocabulary ;
NounForm ::= (placeholder::Placeholder)+ ;
DescriptiveExample ::= meaning::Meaning expression::Expression ;
Integer ::= NonnegativeInteger ;
 Integer ::= value::integer ;
VocabularyIsExpressedInLanguage ::= vocabulary::Vocabulary language::Language ;
PropositionNominalizationBindsToBindableTarget ::= propositionNominalization::PropositionNominalization bindableTarget::BindableTarget ;
NameReferencesThing ::= name::Name thing::Thing ;
Concept1SpecializesConcept2 ::= concept1::Concept concept2::Concept ;
ClosedProjectionMeansQuestion ::= closedProjection::ClosedProjection question::Question ;
ElementOfGuidanceAuthorizesStateOfAffairs ::= elementOfGuidance::ElementOfGuidance stateOfAffairs::StateOfAffairs ;
BodyOfSharedMeaningsIncludesBodyOfSharedGuidance ::= bodyOfSharedMeanings::BodyOfSharedMeanings bodyOfSharedGuidance::BodyOfSharedGuidance ;
ElementOfGovernance ::= BusinessPolicy ;
 ElementOfGovernance ::= OperativeBusinessRule ;
 ElementOfGovernance ::= isDirectlyEnforceable::Boolean ;
AttributiveNamespaceIsWithinVocabularyNamespace ::= attributiveNamespace::AttributiveNamespace vocabularyNamespace::VocabularyNamespace ;
WhetherornotFormulationHasInconsequent ::= whetherornotFormulation::WhetherornotFormulation inconsequent::LogicalFormulation ;
Note ::= meaning::Meaning expression::Expression ;
Thing1IsThing2 ::= thing1::Thing thing2::Thing ;
ClosedProjectionDefinesNounConcept ::= closedProjection::ClosedProjection nounConcept::NounConcept ;
DerivableConcept ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
RoleBinding ::= (name::Name)+ ;
Vocabulary1IncorporatesVocabulary2 ::= vocabulary1::Vocabulary vocabulary2::Vocabulary ;
DefinitionServesAsDesignation ::= definition::Definition designation::Designation ;
ConceptOfThingExistingIndependently ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
Equivalence ::= (logicalOperand2::LogicalFormulation)+ (logicalOperand1::LogicalFormulation)+ ;
RoleBindingBindsToBindableTarget ::= roleBinding::RoleBinding bindableTarget::BindableTarget ;
ConceptOfThingAsContinuant ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
NorFormulation ::= (logicalOperand2::LogicalFormulation)+ (logicalOperand1::LogicalFormulation)+ ;
SpeechCommunity ::= (uri::Uri)+ (subcommunity::Community)+ ;
ConceptOfThingAsComposite ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
Question ::= (representation::Representation)+ ;
Rulebook ::= cardinality::NonnegativeInteger (element::Thing)+ ;
LogicalFormulationKind ::= (categorizationScheme::CategorizationScheme)+ (categorizationType::CategorizationType)+ ;
ConceptualSchemaIncludesConcept ::= conceptualSchema::ConceptualSchema concept::Concept ;
VariableRangesOverConcept ::= variable::Variable concept::Concept ;
PlaceholderIsAtStartingCharacterPosition ::= placeholder::Placeholder startingCharacterPosition::PositiveInteger ;
LogicalFormulationRestrictsVariable ::= logicalFormulation::LogicalFormulation variable::Variable ;
Concept1IsCoextensiveWithConcept2 ::= concept1::Concept concept2::Concept ;
--------------------metamodels::sbvrOMG.bgf--------------------
WhetherornotFormulation ::= (inconsequent::LogicalFormulation)+ (consequent::LogicalFormulation)+ ;
LogicalOperation ::= BinaryLogicalOperation ;
 LogicalOperation ::= LogicalNegation ;
 LogicalOperation ::= logicalOperand::LogicalFormulation ;
IsroleofFactType ::= (factTypeForm::FactTypeForm)+ (role::FactTypeRole)+ ;
FactModel ::= (name::Name)+ ;
BusinessRule ::= StructuralBusinessRule ;
 BusinessRule ::= OperativeBusinessRule ;
 BusinessRule ::= isPracticable::Boolean ;
FactTypeRole ::= (roleBinding::RoleBinding)+ ;
ClosedProjection ::= constrainingFormulation::LogicalFormulation (projectionVariable::Variable)+ (auxiliaryVariable::AuxiliaryVariable)+ ;
Language ::= (name::Name)+ ;
FactTypeHasFactInFactModel ::= factType::FactType fact::Fact factModel::FactModel ;
NounConceptNominalization ::= projection::Projection ;
BodyOfSharedGuidance ::= (name::Name)+ ;
VocabularyNamespace ::= (uri::Uri)+ ;
AtmostnQuantification ::= AtmostoneQuantification ;
 AtmostnQuantification ::= maximumCardinality::NonnegativeInteger ;
NandFormulation ::= (logicalOperand2::LogicalFormulation)+ (logicalOperand1::LogicalFormulation)+ ;
ProjectingFormulation ::= AggregationFormulation ;
 ProjectingFormulation ::= AnswerNominalization ;
 ProjectingFormulation ::= FactTypeNominalization ;
 ProjectingFormulation ::= NounConceptNominalization ;
 ProjectingFormulation ::= QuestionNominalization ;
 ProjectingFormulation ::= projection::Projection ;
Projection ::= BagProjection ;
 Projection ::= ClosedProjection ;
 Projection ::= SetProjection ;
 Projection ::= constrainingFormulation::LogicalFormulation (projectionVariable::Variable)+ (auxiliaryVariable::AuxiliaryVariable)+ ;
LogicalNegation ::= logicalOperand::LogicalFormulation ;
Representation ::= Designation ;
 Representation ::= Definition ;
 Representation ::= Statement ;
 Representation ::= FactTypeForm ;
 Representation ::= CommunicationContent ;
 Representation ::= Description ;
 Representation ::= DescriptiveExample ;
 Representation ::= FormalRepresentation ;
 Representation ::= InformalRepresentation ;
 Representation ::= Note ;
 Representation ::= Reference ;
 Representation ::= meaning::Meaning expression::Expression ;
AttributiveNamespace ::= (uri::Uri)+ ;
Viewpoint ::= (name::Name)+ ;
NumericRangeQuantification ::= maximumCardinality::NonnegativeInteger minimumCardinality::NonnegativeInteger ;
AtmostoneQuantification ::= maximumCardinality::NonnegativeInteger ;
ConceptOfThingAsPrimitive ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
FactType ::= Characteristic ;
 FactType ::= AssociativeFactType ;
 FactType ::= AssortmentFactType ;
 FactType ::= BinaryFactType ;
 FactType ::= SpecializationFactType ;
 FactType ::= IsroleofFactType ;
 FactType ::= (factTypeForm::FactTypeForm)+ (role::FactTypeRole)+ ;
LevelOfEnforcement ::= (name::Name)+ ;
CommunicationContent ::= meaning::Meaning expression::Expression ;
TerminologicalDictionary ::= (uri::Uri)+ ;
InformalRepresentation ::= meaning::Meaning expression::Expression ;
Situation ::= (name::Name)+ ;
ExactlynQuantification ::= ExactlyoneQuantification ;
 ExactlynQuantification ::= cardinality::NonnegativeInteger ;
Meaning ::= Proposition ;
 Meaning ::= Concept ;
 Meaning ::= Question ;
 Meaning ::= (representation::Representation)+ ;
Description ::= meaning::Meaning expression::Expression ;
Implication ::= (consequent::LogicalFormulation)+ (antecedent::LogicalFormulation)+ ;
FactTypeRoleDesignation ::= implicitlyIsUnderstood::Boolean signifier::Expression ;
ConceptualSchema ::= (name::Name)+ ;
AggregationFormulation ::= projection::Projection ;
BagProjection ::= constrainingFormulation::LogicalFormulation (projectionVariable::Variable)+ (auxiliaryVariable::AuxiliaryVariable)+ ;
Designation ::= Name ;
 Designation ::= Placeholder ;
 Designation ::= FactSymbol ;
 Designation ::= FactTypeRoleDesignation ;
 Designation ::= NonverbalDesignation ;
 Designation ::= PreferredDesignation ;
 Designation ::= ProhibitedDesignation ;
 Designation ::= Term ;
 Designation ::= implicitlyIsUnderstood::Boolean signifier::Expression ;
PreferredDesignation ::= implicitlyIsUnderstood::Boolean signifier::Expression ;
ExactlyoneQuantification ::= cardinality::NonnegativeInteger ;
AtleastnQuantification ::= ExistentialQuantification ;
 AtleastnQuantification ::= minimumCardinality::NonnegativeInteger ;
Placeholder ::= startingCharacterPosition::PositiveInteger ;
ConceptOfThingExistingDependently ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
SubjectField ::= (name::Name)+ ;
Thing ::= StateOfAffairs ;
 Thing ::= Meaning ;
 Thing ::= BindableTarget ;
 Thing ::= SemanticFormulation ;
 Thing ::= Namespace ;
 Thing ::= RoleBinding ;
 Thing ::= ReferenceScheme ;
 Thing ::= Set ;
 Thing ::= BodyOfSharedConcepts ;
 Thing ::= BodyOfSharedGuidance ;
 Thing ::= CategorizationScheme ;
 Thing ::= Community ;
 Thing ::= ConceptualSchema ;
 Thing ::= FactModel ;
 Thing ::= Language ;
 Thing ::= LevelOfEnforcement ;
 Thing ::= Res ;
 Thing ::= Situation ;
 Thing ::= SubjectField ;
 Thing ::= TerminologicalDictionary ;
 Thing ::= Viewpoint ;
 Thing ::= (name::Name)+ ;
Text ::= Uri ;
 Text ::= value::String ;
Uri ::= value::String ;
ElementOfGuidance ::= Advice ;
 ElementOfGuidance ::= ElementOfGovernance ;
 ElementOfGuidance ::= BusinessRule ;
 ElementOfGuidance ::= isPracticable::Boolean ;
FactTypeForm ::= NounForm ;
 FactTypeForm ::= SententialForm ;
 FactTypeForm ::= (placeholder::Placeholder)+ ;
Community ::= SemanticCommunity ;
 Community ::= SpeechCommunity ;
 Community ::= (uri::Uri)+ (subcommunity::Community)+ ;
Concept ::= NounConcept ;
 Concept ::= FactType ;
 Concept ::= CategorizationType ;
 Concept ::= ObjectType ;
 Concept ::= ConceptOfThingAsComposite ;
 Concept ::= ConceptOfThingAsContinuant ;
 Concept ::= ConceptOfThingAsDeveloped ;
 Concept ::= ConceptOfThingAsOccurrent ;
 Concept ::= ConceptOfThingAsPrimitive ;
 Concept ::= ConceptOfThingAsUnitary ;
 Concept ::= ConceptOfThingExistingDependently ;
 Concept ::= ConceptOfThingExistingIndependently ;
 Concept ::= DerivableConcept ;
 Concept ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
FactSymbol ::= implicitlyIsUnderstood::Boolean signifier::Expression ;
Disjunction ::= (logicalOperand2::LogicalFormulation)+ (logicalOperand1::LogicalFormulation)+ ;
AuxiliaryVariable ::= restrictingFormulation::LogicalFormulation projectionPosition::PositiveInteger rangedoverConcept::Concept isUnitary::Boolean ;
Set ::= BodyOfSharedMeanings ;
 Set ::= Vocabulary ;
 Set ::= Rulebook ;
 Set ::= cardinality::NonnegativeInteger (element::Thing)+ ;
SpeechCommunityAdoptsAdoptedDefinitionCitingReference ::= speechCommunity::SpeechCommunity adoptedDefinition::AdoptedDefinition reference::Reference ;
FormalRepresentation ::= meaning::Meaning expression::Expression ;
ExistentialQuantification ::= minimumCardinality::NonnegativeInteger ;
ConceptOfThingAsDeveloped ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
Characteristic ::= (factTypeForm::FactTypeForm)+ (role::FactTypeRole)+ ;
Namespace ::= AttributiveNamespace ;
 Namespace ::= VocabularyNamespace ;
 Namespace ::= (uri::Uri)+ ;
ProhibitedDesignation ::= implicitlyIsUnderstood::Boolean signifier::Expression ;
ObjectType ::= ConceptType ;
 ObjectType ::= FundamentalConcept ;
 ObjectType ::= LogicalFormulationKind ;
 ObjectType ::= SituationalRole ;
 ObjectType ::= (categorizationScheme::CategorizationScheme)+ (categorizationType::CategorizationType)+ ;
Conjunction ::= (logicalOperand2::LogicalFormulation)+ (logicalOperand1::LogicalFormulation)+ ;
Proposition ::= ElementOfGuidance ;
 Proposition ::= Rule ;
 Proposition ::= Fact ;
 Proposition ::= isFalse::Boolean isTrue::Boolean (statement::Statement)+ isPossiblyTrue::Boolean isObligatedToBeTrue::Boolean isPermittedToBeTrue::Boolean isNecessarilyTrue::Boolean ;
BodyOfSharedMeanings ::= (elementaryFactType::FactType)+ ;
AssortmentFactType ::= (factTypeForm::FactTypeForm)+ (role::FactTypeRole)+ ;
BusinessPolicy ::= isDirectlyEnforceable::Boolean ;
StateOfAffairsInvolvesThingInRole ::= stateOfAffairs::StateOfAffairs thing::Thing role::Role ;
SetProjection ::= constrainingFormulation::LogicalFormulation (projectionVariable::Variable)+ (auxiliaryVariable::AuxiliaryVariable)+ ;
ReferenceScheme ::= (simplyUsedRole::FactTypeRole)+ (identifyingCharacteristic::Characteristic)+ (extensionallyUsedRole::FactTypeRole)+ ;
AtomicFormulation ::= (roleBinding::RoleBinding)+ ;
QuestionNominalization ::= projection::Projection ;
Reference ::= meaning::Meaning expression::Expression ;
Name ::= implicitlyIsUnderstood::Boolean signifier::Expression ;
BodyOfSharedConcepts ::= (name::Name)+ ;
SententialForm ::= (placeholder::Placeholder)+ ;
ConceptOfThingAsOccurrent ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
SemanticCommunity ::= (speechCommunity::SpeechCommunity)+ ;
ConceptOfThingAsUnitary ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
CategorizationType ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
SituationalRole ::= (categorizationScheme::CategorizationScheme)+ (categorizationType::CategorizationType)+ ;
BinaryLogicalOperation ::= Conjunction ;
 BinaryLogicalOperation ::= Disjunction ;
 BinaryLogicalOperation ::= Equivalence ;
 BinaryLogicalOperation ::= ExclusiveDisjunction ;
 BinaryLogicalOperation ::= Implication ;
 BinaryLogicalOperation ::= NandFormulation ;
 BinaryLogicalOperation ::= NorFormulation ;
 BinaryLogicalOperation ::= WhetherornotFormulation ;
 BinaryLogicalOperation ::= (logicalOperand2::LogicalFormulation)+ (logicalOperand1::LogicalFormulation)+ ;
NounForm ::= (placeholder::Placeholder)+ ;
DescriptiveExample ::= meaning::Meaning expression::Expression ;
Integer ::= NonnegativeInteger ;
 Integer ::= value::integer ;
Variable ::= AuxiliaryVariable ;
 Variable ::= restrictingFormulation::LogicalFormulation projectionPosition::PositiveInteger rangedoverConcept::Concept isUnitary::Boolean ;
Quantification ::= AtleastnQuantification ;
 Quantification ::= AtmostnQuantification ;
 Quantification ::= ExactlynQuantification ;
 Quantification ::= NumericRangeQuantification ;
 Quantification ::= UniversalQuantification ;
 Quantification ::= scopeFormulation::LogicalFormulation ;
ElementOfGovernance ::= BusinessPolicy ;
 ElementOfGovernance ::= OperativeBusinessRule ;
 ElementOfGovernance ::= isDirectlyEnforceable::Boolean ;
OperativeBusinessRule ::= (levelOfEnforcement::LevelOfEnforcement)+ ;
Note ::= meaning::Meaning expression::Expression ;
DerivableConcept ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
RoleBinding ::= (name::Name)+ ;
FactTypeNominalization ::= projection::Projection ;
ConceptOfThingExistingIndependently ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
Term ::= implicitlyIsUnderstood::Boolean signifier::Expression ;
Fact ::= isFalse::Boolean isTrue::Boolean (statement::Statement)+ isPossiblyTrue::Boolean isObligatedToBeTrue::Boolean isPermittedToBeTrue::Boolean isNecessarilyTrue::Boolean ;
Equivalence ::= (logicalOperand2::LogicalFormulation)+ (logicalOperand1::LogicalFormulation)+ ;
ConceptOfThingAsContinuant ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
NorFormulation ::= (logicalOperand2::LogicalFormulation)+ (logicalOperand1::LogicalFormulation)+ ;
SpeechCommunity ::= (uri::Uri)+ (subcommunity::Community)+ ;
UniversalQuantification ::= scopeFormulation::LogicalFormulation ;
Question ::= (representation::Representation)+ ;
ConceptOfThingAsComposite ::= (attributiveNamespace::AttributiveNamespace)+ (definition::Definition)+ (moreGeneralConcept::Concept)+ (category::Concept)+ (essentialCharacteristic::Characteristic)+ (instance::Thing)+ (referenceScheme::ReferenceScheme)+ (impliedCharacteristic::Characteristic)+ (necessaryCharacteristic::Characteristic)+ (designation::Designation)+ extension::Set ;
AnswerNominalization ::= projection::Projection ;
Rulebook ::= cardinality::NonnegativeInteger (element::Thing)+ ;
LogicalFormulationKind ::= (categorizationScheme::CategorizationScheme)+ (categorizationType::CategorizationType)+ ;
ExclusiveDisjunction ::= (logicalOperand2::LogicalFormulation)+ (logicalOperand1::LogicalFormulation)+ ;
FundamentalConcept ::= (categorizationScheme::CategorizationScheme)+ (categorizationType::CategorizationType)+ ;
Res ::= (name::Name)+ ;
--------------------metamodels::sigkdd.owl.bgf--------------------
Email_Template ::= define::Event ;
Proceedings_Publisher ::= (publisherOf::Thing)+ technicallyOrganises::Thing ;
Conference_proceedings ::= has_an_ISBN::String has_a_publisher::Publisher has_a_volume::String ;
Invited_Speaker ::= ε ;
 Invited_Speaker ::= presentation::Document ;
Registration_SIGKDD_Member ::= designed_by::ACM_SIGKDD Date::dateTime payed_by::Person Price::Integer Currency::String ;
External_Reviewer ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person pay::Registration_fee can_stay_in::Place Nation::String Name::String hasEmail::String hasName::String hasAffiliation::String hasFirstName::String hasLastName::String hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ sign::Item is_present::Time (give::Thing)+ need::Item loggin_in::System submit::Document get::Email E-mail::String hasConflictOfInterest::Document email::String ;
Science_Worker ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person pay::Registration_fee can_stay_in::Place Nation::String Name::String hasEmail::String hasName::String hasAffiliation::String hasFirstName::String hasLastName::String hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ sign::Item is_present::Time (give::Thing)+ need::Item loggin_in::System submit::Document get::Email E-mail::String hasConflictOfInterest::Document email::String ;
Program_Comitee_Chair ::= finishes::Conference headOf::Program_Comitee switches::PhaseOfConferencePreparation starts::Conference accepts::Paper assignsToReview::Paper assignsPaper::Reviewer rejects::Paper ;
TraditionalLecture ::= hasAcronym::String ;
RadioCommunicationsTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
AccommodationPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
SignalProcessingTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
TwoLevelConference ::= has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country isOrganizedBy::OrganizingCommittee annualOrder::Integer takesPlace::Location hasAcronym::String finishedBy::Program_Comitee_Chair focusesOn::Topic startedBy::Program_Comitee_Chair takesPlace::Location has_conference_member::ConferenceMember WebSite::anyURI Topic_of_conference::String Date::date holded_by::ACM_SIGKDD Name_of_conference::String Start_of_conference::dateTime City_of_conference::String End_of_conference::dateTime hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
pc_meeting ::= starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator ;
SessionChair ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person pay::Registration_fee can_stay_in::Place Nation::String Name::String hasEmail::String hasName::String hasAffiliation::String hasFirstName::String hasLastName::String hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ sign::Item is_present::Time (give::Thing)+ need::Item loggin_in::System submit::Document get::Email E-mail::String hasConflictOfInterest::Document email::String ;
SteeringCommittee ::= organizes::Conference ;
summary_of_reviews ::= is_created_in::Activity ;
Working_event ::= hasTopic::Topic hasAdministrativeEvent::Administrative_event ;
Co-author ::= co-writePaper::Paper ;
User ::= Committee ;
 User ::= Administrator ;
 User ::= recieve::Document (create::Thing)+ submit::Document ;
Short_paper ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String changedBy::Author hasContributionStatus::EEnum ;
Nonauthor_registration_fee ::= designed_by::ACM_SIGKDD Date::dateTime payed_by::Person Price::Integer Currency::String ;
Advocated_Paper ::= to_advocate_by::Advocate ;
GovernmentOrganization ::= isProviderOf::Sponsorship ;
Tutorial_Abstract ::= (is_the_1th_part_of::Thing)+ part_of_article::article ;
Primary_Reviewer ::= assign_review::Review ;
Main_office ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
CallForManuscripts ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
MealMenu ::= isMenuOf::MealEvent ;
Speaker ::= Invited_Speaker ;
 Speaker ::= presentation::Document ;
IndexOfAuthors ::= isProducedBy::Chair ;
Workshop_Session ::= hasAssignedPaper::AcceptedPaper room::String isAssociatedTo::Slot hasChair::Chair ;
Paper_Author ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person pay::Registration_fee can_stay_in::Place Nation::String Name::String hasEmail::String hasName::String hasAffiliation::String hasFirstName::String hasLastName::String hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ sign::Item is_present::Time (give::Thing)+ need::Item loggin_in::System submit::Document get::Email E-mail::String hasConflictOfInterest::Document email::String ;
group_email ::= goes_through::Activity is_sent_to::human is_created_in::Activity structure_created_by::human has_author::human gives_classification::classification article_written_by::Author has_reviewer::Reviewer has_abstract::Abstract ;
Publisher ::= issues::Conference_proceedings ;
Full_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Title::String Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
OutsideReferee ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person pay::Registration_fee can_stay_in::Place Nation::String Name::String hasEmail::String hasName::String hasAffiliation::String hasFirstName::String hasLastName::String hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ sign::Item is_present::Time (give::Thing)+ need::Item loggin_in::System submit::Document get::Email E-mail::String hasConflictOfInterest::Document email::String ;
Assigned_Paper ::= Evaluated_Paper ;
 Assigned_Paper ::= hasReviewer::Possible_Reviewer ;
upper_tier_reviewing_process ::= is_performed_by::human ;
OperatingTopicsystems ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
Location ::= locationOf::Event ;
Review_Phase ::= hasPhaseStatus::EEnum ;
GeneralCoChair ::= organizes::Conference ;
PaperSubmissionChair ::= organizes::Conference ;
Chair_PC ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person pay::Registration_fee can_stay_in::Place Nation::String Name::String hasEmail::String hasName::String hasAffiliation::String hasFirstName::String hasLastName::String hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ sign::Item is_present::Time (give::Thing)+ need::Item loggin_in::System submit::Document get::Email E-mail::String hasConflictOfInterest::Document email::String ;
Active_conference_participant ::= gives_presentations::Presentation ;
Short_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Title::String Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
SatelliteAndSpaceCommunicationsTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
Pending_Proposed_Conflict ::= refusedBy::Reviewer confirmedBy::Reviewer ;
Plenary_lecture ::= hasAcronym::String ;
Organizing_committee ::= was_an_organizing_committee_of::Conference_volume ;
MobileComputingTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
Registration_of_participants_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Committee_member ::= Co-chair ;
 Committee_member ::= Chair ;
 Committee_member ::= was_a_member_of::Committee ;
Deadline_hotel_reservation ::= designed_by::ACM_SIGKDD Date::dateTime done_till::date ;
Invitation ::= sended_by::Administrator Receiver_of_email::String Message_of_email::String Subject_of_email::String ;
Camera_Ready_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Title::String Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
NGO ::= isProviderOf::Sponsorship ;
CommunicationTheoryTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
AcademicEvent ::= TalkEvent ;
 AcademicEvent ::= OrganizationalMeeting ;
 AcademicEvent ::= PaperPresentation ;
 AcademicEvent ::= hasCall::Call ;
Mailing_list ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String presentationed_by::Speaker submit_until::Deadline recieved_by::User used_by::Person submited__by::User ;
CallForPapers ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
CommunicationsTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
SecurityTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
PaperAbstract ::= isAbstractOf::Paper abstractIsSubmittedBy::ContactAuthor ;
DiningPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
Paper_Review ::= is_Candidate_for_Award::Long_bool appropriate_length::Long_bool has_Categorization::Paper_Categorization has_Overall::Overall_Value has_Reccommendation::Reccommendation Review_made_by::Reviewer Comments_for_Author::String Comments_for_Program_Committee::String ;
ContactAuthor ::= submitsAbstract::PaperAbstract ;
Author ::= AuthorNotReviewer ;
 Author ::= Co-author ;
 Author ::= Corresponding_Author ;
 Author ::= Author_cd_proceedings_included ;
 Author ::= Lecturer ;
 Author ::= Plenary_lecture_speaker ;
 Author ::= Tutorial_speaker ;
 Author ::= Author_book_proceedings_included ;
 Author ::= ContactAuthor ;
 Author ::= Contact_Author ;
 Author ::= Co-Author ;
 Author ::= MainAuthor ;
 Author ::= Author_of_paper_student ;
 Author ::= Author_of_paper ;
 Author ::= Presenter ;
 Author ::= writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution write_paper::Paper obtain::Award submit::Paper notification_until::Deadline_Author_notification submitPaper::Paper ;
ConferenceProgram ::= isProgramOf::Conference consistsOf::Slot ;
Rejection_Email ::= sended_by::Administrator Receiver_of_email::String Message_of_email::String Subject_of_email::String ;
Admin_Role ::= assigned_by::Administrator ;
Poster_Session ::= hasAssignedPaper::AcceptedPaper room::String isAssociatedTo::Slot hasChair::Chair ;
ComputerArchitectureTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
WorkshopTutorialChair ::= organizes::Conference ;
Organizing_Committee ::= has_members::Committee_member was_a_committee_of::Conference_volume has_a_committee_co-chair::Co-chair has_a_committee_chair::Chair ;
Gold_Supporter ::= searched_by::ACM_SIGKDD Name_of_sponsor::String ;
OrganizingCommittee ::= ProgramCoChair ;
 OrganizingCommittee ::= PublicationsChair ;
 OrganizingCommittee ::= WorkshopTutorialChair ;
 OrganizingCommittee ::= RegistrationChair ;
 OrganizingCommittee ::= StudentAdvocate ;
 OrganizingCommittee ::= FinanceChair ;
 OrganizingCommittee ::= PaperSubmissionChair ;
 OrganizingCommittee ::= PublicityWebChair ;
 OrganizingCommittee ::= SteeringCommittee ;
 OrganizingCommittee ::= GeneralCoChair ;
 OrganizingCommittee ::= organizes::Conference ;
OrganizationalMeeting ::= hasCall::Call ;
PersonalReviewHistory ::= isReviewHistoryOf::Reviewer ;
Group_Email ::= sended_by::Administrator Receiver_of_email::String Message_of_email::String Subject_of_email::String ;
conference_setup ::= sets_member::human is_made_by::human includes_topic::Topic sets_date::date sets_URL::URL ;
Member_PC ::= expertOn::Topic reviewes::Contribution ;
Hotel ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
Web_Site ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String presentationed_by::Speaker submit_until::Deadline recieved_by::User used_by::Person submited__by::User ;
RejectedPaper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Title::String Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
ParallelAndDistributedComputingTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
Advocate ::= will_advocate::Advocated_Paper ;
Research_Topic ::= define::Event ;
 Research_Topic ::= topicCoveredBy::Thing ;
Assignment_Phase ::= hasPhaseStatus::EEnum ;
Reviewing_event ::= follows::Administrative_event parallel_with::Administrative_event ;
MultimediaTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
CryptographyTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
Tutorial ::= (presentationOfPaper::Document)+ ;
Conference_volume ::= has_parts::Conference_part has_workshops::Workshop has_tracks::Track has_tutorials::Tutorial has_a_commtitee::Committee has_a_steering_committee::Steering_committee has_an_organizing_committee::Organizing_committee has_important_dates::Important_dates has_contributions::Conference_contribution has_a_location::String has_a_program_committee::Program_committee ;
Email ::= Notification_Email ;
 Email ::= Group_Email ;
 Email ::= Approval_Email ;
 Email ::= Rejection_Email ;
 Email ::= Information ;
 Email ::= Invitation ;
 Email ::= sended_by::Administrator Receiver_of_email::String Message_of_email::String Subject_of_email::String ;
Regular ::= earlyRegistration::Boolean ;
ProgramCommittee ::= hasMember::ProgramCommitteeMember hasProgramCommitteeMember::ProgramCommitteeMember ;
Transparency ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String presentationed_by::Speaker submit_until::Deadline recieved_by::User used_by::Person submited__by::User ;
Registation_deadline ::= designed_by::ACM_SIGKDD Date::dateTime done_till::date ;
Review ::= Meta-Review ;
 Review ::= Positive_Review ;
 Review ::= Negative_Review ;
 Review ::= Neutral_Review ;
 Review ::= assigned_review_by::Primary_Reviewer written_review_by::Reviewer writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::Activity reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer review_written_by::Reviewer containsEvaluation::Evaluation rates::Paper isWritenBy::Reviewer ;
Head_Role ::= assigned_by::Administrator ;
Person ::= ConferenceMember ;
 Person ::= User ;
 Person ::= Conference_participant ;
 Person ::= Conference_contributor ;
 Person ::= Committee_member ;
 Person ::= Conference_applicant ;
 Person ::= Track-workshop_chair ;
 Person ::= Scholar ;
 Person ::= Participant ;
 Person ::= Member_PC ;
 Person ::= Chair_PC ;
 Person ::= Science_Worker ;
 Person ::= Assistant ;
 Person ::= Volunteer ;
 Person ::= chair ;
 Person ::= participant ;
 Person ::= ConferenceChair ;
 Person ::= Attendee ;
 Person ::= SessionChair ;
 Person ::= TPCMember ;
 Person ::= Paper_Author ;
 Person ::= Conference_Participant ;
 Person ::= Agency_Staff_Member ;
 Person ::= Possible_Reviewer ;
 Person ::= Student ;
 Person ::= Delegate ;
 Person ::= Sponsor ;
 Person ::= OutsideReferee ;
 Person ::= ExternalReviewer ;
 Person ::= ConferenceAttendant ;
 Person ::= Program_Comitee_Chair ;
 Person ::= External_Reviewer ;
 Person ::= Organizator ;
 Person ::= Listener ;
 Person ::= ProgramCommitteeMember ;
 Person ::= Chairman ;
 Person ::= Organizer ;
 Person ::= Speaker ;
 Person ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person pay::Registration_fee can_stay_in::Place Nation::String Name::String hasEmail::String hasName::String hasAffiliation::String hasFirstName::String hasLastName::String hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ sign::Item is_present::Time (give::Thing)+ need::Item loggin_in::System submit::Document get::Email E-mail::String hasConflictOfInterest::Document email::String ;
ProgramCommitteeMember ::= ProgramCommitteeChair ;
 ProgramCommitteeMember ::= Chair ;
 ProgramCommitteeMember ::= memberOfProgramCommittee::ProgramCommittee maxPapers::Integer addedBy::Administrator isMemberOf::ProgramCommittee hasPassword::String ;
Invited_Talk_Abstract ::= (is_the_1th_part_of::Thing)+ part_of_article::article ;
Poster ::= is_submitted_at::Conference_volume ;
 Poster ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String changedBy::Author hasContributionStatus::EEnum ;
 Poster ::= hasContributionFileStatus::EEnum ;
RegistrationChair ::= organizes::Conference ;
Invitation_letter ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String presentationed_by::Speaker submit_until::Deadline recieved_by::User used_by::Person submited__by::User ;
Paper ::= PaperFullVersion ;
 Paper ::= Invited_Paper ;
 Paper ::= Short_Paper ;
 Paper ::= Full_Paper ;
 Paper ::= Accepted_Paper ;
 Paper ::= Rejected_Paper ;
 Paper ::= Undecided_Paper ;
 Paper ::= ActivePaper ;
 Paper ::= PendingPaper ;
 Paper ::= WithdrawnPaper ;
 Paper ::= RejectedPaper ;
 Paper ::= PublishedPaper ;
 Paper ::= Camera_Ready_Paper ;
 Paper ::= Workshop_Paper ;
 Paper ::= Industrial_Paper ;
 Paper ::= Conference_Paper ;
 Paper ::= Poster_Paper ;
 Paper ::= Regular_Paper ;
 Paper ::= Demo_Paper ;
 Paper ::= AcceptedPaper ;
 Paper ::= Submitted_Paper ;
 Paper ::= Accepted_paper ;
 Paper ::= Rejected_paper ;
 Paper ::= PaperAbstract ;
 Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Title::String Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
Volunteer ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person pay::Registration_fee can_stay_in::Place Nation::String Name::String hasEmail::String hasName::String hasAffiliation::String hasFirstName::String hasLastName::String hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ sign::Item is_present::Time (give::Thing)+ need::Item loggin_in::System submit::Document get::Email E-mail::String hasConflictOfInterest::Document email::String ;
Conference_announcement ::= has_authors::Person has_a_date_of_issue::date ;
WithdrawnPaper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Title::String Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
Program_Committee_Chair ::= is_author_of::article performs_activity::Activity is_employed_in::institute has_topic_of_interest::Topic supervises::Activity e-mail::String last_name::String first_name::String ;
PCMembersList ::= isProducedBy::Chair ;
Program_committee ::= was_a_program_committee_of::Conference_volume ;
paper_assignment ::= Manual_Paper_Assignment ;
 paper_assignment ::= Automatic_Paper_Assignment ;
 paper_assignment ::= assign_paper::Program_Committee_member is_performed_by::human ;
Lecture ::= Plenary_lecture ;
 Lecture ::= QualitatvieLecture ;
 Lecture ::= TraditionalLecture ;
 Lecture ::= hasAcronym::String ;
Committee ::= Program_committee ;
 Committee ::= Organizing_committee ;
 Committee ::= Steering_committee ;
 Committee ::= Best_Paper_Awards_Committee ;
 Committee ::= Program_Committee ;
 Committee ::= Organizing_Committee ;
 Committee ::= has_members::Committee_member was_a_committee_of::Conference_volume has_a_committee_co-chair::Co-chair has_a_committee_chair::Chair ;
Evaluation ::= isContainedIn::Review ;
OutputDocument ::= CD-ROM ;
 OutputDocument ::= IndexOfAuthors ;
 OutputDocument ::= ExternalReviewersList ;
 OutputDocument ::= Program ;
 OutputDocument ::= PCMembersList ;
 OutputDocument ::= ListOfAbstracts ;
 OutputDocument ::= BookletOfAbstracts ;
 OutputDocument ::= Proceedings ;
 OutputDocument ::= isProducedBy::Chair ;
Conference_hall ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
QualitatvieLecture ::= hasAcronym::String ;
Automatic_Paper_Assignment ::= (automatically_assign_paper::Program_Committee_member)+ ;
Symposium ::= starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator ;
Organization ::= Company ;
 Organization ::= AcademiaOrganization ;
 Organization ::= IndustryOrganization ;
 Organization ::= NGO ;
 Organization ::= GovernmentOrganization ;
 Organization ::= University ;
 Organization ::= isProviderOf::Sponsorship ;
Undecided_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Title::String Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
Steering_committee ::= was_a_steering_committee_of::Conference_volume ;
AuthorNotReviewer ::= writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution write_paper::Paper obtain::Award submit::Paper notification_until::Deadline_Author_notification submitPaper::Paper ;
review_form ::= is_created_in::Activity ;
Deadline_for_notification_of_acceptance ::= designed_by::ACM_SIGKDD Date::dateTime done_till::date ;
Notification_Email ::= sended_by::Administrator Receiver_of_email::String Message_of_email::String Subject_of_email::String ;
Senior_Program_Committee_member ::= supervises::Activity ;
Best_Paper_Awards_Committee ::= has_members::Committee_member was_a_committee_of::Conference_volume has_a_committee_co-chair::Co-chair has_a_committee_chair::Chair ;
Registration_SIGMOD_Member ::= designed_by::ACM_SIGKDD Date::dateTime payed_by::Person Price::Integer Currency::String ;
Deadline_Abstract_Submission ::= designed_by::ACM_SIGKDD Date::dateTime done_till::date ;
Program_Committee ::= ε ;
 Program_Committee ::= has_members::Committee_member was_a_committee_of::Conference_volume has_a_committee_co-chair::Co-chair has_a_committee_chair::Chair ;
Sponzor ::= Exhibitor ;
 Sponzor ::= Bronze_Supporter ;
 Sponzor ::= Platinum_Supporter ;
 Sponzor ::= Gold_Supporter ;
 Sponzor ::= Best_Student_Paper_Supporter ;
 Sponzor ::= Silver_Supporter ;
 Sponzor ::= searched_by::ACM_SIGKDD Name_of_sponsor::String ;
ActivitySubmissionForm ::= TutorialProposal ;
 ActivitySubmissionForm ::= WorksopProposal ;
 ActivitySubmissionForm ::= isSubmittedBy::Author hasAuthor::Author submissionDeadline::dateTime ;
AssociatedChair ::= memberOfConference::Conference member_of_conference::Conference ;
Conference ::= Conference_volume ;
 Conference ::= TwoLevelConference ;
 Conference ::= SingleLevelConference ;
 Conference ::= has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country isOrganizedBy::OrganizingCommittee annualOrder::Integer takesPlace::Location hasAcronym::String finishedBy::Program_Comitee_Chair focusesOn::Topic startedBy::Program_Comitee_Chair takesPlace::Location has_conference_member::ConferenceMember WebSite::anyURI Topic_of_conference::String Date::date holded_by::ACM_SIGKDD Name_of_conference::String Start_of_conference::dateTime City_of_conference::String End_of_conference::dateTime hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
Document ::= Email ;
 Document ::= Template ;
 Document ::= article ;
 Document ::= SlideSet ;
 Document ::= MealMenu ;
 Document ::= Programme_Brochure ;
 Document ::= Flyer ;
 Document ::= Web_Site ;
 Document ::= Multi-author_Volume ;
 Document ::= Form ;
 Document ::= Mailing_list ;
 Document ::= Record_of_attendance ;
 Document ::= Brief_introduction_for_Session_chair ;
 Document ::= Invitation_letter ;
 Document ::= Viza ;
 Document ::= Transparency ;
 Document ::= Submission ;
 Document ::= Payment_document ;
 Document ::= Evaluation ;
 Document ::= Programme ;
 Document ::= Review ;
 Document ::= PaperAbstract ;
 Document ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String presentationed_by::Speaker submit_until::Deadline recieved_by::User used_by::Person submited__by::User ;
Viza ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String presentationed_by::Speaker submit_until::Deadline recieved_by::User used_by::Person submited__by::User ;
Presentation ::= Invited_talk ;
 Presentation ::= PowerPoint_presentation ;
 Presentation ::= Video_presentation ;
 Presentation ::= is_given_by::Active_conference_participant ;
Author_of_paper ::= writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution write_paper::Paper obtain::Award submit::Paper notification_until::Deadline_Author_notification submitPaper::Paper ;
Reviewed_contribution ::= Accepted_contribution ;
 Reviewed_contribution ::= Rejected_contribution ;
 Reviewed_contribution ::= has_a_review::Review ;
WirelessCommunicationsTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
participant ::= submits_to_conference::conference ;
Item ::= Transport_vehicle ;
 Item ::= Card ;
 Item ::= Audiovisual_equipment ;
 Item ::= Publication ;
 Item ::= Document ;
 Item ::= go_through::Activity (is_used_for::Thing)+ is_signed_by::Person is_made_from::Item is_sent_after::Time is_needed_for::Person is_sent_before::Time is_prepared_by::Person is_used_by::Person is_given_to::Person is_sent_by::Person is_writen_by::Person ;
ConferenceAttendant ::= mustPay::Fee hasAdress::String paid::Boolean hasPhone::String ;
Activity ::= Event_Creation ;
 Activity ::= Request ;
 Activity ::= Event_Approval ;
 Activity ::= Registration ;
 Activity ::= paper_assignment ;
 Activity ::= bidding_of_reviewer ;
 Activity ::= managing_of_conference_process ;
 Activity ::= reviewing_proces ;
 Activity ::= notification ;
 Activity ::= submission_process ;
 Activity ::= Activity_before_conference ;
 Activity ::= Conference_activity ;
 Activity ::= Activity_after_conference ;
 Activity ::= Lecture ;
 Activity ::= is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human hasTopic::Topic expectedAttendance::Integer isPartOf::Conference (has_result::Thing)+ sent_by::Person ;
PowerPoint_presentation ::= is_given_by::Active_conference_participant ;
human ::= Contact_Person ;
 human ::= Program_Committee_Chair ;
 human ::= Program_Committee_member ;
 human ::= is_author_of::article performs_activity::Activity is_employed_in::institute has_topic_of_interest::Topic supervises::Activity e-mail::String last_name::String first_name::String ;
FinanceChair ::= organizes::Conference ;
Track ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Program_chair ::= made_program::Conference_Program ;
CADTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
Blocked_Phase ::= hasPhaseStatus::EEnum ;
Event_Creation ::= is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human hasTopic::Topic expectedAttendance::Integer isPartOf::Conference (has_result::Thing)+ sent_by::Person ;
Registration_fee ::= Author_attendee_book_registration_fee ;
 Registration_fee ::= Nonmember_registration_fee ;
 Registration_fee ::= Nonauthor_registration_fee ;
 Registration_fee ::= Memeber_registration_fee ;
 Registration_fee ::= Student_registration_fee ;
 Registration_fee ::= Author_attendee_cd_registration_fee ;
 Registration_fee ::= Registration_SIGMOD_Member ;
 Registration_fee ::= Registration_Non-Member ;
 Registration_fee ::= Registration_SIGKDD_Member ;
 Registration_fee ::= Registration_Student ;
 Registration_fee ::= designed_by::ACM_SIGKDD Date::dateTime payed_by::Person Price::Integer Currency::String ;
PublicationsChair ::= organizes::Conference ;
Speaker_lecture ::= hasAssignedPaper::AcceptedPaper room::String isAssociatedTo::Slot hasChair::Chair ;
Exhibitor ::= searched_by::ACM_SIGKDD Name_of_sponsor::String ;
conference ::= is_in_phase::phase_of_conference ;
Conference_part ::= Track ;
 Conference_part ::= has_a_track-workshop-tutorial_topic::Topic is_part_of_conference_volumes::Conference_volume has_a_track-workshop-tutorial_chair::Track-workshop_chair ;
Accepted_paper ::= read_paper_by::Thing rateed_paper_by::Thing Score::EEnum ;
Possible_Reviewer ::= PC_Member ;
 Possible_Reviewer ::= reviewerOfPaper::Paper ;
Participant ::= Student ;
 Participant ::= Regular ;
 Participant ::= Member ;
 Participant ::= earlyRegistration::Boolean ;
Program_Comitee ::= discusses::Paper ;
SlideSet ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String presentationed_by::Speaker submit_until::Deadline recieved_by::User used_by::Person submited__by::User ;
MeetingRoomPlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
ExternalReviewer ::= assignedByReviewer::Reviewer cooperatesReviewer::Reviewer ;
Neutral_Review ::= assigned_review_by::Primary_Reviewer written_review_by::Reviewer writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::Activity reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer review_written_by::Reviewer containsEvaluation::Evaluation rates::Paper isWritenBy::Reviewer ;
Submissions_deadline ::= designed_by::ACM_SIGKDD Date::dateTime done_till::date ;
Organizer ::= CommitteeMember ;
 Organizer ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person pay::Registration_fee can_stay_in::Place Nation::String Name::String hasEmail::String hasName::String hasAffiliation::String hasFirstName::String hasLastName::String hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ sign::Item is_present::Time (give::Thing)+ need::Item loggin_in::System submit::Document get::Email E-mail::String hasConflictOfInterest::Document email::String ;
Topic ::= ParallelAndDistributedComputingTopic ;
 Topic ::= WirelessCommunicationsTopic ;
 Topic ::= OperatingTopicsystems ;
 Topic ::= ComputerNetworksTopic ;
 Topic ::= SatelliteAndSpaceCommunicationsTopic ;
 Topic ::= CADTopic ;
 Topic ::= MultimediaTopic ;
 Topic ::= CommunicationsTopic ;
 Topic ::= PowerlineTransmissionTopic ;
 Topic ::= AntennasTopic ;
 Topic ::= PerformanceTopic ;
 Topic ::= SignalProcessingTopic ;
 Topic ::= MicroelectronicsTopic ;
 Topic ::= TestOnlyTopic ;
 Topic ::= RadioCommunicationsTopic ;
 Topic ::= ComputerArchitectureTopic ;
 Topic ::= MedicineTopic ;
 Topic ::= SecurityTopic ;
 Topic ::= MobileComputingTopic ;
 Topic ::= CryptographyTopic ;
 Topic ::= CommunicationTheoryTopic ;
 Topic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
Information ::= sended_by::Administrator Receiver_of_email::String Message_of_email::String Subject_of_email::String ;
ContactInformation ::= hasCity::String hasStreet::String hasPostalCode::String hasPhone::String ;
Submitted_Paper ::= Assigned_Paper ;
 Submitted_Paper ::= Reviewed_Paper ;
 Submitted_Paper ::= Advocated_Paper ;
 Submitted_Paper ::= is_stored_in::Paper_File has_been_sent_by::Contact_Author Paper_Id::Integer Comments_To_Chair::String ;
Deadline_Paper_Submission ::= designed_by::ACM_SIGKDD Date::dateTime done_till::date ;
Author_cd_proceedings_included ::= writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution write_paper::Paper obtain::Award submit::Paper notification_until::Deadline_Author_notification submitPaper::Paper ;
Session_room ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
Record_of_attendance ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String presentationed_by::Speaker submit_until::Deadline recieved_by::User used_by::Person submited__by::User ;
Slides ::= hasContributionFileStatus::EEnum ;
Registration_Non-Member ::= designed_by::ACM_SIGKDD Date::dateTime payed_by::Person Price::Integer Currency::String ;
Individual_Presentation ::= Invited_Talk ;
 Individual_Presentation ::= Contributed_Talk ;
 Individual_Presentation ::= Tutorial ;
 Individual_Presentation ::= (presentationOfPaper::Document)+ ;
PerformanceTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
Sponzorship ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
Reviewing_results_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Programme ::= belongsToEvent::ConferenceEvent ;
Sponsor ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person pay::Registration_fee can_stay_in::Place Nation::String Name::String hasEmail::String hasName::String hasAffiliation::String hasFirstName::String hasLastName::String hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ sign::Item is_present::Time (give::Thing)+ need::Item loggin_in::System submit::Document get::Email E-mail::String hasConflictOfInterest::Document email::String ;
Organisation ::= Organising_Agency ;
 Organisation ::= Academic_Institution ;
 Organisation ::= Proceedings_Publisher ;
 Organisation ::= (publisherOf::Thing)+ technicallyOrganises::Thing ;
Setup_Phase ::= hasPhaseStatus::EEnum ;
Evaluated_Paper ::= Accepted_Paper ;
 Evaluated_Paper ::= Rejected_Paper ;
 Evaluated_Paper ::= hasReview::Review ;
AcademiaOrganization ::= isProviderOf::Sponsorship ;
article ::= group_email ;
 article ::= notification_email ;
 article ::= abstract_of_paper ;
 article ::= review_form ;
 article ::= summary_of_reviews ;
 article ::= goes_through::Activity is_sent_to::human is_created_in::Activity structure_created_by::human has_author::human gives_classification::classification article_written_by::Author has_reviewer::Reviewer has_abstract::Abstract ;
ConferenceMember ::= Reviewer ;
 ConferenceMember ::= ConferenceChair ;
 ConferenceMember ::= AssociatedChair ;
 ConferenceMember ::= Author ;
 ConferenceMember ::= CommitteeMember ;
 ConferenceMember ::= ProgramCommitteeMember ;
 ConferenceMember ::= Chairman ;
 ConferenceMember ::= memberOfConference::Conference member_of_conference::Conference ;
MedicineTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
Accepted_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Title::String Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
 Accepted_Paper ::= hasReview::Review ;
Submitted_contribution ::= Reviewed_contribution ;
 Submitted_contribution ::= has_a_review_expertise::Review_expertise ;
Agency_Staff_Member ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person pay::Registration_fee can_stay_in::Place Nation::String Name::String hasEmail::String hasName::String hasAffiliation::String hasFirstName::String hasLastName::String hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ sign::Item is_present::Time (give::Thing)+ need::Item loggin_in::System submit::Document get::Email E-mail::String hasConflictOfInterest::Document email::String ;
Track-workshop_chair ::= was_a_track-workshop_chair_of::Conference_part ;
notification ::= has_result::article is_performed_by::human ;
RatedPapers ::= hasRating::ReviewRating ;
Regular_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Title::String Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
ConferenceChair ::= memberOfConference::Conference member_of_conference::Conference ;
 ConferenceChair ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person pay::Registration_fee can_stay_in::Place Nation::String Name::String hasEmail::String hasName::String hasAffiliation::String hasFirstName::String hasLastName::String hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ sign::Item is_present::Time (give::Thing)+ need::Item loggin_in::System submit::Document get::Email E-mail::String hasConflictOfInterest::Document email::String ;
Closed_Phase ::= hasPhaseStatus::EEnum ;
Place ::= DiningPlace ;
 Place ::= ConferenceVenuePlace ;
 Place ::= MeetingRoomPlace ;
 Place ::= AccommodationPlace ;
 Place ::= Building ;
 Place ::= Session_room ;
 Place ::= Hotel_room ;
 Place ::= Conference_hall ;
 Place ::= Main_office ;
 Place ::= Hotel ;
 Place ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
EEnum ::= (male::ε) | (female::ε) | (high::ε) | (medium::ε) | (low::ε) | (very high::ε) | (1::ε) | (2::ε) | (3::ε) | (4::ε) | (5::ε) | (6::ε) | (7::ε) | (submitted::ε) | (missing::ε) | (notStarted::ε) | (active::ε) | (finished::ε) | (accepted::ε) | (rejected::ε) | (regular::ε) | (invited::ε) | (lowBid::ε) | (-::ε) | (CONFLICT::ε) | (wantNot::ε) | (highBid::ε) | (Yes::ε) | (No::ε) | (Accept::ε) | (Reject::ε) | (Unsure::ε) | (ForwardLookingIdea::ε) | (Compilers::ε) | (Microarchitecture::ε) | (Systems::ε) ;
Author_attendee_book_registration_fee ::= designed_by::ACM_SIGKDD Date::dateTime payed_by::Person Price::Integer Currency::String ;
Camera_Ready_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Abstract_And_Paper_Submission_Phase ::= hasPhaseStatus::EEnum ;
Bid ::= adjustedBy::Reviewer ;
ListOfAbstracts ::= isProducedBy::Chair ;
Attendee ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person pay::Registration_fee can_stay_in::Place Nation::String Name::String hasEmail::String hasName::String hasAffiliation::String hasFirstName::String hasLastName::String hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ sign::Item is_present::Time (give::Thing)+ need::Item loggin_in::System submit::Document get::Email E-mail::String hasConflictOfInterest::Document email::String ;
Manual_Paper_Assignment ::= (manually_assign_paper::Program_Committee_member)+ ;
Registration ::= is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human hasTopic::Topic expectedAttendance::Integer isPartOf::Conference (has_result::Thing)+ sent_by::Person ;
 Registration ::= ε ;
WorksopProposal ::= isSubmittedBy::Author hasAuthor::Author submissionDeadline::dateTime ;
Listener ::= ε ;
 Listener ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person pay::Registration_fee can_stay_in::Place Nation::String Name::String hasEmail::String hasName::String hasAffiliation::String hasFirstName::String hasLastName::String hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ sign::Item is_present::Time (give::Thing)+ need::Item loggin_in::System submit::Document get::Email E-mail::String hasConflictOfInterest::Document email::String ;
Workshop_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Title::String Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
ConferenceDinner ::= hasMenu::MealMenu ;
Meta-Reviewer ::= invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ writes_review::Review hasReviewHistory::PersonalReviewHistory executes::DoubleBlindReview cooperates::ExternalReviewer IsAssignedTo::Paper hasConflictedPaper::Paper hasPreferredPaper::Paper hasPreferredTopic::ResearchTopic writeReview::Review has_made_review::Paper_Review UserName::String Comments_to_Chair::String Other_Areas::String refuses::Pending_Proposed_Conflict reviews::Paper bidsFor::Paper confirmes::Pending_Proposed_Conflict assignedPaperBy::Program_Comitee_Chair assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper assignExternalReviewer::ExternalReviewer ;
ProgramCommitteeChair ::= endReview::Review ;
Best_Student_Paper_Award ::= (awarded_by::Organizator)+ ;
Contact_Author ::= has_sent::Submitted_Paper Alternate_Email::String ;
Call_for_participation ::= has_authors::Person has_a_date_of_issue::date ;
Invitation_Of_Reviewers_Phase ::= hasPhaseStatus::EEnum ;
Scholar ::= studyAt::University ;
chair ::= assigns_reviewers_to_article::Reviewer creates_program::program ;
MainAuthor ::= writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution write_paper::Paper obtain::Award submit::Paper notification_until::Deadline_Author_notification submitPaper::Paper ;
TPCMember ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person pay::Registration_fee can_stay_in::Place Nation::String Name::String hasEmail::String hasName::String hasAffiliation::String hasFirstName::String hasLastName::String hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ sign::Item is_present::Time (give::Thing)+ need::Item loggin_in::System submit::Document get::Email E-mail::String hasConflictOfInterest::Document email::String ;
Assistant ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person pay::Registration_fee can_stay_in::Place Nation::String Name::String hasEmail::String hasName::String hasAffiliation::String hasFirstName::String hasLastName::String hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ sign::Item is_present::Time (give::Thing)+ need::Item loggin_in::System submit::Document get::Email E-mail::String hasConflictOfInterest::Document email::String ;
ConferenceEvent ::= NonAcademicEvent ;
 ConferenceEvent ::= AcademicEvent ;
 ConferenceEvent ::= hasAttendee::Person hasLocation::Place hasProgramme::Programme hasEndDateTime::dateTime hasStartDateTime::dateTime ;
Conference_document ::= Conference_contribution ;
 Conference_document ::= Information_for_participants ;
 Conference_document ::= Call_for_paper ;
 Conference_document ::= Conference_announcement ;
 Conference_document ::= Call_for_participation ;
 Conference_document ::= Conference_www ;
 Conference_document ::= has_authors::Person has_a_date_of_issue::date ;
Multi-author_Volume ::= Proceedings ;
 Multi-author_Volume ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String presentationed_by::Speaker submit_until::Deadline recieved_by::User used_by::Person submited__by::User ;
Member ::= Program_chair ;
 Member ::= Advocate ;
 Member ::= Web_address::String ;
Deadline_Author_notification ::= designed_by::ACM_SIGKDD Date::dateTime done_till::date ;
Nonmember_registration_fee ::= designed_by::ACM_SIGKDD Date::dateTime payed_by::Person Price::Integer Currency::String ;
Registration_Student ::= designed_by::ACM_SIGKDD Date::dateTime payed_by::Person Price::Integer Currency::String ;
ProgramCoChair ::= organizes::Conference ;
Regular_Session ::= hasAssignedPaper::AcceptedPaper room::String isAssociatedTo::Slot hasChair::Chair ;
Secondary_Reviewer ::= isMemberOf::Conference reject_paper::Paper accept::Paper ;
People ::= Member ;
 People ::= Surname::String Name::String Country::String E-mail::String Organisation::String ;
University ::= scientificallyOrganises::Academic_Institution isProviderOf::Sponsorship ;
Administrator ::= approve::Event assign::Role assigns::Thing send::Email generate::Thing finalizePaperAssignment::Conference runPaperAssignmentTools::Conference enableVirtualMeeting::Conference startReviewerBidding::Conference assignReviewer::Reviewer rejectPaper::Paper enterConferenceDetails::Conference printHardcopyMailingManifests::Conference setMaxPapers::ProgramCommitteeMember enterReviewCriteria::Conference acceptPaper::Paper addProgramCommitteeMember::ProgramCommitteeMember ;
Rejected_paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Title::String Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
Author_Role ::= assigned_by::Administrator ;
Conference_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Title::String Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
bidding_of_reviewer ::= is_performed_by::human ;
BookletOfAbstracts ::= isProducedBy::Chair ;
StudentAdvocate ::= organizes::Conference ;
PaperPresentation ::= relatedToPaper::AcceptedPaper ;
Chair ::= produces::OutputDocument sets::Thing accepts::Paper rejects::Paper asksForPreference::Reviewer isChairOf::Session was_a_committee_chair_of::Committee ;
Student_registration_fee ::= designed_by::ACM_SIGKDD Date::dateTime payed_by::Person Price::Integer Currency::String ;
Negative_Review ::= assigned_review_by::Primary_Reviewer written_review_by::Reviewer writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::Activity reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer review_written_by::Reviewer containsEvaluation::Evaluation rates::Paper isWritenBy::Reviewer ;
ExternalReviewersList ::= isProducedBy::Chair ;
abstract_of_paper ::= goes_through::Activity is_sent_to::human is_created_in::Activity structure_created_by::human has_author::human gives_classification::classification article_written_by::Author has_reviewer::Reviewer has_abstract::Abstract ;
Money ::= Tax ;
 Money ::= Fee ;
 Money ::= Sponzorship ;
 Money ::= Tip ;
 Money ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
Approval_Email ::= confirm::Event ;
AntennasTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
Source_Archive ::= hasContributionFileStatus::EEnum ;
MicroelectronicsTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
Template ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String presentationed_by::Speaker submit_until::Deadline recieved_by::User used_by::Person submited__by::User ;
session ::= starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator ;
Role ::= Admin_Role ;
 Role ::= Author_Role ;
 Role ::= Committe_Role ;
 Role ::= Head_Role ;
 Role ::= Reviewer_Role ;
 Role ::= assigned_by::Administrator ;
Chairman ::= ConferenceChair ;
 Chairman ::= AssociatedChair ;
 Chairman ::= ProgramCommitteeChair ;
 Chairman ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person pay::Registration_fee can_stay_in::Place Nation::String Name::String hasEmail::String hasName::String hasAffiliation::String hasFirstName::String hasLastName::String hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ sign::Item is_present::Time (give::Thing)+ need::Item loggin_in::System submit::Document get::Email E-mail::String hasConflictOfInterest::Document email::String memberOfConference::Conference member_of_conference::Conference ;
Contributed_Talk ::= (presentationOfPaper::Document)+ ;
Contact_Person ::= is_author_of::article performs_activity::Activity is_employed_in::institute has_topic_of_interest::Topic supervises::Activity e-mail::String last_name::String first_name::String ;
TutorialProposal ::= isSubmittedBy::Author hasAuthor::Author submissionDeadline::dateTime ;
Paper_File ::= is_Type::Format ;
Proposed_Conflict ::= conflictProposedBy::Thing ;
Rejected_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Title::String Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
 Rejected_Paper ::= hasReview::Review ;
Best_Applications_Paper_Award ::= (awarded_by::Organizator)+ ;
Event_Approval ::= is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human hasTopic::Topic expectedAttendance::Integer isPartOf::Conference (has_result::Thing)+ sent_by::Person ;
Invited_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Title::String Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
program ::= program_created_by::chair has_session::session ;
Plenary_lecture_speaker ::= writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution write_paper::Paper obtain::Award submit::Paper notification_until::Deadline_Author_notification submitPaper::Paper ;
Best_Research_Paper_Award ::= (awarded_by::Organizator)+ ;
Criterion ::= hasWeight::double ;
Academic_Institution ::= Research_Institute ;
 Academic_Institution ::= University ;
 Academic_Institution ::= scientificallyOrganises::Academic_Institution ;
PaperStatus ::= isStatusOf::Paper ;
Video_presentation ::= is_given_by::Active_conference_participant ;
Author_book_proceedings_included ::= writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution write_paper::Paper obtain::Award submit::Paper notification_until::Deadline_Author_notification submitPaper::Paper ;
Call ::= CallForPapers ;
 Call ::= CallForReviews ;
 Call ::= CallForManuscripts ;
 Call ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
submission_process ::= is_performed_by::human ;
Tip ::= is_paid_with::Item is_paid_by::Person is_paid_in::Building (is_paid_for::Thing)+ has_amount_of::Money ;
Camera_ready_manuscript_deadline ::= designed_by::ACM_SIGKDD Date::dateTime done_till::date ;
Event ::= Symposium ;
 Event ::= Social_event ;
 Event ::= Administrative_event ;
 Event ::= Working_event ;
 Event ::= pc_meeting ;
 Event ::= session ;
 Event ::= Social_Event ;
 Event ::= Scientific_Event ;
 Event ::= starts_on::String ends_on::String has_startdate::dateTime has_enddate::dateTime (eventOnList::Thing)+ partOfEvent::Event hasEvent::Event (organisedBy::Thing)+ heldIn::Location conists_of::Event_Tracks confirmed_by::Approval_Email defined_by::Event_Setup approved_by::Administrator ;
Deadline ::= Deadline_hotel_reservation ;
 Deadline ::= Submissions_deadline ;
 Deadline ::= Deadline_for_notification_of_acceptance ;
 Deadline ::= Registation_deadline ;
 Deadline ::= Camera_ready_manuscript_deadline ;
 Deadline ::= Deadline_Abstract_Submission ;
 Deadline ::= Deadline_Paper_Submission ;
 Deadline ::= Deadline_Author_notification ;
 Deadline ::= designed_by::ACM_SIGKDD Date::dateTime done_till::date ;
MealEvent ::= ConferenceDinner ;
 MealEvent ::= hasMenu::MealMenu ;
Session ::= Conference_Session ;
 Session ::= Regular_Session ;
 Session ::= Poster_Session ;
 Session ::= Demo_Session ;
 Session ::= Workshop_Session ;
 Session ::= Speaker_lecture ;
 Session ::= hasAssignedPaper::AcceptedPaper room::String isAssociatedTo::Slot hasChair::Chair ;
PublicityWebChair ::= organizes::Conference ;
Research_Institute ::= scientificallyOrganises::Academic_Institution ;
Reviewer_Role ::= assigned_by::Administrator ;
Committe_Role ::= assigned_by::Administrator ;
Platinum_Supporter ::= searched_by::ACM_SIGKDD Name_of_sponsor::String ;
PhaseOfConferencePreparation ::= Setup_Phase ;
 PhaseOfConferencePreparation ::= Camera_Ready_Copy_Phase ;
 PhaseOfConferencePreparation ::= Assignment_Phase ;
 PhaseOfConferencePreparation ::= Blocked_Phase ;
 PhaseOfConferencePreparation ::= Abstract_And_Paper_Submission_Phase ;
 PhaseOfConferencePreparation ::= Invitation_Of_Reviewers_Phase ;
 PhaseOfConferencePreparation ::= Review_Phase ;
 PhaseOfConferencePreparation ::= Closed_Phase ;
 PhaseOfConferencePreparation ::= Bidding_Phase ;
 PhaseOfConferencePreparation ::= hasPhaseStatus::EEnum ;
Administrative_event ::= Reviewing_results_event ;
 Administrative_event ::= Reviewing_event ;
 Administrative_event ::= Registration_of_participants_event ;
 Administrative_event ::= Submission_event ;
 Administrative_event ::= Camera_Ready_event ;
 Administrative_event ::= follows::Administrative_event parallel_with::Administrative_event ;
Brief_introduction_for_Session_chair ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String presentationed_by::Speaker submit_until::Deadline recieved_by::User used_by::Person submited__by::User ;
Program ::= isProducedBy::Chair ;
Conference_Program ::= Program_made_by::Program_chair planned_papers::Planed_Paper ;
Proceedings ::= Conference_proceedings ;
 Proceedings ::= (includes::Thing)+ ;
Positive_Review ::= assigned_review_by::Primary_Reviewer written_review_by::Reviewer writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::Activity reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer review_written_by::Reviewer containsEvaluation::Evaluation rates::Paper isWritenBy::Reviewer ;
PublishedPaper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Title::String Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
Company ::= isProviderOf::Sponsorship ;
DoubleBlindReview ::= isExecutedBy::Reviewer ;
Event_Setup ::= Paper_Typologies ;
 Event_Setup ::= Review_Form ;
 Event_Setup ::= Submission_Template ;
 Event_Setup ::= Event_Tracks ;
 Event_Setup ::= Research_Topic ;
 Event_Setup ::= Email_Template ;
 Event_Setup ::= define::Event ;
Bronze_Supporter ::= searched_by::ACM_SIGKDD Name_of_sponsor::String ;
CommitteeMember ::= Secondary_Reviewer ;
 CommitteeMember ::= Primary_Reviewer ;
 CommitteeMember ::= isMemberOf::Conference reject_paper::Paper accept::Paper ;
Corresponding_Author ::= writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution write_paper::Paper obtain::Award submit::Paper notification_until::Deadline_Author_notification submitPaper::Paper ;
PendingPaper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Title::String Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
PowerlineTransmissionTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
IndustryOrganization ::= isProviderOf::Sponsorship ;
TestOnlyTopic ::= isTopicOf::Working_event isIncluded::Activity belongs_to_a_review_reference::Review_preference is_a_topis_of_conference_parts::Conference_part ;
Contribution_File ::= Source_Archive ;
 Contribution_File ::= Poster ;
 Contribution_File ::= Camera_Ready_Copy ;
 Contribution_File ::= Slides ;
 Contribution_File ::= Programme ;
 Contribution_File ::= Paper_File ;
 Contribution_File ::= hasContributionFileStatus::EEnum ;
Industrial_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Title::String Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
CD-ROM ::= isProducedBy::Chair ;
Co-chair ::= was_a_committe_co-chair_of::Committee ;
Abstract ::= Tutorial_Abstract ;
 Abstract ::= Invited_Talk_Abstract ;
 Abstract ::= (is_the_1th_part_of::Thing)+ part_of_article::article ;
Flyer ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String presentationed_by::Speaker submit_until::Deadline recieved_by::User used_by::Person submited__by::User ;
Tutorial_speaker ::= writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution write_paper::Paper obtain::Award submit::Paper notification_until::Deadline_Author_notification submitPaper::Paper ;
Award ::= Best_Applications_Paper_Award ;
 Award ::= Best_Student_Paper_Award ;
 Award ::= Best_Research_Paper_Award ;
 Award ::= (awarded_by::Organizator)+ ;
Organising_Agency ::= (publisherOf::Thing)+ technicallyOrganises::Thing ;
PaperFullVersion ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Title::String Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
Demo_Session ::= hasAssignedPaper::AcceptedPaper room::String isAssociatedTo::Slot hasChair::Chair ;
SingleLevelConference ::= has_program::program hasMember::Person hasName::String endDate::dateTime paperDueOn::dateTime registrationDueOn::dateTime manuscriptDueOn::dateTime startDate::dateTime hasCountry::Country isOrganizedBy::OrganizingCommittee annualOrder::Integer takesPlace::Location hasAcronym::String finishedBy::Program_Comitee_Chair focusesOn::Topic startedBy::Program_Comitee_Chair takesPlace::Location has_conference_member::ConferenceMember WebSite::anyURI Topic_of_conference::String Date::date holded_by::ACM_SIGKDD Name_of_conference::String Start_of_conference::dateTime City_of_conference::String End_of_conference::dateTime hasConferenceMember::ConferenceMember paperAssignmentFinalizedBy::Administrator reviewCriteriaEnteredBy::Administrator paperAssignmentToolsRunBy::Administrator virtualMeetingEnabledBy::Administrator hardcopyMailingManifestsPrintedBy::Administrator detailsEnteredBy::Administrator reviewerBiddingStartedBy::Administrator date::date reviewsPerPaper::Integer logoURL::anyURI acceptsHardcopySubmissions::Boolean siteURL::anyURI ;
Sponsorship ::= TravelGrant ;
 Sponsorship ::= providedBy::Organization hasCostCurrency::String hasCostAmount::Integer ;
Author_of_paper_student ::= writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution write_paper::Paper obtain::Award submit::Paper notification_until::Deadline_Author_notification submitPaper::Paper ;
ConferenceVenuePlace ::= isLocationOf::ConferenceEvent is_equipped_by::Item ;
Conference_contribution ::= Poster ;
 Conference_contribution ::= Written_contribution ;
 Conference_contribution ::= Presentation ;
 Conference_contribution ::= is_submitted_at::Conference_volume ;
Contribution ::= Poster ;
 Contribution ::= Short_paper ;
 Contribution ::= Contribution_File ;
 Contribution ::= writtenBy::Author dealsWith::Topic remark::String abstract::String contactEmail::String hasKeyword::String hasTitle::String changedBy::Author hasContributionStatus::EEnum ;
Invited_Talk ::= (presentationOfPaper::Document)+ ;
Demo_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Title::String Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
CallForReviews ::= forEvent::AcademicEvent (isInitiatedBy::Person)+ hasSubmissionInstructions::String hasSubmissionDeadline::dateTime ;
Author_attendee_cd_registration_fee ::= designed_by::ACM_SIGKDD Date::dateTime payed_by::Person Price::Integer Currency::String ;
Best_Student_Paper_Supporter ::= searched_by::ACM_SIGKDD Name_of_sponsor::String ;
Paper_Typologies ::= define::Event ;
Information_for_participants ::= has_authors::Person has_a_date_of_issue::date ;
Camera_Ready_Copy_Phase ::= hasPhaseStatus::EEnum ;
Programme_Brochure ::= writtenBy::Person hasUpdatedVersion::Document updatedVersionOf::Document (relatesTo::Thing)+ submited_by::Person Document_ID::String presentationed_by::Speaker submit_until::Deadline recieved_by::User used_by::Person submited__by::User ;
Reviewer ::= Meta-Reviewer ;
 Reviewer ::= invites_co-reviewers::Reviewer invited_by::Reviewer (has_a_review_reference_or_expertise::Thing)+ writes_review::Review hasReviewHistory::PersonalReviewHistory executes::DoubleBlindReview cooperates::ExternalReviewer IsAssignedTo::Paper hasConflictedPaper::Paper hasPreferredPaper::Paper hasPreferredTopic::ResearchTopic writeReview::Review has_made_review::Paper_Review UserName::String Comments_to_Chair::String Other_Areas::String refuses::Pending_Proposed_Conflict reviews::Paper bidsFor::Paper confirmes::Pending_Proposed_Conflict assignedPaperBy::Program_Comitee_Chair assignedByAdministrator::Administrator adjustBid::Bid readPaper::Paper hasBeenAssigned::Paper assignExternalReviewer::ExternalReviewer ;
Meta-Review ::= assigned_review_by::Primary_Reviewer written_review_by::Reviewer writtenBy::Reviewer reviews::Reviewed_contribution gives_classification::classification is_created_in::Activity reviewOfPaper::Paper reviewWrittenBy::Possible_Reviewer review_written_by::Reviewer containsEvaluation::Evaluation rates::Paper isWritenBy::Reviewer ;
Slot ::= date::date endsAt::time beginsAt::time forms::ConferenceProgram hosts::Session ;
Student ::= earlyRegistration::Boolean ;
 Student ::= (inverse_of_add::Thing)+ (execute::Thing)+ get::Inforamtion use::Document register::Account (modify::Thing)+ take_part_in::Event (remove::Thing)+ add::Person added_by::Person pay::Registration_fee can_stay_in::Place Nation::String Name::String hasEmail::String hasName::String hasAffiliation::String hasFirstName::String hasLastName::String hasMail::String worksForCompany::String attendeeAt::ConferenceEvent isMemberOf::Conference hasFirstName::String hasBiography::String hasLastName::String employedBy::Organization hasHomePage::String hasSurname::String hasFax::String hasFirstName::String hasPhone::String hasEmail::String contributes::Conference_document has_an_email::String has_the_first_name::String has_gender::EEnum has_the_last_name::String authorOf::Document prepare::Item (occupy::Presenter_city)+ (is_present_in::Thing)+ write::Item obtain::Item send::Item (speak_in::Thing)+ sign::Item is_present::Time (give::Thing)+ need::Item loggin_in::System submit::Document get::Email E-mail::String hasConflictOfInterest::Document email::String ;
Poster_Paper ::= full_paper_size::Integer has_author::human isWrittenBy::Author (isReviewedBy::Person)+ hasReview::Review hasReviewer::Possible_Reviewer paperIsSubmittedBy::Author isRejectedBy::Chair isAcceptedBy::Chair paperIsAssignedTo::Reviewer hasSecondaryTopic::ResearchTopic hasMainTopic::ResearchTopic hasAuthor::Author hasStatus::PaperStatus hasTitle::String hasID::String hasAbstract::PaperAbstract isRatedBy::Review is_written_by::Author Abstract::String Title::String Students::String Keywords::String rejectedBy::Program_Comitee_Chair acceptedBy::Program_Comitee_Chair reviewedBy::Reviewer discussedBy::Program_Comitee isPaperTypeOf::EEnum assignedToReviewBy::Program_Comitee_Chair hasBid::EEnum Title::String Summary::String rejected_paper_by::CommitteeMember accepted_by::CommitteeMember written_paper_by::Author hasCo-author::Co-author hasBid::Bid hasDecision::Decision assignedTo::Reviewer hasSubjectArea::SubjectArea readByReviewer::Reviewer paperID::unsignedLong title::String readByMeta-Reviewer::Meta-Reviewer ;
managing_of_conference_process ::= is_held_before::Time is_held_in::Thing is_held_after::Time is_dated_on::dateTime is_followed_by::Activity is_monitored_by::human has_intensity::intensity has_result::article is_performed_by::human is_supervised_by::human hasTopic::Topic expectedAttendance::Integer isPartOf::Conference (has_result::Thing)+ sent_by::Person ;
Planed_Paper ::= is_planned_in::Conference_Program ;
Call_for_paper ::= has_authors::Person has_a_date_of_issue::date ;
Conference_www ::= has_a_URL::String ;
Rejected_contribution ::= has_a_review::Review ;
Invited_talk ::= is_given_by::Active_conference_participant ;
ACM_SIGKDD ::= hold::Conference search::Sponzor design::Deadline ;
Account ::= registred_by::Person ;
Submission_Template ::= define::Event ;
Event_Tracks ::= define::Event ;
Co-Author ::= writes::Contribution writes_article::article assigns_article_to_conference::article hasRelatedPaper::Paper (conflictsWith::Thing)+ isAuthorOf::ActivitySubmissionForm conducts::Thing submitsPaper::Paper writePaper::Paper writes_Paper::Paper changes::Contribution write_paper::Paper obtain::Award submit::Paper notification_until::Deadline_Author_notification submitPaper::Paper ;
Camera_Ready_Copy ::= hasContributionFileStatus::EEnum ;
Silver_Supporter ::= searched_by::ACM_SIGKDD Name_of_sponsor::String ;
Review_expertise ::= has_a_submitted_contribution::Submitted_contribution has_an_expertise::EEnum ;
Event_URL ::= concerned::Event ;
Important_dates ::= is_an_abstract_submission_date::date is_a_full_paper_submission_date::date is_an_ending_date::date is_a_date_of_acceptance_announcement::date is_a_date_of_camera_ready_paper_submission::date is_a_starting_date::date belong_to_a_conference_volume::Conference_volume ;
Submission_event ::= follows::Administrative_event parallel_with::Administrative_event ;
ActivePaper ::= RatedPapers ;
 ActivePaper ::= hasRating::ReviewRating ;
AcceptedPaper ::= relatedToEvent::PaperPresentation isAssignedToSession::Session ;
TravelGrant ::= providedBy::Organization hasCostCurrency::String hasCostAmount::Integer ;
Review_preference ::= (has_a_topic_or_a_submission_contribution::Thing)+ has_a_degree::Integer ;
Memeber_registration_fee ::= designed_by::ACM_SIGKDD Date::dateTime payed_by::Person Price::Integer Currency::String ;
--------------------metamodels::useCase.bgf--------------------
UseCaseContainer ::= (ownedElement::NamedElement)+ ;
Extend ::= (extension::UseCase)+ ;
Include ::= (includingCase::UseCase)+ ;
UseCase ::= (include::Include)+ (extend::Extend)+ ;
Actor ::= name::String ;
Association ::= actor::Actor useCase::UseCase ;
--------------------metamodels::MiningMart.bgf--------------------
Key ::= isUsedForIndex::Boolean (hasColumn::DataRepresentation/Column)+ isAssociatedToColumnSet::DataRepresentation/ColumnSet ;
Attribute ::= class::SimplfiedMiningMart/Class has::SimplfiedMiningMart/DataType ;
SQLQuery ::= (select::DataRepresentation/Column)+ (from::DataRepresentation/ColumnSet)+ (where::String)+ ;
ColumnStatistics ::= unique::Integer missing::Integer min::Integer max::Integer average::Integer standarDeviation::Integer distributionValue::String distributionCount::Integer distributionMin::Integer distributionMax::Integer forColumn::DataRepresentation/Column ;
RelationShip ::= subRelationShipRestriction::String defined::String isA::DataRepresentation/RelationShip (correspondsToForeignKey::DataRepresentation/ForeignKey)+ correspondsToColumnSet::DataRepresentation/ColumnSet FromConcept::DataRepresentation/Concept ToConcept::DataRepresentation/Concept ;
Function ::= nameOf::String signature::String ;
Column ::= name::String dataType::SimplfiedMiningMart/DataType (keys::DataRepresentation/Key)+ belongsToColumnSet::DataRepresentation/ColumnSet corespondsToBaseAttribute::DataRepresentation/BaseAttribute linkPackage::LinkPackage ;
LoopStep ::= (iterationSet::DataRepresentation/FeatureAttribute)+ (outputSet::DataRepresentation/FeatureAttribute)+ ;
Step ::= name::String description::String belongsToCase::CaseRepresentation/Case embedsOperator::CaseRepresentation/Operator (predecessors::CaseRepresentation/Step)+ (successors::CaseRepresentation/Step)+ ;
BaseAttribute ::= isPartMultiColumnFeature::DataRepresentation/MultiColumnFeature domainDataType::DataRepresentation/DomainDataType ;
DataObject ::= source::CaseRepresentation/ExecutionElement target::CaseRepresentation/ExecutionElement linkPackageCaseRepresentation::LinkPackage ;
Transformation ::= transformationGroup::CaseRepresentation/TransformationGroup ;
MultiColumnFeature ::= (consitsOfBaseAttributes::DataRepresentation/BaseAttribute)+ ;
FeatureAttribute ::= name::String relevanceForMining::Boolean attributeType::SimplfiedMiningMart/DataType belongsToConcept::DataRepresentation/Concept (correspondsToColumns::DataRepresentation/Column)+ ;
ExecutionElement ::= source::CaseRepresentation/DataObject target::CaseRepresentation/DataObject ;
DataType ::= attribute::SimplfiedMiningMart/Attribute ;
ParameterType ::= (Value::ε) | (Concept::ε) | (RelationShip::ε) | (FeatureAttribute::ε) ;
UserInput ::= (containsValues::DataRepresentation/Value)+ ;
Class ::= name::String (attributes::SimplfiedMiningMart/Attribute)+ ;
RoleRestriction ::= name::String restrictionForRelationShip::DataRepresentation/RelationShip restrictionForConcept::DataRepresentation/Concept restrictionToConcept::DataRepresentation/Concept min::Integer max::Integer belongsToConcept::DataRepresentation/Concept ;
TransformationGroup ::= (transformation::CaseRepresentation/Transformation)+ ;
Value ::= domainDataType::DataRepresentation/DomainDataType (belongsToUserInput::DataRepresentation/UserInput)+ linkPackage::LinkPackage ;
StoredProcedure ::= nameOf::String signature::String ;
Case ::= name::String caseMode::Boolean caseInput::CaseRepresentation/Parameter caseOutput::DataRepresentation/Concept documentation::String (listOfStep::CaseRepresentation/Step)+ population::DataRepresentation/Concept targetAttributes::DataRepresentation/FeatureAttribute ;
ColumnSetStatistics ::= allNumber::Integer ordinalNumber::Integer nominalNumber::Integer timeNumber::Integer forColumnSet::DataRepresentation/ColumnSet ;
ColumnSet ::= number::Integer file::String dbConnectString::String user::String (hasColumn::DataRepresentation/Column)+ (hasKey::DataRepresentation/Key)+ correspondsToConcept::DataRepresentation/Concept correspondsToRelationShip::DataRepresentation/RelationShip linkPackage::LinkPackage ;
LinkPackage ::= type::InOut dataObject::CaseRepresentation/DataObject value::DataRepresentation/Value column::DataRepresentation/Column columnSet::DataRepresentation/ColumnSet ;
ForeignKey ::= isConnectionTo::DataRepresentation/Table correspondsToRelationShip::DataRepresentation/RelationShip ;
Parameter ::= name::String place::String parameterType::CaseRepresentation/ParameterType belongsToOperator::CaseRepresentation/Operator ;
InOut ::= (Input::ε) | (OutPut::ε) ;
DomainDataType ::= baseAttributeD::DataRepresentation/BaseAttribute ;
Concept ::= subConceptRestriction::String isA::DataRepresentation/Concept FromConcept::DataRepresentation/RelationShip ToConcept::DataRepresentation/RelationShip correspondsToColumnSet::DataRepresentation/ColumnSet ;
FeatureConstruction ::= scalingFactor::Integer ;
MultiStep ::= iterationCondition::String ;
--------------------metamodels::logic-abstract.bgf--------------------
Formula ::= (true::ε) | (false::ε) | (not::(arg::Formula)) | (and::(lhs::Formula rhs::Formula)) | (and::(args::(Formula*))) | (or::(lhs::Formula rhs::Formula)) | (or::(args::(Formula*))) | (if::(lhs::Formula rhs::Formula)) | (fi::(lhs::Formula rhs::Formula)) | (iff::(lhs::Formula rhs::Formula)) ;
 Formula ::= id::(x::string()) ;
--------------------metamodels::logic-concrete.bgf--------------------
True ::= "(" True ")" ;
 True ::= "true" ;
 True ::= "not" f::False ;
 True ::= lt::True "and" rt::True ;
 True ::= lt::True "or" rt::True ;
 True ::= lt::True "or" rf::False ;
 True ::= lf::False "or" rt::True ;
Formula ::= [not] "!" arg::Formula ;
 Formula ::= [true] "true" ;
 Formula ::= [false] "false" ;
 Formula ::= [and] lhs::Formula "&" rhs::Formula ;
 Formula ::= [or] lhs::Formula "|" rhs::Formula ;
 Formula ::= [fi] lhs::Formula "<=" rhs::Formula ;
 Formula ::= [if] lhs::Formula "=>" rhs::Formula ;
 Formula ::= [iff] lhs::Formula "<=>" rhs::Formula ;
 Formula ::= [id] ε ;
False ::= "false" ;
 False ::= "not" t::True ;
 False ::= "(" False ")" ;
 False ::= lf::False "and" rt::True ;
 False ::= lf::False "and" rf::False ;
 False ::= lt::True "and" rf::False ;
 False ::= lf::False "or" rf::False ;
--------------------ocl::expressions.bgf--------------------
VariableDeclaration ::= var::String varType::Type (oclExpression::OclExpression)+ (queryExp::QueryExp)+ (varInit::VariableInitialisation)+ ;
IterateExp ::= varInit::VariableInitialisation ;
VariableInitialisation ::= initExpression::OclExpression varDec::VariableDeclaration iterateExp::IterateExp ;
VariableExp ::= var::String ;
SelfExp ::= (queryArg::QueryExp)+ (querySrc::QueryExp)+ resultType::Type (varDec::VariableDeclaration)+ (varInit::VariableInitialisation)+ ;
ResultExp ::= (queryArg::QueryExp)+ (querySrc::QueryExp)+ resultType::Type (varDec::VariableDeclaration)+ (varInit::VariableInitialisation)+ ;
--------------------ocl::operations.bgf--------------------
OclOperation ::= arguments::OclExpression ;
NaviguationExp ::= assEnd::AssocationEnd qualifierValues::OclExpression ;
Attribute ::= (attrExp::AttributeExp)+ ;
AssocationEnd ::= (navExp::NaviguationExp)+ ;
StringConstExp ::= value::String ;
RealConstExp ::= value::Double ;
IntegerConstExp ::= value::Integer ;
Operation ::= (classOp::ClassifierOperation)+ ;
ClassifierOperation ::= op::Operation arguments::OclExpression ;
PropertyOperation ::= AttributeExp ;
 PropertyOperation ::= NaviguationExp ;
 PropertyOperation ::= ClassifierOperation ;
 PropertyOperation ::= isMarkedPre::Boolean source::OclExpression ;
AttributeExp ::= attr::Attribute ;
--------------------ocl::types.bgf--------------------
InstanceType ::= classifier::Classifier ;
EnumLiteral ::= enumType::EnumType ;
OclAnyType ::= (supertype::Type)+ (subtype::Type)+ (collectionType::CollectionType)+ ;
SetType ::= elementType::Type ;
OclTypeType ::= (supertype::Type)+ (subtype::Type)+ (collectionType::CollectionType)+ ;
SequenceType ::= elementType::Type ;
EnumType ::= (enumLiteral::EnumLiteral)+ ;
BagType ::= elementType::Type ;
Classifier ::= instanceType::InstanceType ;
--------------------ocl::values.bgf--------------------
Count ::= num::Integer ;
SetValue ::= (elements::Value)+ ;
Object ::= objectValue::ObjectValue ;
EnumLiteral ::= enumValue::EnumValue ;
BagValue ::= (elements::Value)+ ;
BooleanValue ::= val::Boolean ;
RealValue ::= val::Double ;
IntegerValue ::= val::Integer ;
ObjectValue ::= object::Object ;
UndefinedValue ::= type::Type (bagValue::BagValue)+ (sequenceValue::SequenceValue)+ (setValue::SetValue)+ ;
SequenceValue ::= (elements::Value)+ ;
EnumValue ::= enumLiteral::EnumLiteral ;
StringValue ::= val::String ;
--------------------slps::bgf-1.0-xsd.bgf--------------------
production ::= (label::label)? nonterminal::nonterminal expression ;
expression ::= (epsilon::ε) | (empty::ε) | (any::ε) | (terminal::terminal) | (nonterminal::nonterminal) | (selectable::(selector::selector expression)) | (sequence::(expression*)) | (choice::(expression*)) | (optional::expression) | (plus::expression) | (star::expression) ;
grammar ::= (name::string())? (root::nonterminal)* production* ;
--------------------slps::bgf-2.0-xsd.bgf--------------------
production ::= (label::label)? nonterminal::nonterminal expression ;
expression ::= (epsilon::ε) | (empty::ε) | (value::value) | (any::ε) | (terminal::terminal) | (nonterminal::nonterminal) | (selectable::(selector::selector expression)) | (sequence::(expression*)) | (choice::(expression*)) | (optional::expression) | (plus::expression) | (star::expression) ;
grammar ::= (root::nonterminal)* production* ;
value ::= (int::ε) | (string::ε) ;
--------------------slps::bgf-2.1-xsd.bgf--------------------
production ::= (label::label)? nonterminal::nonterminal expression ;
expression ::= (epsilon::ε) | (empty::ε) | (value::value) | (any::ε) | (terminal::terminal) | (nonterminal::nonterminal) | (selectable::(selector::selector expression)) | (sequence::(expression+)) | (choice::(expression+)) | (optional::expression) | (plus::expression) | (star::expression) ;
grammar ::= (root::nonterminal)* production* ;
value ::= (int::ε) | (string::ε) ;
--------------------slps::btf.bgf--------------------
tree ::= (epsilon::ε) | (any::α) | (terminal::terminal) | (nonterminal::(production tree)) | (selectable::(selector::selector tree)) | (value::((int::integer()) | (string::string()))) | (sequence::(tree*)) | (choice::(expression tree)) | (optional::(tree?)) | (plus::(tree+)) | (star::(tree*)) ;
production ::= (label::label)? nonterminal::nonterminal expression ;
expression ::= (epsilon::ε) | (empty::ε) | (value::value) | (any::ε) | (terminal::terminal) | (nonterminal::nonterminal) | (selectable::(selector::selector expression)) | (marked::expression) | (sequence::(expression+)) | (choice::(expression+)) | (allof::(expression+)) | (not::expression) | (optional::expression) | (plus::expression) | (star::expression) | (seplistplus::(expression expression)) | (sepliststar::(expression expression)) ;
grammar ::= (root::nonterminal)* production* ;
value ::= (int::ε) | (string::ε) ;
--------------------slps::bgf-3.0-xsd.bgf--------------------
production ::= (label::label)? nonterminal::nonterminal expression ;
expression ::= (epsilon::ε) | (empty::ε) | (value::value) | (any::ε) | (terminal::terminal) | (nonterminal::nonterminal) | (selectable::(selector::selector expression)) | (sequence::(expression+)) | (marked::(expression*)) | (choice::(expression+)) | (optional::expression) | (plus::expression) | (star::expression) ;
grammar ::= (root::nonterminal)* production* ;
value ::= (int::ε) | (string::ε) ;
--------------------slps::bgf-3.1-xsd.bgf--------------------
production ::= (label::label)? nonterminal::nonterminal expression ;
expression ::= (epsilon::ε) | (empty::ε) | (value::value) | (any::ε) | (terminal::terminal) | (nonterminal::nonterminal) | (selectable::(selector::selector expression)) | (sequence::(expression+)) | (marked::expression) | (choice::(expression+)) | (optional::expression) | (plus::expression) | (star::expression) ;
grammar ::= (root::nonterminal)* production* ;
value ::= (int::ε) | (string::ε) ;
--------------------slps::bgf-4.0-xsd.bgf--------------------
production ::= (label::label)? nonterminal::nonterminal expression ;
expression ::= (epsilon::ε) | (empty::ε) | (value::value) | (any::ε) | (terminal::terminal) | (nonterminal::nonterminal) | (selectable::(selector::selector expression)) | (sequence::(expression+)) | (marked::expression) | (choice::(expression+)) | (optional::expression) | (plus::expression) | (star::expression) | (seplistplus::(expression expression)) | (sepliststar::(expression expression)) ;
grammar ::= (root::nonterminal)* production* ;
value ::= (int::ε) | (string::ε) ;
--------------------slps::bgf-4.1-adt.bgf--------------------
BGFExpression ::= (epsilon::ε) | (empty::ε) | (val::(v::BGFValue)) | (anything::ε) | (terminal::(t::string())) | (nonterminal::(t::string())) | (selectable::(selector::string() expr::BGFExpression)) | (sequence::(exprs::(BGFExpression*))) | (choice::(exprs::(BGFExpression*))) | (marked::(expr::BGFExpression)) | (optional::(expr::BGFExpression)) | (plus::(expr::BGFExpression)) | (star::(expr::BGFExpression)) | (starsepplus::(expr::BGFExpression sep::BGFExpression)) | (starsepstar::(expr::BGFExpression sep::BGFExpression)) ;
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::bgf-4.2-adt.bgf--------------------
BGFProduction ::= production::(label::string() lhs::string() rhs::BGFExpression) ;
BGFExpression ::= (epsilon::ε) | (empty::ε) | (val::(v::BGFValue)) | (anything::ε) | (terminal::(t::string())) | (nonterminal::(t::string())) | (selectable::(selector::string() expr::BGFExpression)) | (sequence::(exprs::(BGFExpression*))) | (choice::(exprs::(BGFExpression*))) | (marked::(expr::BGFExpression)) | (optional::(expr::BGFExpression)) | (plus::(expr::BGFExpression)) | (star::(expr::BGFExpression)) | (starsepplus::(expr::BGFExpression sep::BGFExpression)) | (starsepstar::(expr::BGFExpression sep::BGFExpression)) ;
BGFGrammar ::= grammar::(roots::(string()*) prods::(BGFProduction*)) ;
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::bgf-4.3-adt.bgf--------------------
BGFProduction ::= production::(label::string() lhs::string() rhs::BGFExpression) ;
BGFExpression ::= (epsilon::ε) | (empty::ε) | (val::(v::BGFValue)) | (anything::ε) | (terminal::(t::string())) | (nonterminal::(t::string())) | (selectable::(selector::string() expr::BGFExpression)) | (sequence::(exprs::BGFExprList)) | (choice::(exprs::BGFExprList)) | (marked::(expr::BGFExpression)) | (optional::(expr::BGFExpression)) | (plus::(expr::BGFExpression)) | (star::(expr::BGFExpression)) | (seplistplus::(expr::BGFExpression sep::BGFExpression)) | (sepliststar::(expr::BGFExpression sep::BGFExpression)) ;
BGFGrammar ::= grammar::(roots::(string()*) prods::BGFProdList) ;
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::bgf-5.0-adt.bgf--------------------
BGFProduction ::= production::(label::string() lhs::string() rhs::BGFExpression) ;
BGFExpression ::= (epsilon::ε) | (empty::ε) | (val::(v::BGFValue)) | (anything::ε) | (terminal::(t::string())) | (nonterminal::(t::string())) | (selectable::(selector::string() expr::BGFExpression)) | (sequence::(exprs::BGFExprList)) | (choice::(exprs::BGFExprList)) | (all::(exprs::BGFExprList)) | (marked::(expr::BGFExpression)) | (optional::(expr::BGFExpression)) | (not::(expr::BGFExpression)) | (plus::(expr::BGFExpression)) | (star::(expr::BGFExpression)) | (seplistplus::(expr::BGFExpression sep::BGFExpression)) | (sepliststar::(expr::BGFExpression sep::BGFExpression)) ;
BGFGrammar ::= grammar::(roots::(string()*) prods::BGFProdList) ;
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::bgf-5.1-adt.bgf--------------------
BGFProduction ::= production::(label::string() lhs::string() rhs::BGFExpression) ;
BGFExpression ::= (epsilon::ε) | (empty::ε) | (val::(v::BGFValue)) | (anything::ε) | (terminal::(t::string())) | (nonterminal::(t::string())) | (selectable::(selector::string() expr::BGFExpression)) | (sequence::(exprs::BGFExprList)) | (choice::(exprs::BGFExprList)) | (allof::(exprs::BGFExprList)) | (marked::(expr::BGFExpression)) | (optional::(expr::BGFExpression)) | (not::(expr::BGFExpression)) | (plus::(expr::BGFExpression)) | (star::(expr::BGFExpression)) | (seplistplus::(expr::BGFExpression sep::BGFExpression)) | (sepliststar::(expr::BGFExpression sep::BGFExpression)) ;
BGFGrammar ::= grammar::(roots::(string()*) prods::BGFProdList) ;
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::bgf-5.2-xsd.bgf--------------------
production ::= (label::label)? nonterminal::nonterminal expression ;
expression ::= (epsilon::ε) | (empty::ε) | (value::value) | (any::ε) | (terminal::terminal) | (nonterminal::nonterminal) | (selectable::(selector::selector expression)) | (marked::expression) | (sequence::(expression+)) | (choice::(expression+)) | (allof::(expression+)) | (not::expression) | (optional::expression) | (plus::expression) | (star::expression) | (seplistplus::(expression expression)) | (sepliststar::(expression expression)) ;
grammar ::= (root::nonterminal)* production* ;
value ::= (int::ε) | (string::ε) ;
--------------------slps::bgf-5.3-adt.bgf--------------------
BGFProduction ::= production::(label::string() lhs::string() rhs::BGFExpression) ;
BGFExpression ::= (epsilon::ε) | (empty::ε) | (val::(v::BGFValue)) | (anything::ε) | (terminal::(t::string())) | (nonterminal::(t::string())) | (selectable::(selector::string() expr::BGFExpression)) | (sequence::(exprs::BGFExprList)) | (choice::(exprs::BGFExprList)) | (allof::(exprs::BGFExprList)) | (marked::(expr::BGFExpression)) | (optional::(expr::BGFExpression)) | (not::(expr::BGFExpression)) | (plus::(expr::BGFExpression)) | (star::(expr::BGFExpression)) | (seplistplus::(expr::BGFExpression sep::BGFExpression)) | (sepliststar::(expr::BGFExpression sep::BGFExpression)) ;
BGFGrammar ::= grammar::(roots::(string()*) prods::BGFProdList) ;
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::bgf-v1.0-xsd.bgf--------------------
production ::= (label::label)? nonterminal::nonterminal expression ;
expression ::= (epsilon::ε) | (empty::ε) | (any::ε) | (terminal::terminal) | (nonterminal::nonterminal) | (selectable::(selector::selector expression)) | (sequence::(expression*)) | (choice::(expression*)) | (optional::expression) | (plus::expression) | (star::expression) ;
grammar ::= (name::string())? (root::nonterminal)* production* ;
--------------------slps::bgf-v2.0-xsd.bgf--------------------
production ::= (label::label)? nonterminal::nonterminal expression ;
expression ::= (epsilon::ε) | (empty::ε) | (value::value) | (any::ε) | (terminal::terminal) | (nonterminal::nonterminal) | (selectable::(selector::selector expression)) | (sequence::(expression*)) | (choice::(expression*)) | (optional::expression) | (plus::expression) | (star::expression) ;
grammar ::= (root::nonterminal)* production* ;
value ::= (int::ε) | (string::ε) ;
--------------------slps::bgf-v2.1-xsd.bgf--------------------
production ::= (label::label)? nonterminal::nonterminal expression ;
expression ::= (epsilon::ε) | (empty::ε) | (value::value) | (any::ε) | (terminal::terminal) | (nonterminal::nonterminal) | (selectable::(selector::selector expression)) | (sequence::(expression+)) | (choice::(expression+)) | (optional::expression) | (plus::expression) | (star::expression) ;
grammar ::= (root::nonterminal)* production* ;
value ::= (int::ε) | (string::ε) ;
--------------------slps::bgf-v3.0-xsd.bgf--------------------
production ::= (label::label)? nonterminal::nonterminal expression ;
expression ::= (epsilon::ε) | (empty::ε) | (value::value) | (any::ε) | (terminal::terminal) | (nonterminal::nonterminal) | (selectable::(selector::selector expression)) | (sequence::(expression+)) | (marked::(expression*)) | (choice::(expression+)) | (optional::expression) | (plus::expression) | (star::expression) ;
grammar ::= (root::nonterminal)* production* ;
value ::= (int::ε) | (string::ε) ;
--------------------slps::bgf-v3.1-xsd.bgf--------------------
production ::= (label::label)? nonterminal::nonterminal expression ;
expression ::= (epsilon::ε) | (empty::ε) | (value::value) | (any::ε) | (terminal::terminal) | (nonterminal::nonterminal) | (selectable::(selector::selector expression)) | (sequence::(expression+)) | (marked::expression) | (choice::(expression+)) | (optional::expression) | (plus::expression) | (star::expression) ;
grammar ::= (root::nonterminal)* production* ;
value ::= (int::ε) | (string::ε) ;
--------------------slps::bgf-v4.0-xsd.bgf--------------------
production ::= (label::label)? nonterminal::nonterminal expression ;
expression ::= (epsilon::ε) | (empty::ε) | (value::value) | (any::ε) | (terminal::terminal) | (nonterminal::nonterminal) | (selectable::(selector::selector expression)) | (sequence::(expression+)) | (marked::expression) | (choice::(expression+)) | (optional::expression) | (plus::expression) | (star::expression) | (seplistplus::(expression expression)) | (sepliststar::(expression expression)) ;
grammar ::= (root::nonterminal)* production* ;
value ::= (int::ε) | (string::ε) ;
--------------------slps::bgf-v4.2-adt.bgf--------------------
BGFProduction ::= production::(label::string() lhs::string() rhs::BGFExpression) ;
BGFExpression ::= (epsilon::ε) | (empty::ε) | (val::(v::BGFValue)) | (anything::ε) | (terminal::(t::string())) | (nonterminal::(t::string())) | (selectable::(selector::string() expr::BGFExpression)) | (sequence::(exprs::(BGFExpression*))) | (choice::(exprs::(BGFExpression*))) | (marked::(expr::BGFExpression)) | (optional::(expr::BGFExpression)) | (plus::(expr::BGFExpression)) | (star::(expr::BGFExpression)) | (starsepplus::(expr::BGFExpression sep::BGFExpression)) | (starsepstar::(expr::BGFExpression sep::BGFExpression)) ;
BGFGrammar ::= grammar::(roots::(string()*) prods::(BGFProduction*)) ;
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::bgf-v5.0-adt.bgf--------------------
BGFProduction ::= production::(label::string() lhs::string() rhs::BGFExpression) ;
BGFExpression ::= (epsilon::ε) | (empty::ε) | (val::(v::BGFValue)) | (anything::ε) | (terminal::(t::string())) | (nonterminal::(t::string())) | (selectable::(selector::string() expr::BGFExpression)) | (sequence::(exprs::BGFExprList)) | (choice::(exprs::BGFExprList)) | (all::(exprs::BGFExprList)) | (marked::(expr::BGFExpression)) | (optional::(expr::BGFExpression)) | (not::(expr::BGFExpression)) | (plus::(expr::BGFExpression)) | (star::(expr::BGFExpression)) | (seplistplus::(expr::BGFExpression sep::BGFExpression)) | (sepliststar::(expr::BGFExpression sep::BGFExpression)) ;
BGFGrammar ::= grammar::(roots::(string()*) prods::BGFProdList) ;
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::bgf-v5.1-adt.bgf--------------------
BGFProduction ::= production::(label::string() lhs::string() rhs::BGFExpression) ;
BGFExpression ::= (epsilon::ε) | (empty::ε) | (val::(v::BGFValue)) | (anything::ε) | (terminal::(t::string())) | (nonterminal::(t::string())) | (selectable::(selector::string() expr::BGFExpression)) | (sequence::(exprs::BGFExprList)) | (choice::(exprs::BGFExprList)) | (allof::(exprs::BGFExprList)) | (marked::(expr::BGFExpression)) | (optional::(expr::BGFExpression)) | (not::(expr::BGFExpression)) | (plus::(expr::BGFExpression)) | (star::(expr::BGFExpression)) | (seplistplus::(expr::BGFExpression sep::BGFExpression)) | (sepliststar::(expr::BGFExpression sep::BGFExpression)) ;
BGFGrammar ::= grammar::(roots::(string()*) prods::BGFProdList) ;
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::bgf-v5.2-xsd.bgf--------------------
production ::= (label::label)? nonterminal::nonterminal expression ;
expression ::= (epsilon::ε) | (empty::ε) | (value::value) | (any::ε) | (terminal::terminal) | (nonterminal::nonterminal) | (selectable::(selector::selector expression)) | (marked::expression) | (sequence::(expression+)) | (choice::(expression+)) | (allof::(expression+)) | (not::expression) | (optional::expression) | (plus::expression) | (star::expression) | (seplistplus::(expression expression)) | (sepliststar::(expression expression)) ;
grammar ::= (root::nonterminal)* production* ;
value ::= (int::ε) | (string::ε) ;
--------------------slps::cbgf-adt.bgf--------------------
CBGFCommand ::= (abridge_detour::(p::BGFProduction)) | (abstractize_concretize::(p::BGFProduction)) | (addH_removeH::(p::BGFProduction)) | (addV_removeV::(p::BGFProduction)) | (anonymize_deanonymize::(p::BGFProduction)) | (appear_disapper::(p::BGFProduction)) | (chain_unchain::(p::BGFProduction)) | (clone_equate::(x::string() y::string() w::XBGFScope)) | (concatT_splitT::(y::string() xs::(string()*) w::XBGFScope)) | (concretize_abstractize::(p::BGFProduction)) | (deanonymize_anonymize::(p::BGFProduction)) | (define_undefine::(ps::(BGFProduction*))) | (designate_unlabel::(p::BGFProduction)) | (detour_abridge::(p::BGFProduction)) | (deyaccify_yaccify::(ps::(BGFProduction*))) | (disappear_appear::(p::BGFProduction)) | (downgrade_upgrade::(p1::BGFProduction p2::BGFProduction)) | (eliminate_introduce::(ps::(BGFProduction*))) | (equate_clone::(x::string() y::string() w::XBGFScope)) | (extract_inline::(p::BGFProduction w::XBGFScope)) | (factor_factor::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (fold_unfold::(x::string() w::XBGFScope)) | (horizontal_vertical::(w::XBGFScope)) | (inject_project::(p::BGFProduction)) | (inline_extract::(p::BGFProduction w::XBGFScope)) | (introduce_eliminate::(ps::(BGFProduction*))) | (iterate_assoc::(p::BGFProduction)) | (assoc_iterate::(p::BGFProduction)) | (massage_massage::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (narrow_widen::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (permute_permute::(p1::BGFProduction p2::BGFProduction)) | (project_inject::(p::BGFProduction)) | (redefine_redefine::(ps1::(BGFProduction*) ps2::(BGFProduction*))) | (removeH_addH::(p::BGFProduction)) | (removeV_addV::(p::BGFProduction)) | (renameL_renameL::(x::string() y::string())) | (renameN_renameN::(x::string() y::string())) | (renameS_renameS::(x::string() y::string() w::XBGFScope)) | (renameT_renameT::(x::string() y::string())) | (replace_replace::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (reroot_reroot::(xs1::(string()*) xs2::(string()*))) | (splitN_unite::(x::string() ps::(BGFProduction*) w::XBGFScope)) | (splitT_concatT::(x::string() ys::(string()*) w::XBGFScope)) | (unchain_chain::(p::BGFProduction)) | (undefine_define::(ps::(BGFProduction*))) | (unfold_fold::(x::string() w::XBGFScope)) | (unite_splitN::(x::string() ps::(BGFProduction*) w::XBGFScope)) | (unlabel_designate::(p::BGFProduction)) | (upgrade_downgrade::(p1::BGFProduction p2::BGFProduction)) | (vertical_horizontal::(w::XBGFScope)) | (widen_narrow::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (yaccify_deyaccify::(ps::(BGFProduction*))) ;
--------------------slps::cbgf-xsd.bgf--------------------
horizontal-vertical ::= nonterminal::nonterminal ;
rename ::= (label::(from::label to::label)) | (nonterminal::(from::nonterminal to::nonterminal)) | (selector::((in::label)? from::selector to::selector)) | (terminal::(from::terminal to::terminal)) ;
widen ::= expression expression (in::scope)? ;
unlabel ::= label::label ;
define ::= production+ tag::string() ;
splitT ::= terminal::terminal into::((terminal::terminal)+) (in::scope)? ;
equate-clone ::= align::(production+) with::nonterminal in::(scope+) ;
production ::= (label::label)? nonterminal::nonterminal expression ;
 production ::= (label::label)? nonterminal::nonterminal expression ;
replace ::= expression expression (in::scope)? tag::string() ;
deyaccify ::= nonterminal::nonterminal ;
value ::= (int::ε) | (string::ε) ;
 value ::= (int::ε) | (string::ε) ;
add-remove ::= (vertical::production) | (horizontal::production) ;
redefine ::= production+ tag::string() ;
split-unite ::= add::(production+) to::(production+) in::(scope+) ;
unite-split ::= add::(production+) to::(production+) in::(scope+) ;
rename-rename ::= (label::(from::label to::label)) | (nonterminal::(from::nonterminal to::nonterminal)) | (selector::((in::label)? from::selector to::selector)) | (terminal::(from::terminal to::terminal)) ;
widen-narrow ::= expression expression (in::scope)? ;
equate ::= align::nonterminal with::nonterminal ;
fold-unfold ::= nonterminal::nonterminal (in::scope)? ;
extract-inline ::= production (in::scope)? ;
horizontal ::= nonterminal::nonterminal ;
eliminate ::= nonterminal::nonterminal ;
unite ::= add::nonterminal to::nonterminal ;
add ::= (vertical::production) | (horizontal::production) ;
narrow ::= expression expression (in::scope)? ;
replace-replace ::= expression expression (in::scope)? tag::string() ;
vertical-horizontal ::= nonterminal::nonterminal ;
split ::= nonterminal::nonterminal production+ scope* ;
unfold ::= nonterminal::nonterminal (in::scope)? ;
project ::= production tag::string() ;
clone-equate ::= align::(production+) with::nonterminal in::(scope+) ;
strip ::= (label::label) | (allLabels::ε) | (selector::selector) | (allSelectors::ε) | (terminal::terminal) | (allTerminals::ε) ;
remove-add ::= (vertical::production) | (horizontal::production) ;
expression ::= (epsilon::ε) | (empty::ε) | (value::value) | (any::ε) | (terminal::terminal) | (nonterminal::nonterminal) | (selectable::(selector::selector expression)) | (marked::expression) | (sequence::(expression+)) | (choice::(expression+)) | (allof::(expression+)) | (not::expression) | (optional::expression) | (plus::expression) | (star::expression) | (seplistplus::(expression expression)) | (sepliststar::(expression expression)) ;
 expression ::= (epsilon::ε) | (empty::ε) | (value::value) | (any::ε) | (terminal::terminal) | (nonterminal::nonterminal) | (selectable::(selector::selector expression)) | (marked::expression) | (sequence::(expression+)) | (choice::(expression+)) | (allof::(expression+)) | (not::expression) | (optional::expression) | (plus::expression) | (star::expression) | (seplistplus::(expression expression)) | (sepliststar::(expression expression)) ;
reroot ::= (root::nonterminal)* ;
undefine ::= (nonterminal::nonterminal)+ tag::string() ;
scope ::= (label::label) | (nonterminal::nonterminal) ;
 scope ::= (label::label) | (nonterminal::nonterminal) ;
unfold-fold ::= nonterminal::nonterminal (in::scope)? ;
roots ::= (root::nonterminal)* ;
inject ::= production tag::string() ;
factor ::= expression expression (in::scope)? ;
reroot-reroot ::= from::roots to::roots ;
factor-factor ::= expression expression (in::scope)? ;
inline-extract ::= production (in::scope)? ;
massage ::= expression expression (in::scope)? ;
narrow-widen ::= expression expression (in::scope)? ;
massage-massage ::= expression expression (in::scope)? ;
remove ::= (vertical::production) | (horizontal::production) ;
fold ::= nonterminal::nonterminal (in::scope)? ;
extract ::= production (in::scope)? ;
--------------------slps::edd.bgf--------------------
config ::= ((start-grammar-symbol::string()) | (end-grammar-symbol::string()) | (line-continuation-symbol::string()) | (tabulation-symbol::string()) | (start-label-symbol::string()) | (end-label-symbol::string()) | (defining-symbol::string()) | (multiple-defining-symbol::string()) | (terminator-symbol::string()) | (definition-separator-symbol::string()) | (concatenate-symbol::string()) | (start-comment-symbol::string()) | (end-comment-symbol::string()) | (start-group-symbol::string()) | (end-group-symbol::string()) | (start-option-symbol::string()) | (end-option-symbol::string()) | (start-terminal-symbol::string()) | (end-terminal-symbol::string()) | (start-nonterminal-symbol::string()) | (end-nonterminal-symbol::string()) | (start-seplist-star-symbol::string()) | (end-seplist-star-symbol::string()) | (start-seplist-plus-symbol::string()) | (end-seplist-plus-symbol::string()) | (start-repetition-star-symbol::string()) | (end-repetition-star-symbol::string()) | (start-repetition-plus-symbol::string()) | (end-repetition-plus-symbol::string()) | (postfix-option-symbol::string()) | (postfix-repetition-star-symbol::string()) | (postfix-repetition-plus-symbol::string()) | (nonterminals-may-start-with::string()) | (nonterminals-may-contain::string()) | (nonterminal-if-contains::string()) | (terminal-if-undefined::((except::string())*)) | (nonterminal-if-defined::((except::string())*)) | (decompose-symbols::((except::string())*)) | (terminal-if-uppercase::α) | (terminal-if-lowercase::α) | (terminal-if-mixedcase::α) | (terminal-if-camelcase::α) | (nonterminal-if-uppercase::α) | (nonterminal-if-lowercase::α) | (nonterminal-if-mixedcase::α) | (nonterminal-if-camelcase::α) | (glue-nonalphanumeric-terminals::α) | (break-tokens-at-whitespace::α) | (disregard-labels::α) | (consider-indentation::α) | (ignore::(((newline::α) | (space::α) | (same-indentation::α) | (lines-containing::string()))+)) | (mask::(token::string() (terminal::string()) | (epsilon::α))))* ;
--------------------slps::ldf-Readable.bgf--------------------
subsection-role ::= (synopsis::ε) | (description::ε) | (syntax::ε) | (constraints::ε) | (relationship::ε) | (semantics::ε) | (default::ε) | (rationale::ε) | (example::ε) | (update::ε) | (subtopic::ε) | (section::ε) ;
section-role ::= (abstract::ε) | (conformance::ε) | (compatibility::ε) | (design-goals::ε) | (document-structure::ε) | (foreword::ε) | (references::ε) | (notation::ε) | (scope::ε) | (what-is-new::ε) | (index::ε) | (full-grammar::ε) | (list-of-tables::ε) | (list-of-authors::ε) | (list-of-contents::ε) | (list-of-references::ε) | (top-section::ε) | (lexical-section::ε) ;
list ::= (item::mixed)+ ;
type ::= (normative::ε) | (informative::ε) ;
production ::= (label::label)? nonterminal::nonterminal expression ;
expression ::= (epsilon::ε) | (empty::ε) | (value::value) | (any::ε) | (terminal::terminal) | (nonterminal::nonterminal) | (selectable::(selector::selector expression)) | (marked::expression) | (sequence::(expression+)) | (choice::(expression+)) | (allof::(expression+)) | (not::expression) | (optional::expression) | (plus::expression) | (star::expression) | (seplistplus::(expression expression)) | (sepliststar::(expression expression)) ;
subsection-metadata ::= (id::ID)? subsection-role type? (title::string())? (author::person)* ;
section-metadata ::= (id::ID)? section-role type? (title::string())? (author::person)* ;
person ::= name::string() (affiliation::string())? (email::string())? ;
status ::= (unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε) ;
value ::= (int::ε) | (string::ε) ;
part-role ::= (front-matter::ε) | (core-part::ε) | (back-matter::ε) | (annex::ε) ;
named-link ::= title::string() version-or-edition? (uri::anyURI)? ;
section-structure ::= (content::(content-content+)) | (placeholder::α) | (subsection+) ;
part-metadata ::= (id::ID)? part-role (title::string())? (author::person)* ;
version-or-edition ::= (version::string()) | (edition::string()) ;
content-content ::= (para::mixed) | (list::list) | production ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (iec::ε) | (ietf::ε) | (oasis::ε) | (omg::ε) | (wsa::ε) | (w3c::ε) ;
document-metadata ::= body? (number::string())? (author::person)* topic::string() status version-or-edition (previous::named-link)* date::timestamp ;
--------------------slps::ldf-v1.0-xsd.bgf--------------------
sectionType ::= title::string() content::contentType ;
document ::= title::string() author::string() abstract::string() content::contentType ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? ;
contentType ::= ((text::mixedType) | (grammar::(α language::string() (version::string())?)) | (sample::sampleType) | (runnable::runnableType))* (section::sectionType)* ;
--------------------slps::ldf-v10.0-xsd.bgf--------------------
SimpleTextElement ::= (empty::ε) | (text::mixedType) | (table::SimpleTable) | (list::SimpleList) | (formula::string()) | (sample::string()) | production ;
SimpleTable ::= (header::TableRow)* (row::TableRow)+ ;
informative ::= (note::SimpleSection) | (example::SimpleSection) | (informative::SimpleSection) ;
document ::= titlePage::titlePage (placeholder::generated)* frontMatter::(front-simple-section+) (lists::(front-list+))? (lexicalPart::(LexicalSection+))? (core::StructuredSection)+ (annex::StructuredSection)* ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
StructuredSection ::= title::string() (author::string())* StructuredSectionElement+ (id::string())? ;
SimpleSection ::= (title::string())? (author::string())* content::SimpleText (id::string())? ;
status ::= (unknown::ε) | (draft::ε) | (committee draft::ε) | (recommendation::ε) | (international standard::ε) ;
ListOfTerms ::= (title::string())? (author::string())* (term::(name::string() definition::SimpleText))+ (id::string())? ;
SimpleList ::= (item::mixedType)+ ;
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
front-simple-section ::= (foreword::SimpleSection) | (designGoals::SimpleSection) | (scope::SimpleSection) | (conformance::SimpleSection) | (compliance::SimpleSection) | (compatibility::SimpleSection) | (notation::SimpleSection) | (normativeReferences::SimpleSection) | (documentStructure::SimpleSection) | (whatsnew::SimpleSection) | (clause::SimpleSection) | (field::SimpleSection) ;
TableRow ::= (cell::SimpleText)+ ;
normative ::= (purpose::SimpleSection) | (description::SimpleSection) | (location::SimpleSection) | (considerations::SimpleSection) | (defaults::SimpleSection) | (normative::SimpleSection) ;
StructuredSectionElement ::= (placeholder::generated) | normative | informative | production | (relationship::ListOfInternalLinks) | (subtopic::StructuredSection) ;
titlePage ::= (body::body number::integer()) | ((author::string())+) topic::string() (version::string()) | (edition::string()) status::status date::string() ;
ListOfInternalLinks ::= (link::(text::string() (linktext::string())? reference::string()))+ ;
front-list ::= (definitions::ListOfTerms) | (abbreviations::ListOfTerms) | (languageOverview::ListOfTerms) ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
LexicalSection ::= (lineContinuations::SimpleSection) | (whitespace::SimpleSection) | (tokens::SimpleSection) | (preprocessor::SimpleSection) | (literals::SimpleSection) | (lexical::SimpleSection) ;
--------------------slps::ldf-v11.0-xsd.bgf--------------------
SimpleTextElement ::= (empty::ε) | (text::mixedType) | (figure::SimpleFigure) | (table::SimpleTable) | (list::SimpleList) | (formula::string()) | (sample::string()) | production ;
SimpleTable ::= (header::TableRow)* (row::TableRow)+ ;
informative ::= (note::SimpleSection) | (example::SimpleSection) | (informative::SimpleSection) ;
document ::= titlePage::titlePage (placeholder::generated)* frontMatter::(front-simple-section+) (lists::(front-list+))? (lexicalPart::(LexicalSection+))? (core::StructuredSection)+ (annex::StructuredSection)* ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
SimpleFigure ::= caption::string() type::string() file::string() (id::string())? ;
StructuredSection ::= title::string() (author::string())* StructuredSectionElement+ (id::string())? ;
SimpleSection ::= (title::string())? (author::string())* content::SimpleText (id::string())? ;
status ::= (unknown::ε) | (draft::ε) | (committee draft::ε) | (recommendation::ε) | (international standard::ε) ;
ListOfTerms ::= (title::string())? (author::string())* (term::(name::string() definition::SimpleText))+ (id::string())? ;
SimpleList ::= (item::mixedType)+ ;
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
front-simple-section ::= (foreword::SimpleSection) | (designGoals::SimpleSection) | (scope::SimpleSection) | (conformance::SimpleSection) | (compliance::SimpleSection) | (compatibility::SimpleSection) | (notation::SimpleSection) | (normativeReferences::SimpleSection) | (documentStructure::SimpleSection) | (whatsnew::SimpleSection) | (clause::SimpleSection) | (field::SimpleSection) ;
TableRow ::= (cell::SimpleText)+ ;
normative ::= (purpose::SimpleSection) | (description::SimpleSection) | (location::SimpleSection) | (considerations::SimpleSection) | (defaults::SimpleSection) | (normative::SimpleSection) ;
StructuredSectionElement ::= (placeholder::generated) | normative | informative | production | (relationship::ListOfInternalLinks) | (subtopic::StructuredSection) ;
titlePage ::= (body::body number::integer()) | ((author::string())+) topic::string() (version::string()) | (edition::string()) status::status date::string() ;
ListOfInternalLinks ::= (link::(text::string() (linktext::string())? reference::string()))+ ;
front-list ::= (definitions::ListOfTerms) | (abbreviations::ListOfTerms) | (languageOverview::ListOfTerms) ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
LexicalSection ::= (lineContinuations::SimpleSection) | (whitespace::SimpleSection) | (tokens::SimpleSection) | (preprocessor::SimpleSection) | (literals::SimpleSection) | (lexical::SimpleSection) ;
--------------------slps::ldf-v11.1-xsd.bgf--------------------
simpleTextElement ::= (empty::ε) | (text::mixedType) | (figure::simpleFigure) | (table::simpleTable) | (list::simpleList) | (formula::string()) | (sample::string()) | production ;
frontSection ::= (foreword::simpleSection) | (designGoals::simpleSection) | (scope::simpleSection) | (conformance::simpleSection) | (compliance::simpleSection) | (compatibility::simpleSection) | (notation::simpleSection) | (normativeReferences::simpleSection) | (documentStructure::simpleSection) | (whatsnew::simpleSection) | (clause::simpleSection) | (field::simpleSection) ;
simpleTable ::= (header::tableRow)* (row::tableRow)+ ;
informative ::= (note::simpleSection) | (example::simpleSection) | (informative::simpleSection) ;
document ::= titlePage::titlePage (placeholder::generated)* frontMatter::(frontSection+) (lists::(frontList+))? (lexicalPart::(lexicalSection+))? (core::structuredSection)+ (annex::structuredSection)* ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
simpleFigure ::= caption::string() type::string() file::string() (id::string())? ;
structuredSection ::= title::string() (author::string())* structuredSectionElement+ (id::string())? ;
simpleSection ::= (title::string())? (author::string())* content::simpleText (id::string())? ;
status ::= (unknown::ε) | (draft::ε) | (committee draft::ε) | (recommendation::ε) | (international standard::ε) ;
listOfTerms ::= (title::string())? (author::string())* (term::(name::string() definition::simpleText))+ (id::string())? ;
simpleList ::= (item::mixedType)+ ;
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
tableRow ::= (cell::simpleText)+ ;
normative ::= (purpose::simpleSection) | (description::simpleSection) | (location::simpleSection) | (considerations::simpleSection) | (defaults::simpleSection) | (normative::simpleSection) ;
structuredSectionElement ::= (placeholder::generated) | normative | informative | production | (relationship::listOfInternalLinks) | (subtopic::structuredSection) ;
frontList ::= (definitions::listOfTerms) | (abbreviations::listOfTerms) | (languageOverview::listOfTerms) ;
listOfInternalLinks ::= (link::(text::string() (linkText::string())? reference::string()))+ ;
titlePage ::= (body::body number::integer()) | ((author::string())+) topic::string() (version::string()) | (edition::string()) status::status date::string() ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
lexicalSection ::= (lineContinuations::simpleSection) | (whitespace::simpleSection) | (tokens::simpleSection) | (preprocessor::simpleSection) | (literals::simpleSection) | (lexical::simpleSection) ;
--------------------slps::ldf-v11.2-xsd.bgf--------------------
simpleTextElement ::= (empty::ε) | (text::mixedType) | (figure::simpleFigure) | (table::simpleTable) | (list::simpleList) | (formula::string()) | (sample::string()) | production ;
informative ::= (note::simpleSection) | (example::simpleSection) | (informative::simpleSection) ;
simpleTable ::= (header::tableRow)* (row::tableRow)+ ;
frontSection ::= (foreword::simpleSection) | (designGoals::simpleSection) | (scope::simpleSection) | (conformance::simpleSection) | (compliance::simpleSection) | (compatibility::simpleSection) | (notation::simpleSection) | (normativeReferences::simpleSection) | (documentStructure::simpleSection) | (whatsnew::simpleSection) | (clause::simpleSection) | (field::simpleSection) ;
document ::= titlePage::titlePage (placeholder::generated)* frontMatter::(frontSection+) (lists::(frontList+))? (lexicalPart::(lexicalSection+))? (core::structuredSection)+ (annex::structuredSection)* ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
simpleFigure ::= caption::string() type::string() file::string() (id::string())? ;
structuredSection ::= title::string() (author::string())* structuredSectionElement+ (id::string())? ;
simpleSection ::= (title::string())? (author::string())* content::simpleText (id::string())? ;
status ::= (unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε) ;
listOfTerms ::= (title::string())? (author::string())* (term::(name::string() definition::simpleText))+ (id::string())? ;
simpleList ::= (item::mixedType)+ ;
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
tableRow ::= (cell::simpleText)+ ;
normative ::= (purpose::simpleSection) | (description::simpleSection) | (location::simpleSection) | (considerations::simpleSection) | (defaults::simpleSection) | (normative::simpleSection) ;
structuredSectionElement ::= (placeholder::generated) | normative | informative | production | (relationship::listOfInternalLinks) | (subtopic::structuredSection) ;
frontList ::= (definitions::listOfTerms) | (abbreviations::listOfTerms) | (languageOverview::listOfTerms) ;
listOfInternalLinks ::= (link::(text::string() (linkText::string())? reference::string()))+ ;
titlePage ::= (body::body number::integer()) | ((author::string())+) topic::string() (version::string()) | (edition::string()) status::status date::string() ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
lexicalSection ::= (lineContinuations::simpleSection) | (whitespace::simpleSection) | (tokens::simpleSection) | (preprocessor::simpleSection) | (literals::simpleSection) | (lexical::simpleSection) ;
--------------------slps::ldf-v12.0-xsd.bgf--------------------
simpleTextElement ::= (empty::ε) | (text::mixedType) | (figure::simpleFigure) | (table::simpleTable) | (list::simpleList) | (formula::string()) | (sample::string()) | production ;
informative ::= (note::simpleSection) | (example::simpleSection) | (informative::simpleSection) ;
simpleTable ::= (header::tableRow)* (row::tableRow)+ ;
frontSection ::= (foreword::simpleSection) | (designGoals::simpleSection) | (scope::simpleSection) | (conformance::simpleSection) | (compliance::simpleSection) | (compatibility::simpleSection) | (notation::simpleSection) | (normativeReferences::simpleSection) | (documentStructure::simpleSection) | (whatsnew::simpleSection) ;
document ::= titlePage::titlePage (placeholder::generated)* frontMatter::(frontSection+) (lists::(frontList+))? (lexicalPart::(lexicalSection+))? (core::structuredSection)+ (annex::structuredSection)* ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
simpleFigure ::= caption::string() type::string() file::string() (id::string())? ;
structuredSection ::= title::string() (author::string())* structuredSectionElement+ (id::string())? ;
simpleSection ::= (title::string())? (author::string())* content::simpleText (id::string())? ;
status ::= (unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε) ;
listOfTerms ::= (title::string())? (author::string())* (term::(name::string() definition::simpleText))+ (id::string())? ;
simpleList ::= (item::mixedType)+ ;
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
tableRow ::= (cell::simpleText)+ ;
normative ::= (purpose::simpleSection) | (description::simpleSection) | (location::simpleSection) | (considerations::simpleSection) | (defaults::simpleSection) | (normative::simpleSection) ;
structuredSectionElement ::= (placeholder::generated) | normative | informative | production | (relationship::listOfInternalLinks) | (subtopic::structuredSection) | (clause::simpleSection) | (field::simpleSection) ;
listOfInternalLinks ::= (link::(text::string() (linkText::string())? reference::string()))+ ;
frontList ::= (definitions::listOfTerms) | (abbreviations::listOfTerms) | (languageOverview::listOfTerms) ;
titlePage ::= (body::body number::integer()) | ((author::string())+) topic::string() (version::string()) | (edition::string()) status::status date::string() ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
lexicalSection ::= (lineContinuations::simpleSection) | (whitespace::simpleSection) | (tokens::simpleSection) | (preprocessor::simpleSection) | (literals::simpleSection) | (lexical::simpleSection) ;
--------------------slps::ldf-v13.0-xsd.bgf--------------------
simpleTextElement ::= (empty::ε) | (text::mixedType) | (figure::simpleFigure) | (table::simpleTable) | (list::simpleList) | (formula::string()) | (sample::string()) | production ;
informative ::= (rationale::simpleSection) | (example::simpleSection) | (update::simpleSection) ;
simpleTable ::= (header::tableRow)* (row::tableRow)+ ;
frontSection ::= (foreword::simpleSection) | (designGoals::simpleSection) | (scope::simpleSection) | (conformance::simpleSection) | (compliance::simpleSection) | (compatibility::simpleSection) | (notation::simpleSection) | (normativeReferences::simpleSection) | (documentStructure::simpleSection) | (whatsnew::simpleSection) ;
document ::= titlePage::titlePage (placeholder::generated)* frontMatter::(frontSection+) (lists::(frontList+))? (lexicalPart::(lexicalSection+))? (core::structuredSection)+ (annex::structuredSection)* ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
simpleFigure ::= caption::string() type::string() file::string() (id::string())? ;
structuredSection ::= title::string() (author::string())* structuredSectionElement+ (id::string())? ;
simpleSection ::= (title::string())? (author::string())* content::simpleText (id::string())? ;
status ::= (unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε) ;
listOfTerms ::= (title::string())? (author::string())* (term::(name::string() definition::simpleText))+ (id::string())? ;
simpleList ::= (item::mixedType)+ ;
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
tableRow ::= (cell::simpleText)+ ;
normative ::= (synopsis::simpleSection) | (description::simpleSection) | (syntax::(production+)) | (constraints::simpleSection) | (relationship::simpleSection) | (semantics::simpleSection) | (default::simpleSection) ;
structuredSectionElement ::= (placeholder::generated) | normative | informative | production | (references::listOfInternalLinks) | (section::simpleSection) | (subtopic::structuredSection) | (value::(key::string() data::string())) ;
listOfInternalLinks ::= (link::(text::string() (linkText::string())? reference::string()))+ ;
frontList ::= (definitions::listOfTerms) | (abbreviations::listOfTerms) | (languageOverview::listOfTerms) ;
titlePage ::= (body::body number::integer()) | ((author::string())+) topic::string() (version::string()) | (edition::string()) status::status date::string() ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
lexicalSection ::= (lineContinuations::simpleSection) | (whitespace::simpleSection) | (tokens::simpleSection) | (preprocessor::simpleSection) | (literals::simpleSection) | (lexical::simpleSection) ;
--------------------slps::ldf-v13.1-xsd.bgf--------------------
simpleTextElement ::= (empty::ε) | (text::mixedType) | (figure::simpleFigure) | (table::simpleTable) | (list::simpleList) | (formula::string()) | (sample::string()) | production ;
informative ::= (rationale::simpleSection) | (example::simpleSection) | (update::simpleSection) ;
simpleTable ::= (header::tableRow)* (row::tableRow)+ ;
frontSection ::= (foreword::simpleSection) | (designGoals::simpleSection) | (scope::simpleSection) | (conformance::simpleSection) | (compliance::simpleSection) | (compatibility::simpleSection) | (notation::simpleSection) | (normativeReferences::simpleSection) | (documentStructure::simpleSection) | (whatsnew::simpleSection) ;
document ::= titlePage::titlePage (placeholder::generated)* frontMatter::(frontSection+) (lists::(frontList+))? (lexicalPart::(lexicalSection+))? (core::structuredSection)+ (annex::structuredSection)* ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
simpleFigure ::= caption::string() type::string() file::string() (id::string())? ;
structuredSection ::= title::string() (author::string())* structuredSectionElement+ (id::string())? ;
simpleSection ::= (title::string())? (author::string())* content::simpleText (id::string())? ;
status ::= (unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε) ;
listOfTerms ::= (title::string())? (author::string())* (term::(name::string() definition::simpleText))+ (id::string())? ;
simpleList ::= (item::mixedType)+ ;
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
tableRow ::= (cell::simpleText)+ ;
normative ::= (synopsis::simpleSection) | (description::simpleSection) | (syntax::simpleSection) | (constraints::simpleSection) | (relationship::simpleSection) | (semantics::simpleSection) | (default::simpleSection) ;
structuredSectionElement ::= (placeholder::generated) | normative | informative | production | (references::listOfInternalLinks) | (section::simpleSection) | (subtopic::structuredSection) | (value::(key::string() data::string())) ;
listOfInternalLinks ::= (link::(text::string() (linkText::string())? reference::string()))+ ;
frontList ::= (definitions::listOfTerms) | (abbreviations::listOfTerms) | (languageOverview::listOfTerms) ;
titlePage ::= (body::body number::integer()) | ((author::string())+) topic::string() (version::string()) | (edition::string()) status::status date::string() ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
lexicalSection ::= (lineContinuations::simpleSection) | (whitespace::simpleSection) | (tokens::simpleSection) | (preprocessor::simpleSection) | (literals::simpleSection) | (lexical::simpleSection) ;
--------------------slps::ldf-v14.0-xsd.bgf--------------------
simpleTextElement ::= (empty::ε) | (text::mixedType) | (figure::simpleFigure) | (table::simpleTable) | (list::simpleList) | (formula::string()) | (sample::string()) | production ;
informative ::= (rationale::simpleSection) | (example::simpleSection) | (update::simpleSection) ;
simpleTable ::= (header::tableRow)* (row::tableRow)+ ;
frontSection ::= (foreword::simpleSection) | (designGoals::simpleSection) | (scope::simpleSection) | (conformance::simpleSection) | (compliance::simpleSection) | (compatibility::simpleSection) | (notation::simpleSection) | (normativeReferences::simpleSection) | (documentStructure::simpleSection) | (whatsnew::simpleSection) ;
document ::= titlePage::titlePage (placeholder::generated)* frontMatter::(frontSection+) (lists::(frontList+))? (lexicalPart::(lexicalSection+))? (core::structuredSection)+ (annex::structuredSection)* ;
link ::= (text::string())? reference::string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
simpleFigure ::= caption::string() type::string() file::string() (id::string())? ;
structuredSection ::= title::string() (author::string())* structuredSectionElement+ (id::string())? ;
simpleSection ::= (title::string())? (author::string())* content::simpleText (id::string())? ;
status ::= (unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε) ;
listOfTerms ::= (title::string())? (author::string())* (term::(name::string() definition::simpleText))+ (id::string())? ;
simpleList ::= (item::mixedType)+ ;
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
tableRow ::= (cell::simpleText)+ ;
normative ::= (synopsis::simpleSection) | (description::simpleSection) | (syntax::simpleSection) | (constraints::simpleSection) | (relationship::simpleSection) | (semantics::simpleSection) | (default::simpleSection) ;
structuredSectionElement ::= (placeholder::generated) | normative | informative | production | (references::simpleList) | (section::simpleSection) | (subtopic::structuredSection) | (value::(key::string() data::string())) ;
frontList ::= (definitions::listOfTerms) | (abbreviations::listOfTerms) | (languageOverview::listOfTerms) ;
titlePage ::= (body::body number::integer()) | ((author::string())+) topic::string() (version::string()) | (edition::string()) status::status date::string() ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
lexicalSection ::= (lineContinuations::simpleSection) | (whitespace::simpleSection) | (tokens::simpleSection) | (preprocessor::simpleSection) | (literals::simpleSection) | (lexical::simpleSection) ;
--------------------slps::ldf-v15.0-xsd.bgf--------------------
simpleTextElement ::= (empty::ε) | (text::mixedType) | (figure::simpleFigure) | (table::simpleTable) | (list::simpleList) | (formula::(((math::anyMath) | (mfenced::anyMath) | (mtext::anyMath) | (msub::anyMath) | (msup::anyMath) | (mrow::anyMath) | (mi::anyMath) | (mo::anyMath) | (varepsilon::α))+)) | (sample::string()) | production ;
informative ::= (rationale::simpleSection) | (example::simpleSection) | (update::simpleSection) ;
simpleTable ::= (header::tableRow)* (row::tableRow)+ ;
frontSection ::= (foreword::simpleSection) | (designGoals::simpleSection) | (scope::simpleSection) | (conformance::simpleSection) | (compliance::simpleSection) | (compatibility::simpleSection) | (notation::simpleSection) | (normativeReferences::simpleSection) | (documentStructure::simpleSection) | (whatsnew::simpleSection) ;
document ::= titlePage::titlePage (placeholder::generated)* frontMatter::(frontSection+) (lists::(frontList+))? (lexicalPart::(lexicalSection+))? (core::structuredSection)+ (annex::structuredSection)* ;
link ::= (text::string())? reference::string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
simpleFigure ::= caption::string() type::string() file::string() (id::string())? ;
structuredSection ::= title::string() (author::string())* structuredSectionElement+ (id::string())? ;
simpleSection ::= (title::string())? (author::string())* content::simpleText (id::string())? ;
status ::= (unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε) ;
listOfTerms ::= (title::string())? (author::string())* (term::(name::string() definition::simpleText))+ (id::string())? ;
simpleList ::= (item::mixedType)+ ;
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
tableRow ::= (cell::simpleText)+ ;
normative ::= (synopsis::simpleSection) | (description::simpleSection) | (syntax::simpleSection) | (constraints::simpleSection) | (relationship::simpleSection) | (semantics::simpleSection) | (default::simpleSection) ;
structuredSectionElement ::= (placeholder::generated) | normative | informative | production | (references::simpleList) | (section::simpleSection) | (subtopic::structuredSection) | (value::(key::string() data::string())) ;
frontList ::= (definitions::listOfTerms) | (abbreviations::listOfTerms) | (languageOverview::listOfTerms) ;
titlePage ::= (body::body number::integer()) | ((author::string())+) topic::string() (version::string()) | (edition::string()) status::status date::string() ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
lexicalSection ::= (lineContinuations::simpleSection) | (whitespace::simpleSection) | (tokens::simpleSection) | (preprocessor::simpleSection) | (literals::simpleSection) | (lexical::simpleSection) ;
--------------------slps::ldf-v15.1-xsd.bgf--------------------
simpleTextElement ::= (empty::ε) | (text::mixedType) | (figure::simpleFigure) | (table::simpleTable) | (list::simpleList) | (formula::(((math::anyMath) | (mfenced::anyMath) | (mtext::anyMath) | (msub::anyMath) | (msup::anyMath) | (mrow::anyMath) | (mi::anyMath) | (mo::anyMath) | (varepsilon::α))+)) | (sample::((α | string())* src::string())) | production ;
informative ::= (rationale::simpleSection) | (example::simpleSection) | (update::simpleSection) ;
simpleTable ::= (header::tableRow)* (row::tableRow)+ ;
frontSection ::= (foreword::simpleSection) | (designGoals::simpleSection) | (scope::simpleSection) | (conformance::simpleSection) | (compliance::simpleSection) | (compatibility::simpleSection) | (notation::simpleSection) | (normativeReferences::simpleSection) | (documentStructure::simpleSection) | (whatsnew::simpleSection) ;
document ::= titlePage::titlePage (placeholder::generated)* frontMatter::(frontSection+) (lists::(frontList+))? (lexicalPart::(lexicalSection+))? (core::structuredSection)+ (annex::structuredSection)* ;
link ::= (text::string())? reference::string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
simpleFigure ::= caption::string() type::string() file::string() (id::string())? ;
structuredSection ::= title::string() (author::string())* structuredSectionElement+ (id::string())? ;
simpleSection ::= (title::string())? (author::string())* content::simpleText (id::string())? ;
status ::= (unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε) ;
listOfTerms ::= (title::string())? (author::string())* (term::(name::string() definition::simpleText))+ (id::string())? ;
simpleList ::= (item::mixedType)+ ;
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
tableRow ::= (cell::simpleText)+ ;
normative ::= (synopsis::simpleSection) | (description::simpleSection) | (syntax::simpleSection) | (constraints::simpleSection) | (relationship::simpleSection) | (semantics::simpleSection) | (default::simpleSection) ;
structuredSectionElement ::= (placeholder::generated) | normative | informative | production | (references::simpleList) | (section::simpleSection) | (subtopic::structuredSection) | (value::(key::string() data::string())) ;
frontList ::= (definitions::listOfTerms) | (abbreviations::listOfTerms) | (languageOverview::listOfTerms) ;
titlePage ::= (body::body number::integer()) | ((author::string())+) topic::string() (version::string()) | (edition::string()) status::status date::string() ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
lexicalSection ::= (lineContinuations::simpleSection) | (whitespace::simpleSection) | (tokens::simpleSection) | (preprocessor::simpleSection) | (literals::simpleSection) | (lexical::simpleSection) ;
--------------------slps::ldf-v16.0-xsd.bgf--------------------
simpleTextElement ::= (empty::ε) | (text::mixedType) | (figure::simpleFigure) | (table::simpleTable) | (list::simpleList) | (formula::(((math::anyMath) | (mfenced::anyMath) | (mtext::anyMath) | (msub::anyMath) | (msup::anyMath) | (mrow::anyMath) | (mi::anyMath) | (mo::anyMath) | (varepsilon::α))+)) | (sample::((α | string())* src::string())) | production ;
informative ::= (rationale::simpleSection) | (example::simpleSection) | (update::simpleSection) ;
simpleTable ::= (header::tableRow)* (row::tableRow)+ ;
document ::= titlePage::titlePage frontMatter::(topSection*) (lists::(frontList+))? (lexicalPart::(lexicalSection+))? ((core::structuredSection)+) | ((part::((core::structuredSection)+))+) (backMatter::(topSection*))? (annex::structuredSection)* ;
link ::= (text::string())? reference::string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
simpleFigure ::= caption::string() type::string() file::string() (id::string())? ;
structuredSection ::= title::string() (author::string())* structuredSectionElement+ (id::string())? ;
simpleSection ::= (title::string())? (author::string())* content::simpleText (id::string())? ;
status ::= (unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε) ;
listOfTerms ::= (title::string())? (author::string())* (term::(name::string() definition::simpleText))+ (id::string())? ;
simpleList ::= (item::mixedType)+ ;
topSection ::= (foreword::simpleSection) | (designGoals::simpleSection) | (scope::simpleSection) | (conformance::simpleSection) | (compliance::simpleSection) | (compatibility::simpleSection) | (notation::simpleSection) | (normativeReferences::simpleSection) | (documentStructure::simpleSection) | (whatsnew::simpleSection) | (placeholder::generated) ;
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
tableRow ::= (cell::simpleText)+ ;
normative ::= (synopsis::simpleSection) | (description::simpleSection) | (syntax::simpleSection) | (constraints::simpleSection) | (relationship::simpleSection) | (semantics::simpleSection) | (default::simpleSection) ;
structuredSectionElement ::= (placeholder::generated) | normative | informative | production | (references::simpleList) | (section::simpleSection) | (subtopic::structuredSection) | (value::(key::string() data::string())) ;
frontList ::= (definitions::listOfTerms) | (abbreviations::listOfTerms) | (languageOverview::listOfTerms) ;
titlePage ::= (body::body number::integer()) | ((author::string())+) topic::string() (version::string()) | (edition::string()) status::status date::string() ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
lexicalSection ::= (lineContinuations::simpleSection) | (whitespace::simpleSection) | (tokens::simpleSection) | (preprocessor::simpleSection) | (literals::simpleSection) | (lexical::simpleSection) ;
--------------------slps::ldf-v17.0-xsd.bgf--------------------
figureType ::= (PDF::ε) | (PostScript::ε) | (SVG::ε) | (PNG::ε) | (GIF::ε) | (JPEG::ε) ;
simpleTextElement ::= (empty::ε) | (text::mixedType) | (figure::simpleFigure) | (table::simpleTable) | (list::simpleList) | (formula::(((math::anyMath) | (mfenced::anyMath) | (mtext::anyMath) | (msub::anyMath) | (msup::anyMath) | (mrow::anyMath) | (mi::anyMath) | (mo::anyMath) | (varepsilon::α))+)) | (sample::((α | string())* src::string())) | production ;
informative ::= (rationale::simpleSection) | (example::simpleSection) | (update::simpleSection) ;
simpleTable ::= (header::tableRow)* (row::tableRow)+ ;
document ::= titlePage::titlePage frontMatter::(topSection*) (lists::(frontList+))? (lexicalPart::(lexicalSection+))? ((core::structuredSection)+) | ((part::((core::structuredSection)+))+) (backMatter::(topSection*))? (annex::structuredSection)* ;
link ::= (text::string())? reference::string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
simpleFigure ::= (shortcaption::string())? caption::string() (source::(type::figureType (localfile::string()) | (url::string())))+ (id::string())? ;
structuredSection ::= title::string() (author::string())* structuredSectionElement+ (id::string())? ;
simpleSection ::= (title::string())? (author::string())* content::simpleText (id::string())? ;
status ::= (unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε) ;
listOfTerms ::= (title::string())? (author::string())* (term::(name::string() definition::simpleText))+ (id::string())? ;
simpleList ::= (item::mixedType)+ ;
topSection ::= (foreword::simpleSection) | (designGoals::simpleSection) | (scope::simpleSection) | (conformance::simpleSection) | (compliance::simpleSection) | (compatibility::simpleSection) | (notation::simpleSection) | (normativeReferences::simpleSection) | (documentStructure::simpleSection) | (whatsnew::simpleSection) | (placeholder::generated) ;
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
tableRow ::= (cell::simpleText)+ ;
normative ::= (synopsis::simpleSection) | (description::simpleSection) | (syntax::simpleSection) | (constraints::simpleSection) | (relationship::simpleSection) | (semantics::simpleSection) | (default::simpleSection) ;
structuredSectionElement ::= (placeholder::generated) | normative | informative | production | (references::simpleList) | (section::simpleSection) | (subtopic::structuredSection) | (value::(key::string() data::string())) ;
frontList ::= (definitions::listOfTerms) | (abbreviations::listOfTerms) | (languageOverview::listOfTerms) ;
titlePage ::= (body::body number::integer()) | ((author::string())+) topic::string() (version::string()) | (edition::string()) status::status date::string() ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
lexicalSection ::= (lineContinuations::simpleSection) | (whitespace::simpleSection) | (tokens::simpleSection) | (preprocessor::simpleSection) | (literals::simpleSection) | (lexical::simpleSection) ;
--------------------slps::ldf-v18.0-xsd.bgf--------------------
figureType ::= (PDF::ε) | (PostScript::ε) | (SVG::ε) | (PNG::ε) | (GIF::ε) | (JPEG::ε) ;
simpleTextElement ::= (empty::ε) | (text::mixedType) | (figure::simpleFigure) | (table::simpleTable) | (list::simpleList) | (formula::(((math::anyMath) | (mfenced::anyMath) | (mtext::anyMath) | (msub::anyMath) | (msup::anyMath) | (mrow::anyMath) | (mi::anyMath) | (mo::anyMath) | (varepsilon::α))+)) | (sample::((α | string())* src::string())) | production ;
informative ::= (rationale::simpleSection) | (example::simpleSection) | (update::simpleSection) ;
simpleTable ::= (header::tableRow)* (row::tableRow)+ ;
document ::= titlePage::titlePage frontMatter::(topSection*) (lists::(frontList+))? (lexicalPart::(lexicalSection+))? ((core::structuredSection)+) | ((part::((core::structuredSection)+))+) (backMatter::(topSection*))? (annex::structuredSection)* ;
link ::= (text::string())? reference::string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
simpleFigure ::= (shortcaption::string())? caption::string() (source::(type::figureType (localfile::string()) | (url::string())))+ (id::string())? ;
structuredSection ::= title::string() (author::string())* structuredSectionElement+ (id::string())? ;
simpleSection ::= (title::string())? (author::string())* content::simpleText (id::string())? ;
status ::= (unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε) ;
listOfTerms ::= (title::string())? (author::string())* (term::(name::string() definition::simpleText))+ (id::string())? ;
simpleList ::= (item::mixedType)+ ;
topSection ::= (foreword::simpleSection) | (designGoals::simpleSection) | (scope::simpleSection) | (conformance::simpleSection) | (compliance::simpleSection) | (compatibility::simpleSection) | (notation::simpleSection) | (normativeReferences::simpleSection) | (documentStructure::simpleSection) | (whatsnew::simpleSection) | (placeholder::generated) ;
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
tableRow ::= (cell::simpleText)+ ;
normative ::= (synopsis::simpleSection) | (description::simpleSection) | (syntax::simpleSection) | (constraints::simpleSection) | (relationship::simpleSection) | (semantics::simpleSection) | (default::simpleSection) ;
structuredSectionElement ::= (placeholder::generated) | normative | informative | production | (references::simpleList) | (section::simpleSection) | (subtopic::structuredSection) | (value::(key::string() data::string())) ;
frontList ::= (definitions::listOfTerms) | (abbreviations::listOfTerms) | (languageOverview::listOfTerms) ;
titlePage ::= (body::body number::integer()) | ((author::string())+) topic::string() (version::string()) | (edition::string()) status::status date::string() ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
lexicalSection ::= (lineContinuations::simpleSection) | (whitespace::simpleSection) | (tokens::simpleSection) | (preprocessor::simpleSection) | (literals::simpleSection) | (lexical::simpleSection) ;
--------------------slps::ldf-v18.1-xsd.bgf--------------------
figureType ::= (PDF::ε) | (PostScript::ε) | (SVG::ε) | (PNG::ε) | (GIF::ε) | (JPEG::ε) ;
simpleTextElement ::= (empty::ε) | (text::mixedType) | (figure::simpleFigure) | (table::simpleTable) | (list::simpleList) | (formula::(((math::anyMath) | (mfenced::anyMath) | (mtext::anyMath) | (msub::anyMath) | (msup::anyMath) | (mrow::anyMath) | (mi::anyMath) | (mo::anyMath) | (varepsilon::α))+)) | (sample::((α | string())* src::string())) | production ;
informative ::= (rationale::simpleSection) | (example::simpleSection) | (update::simpleSection) ;
simpleTable ::= (header::tableRow)* (row::tableRow)+ ;
document ::= titlePage::titlePage frontMatter::(topSection*) (lists::(frontList+))? (lexicalPart::(lexicalSection+))? ((core::structuredSection)+) | ((part::((core::structuredSection)+))+) (backMatter::(topSection*))? (annex::structuredSection)* ;
link ::= (text::string())? (reference::string()) | (external::string()) ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
simpleFigure ::= (shortcaption::string())? caption::string() (source::(type::figureType (localfile::string()) | (url::string())))+ (id::string())? ;
structuredSection ::= title::string() (author::string())* structuredSectionElement+ (id::string())? ;
simpleSection ::= (title::string())? (author::string())* content::simpleText (id::string())? ;
status ::= (unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε) ;
listOfTerms ::= (title::string())? (author::string())* (term::(name::string() definition::simpleText))+ (id::string())? ;
simpleList ::= (item::mixedType)+ ;
topSection ::= (foreword::simpleSection) | (designGoals::simpleSection) | (scope::simpleSection) | (conformance::simpleSection) | (compliance::simpleSection) | (compatibility::simpleSection) | (notation::simpleSection) | (normativeReferences::simpleSection) | (documentStructure::simpleSection) | (whatsnew::simpleSection) | (placeholder::generated) ;
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
tableRow ::= (cell::simpleText)+ ;
normative ::= (synopsis::simpleSection) | (description::simpleSection) | (syntax::simpleSection) | (constraints::simpleSection) | (relationship::simpleSection) | (semantics::simpleSection) | (default::simpleSection) ;
structuredSectionElement ::= (placeholder::generated) | normative | informative | production | (references::simpleList) | (section::simpleSection) | (subtopic::structuredSection) | (value::(key::string() data::string())) ;
frontList ::= (definitions::listOfTerms) | (abbreviations::listOfTerms) | (languageOverview::listOfTerms) ;
titlePage ::= (body::body number::integer()) | ((author::string())+) topic::string() (version::string()) | (edition::string()) status::status date::string() ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
lexicalSection ::= (lineContinuations::simpleSection) | (whitespace::simpleSection) | (tokens::simpleSection) | (preprocessor::simpleSection) | (literals::simpleSection) | (lexical::simpleSection) ;
--------------------slps::ldf-v19.0-xsd.bgf--------------------
figure-metainfo ::= (short-caption::string())? caption::string() (id::string())? ;
lexical-section ::= lexical-section-metainfo::lexical-section-metainfo lexical-section-content::textual-content ;
link ::= (text::string())? (reference::string()) | (external::string()) ;
normative-role ::= (synopsis::ε) | (description::ε) | (syntax::ε) | (constraints::ε) | (relationship::ε) | (semantics::ε) | (default::ε) ;
previous ::= title::string() (version::string()) | (edition::string()) (uri::string())? ;
list-section ::= list-section-metainfo::list-section-metainfo list-section-content::((term::term)+) ;
placeholder ::= (index::ε) | (full-grammar::ε) | (list-of-tables::ε) | (list-of-authors::ε) | (list-of-contents::ε) | (list-of-references::ε) ;
part ::= part-metainfo::part-metainfo section+ ;
status ::= (unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε) ;
list-section-role ::= (abbreviations::ε) | (definitions::ε) | (language-overview::ε) | (normative-references::ε) ;
term ::= name::string() definition::textual-content ;
list-section-metainfo ::= list-section-role::list-section-role (title::string())? (author::string())* (id::string())? ;
structured-section ::= structured-section-metainfo::structured-section-metainfo structured-section-content::(structured-section-element+) ;
informative-role ::= (example::ε) | (rationale::ε) | (update::ε) ;
element-role ::= (normative::normative-role) | (informative::informative-role) | (specific-section::simple-section) ;
lexical-section-role ::= (lexical-issue::ε) | (line-continuations::ε) | (literals::ε) | (preprocessor::ε) | (tokens::ε) | (whitespace::ε) ;
section ::= (placeholder::placeholder) | (simple-section::simple-section) | (lexical-section::lexical-section) | (structured-section::structured-section) | (composite-section::composite-section) | (list-section::list-section) ;
document-metainfo ::= (body::body number::string()) | ((author::string())+) topic::string() status::status (version::string()) | (edition::string()) (previous::previous)* date::string() ;
figure-source ::= type::figure-type (local-file::string()) | (uri::string()) ;
figure ::= figure-metainfo::figure-metainfo (figure-source::figure-source)+ ;
lexical-section-metainfo ::= lexical-section-role::lexical-section-role (title::string())? (author::string())* (id::string())? ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (iec::ε) | (ietf::ε) | (oasis::ε) | (omg::ε) | (wsa::ε) | (w3c::ε) ;
list ::= (item::mixed-type)+ ;
text-element ::= (empty::ε) | (code::string()) | (text::mixed-type) | (figure::figure) | (table::table) | (list::list) | (formula::(((math::anyMath) | (mfenced::anyMath) | (mtext::anyMath) | (msub::anyMath) | (msup::anyMath) | (mrow::anyMath) | (mi::anyMath) | (mo::anyMath) | (varepsilon::α))+)) | (sample::((α | string())* source::string())) | production ;
table-row ::= (table-cell::textual-content)+ ;
document ::= document-metainfo::document-metainfo (part::part)+ ;
simple-section-role ::= (abstract::ε) | (conformance::ε) | (compatibility::ε) | (design-goals::ε) | (document-structure::ε) | (foreword::ε) | (normative-references::ε) | (notation::ε) | (scope::ε) | (what-is-new::ε) ;
structured-section-element ::= (subtopic::structured-section) | (references::list) | (placeholder::placeholder) | (value::(key::string() data::string())) | (element-role simple-section::simple-section) ;
structured-section-metainfo ::= title::string() (author::string())* (id::string())? ;
simple-section-metainfo ::= simple-section-role::simple-section-role (title::string())? (author::string())* (id::string())? ;
part-role ::= (front-matter::ε) | (core-part::ε) | (back-matter::ε) | (annex::ε) ;
table ::= (header::table-row)* (row::table-row)+ ;
part-metainfo ::= part-role::part-role (title::string())? (author::string())* (id::string())? ;
simple-section ::= simple-section-metainfo::simple-section-metainfo simple-section-content::textual-content ;
figure-type ::= (PDF::ε) | (PostScript::ε) | (SVG::ε) | (PNG::ε) | (GIF::ε) | (JPEG::ε) ;
--------------------slps::ldf-v2.0-xsd.bgf--------------------
sectionType ::= title::string() content::contentType ;
document ::= title::string() author::string() abstract::string() content::contentType ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? ;
contentType ::= ((text::mixedType) | (grammar::(α language::string() (version::string())?)) | (sample::sampleType) | (runnable::runnableType))* (section::sectionType)* ;
--------------------slps::ldf-v2.1-xsd.bgf--------------------
sectionType ::= title::string() content::contentType ;
document ::= title::string() author::string() abstract::string() content::contentType ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
contentType ::= ((text::mixedType) | (grammar::(α language::string() (version::string())?)) | (sample::sampleType) | (runnable::runnableType))* (section::sectionType)* ;
--------------------slps::ldf-v20.0-xsd.bgf--------------------
list ::= (item::mixed-type)+ ;
text-element ::= (empty::ε) | (code::string()) | (text::mixed-type) | figure | table | (list::list) | (formula::(((math::anyMath) | (mfenced::anyMath) | (mtext::anyMath) | (msub::anyMath) | (msup::anyMath) | (mrow::anyMath) | (mi::anyMath) | (mo::anyMath) | (varepsilon::α))+)) | (sample::((α | string())* source::string())) | production ;
lexical-section ::= role::lexical-section-role metainfo content::textual-content ;
table-row ::= (table-cell::textual-content)+ ;
document ::= title-page content::(part+) ;
link ::= (text::string())? (reference::string()) | (external::string()) ;
normative-role ::= (synopsis::ε) | (description::ε) | (syntax::ε) | (constraints::ε) | (relationship::ε) | (semantics::ε) | (default::ε) ;
simple-section-role ::= (abstract::ε) | (conformance::ε) | (compatibility::ε) | (design-goals::ε) | (document-structure::ε) | (foreword::ε) | (normative-references::ε) | (notation::ε) | (scope::ε) | (what-is-new::ε) ;
structured-section-element ::= (subtopic::structured-section) | (references::list) | placeholder | (value::(key::string() data::string())) | ((normative-role | informative-role)? simple-section) ;
previous ::= title::string() (version::string()) | (edition::string()) (uri::string())? ;
list-section ::= role::list-section-role metainfo content::(term+) ;
placeholder ::= (index::ε) | (full-grammar::ε) | (list-of-tables::ε) | (list-of-authors::ε) | (list-of-contents::ε) | (list-of-references::ε) ;
metainfo ::= (id::string())? (title::string())? (author::string())* ;
part ::= role::part-role metainfo content::(section+) ;
status ::= (unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε) ;
part-role ::= (front-matter::ε) | (core-part::ε) | (back-matter::ε) | (annex::ε) ;
table ::= (header::table-row)* (row::table-row)+ ;
list-section-role ::= (abbreviations::ε) | (definitions::ε) | (language-overview::ε) | (normative-references::ε) ;
term ::= name::string() definition::textual-content ;
simple-section ::= role::simple-section-role metainfo content::textual-content ;
structured-section ::= metainfo content::(structured-section-element+) ;
informative-role ::= (example::ε) | (rationale::ε) | (update::ε) ;
lexical-section-role ::= (lexical-issue::ε) | (line-continuations::ε) | (literals::ε) | (preprocessor::ε) | (tokens::ε) | (whitespace::ε) ;
figure-source ::= type::figure-type (local-file::string()) | (uri::string()) ;
figure ::= metainfo (source::figure-source)+ ;
title-page ::= (body number::string())? metainfo status (version::string()) | (edition::string()) previous* date::string() ;
figure-type ::= (PDF::ε) | (PostScript::ε) | (SVG::ε) | (PNG::ε) | (GIF::ε) | (JPEG::ε) ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (iec::ε) | (ietf::ε) | (oasis::ε) | (omg::ε) | (wsa::ε) | (w3c::ε) ;
--------------------slps::ldf-v20.1-xsd.bgf--------------------
list ::= (item::mixed-type)+ ;
text-element ::= (empty::ε) | (code::string()) | (text::mixed-type) | figure | table | (list::list) | (formula::(((math::anyMath) | (mfenced::anyMath) | (mtext::anyMath) | (msub::anyMath) | (msup::anyMath) | (mrow::anyMath) | (mi::anyMath) | (mo::anyMath) | (varepsilon::α))+)) | (sample::((α | string())* source::string())) | production ;
lexical-section ::= role::lexical-section-role metainfo content::textual-content ;
table-row ::= (table-cell::textual-content)+ ;
document ::= title-page content::(part+) ;
link ::= (text::string())? (reference::string()) | (external::string()) ;
normative-role ::= (synopsis::ε) | (description::ε) | (syntax::ε) | (constraints::ε) | (relationship::ε) | (semantics::ε) | (default::ε) ;
simple-section-role ::= (abstract::ε) | (conformance::ε) | (compatibility::ε) | (design-goals::ε) | (document-structure::ε) | (foreword::ε) | (normative-references::ε) | (notation::ε) | (scope::ε) | (what-is-new::ε) ;
structured-section-element ::= (subtopic::structured-section) | (references::list) | placeholder | (value::(key::string() data::string())) | ((normative-role | informative-role)? simple-section) ;
previous ::= title::string() ((version::string()) | (edition::string()))? (uri::string())? ;
list-section ::= role::list-section-role metainfo content::(term+) ;
placeholder ::= (index::ε) | (full-grammar::ε) | (list-of-tables::ε) | (list-of-authors::ε) | (list-of-contents::ε) | (list-of-references::ε) ;
metainfo ::= (id::string())? (title::string())? (author::string())* ;
part ::= role::part-role metainfo content::(section+) ;
status ::= (unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε) ;
part-role ::= (front-matter::ε) | (core-part::ε) | (back-matter::ε) | (annex::ε) ;
table ::= (header::table-row)* (row::table-row)+ ;
list-section-role ::= (abbreviations::ε) | (definitions::ε) | (language-overview::ε) | (normative-references::ε) ;
term ::= name::string() definition::textual-content ;
simple-section ::= role::simple-section-role metainfo content::textual-content ;
structured-section ::= metainfo content::(structured-section-element+) ;
informative-role ::= (example::ε) | (rationale::ε) | (update::ε) ;
lexical-section-role ::= (lexical-issue::ε) | (line-continuations::ε) | (literals::ε) | (preprocessor::ε) | (tokens::ε) | (whitespace::ε) ;
figure-source ::= type::figure-type (local-file::string()) | (uri::string()) ;
figure ::= metainfo (source::figure-source)+ ;
title-page ::= (body number::string())? metainfo status (version::string()) | (edition::string()) previous* date::string() ;
figure-type ::= (PDF::ε) | (PostScript::ε) | (SVG::ε) | (PNG::ε) | (GIF::ε) | (JPEG::ε) ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (iec::ε) | (ietf::ε) | (oasis::ε) | (omg::ε) | (wsa::ε) | (w3c::ε) ;
--------------------slps::ldf-v21.0-xsd.bgf--------------------
list ::= (item::mixed-type)+ ;
text-element ::= (empty::ε) | code | (text::mixed-type) | figure | table | (list::list) | (formula::(((math::anyMath) | (mfenced::anyMath) | (mtext::anyMath) | (msub::anyMath) | (msup::anyMath) | (mrow::anyMath) | (mi::anyMath) | (mo::anyMath) | (varepsilon::α))+)) | (sample::((α | string())* source::string())) | production ;
lexical-section ::= role::lexical-section-role metainfo content::textual-content ;
table-row ::= (table-cell::textual-content)+ ;
document ::= title-page content::(part+) ;
link ::= (text::string())? (reference::string()) | (external::string()) ;
normative-role ::= (synopsis::ε) | (description::ε) | (syntax::ε) | (constraints::ε) | (relationship::ε) | (semantics::ε) | (default::ε) ;
simple-section-role ::= (abstract::ε) | (conformance::ε) | (compatibility::ε) | (design-goals::ε) | (document-structure::ε) | (foreword::ε) | (normative-references::ε) | (notation::ε) | (scope::ε) | (what-is-new::ε) ;
structured-section-element ::= (subtopic::structured-section) | (references::list) | placeholder | (value::(key::string() data::string())) | ((normative-role | informative-role)? simple-section) ;
previous ::= title::string() ((version::string()) | (edition::string()))? (uri::string())? ;
list-section ::= role::list-section-role metainfo content::(term+) ;
anchor ::= id::string() ;
placeholder ::= (index::ε) | (full-grammar::ε) | (list-of-tables::ε) | (list-of-authors::ε) | (list-of-contents::ε) | (list-of-references::ε) ;
metainfo ::= (id::string())? (title::string())? (author::string())* ;
part ::= role::part-role metainfo content::(section+) ;
status ::= (unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε) ;
part-role ::= (front-matter::ε) | (core-part::ε) | (back-matter::ε) | (annex::ε) ;
table ::= (header::table-row)* (row::table-row)+ ;
list-section-role ::= (abbreviations::ε) | (definitions::ε) | (language-overview::ε) | (normative-references::ε) ;
term ::= name::string() definition::textual-content ;
simple-section ::= role::simple-section-role metainfo content::textual-content ;
structured-section ::= metainfo content::(structured-section-element+) ;
informative-role ::= (example::ε) | (rationale::ε) | (update::ε) ;
lexical-section-role ::= (lexical-issue::ε) | (line-continuations::ε) | (literals::ε) | (preprocessor::ε) | (tokens::ε) | (whitespace::ε) ;
figure-source ::= type::figure-type (local-file::string()) | (uri::string()) ;
figure ::= metainfo (source::figure-source)+ ;
title-page ::= (body number::string())? metainfo status (version::string()) | (edition::string()) previous* date::string() ;
figure-type ::= (PDF::ε) | (PostScript::ε) | (SVG::ε) | (PNG::ε) | (GIF::ε) | (JPEG::ε) ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (iec::ε) | (ietf::ε) | (oasis::ε) | (omg::ε) | (wsa::ε) | (w3c::ε) ;
--------------------slps::ldf-v21.1-xsd.bgf--------------------
list ::= (item::mixed-type)+ ;
text-element ::= (empty::ε) | code | (text::mixed-type) | figure | table | (list::list) | (formula::(((math::anyMath) | (mfenced::anyMath) | (mtext::anyMath) | (msub::anyMath) | (msup::anyMath) | (mrow::anyMath) | (mi::anyMath) | (mo::anyMath) | (varepsilon::α))+)) | (sample::((α | string())* source::string())) ;
lexical-section ::= role::lexical-section-role metainfo content::textual-content ;
table-row ::= (table-cell::textual-content)+ ;
document ::= title-page content::(part+) ;
link ::= (text::string())? (reference::string()) | (external::string()) ;
normative-role ::= (synopsis::ε) | (description::ε) | (syntax::ε) | (constraints::ε) | (relationship::ε) | (semantics::ε) | (default::ε) ;
simple-section-role ::= (abstract::ε) | (conformance::ε) | (compatibility::ε) | (design-goals::ε) | (document-structure::ε) | (foreword::ε) | (normative-references::ε) | (notation::ε) | (scope::ε) | (what-is-new::ε) ;
structured-section-element ::= (subtopic::structured-section) | (references::list) | placeholder | (value::(key::string() data::string())) | ((normative-role | informative-role)? simple-section) ;
previous ::= title::string() ((version::string()) | (edition::string()))? (uri::string())? ;
list-section ::= role::list-section-role metainfo content::(term+) ;
anchor ::= id::string() ;
placeholder ::= (index::ε) | (full-grammar::ε) | (list-of-tables::ε) | (list-of-authors::ε) | (list-of-contents::ε) | (list-of-references::ε) ;
metainfo ::= (id::string())? (title::string())? (author::string())* ;
part ::= role::part-role metainfo content::(section+) ;
status ::= (unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε) ;
part-role ::= (front-matter::ε) | (core-part::ε) | (back-matter::ε) | (annex::ε) ;
table ::= (header::table-row)* (row::table-row)+ ;
list-section-role ::= (abbreviations::ε) | (definitions::ε) | (language-overview::ε) | (normative-references::ε) ;
term ::= name::string() definition::textual-content ;
simple-section ::= role::simple-section-role metainfo content::textual-content ;
structured-section ::= metainfo content::(structured-section-element+) ;
informative-role ::= (example::ε) | (rationale::ε) | (update::ε) ;
lexical-section-role ::= (lexical-issue::ε) | (line-continuations::ε) | (literals::ε) | (preprocessor::ε) | (tokens::ε) | (whitespace::ε) ;
figure-source ::= type::figure-type (local-file::string()) | (uri::string()) ;
figure ::= metainfo (source::figure-source)+ ;
title-page ::= (body number::string())? metainfo status (version::string()) | (edition::string()) previous* date::string() ;
figure-type ::= (PDF::ε) | (PostScript::ε) | (SVG::ε) | (PNG::ε) | (GIF::ε) | (JPEG::ε) ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (iec::ε) | (ietf::ε) | (oasis::ε) | (omg::ε) | (wsa::ε) | (w3c::ε) ;
--------------------slps::ldf-v22.0-xsd.bgf--------------------
text-element ::= (empty::ε) | code | (text::mixed-type) | figure | table | (list::list-type) | (formula::(((math::anyMath) | (mfenced::anyMath) | (mtext::anyMath) | (msub::anyMath) | (msup::anyMath) | (mrow::anyMath) | (mi::anyMath) | (mo::anyMath) | (varepsilon::α))+)) | (sample::((α | string())* source::string())) ;
lexical-section ::= role::lexical-section-role metainfo content::textual-content ;
table-row ::= (table-cell::textual-content)+ ;
document ::= metadata::((body::((ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (iec::ε) | (ietf::ε) | (oasis::ε) | (omg::ε) | (wsa::ε) | (w3c::ε)))? (number::string())? (author::person)* topic::string() status::((unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε)) (version::string()) | (edition::string()) (previous::title-ve-uri)* date::string()) (part::part-type)+ ;
link ::= (text::string())? (nonterminal::string()) | (reference::string()) | (external::string()) ;
normative-role ::= (synopsis::ε) | (description::ε) | (syntax::ε) | (constraints::ε) | (relationship::ε) | (semantics::ε) | (default::ε) ;
structured-section-element ::= (subtopic::structured-section) | (references::list-type) | placeholder | (value::(key::string() data::string())) | ((normative-role | informative-role)? simple-section) ;
list-section ::= role::list-section-role metainfo content::(term+) ;
anchor ::= id::string() ;
person ::= name::string() (affiliation::string())? (email::string())? ;
part-type ::= metadata::((id::string())? role::((front-matter::ε) | (core-part::ε) | (back-matter::ε) | (annex::ε)) (title::string())? (author::person)*) (section::section-type)+ ;
metainfo ::= (id::string())? (title::string())? (author::string())* ;
placeholder ::= (index::ε) | (full-grammar::ε) | (list-of-tables::ε) | (list-of-authors::ε) | (list-of-contents::ε) | (list-of-references::ε) ;
table ::= (header::table-row)* (row::table-row)+ ;
list-section-role ::= (abbreviations::ε) | (definitions::ε) | (language-overview::ε) | (normative-references::ε) ;
term ::= name::string() definition::textual-content ;
simple-section ::= metainfo content::textual-content ;
list-type ::= (item::mixed-type)+ ;
structured-section ::= metainfo content::(structured-section-element+) ;
informative-role ::= (example::ε) | (rationale::ε) | (update::ε) ;
lexical-section-role ::= (lexical-issue::ε) | (line-continuations::ε) | (literals::ε) | (preprocessor::ε) | (tokens::ε) | (whitespace::ε) ;
content-content ::= (para::mixed-type) | (list::list-type) | production ;
figure-source ::= type::figure-type (local-file::string()) | (uri::string()) ;
figure ::= metainfo (source::figure-source)+ ;
figure-type ::= (PDF::ε) | (PostScript::ε) | (SVG::ε) | (PNG::ε) | (GIF::ε) | (JPEG::ε) ;
title-ve-uri ::= title::string() ((version::string()) | (edition::string()))? (uri::string())? ;
subsection-type ::= metadata::((id::string())? role::((synopsis::ε) | (description::ε) | (syntax::ε) | (constraints::ε) | (relationship::ε) | (semantics::ε) | (default::ε) | (rationale::ε) | (example::ε) | (update::ε) | (subtopic::ε) | (section::ε)) (type::((normative::ε) | (informative::ε)))? (title::string())? (author::person)*) (content::(content-content+)) | (placeholder::α) | ((subsection::subsection-type)+) ;
section-type ::= metadata::((id::string())? role::((abstract::ε) | (conformance::ε) | (compatibility::ε) | (design-goals::ε) | (document-structure::ε) | (foreword::ε) | (references::ε) | (notation::ε) | (scope::ε) | (what-is-new::ε) | (index::ε) | (full-grammar::ε) | (list-of-tables::ε) | (list-of-authors::ε) | (list-of-contents::ε) | (list-of-references::ε) | (top-section::ε) | (lexical-section::ε) | (description::ε) | (syntax::ε) | (example::ε) | (subsection::ε)) (type::((normative::ε) | (informative::ε)))? (title::string())? (author::person)*) (content::(content-content+)) | (placeholder::α) | ((subsection::subsection-type)+) ;
--------------------slps::ldf-v23.0-xsd.bgf--------------------
text-element ::= (empty::ε) | code | (text::mixed-type) | figure | table | (list::list-type) | (formula::(((math::anyMath) | (mfenced::anyMath) | (mtext::anyMath) | (msub::anyMath) | (msup::anyMath) | (mrow::anyMath) | (mi::anyMath) | (mo::anyMath) | (varepsilon::α))+)) | (sample::((α | string())* source::string())) ;
lexical-section ::= role::lexical-section-role metainfo content::textual-content ;
table-row ::= (table-cell::textual-content)+ ;
document ::= metadata::((body::((ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (iec::ε) | (ietf::ε) | (oasis::ε) | (omg::ε) | (wsa::ε) | (w3c::ε)))? (number::string())? (author::person)* topic::string() status::((unknown::ε) | (draft::ε) | (candidate::ε) | (proposed::ε) | (approved::ε) | (revised::ε) | (obsolete::ε) | (withdrawn::ε) | (collection::ε) | (trial::ε) | (errata::ε) | (report::ε)) (version::string()) | (edition::string()) (previous::named-link)* date::string()) (part::part-type)+ ;
link ::= (text::string())? (nonterminal::string()) | (reference::string()) | (external::string()) ;
normative-role ::= (synopsis::ε) | (description::ε) | (syntax::ε) | (constraints::ε) | (relationship::ε) | (semantics::ε) | (default::ε) ;
structured-section-element ::= (subtopic::structured-section) | (references::list-type) | placeholder | (value::(key::string() data::string())) | ((normative-role | informative-role)? simple-section) ;
list-section ::= role::list-section-role metainfo content::(term+) ;
anchor ::= id::string() ;
person ::= name::string() (affiliation::string())? (email::string())? ;
part-type ::= metadata::((id::string())? role::((front-matter::ε) | (core-part::ε) | (back-matter::ε) | (annex::ε)) (title::string())? (author::person)*) (section::section-type)+ ;
placeholder ::= (index::ε) | (full-grammar::ε) | (list-of-tables::ε) | (list-of-authors::ε) | (list-of-contents::ε) | (list-of-references::ε) ;
metainfo ::= (id::string())? (title::string())? (author::string())* ;
table ::= (header::table-row)* (row::table-row)+ ;
named-link ::= title::string() ((version::string()) | (edition::string()))? (uri::string())? ;
list-section-role ::= (abbreviations::ε) | (definitions::ε) | (language-overview::ε) | (normative-references::ε) ;
term ::= name::string() definition::textual-content ;
simple-section ::= metainfo content::textual-content ;
list-type ::= (item::mixed-type)+ ;
structured-section ::= metainfo content::(structured-section-element+) ;
informative-role ::= (example::ε) | (rationale::ε) | (update::ε) ;
lexical-section-role ::= (lexical-issue::ε) | (line-continuations::ε) | (literals::ε) | (preprocessor::ε) | (tokens::ε) | (whitespace::ε) ;
content-content ::= (para::mixed-type) | (list::list-type) | production ;
figure-source ::= type::figure-type (local-file::string()) | (uri::string()) ;
figure ::= metainfo (source::figure-source)+ ;
figure-type ::= (PDF::ε) | (PostScript::ε) | (SVG::ε) | (PNG::ε) | (GIF::ε) | (JPEG::ε) ;
subsection-type ::= metadata::((id::string())? role::((synopsis::ε) | (description::ε) | (syntax::ε) | (constraints::ε) | (relationship::ε) | (semantics::ε) | (default::ε) | (rationale::ε) | (example::ε) | (update::ε) | (subtopic::ε) | (section::ε)) (type::((normative::ε) | (informative::ε)))? (title::string())? (author::person)*) (content::(content-content+)) | (placeholder::α) | ((subsection::subsection-type)+) ;
section-type ::= metadata::((id::string())? role::((abstract::ε) | (conformance::ε) | (compatibility::ε) | (design-goals::ε) | (document-structure::ε) | (foreword::ε) | (references::ε) | (notation::ε) | (scope::ε) | (what-is-new::ε) | (index::ε) | (full-grammar::ε) | (list-of-tables::ε) | (list-of-authors::ε) | (list-of-contents::ε) | (list-of-references::ε) | (top-section::ε) | (lexical-section::ε)) (type::((normative::ε) | (informative::ε)))? (title::string())? (author::person)*) (content::(content-content+)) | (placeholder::α) | ((subsection::subsection-type)+) ;
--------------------slps::ldf-v3.0-xsd.bgf--------------------
SimpleText ::= ((p::string()) | (list::SimpleList))+ ;
informative ::= (note::SimpleSection) | (example::SimpleSection) | (informative::SimpleSection) ;
document ::= title::title (placeholder::generated)* frontMatter::frontMatter (languageOverview::ListOfTerms)? (lexicalSection::LexicalSection)+ top-section+ (annex::TopSection)* ;
title ::= (body::body number::integer()) | ((author::string())+) topic::string() (version::string()) | (edition::string()) status::status date::string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
SimpleSection ::= (id::string())? (title::string())? ((author::string())+)? content::SimpleText ;
status ::= (draft::ε) | (committee draft::ε) | (recommendation::ε) | (international standard::ε) ;
ListOfTerms ::= (term::(name::string() definition::SimpleText))+ ;
TopSection ::= id::string() title::string() ((author::string())+)? ((placeholder::generated) | normative | informative | production | (relationship::ListOfInternalLinks) | (subtopic::TopSection))+ ;
SimpleList ::= (item::string())+ ;
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
top-section ::= (scope::SimpleSection) | (conformance::SimpleSection) | (compliance::SimpleSection) | (compatibility::SimpleSection) | (notation::SimpleSection) | (clause::SimpleSection) | (field::SimpleSection) | (core::SimpleSection) ;
frontMatter ::= foreword::SimpleText designGoals::SimpleList top-section+ normativeReferences::SimpleList (definitions::ListOfTerms)? (abbreviations::ListOfTerms)? documentStructure::TopSection whatsnew::SimpleList ;
normative ::= (purpose::SimpleSection) | (description::SimpleSection) | (location::SimpleSection) | (considerations::SimpleSection) | (defaults::SimpleSection) | (normative::SimpleSection) ;
ListOfInternalLinks ::= (link::(text::string() reference::string()))+ ;
lexical ::= (lineContinuations::ε) | (whitespace::ε) | (tokens::ε) | (preprocessor::ε) | (literals::ε) | (other::ε) ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
LexicalSection ::= id::string() type::lexical title::string() ((author::string())+)? ((placeholder::generated) | normative | informative | production | (relationship::ListOfInternalLinks) | (subtopic::TopSection))+ ;
--------------------slps::ldf-v4.0-xsd.bgf--------------------
SimpleText ::= ((p::string()) | (list::SimpleList))+ ;
informative ::= (note::SimpleSection) | (example::SimpleSection) | (informative::SimpleSection) ;
document ::= title::title (placeholder::generated)* frontMatter::frontMatter (languageOverview::ListOfTerms)? lexical+ (core::StructuredSection)+ (annex::StructuredSection)* ;
title ::= (body::body number::integer()) | ((author::string())+) topic::string() (version::string()) | (edition::string()) status::status date::string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
StructuredSection ::= id::string() title::string() ((author::string())+)? ((placeholder::generated) | normative | informative | lexical | production | (relationship::ListOfInternalLinks) | (subtopic::StructuredSection))+ ;
SimpleSection ::= (id::string())? (title::string())? ((author::string())+)? content::SimpleText ;
status ::= (draft::ε) | (committee draft::ε) | (recommendation::ε) | (international standard::ε) ;
ListOfTerms ::= (term::(name::string() definition::SimpleText))+ ;
SimpleList ::= (item::string())+ ;
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
top-section ::= (scope::SimpleSection) | (conformance::SimpleSection) | (compliance::SimpleSection) | (compatibility::SimpleSection) | (notation::SimpleSection) | (clause::SimpleSection) | (field::SimpleSection) ;
frontMatter ::= foreword::SimpleText designGoals::SimpleList top-section+ normativeReferences::SimpleList (definitions::ListOfTerms)? (abbreviations::ListOfTerms)? documentStructure::SimpleSection whatsnew::SimpleList ;
normative ::= (purpose::SimpleSection) | (description::SimpleSection) | (location::SimpleSection) | (considerations::SimpleSection) | (defaults::SimpleSection) | (normative::SimpleSection) ;
ListOfInternalLinks ::= (link::(text::string() reference::string()))+ ;
lexical ::= (lineContinuations::SimpleSection) | (whitespace::SimpleSection) | (tokens::SimpleSection) | (preprocessor::SimpleSection) | (literals::SimpleSection) | (lexical::SimpleSection) ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
--------------------slps::ldf-v5.0-xsd.bgf--------------------
SimpleText ::= ((p::string()) | (list::SimpleList))+ ;
informative ::= (note::SimpleSection) | (example::SimpleSection) | (informative::SimpleSection) ;
document ::= title::title (placeholder::generated)* frontMatter::frontMatter lists::frontLists lexicalPart::lexical (core::StructuredSection)+ (annex::StructuredSection)* ;
title ::= (body::body number::integer()) | ((author::string())+) topic::string() (version::string()) | (edition::string()) status::status date::string() ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
StructuredSection ::= id::string() title::string() ((author::string())+)? ((placeholder::generated) | normative | informative | lexicals | production | (relationship::ListOfInternalLinks) | (subtopic::StructuredSection))+ ;
SimpleSection ::= (id::string())? (title::string())? ((author::string())+)? content::SimpleText ;
status ::= (draft::ε) | (committee draft::ε) | (recommendation::ε) | (international standard::ε) ;
ListOfTerms ::= (id::string())? (title::string())? ((author::string())+)? (term::(name::string() definition::SimpleText))+ ;
SimpleList ::= (item::string())+ ;
lexicals ::= (lineContinuations::SimpleSection) | (whitespace::SimpleSection) | (tokens::SimpleSection) | (preprocessor::SimpleSection) | (literals::SimpleSection) | (lexical::SimpleSection) ;
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
frontLists ::= (((definitions::ListOfTerms) | (abbreviations::ListOfTerms) | (languageOverview::ListOfTerms))+)? ;
frontMatter ::= ((foreword::SimpleSection) | (designGoals::SimpleSection) | (scope::SimpleSection) | (conformance::SimpleSection) | (compliance::SimpleSection) | (compatibility::SimpleSection) | (notation::SimpleSection) | (normativeReferences::SimpleSection) | (documentStructure::SimpleSection) | (whatsnew::SimpleSection) | (clause::SimpleSection) | (field::SimpleSection))+ ;
normative ::= (purpose::SimpleSection) | (description::SimpleSection) | (location::SimpleSection) | (considerations::SimpleSection) | (defaults::SimpleSection) | (normative::SimpleSection) ;
ListOfInternalLinks ::= (link::(text::string() reference::string()))+ ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
--------------------slps::ldf-v6.0-xsd.bgf--------------------
SimpleText ::= ((p::string()) | (list::SimpleList))+ ;
informative ::= (note::SimpleSection) | (example::SimpleSection) | (informative::SimpleSection) ;
document ::= title::titlePage (placeholder::generated)* frontMatter::frontMatter lists::frontLists lexicalPart::lexical (core::StructuredSection)+ (annex::StructuredSection)* ;
lexicalGroup ::= (lineContinuations::SimpleSection) | (whitespace::SimpleSection) | (tokens::SimpleSection) | (preprocessor::SimpleSection) | (literals::SimpleSection) | (lexical::SimpleSection) ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
StructuredSection ::= (id::string())? title::string() ((author::string())+)? ((placeholder::generated) | normative | informative | production | (relationship::ListOfInternalLinks) | (subtopic::StructuredSection))+ ;
SimpleSection ::= (id::string())? (title::string())? ((author::string())+)? content::SimpleText ;
status ::= (draft::ε) | (committee draft::ε) | (recommendation::ε) | (international standard::ε) ;
ListOfTerms ::= (id::string())? (title::string())? ((author::string())+)? (term::(name::string() definition::SimpleText))+ ;
SimpleList ::= (item::string())+ ;
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
frontLists ::= (((definitions::ListOfTerms) | (abbreviations::ListOfTerms) | (languageOverview::ListOfTerms))+)? ;
frontMatter ::= ((foreword::SimpleSection) | (designGoals::SimpleSection) | (scope::SimpleSection) | (conformance::SimpleSection) | (compliance::SimpleSection) | (compatibility::SimpleSection) | (notation::SimpleSection) | (normativeReferences::SimpleSection) | (documentStructure::SimpleSection) | (whatsnew::SimpleSection) | (clause::SimpleSection) | (field::SimpleSection))+ ;
normative ::= (purpose::SimpleSection) | (description::SimpleSection) | (location::SimpleSection) | (considerations::SimpleSection) | (defaults::SimpleSection) | (normative::SimpleSection) ;
titlePage ::= (body::body number::integer()) | ((author::string())+) topic::string() (version::string()) | (edition::string()) status::status date::string() ;
ListOfInternalLinks ::= (link::(text::string() (linktext::string())? reference::string()))+ ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
--------------------slps::ldf-v7.0-xsd.bgf--------------------
informative ::= (note::SimpleSection) | (example::SimpleSection) | (informative::SimpleSection) ;
document ::= titlePage::titlePage (placeholder::generated)* frontMatter::frontMatter (lists::frontLists)? (lexicalPart::lexical)? (core::StructuredSection)+ (annex::StructuredSection)* ;
lexicalGroup ::= (lineContinuations::SimpleSection) | (whitespace::SimpleSection) | (tokens::SimpleSection) | (preprocessor::SimpleSection) | (literals::SimpleSection) | (lexical::SimpleSection) ;
insideSimpleText ::= (p::string()) | (list::SimpleList) | (formula::string()) ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
StructuredSection ::= (id::string())? title::string() ((author::string())+)? ((placeholder::generated) | normative | informative | production | (relationship::ListOfInternalLinks) | (subtopic::StructuredSection))+ ;
SimpleSection ::= (id::string())? (title::string())? ((author::string())+)? content::SimpleText ;
status ::= (unknown::ε) | (draft::ε) | (committee draft::ε) | (recommendation::ε) | (international standard::ε) ;
ListOfTerms ::= (id::string())? (title::string())? ((author::string())+)? (term::(name::string() definition::SimpleText))+ ;
SimpleList ::= (item::string())+ ;
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
frontLists ::= (((definitions::ListOfTerms) | (abbreviations::ListOfTerms) | (languageOverview::ListOfTerms))+)? ;
frontMatter ::= ((foreword::SimpleSection) | (designGoals::SimpleSection) | (scope::SimpleSection) | (conformance::SimpleSection) | (compliance::SimpleSection) | (compatibility::SimpleSection) | (notation::SimpleSection) | (normativeReferences::SimpleSection) | (documentStructure::SimpleSection) | (whatsnew::SimpleSection) | (clause::SimpleSection) | (field::SimpleSection))+ ;
normative ::= (purpose::SimpleSection) | (description::SimpleSection) | (location::SimpleSection) | (considerations::SimpleSection) | (defaults::SimpleSection) | (normative::SimpleSection) ;
titlePage ::= (body::body number::integer()) | ((author::string())+) topic::string() (version::string()) | (edition::string()) status::status date::string() ;
ListOfInternalLinks ::= (link::(text::string() (linktext::string())? reference::string()))+ ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
--------------------slps::slps-btf.bgf--------------------
tree ::= (epsilon::ε) | (any::α) | (terminal::terminal) | (nonterminal::(production tree)) | (selectable::(selector::selector tree)) | (value::((int::integer()) | (string::string()))) | (sequence::(tree*)) | (choice::(expression tree)) | (optional::(tree?)) | (plus::(tree+)) | (star::(tree*)) ;
production ::= (label::label)? nonterminal::nonterminal expression ;
expression ::= (epsilon::ε) | (empty::ε) | (value::value) | (any::ε) | (terminal::terminal) | (nonterminal::nonterminal) | (selectable::(selector::selector expression)) | (marked::expression) | (sequence::(expression+)) | (choice::(expression+)) | (allof::(expression+)) | (not::expression) | (optional::expression) | (plus::expression) | (star::expression) | (seplistplus::(expression expression)) | (sepliststar::(expression expression)) ;
grammar ::= (root::nonterminal)* production* ;
value ::= (int::ε) | (string::ε) ;
--------------------slps::ldf-v7.1-xsd.bgf--------------------
informative ::= (note::SimpleSection) | (example::SimpleSection) | (informative::SimpleSection) ;
document ::= titlePage::titlePage (placeholder::generated)* frontMatter::(front-simple-sections+) (lists::frontLists)? (lexicalPart::lexical)? (core::StructuredSection)+ (annex::StructuredSection)* ;
lexicalGroup ::= (lineContinuations::SimpleSection) | (whitespace::SimpleSection) | (tokens::SimpleSection) | (preprocessor::SimpleSection) | (literals::SimpleSection) | (lexical::SimpleSection) ;
insideSimpleText ::= (p::string()) | (list::SimpleList) | (formula::string()) | production ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
StructuredSection ::= (id::string())? title::string() ((author::string())+)? ((placeholder::generated) | normative | informative | production | (relationship::ListOfInternalLinks) | (subtopic::StructuredSection))+ ;
SimpleSection ::= (id::string())? (title::string())? ((author::string())+)? content::SimpleText ;
status ::= (unknown::ε) | (draft::ε) | (committee draft::ε) | (recommendation::ε) | (international standard::ε) ;
ListOfTerms ::= (id::string())? (title::string())? ((author::string())+)? (term::(name::string() definition::SimpleText))+ ;
SimpleList ::= (item::string())+ ;
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
frontLists ::= (((definitions::ListOfTerms) | (abbreviations::ListOfTerms) | (languageOverview::ListOfTerms))+)? ;
normative ::= (purpose::SimpleSection) | (description::SimpleSection) | (location::SimpleSection) | (considerations::SimpleSection) | (defaults::SimpleSection) | (normative::SimpleSection) ;
titlePage ::= (body::body number::integer()) | ((author::string())+) topic::string() (version::string()) | (edition::string()) status::status date::string() ;
ListOfInternalLinks ::= (link::(text::string() (linktext::string())? reference::string()))+ ;
front-simple-sections ::= (foreword::SimpleSection) | (designGoals::SimpleSection) | (scope::SimpleSection) | (conformance::SimpleSection) | (compliance::SimpleSection) | (compatibility::SimpleSection) | (notation::SimpleSection) | (normativeReferences::SimpleSection) | (documentStructure::SimpleSection) | (whatsnew::SimpleSection) | (clause::SimpleSection) | (field::SimpleSection) ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
--------------------slps::ldf-v8.0-xsd.bgf--------------------
informative ::= (note::SimpleSection) | (example::SimpleSection) | (informative::SimpleSection) ;
document ::= titlePage::titlePage (placeholder::generated)* frontMatter::(front-simple-section+) (lists::(front-list+))? (lexicalPart::(lexical+))? (core::StructuredSection)+ (annex::StructuredSection)* ;
insideSimpleText ::= (p::string()) | (list::SimpleList) | (formula::string()) | production ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
StructuredSection ::= (id::string())? title::string() ((author::string())+)? ((placeholder::generated) | normative | informative | production | (relationship::ListOfInternalLinks) | (subtopic::StructuredSection))+ ;
SimpleSection ::= (id::string())? (title::string())? ((author::string())+)? content::SimpleText ;
status ::= (unknown::ε) | (draft::ε) | (committee draft::ε) | (recommendation::ε) | (international standard::ε) ;
ListOfTerms ::= (id::string())? (title::string())? ((author::string())+)? (term::(name::string() definition::SimpleText))+ ;
SimpleList ::= (item::string())+ ;
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
front-simple-section ::= (foreword::SimpleSection) | (designGoals::SimpleSection) | (scope::SimpleSection) | (conformance::SimpleSection) | (compliance::SimpleSection) | (compatibility::SimpleSection) | (notation::SimpleSection) | (normativeReferences::SimpleSection) | (documentStructure::SimpleSection) | (whatsnew::SimpleSection) | (clause::SimpleSection) | (field::SimpleSection) ;
normative ::= (purpose::SimpleSection) | (description::SimpleSection) | (location::SimpleSection) | (considerations::SimpleSection) | (defaults::SimpleSection) | (normative::SimpleSection) ;
titlePage ::= (body::body number::integer()) | ((author::string())+) topic::string() (version::string()) | (edition::string()) status::status date::string() ;
ListOfInternalLinks ::= (link::(text::string() (linktext::string())? reference::string()))+ ;
lexical ::= (lineContinuations::SimpleSection) | (whitespace::SimpleSection) | (tokens::SimpleSection) | (preprocessor::SimpleSection) | (literals::SimpleSection) | (lexical::SimpleSection) ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
front-list ::= (definitions::ListOfTerms) | (abbreviations::ListOfTerms) | (languageOverview::ListOfTerms) ;
--------------------slps::ldf-v8.1-xsd.bgf--------------------
informative ::= (note::SimpleSection) | (example::SimpleSection) | (informative::SimpleSection) ;
document ::= titlePage::titlePage (placeholder::generated)* frontMatter::(front-simple-section+) (lists::(front-list+))? (lexicalPart::(lexical+))? (core::StructuredSection)+ (annex::StructuredSection)* ;
insideSimpleText ::= (p::string()) | (list::SimpleList) | (formula::string()) | (sample::string()) | production ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
StructuredSection ::= (id::string())? title::string() ((author::string())+)? ((placeholder::generated) | normative | informative | production | (relationship::ListOfInternalLinks) | (subtopic::StructuredSection))+ ;
SimpleSection ::= (id::string())? (title::string())? ((author::string())+)? content::SimpleText ;
status ::= (unknown::ε) | (draft::ε) | (committee draft::ε) | (recommendation::ε) | (international standard::ε) ;
ListOfTerms ::= (id::string())? (title::string())? ((author::string())+)? (term::(name::string() definition::SimpleText))+ ;
SimpleList ::= (item::string())+ ;
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
front-simple-section ::= (foreword::SimpleSection) | (designGoals::SimpleSection) | (scope::SimpleSection) | (conformance::SimpleSection) | (compliance::SimpleSection) | (compatibility::SimpleSection) | (notation::SimpleSection) | (normativeReferences::SimpleSection) | (documentStructure::SimpleSection) | (whatsnew::SimpleSection) | (clause::SimpleSection) | (field::SimpleSection) ;
normative ::= (purpose::SimpleSection) | (description::SimpleSection) | (location::SimpleSection) | (considerations::SimpleSection) | (defaults::SimpleSection) | (normative::SimpleSection) ;
titlePage ::= (body::body number::integer()) | ((author::string())+) topic::string() (version::string()) | (edition::string()) status::status date::string() ;
ListOfInternalLinks ::= (link::(text::string() (linktext::string())? reference::string()))+ ;
lexical ::= (lineContinuations::SimpleSection) | (whitespace::SimpleSection) | (tokens::SimpleSection) | (preprocessor::SimpleSection) | (literals::SimpleSection) | (lexical::SimpleSection) ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
front-list ::= (definitions::ListOfTerms) | (abbreviations::ListOfTerms) | (languageOverview::ListOfTerms) ;
--------------------slps::ldf-v9.0-xsd.bgf--------------------
SimpleTable ::= (header::TableRow)* (row::TableRow)+ ;
informative ::= (note::SimpleSection) | (example::SimpleSection) | (informative::SimpleSection) ;
document ::= titlePage::titlePage (placeholder::generated)* frontMatter::(front-simple-section+) (lists::(front-list+))? (lexicalPart::(lexical+))? (core::StructuredSection)+ (annex::StructuredSection)* ;
insideSimpleText ::= (empty::α) | (text::mixedType) | (table::SimpleTable) | (list::SimpleList) | (formula::string()) | (sample::string()) | production ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
StructuredSection ::= (id::string())? title::string() ((author::string())+)? ((placeholder::generated) | normative | informative | production | (relationship::ListOfInternalLinks) | (subtopic::StructuredSection))+ ;
SimpleSection ::= (id::string())? (title::string())? ((author::string())+)? content::SimpleText ;
status ::= (unknown::ε) | (draft::ε) | (committee draft::ε) | (recommendation::ε) | (international standard::ε) ;
ListOfTerms ::= (id::string())? (title::string())? ((author::string())+)? (term::(name::string() definition::SimpleText))+ ;
SimpleList ::= (item::string())+ ;
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
front-simple-section ::= (foreword::SimpleSection) | (designGoals::SimpleSection) | (scope::SimpleSection) | (conformance::SimpleSection) | (compliance::SimpleSection) | (compatibility::SimpleSection) | (notation::SimpleSection) | (normativeReferences::SimpleSection) | (documentStructure::SimpleSection) | (whatsnew::SimpleSection) | (clause::SimpleSection) | (field::SimpleSection) ;
TableRow ::= (cell::SimpleText)+ ;
normative ::= (purpose::SimpleSection) | (description::SimpleSection) | (location::SimpleSection) | (considerations::SimpleSection) | (defaults::SimpleSection) | (normative::SimpleSection) ;
titlePage ::= (body::body number::integer()) | ((author::string())+) topic::string() (version::string()) | (edition::string()) status::status date::string() ;
ListOfInternalLinks ::= (link::(text::string() (linktext::string())? reference::string()))+ ;
lexical ::= (lineContinuations::SimpleSection) | (whitespace::SimpleSection) | (tokens::SimpleSection) | (preprocessor::SimpleSection) | (literals::SimpleSection) | (lexical::SimpleSection) ;
front-list ::= (definitions::ListOfTerms) | (abbreviations::ListOfTerms) | (languageOverview::ListOfTerms) ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
--------------------slps::ldf-v9.1-xsd.bgf--------------------
SimpleTable ::= (header::TableRow)* (row::TableRow)+ ;
informative ::= (note::SimpleSection) | (example::SimpleSection) | (informative::SimpleSection) ;
document ::= titlePage::titlePage (placeholder::generated)* frontMatter::(front-simple-section+) (lists::(front-list+))? (lexicalPart::(lexical+))? (core::StructuredSection)+ (annex::StructuredSection)* ;
insideSimpleText ::= (empty::α) | (text::mixedType) | (table::SimpleTable) | (list::SimpleList) | (formula::string()) | (sample::string()) | production ;
runnableType ::= context::string() main::string() (argument::string())* yields::string() language::string() (version::string())? (id::string())? ;
StructuredSection ::= (id::string())? title::string() ((author::string())+)? ((placeholder::generated) | normative | informative | production | (relationship::ListOfInternalLinks) | (subtopic::StructuredSection))+ ;
SimpleSection ::= (id::string())? (title::string())? ((author::string())+)? content::SimpleText ;
status ::= (unknown::ε) | (draft::ε) | (committee draft::ε) | (recommendation::ε) | (international standard::ε) ;
ListOfTerms ::= (id::string())? (title::string())? ((author::string())+)? (term::(name::string() definition::SimpleText))+ ;
SimpleList ::= (item::mixedType)+ ;
generated ::= (index::ε) | (fullgrammar::ε) | (listoftables::ε) | (listofauthors::ε) | (listofcontents::ε) | (listofreferences::ε) ;
front-simple-section ::= (foreword::SimpleSection) | (designGoals::SimpleSection) | (scope::SimpleSection) | (conformance::SimpleSection) | (compliance::SimpleSection) | (compatibility::SimpleSection) | (notation::SimpleSection) | (normativeReferences::SimpleSection) | (documentStructure::SimpleSection) | (whatsnew::SimpleSection) | (clause::SimpleSection) | (field::SimpleSection) ;
TableRow ::= (cell::SimpleText)+ ;
normative ::= (purpose::SimpleSection) | (description::SimpleSection) | (location::SimpleSection) | (considerations::SimpleSection) | (defaults::SimpleSection) | (normative::SimpleSection) ;
titlePage ::= (body::body number::integer()) | ((author::string())+) topic::string() (version::string()) | (edition::string()) status::status date::string() ;
ListOfInternalLinks ::= (link::(text::string() (linktext::string())? reference::string()))+ ;
lexical ::= (lineContinuations::SimpleSection) | (whitespace::SimpleSection) | (tokens::SimpleSection) | (preprocessor::SimpleSection) | (literals::SimpleSection) | (lexical::SimpleSection) ;
front-list ::= (definitions::ListOfTerms) | (abbreviations::ListOfTerms) | (languageOverview::ListOfTerms) ;
body ::= (ansi::ε) | (ecma::ε) | (ieee::ε) | (iso::ε) | (iso/iet::ε) | (itu::ε) | (ietf::ε) | (iec::ε) | (oasis::ε) | (wsa::ε) | (w3c::ε) ;
--------------------slps::slps-cbgf-adt.bgf--------------------
CBGFCommand ::= (abridge_detour::(p::BGFProduction)) | (abstractize_concretize::(p::BGFProduction)) | (addH_removeH::(p::BGFProduction)) | (addV_removeV::(p::BGFProduction)) | (anonymize_deanonymize::(p::BGFProduction)) | (appear_disapper::(p::BGFProduction)) | (chain_unchain::(p::BGFProduction)) | (clone_equate::(x::string() y::string() w::XBGFScope)) | (concatT_splitT::(y::string() xs::(string()*) w::XBGFScope)) | (concretize_abstractize::(p::BGFProduction)) | (deanonymize_anonymize::(p::BGFProduction)) | (define_undefine::(ps::(BGFProduction*))) | (designate_unlabel::(p::BGFProduction)) | (detour_abridge::(p::BGFProduction)) | (deyaccify_yaccify::(ps::(BGFProduction*))) | (disappear_appear::(p::BGFProduction)) | (downgrade_upgrade::(p1::BGFProduction p2::BGFProduction)) | (eliminate_introduce::(ps::(BGFProduction*))) | (equate_clone::(x::string() y::string() w::XBGFScope)) | (extract_inline::(p::BGFProduction w::XBGFScope)) | (factor_factor::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (fold_unfold::(x::string() w::XBGFScope)) | (horizontal_vertical::(w::XBGFScope)) | (inject_project::(p::BGFProduction)) | (inline_extract::(p::BGFProduction w::XBGFScope)) | (introduce_eliminate::(ps::(BGFProduction*))) | (iterate_assoc::(p::BGFProduction)) | (assoc_iterate::(p::BGFProduction)) | (massage_massage::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (narrow_widen::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (permute_permute::(p1::BGFProduction p2::BGFProduction)) | (project_inject::(p::BGFProduction)) | (redefine_redefine::(ps1::(BGFProduction*) ps2::(BGFProduction*))) | (removeH_addH::(p::BGFProduction)) | (removeV_addV::(p::BGFProduction)) | (renameL_renameL::(x::string() y::string())) | (renameN_renameN::(x::string() y::string())) | (renameS_renameS::(x::string() y::string() w::XBGFScope)) | (renameT_renameT::(x::string() y::string())) | (replace_replace::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (reroot_reroot::(xs1::(string()*) xs2::(string()*))) | (splitN_unite::(x::string() ps::(BGFProduction*) w::XBGFScope)) | (splitT_concatT::(x::string() ys::(string()*) w::XBGFScope)) | (unchain_chain::(p::BGFProduction)) | (undefine_define::(ps::(BGFProduction*))) | (unfold_fold::(x::string() w::XBGFScope)) | (unite_splitN::(x::string() ps::(BGFProduction*) w::XBGFScope)) | (unlabel_designate::(p::BGFProduction)) | (upgrade_downgrade::(p1::BGFProduction p2::BGFProduction)) | (vertical_horizontal::(w::XBGFScope)) | (widen_narrow::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (yaccify_deyaccify::(ps::(BGFProduction*))) ;
--------------------slps::slps-cbgf-xsd.bgf--------------------
horizontal-vertical ::= nonterminal::nonterminal ;
rename ::= (label::(from::label to::label)) | (nonterminal::(from::nonterminal to::nonterminal)) | (selector::((in::label)? from::selector to::selector)) | (terminal::(from::terminal to::terminal)) ;
widen ::= expression expression (in::scope)? ;
unlabel ::= label::label ;
define ::= production+ tag::string() ;
splitT ::= terminal::terminal into::((terminal::terminal)+) (in::scope)? ;
equate-clone ::= align::(production+) with::nonterminal in::(scope+) ;
production ::= (label::label)? nonterminal::nonterminal expression ;
 production ::= (label::label)? nonterminal::nonterminal expression ;
replace ::= expression expression (in::scope)? tag::string() ;
deyaccify ::= nonterminal::nonterminal ;
value ::= (int::ε) | (string::ε) ;
 value ::= (int::ε) | (string::ε) ;
add-remove ::= (vertical::production) | (horizontal::production) ;
redefine ::= production+ tag::string() ;
split-unite ::= add::(production+) to::(production+) in::(scope+) ;
unite-split ::= add::(production+) to::(production+) in::(scope+) ;
rename-rename ::= (label::(from::label to::label)) | (nonterminal::(from::nonterminal to::nonterminal)) | (selector::((in::label)? from::selector to::selector)) | (terminal::(from::terminal to::terminal)) ;
widen-narrow ::= expression expression (in::scope)? ;
equate ::= align::nonterminal with::nonterminal ;
fold-unfold ::= nonterminal::nonterminal (in::scope)? ;
extract-inline ::= production (in::scope)? ;
horizontal ::= nonterminal::nonterminal ;
eliminate ::= nonterminal::nonterminal ;
unite ::= add::nonterminal to::nonterminal ;
add ::= (vertical::production) | (horizontal::production) ;
narrow ::= expression expression (in::scope)? ;
replace-replace ::= expression expression (in::scope)? tag::string() ;
vertical-horizontal ::= nonterminal::nonterminal ;
split ::= nonterminal::nonterminal production+ scope* ;
unfold ::= nonterminal::nonterminal (in::scope)? ;
project ::= production tag::string() ;
clone-equate ::= align::(production+) with::nonterminal in::(scope+) ;
strip ::= (label::label) | (allLabels::ε) | (selector::selector) | (allSelectors::ε) | (terminal::terminal) | (allTerminals::ε) ;
remove-add ::= (vertical::production) | (horizontal::production) ;
expression ::= (epsilon::ε) | (empty::ε) | (value::value) | (any::ε) | (terminal::terminal) | (nonterminal::nonterminal) | (selectable::(selector::selector expression)) | (marked::expression) | (sequence::(expression+)) | (choice::(expression+)) | (allof::(expression+)) | (not::expression) | (optional::expression) | (plus::expression) | (star::expression) | (seplistplus::(expression expression)) | (sepliststar::(expression expression)) ;
 expression ::= (epsilon::ε) | (empty::ε) | (value::value) | (any::ε) | (terminal::terminal) | (nonterminal::nonterminal) | (selectable::(selector::selector expression)) | (marked::expression) | (sequence::(expression+)) | (choice::(expression+)) | (allof::(expression+)) | (not::expression) | (optional::expression) | (plus::expression) | (star::expression) | (seplistplus::(expression expression)) | (sepliststar::(expression expression)) ;
reroot ::= (root::nonterminal)* ;
undefine ::= (nonterminal::nonterminal)+ tag::string() ;
scope ::= (label::label) | (nonterminal::nonterminal) ;
 scope ::= (label::label) | (nonterminal::nonterminal) ;
unfold-fold ::= nonterminal::nonterminal (in::scope)? ;
roots ::= (root::nonterminal)* ;
inject ::= production tag::string() ;
factor ::= expression expression (in::scope)? ;
reroot-reroot ::= from::roots to::roots ;
factor-factor ::= expression expression (in::scope)? ;
inline-extract ::= production (in::scope)? ;
massage ::= expression expression (in::scope)? ;
narrow-widen ::= expression expression (in::scope)? ;
massage-massage ::= expression expression (in::scope)? ;
remove ::= (vertical::production) | (horizontal::production) ;
fold ::= nonterminal::nonterminal (in::scope)? ;
extract ::= production (in::scope)? ;
--------------------slps::slps-edd.bgf--------------------
config ::= ((start-grammar-symbol::string()) | (end-grammar-symbol::string()) | (line-continuation-symbol::string()) | (tabulation-symbol::string()) | (start-label-symbol::string()) | (end-label-symbol::string()) | (defining-symbol::string()) | (multiple-defining-symbol::string()) | (terminator-symbol::string()) | (definition-separator-symbol::string()) | (concatenate-symbol::string()) | (start-comment-symbol::string()) | (end-comment-symbol::string()) | (start-group-symbol::string()) | (end-group-symbol::string()) | (start-option-symbol::string()) | (end-option-symbol::string()) | (start-terminal-symbol::string()) | (end-terminal-symbol::string()) | (start-nonterminal-symbol::string()) | (end-nonterminal-symbol::string()) | (start-seplist-star-symbol::string()) | (end-seplist-star-symbol::string()) | (start-seplist-plus-symbol::string()) | (end-seplist-plus-symbol::string()) | (start-repetition-star-symbol::string()) | (end-repetition-star-symbol::string()) | (start-repetition-plus-symbol::string()) | (end-repetition-plus-symbol::string()) | (postfix-option-symbol::string()) | (postfix-repetition-star-symbol::string()) | (postfix-repetition-plus-symbol::string()) | (nonterminals-may-start-with::string()) | (nonterminals-may-contain::string()) | (nonterminal-if-contains::string()) | (terminal-if-undefined::((except::string())*)) | (nonterminal-if-defined::((except::string())*)) | (decompose-symbols::((except::string())*)) | (terminal-if-uppercase::α) | (terminal-if-lowercase::α) | (terminal-if-mixedcase::α) | (terminal-if-camelcase::α) | (nonterminal-if-uppercase::α) | (nonterminal-if-lowercase::α) | (nonterminal-if-mixedcase::α) | (nonterminal-if-camelcase::α) | (glue-nonalphanumeric-terminals::α) | (break-tokens-at-whitespace::α) | (disregard-labels::α) | (consider-indentation::α) | (ignore::(((newline::α) | (space::α) | (same-indentation::α) | (lines-containing::string()))+)) | (mask::(token::string() (terminal::string()) | (epsilon::α))))* ;
--------------------slps::slps-lcf.bgf--------------------
derived ::= from::string() using::string() ;
phase ::= (step::((perform-transformation::string()) | automated-transformation))+ ;
source ::= name::string() derived? source-grammar source-tree? test-set::(xstring*) ;
tools ::= transformer::tool comparator::tool (validator::tool)? generator* ;
xstring ::= ((expand::string()) | string())* ;
tool ::= grammar::xstring (tree::xstring)? ;
automated-transformation ::= method::string() result::string() ;
shortcut ::= name::string() expansion::xstring ;
source-grammar ::= extraction::xstring (parsing::xstring)? (evaluation::xstring)? ;
generator ::= name::string() command::xstring ;
branch ::= input::string() (preparation::phase)? (nominal-matching::phase)? (normalizing::phase)? (structural-matching::phase)? ((extension::phase) | (correction::phase) | (relaxation::phase))* ;
target ::= name::string() branch+ ;
source-tree ::= extraction::xstring (evaluation::xstring)? ;
testset ::= name::string() command::xstring ;
--------------------slps::slps-xbgf-adt.bgf--------------------
XBGFScope ::= (globally::ε) | (nowhere::ε) | (inlabel::(l::string())) | (notinlabel::(l::string())) | (innt::(x::string())) | (notinnt::(x::string())) | (comboscope::(w1::XBGFScope w2::XBGFScope)) ;
XBGFCommand ::= (abridge::(p::BGFProduction)) | (abstractize::(p::BGFProduction)) | (addH::(p::BGFProduction)) | (addV::(p::BGFProduction)) | (addC::(p::BGFProduction)) | (anonymize::(p::BGFProduction)) | (appear::(p::BGFProduction)) | (bypass::ε) | (chain::(p::BGFProduction)) | (clone::(x::string() y::string() w::XBGFScope)) | (concatT::(xs::(string()*) y::string() w::XBGFScope)) | (concretize::(p::BGFProduction)) | (deanonymize::(p::BGFProduction)) | (define::(ps::(BGFProduction*))) | (designate::(p::BGFProduction)) | (detour::(p::BGFProduction)) | (deyaccify::(x::string())) | (disappear::(p::BGFProduction)) | (distribute::(w::XBGFScope)) | (downgrade::(p1::BGFProduction p2::BGFProduction)) | (eliminate::(x::string())) | (equate::(x::string() y::string())) | (extract::(p::BGFProduction w::XBGFScope)) | (factor::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (fold::(x::string() w::XBGFScope)) | (horizontal::(w::XBGFScope)) | (importG::(ps::(BGFProduction*))) | (inject::(p::BGFProduction)) | (inline::(x::string())) | (introduce::(ps::(BGFProduction*))) | (iterate::(p::BGFProduction)) | (lassoc::(p::BGFProduction)) | (massage::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (narrow::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (permute::(p::BGFProduction)) | (project::(p::BGFProduction)) | (rassoc::(p::BGFProduction)) | (redefine::(ps::(BGFProduction*))) | (removeH::(p::BGFProduction)) | (removeV::(p::BGFProduction)) | (renameL::(x::string() y::string())) | (renameN::(x::string() y::string())) | (renameS::(x::string() y::string() w::XBGFScope)) | (renameT::(x::string() y::string())) | (replace::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (reroot::(xs::(string()*))) | (splitN::(x::string() ps::(BGFProduction*) w::XBGFScope)) | (splitT::(x::string() ys::(string()*) w::XBGFScope)) | (unchain::(p::BGFProduction)) | (undefine::(xs::(string()*))) | (unfold::(x::string() w::XBGFScope)) | (unite::(x::string() y::string())) | (unlabel::(x::string())) | (upgrade::(p1::BGFProduction p2::BGFProduction)) | (vertical::(w::XBGFScope)) | (widen::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (yaccify::(ps::(BGFProduction*))) | (atomic::(steps::(XBGFCommand*))) | (strip::(a::string())) ;
--------------------slps::slps-xbgf-xsd.bgf--------------------
rename ::= (label::(from::label to::label)) | (nonterminal::(from::nonterminal to::nonterminal)) | (selector::((in::label)? from::selector to::selector)) | (terminal::(from::terminal to::terminal)) ;
unlabel ::= label::label ;
define ::= production+ tag::string() ;
narrow ::= expression expression (in::scope)? ;
widen ::= expression expression (in::scope)? ;
split ::= nonterminal::nonterminal production+ scope* ;
splitT ::= terminal::terminal into::((terminal::terminal)+) (in::scope)? ;
unfold ::= nonterminal::nonterminal (in::scope)? ;
project ::= production tag::string() ;
production ::= (label::label)? nonterminal::nonterminal expression ;
strip ::= (label::label) | (allLabels::ε) | (selector::selector) | (allSelectors::ε) | (terminal::terminal) | (allTerminals::ε) ;
expression ::= (epsilon::ε) | (empty::ε) | (value::value) | (any::ε) | (terminal::terminal) | (nonterminal::nonterminal) | (selectable::(selector::selector expression)) | (marked::expression) | (sequence::(expression+)) | (choice::(expression+)) | (allof::(expression+)) | (not::expression) | (optional::expression) | (plus::expression) | (star::expression) | (seplistplus::(expression expression)) | (sepliststar::(expression expression)) ;
reroot ::= (root::nonterminal)* ;
replace ::= expression expression (in::scope)? tag::string() ;
undefine ::= (nonterminal::nonterminal)+ tag::string() ;
scope ::= (label::label) | (nonterminal::nonterminal) ;
deyaccify ::= nonterminal::nonterminal ;
inject ::= production tag::string() ;
value ::= (int::ε) | (string::ε) ;
factor ::= expression expression (in::scope)? ;
redefine ::= production+ tag::string() ;
massage ::= expression expression (in::scope)? ;
equate ::= align::nonterminal with::nonterminal ;
remove ::= (vertical::production) | (horizontal::production) ;
horizontal ::= nonterminal::nonterminal ;
eliminate ::= nonterminal::nonterminal ;
add ::= (vertical::production) | (horizontal::production) ;
unite ::= add::nonterminal to::nonterminal ;
extract ::= production (in::scope)? ;
fold ::= nonterminal::nonterminal (in::scope)? ;
--------------------slps::slps-xedd.bgf--------------------
introduce ::= metasymbol::confixMetasymbols start::string() end::string() ;
rename ::= metasymbol::metasymbols from::string() to::string() ;
metasymbols ::= (terminator::ε) | (defining::ε) | (definition-separator::ε) | (group::ε) | (seplist-plus::ε) | (seplist-star::ε) ;
confixMetasymbols ::= (group::ε) | (seplist-plus::ε) | (seplist-star::ε) ;
eliminate ::= metasymbol::metasymbols ;
--------------------slps::slps-xldf.bgf--------------------
combine ::= section::string() with::string() ;
rename ::= (label::(from::label to::label)) | (nonterminal::(from::nonterminal to::nonterminal)) | (selector::((in::label)? from::selector to::selector)) | (terminal::(from::terminal to::terminal)) ;
unlabel ::= label::label ;
define ::= production+ tag::string() ;
widen ::= expression expression (in::scope)? ;
sectionRole ::= (frontMatter::ε) | (backMatter::ε) | (synopsis::ε) | (description::ε) | (syntax::ε) | (constraints::ε) | (relationship::ε) | (semantics::ε) | (default::ε) | (rationale::ε) | (example::ε) | (update::ε) | (section::ε) ;
splitT ::= terminal::terminal into::((terminal::terminal)+) (in::scope)? ;
production ::= (label::label)? nonterminal::nonterminal expression ;
 production ::= (label::label)? nonterminal::nonterminal expression ;
insert ::= relative content::simpleText ;
replace ::= expression expression (in::scope)? tag::string() ;
deyaccify ::= nonterminal::nonterminal ;
value ::= (int::ε) | (string::ε) ;
 value ::= (int::ε) | (string::ε) ;
drop ::= section::string() ;
importSample ::= target::string() file::string() (prettyprinter::string())? ;
redefine ::= production+ tag::string() ;
equate ::= align::nonterminal with::nonterminal ;
transformDocument ::= file::string() ;
addSubsection ::= topSection | (normative | informative to::string()) ;
addFigure ::= figure::simpleFigure to::string() ;
horizontal ::= nonterminal::nonterminal ;
eliminate ::= nonterminal::nonterminal ;
unite ::= add::nonterminal to::nonterminal ;
add ::= (vertical::production) | (horizontal::production) ;
narrow ::= expression expression (in::scope)? ;
transformGrammar ::= target::string() transformation+ (context::string())* ;
split ::= nonterminal::nonterminal production+ scope* ;
unfold ::= nonterminal::nonterminal (in::scope)? ;
append ::= where::string() content::simpleText ;
project ::= production tag::string() ;
strip ::= (label::label) | (allLabels::ε) | (selector::selector) | (allSelectors::ε) | (terminal::terminal) | (allTerminals::ε) ;
expression ::= (epsilon::ε) | (empty::ε) | (value::value) | (any::ε) | (terminal::terminal) | (nonterminal::nonterminal) | (selectable::(selector::selector expression)) | (marked::expression) | (sequence::(expression+)) | (choice::(expression+)) | (allof::(expression+)) | (not::expression) | (optional::expression) | (plus::expression) | (star::expression) | (seplistplus::(expression expression)) | (sepliststar::(expression expression)) ;
 expression ::= (epsilon::ε) | (empty::ε) | (value::value) | (any::ε) | (terminal::terminal) | (nonterminal::nonterminal) | (selectable::(selector::selector expression)) | (marked::expression) | (sequence::(expression+)) | (choice::(expression+)) | (allof::(expression+)) | (not::expression) | (optional::expression) | (plus::expression) | (star::expression) | (seplistplus::(expression expression)) | (sepliststar::(expression expression)) ;
hyperlinkify ::= goal::string() uri::string() ;
reroot ::= (root::nonterminal)* ;
undefine ::= (nonterminal::nonterminal)+ tag::string() ;
scope ::= (label::label) | (nonterminal::nonterminal) ;
inject ::= production tag::string() ;
factor ::= expression expression (in::scope)? ;
relative ::= (before::((id::string()) | simpleTextElement)) | (after::((id::string()) | simpleTextElement)) | (to::string()) ;
massage ::= expression expression (in::scope)? ;
place ::= section::string() inside::string() ;
changeRole ::= scope::string() from::sectionRole to::sectionRole ;
extractSubsection ::= from::string() content::simpleText title::string() id::string() (to::string())? (role::sectionRole)? ;
retitle ::= from::((id::string()) | (title::string())) to::string() ;
remove ::= (vertical::production) | (horizontal::production) ;
addSection ::= frontList | lexicalSection | (placeholder::generated) | (core::structuredSection) | (annex::structuredSection) ;
importGrammar ::= target::string() file::string() ;
extract ::= production (in::scope)? ;
fold ::= nonterminal::nonterminal (in::scope)? ;
removeSection ::= id::string() (from::string())? ;
--------------------slps::slps-xoutcome.bgf--------------------
XBGFOutcome ::= (ok::ε) | (problem::(msg::string())) | (problemXBGF::(msg::string() xbgf::XBGFCommand)) | (problemProd::(msg::string() p::BGFProduction)) | (problemProd2::(msg::string() p1::BGFProduction p2::BGFProduction)) | (problemPinProds::(msg::string() p::BGFProduction ps::(BGFProduction*))) | (problemProds::(msg::string() ps::(BGFProduction*))) | (problemProds2::(msg::string() ps1::(BGFProduction*) ps2::(BGFProduction*))) | (problemExpr::(msg::string() e::BGFExpression)) | (problemExpr2::(msg::string() e1::BGFExpression e2::BGFExpression)) | (problemStr::(msg::string() x::string())) | (problemStr2::(msg::string() x::string() y::string())) | (problemStrs::(msg::string() xs::(string()*))) | (problemScope::(msg::string() w::XBGFScope)) ;
XBGFResult ::= r::XBGFOutcome g::BGFGrammar ;
--------------------slps::xbgf-adt.bgf--------------------
XBGFScope ::= (globally::ε) | (nowhere::ε) | (inlabel::(l::string())) | (notinlabel::(l::string())) | (innt::(x::string())) | (notinnt::(x::string())) | (comboscope::(w1::XBGFScope w2::XBGFScope)) ;
XBGFCommand ::= (abridge::(p::BGFProduction)) | (abstractize::(p::BGFProduction)) | (addH::(p::BGFProduction)) | (addV::(p::BGFProduction)) | (addC::(p::BGFProduction)) | (anonymize::(p::BGFProduction)) | (appear::(p::BGFProduction)) | (bypass::ε) | (chain::(p::BGFProduction)) | (clone::(x::string() y::string() w::XBGFScope)) | (concatT::(xs::(string()*) y::string() w::XBGFScope)) | (concretize::(p::BGFProduction)) | (deanonymize::(p::BGFProduction)) | (define::(ps::(BGFProduction*))) | (designate::(p::BGFProduction)) | (detour::(p::BGFProduction)) | (deyaccify::(x::string())) | (disappear::(p::BGFProduction)) | (distribute::(w::XBGFScope)) | (downgrade::(p1::BGFProduction p2::BGFProduction)) | (eliminate::(x::string())) | (equate::(x::string() y::string())) | (extract::(p::BGFProduction w::XBGFScope)) | (factor::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (fold::(x::string() w::XBGFScope)) | (horizontal::(w::XBGFScope)) | (importG::(ps::(BGFProduction*))) | (inject::(p::BGFProduction)) | (inline::(x::string())) | (introduce::(ps::(BGFProduction*))) | (iterate::(p::BGFProduction)) | (lassoc::(p::BGFProduction)) | (massage::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (narrow::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (permute::(p::BGFProduction)) | (project::(p::BGFProduction)) | (rassoc::(p::BGFProduction)) | (redefine::(ps::(BGFProduction*))) | (removeH::(p::BGFProduction)) | (removeV::(p::BGFProduction)) | (renameL::(x::string() y::string())) | (renameN::(x::string() y::string())) | (renameS::(x::string() y::string() w::XBGFScope)) | (renameT::(x::string() y::string())) | (replace::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (reroot::(xs::(string()*))) | (splitN::(x::string() ps::(BGFProduction*) w::XBGFScope)) | (splitT::(x::string() ys::(string()*) w::XBGFScope)) | (unchain::(p::BGFProduction)) | (undefine::(xs::(string()*))) | (unfold::(x::string() w::XBGFScope)) | (unite::(x::string() y::string())) | (unlabel::(x::string())) | (upgrade::(p1::BGFProduction p2::BGFProduction)) | (vertical::(w::XBGFScope)) | (widen::(e1::BGFExpression e2::BGFExpression w::XBGFScope)) | (yaccify::(ps::(BGFProduction*))) | (atomic::(steps::(XBGFCommand*))) | (strip::(a::string())) ;
--------------------slps::xbgf-xsd.bgf--------------------
rename ::= (label::(from::label to::label)) | (nonterminal::(from::nonterminal to::nonterminal)) | (selector::((in::label)? from::selector to::selector)) | (terminal::(from::terminal to::terminal)) ;
unlabel ::= label::label ;
define ::= production+ tag::string() ;
narrow ::= expression expression (in::scope)? ;
widen ::= expression expression (in::scope)? ;
split ::= nonterminal::nonterminal production+ scope* ;
splitT ::= terminal::terminal into::((terminal::terminal)+) (in::scope)? ;
unfold ::= nonterminal::nonterminal (in::scope)? ;
project ::= production tag::string() ;
production ::= (label::label)? nonterminal::nonterminal expression ;
strip ::= (label::label) | (allLabels::ε) | (selector::selector) | (allSelectors::ε) | (terminal::terminal) | (allTerminals::ε) ;
expression ::= (epsilon::ε) | (empty::ε) | (value::value) | (any::ε) | (terminal::terminal) | (nonterminal::nonterminal) | (selectable::(selector::selector expression)) | (marked::expression) | (sequence::(expression+)) | (choice::(expression+)) | (allof::(expression+)) | (not::expression) | (optional::expression) | (plus::expression) | (star::expression) | (seplistplus::(expression expression)) | (sepliststar::(expression expression)) ;
reroot ::= (root::nonterminal)* ;
replace ::= expression expression (in::scope)? tag::string() ;
undefine ::= (nonterminal::nonterminal)+ tag::string() ;
scope ::= (label::label) | (nonterminal::nonterminal) ;
deyaccify ::= nonterminal::nonterminal ;
inject ::= production tag::string() ;
value ::= (int::ε) | (string::ε) ;
factor ::= expression expression (in::scope)? ;
redefine ::= production+ tag::string() ;
massage ::= expression expression (in::scope)? ;
equate ::= align::nonterminal with::nonterminal ;
remove ::= (vertical::production) | (horizontal::production) ;
horizontal ::= nonterminal::nonterminal ;
eliminate ::= nonterminal::nonterminal ;
add ::= (vertical::production) | (horizontal::production) ;
unite ::= add::nonterminal to::nonterminal ;
extract ::= production (in::scope)? ;
fold ::= nonterminal::nonterminal (in::scope)? ;
--------------------slps::bgf-v4.1-adt.bgf--------------------
BGFProduction ::= production::(label::string() lhs::string() rhs::BGFExpression) ;
BGFExpression ::= (epsilon::ε) | (empty::ε) | (val::(v::BGFValue)) | (anything::ε) | (terminal::(t::string())) | (nonterminal::(t::string())) | (selectable::(selector::string() expr::BGFExpression)) | (sequence::(exprs::(BGFExpression*))) | (choice::(exprs::(BGFExpression*))) | (marked::(expr::BGFExpression)) | (optional::(expr::BGFExpression)) | (plus::(expr::BGFExpression)) | (star::(expr::BGFExpression)) | (starsepplus::(expr::BGFExpression sep::BGFExpression)) | (starsepstar::(expr::BGFExpression sep::BGFExpression)) ;
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::bgf-v4.3-adt.bgf--------------------
BGFProduction ::= production::(label::string() lhs::string() rhs::BGFExpression) ;
BGFExpression ::= (epsilon::ε) | (empty::ε) | (val::(v::BGFValue)) | (anything::ε) | (terminal::(t::string())) | (nonterminal::(t::string())) | (selectable::(selector::string() expr::BGFExpression)) | (sequence::(exprs::BGFExprList)) | (choice::(exprs::BGFExprList)) | (marked::(expr::BGFExpression)) | (optional::(expr::BGFExpression)) | (plus::(expr::BGFExpression)) | (star::(expr::BGFExpression)) | (seplistplus::(expr::BGFExpression sep::BGFExpression)) | (sepliststar::(expr::BGFExpression sep::BGFExpression)) ;
BGFGrammar ::= grammar::(roots::(string()*) prods::BGFProdList) ;
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::bgf-v5.3-adt.bgf--------------------
BGFProduction ::= production::(label::string() lhs::string() rhs::BGFExpression) ;
BGFExpression ::= (epsilon::ε) | (empty::ε) | (val::(v::BGFValue)) | (anything::ε) | (terminal::(t::string())) | (nonterminal::(t::string())) | (selectable::(selector::string() expr::BGFExpression)) | (sequence::(exprs::BGFExprList)) | (choice::(exprs::BGFExprList)) | (allof::(exprs::BGFExprList)) | (marked::(expr::BGFExpression)) | (optional::(expr::BGFExpression)) | (not::(expr::BGFExpression)) | (plus::(expr::BGFExpression)) | (star::(expr::BGFExpression)) | (seplistplus::(expr::BGFExpression sep::BGFExpression)) | (sepliststar::(expr::BGFExpression sep::BGFExpression)) ;
BGFGrammar ::= grammar::(roots::(string()*) prods::BGFProdList) ;
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::bgf-v5.4-adt.bgf--------------------
BGFProduction ::= production::(label::string() lhs::string() rhs::BGFExpression) ;
BGFExpression ::= (epsilon::ε) | (empty::ε) | (val::(v::BGFValue)) | (anything::ε) | (terminal::(t::string())) | (nonterminal::(t::string())) | (selectable::(selector::string() expr::BGFExpression)) | (sequence::(exprs::BGFExprList)) | (choice::(exprs::BGFExprList)) | (allof::(exprs::BGFExprList)) | (marked::(expr::BGFExpression)) | (optional::(expr::BGFExpression)) | (not::(expr::BGFExpression)) | (plus::(expr::BGFExpression)) | (star::(expr::BGFExpression)) | (seplistplus::(expr::BGFExpression sep::BGFExpression)) | (sepliststar::(expr::BGFExpression sep::BGFExpression)) ;
BGFGrammar ::= grammar::(roots::(string()*) prods::BGFProdList) ;
SGrammar ::= roots::(string()*) prods::((string() BGFProdSet)*) ;
BGFValue ::= (string::ε) | (integer::ε) ;
--------------------slps::xbgf-xoutcome.bgf--------------------
XBGFOutcome ::= (ok::ε) | (problem::(msg::string())) | (problemXBGF::(msg::string() xbgf::XBGFCommand)) | (problemProd::(msg::string() p::BGFProduction)) | (problemProd2::(msg::string() p1::BGFProduction p2::BGFProduction)) | (problemPinProds::(msg::string() p::BGFProduction ps::(BGFProduction*))) | (problemProds::(msg::string() ps::(BGFProduction*))) | (problemProds2::(msg::string() ps1::(BGFProduction*) ps2::(BGFProduction*))) | (problemExpr::(msg::string() e::BGFExpression)) | (problemExpr2::(msg::string() e1::BGFExpression e2::BGFExpression)) | (problemStr::(msg::string() x::string())) | (problemStr2::(msg::string() x::string() y::string())) | (problemStrs::(msg::string() xs::(string()*))) | (problemScope::(msg::string() w::XBGFScope)) ;
XBGFResult ::= r::XBGFOutcome g::BGFGrammar ;
--------------------develop::ant.bgf--------------------
PropertyValue ::= value::String ;
Jar ::= jarfile::String basedir::String compress::String encoding::String manifest::String ;
Excludes ::= name::String ifCondition::String unless::String ;
Project ::= name::String basedir::String description::String default::Target path::Path (properties::Property)+ (taskdef::TaskDef)+ (targets::Target)+ ;
PropertyEnv ::= environment::String ;
FiltersFile ::= file::String ;
PathElement ::= path::String location::String ;
Javadoc ::= sourcepath::String destdir::String packagenames::String defaultexcludes::String author::String version::String use::String windowtitle::String ;
Target ::= name::String description::String unless::String ifCondition::String (depends::Target)+ (tasks::Task)+ ;
Exec ::= executable::String dir::String ;
Tstamp ::= (format::FormatTstamp)+ ;
Includes ::= name::String ifCondition::String unless::String ;
FilterSet ::= starttoken::String endtoken::String (filter::Filter)+ (filtersfile::FiltersFile)+ ;
FileSet ::= dir::String (patternset::PatternSet)+ (include::Includes)+ (exclude::Excludes)+ ;
NewTask ::= taskName::TaskDef (attributes::Attribut)+ ;
Javac ::= srcdir::String destdir::String debug::String fork::String optimize::String deprecation::String (inExcludes::InExcludes)+ classPath::ClassPath ;
Mapper ::= type::String classname::String classpath::String classpathref::String from::String to::String ;
TaskDef ::= name::String classname::String ;
ClassPath ::= refid::String (pathElement::PathElement)+ (fileset::FileSet)+ ;
FileList ::= dir::String files::String ;
Filter ::= token::String value::String ;
Copy ::= file::String presservelastmodified::String tofile::String todir::String overwrite::String filtering::String flatten::String includeEmptyDirs::String fileset::FileSet filterset::FilterSet mapper::Mapper ;
ExcludesFile ::= name::String ifCondition::String unless::String ;
PatternSet ::= (inexcludes::InExcludes)+ ;
PropertyFile ::= file::String ;
Mkdir ::= dir::String ;
Delete ::= file::String dir::String verbose::String quiet::String failonerror::String includeEmptyDirs::String includes::String includesfile::String excludes::String excludesfile::String defaultexcludes::String ;
PropertyLocation ::= location::String ;
Attribut ::= name::String value::String ;
IncludesFile ::= name::String ifCondition::String unless::String ;
FormatTstamp ::= property::String pattern::String offset::String unit::String locale::String ;
Echo ::= message::String file::String append::String ;
Path ::= id::String refid::String path::Path (pathElement::PathElement)+ (fileset::FileSet)+ ;
Java ::= classname::String jar::String fork::String classPath::ClassPath ;
--------------------develop::java-project.bgf--------------------
Type ::= (nestedType::Type)+ (ownedSuperType::Type)+ elementName::String member_kind::MEMBER_KIND (methods::Method)+ (fields::Field)+ ;
MEMBER_KIND ::= (class::ε) | (enum::ε) | (interface::ε) | (Annotation::ε) ;
CompilationUnit ::= (importDeclaration::ImportDeclaration)+ (ownedType::Type)+ declaration::PackageDeclaration ;
JavaProject ::= (ownedPackageFragment::PackageFragment)+ ;
PackageFragment ::= (ownedCompilationUnit::CompilationUnit)+ ;
ImportDeclaration ::= name::String ;
PackageDeclaration ::= name::String ;
Method ::= returnType::String (parametersName::String)+ (parametersType::String)+ ;
--------------------develop::make.bgf--------------------
Comment ::= text::String ;
Macro ::= value::String ;
Rule ::= (dependencies::Dependency)+ (shellLines::ShellLine)+ ;
Makefile ::= name::String comment::Comment (elements::Element)+ ;
ShellLine ::= command::String display::Boolean ruleShellLine::Rule ;
FileDep ::= name::String ;
RuleDep ::= ruledep::Rule ;
--------------------develop::bugzilla.bgf--------------------
PriorityType ::= (pt_null::ε) | (pt_P1::ε) | (pt_P2::ε) | (pt_P3::ε) | (pt_P4::ε) | (pt_P5::ε) ;
LongDesc ::= isPrivate::Boolean who::String bug_when::String thetext::String ;
StatusType ::= (st_null::ε) | (st_UNCONFIRMED::ε) | (st_NEW::ε) | (st_ASSIGNED::ε) | (st_REOPENED::ε) | (st_RESOLVED::ε) | (st_VERIFIED::ε) | (st_CLOSED::ε) ;
Keywords ::= value::String ;
OperatingSystemType ::= (ost_null::ε) | (ost_all::ε) | (ost_Windows 3.1::ε) | (ost_Windows 95::ε) | (ost_Windows 98::ε) | (ost_Windows ME::ε) | (ost_Windows 2000::ε) | (ost_Windows NT::ε) | (ost_Windows XP::ε) | (ost_Windows Vista::ε) | (ost_Windows Server 2003::ε) | (ost_MacSystem 7::ε) | (ost_MacSystem 7.5::ε) | (ost_MacSystem 7.6.1::ε) | (ost_MacSystem 8.0::ε) | (ost_MacSystem 8.5::ε) | (ost_MacSystem 8.6::ε) | (ost_MacSystem 9.x::ε) | (ost_Mac OS X 10.0::ε) | (ost_Mac OS X 10.1::ε) | (ost_Mac OS X 10.2::ε) | (ost_Mac OS X 10.3::ε) | (ost_Linux::ε) | (ost_BDS/OS::ε) | (ost_FreeBSD::ε) | (ost_NetBSD::ε) | (ost_OpenBSD::ε) | (ost_AIX::ε) | (ost_BeOS::ε) | (ost_HP-UX::ε) | (ost_IRIX::ε) | (ost_Neutrino::ε) | (ost_OpenVMS::ε) | (ost_OS/2::ε) | (ost_OSF/1::ε) | (ost_Solaris::ε) | (ost_SunOS::ε) | (ost_other::ε) ;
SeverityType ::= (st_null::ε) | (st_blocker::ε) | (st_critical::ε) | (st_major::ε) | (st_normal::ε) | (st_minor::ε) | (st_trivial::ε) | (st_enhancement::ε) ;
Blocks ::= value::String ;
Dependson ::= value::String ;
ResolutionType ::= (rt_null::ε) | (rt_FIXED::ε) | (rt_INVALID::ε) | (rt_WONTFIX::ε) | (rt_LATER::ε) | (rt_REMIND::ε) | (rt_DUPLICATE::ε) | (rt_WORKSFORME::ε) | (rt_MOVED::ε) ;
Bug ::= bug_bugzillaRoot::BugzillaRoot error::ErrorType bug_id::String exporter::String urlbase::String bug_status::StatusType resolution::ResolutionType product::String priority::PriorityType version::String rep_platform::ReportedPlatformType assigned_to::String delta_ts::String component::String reporter::String target_milestone::String bug_severity::SeverityType creation_ts::String qa_contact::String status_whiteboard::String op_sys::OperatingSystemType bug_file_loc::String short_desc::String (keywords::Keywords)+ (dependson::Dependson)+ (blocks::Blocks)+ (cc::Cc)+ (long_desc::LongDesc)+ (attachment::Attachment)+ ;
Attachment ::= isObsolete::Boolean isPatch::Boolean isPrivate::Boolean id::String date::String desc::String type::String data::String ;
ErrorType ::= (et_null::ε) | (et_NotFound::ε) | (et_NotPermitted::ε) | (et_InvalidBugId::ε) ;
Cc ::= value::String ;
BugzillaRoot ::= version::String urlbase::String maintainer::String exporter::String (bugs::Bug)+ ;
ReportedPlatformType ::= (rpt_null::ε) | (rpt_all::ε) | (rpt_DEC::ε) | (rpt_HP::ε) | (rpt_Macintosh::ε) | (rpt_PC::ε) | (rpt_SGI::ε) | (rpt_Sun::ε) | (rpt_other::ε) ;
--------------------pico::rascal.bgf--------------------
Statement ::= [cond] "if" cond::Expression "then" thenPart::({Statement ";"}*) "else" elsePart::({Statement ";"}*) "fi" ;
 Statement ::= [assign] var::Id ":=" val::Expression ;
 Statement ::= [cond] "if" cond::Expression "then" thenPart::({Statement ";"}*) "fi" ;
 Statement ::= [loop] "while" cond::Expression "do" body::({Statement ";"}*) "od" ;
Declarations ::= "declare" decls::({IdType ","}*) ";" ;
Expression ::= "(" e::Expression ")" ;
 Expression ::= [natcon] natcon::Natural ;
 Expression ::= [id] name::Id ;
 Expression ::= [strcon] string::String ;
 Expression ::= [concat] lhs::Expression "||" rhs::Expression ;
 Expression ::= [add] lhs::Expression "+" rhs::Expression ;
 Expression ::= [min] lhs::Expression "-" rhs::Expression ;
IdType ::= [idtype] id::Id ":" t::Type ;
Program ::= [program] "begin" decls::Declarations body::({Statement ";"}*) "end" ;
--------------------saf::abstract.bgf--------------------
Fighter ::= fighter::(name::string() specs::(Spec*)) ;
Spec ::= (attribute::(name::string() strength::integer())) | (behavior::(cond::Cond move::Action fight::Action)) ;
Action ::= (action::(name::string())) | (choose::(actions::(string()*))) ;
Cond ::= (const::(name::string())) | (and::(lhs::Cond rhs::Cond)) | (or::(lhs::Cond rhs::Cond)) ;
--------------------saf::concrete.bgf--------------------
Fighter ::= [fighter] name::Id "{" specs::(Spec*) "}" ;
Spec ::= [behavior] cond::Cond "[" move::Action fight::Action "]" ;
 Spec ::= [attribute] name::Id "=" strength::Number ;
Action ::= [action] Id ;
 Action ::= [choose] "choose" "(" actions::(Id*) ")" ;
Cond ::= [and] lhs::Cond "and" rhs::Cond ;
 Cond ::= [const] Id ;
 Cond ::= [or] lhs::Cond "or" rhs::Cond ;
