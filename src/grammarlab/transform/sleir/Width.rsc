@contributor{Vadim Zaytsev - vadim@grammarware.net - UvA}
@contributor{Generated by meta::Mutations, do not edit manually!}
@doc{Contains 7 mutations intentionally generalised from narrow-/widen-equivalence.}
module grammarlab::transform::sleir::Width

import grammarlab::language::Grammar;
import grammarlab::language::SLEIR;

// SLEIR:NarrowStar2Plus
@doc{narrow ⊢ NarrowStar2Plus, Type III, page 9}
public GGrammar mutate(NarrowStar2Plus(), GGrammar g)
{
	g.P = visit(g.P){case star(e) => plus(e)};
	return g;
}
// SLEIR:WidenPlus2Star
@doc{widen ⊢ WidenPlus2Star, Type III, page 9}
public GGrammar mutate(WidenPlus2Star(), GGrammar g)
{
	g.P = visit(g.P){case plus(e) => star(e)};
	return g;
}
// SLEIR:NarrowStar2Opt
@doc{narrow ⊢ NarrowStar2Opt, Type III, page 9}
public GGrammar mutate(NarrowStar2Opt(), GGrammar g)
{
	g.P = visit(g.P){case star(e) => optional(e)};
	return g;
}
// SLEIR:WidenOpt2Star
@doc{widen ⊢ WidenOpt2Star, Type III, page 9}
public GGrammar mutate(WidenOpt2Star(), GGrammar g)
{
	g.P = visit(g.P){case optional(e) => star(e)};
	return g;
}
// SLEIR:NarrowStar2X
@doc{narrow ⊢ NarrowStar2X, Type III, page 9}
public GGrammar mutate(NarrowStar2X(), GGrammar g)
{
	g.P = visit(g.P){case star(e) => e};
	return g;
}
// SLEIR:NarrowPlus2X
@doc{narrow ⊢ NarrowPlus2X, Type III, page 9}
public GGrammar mutate(NarrowPlus2X(), GGrammar g)
{
	g.P = visit(g.P){case plus(e) => e};
	return g;
}
// SLEIR:NarrowOpt2X
@doc{narrow ⊢ NarrowOpt2X, Type III, page 9}
public GGrammar mutate(NarrowOpt2X(), GGrammar g)
{
	g.P = visit(g.P){case optional(e) => e};
	return g;
}